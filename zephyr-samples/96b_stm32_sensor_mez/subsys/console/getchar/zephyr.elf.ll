; ModuleID = 'build/96b_stm32_sensor_mez/getchar/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.tty_serial = type { %struct.device*, %struct.k_sem, i8*, i32, i16, i16, i32, %struct.k_sem, i8*, i32, i16, i16, i32 }
%struct.k_sem = type { %union.anon, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.k_spinlock = type {}
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232892 to i8*), void (i8*)* inttoptr (i32 134230387 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232892 to i8*), void (i8*)* inttoptr (i32 134230367 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232892 to i8*), void (i8*)* inttoptr (i32 134230357 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232892 to i8*), void (i8*)* inttoptr (i32 134230457 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232892 to i8*), void (i8*)* inttoptr (i32 134230447 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232892 to i8*), void (i8*)* inttoptr (i32 134230437 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232892 to i8*), void (i8*)* inttoptr (i32 134230427 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232892 to i8*), void (i8*)* inttoptr (i32 134230417 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232892 to i8*), void (i8*)* inttoptr (i32 134230407 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233180 to i8*), void (i8*)* inttoptr (i32 134231737 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233156 to i8*), void (i8*)* inttoptr (i32 134231737 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233132 to i8*), void (i8*)* inttoptr (i32 134231737 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232892 to i8*), void (i8*)* inttoptr (i32 134230397 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232892 to i8*), void (i8*)* inttoptr (i32 134230377 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233108 to i8*), void (i8*)* inttoptr (i32 134231737 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [56 x i8] c"Start typing characters to see their hex codes printed\0A\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"char: [0x%x] %c\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [48 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_3.__isr_uart_stm32_isr_irq_3 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@console_serial = internal global %struct.tty_serial zeroinitializer, align 4, !dbg !195
@console_txbuf = internal global [16 x i8] zeroinitializer, align 1, !dbg !292
@console_rxbuf = internal global [16 x i8] zeroinitializer, align 1, !dbg !286
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !339
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !347
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !488
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !524
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.33, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !534
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !539
@.str.32 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.33 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !559
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !760
@.str.34 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !722
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !705
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !678
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !694
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !724
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !737
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !739
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !741
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !743
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !745
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !747
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !749
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !751
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !753
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !755
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !765
@.str.36 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !798
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !896
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !885
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@debug_hook_in = internal unnamed_addr global i32 (i8)* null, align 4, !dbg !937
@debug_hook_out = internal unnamed_addr global i32 (i8)* @debug_hook_out_nop, align 4, !dbg !1088
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1038
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1080
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1082
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1031
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1098
@esc_state = internal global i32 0, align 4, !dbg !1123
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1131
@end = internal unnamed_addr global i8 0, align 1, !dbg !1133
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1127
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1129
@.str.59 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.58 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !785
@.str.63 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1139
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1417
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1387
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1373
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1318
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !783
@.str.1.64 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1419
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1391
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1389
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1332
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !781
@.str.2.65 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1432
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1395
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1393
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1338
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !779
@.str.3.66 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1434
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1399
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1397
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1347
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !777
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1436
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1403
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1401
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1353
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !775
@.str.5.67 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1438
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1407
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1405
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1359
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !773
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1440
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1411
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1409
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1365
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !771
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1442
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1415
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1413
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1371
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !793
@.str.71 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1444
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1704
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1648
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1706
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.71, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1621
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1623
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !791
@.str.1.72 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42, void (%struct.device*)* @uart_stm32_irq_config_func_1 }, align 4, !dbg !1715
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1650
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1747
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.72, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1632
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1634
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !789
@.str.2.73 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45, void (%struct.device*)* @uart_stm32_irq_config_func_2 }, align 4, !dbg !1749
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1652
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1764
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.73, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1638
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1640
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !787
@.str.3.76 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48, void (%struct.device*)* @uart_stm32_irq_config_func_3 }, align 4, !dbg !1766
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1654
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1781
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.76, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1644
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1646
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1656
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1664
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1687
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1690
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*) }, section ".intList", align 4, !dbg !1693
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !869
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1734
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1736
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1738
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1740
@uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 = internal global %struct._isr_list { i32 38, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1742
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1751
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1753
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1755
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1757
@uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 = internal global %struct._isr_list { i32 39, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1759
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1768
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1770
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1772
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1774
@uart_stm32_irq_config_func_3.__isr_uart_stm32_isr_irq_3 = internal global %struct._isr_list { i32 52, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*) }, section ".intList", align 4, !dbg !1776
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1783
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1894
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1896
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1892
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1863
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1898
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1316
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.64, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1330
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.65, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1336
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.66, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1345
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1351
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1357
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1363
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1369
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1988
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2032
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2035
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2039
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2045
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2254
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2263
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2270
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2275
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.128 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.133, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.134, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.135, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.136, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.137, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.131, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.138, i32 0, i32 0)], align 4, !dbg !2303
@.str.132 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.133 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.134 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.135 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.136 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.137 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.131 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.138 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2415
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2428
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2451
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2559
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2562
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2564
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2268
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2265
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2566
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2602
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2132
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2600
@.str.208 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2605
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3316 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !3320, !srcloc !3321
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !3322, !srcloc !3323
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !3324, !srcloc !3325
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !3326, !srcloc !3327
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !3364, !srcloc !3365
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3366, !srcloc !3367
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !3368, !srcloc !3369
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !3370, !srcloc !3371
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !3372, !srcloc !3373
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !3374, !srcloc !3377
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !3378, !srcloc !3379
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3380, !srcloc !3381
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3382, !srcloc !3383
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3384, !srcloc !3385
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3386, !srcloc !3387
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !3388, !srcloc !3389
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !3390, !srcloc !3391
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !3392, !srcloc !3393
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !3394, !srcloc !3395
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3396, !srcloc !3397
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3398, !srcloc !3399
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3400, !srcloc !3401
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3402, !srcloc !3403
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3404, !srcloc !3405
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3406, !srcloc !3407
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !3408, !srcloc !3409
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !3410, !srcloc !3411
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !3412, !srcloc !3413
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !3414, !srcloc !3415
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !3416, !srcloc !3417
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !3418, !srcloc !3419
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3420, !srcloc !3421
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !3422, !srcloc !3423
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3424, !srcloc !3425
  ret void, !dbg !3426
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3429 {
  %1 = tail call i32 @console_init() #25, !dbg !3434
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i32 0, i32 0)) #25, !dbg !3435
  br label %2, !dbg !3436

2:                                                ; preds = %0, %2
  %3 = tail call i32 @console_getchar() #25, !dbg !3437
  %4 = and i32 %3, 255, !dbg !3438
  call void @llvm.dbg.value(metadata i32 %3, metadata !3432, metadata !DIExpression()), !dbg !3439
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 noundef %4, i32 noundef %4) #25, !dbg !3440
  br label %2, !dbg !3436, !llvm.loop !3441
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3443 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3445, metadata !DIExpression()), !dbg !3446
  ret i32 0, !dbg !3447
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3448 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3452, metadata !DIExpression()), !dbg !3453
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3454
  ret void, !dbg !3455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3456 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3459
  ret i8* %1, !dbg !3460
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3461 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3473, metadata !DIExpression()), !dbg !3482
  call void @llvm.dbg.value(metadata i8* %0, metadata !3472, metadata !DIExpression()), !dbg !3482
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3483
  ret void, !dbg !3485
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3486 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3490, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %1, metadata !3491, metadata !DIExpression()), !dbg !3492
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3493
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3493
  ret i32 %4, !dbg !3494
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3495 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3507, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3504, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i8* %1, metadata !3505, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i8* %2, metadata !3506, metadata !DIExpression()), !dbg !3508
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3509
  ret void, !dbg !3510
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3511 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3515, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.value(metadata i32 %1, metadata !3516, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.value(metadata i32 0, metadata !3517, metadata !DIExpression()), !dbg !3518
  %3 = icmp eq i32 %1, 0, !dbg !3519
  br i1 %3, label %13, label %4, !dbg !3522

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3517, metadata !DIExpression()), !dbg !3518
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3523
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3525
  %8 = load i8, i8* %7, align 1, !dbg !3525
  %9 = zext i8 %8 to i32, !dbg !3525
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3523
  %11 = add nuw i32 %5, 1, !dbg !3526
  call void @llvm.dbg.value(metadata i32 %11, metadata !3517, metadata !DIExpression()), !dbg !3518
  %12 = icmp eq i32 %11, %1, !dbg !3519
  br i1 %12, label %13, label %4, !dbg !3522, !llvm.loop !3527

13:                                               ; preds = %4, %2
  ret void, !dbg !3529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3530 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3534, metadata !DIExpression()), !dbg !3536
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3537
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3537
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3535, metadata !DIExpression()), !dbg !3538
  call void @llvm.va_start(i8* nonnull %3), !dbg !3539
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3540
  %5 = load i32, i32* %4, align 4, !dbg !3540
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3540
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3540
  call void @llvm.va_end(i8* nonnull %3), !dbg !3541
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3542
  ret void, !dbg !3542
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3543 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3547, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.value(metadata i32 %1, metadata !3548, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.value(metadata i8* %2, metadata !3549, metadata !DIExpression()), !dbg !3552
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3553
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3553
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3550, metadata !DIExpression()), !dbg !3554
  call void @llvm.va_start(i8* nonnull %5), !dbg !3555
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3556
  %7 = load i32, i32* %6, align 4, !dbg !3556
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3556
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3556
  call void @llvm.dbg.value(metadata i32 %9, metadata !3551, metadata !DIExpression()), !dbg !3552
  call void @llvm.va_end(i8* nonnull %5), !dbg !3557
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3558
  ret i32 %9, !dbg !3559
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3560 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3567, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata i8* %0, metadata !3564, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata i32 %1, metadata !3565, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata i8* %2, metadata !3566, metadata !DIExpression()), !dbg !3574
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3575
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3575
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3568, metadata !DIExpression()), !dbg !3576
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3577
  store i8* %0, i8** %7, align 4, !dbg !3577
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3577
  store i32 %1, i32* %8, align 4, !dbg !3577
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3577
  store i32 0, i32* %9, align 4, !dbg !3577
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3578
  %10 = load i32, i32* %9, align 4, !dbg !3579
  %11 = load i32, i32* %8, align 4, !dbg !3581
  %12 = icmp slt i32 %10, %11, !dbg !3582
  br i1 %12, label %13, label %15, !dbg !3583

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3584
  store i8 0, i8* %14, align 1, !dbg !3586
  br label %15, !dbg !3587

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3588
  ret i32 %10, !dbg !3589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3595, metadata !DIExpression()), !dbg !3597
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3596, metadata !DIExpression()), !dbg !3597
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3598
  %4 = load i8*, i8** %3, align 4, !dbg !3598
  %5 = icmp eq i8* %4, null, !dbg !3600
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3601
  br i1 %5, label %12, label %8, !dbg !3602

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3603
  %10 = load i32, i32* %9, align 4, !dbg !3603
  %11 = icmp slt i32 %7, %10, !dbg !3604
  br i1 %11, label %15, label %12, !dbg !3605

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3606
  %14 = add nsw i32 %7, 1, !dbg !3608
  store i32 %14, i32* %13, align 4, !dbg !3608
  br label %25, !dbg !3609

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3610
  %17 = icmp eq i32 %7, %16, !dbg !3612
  br i1 %17, label %18, label %21, !dbg !3613

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3614
  store i32 %19, i32* %6, align 4, !dbg !3614
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3616
  store i8 0, i8* %20, align 1, !dbg !3617
  br label %25, !dbg !3618

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3619
  %23 = add nsw i32 %7, 1, !dbg !3621
  store i32 %23, i32* %6, align 4, !dbg !3621
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3622
  store i8 %22, i8* %24, align 1, !dbg !3623
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3624
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3625 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3635, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i8* %1, metadata !3636, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i8* %2, metadata !3637, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i8* %3, metadata !3638, metadata !DIExpression()), !dbg !3639
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3640
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3641
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3642
  unreachable, !dbg !3643
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3644 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3748
  ret %struct.k_thread* %1, !dbg !3749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3750 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3755, metadata !DIExpression()), !dbg !3756
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3757, !srcloc !3759
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3760
  ret void, !dbg !3761
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3762 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3763, !srcloc !3765
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3766
  ret %struct.k_thread* %1, !dbg !3767
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3768 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3779, metadata !DIExpression()), !dbg !3783
  call void @llvm.dbg.value(metadata i8* %1, metadata !3780, metadata !DIExpression()), !dbg !3783
  %3 = icmp eq i8* %1, null, !dbg !3784
  br i1 %3, label %8, label %4, !dbg !3786

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3787
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3787
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3781, metadata !DIExpression()), !dbg !3783
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3788, !range !3789
  call void @llvm.dbg.value(metadata i32 %7, metadata !3782, metadata !DIExpression()), !dbg !3783
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3790
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3791
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3793 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3797, metadata !DIExpression()), !dbg !3801
  call void @llvm.dbg.value(metadata i8* %1, metadata !3798, metadata !DIExpression()), !dbg !3801
  call void @llvm.dbg.value(metadata i8* %1, metadata !3799, metadata !DIExpression()), !dbg !3801
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3802
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3800, metadata !DIExpression()), !dbg !3801
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3803
  %5 = ptrtoint i8* %4 to i32, !dbg !3804
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3804
  %7 = sub i32 %5, %6, !dbg !3804
  %8 = lshr i32 %7, 3, !dbg !3805
  ret i32 %8, !dbg !3806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3807 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3811, metadata !DIExpression()), !dbg !3816
  call void @llvm.dbg.value(metadata i32 %1, metadata !3812, metadata !DIExpression()), !dbg !3816
  call void @llvm.dbg.value(metadata i1 %2, metadata !3813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3816
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3817
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3814, metadata !DIExpression()), !dbg !3816
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3816
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3818
  %6 = bitcast i8* %5 to i16*, !dbg !3818
  %7 = load i16, i16* %6, align 2, !dbg !3818
  %8 = and i16 %7, -2, !dbg !3822
  %9 = zext i1 %2 to i16, !dbg !3822
  %10 = or i16 %8, %9, !dbg !3822
  store i16 %10, i16* %6, align 2, !dbg !3818
  ret void, !dbg !3823
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3824 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3828, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i32 %1, metadata !3829, metadata !DIExpression()), !dbg !3830
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3831
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3833
  br i1 %4, label %7, label %5, !dbg !3834

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3835
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3837
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3838
  br label %7, !dbg !3839

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3840, !range !3842
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3843
  br i1 %9, label %13, label %10, !dbg !3844

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3845
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3847, !range !3842
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3848
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3849
  call void @llvm.dbg.value(metadata i32 %12, metadata !3829, metadata !DIExpression()), !dbg !3830
  br label %13, !dbg !3850

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3829, metadata !DIExpression()), !dbg !3830
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3851
  ret void, !dbg !3852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3853 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3857, metadata !DIExpression()), !dbg !3859
  call void @llvm.dbg.value(metadata i32 %1, metadata !3858, metadata !DIExpression()), !dbg !3859
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3860
  %4 = add i32 %3, %1, !dbg !3861
  ret i32 %4, !dbg !3862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3863 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3867, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata i32 %1, metadata !3868, metadata !DIExpression()), !dbg !3869
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3870
  %4 = and i32 %3, 1, !dbg !3871
  %5 = icmp ne i32 %4, 0, !dbg !3870
  ret i1 %5, !dbg !3872
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3873 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3875, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata i32 %1, metadata !3876, metadata !DIExpression()), !dbg !3880
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3881, !range !3882
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3883
  call void @llvm.dbg.value(metadata i32 %4, metadata !3877, metadata !DIExpression()), !dbg !3884
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3885
  ret void, !dbg !3886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3887 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3891, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.value(metadata i32 %1, metadata !3892, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.value(metadata i32 %2, metadata !3893, metadata !DIExpression()), !dbg !3896
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3897
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3898
  %6 = add i32 %5, %4, !dbg !3899
  call void @llvm.dbg.value(metadata i32 %6, metadata !3894, metadata !DIExpression()), !dbg !3896
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3900
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3901
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3902
  ret void, !dbg !3903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3904 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3906, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata i32 %1, metadata !3907, metadata !DIExpression()), !dbg !3908
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3909
  %4 = sub i32 %1, %3, !dbg !3910
  ret i32 %4, !dbg !3911
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3912 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3914, metadata !DIExpression()), !dbg !3919
  call void @llvm.dbg.value(metadata i32 %1, metadata !3915, metadata !DIExpression()), !dbg !3919
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3920, !range !3882
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3921
  call void @llvm.dbg.value(metadata i32 %4, metadata !3916, metadata !DIExpression()), !dbg !3922
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3923
  ret void, !dbg !3924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3925 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3929, metadata !DIExpression()), !dbg !3931
  call void @llvm.dbg.value(metadata i32 %1, metadata !3930, metadata !DIExpression()), !dbg !3931
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3932
  %4 = lshr i32 %3, 1, !dbg !3933
  ret i32 %4, !dbg !3934
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3935 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3939, metadata !DIExpression()), !dbg !3942
  call void @llvm.dbg.value(metadata i32 %1, metadata !3940, metadata !DIExpression()), !dbg !3942
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3943
  %4 = add i32 %1, 1, !dbg !3944
  %5 = sub i32 %4, %3, !dbg !3945
  call void @llvm.dbg.value(metadata i32 %5, metadata !3941, metadata !DIExpression()), !dbg !3942
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3946, !range !3947
  %7 = sub nsw i32 31, %6, !dbg !3948
  ret i32 %7, !dbg !3949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3950 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3954, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i32 %1, metadata !3955, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i32 %2, metadata !3956, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3957, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3963
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3964
  %5 = load i32, i32* %4, align 4, !dbg !3964
  %6 = icmp eq i32 %5, 0, !dbg !3965
  br i1 %6, label %7, label %12, !dbg !3966

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3967
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3969
  %10 = load i32, i32* %9, align 4, !dbg !3970
  %11 = or i32 %10, %8, !dbg !3970
  store i32 %11, i32* %9, align 4, !dbg !3970
  store i32 %1, i32* %4, align 4, !dbg !3971
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3972
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3973
  br label %14, !dbg !3974

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3959, metadata !DIExpression()), !dbg !3975
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3976, !range !3977
  call void @llvm.dbg.value(metadata i32 %13, metadata !3962, metadata !DIExpression()), !dbg !3975
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3978
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3979
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3980
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3981
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3983 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3985, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %1, metadata !3986, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %2, metadata !3987, metadata !DIExpression()), !dbg !3988
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3989
  ret void, !dbg !3990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3991 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3993, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.value(metadata i32 %1, metadata !3994, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.value(metadata i32 %2, metadata !3995, metadata !DIExpression()), !dbg !3996
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3997
  ret void, !dbg !3998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3999 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4001, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i32 %1, metadata !4002, metadata !DIExpression()), !dbg !4003
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4004
  ret i32 %3, !dbg !4005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4006 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4010, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.value(metadata i32 %1, metadata !4011, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.value(metadata i32 %2, metadata !4012, metadata !DIExpression()), !dbg !4015
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4016
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4013, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4014, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4015
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4014, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4015
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4017
  call void @llvm.dbg.value(metadata i8* %5, metadata !4014, metadata !DIExpression()), !dbg !4015
  %6 = bitcast i8* %5 to i16*, !dbg !4018
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4021
  %8 = load i16, i16* %7, align 2, !dbg !4021
  %9 = zext i16 %8 to i32, !dbg !4021
  ret i32 %9, !dbg !4022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4023 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4027, metadata !DIExpression()), !dbg !4028
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4029
  ret %struct.chunk_unit_t* %2, !dbg !4030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !4031 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4035, metadata !DIExpression()), !dbg !4041
  call void @llvm.dbg.value(metadata i32 %1, metadata !4036, metadata !DIExpression()), !dbg !4041
  call void @llvm.dbg.value(metadata i32 %2, metadata !4037, metadata !DIExpression()), !dbg !4041
  call void @llvm.dbg.value(metadata i32 %3, metadata !4038, metadata !DIExpression()), !dbg !4041
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4042
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4039, metadata !DIExpression()), !dbg !4041
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4040, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4041
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4043
  call void @llvm.dbg.value(metadata i8* %6, metadata !4040, metadata !DIExpression()), !dbg !4041
  %7 = trunc i32 %3 to i16, !dbg !4044
  %8 = bitcast i8* %6 to i16*, !dbg !4047
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4048
  store i16 %7, i16* %9, align 2, !dbg !4049
  ret void, !dbg !4050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !4051 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4055, metadata !DIExpression()), !dbg !4056
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4057
  ret i32 %2, !dbg !4058
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4059 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4063, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.value(metadata i32 %1, metadata !4064, metadata !DIExpression()), !dbg !4065
  %3 = add i32 %1, 4, !dbg !4066
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4067
  ret i32 %4, !dbg !4068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !4069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4073, metadata !DIExpression()), !dbg !4074
  %2 = add i32 %0, 7, !dbg !4075
  %3 = lshr i32 %2, 3, !dbg !4076
  ret i32 %3, !dbg !4077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4078 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4082, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.value(metadata i32 %1, metadata !4083, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.value(metadata i32 %2, metadata !4084, metadata !DIExpression()), !dbg !4085
  %4 = shl i32 %2, 1, !dbg !4086
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4087
  ret void, !dbg !4088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4089 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4091, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i32 %1, metadata !4092, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i32 %2, metadata !4093, metadata !DIExpression()), !dbg !4094
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4095
  ret void, !dbg !4096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4097 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4099, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata i32 %1, metadata !4100, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata i32 %2, metadata !4101, metadata !DIExpression()), !dbg !4107
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4108
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4102, metadata !DIExpression()), !dbg !4107
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4109
  %6 = icmp eq i32 %5, %1, !dbg !4110
  br i1 %6, label %7, label %14, !dbg !4111

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4112
  %9 = xor i32 %8, -1, !dbg !4114
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4115
  %11 = load i32, i32* %10, align 4, !dbg !4116
  %12 = and i32 %11, %9, !dbg !4116
  store i32 %12, i32* %10, align 4, !dbg !4116
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4117
  store i32 0, i32* %13, align 4, !dbg !4118
  br label %17, !dbg !4119

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4120
  call void @llvm.dbg.value(metadata i32 %15, metadata !4103, metadata !DIExpression()), !dbg !4121
  call void @llvm.dbg.value(metadata i32 %5, metadata !4106, metadata !DIExpression()), !dbg !4121
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4122
  store i32 %5, i32* %16, align 4, !dbg !4123
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4124
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4125
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4127 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4129, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata i32 %1, metadata !4130, metadata !DIExpression()), !dbg !4131
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4132
  ret i32 %3, !dbg !4133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4134 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4138, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i8* %1, metadata !4139, metadata !DIExpression()), !dbg !4145
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4146
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4146
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4140, metadata !DIExpression()), !dbg !4145
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4147
  call void @llvm.dbg.value(metadata i32 %5, metadata !4141, metadata !DIExpression()), !dbg !4145
  %6 = ptrtoint i8* %1 to i32, !dbg !4148
  call void @llvm.dbg.value(metadata i32 %6, metadata !4142, metadata !DIExpression()), !dbg !4145
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4149
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4149
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4150
  call void @llvm.dbg.value(metadata i32 %9, metadata !4143, metadata !DIExpression()), !dbg !4145
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4151
  %11 = shl i32 %10, 3, !dbg !4152
  call void @llvm.dbg.value(metadata i32 %11, metadata !4144, metadata !DIExpression()), !dbg !4145
  %12 = sub i32 %9, %6, !dbg !4153
  %13 = add i32 %12, %11, !dbg !4154
  ret i32 %13, !dbg !4155
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4156 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4160, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata i32 %1, metadata !4161, metadata !DIExpression()), !dbg !4166
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4167
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4167
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4162, metadata !DIExpression()), !dbg !4166
  %5 = icmp eq i32 %1, 0, !dbg !4168
  br i1 %5, label %19, label %6, !dbg !4170

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4171
  br i1 %7, label %19, label %8, !dbg !4172

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4173, !range !3789
  call void @llvm.dbg.value(metadata i32 %9, metadata !4164, metadata !DIExpression()), !dbg !4166
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %10, metadata !4165, metadata !DIExpression()), !dbg !4166
  %11 = icmp eq i32 %10, 0, !dbg !4175
  br i1 %11, label %19, label %12, !dbg !4177

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4178
  %14 = icmp ugt i32 %13, %9, !dbg !4180
  br i1 %14, label %15, label %17, !dbg !4181

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4182
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4184
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4185
  br label %17, !dbg !4186

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4187
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4188
  call void @llvm.dbg.value(metadata i8* %18, metadata !4163, metadata !DIExpression()), !dbg !4166
  br label %19, !dbg !4189

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4166
  ret i8* %20, !dbg !4190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4191 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4195, metadata !DIExpression()), !dbg !4197
  call void @llvm.dbg.value(metadata i32 %1, metadata !4196, metadata !DIExpression()), !dbg !4197
  %3 = lshr i32 %1, 3, !dbg !4198
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4199
  %5 = load i32, i32* %4, align 4, !dbg !4199
  %6 = icmp uge i32 %3, %5, !dbg !4200
  ret i1 %6, !dbg !4201
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4202 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4206, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata i32 %1, metadata !4207, metadata !DIExpression()), !dbg !4221
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4222
  call void @llvm.dbg.value(metadata i32 %3, metadata !4208, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4209, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4221
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4223
  %5 = load i32, i32* %4, align 4, !dbg !4223
  %6 = icmp eq i32 %5, 0, !dbg !4224
  br i1 %6, label %19, label %7, !dbg !4225

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4226
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4227
  call void @llvm.dbg.value(metadata i32 %9, metadata !4213, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.value(metadata i32 %8, metadata !4214, metadata !DIExpression()), !dbg !4228
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4229
  %11 = icmp ult i32 %10, %1, !dbg !4231
  br i1 %11, label %13, label %12, !dbg !4232

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4233
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4235
  store i32 %14, i32* %4, align 4, !dbg !4236
  %15 = add nsw i32 %9, -1, !dbg !4237
  call void @llvm.dbg.value(metadata i32 %15, metadata !4213, metadata !DIExpression()), !dbg !4227
  %16 = icmp eq i32 %15, 0, !dbg !4237
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4238
  br i1 %18, label %19, label %7, !dbg !4238, !llvm.loop !4239

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4242
  %21 = load i32, i32* %20, align 4, !dbg !4242
  %22 = add nsw i32 %3, 1, !dbg !4243
  %23 = shl nsw i32 -1, %22, !dbg !4243
  %24 = and i32 %21, %23, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %24, metadata !4216, metadata !DIExpression()), !dbg !4221
  %25 = icmp eq i32 %24, 0, !dbg !4245
  br i1 %25, label %30, label %26, !dbg !4246

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4247, !range !3947
  call void @llvm.dbg.value(metadata i32 %27, metadata !4217, metadata !DIExpression()), !dbg !4248
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4249
  %29 = load i32, i32* %28, align 4, !dbg !4249
  call void @llvm.dbg.value(metadata i32 %29, metadata !4220, metadata !DIExpression()), !dbg !4248
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4250
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4221
  ret i32 %31, !dbg !4251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4252 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4254, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.value(metadata i32 %1, metadata !4255, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.value(metadata i32 %2, metadata !4256, metadata !DIExpression()), !dbg !4260
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %4, metadata !4257, metadata !DIExpression()), !dbg !4260
  %5 = sub i32 %2, %1, !dbg !4262
  call void @llvm.dbg.value(metadata i32 %5, metadata !4258, metadata !DIExpression()), !dbg !4260
  %6 = sub i32 %4, %5, !dbg !4263
  call void @llvm.dbg.value(metadata i32 %6, metadata !4259, metadata !DIExpression()), !dbg !4260
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4264
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4265
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4266
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4267
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4268
  ret void, !dbg !4269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4270 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4274, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %1, metadata !4275, metadata !DIExpression()), !dbg !4278
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4279
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4276, metadata !DIExpression()), !dbg !4278
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4280
  call void @llvm.dbg.value(metadata i8* %4, metadata !4277, metadata !DIExpression()), !dbg !4278
  ret i8* %4, !dbg !4281
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4282 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4286, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i32 %1, metadata !4287, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i32 %2, metadata !4288, metadata !DIExpression()), !dbg !4298
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4299
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4299
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4289, metadata !DIExpression()), !dbg !4298
  %6 = sub i32 0, %1, !dbg !4300
  %7 = and i32 %6, %1, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %7, metadata !4291, metadata !DIExpression()), !dbg !4298
  %8 = icmp eq i32 %7, %1, !dbg !4302
  br i1 %8, label %13, label %9, !dbg !4304

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4305
  call void @llvm.dbg.value(metadata i32 %10, metadata !4287, metadata !DIExpression()), !dbg !4298
  %11 = icmp ult i32 %7, 4, !dbg !4307
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4307
  br label %17, !dbg !4307

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4308
  br i1 %14, label %15, label %17, !dbg !4311

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4312
  br label %57, !dbg !4314

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4298
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4315
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4287, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i32 %19, metadata !4290, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i32 %18, metadata !4291, metadata !DIExpression()), !dbg !4298
  %21 = icmp eq i32 %2, 0, !dbg !4316
  br i1 %21, label %57, label %22, !dbg !4318

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4319
  br i1 %23, label %57, label %24, !dbg !4320

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4321
  %26 = add i32 %25, %20, !dbg !4322
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4323, !range !3789
  call void @llvm.dbg.value(metadata i32 %27, metadata !4292, metadata !DIExpression()), !dbg !4298
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %28, metadata !4293, metadata !DIExpression()), !dbg !4298
  %29 = icmp eq i32 %28, 0, !dbg !4325
  br i1 %29, label %57, label %30, !dbg !4327

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4328
  call void @llvm.dbg.value(metadata i8* %31, metadata !4294, metadata !DIExpression()), !dbg !4298
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4329
  %33 = ptrtoint i8* %32 to i32, !dbg !4329
  %34 = add i32 %20, -1, !dbg !4329
  %35 = add i32 %34, %33, !dbg !4329
  %36 = sub i32 0, %20, !dbg !4329
  %37 = and i32 %35, %36, !dbg !4329
  %38 = inttoptr i32 %37 to i8*, !dbg !4330
  %39 = sub i32 0, %18, !dbg !4331
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4331
  call void @llvm.dbg.value(metadata i8* %40, metadata !4294, metadata !DIExpression()), !dbg !4298
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4332
  %42 = ptrtoint i8* %41 to i32, !dbg !4332
  %43 = add i32 %42, 7, !dbg !4332
  %44 = and i32 %43, -8, !dbg !4332
  call void @llvm.dbg.value(metadata i32 %44, metadata !4295, metadata !DIExpression()), !dbg !4298
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4333
  call void @llvm.dbg.value(metadata i32 %45, metadata !4296, metadata !DIExpression()), !dbg !4298
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4334
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4335
  %48 = sub i32 %44, %47, !dbg !4335
  %49 = ashr exact i32 %48, 3, !dbg !4335
  call void @llvm.dbg.value(metadata i32 %49, metadata !4297, metadata !DIExpression()), !dbg !4298
  %50 = icmp ugt i32 %45, %28, !dbg !4336
  br i1 %50, label %51, label %52, !dbg !4338

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4339
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4341
  br label %52, !dbg !4342

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4343
  %54 = icmp ugt i32 %53, %49, !dbg !4345
  br i1 %54, label %55, label %56, !dbg !4346

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4347
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4349
  br label %56, !dbg !4350

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4351
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4298
  ret i8* %58, !dbg !4352
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4353 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4357, metadata !DIExpression()), !dbg !4376
  call void @llvm.dbg.value(metadata i8* %1, metadata !4358, metadata !DIExpression()), !dbg !4376
  call void @llvm.dbg.value(metadata i32 %2, metadata !4359, metadata !DIExpression()), !dbg !4376
  call void @llvm.dbg.value(metadata i32 %3, metadata !4360, metadata !DIExpression()), !dbg !4376
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4377
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4377
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4361, metadata !DIExpression()), !dbg !4376
  %7 = icmp eq i8* %1, null, !dbg !4378
  br i1 %7, label %8, label %10, !dbg !4380

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4381
  br label %59, !dbg !4383

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4384
  br i1 %11, label %12, label %13, !dbg !4386

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4387
  br label %59, !dbg !4389

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4390
  br i1 %14, label %59, label %15, !dbg !4392

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4393, !range !3789
  call void @llvm.dbg.value(metadata i32 %16, metadata !4362, metadata !DIExpression()), !dbg !4376
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4394
  call void @llvm.dbg.value(metadata i32 %17, metadata !4363, metadata !DIExpression()), !dbg !4376
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4395
  %19 = ptrtoint i8* %1 to i32, !dbg !4396
  %20 = ptrtoint i8* %18 to i32, !dbg !4396
  %21 = sub i32 %19, %20, !dbg !4396
  call void @llvm.dbg.value(metadata i32 %21, metadata !4364, metadata !DIExpression()), !dbg !4376
  %22 = add i32 %21, %3, !dbg !4397
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4398
  call void @llvm.dbg.value(metadata i32 %23, metadata !4365, metadata !DIExpression()), !dbg !4376
  %24 = icmp eq i32 %2, 0, !dbg !4399
  br i1 %24, label %29, label %25, !dbg !4400

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4401
  %27 = and i32 %26, %19, !dbg !4402
  %28 = icmp eq i32 %27, 0, !dbg !4402
  br i1 %28, label %29, label %49, !dbg !4403

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4404
  %31 = icmp eq i32 %23, %30, !dbg !4405
  br i1 %31, label %59, label %32, !dbg !4406

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4407
  br i1 %33, label %34, label %36, !dbg !4408

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4409
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4411
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4412
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4413
  br label %59, !dbg !4414

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4415
  br i1 %37, label %49, label %38, !dbg !4416

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4417
  %40 = add i32 %39, %30, !dbg !4418
  %41 = icmp ult i32 %40, %23, !dbg !4419
  br i1 %41, label %49, label %42, !dbg !4420

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4421
  call void @llvm.dbg.value(metadata i32 %43, metadata !4366, metadata !DIExpression()), !dbg !4422
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4423
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4424
  %45 = icmp ult i32 %43, %44, !dbg !4426
  br i1 %45, label %46, label %48, !dbg !4427

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4428
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4430
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4431
  br label %48, !dbg !4432

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4433
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4434
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4435
  call void @llvm.dbg.value(metadata i8* %50, metadata !4372, metadata !DIExpression()), !dbg !4376
  %51 = icmp eq i8* %50, null, !dbg !4436
  br i1 %51, label %59, label %52, !dbg !4437

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4438, !range !3882
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4439
  %55 = sub i32 %54, %21, !dbg !4440
  call void @llvm.dbg.value(metadata i32 %55, metadata !4373, metadata !DIExpression()), !dbg !4441
  %56 = icmp ult i32 %55, %3, !dbg !4442
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4442
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #25, !dbg !4443
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4444
  br label %59, !dbg !4445

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4376
  ret i8* %60, !dbg !4446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4447 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4451, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.value(metadata i32 %1, metadata !4452, metadata !DIExpression()), !dbg !4453
  %3 = shl i32 %1, 3, !dbg !4454
  %4 = add i32 %3, -4, !dbg !4455
  ret i32 %4, !dbg !4456
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4457 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4461, metadata !DIExpression()), !dbg !4472
  call void @llvm.dbg.value(metadata i8* %1, metadata !4462, metadata !DIExpression()), !dbg !4472
  call void @llvm.dbg.value(metadata i32 %2, metadata !4463, metadata !DIExpression()), !dbg !4472
  %4 = add i32 %2, -4, !dbg !4473
  call void @llvm.dbg.value(metadata i32 %4, metadata !4463, metadata !DIExpression()), !dbg !4472
  %5 = ptrtoint i8* %1 to i32, !dbg !4474
  %6 = add i32 %5, 7, !dbg !4474
  %7 = and i32 %6, -8, !dbg !4474
  call void @llvm.dbg.value(metadata i32 %7, metadata !4464, metadata !DIExpression()), !dbg !4472
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4475
  %9 = ptrtoint i8* %8 to i32, !dbg !4475
  %10 = and i32 %9, -8, !dbg !4475
  call void @llvm.dbg.value(metadata i32 %10, metadata !4465, metadata !DIExpression()), !dbg !4472
  %11 = sub i32 %10, %7, !dbg !4476
  %12 = lshr exact i32 %11, 3, !dbg !4477
  call void @llvm.dbg.value(metadata i32 %12, metadata !4466, metadata !DIExpression()), !dbg !4472
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4478
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4467, metadata !DIExpression()), !dbg !4472
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4479
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4480
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4481
  store i32 %12, i32* %15, align 8, !dbg !4482
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4483
  store i32 0, i32* %16, align 4, !dbg !4484
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4485
  call void @llvm.dbg.value(metadata i32 %17, metadata !4468, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4472
  %18 = shl i32 %17, 2, !dbg !4486
  %19 = add i32 %18, 20, !dbg !4487
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4488
  call void @llvm.dbg.value(metadata i32 %20, metadata !4469, metadata !DIExpression()), !dbg !4472
  call void @llvm.dbg.value(metadata i32 0, metadata !4470, metadata !DIExpression()), !dbg !4489
  %21 = icmp slt i32 %17, 0, !dbg !4490
  br i1 %21, label %22, label %24, !dbg !4492

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4493
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4494
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4495
  %23 = sub i32 %12, %20, !dbg !4496
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4497
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4498
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4499
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4500
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4501
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4502
  ret void, !dbg !4503

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4470, metadata !DIExpression()), !dbg !4489
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4504
  store i32 0, i32* %26, align 4, !dbg !4506
  %27 = add nuw i32 %25, 1, !dbg !4507
  call void @llvm.dbg.value(metadata i32 %27, metadata !4470, metadata !DIExpression()), !dbg !4489
  %28 = icmp eq i32 %25, %17, !dbg !4490
  br i1 %28, label %22, label %24, !dbg !4492, !llvm.loop !4508
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4510 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4523, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4520, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8* %1, metadata !4521, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8* %2, metadata !4522, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i32 %4, metadata !4524, metadata !DIExpression()), !dbg !4651
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4652
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4652
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4525, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i32 0, metadata !4529, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i1 undef, metadata !4531, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4651
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4654

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4654

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4655
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4523, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8* %30, metadata !4522, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i32 %29, metadata !4529, metadata !DIExpression()), !dbg !4651
  %31 = load i8, i8* %30, align 1, !dbg !4656
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4654

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4656
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4657
  call void @llvm.dbg.value(metadata i8* %34, metadata !4522, metadata !DIExpression()), !dbg !4651
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4657
  call void @llvm.dbg.value(metadata i32 %35, metadata !4533, metadata !DIExpression()), !dbg !4658
  %36 = icmp slt i32 %35, 0, !dbg !4659
  %37 = add i32 %29, 1, !dbg !4657
  call void @llvm.dbg.value(metadata i32 undef, metadata !4529, metadata !DIExpression()), !dbg !4651
  br i1 %36, label %365, label %28, !llvm.loop !4661

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4663
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4538, metadata !DIExpression()), !dbg !4664
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4664
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4583, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4586, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i8* %30, metadata !4589, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i32 -1, metadata !4590, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i32 -1, metadata !4591, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i8* null, metadata !4592, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i8* %14, metadata !4593, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i8 0, metadata !4594, metadata !DIExpression()), !dbg !4665
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4666
  call void @llvm.dbg.value(metadata i8* %39, metadata !4522, metadata !DIExpression()), !dbg !4651
  %40 = load i24, i24* %15, align 8, !dbg !4667
  %41 = and i24 %40, 256, !dbg !4667
  %42 = icmp eq i24 %41, 0, !dbg !4667
  br i1 %42, label %51, label %43, !dbg !4669

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4670
  call void @llvm.dbg.value(metadata i8* %44, metadata !4523, metadata !DIExpression()), !dbg !4651
  %45 = bitcast i8* %27 to i32*, !dbg !4670
  %46 = load i32, i32* %45, align 4, !dbg !4670
  call void @llvm.dbg.value(metadata i32 %46, metadata !4590, metadata !DIExpression()), !dbg !4665
  %47 = icmp slt i32 %46, 0, !dbg !4672
  br i1 %47, label %48, label %56, !dbg !4674

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4675
  store i24 %49, i24* %15, align 8, !dbg !4675
  %50 = sub nsw i32 0, %46, !dbg !4677
  call void @llvm.dbg.value(metadata i32 %50, metadata !4590, metadata !DIExpression()), !dbg !4665
  br label %56, !dbg !4678

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4679
  %53 = icmp eq i24 %52, 0, !dbg !4679
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4681
  br label %56, !dbg !4681

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4682
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4665
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4523, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i32 %58, metadata !4590, metadata !DIExpression()), !dbg !4665
  %60 = and i24 %57, 1024, !dbg !4682
  %61 = icmp eq i24 %60, 0, !dbg !4682
  br i1 %61, label %69, label %62, !dbg !4683

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4684
  call void @llvm.dbg.value(metadata i8* %63, metadata !4523, metadata !DIExpression()), !dbg !4651
  %64 = bitcast i8* %59 to i32*, !dbg !4684
  %65 = load i32, i32* %64, align 4, !dbg !4684
  call void @llvm.dbg.value(metadata i32 %65, metadata !4595, metadata !DIExpression()), !dbg !4685
  %66 = icmp slt i32 %65, 0, !dbg !4686
  br i1 %66, label %67, label %74, !dbg !4688

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4689
  store i24 %68, i24* %15, align 8, !dbg !4689
  br label %74, !dbg !4691

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4692
  %71 = icmp eq i24 %70, 0, !dbg !4692
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4694
  br label %74, !dbg !4694

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4695
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4665
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4665
  call void @llvm.dbg.value(metadata i8* %77, metadata !4523, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i32 %76, metadata !4591, metadata !DIExpression()), !dbg !4665
  store i32 0, i32* %16, align 4, !dbg !4696
  store i32 0, i32* %17, align 8, !dbg !4697
  %78 = lshr i24 %75, 16, !dbg !4695
  call void @llvm.dbg.value(metadata i24 %78, metadata !4598, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4665
  %79 = lshr i24 %75, 11, !dbg !4698
  %80 = and i24 %79, 15, !dbg !4698
  %81 = zext i24 %80 to i32, !dbg !4698
  call void @llvm.dbg.value(metadata i32 %81, metadata !4599, metadata !DIExpression()), !dbg !4665
  %82 = trunc i24 %78 to i3, !dbg !4699
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4699

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4700

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4703
  call void @llvm.dbg.value(metadata i8* %85, metadata !4523, metadata !DIExpression()), !dbg !4651
  %86 = bitcast i8* %77 to i32*, !dbg !4703
  %87 = load i32, i32* %86, align 4, !dbg !4703
  %88 = sext i32 %87 to i64, !dbg !4703
  store i64 %88, i64* %20, align 8, !dbg !4705
  br label %115, !dbg !4706

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4707
  call void @llvm.dbg.value(metadata i8* %90, metadata !4523, metadata !DIExpression()), !dbg !4651
  %91 = bitcast i8* %77 to i32*, !dbg !4707
  %92 = load i32, i32* %91, align 4, !dbg !4707
  %93 = sext i32 %92 to i64, !dbg !4707
  store i64 %93, i64* %20, align 8, !dbg !4710
  br label %115, !dbg !4711

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4712
  %96 = add i32 %95, 7, !dbg !4712
  %97 = and i32 %96, -8, !dbg !4712
  %98 = inttoptr i32 %97 to i8*, !dbg !4712
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4712
  call void @llvm.dbg.value(metadata i8* %99, metadata !4523, metadata !DIExpression()), !dbg !4651
  %100 = inttoptr i32 %97 to i64*, !dbg !4712
  %101 = load i64, i64* %100, align 8, !dbg !4712
  store i64 %101, i64* %20, align 8, !dbg !4713
  br label %115, !dbg !4714

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4715
  %104 = add i32 %103, 7, !dbg !4715
  %105 = and i32 %104, -8, !dbg !4715
  %106 = inttoptr i32 %105 to i8*, !dbg !4715
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4715
  call void @llvm.dbg.value(metadata i8* %107, metadata !4523, metadata !DIExpression()), !dbg !4651
  %108 = inttoptr i32 %105 to i64*, !dbg !4715
  %109 = load i64, i64* %108, align 8, !dbg !4715
  store i64 %109, i64* %20, align 8, !dbg !4716
  br label %115, !dbg !4717

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4718
  call void @llvm.dbg.value(metadata i8* %111, metadata !4523, metadata !DIExpression()), !dbg !4651
  %112 = bitcast i8* %77 to i32*, !dbg !4718
  %113 = load i32, i32* %112, align 4, !dbg !4718
  %114 = sext i32 %113 to i64, !dbg !4719
  store i64 %114, i64* %20, align 8, !dbg !4720
  br label %115, !dbg !4721

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4722
  call void @llvm.dbg.value(metadata i8* %117, metadata !4523, metadata !DIExpression()), !dbg !4651
  %118 = trunc i24 %79 to i4, !dbg !4723
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4723

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4724
  %121 = ashr exact i64 %120, 56, !dbg !4724
  store i64 %121, i64* %20, align 8, !dbg !4727
  br label %177, !dbg !4728

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4729
  %124 = ashr exact i64 %123, 48, !dbg !4729
  store i64 %124, i64* %20, align 8, !dbg !4732
  br label %177, !dbg !4733

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4734

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4737
  call void @llvm.dbg.value(metadata i8* %127, metadata !4523, metadata !DIExpression()), !dbg !4651
  %128 = bitcast i8* %77 to i32*, !dbg !4737
  %129 = load i32, i32* %128, align 4, !dbg !4737
  %130 = zext i32 %129 to i64, !dbg !4737
  store i64 %130, i64* %20, align 8, !dbg !4739
  br label %157, !dbg !4740

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4741
  call void @llvm.dbg.value(metadata i8* %132, metadata !4523, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8* %132, metadata !4523, metadata !DIExpression()), !dbg !4651
  %133 = bitcast i8* %77 to i32*, !dbg !4741
  %134 = load i32, i32* %133, align 4, !dbg !4741
  %135 = zext i32 %134 to i64, !dbg !4741
  store i64 %135, i64* %20, align 8, !dbg !4741
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4743
  %138 = add i32 %137, 7, !dbg !4743
  %139 = and i32 %138, -8, !dbg !4743
  %140 = inttoptr i32 %139 to i8*, !dbg !4743
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4743
  call void @llvm.dbg.value(metadata i8* %141, metadata !4523, metadata !DIExpression()), !dbg !4651
  %142 = inttoptr i32 %139 to i64*, !dbg !4743
  %143 = load i64, i64* %142, align 8, !dbg !4743
  store i64 %143, i64* %20, align 8, !dbg !4744
  br label %157, !dbg !4745

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4746
  %146 = add i32 %145, 7, !dbg !4746
  %147 = and i32 %146, -8, !dbg !4746
  %148 = inttoptr i32 %147 to i8*, !dbg !4746
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4746
  call void @llvm.dbg.value(metadata i8* %149, metadata !4523, metadata !DIExpression()), !dbg !4651
  %150 = inttoptr i32 %147 to i64*, !dbg !4746
  %151 = load i64, i64* %150, align 8, !dbg !4746
  store i64 %151, i64* %20, align 8, !dbg !4747
  br label %157, !dbg !4748

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4749
  call void @llvm.dbg.value(metadata i8* %153, metadata !4523, metadata !DIExpression()), !dbg !4651
  %154 = bitcast i8* %77 to i32*, !dbg !4749
  %155 = load i32, i32* %154, align 4, !dbg !4749
  %156 = zext i32 %155 to i64, !dbg !4750
  store i64 %156, i64* %20, align 8, !dbg !4751
  br label %157, !dbg !4752

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4753
  call void @llvm.dbg.value(metadata i8* %159, metadata !4523, metadata !DIExpression()), !dbg !4651
  %160 = trunc i24 %79 to i4, !dbg !4754
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4754

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4755
  store i64 %162, i64* %20, align 8, !dbg !4758
  br label %177, !dbg !4759

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4760
  store i64 %164, i64* %20, align 8, !dbg !4763
  br label %177, !dbg !4764

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4765
  %167 = add i32 %166, 7, !dbg !4765
  %168 = and i32 %167, -8, !dbg !4765
  %169 = inttoptr i32 %168 to i8*, !dbg !4765
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4765
  call void @llvm.dbg.value(metadata i8* %170, metadata !4523, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8* %170, metadata !4523, metadata !DIExpression()), !dbg !4651
  %171 = inttoptr i32 %168 to double*, !dbg !4765
  %172 = load double, double* %171, align 8, !dbg !4765
  store double %172, double* %19, align 8, !dbg !4765
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4769
  call void @llvm.dbg.value(metadata i8* %174, metadata !4523, metadata !DIExpression()), !dbg !4651
  %175 = bitcast i8* %77 to i8**, !dbg !4769
  %176 = load i8*, i8** %175, align 4, !dbg !4769
  store i8* %176, i8** %18, align 8, !dbg !4772
  br label %177, !dbg !4773

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4665
  call void @llvm.dbg.value(metadata i8* %178, metadata !4523, metadata !DIExpression()), !dbg !4651
  %179 = and i24 %75, 3, !dbg !4774
  %180 = icmp eq i24 %179, 0, !dbg !4774
  br i1 %180, label %185, label %181, !dbg !4774

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4775
  call void @llvm.dbg.value(metadata i32 %182, metadata !4600, metadata !DIExpression()), !dbg !4776
  %183 = icmp slt i32 %182, 0, !dbg !4777
  %184 = add i32 %182, %29, !dbg !4775
  call void @llvm.dbg.value(metadata i32 undef, metadata !4529, metadata !DIExpression()), !dbg !4651
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4779
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4780

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4781
  call void @llvm.dbg.value(metadata i32 %188, metadata !4604, metadata !DIExpression()), !dbg !4782
  %189 = icmp slt i32 %188, 0, !dbg !4783
  %190 = add i32 %29, 1, !dbg !4781
  call void @llvm.dbg.value(metadata i32 undef, metadata !4529, metadata !DIExpression()), !dbg !4651
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4785
  call void @llvm.dbg.value(metadata i8* %192, metadata !4592, metadata !DIExpression()), !dbg !4665
  %193 = icmp sgt i32 %76, -1, !dbg !4786
  br i1 %193, label %194, label %196, !dbg !4788

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4789
  call void @llvm.dbg.value(metadata i32 %195, metadata !4607, metadata !DIExpression()), !dbg !4791
  br label %241, !dbg !4792

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4793
  call void @llvm.dbg.value(metadata i32 %197, metadata !4607, metadata !DIExpression()), !dbg !4791
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4592, metadata !DIExpression()), !dbg !4665
  %199 = load i64, i64* %20, align 8, !dbg !4795
  %200 = trunc i64 %199 to i8, !dbg !4796
  store i8 %200, i8* %10, align 1, !dbg !4797
  call void @llvm.dbg.value(metadata i8* %23, metadata !4593, metadata !DIExpression()), !dbg !4665
  br label %245, !dbg !4798

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4799
  %203 = icmp eq i24 %202, 0, !dbg !4799
  %204 = trunc i24 %75 to i8, !dbg !4801
  %205 = shl i8 %204, 1, !dbg !4801
  %206 = and i8 %205, 32, !dbg !4801
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4801
  call void @llvm.dbg.value(metadata i8 %207, metadata !4594, metadata !DIExpression()), !dbg !4665
  %208 = load i64, i64* %20, align 8, !dbg !4802
  call void @llvm.dbg.value(metadata i64 %208, metadata !4530, metadata !DIExpression()), !dbg !4651
  %209 = icmp slt i64 %208, 0, !dbg !4803
  br i1 %209, label %210, label %212, !dbg !4805

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4594, metadata !DIExpression()), !dbg !4665
  %211 = sub nsw i64 0, %208, !dbg !4806
  store i64 %211, i64* %20, align 8, !dbg !4808
  br label %212, !dbg !4809

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4665
  call void @llvm.dbg.value(metadata i8 %213, metadata !4594, metadata !DIExpression()), !dbg !4665
  %214 = load i64, i64* %20, align 8, !dbg !4810
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4811
  call void @llvm.dbg.value(metadata i8* %215, metadata !4592, metadata !DIExpression()), !dbg !4665
  br label %216, !dbg !4812

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4813
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4814
  call void @llvm.dbg.value(metadata i8* %218, metadata !4592, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i8 %217, metadata !4594, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.label(metadata !4650), !dbg !4815
  %219 = icmp sgt i32 %76, -1, !dbg !4816
  br i1 %219, label %222, label %220, !dbg !4817

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4818
  br label %245, !dbg !4817

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4820
  %224 = sub i32 %22, %223, !dbg !4820
  call void @llvm.dbg.value(metadata i32 %224, metadata !4609, metadata !DIExpression()), !dbg !4821
  %225 = load i24, i24* %15, align 8, !dbg !4822
  %226 = and i24 %225, -65, !dbg !4822
  store i24 %226, i24* %15, align 8, !dbg !4822
  %227 = icmp ugt i32 %76, %224, !dbg !4823
  br i1 %227, label %228, label %245, !dbg !4825

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4826
  store i32 %229, i32* %16, align 4, !dbg !4828
  br label %245, !dbg !4829

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4830
  %232 = icmp eq i8* %231, null, !dbg !4832
  br i1 %232, label %245, label %233, !dbg !4833

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4834
  %235 = zext i32 %234 to i64, !dbg !4834
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4836
  call void @llvm.dbg.value(metadata i8* %236, metadata !4592, metadata !DIExpression()), !dbg !4665
  %237 = load i24, i24* %15, align 8, !dbg !4837
  %238 = or i24 %237, 1048576, !dbg !4837
  store i24 %238, i24* %15, align 8, !dbg !4837
  store i8 120, i8* %21, align 1, !dbg !4838
  br label %216, !dbg !4839

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4840
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4843
  br label %363, !dbg !4844

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4845
  call void @llvm.dbg.value(metadata i32 %242, metadata !4607, metadata !DIExpression()), !dbg !4791
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4846
  call void @llvm.dbg.value(metadata i32 -1, metadata !4591, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i32 %29, metadata !4529, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8* %192, metadata !4592, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i8* %243, metadata !4593, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i8 0, metadata !4594, metadata !DIExpression()), !dbg !4665
  %244 = icmp eq i8* %192, null, !dbg !4847
  br i1 %244, label %363, label %245, !dbg !4849, !llvm.loop !4661

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4818
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4665
  call void @llvm.dbg.value(metadata i32 0, metadata !4613, metadata !DIExpression()), !dbg !4665
  %250 = zext i8 %249 to i32, !dbg !4850
  %251 = icmp eq i8 %249, 0, !dbg !4852
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4665
  call void @llvm.dbg.value(metadata i32 undef, metadata !4612, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4665
  call void @llvm.dbg.value(metadata i32 undef, metadata !4612, metadata !DIExpression()), !dbg !4665
  %252 = icmp sgt i32 %58, 0, !dbg !4853
  br i1 %252, label %253, label %302, !dbg !4854

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4818
  %255 = icmp eq i24 %254, 0, !dbg !4818
  %256 = ptrtoint i8* %248 to i32, !dbg !4855
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4665
  %257 = ptrtoint i8* %247 to i32, !dbg !4855
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4665
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4665
  %258 = xor i1 %251, true, !dbg !4856
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4665
  %259 = sext i1 %258 to i32, !dbg !4856
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4665
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4665
  %260 = lshr i24 %246, 19, !dbg !4857
  %261 = and i24 %260, 1, !dbg !4857
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4857
  %263 = zext i24 %262 to i32, !dbg !4857
  %264 = add i32 %257, %259, !dbg !4857
  %265 = add i32 %256, %263, !dbg !4857
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4665
  %266 = and i24 %246, 4194304, !dbg !4858
  %267 = icmp eq i24 %266, 0, !dbg !4858
  %268 = load i32, i32* %16, align 4, !dbg !4860
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4665
  call void @llvm.dbg.value(metadata i32 undef, metadata !4612, metadata !DIExpression()), !dbg !4665
  %269 = load i32, i32* %17, align 8, !dbg !4861
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4861
  call void @llvm.dbg.value(metadata i32 undef, metadata !4612, metadata !DIExpression()), !dbg !4665
  %271 = add i32 %264, %58, !dbg !4861
  %272 = add i32 %265, %268, !dbg !4861
  %273 = add i32 %272, %270, !dbg !4862
  %274 = sub i32 %271, %273, !dbg !4862
  call void @llvm.dbg.value(metadata i32 %274, metadata !4590, metadata !DIExpression()), !dbg !4665
  %275 = and i24 %246, 4, !dbg !4863
  %276 = icmp eq i24 %275, 0, !dbg !4863
  br i1 %276, label %277, label %302, !dbg !4864

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4614, metadata !DIExpression()), !dbg !4865
  %278 = and i24 %246, 64, !dbg !4866
  %279 = icmp eq i24 %278, 0, !dbg !4866
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4867
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4867
  %282 = select i1 %279, i32 32, i32 48, !dbg !4867
  br i1 %280, label %287, label %283, !dbg !4867

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4868
  call void @llvm.dbg.value(metadata i32 %284, metadata !4619, metadata !DIExpression()), !dbg !4869
  %285 = icmp slt i32 %284, 0, !dbg !4870
  %286 = add i32 %29, 1, !dbg !4868
  call void @llvm.dbg.value(metadata i32 undef, metadata !4529, metadata !DIExpression()), !dbg !4651
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4665
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4655
  call void @llvm.dbg.value(metadata i32 %290, metadata !4529, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8 undef, metadata !4614, metadata !DIExpression()), !dbg !4865
  call void @llvm.dbg.value(metadata i8 %288, metadata !4594, metadata !DIExpression()), !dbg !4665
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4872
  %292 = add i32 %291, -1, !dbg !4872
  br label %293, !dbg !4872

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4873
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4655
  call void @llvm.dbg.value(metadata i32 %295, metadata !4529, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i32 %294, metadata !4590, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i32 %294, metadata !4590, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4665
  %296 = icmp sgt i32 %294, 0, !dbg !4874
  br i1 %296, label %297, label %302, !dbg !4872

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4875
  call void @llvm.dbg.value(metadata i32 %298, metadata !4590, metadata !DIExpression()), !dbg !4665
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4876
  call void @llvm.dbg.value(metadata i32 %299, metadata !4625, metadata !DIExpression()), !dbg !4877
  %300 = icmp slt i32 %299, 0, !dbg !4878
  %301 = add i32 %295, 1, !dbg !4876
  call void @llvm.dbg.value(metadata i32 undef, metadata !4529, metadata !DIExpression()), !dbg !4651
  br i1 %300, label %361, label %293, !llvm.loop !4880

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4665
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4665
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4655
  call void @llvm.dbg.value(metadata i32 %305, metadata !4529, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i32 %304, metadata !4590, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i8 %303, metadata !4594, metadata !DIExpression()), !dbg !4665
  %306 = icmp eq i8 %303, 0, !dbg !4882
  br i1 %306, label %312, label %307, !dbg !4883

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4884
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4885
  call void @llvm.dbg.value(metadata i32 %309, metadata !4628, metadata !DIExpression()), !dbg !4886
  %310 = icmp slt i32 %309, 0, !dbg !4887
  %311 = add i32 %305, 1, !dbg !4885
  call void @llvm.dbg.value(metadata i32 undef, metadata !4529, metadata !DIExpression()), !dbg !4651
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4655
  call void @llvm.dbg.value(metadata i32 %313, metadata !4529, metadata !DIExpression()), !dbg !4651
  %314 = lshr i24 %246, 20, !dbg !4889
  %315 = lshr i24 %246, 19, !dbg !4890
  %316 = or i24 %314, %315, !dbg !4891
  %317 = and i24 %316, 1, !dbg !4891
  %318 = icmp eq i24 %317, 0, !dbg !4891
  br i1 %318, label %323, label %319, !dbg !4892

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4893
  call void @llvm.dbg.value(metadata i32 %320, metadata !4632, metadata !DIExpression()), !dbg !4894
  %321 = icmp slt i32 %320, 0, !dbg !4895
  %322 = add i32 %313, 1, !dbg !4893
  call void @llvm.dbg.value(metadata i32 undef, metadata !4529, metadata !DIExpression()), !dbg !4651
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4655
  call void @llvm.dbg.value(metadata i32 %324, metadata !4529, metadata !DIExpression()), !dbg !4651
  %325 = and i24 %246, 1048576, !dbg !4897
  %326 = icmp eq i24 %325, 0, !dbg !4897
  br i1 %326, label %333, label %327, !dbg !4898

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4899
  %329 = zext i8 %328 to i32, !dbg !4899
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %330, metadata !4638, metadata !DIExpression()), !dbg !4900
  %331 = icmp slt i32 %330, 0, !dbg !4901
  %332 = add i32 %324, 1, !dbg !4899
  call void @llvm.dbg.value(metadata i32 undef, metadata !4529, metadata !DIExpression()), !dbg !4651
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4655
  call void @llvm.dbg.value(metadata i32 %334, metadata !4529, metadata !DIExpression()), !dbg !4651
  %335 = load i32, i32* %16, align 4, !dbg !4903
  call void @llvm.dbg.value(metadata i32 %335, metadata !4613, metadata !DIExpression()), !dbg !4665
  br label %336, !dbg !4904

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4905
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4655
  call void @llvm.dbg.value(metadata i32 %338, metadata !4529, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i32 %337, metadata !4613, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4665
  %339 = icmp sgt i32 %337, 0, !dbg !4906
  br i1 %339, label %340, label %345, !dbg !4904

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4907
  call void @llvm.dbg.value(metadata i32 %341, metadata !4613, metadata !DIExpression()), !dbg !4665
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4908
  call void @llvm.dbg.value(metadata i32 %342, metadata !4642, metadata !DIExpression()), !dbg !4909
  %343 = icmp slt i32 %342, 0, !dbg !4910
  %344 = add i32 %338, 1, !dbg !4908
  call void @llvm.dbg.value(metadata i32 undef, metadata !4529, metadata !DIExpression()), !dbg !4651
  br i1 %343, label %361, label %336, !llvm.loop !4912

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4914
  call void @llvm.dbg.value(metadata i32 %346, metadata !4645, metadata !DIExpression()), !dbg !4915
  %347 = icmp slt i32 %346, 0, !dbg !4916
  call void @llvm.dbg.value(metadata i32 undef, metadata !4529, metadata !DIExpression()), !dbg !4651
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4914
  call void @llvm.dbg.value(metadata i32 %349, metadata !4529, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i32 %304, metadata !4590, metadata !DIExpression()), !dbg !4665
  %350 = icmp sgt i32 %304, 0, !dbg !4918
  br i1 %350, label %351, label %363, !dbg !4919

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4919
  %353 = add i32 %352, %338, !dbg !4919
  br label %354, !dbg !4919

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4529, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i32 %355, metadata !4590, metadata !DIExpression()), !dbg !4665
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4920
  call void @llvm.dbg.value(metadata i32 %356, metadata !4647, metadata !DIExpression()), !dbg !4921
  %357 = icmp slt i32 %356, 0, !dbg !4922
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4924
  call void @llvm.dbg.value(metadata i32 undef, metadata !4529, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4651
  call void @llvm.dbg.value(metadata i32 %359, metadata !4590, metadata !DIExpression()), !dbg !4665
  %360 = icmp sgt i32 %355, 1, !dbg !4918
  br i1 %360, label %354, label %363, !dbg !4919, !llvm.loop !4925

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4529, metadata !DIExpression()), !dbg !4651
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4662
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4655
  call void @llvm.dbg.value(metadata i32 %364, metadata !4529, metadata !DIExpression()), !dbg !4651
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4662
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4651
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4927
  ret i32 %366, !dbg !4927
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4928 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4932, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata i8* %1, metadata !4933, metadata !DIExpression()), !dbg !4934
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4935
  store i24 0, i24* %3, align 4, !dbg !4935
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4935
  store i8 0, i8* %4, align 1, !dbg !4935
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4935
  store i32 0, i32* %5, align 4, !dbg !4935
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4935
  store i32 0, i32* %6, align 4, !dbg !4935
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4936
  call void @llvm.dbg.value(metadata i8* %7, metadata !4933, metadata !DIExpression()), !dbg !4934
  %8 = load i8, i8* %7, align 1, !dbg !4937
  %9 = icmp eq i8 %8, 37, !dbg !4939
  br i1 %9, label %10, label %12, !dbg !4940

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4941
  call void @llvm.dbg.value(metadata i8* %11, metadata !4933, metadata !DIExpression()), !dbg !4934
  store i8 37, i8* %4, align 1, !dbg !4943
  br label %18, !dbg !4944

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4945
  call void @llvm.dbg.value(metadata i8* %13, metadata !4933, metadata !DIExpression()), !dbg !4934
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4946
  call void @llvm.dbg.value(metadata i8* %14, metadata !4933, metadata !DIExpression()), !dbg !4934
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4947
  call void @llvm.dbg.value(metadata i8* %15, metadata !4933, metadata !DIExpression()), !dbg !4934
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4948
  call void @llvm.dbg.value(metadata i8* %16, metadata !4933, metadata !DIExpression()), !dbg !4934
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4949
  call void @llvm.dbg.value(metadata i8* %17, metadata !4933, metadata !DIExpression()), !dbg !4934
  br label %18, !dbg !4950

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4934
  ret i8* %19, !dbg !4951
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4952 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4956, metadata !DIExpression()), !dbg !4963
  call void @llvm.dbg.value(metadata i8* %1, metadata !4957, metadata !DIExpression()), !dbg !4963
  call void @llvm.dbg.value(metadata i8* %2, metadata !4958, metadata !DIExpression()), !dbg !4963
  call void @llvm.dbg.value(metadata i8* %3, metadata !4959, metadata !DIExpression()), !dbg !4963
  call void @llvm.dbg.value(metadata i32 0, metadata !4960, metadata !DIExpression()), !dbg !4963
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4964

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4965
  call void @llvm.dbg.value(metadata i32 %9, metadata !4960, metadata !DIExpression()), !dbg !4963
  call void @llvm.dbg.value(metadata i8* %8, metadata !4958, metadata !DIExpression()), !dbg !4963
  %10 = icmp ult i8* %8, %3, !dbg !4966
  br i1 %10, label %11, label %13, !dbg !4967

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4968
  br label %17, !dbg !4967

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4969

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4970
  %16 = icmp eq i8 %15, 0, !dbg !4969
  br i1 %16, label %24, label %17, !dbg !4964

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4968
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4971
  call void @llvm.dbg.value(metadata i8* %19, metadata !4958, metadata !DIExpression()), !dbg !4963
  %20 = zext i8 %18 to i32, !dbg !4972
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4973
  call void @llvm.dbg.value(metadata i32 %21, metadata !4961, metadata !DIExpression()), !dbg !4974
  %22 = icmp slt i32 %21, 0, !dbg !4975
  %23 = add i32 %9, 1, !dbg !4977
  call void @llvm.dbg.value(metadata i32 undef, metadata !4960, metadata !DIExpression()), !dbg !4963
  br i1 %22, label %24, label %7, !llvm.loop !4978

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4963
  ret i32 %25, !dbg !4980
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4981 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4985, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4986, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i8* %2, metadata !4987, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i8* %3, metadata !4988, metadata !DIExpression()), !dbg !4995
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4996
  %6 = load i8, i8* %5, align 1, !dbg !4996
  %7 = zext i8 %6 to i32, !dbg !4997
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !4998
  %9 = icmp eq i32 %8, 0, !dbg !4998
  call void @llvm.dbg.value(metadata i1 %9, metadata !4989, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4995
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !4999
  call void @llvm.dbg.value(metadata i32 %10, metadata !4990, metadata !DIExpression()), !dbg !4995
  %11 = ptrtoint i8* %3 to i32, !dbg !5000
  %12 = ptrtoint i8* %2 to i32, !dbg !5000
  %13 = sub i32 %11, %12, !dbg !5000
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5001
  call void @llvm.dbg.value(metadata i8* %14, metadata !4992, metadata !DIExpression()), !dbg !4995
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5002

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4995
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4985, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i8* %18, metadata !4992, metadata !DIExpression()), !dbg !4995
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5003
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5004
  call void @llvm.dbg.value(metadata i32 %25, metadata !4993, metadata !DIExpression()), !dbg !5005
  %26 = icmp ult i32 %25, 10, !dbg !5006
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5007
  %28 = add i32 %27, %25, !dbg !5005
  %29 = trunc i32 %28 to i8, !dbg !5007
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5008
  call void @llvm.dbg.value(metadata i8* %30, metadata !4992, metadata !DIExpression()), !dbg !4995
  store i8 %29, i8* %30, align 1, !dbg !5009
  call void @llvm.dbg.value(metadata i64 %22, metadata !4985, metadata !DIExpression()), !dbg !4995
  %31 = icmp uge i64 %19, %15, !dbg !5010
  %32 = icmp ugt i8* %30, %2, !dbg !5011
  %33 = and i1 %31, %32, !dbg !5011
  br i1 %33, label %17, label %34, !dbg !5012, !llvm.loop !5013

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5015
  %36 = load i24, i24* %35, align 4, !dbg !5015
  %37 = and i24 %36, 32, !dbg !5015
  %38 = icmp eq i24 %37, 0, !dbg !5015
  br i1 %38, label %44, label %39, !dbg !5017

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5018

40:                                               ; preds = %39
  br label %41, !dbg !5020

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5024
  store i24 %43, i24* %35, align 4, !dbg !5024
  br label %44, !dbg !5025

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5025
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !5026 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5032, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i8* %1, metadata !5033, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i32 %2, metadata !5034, metadata !DIExpression()), !dbg !5035
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5036
  %5 = load i24, i24* %4, align 4, !dbg !5036
  %6 = lshr i24 %5, 11, !dbg !5036
  %7 = and i24 %6, 15, !dbg !5036
  %8 = zext i24 %7 to i32, !dbg !5036
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5037

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5038
  store i32 %2, i32* %10, align 4, !dbg !5040
  br label %28, !dbg !5041

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5042
  store i8 %12, i8* %1, align 1, !dbg !5043
  br label %28, !dbg !5044

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5045
  %15 = bitcast i8* %1 to i16*, !dbg !5046
  store i16 %14, i16* %15, align 2, !dbg !5047
  br label %28, !dbg !5048

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5049
  store i32 %2, i32* %17, align 4, !dbg !5050
  br label %28, !dbg !5051

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5052
  %20 = bitcast i8* %1 to i64*, !dbg !5053
  store i64 %19, i64* %20, align 8, !dbg !5054
  br label %28, !dbg !5055

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5056
  %23 = bitcast i8* %1 to i64*, !dbg !5057
  store i64 %22, i64* %23, align 8, !dbg !5058
  br label %28, !dbg !5059

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5060
  store i32 %2, i32* %25, align 4, !dbg !5061
  br label %28, !dbg !5062

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5063
  store i32 %2, i32* %27, align 4, !dbg !5064
  br label %28, !dbg !5065

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5066
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5070, metadata !DIExpression()), !dbg !5071
  %2 = add i32 %0, -65, !dbg !5072
  %3 = icmp ult i32 %2, 26, !dbg !5073
  %4 = zext i1 %3 to i32, !dbg !5073
  ret i32 %4, !dbg !5074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5075 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5079, metadata !DIExpression()), !dbg !5080
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5081

2:                                                ; preds = %1
  br label %4, !dbg !5082

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5084

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5085
  ret i32 %5, !dbg !5086
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5087 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5089, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %1, metadata !5090, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8 1, metadata !5091, metadata !DIExpression()), !dbg !5092
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5093

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5091, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %5, metadata !5090, metadata !DIExpression()), !dbg !5092
  %6 = load i8, i8* %5, align 1, !dbg !5094
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5096

7:                                                ; preds = %4
  br label %11, !dbg !5097

8:                                                ; preds = %4
  br label %11, !dbg !5099

9:                                                ; preds = %4
  br label %11, !dbg !5100

10:                                               ; preds = %4
  br label %11, !dbg !5101

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5102
  %14 = or i24 %13, %12, !dbg !5102
  store i24 %14, i24* %3, align 4, !dbg !5102
  call void @llvm.dbg.value(metadata i8 poison, metadata !5091, metadata !DIExpression()), !dbg !5092
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5090, metadata !DIExpression()), !dbg !5092
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5091, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %15, metadata !5090, metadata !DIExpression()), !dbg !5092
  %17 = load i24, i24* %3, align 4, !dbg !5103
  %18 = and i24 %17, 68, !dbg !5105
  %19 = icmp eq i24 %18, 68, !dbg !5105
  br i1 %19, label %20, label %22, !dbg !5105

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5106
  store i24 %21, i24* %3, align 4, !dbg !5106
  br label %22, !dbg !5108

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5109
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5110 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5112, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata i8* %1, metadata !5113, metadata !DIExpression()), !dbg !5116
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5117
  %5 = load i24, i24* %4, align 4, !dbg !5118
  %6 = or i24 %5, 128, !dbg !5118
  store i24 %6, i24* %4, align 4, !dbg !5118
  call void @llvm.dbg.value(metadata i8* %1, metadata !5113, metadata !DIExpression()), !dbg !5116
  %7 = load i8, i8* %1, align 1, !dbg !5119
  %8 = icmp eq i8 %7, 42, !dbg !5121
  br i1 %8, label %9, label %12, !dbg !5122

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5123
  store i24 %10, i24* %4, align 4, !dbg !5123
  call void @llvm.dbg.value(metadata i8* %1, metadata !5113, metadata !DIExpression()), !dbg !5116
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5125
  call void @llvm.dbg.value(metadata i8* %11, metadata !5113, metadata !DIExpression()), !dbg !5116
  store i8* %11, i8** %3, align 4, !dbg !5125
  br label %29, !dbg !5126

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5114, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata i8** %3, metadata !5113, metadata !DIExpression(DW_OP_deref)), !dbg !5116
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5127
  call void @llvm.dbg.value(metadata i32 %13, metadata !5115, metadata !DIExpression()), !dbg !5116
  %14 = load i8*, i8** %3, align 4, !dbg !5128
  call void @llvm.dbg.value(metadata i8* %14, metadata !5113, metadata !DIExpression()), !dbg !5116
  %15 = icmp eq i8* %14, %1, !dbg !5130
  br i1 %15, label %29, label %16, !dbg !5131

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5132
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5134
  store i32 %13, i32* %18, align 4, !dbg !5135
  %19 = lshr i32 %13, 31, !dbg !5136
  %20 = lshr i24 %17, 1, !dbg !5137
  %21 = and i24 %20, 1, !dbg !5137
  %22 = zext i24 %21 to i32, !dbg !5137
  %23 = or i32 %19, %22, !dbg !5137
  %24 = trunc i32 %23 to i24, !dbg !5137
  %25 = shl nuw nsw i24 %24, 1, !dbg !5137
  %26 = and i24 %17, -131, !dbg !5137
  %27 = or i24 %26, 128, !dbg !5137
  %28 = or i24 %25, %27, !dbg !5137
  store i24 %28, i24* %4, align 4, !dbg !5137
  br label %29, !dbg !5138

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5116
  ret i8* %30, !dbg !5139
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5140 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5142, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.value(metadata i8* %1, metadata !5143, metadata !DIExpression()), !dbg !5145
  %4 = load i8, i8* %1, align 1, !dbg !5146
  %5 = icmp eq i8 %4, 46, !dbg !5147
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5148
  %7 = load i24, i24* %6, align 4, !dbg !5149
  %8 = select i1 %5, i24 512, i24 0, !dbg !5149
  %9 = and i24 %7, -513, !dbg !5149
  %10 = or i24 %9, %8, !dbg !5149
  store i24 %10, i24* %6, align 4, !dbg !5149
  br i1 %5, label %11, label %32, !dbg !5150

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5143, metadata !DIExpression()), !dbg !5145
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5151
  call void @llvm.dbg.value(metadata i8* %12, metadata !5143, metadata !DIExpression()), !dbg !5145
  store i8* %12, i8** %3, align 4, !dbg !5151
  %13 = load i8, i8* %12, align 1, !dbg !5152
  %14 = icmp eq i8 %13, 42, !dbg !5154
  br i1 %14, label %15, label %18, !dbg !5155

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5156
  store i24 %16, i24* %6, align 4, !dbg !5156
  call void @llvm.dbg.value(metadata i8* %12, metadata !5143, metadata !DIExpression()), !dbg !5145
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5158
  call void @llvm.dbg.value(metadata i8* %17, metadata !5143, metadata !DIExpression()), !dbg !5145
  store i8* %17, i8** %3, align 4, !dbg !5158
  br label %32, !dbg !5159

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5143, metadata !DIExpression(DW_OP_deref)), !dbg !5145
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5160
  call void @llvm.dbg.value(metadata i32 %19, metadata !5144, metadata !DIExpression()), !dbg !5145
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5161
  store i32 %19, i32* %20, align 4, !dbg !5162
  %21 = lshr i32 %19, 31, !dbg !5163
  %22 = load i24, i24* %6, align 4, !dbg !5164
  %23 = lshr i24 %22, 1, !dbg !5164
  %24 = and i24 %23, 1, !dbg !5164
  %25 = zext i24 %24 to i32, !dbg !5164
  %26 = or i32 %21, %25, !dbg !5164
  %27 = trunc i32 %26 to i24, !dbg !5164
  %28 = shl nuw nsw i24 %27, 1, !dbg !5164
  %29 = and i24 %22, -3, !dbg !5164
  %30 = or i24 %28, %29, !dbg !5164
  store i24 %30, i24* %6, align 4, !dbg !5164
  %31 = load i8*, i8** %3, align 4, !dbg !5165
  call void @llvm.dbg.value(metadata i8* %31, metadata !5143, metadata !DIExpression()), !dbg !5145
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5145
  ret i8* %33, !dbg !5166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5167 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5169, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i8* %1, metadata !5170, metadata !DIExpression()), !dbg !5171
  %3 = load i8, i8* %1, align 1, !dbg !5172
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5173

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5174
  call void @llvm.dbg.value(metadata i8* %5, metadata !5170, metadata !DIExpression()), !dbg !5171
  %6 = load i8, i8* %5, align 1, !dbg !5177
  %7 = icmp eq i8 %6, 104, !dbg !5178
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5179
  %9 = load i24, i24* %8, align 4, !dbg !5179
  %10 = and i24 %9, -30721, !dbg !5179
  br i1 %7, label %11, label %14, !dbg !5180

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5181
  store i24 %12, i24* %8, align 4, !dbg !5181
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5183
  call void @llvm.dbg.value(metadata i8* %13, metadata !5170, metadata !DIExpression()), !dbg !5171
  br label %56, !dbg !5184

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5185
  store i24 %15, i24* %8, align 4, !dbg !5185
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5187
  call void @llvm.dbg.value(metadata i8* %17, metadata !5170, metadata !DIExpression()), !dbg !5171
  %18 = load i8, i8* %17, align 1, !dbg !5189
  %19 = icmp eq i8 %18, 108, !dbg !5190
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5191
  %21 = load i24, i24* %20, align 4, !dbg !5191
  %22 = and i24 %21, -30721, !dbg !5191
  br i1 %19, label %23, label %26, !dbg !5192

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5193
  store i24 %24, i24* %20, align 4, !dbg !5193
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5195
  call void @llvm.dbg.value(metadata i8* %25, metadata !5170, metadata !DIExpression()), !dbg !5171
  br label %56, !dbg !5196

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5197
  store i24 %27, i24* %20, align 4, !dbg !5197
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5199
  %30 = load i24, i24* %29, align 4, !dbg !5200
  %31 = and i24 %30, -30721, !dbg !5200
  %32 = or i24 %31, 10240, !dbg !5200
  store i24 %32, i24* %29, align 4, !dbg !5200
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5201
  call void @llvm.dbg.value(metadata i8* %33, metadata !5170, metadata !DIExpression()), !dbg !5171
  br label %56, !dbg !5202

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5203
  %36 = load i24, i24* %35, align 4, !dbg !5204
  %37 = and i24 %36, -30721, !dbg !5204
  %38 = or i24 %37, 12288, !dbg !5204
  store i24 %38, i24* %35, align 4, !dbg !5204
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5205
  call void @llvm.dbg.value(metadata i8* %39, metadata !5170, metadata !DIExpression()), !dbg !5171
  br label %56, !dbg !5206

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5207
  %42 = load i24, i24* %41, align 4, !dbg !5208
  %43 = and i24 %42, -30721, !dbg !5208
  %44 = or i24 %43, 14336, !dbg !5208
  store i24 %44, i24* %41, align 4, !dbg !5208
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5209
  call void @llvm.dbg.value(metadata i8* %45, metadata !5170, metadata !DIExpression()), !dbg !5171
  br label %56, !dbg !5210

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5211
  %48 = load i24, i24* %47, align 4, !dbg !5212
  %49 = and i24 %48, -30723, !dbg !5212
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5213
  call void @llvm.dbg.value(metadata i8* %50, metadata !5170, metadata !DIExpression()), !dbg !5171
  %51 = or i24 %49, 16386, !dbg !5214
  store i24 %51, i24* %47, align 4, !dbg !5214
  br label %56, !dbg !5215

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5216
  %54 = load i24, i24* %53, align 4, !dbg !5217
  %55 = and i24 %54, -30721, !dbg !5217
  store i24 %55, i24* %53, align 4, !dbg !5217
  br label %56, !dbg !5218

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5170, metadata !DIExpression()), !dbg !5171
  ret i8* %57, !dbg !5219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5220 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5222, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i8* %1, metadata !5223, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i8 0, metadata !5224, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i8* %1, metadata !5223, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5227
  %3 = load i8, i8* %1, align 1, !dbg !5228
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5229
  store i8 %3, i8* %4, align 1, !dbg !5230
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5231

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5232

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5233
  %9 = load i24, i24* %8, align 4, !dbg !5233
  %10 = and i24 %9, -458753, !dbg !5233
  %11 = or i24 %10, %7, !dbg !5233
  call void @llvm.dbg.label(metadata !5225), !dbg !5234
  %12 = and i24 %9, 30720, !dbg !5235
  %13 = icmp eq i24 %12, 16384, !dbg !5235
  %14 = zext i1 %13 to i24, !dbg !5237
  %15 = or i24 %11, %14, !dbg !5237
  %16 = icmp eq i8 %3, 99, !dbg !5238
  br i1 %16, label %17, label %43, !dbg !5240

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5241
  %19 = icmp ne i24 %18, 0, !dbg !5241
  call void @llvm.dbg.value(metadata i1 %19, metadata !5224, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5227
  br label %43, !dbg !5243

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5244
  %22 = load i24, i24* %21, align 4, !dbg !5245
  %23 = and i24 %22, -458753, !dbg !5245
  %24 = or i24 %23, 262144, !dbg !5245
  call void @llvm.dbg.value(metadata i8 1, metadata !5224, metadata !DIExpression()), !dbg !5227
  br label %43, !dbg !5246

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5249
  %27 = load i24, i24* %26, align 4, !dbg !5250
  %28 = and i24 %27, -458753, !dbg !5250
  %29 = or i24 %28, 196608, !dbg !5250
  %30 = and i24 %27, 30720, !dbg !5251
  %31 = icmp eq i24 %30, 16384, !dbg !5251
  br label %43, !dbg !5253

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5254
  %34 = load i24, i24* %33, align 4, !dbg !5255
  %35 = and i24 %34, -458753, !dbg !5255
  %36 = or i24 %35, 196608, !dbg !5255
  %37 = and i24 %34, 30720, !dbg !5256
  %38 = icmp ne i24 %37, 0, !dbg !5256
  br label %43, !dbg !5258

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5259
  %41 = load i24, i24* %40, align 4, !dbg !5260
  %42 = or i24 %41, 1, !dbg !5260
  br label %43, !dbg !5261

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5262
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5263
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5264
  call void @llvm.dbg.value(metadata i8* %48, metadata !5223, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i8 poison, metadata !5224, metadata !DIExpression()), !dbg !5227
  %49 = lshr i24 %44, 1, !dbg !5262
  %50 = and i24 %49, 1, !dbg !5262
  %51 = zext i24 %50 to i32, !dbg !5262
  %52 = or i32 %51, %47, !dbg !5262
  %53 = trunc i32 %52 to i24, !dbg !5262
  %54 = shl nuw nsw i24 %53, 1, !dbg !5262
  %55 = and i24 %44, -3, !dbg !5262
  %56 = or i24 %54, %55, !dbg !5262
  store i24 %56, i24* %46, align 4, !dbg !5262
  ret i8* %48, !dbg !5265
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5266 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5271, metadata !DIExpression()), !dbg !5274
  %2 = load i8*, i8** %0, align 4, !dbg !5275
  call void @llvm.dbg.value(metadata i8* %2, metadata !5272, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i32 0, metadata !5273, metadata !DIExpression()), !dbg !5274
  %3 = load i8, i8* %2, align 1, !dbg !5276
  %4 = zext i8 %3 to i32, !dbg !5277
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5278
  %6 = icmp eq i32 %5, 0, !dbg !5279
  br i1 %6, label %19, label %7, !dbg !5279

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5273, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i8* %10, metadata !5272, metadata !DIExpression()), !dbg !5274
  %11 = mul i32 %9, 10, !dbg !5280
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5282
  call void @llvm.dbg.value(metadata i8* %12, metadata !5272, metadata !DIExpression()), !dbg !5274
  %13 = add i32 %11, -48, !dbg !5283
  %14 = add i32 %13, %8, !dbg !5284
  call void @llvm.dbg.value(metadata i32 %14, metadata !5273, metadata !DIExpression()), !dbg !5274
  %15 = load i8, i8* %12, align 1, !dbg !5276
  %16 = zext i8 %15 to i32, !dbg !5277
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5278
  %18 = icmp eq i32 %17, 0, !dbg !5279
  br i1 %18, label %19, label %7, !dbg !5279, !llvm.loop !5285

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5274
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5274
  store i8* %20, i8** %0, align 4, !dbg !5287
  ret i32 %21, !dbg !5288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5291, metadata !DIExpression()), !dbg !5292
  %2 = add i32 %0, -48, !dbg !5293
  %3 = icmp ult i32 %2, 10, !dbg !5294
  %4 = zext i1 %3 to i32, !dbg !5294
  ret i32 %4, !dbg !5295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5296 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #24, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #24, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #24, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #24, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #24, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #24, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #24, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #24, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #24, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #24, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #24, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #24, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #24, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS\0A\09.equ\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,1\0A\09.type\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,%object", ""() #24, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #24, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #24, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR\0A\09.equ\09CONFIG_CONSOLE_GETCHAR,1\0A\09.type\09CONFIG_CONSOLE_GETCHAR,%object", ""() #24, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,16\0A\09.type\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,%object", ""() #24, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,16\0A\09.type\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,%object", ""() #24, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !5872, !srcloc !5873
  ret void, !dbg !5874
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5875 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5877, metadata !DIExpression()), !dbg !5879
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !5880
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !5881
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5882, !srcloc !5891
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5882
  call void @llvm.dbg.value(metadata i32 %3, metadata !5888, metadata !DIExpression()) #24, !dbg !5892
  call void @llvm.dbg.value(metadata i32 undef, metadata !5889, metadata !DIExpression()) #24, !dbg !5892
  call void @llvm.dbg.value(metadata i32 %3, metadata !5878, metadata !DIExpression()), !dbg !5879
  call void @llvm.dbg.value(metadata i32 %3, metadata !5893, metadata !DIExpression()) #24, !dbg !5898
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !5900, !srcloc !5901
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5902
  ret i32 0, !dbg !5903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5904 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5906
  %2 = or i32 %1, 512, !dbg !5906
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5906
  ret void, !dbg !5907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5908 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5909
  %2 = or i32 %1, 1024, !dbg !5909
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5909
  ret void, !dbg !5910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5911 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5913, metadata !DIExpression()), !dbg !5914
  ret i32 0, !dbg !5915
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_write(%struct.tty_serial* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5916 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5962, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i8* %1, metadata !5963, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %2, metadata !5964, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i8* %1, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 0, metadata !5966, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 0, metadata !5967, metadata !DIExpression()), !dbg !5968
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5969
  %5 = load i32, i32* %4, align 4, !dbg !5969
  %6 = icmp eq i32 %5, 0, !dbg !5971
  %7 = icmp eq i32 %2, 0, !dbg !5968
  br i1 %6, label %9, label %8, !dbg !5972

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !5966, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i8* %1, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %2, metadata !5964, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %2, metadata !5964, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5968
  br i1 %7, label %37, label %20, !dbg !5973

9:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %2, metadata !5964, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %2, metadata !5964, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5968
  br i1 %7, label %37, label %10, !dbg !5974

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %12, !dbg !5974

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %1, %10 ], [ %17, %12 ]
  %14 = phi i32 [ %2, %10 ], [ %15, %12 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %14, metadata !5964, metadata !DIExpression()), !dbg !5968
  %15 = add i32 %14, -1, !dbg !5976
  call void @llvm.dbg.value(metadata i32 %15, metadata !5964, metadata !DIExpression()), !dbg !5968
  %16 = load %struct.device*, %struct.device** %11, align 4, !dbg !5977
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5979
  call void @llvm.dbg.value(metadata i8* %17, metadata !5965, metadata !DIExpression()), !dbg !5968
  %18 = load i8, i8* %13, align 1, !dbg !5980
  tail call fastcc void @uart_poll_out(%struct.device* noundef %16, i8 noundef zeroext %18) #26, !dbg !5981
  call void @llvm.dbg.value(metadata i32 %15, metadata !5964, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5968
  %19 = icmp eq i32 %15, 0, !dbg !5974
  br i1 %19, label %37, label %12, !dbg !5974, !llvm.loop !5982

20:                                               ; preds = %8, %33
  %21 = phi i32 [ %24, %33 ], [ %2, %8 ]
  %22 = phi i32 [ %35, %33 ], [ 0, %8 ]
  %23 = phi i8* [ %34, %33 ], [ %1, %8 ]
  %24 = add i32 %21, -1, !dbg !5984
  call void @llvm.dbg.value(metadata i32 %22, metadata !5966, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i8* %23, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i8* %23, metadata !5965, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5968
  %25 = load i8, i8* %23, align 1, !dbg !5985
  %26 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %25) #26, !dbg !5987
  call void @llvm.dbg.value(metadata i32 %26, metadata !5967, metadata !DIExpression()), !dbg !5968
  %27 = icmp slt i32 %26, 0, !dbg !5988
  br i1 %27, label %28, label %33, !dbg !5990

28:                                               ; preds = %20
  %29 = icmp eq i32 %22, 0, !dbg !5991
  br i1 %29, label %30, label %37, !dbg !5994

30:                                               ; preds = %28
  %31 = sub nsw i32 0, %26, !dbg !5995
  %32 = tail call fastcc i32* @z_errno() #26, !dbg !5997
  store i32 %31, i32* %32, align 4, !dbg !5998
  br label %37, !dbg !5999

33:                                               ; preds = %20
  %34 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6000
  call void @llvm.dbg.value(metadata i8* %34, metadata !5965, metadata !DIExpression()), !dbg !5968
  %35 = add nuw i32 %22, 1, !dbg !6001
  call void @llvm.dbg.value(metadata i32 %35, metadata !5966, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %24, metadata !5964, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %24, metadata !5964, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5968
  %36 = icmp eq i32 %24, 0, !dbg !5973
  br i1 %36, label %37, label %20, !dbg !5973, !llvm.loop !6002

37:                                               ; preds = %33, %12, %8, %9, %28, %30
  %38 = phi i32 [ %26, %30 ], [ %22, %28 ], [ 0, %9 ], [ 0, %8 ], [ %2, %12 ], [ %2, %33 ], !dbg !5968
  ret i32 %38, !dbg !6004
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6005 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6008, metadata !DIExpression()), !dbg !6010
  call void @llvm.dbg.value(metadata i8 %1, metadata !6009, metadata !DIExpression()), !dbg !6010
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6011, !srcloc !6013
  tail call fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) #26, !dbg !6014
  ret void, !dbg !6015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6016 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6020, metadata !DIExpression()), !dbg !6025
  call void @llvm.dbg.value(metadata i8 %1, metadata !6021, metadata !DIExpression()), !dbg !6025
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !6026
  %4 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !6027
  br i1 %4, label %14, label %5, !dbg !6027

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !6028
  %7 = load i32, i32* %6, align 4, !dbg !6028
  %8 = icmp eq i32 %7, -1, !dbg !6028
  br i1 %8, label %14, label %9, !dbg !6028

9:                                                ; preds = %5
  %10 = icmp sgt i32 %7, 0, !dbg !6028
  %11 = select i1 %10, i32 %7, i32 0, !dbg !6028
  %12 = zext i32 %11 to i64, !dbg !6028
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %12) #26, !dbg !6028
  br label %14, !dbg !6028

14:                                               ; preds = %5, %2, %9
  %15 = phi i64 [ %13, %9 ], [ 0, %2 ], [ -1, %5 ], !dbg !6025
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !6029
  %17 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %3, [1 x i64] %16) #26, !dbg !6029
  call void @llvm.dbg.value(metadata i32 %17, metadata !6024, metadata !DIExpression()), !dbg !6025
  %18 = icmp slt i32 %17, 0, !dbg !6030
  br i1 %18, label %42, label %19, !dbg !6032

19:                                               ; preds = %14
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6033, !srcloc !6039
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !6033
  call void @llvm.dbg.value(metadata i32 %21, metadata !6036, metadata !DIExpression()) #24, !dbg !6040
  call void @llvm.dbg.value(metadata i32 undef, metadata !6037, metadata !DIExpression()) #24, !dbg !6040
  call void @llvm.dbg.value(metadata i32 %21, metadata !6022, metadata !DIExpression()), !dbg !6025
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !6041
  %23 = load i16, i16* %22, align 2, !dbg !6041
  %24 = zext i16 %23 to i32, !dbg !6042
  %25 = add nuw nsw i32 %24, 1, !dbg !6043
  call void @llvm.dbg.value(metadata i32 %25, metadata !6023, metadata !DIExpression()), !dbg !6025
  %26 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6044
  %27 = load i32, i32* %26, align 4, !dbg !6044
  %28 = icmp ult i32 %25, %27, !dbg !6046
  %29 = select i1 %28, i32 %25, i32 0, !dbg !6047
  call void @llvm.dbg.value(metadata i32 %29, metadata !6023, metadata !DIExpression()), !dbg !6025
  %30 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !6048
  %31 = load i16, i16* %30, align 4, !dbg !6048
  %32 = zext i16 %31 to i32, !dbg !6050
  %33 = icmp eq i32 %29, %32, !dbg !6051
  br i1 %33, label %34, label %35, !dbg !6052

34:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 %21, metadata !6053, metadata !DIExpression()) #24, !dbg !6056
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !6059, !srcloc !6060
  br label %42, !dbg !6061

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6062
  %37 = load i8*, i8** %36, align 4, !dbg !6062
  %38 = getelementptr inbounds i8, i8* %37, i32 %24, !dbg !6063
  store i8 %1, i8* %38, align 1, !dbg !6064
  %39 = trunc i32 %29 to i16, !dbg !6065
  store i16 %39, i16* %22, align 2, !dbg !6066
  call void @llvm.dbg.value(metadata i32 %21, metadata !6053, metadata !DIExpression()) #24, !dbg !6067
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !6069, !srcloc !6060
  %40 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6070
  %41 = load %struct.device*, %struct.device** %40, align 4, !dbg !6070
  tail call fastcc void @uart_irq_tx_enable(%struct.device* noundef %41) #26, !dbg !6071
  br label %42, !dbg !6072

42:                                               ; preds = %14, %35, %34
  %43 = phi i32 [ -28, %34 ], [ 0, %35 ], [ %17, %14 ], !dbg !6025
  ret i32 %43, !dbg !6073
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32* @z_errno() unnamed_addr #1 !dbg !6074 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6078, !srcloc !6080
  %1 = tail call i32* @z_impl_z_errno() #25, !dbg !6081
  ret i32* %1, !dbg !6082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !6083 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6088, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i64 %0, metadata !6090, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i32 1000, metadata !6095, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i32 10000, metadata !6096, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i8 1, metadata !6097, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i8 0, metadata !6098, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i8 1, metadata !6099, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i8 0, metadata !6100, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i8 1, metadata !6101, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i8 0, metadata !6102, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i64 0, metadata !6103, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i64 0, metadata !6103, metadata !DIExpression()), !dbg !6107
  %2 = mul i64 %0, 10, !dbg !6109
  ret i64 %2, !dbg !6115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !6116 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6126, metadata !DIExpression()), !dbg !6127
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6125, metadata !DIExpression()), !dbg !6127
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6128, !srcloc !6130
  %3 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) #25, !dbg !6131
  ret i32 %3, !dbg !6132
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6133 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6135, metadata !DIExpression()), !dbg !6136
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6137, !srcloc !6139
  tail call fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) #26, !dbg !6140
  ret void, !dbg !6141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6142 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6144, metadata !DIExpression()), !dbg !6146
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6147
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6147
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6147
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6145, metadata !DIExpression()), !dbg !6146
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 7, !dbg !6148
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6148
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6150
  br i1 %7, label %9, label %8, !dbg !6151

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6152
  br label %9, !dbg !6154

9:                                                ; preds = %8, %1
  ret void, !dbg !6155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6156 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6158, metadata !DIExpression()), !dbg !6161
  call void @llvm.dbg.value(metadata i8 %1, metadata !6159, metadata !DIExpression()), !dbg !6161
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6162
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6162
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6162
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6160, metadata !DIExpression()), !dbg !6161
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 1, !dbg !6163
  %7 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %6, align 4, !dbg !6163
  tail call void %7(%struct.device* noundef %0, i8 noundef zeroext %1) #25, !dbg !6164
  ret void, !dbg !6165
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_read(%struct.tty_serial* noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6166 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6170, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i8* %1, metadata !6171, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i32 %2, metadata !6172, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i8* %1, metadata !6173, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i32 0, metadata !6174, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i32 0, metadata !6175, metadata !DIExpression()), !dbg !6176
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6177
  %5 = load i32, i32* %4, align 4, !dbg !6177
  %6 = icmp eq i32 %5, 0, !dbg !6179
  br i1 %6, label %9, label %7, !dbg !6180

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !6174, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i8* %1, metadata !6173, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i32 %2, metadata !6172, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i32 %2, metadata !6172, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6176
  %8 = icmp eq i32 %2, 0, !dbg !6181
  br i1 %8, label %28, label %11, !dbg !6181

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @tty_read_unbuf(%struct.tty_serial* noundef nonnull %0, i8* noundef %1, i32 noundef %2) #26, !dbg !6182
  br label %28, !dbg !6184

11:                                               ; preds = %7, %23
  %12 = phi i32 [ %15, %23 ], [ %2, %7 ]
  %13 = phi i32 [ %26, %23 ], [ 0, %7 ]
  %14 = phi i8* [ %25, %23 ], [ %1, %7 ]
  %15 = add i32 %12, -1, !dbg !6185
  call void @llvm.dbg.value(metadata i32 %13, metadata !6174, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i8* %14, metadata !6173, metadata !DIExpression()), !dbg !6176
  %16 = tail call fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) #26, !dbg !6186
  call void @llvm.dbg.value(metadata i32 %16, metadata !6175, metadata !DIExpression()), !dbg !6176
  %17 = icmp slt i32 %16, 0, !dbg !6188
  br i1 %17, label %18, label %23, !dbg !6190

18:                                               ; preds = %11
  %19 = icmp eq i32 %13, 0, !dbg !6191
  br i1 %19, label %20, label %28, !dbg !6194

20:                                               ; preds = %18
  %21 = sub nsw i32 0, %16, !dbg !6195
  %22 = tail call fastcc i32* @z_errno() #26, !dbg !6197
  store i32 %21, i32* %22, align 4, !dbg !6198
  br label %28, !dbg !6199

23:                                               ; preds = %11
  %24 = trunc i32 %16 to i8, !dbg !6200
  %25 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6201
  call void @llvm.dbg.value(metadata i8* %25, metadata !6173, metadata !DIExpression()), !dbg !6176
  store i8 %24, i8* %14, align 1, !dbg !6202
  %26 = add nuw i32 %13, 1, !dbg !6203
  call void @llvm.dbg.value(metadata i32 %26, metadata !6174, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i32 %15, metadata !6172, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i32 %15, metadata !6172, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6176
  %27 = icmp eq i32 %15, 0, !dbg !6181
  br i1 %27, label %28, label %11, !dbg !6181, !llvm.loop !6204

28:                                               ; preds = %23, %7, %18, %20, %9
  %29 = phi i32 [ %10, %9 ], [ %16, %20 ], [ %13, %18 ], [ 0, %7 ], [ %2, %23 ], !dbg !6176
  ret i32 %29, !dbg !6206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_read_unbuf(%struct.tty_serial* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #1 !dbg !6207 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6209, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i8* %1, metadata !6210, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 %2, metadata !6211, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i8* %1, metadata !6212, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 0, metadata !6213, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 0, metadata !6214, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 undef, metadata !6215, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 0, metadata !6213, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i8* %1, metadata !6212, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 %2, metadata !6211, metadata !DIExpression()), !dbg !6218
  %5 = icmp eq i32 %2, 0, !dbg !6219
  br i1 %5, label %48, label %6, !dbg !6219

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6220
  %8 = load i32, i32* %7, align 4, !dbg !6220
  call void @llvm.dbg.value(metadata i32 %8, metadata !6215, metadata !DIExpression()), !dbg !6218
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %10, !dbg !6219

10:                                               ; preds = %6, %46
  %11 = phi i32 [ %8, %6 ], [ %39, %46 ]
  %12 = phi i32 [ 0, %6 ], [ %31, %46 ]
  %13 = phi i8* [ %1, %6 ], [ %32, %46 ]
  %14 = phi i32 [ %2, %6 ], [ %33, %46 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6215, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 %12, metadata !6213, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i8* %13, metadata !6212, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 %14, metadata !6211, metadata !DIExpression()), !dbg !6218
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6221
  %15 = load %struct.device*, %struct.device** %9, align 4, !dbg !6222
  call void @llvm.dbg.value(metadata i8* %4, metadata !6216, metadata !DIExpression(DW_OP_deref)), !dbg !6223
  %16 = call fastcc i32 @uart_poll_in(%struct.device* noundef %15, i8* noundef nonnull %4) #26, !dbg !6224
  call void @llvm.dbg.value(metadata i32 %16, metadata !6214, metadata !DIExpression()), !dbg !6218
  %17 = icmp slt i32 %16, -1, !dbg !6225
  br i1 %17, label %18, label %22, !dbg !6227

18:                                               ; preds = %10
  %19 = icmp eq i32 %12, 0, !dbg !6228
  br i1 %19, label %20, label %44, !dbg !6231

20:                                               ; preds = %18
  %21 = call fastcc i32* @z_errno() #26, !dbg !6232
  store i32 %16, i32* %21, align 4, !dbg !6234
  call void @llvm.dbg.value(metadata i32 %39, metadata !6215, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 undef, metadata !6213, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i8* %32, metadata !6212, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 %33, metadata !6211, metadata !DIExpression()), !dbg !6218
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6235
  br label %48

22:                                               ; preds = %10
  %23 = icmp eq i32 %16, 0, !dbg !6236
  br i1 %23, label %24, label %30, !dbg !6238

24:                                               ; preds = %22
  %25 = load i8, i8* %4, align 1, !dbg !6239
  call void @llvm.dbg.value(metadata i8 %25, metadata !6216, metadata !DIExpression()), !dbg !6223
  %26 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6241
  call void @llvm.dbg.value(metadata i8* %26, metadata !6212, metadata !DIExpression()), !dbg !6218
  store i8 %25, i8* %13, align 1, !dbg !6242
  %27 = add i32 %12, 1, !dbg !6243
  call void @llvm.dbg.value(metadata i32 %27, metadata !6213, metadata !DIExpression()), !dbg !6218
  %28 = add i32 %14, -1, !dbg !6244
  call void @llvm.dbg.value(metadata i32 %28, metadata !6211, metadata !DIExpression()), !dbg !6218
  %29 = icmp eq i32 %28, 0, !dbg !6245
  br i1 %29, label %44, label %30, !dbg !6247

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %27, %24 ], [ %12, %22 ]
  %32 = phi i8* [ %26, %24 ], [ %13, %22 ]
  %33 = phi i32 [ %28, %24 ], [ %14, %22 ]
  %34 = icmp eq i32 %11, -1, !dbg !6248
  br i1 %34, label %38, label %35, !dbg !6249

35:                                               ; preds = %30
  %36 = add i32 %11, -1, !dbg !6250
  call void @llvm.dbg.value(metadata i32 %36, metadata !6215, metadata !DIExpression()), !dbg !6218
  %37 = icmp eq i32 %11, 0, !dbg !6251
  br i1 %37, label %44, label %38, !dbg !6252

38:                                               ; preds = %35, %30
  %39 = phi i32 [ %36, %35 ], [ -1, %30 ], !dbg !6218
  call void @llvm.dbg.value(metadata i32 %39, metadata !6215, metadata !DIExpression()), !dbg !6218
  %40 = icmp eq i32 %16, -1, !dbg !6253
  br i1 %40, label %41, label %46, !dbg !6255

41:                                               ; preds = %38
  %42 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1) #26, !dbg !6256
  %43 = insertvalue [1 x i64] poison, i64 %42, 0, !dbg !6258
  call fastcc void @k_sleep([1 x i64] %43) #26, !dbg !6258
  br label %46, !dbg !6259

44:                                               ; preds = %35, %24, %18
  %45 = phi i32 [ %12, %18 ], [ %31, %35 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !6215, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 undef, metadata !6213, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i8* %32, metadata !6212, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 %33, metadata !6211, metadata !DIExpression()), !dbg !6218
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6235
  br label %48

46:                                               ; preds = %38, %41
  call void @llvm.dbg.value(metadata i32 %39, metadata !6215, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 %31, metadata !6213, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i8* %32, metadata !6212, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i32 %33, metadata !6211, metadata !DIExpression()), !dbg !6218
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6235
  %47 = icmp eq i32 %33, 0, !dbg !6219
  br i1 %47, label %48, label %10, !dbg !6219

48:                                               ; preds = %46, %3, %44, %20
  %49 = phi i32 [ -1, %20 ], [ %45, %44 ], [ 0, %3 ], [ %31, %46 ], !dbg !6218
  ret i32 %49, !dbg !6260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) unnamed_addr #1 !dbg !6261 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6265, metadata !DIExpression()), !dbg !6269
  %2 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6270
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6271
  %4 = load i32, i32* %3, align 4, !dbg !6271
  %5 = icmp eq i32 %4, -1, !dbg !6271
  br i1 %5, label %11, label %6, !dbg !6271

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0, !dbg !6271
  %8 = select i1 %7, i32 %4, i32 0, !dbg !6271
  %9 = zext i32 %8 to i64, !dbg !6271
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %9) #26, !dbg !6271
  br label %11, !dbg !6271

11:                                               ; preds = %1, %6
  %12 = phi i64 [ %10, %6 ], [ -1, %1 ], !dbg !6271
  %13 = insertvalue [1 x i64] poison, i64 %12, 0, !dbg !6272
  %14 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %2, [1 x i64] %13) #26, !dbg !6272
  call void @llvm.dbg.value(metadata i32 %14, metadata !6268, metadata !DIExpression()), !dbg !6269
  %15 = icmp slt i32 %14, 0, !dbg !6273
  br i1 %15, label %33, label %16, !dbg !6275

16:                                               ; preds = %11
  %17 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6276, !srcloc !6039
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !6276
  call void @llvm.dbg.value(metadata i32 %18, metadata !6036, metadata !DIExpression()) #24, !dbg !6278
  call void @llvm.dbg.value(metadata i32 undef, metadata !6037, metadata !DIExpression()) #24, !dbg !6278
  call void @llvm.dbg.value(metadata i32 %18, metadata !6266, metadata !DIExpression()), !dbg !6269
  %19 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6279
  %20 = load i8*, i8** %19, align 4, !dbg !6279
  %21 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6280
  %22 = load i16, i16* %21, align 4, !dbg !6281
  %23 = add i16 %22, 1, !dbg !6281
  store i16 %23, i16* %21, align 4, !dbg !6281
  %24 = zext i16 %22 to i32, !dbg !6282
  %25 = getelementptr inbounds i8, i8* %20, i32 %24, !dbg !6282
  %26 = load i8, i8* %25, align 1, !dbg !6282
  call void @llvm.dbg.value(metadata i8 %26, metadata !6267, metadata !DIExpression()), !dbg !6269
  %27 = zext i16 %23 to i32, !dbg !6283
  %28 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6285
  %29 = load i32, i32* %28, align 4, !dbg !6285
  %30 = icmp ugt i32 %29, %27, !dbg !6286
  %31 = select i1 %30, i16 %23, i16 0, !dbg !6287
  store i16 %31, i16* %21, align 4, !dbg !6269
  call void @llvm.dbg.value(metadata i32 %18, metadata !6053, metadata !DIExpression()) #24, !dbg !6288
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !6290, !srcloc !6060
  %32 = zext i8 %26 to i32, !dbg !6291
  br label %33, !dbg !6292

33:                                               ; preds = %11, %16
  %34 = phi i32 [ %32, %16 ], [ %14, %11 ], !dbg !6269
  ret i32 %34, !dbg !6293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6294 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6296, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata i8* %1, metadata !6297, metadata !DIExpression()), !dbg !6298
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6299, !srcloc !6301
  %3 = tail call fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !6302
  ret i32 %3, !dbg !6303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !6304 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6308, metadata !DIExpression()), !dbg !6309
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6310, !srcloc !6312
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !6313
  ret void, !dbg !6314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6315 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6317, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.value(metadata i8* %1, metadata !6318, metadata !DIExpression()), !dbg !6320
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6321
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6321
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6321
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6319, metadata !DIExpression()), !dbg !6320
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 0, !dbg !6322
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !6322
  %8 = icmp eq i32 (%struct.device*, i8*)* %7, null, !dbg !6324
  br i1 %8, label %11, label %9, !dbg !6325

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1) #25, !dbg !6326
  br label %11, !dbg !6327

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6320
  ret i32 %12, !dbg !6328
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_init(%struct.tty_serial* noundef %0, %struct.device* noundef %1) local_unnamed_addr #1 !dbg !6329 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6333, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !6334, metadata !DIExpression()), !dbg !6335
  %3 = icmp eq %struct.device* %1, null, !dbg !6336
  br i1 %3, label %17, label %4, !dbg !6338

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6339
  store %struct.device* %1, %struct.device** %5, align 4, !dbg !6340
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6341
  store i8* null, i8** %6, align 4, !dbg !6342
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6343
  store i32 0, i32* %7, align 4, !dbg !6344
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6345
  store i8* null, i8** %8, align 4, !dbg !6346
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6347
  store i32 0, i32* %9, align 4, !dbg !6348
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !6349
  store i16 0, i16* %10, align 2, !dbg !6350
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !6351
  store i16 0, i16* %11, align 4, !dbg !6352
  %12 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6353
  store i16 0, i16* %12, align 2, !dbg !6354
  %13 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6355
  store i16 0, i16* %13, align 4, !dbg !6356
  %14 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6357
  store i32 -1, i32* %14, align 4, !dbg !6358
  %15 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !6359
  store i32 -1, i32* %15, align 4, !dbg !6360
  %16 = bitcast %struct.tty_serial* %0 to i8*, !dbg !6361
  tail call fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef nonnull %1, i8* noundef %16) #26, !dbg !6362
  br label %17, !dbg !6363

17:                                               ; preds = %2, %4
  %18 = phi i32 [ 0, %4 ], [ -19, %2 ], !dbg !6335
  ret i32 %18, !dbg !6364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6365 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6367, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @tty_uart_isr, metadata !6368, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i8* %1, metadata !6369, metadata !DIExpression()), !dbg !6371
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6372
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6372
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6372
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6370, metadata !DIExpression()), !dbg !6371
  %6 = icmp eq %struct.uart_driver_api* %5, null, !dbg !6373
  br i1 %6, label %12, label %7, !dbg !6375

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 18, !dbg !6376
  %9 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %8, align 4, !dbg !6376
  %10 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %9, null, !dbg !6377
  br i1 %10, label %12, label %11, !dbg !6378

11:                                               ; preds = %7
  tail call void %9(%struct.device* noundef nonnull %0, void (%struct.device*, i8*)* noundef nonnull @tty_uart_isr, i8* noundef %1) #25, !dbg !6379
  br label %12, !dbg !6381

12:                                               ; preds = %11, %7, %2
  ret void, !dbg !6382
}

; Function Attrs: noinline nounwind optsize
define internal void @tty_uart_isr(%struct.device* noundef %0, i8* noundef %1) #1 !dbg !6383 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6385, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i8* %1, metadata !6386, metadata !DIExpression()), !dbg !6391
  %4 = bitcast i8* %1 to %struct.tty_serial*, !dbg !6392
  call void @llvm.dbg.value(metadata %struct.tty_serial* %4, metadata !6387, metadata !DIExpression()), !dbg !6391
  tail call fastcc void @uart_irq_update(%struct.device* noundef %0) #26, !dbg !6393
  %5 = tail call fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) #26, !dbg !6394
  %6 = icmp eq i32 %5, 0, !dbg !6394
  br i1 %6, label %15, label %7, !dbg !6395

7:                                                ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6396
  call void @llvm.dbg.value(metadata i8* %3, metadata !6388, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  %8 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6398
  %9 = icmp eq i32 %8, 0, !dbg !6401
  br i1 %9, label %14, label %10, !dbg !6402

10:                                               ; preds = %7, %10
  %11 = load i8, i8* %3, align 1, !dbg !6403
  call void @llvm.dbg.value(metadata i8 %11, metadata !6388, metadata !DIExpression()), !dbg !6397
  call fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %4, i8 noundef zeroext %11) #26, !dbg !6404
  call void @llvm.dbg.value(metadata i8* %3, metadata !6388, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  %12 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6398
  %13 = icmp eq i32 %12, 0, !dbg !6401
  br i1 %13, label %14, label %10, !dbg !6402, !llvm.loop !6405

14:                                               ; preds = %10, %7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6408
  br label %15, !dbg !6409

15:                                               ; preds = %14, %2
  %16 = call fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) #26, !dbg !6410
  %17 = icmp eq i32 %16, 0, !dbg !6410
  br i1 %17, label %44, label %18, !dbg !6412

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %1, i32 60, !dbg !6413
  %20 = bitcast i8* %19 to i16*, !dbg !6413
  %21 = load i16, i16* %20, align 4, !dbg !6413
  %22 = getelementptr inbounds i8, i8* %1, i32 62, !dbg !6416
  %23 = bitcast i8* %22 to i16*, !dbg !6416
  %24 = load i16, i16* %23, align 2, !dbg !6416
  %25 = icmp eq i16 %21, %24, !dbg !6417
  br i1 %25, label %26, label %27, !dbg !6418

26:                                               ; preds = %18
  call fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6419
  br label %44, !dbg !6421

27:                                               ; preds = %18
  %28 = zext i16 %21 to i32, !dbg !6422
  %29 = getelementptr inbounds i8, i8* %1, i32 52, !dbg !6423
  %30 = bitcast i8* %29 to i8**, !dbg !6423
  %31 = load i8*, i8** %30, align 4, !dbg !6423
  %32 = add i16 %21, 1, !dbg !6425
  store i16 %32, i16* %20, align 4, !dbg !6425
  %33 = getelementptr inbounds i8, i8* %31, i32 %28, !dbg !6426
  call fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %33) #26, !dbg !6427
  %34 = load i16, i16* %20, align 4, !dbg !6428
  %35 = zext i16 %34 to i32, !dbg !6430
  %36 = getelementptr inbounds i8, i8* %1, i32 56, !dbg !6431
  %37 = bitcast i8* %36 to i32*, !dbg !6431
  %38 = load i32, i32* %37, align 4, !dbg !6431
  %39 = icmp ugt i32 %38, %35, !dbg !6432
  br i1 %39, label %41, label %40, !dbg !6433

40:                                               ; preds = %27
  store i16 0, i16* %20, align 4, !dbg !6434
  br label %41, !dbg !6436

41:                                               ; preds = %40, %27
  %42 = getelementptr inbounds i8, i8* %1, i32 36, !dbg !6437
  %43 = bitcast i8* %42 to %struct.k_sem*, !dbg !6437
  call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %43) #26, !dbg !6438
  br label %44

44:                                               ; preds = %26, %41, %15
  ret void, !dbg !6439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6440 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6442, metadata !DIExpression()), !dbg !6443
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6444, !srcloc !6446
  tail call fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) #26, !dbg !6447
  ret void, !dbg !6448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6449 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6451, metadata !DIExpression()), !dbg !6453
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6454
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6454
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6454
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6452, metadata !DIExpression()), !dbg !6453
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 13, !dbg !6455
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6455
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6457
  br i1 %7, label %10, label %8, !dbg !6458

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6459
  br label %10, !dbg !6460

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6453
  ret i32 %11, !dbg !6461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6462 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6464, metadata !DIExpression()), !dbg !6468
  call void @llvm.dbg.value(metadata i8* %1, metadata !6465, metadata !DIExpression()), !dbg !6468
  call void @llvm.dbg.value(metadata i32 1, metadata !6466, metadata !DIExpression()), !dbg !6468
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6469
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6469
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6469
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6467, metadata !DIExpression()), !dbg !6468
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 6, !dbg !6470
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6470
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6472
  br i1 %8, label %11, label %9, !dbg !6473

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6474
  br label %11, !dbg !6475

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6468
  ret i32 %12, !dbg !6476
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6477 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6479, metadata !DIExpression()), !dbg !6482
  call void @llvm.dbg.value(metadata i8 %1, metadata !6480, metadata !DIExpression()), !dbg !6482
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6483
  %4 = load i16, i16* %3, align 2, !dbg !6483
  %5 = zext i16 %4 to i32, !dbg !6484
  %6 = add nuw nsw i32 %5, 1, !dbg !6485
  call void @llvm.dbg.value(metadata i32 %6, metadata !6481, metadata !DIExpression()), !dbg !6482
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6486
  %8 = load i32, i32* %7, align 4, !dbg !6486
  %9 = icmp ult i32 %6, %8, !dbg !6488
  %10 = select i1 %9, i32 %6, i32 0, !dbg !6489
  call void @llvm.dbg.value(metadata i32 %10, metadata !6481, metadata !DIExpression()), !dbg !6482
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6490
  %12 = load i16, i16* %11, align 4, !dbg !6490
  %13 = zext i16 %12 to i32, !dbg !6492
  %14 = icmp eq i32 %10, %13, !dbg !6493
  br i1 %14, label %15, label %17, !dbg !6494

15:                                               ; preds = %2
  %16 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef nonnull %0, i8 noundef zeroext 126) #26, !dbg !6495
  br label %23, !dbg !6497

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6498
  %19 = load i8*, i8** %18, align 4, !dbg !6498
  %20 = getelementptr inbounds i8, i8* %19, i32 %5, !dbg !6499
  store i8 %1, i8* %20, align 1, !dbg !6500
  %21 = trunc i32 %10 to i16, !dbg !6501
  store i16 %21, i16* %3, align 2, !dbg !6502
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6503
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %22) #26, !dbg !6504
  br label %23, !dbg !6505

23:                                               ; preds = %17, %15
  ret void, !dbg !6506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6507 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6509, metadata !DIExpression()), !dbg !6511
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6512
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6512
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6512
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6510, metadata !DIExpression()), !dbg !6511
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 9, !dbg !6513
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6513
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6515
  br i1 %7, label %10, label %8, !dbg !6516

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6517
  br label %10, !dbg !6518

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6511
  ret i32 %11, !dbg !6519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6520 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6522, metadata !DIExpression()), !dbg !6523
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6524, !srcloc !6526
  tail call fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6527
  ret void, !dbg !6528
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6529 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6531, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.value(metadata i8* %1, metadata !6532, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.value(metadata i32 1, metadata !6533, metadata !DIExpression()), !dbg !6535
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6536
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6536
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6536
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6534, metadata !DIExpression()), !dbg !6535
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 5, !dbg !6537
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6537
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6539
  br i1 %8, label %11, label %9, !dbg !6540

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6541
  br label %11, !dbg !6542

11:                                               ; preds = %2, %9
  ret void, !dbg !6543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_give(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !6544 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6548, metadata !DIExpression()), !dbg !6549
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6550, !srcloc !6552
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #25, !dbg !6553
  ret void, !dbg !6554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6555 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6557, metadata !DIExpression()), !dbg !6559
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6560
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6560
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6560
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6558, metadata !DIExpression()), !dbg !6559
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 8, !dbg !6561
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6561
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6563
  br i1 %7, label %9, label %8, !dbg !6564

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6565
  br label %9, !dbg !6567

9:                                                ; preds = %8, %1
  ret void, !dbg !6568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6569 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6571, metadata !DIExpression()), !dbg !6573
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6574
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6574
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6574
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6572, metadata !DIExpression()), !dbg !6573
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 17, !dbg !6575
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6575
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6577
  br i1 %7, label %10, label %8, !dbg !6578

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6579
  br label %10, !dbg !6580

10:                                               ; preds = %1, %8
  ret void, !dbg !6581
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_rx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6582 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6586, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i8* %1, metadata !6587, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i32 %2, metadata !6588, metadata !DIExpression()), !dbg !6589
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6590
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6590
  tail call fastcc void @uart_irq_rx_disable(%struct.device* noundef %5) #26, !dbg !6591
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6592
  store i8* %1, i8** %6, align 4, !dbg !6593
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6594
  store i32 %2, i32* %7, align 4, !dbg !6595
  %8 = icmp eq i32 %2, 0, !dbg !6596
  br i1 %8, label %12, label %9, !dbg !6598

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6599
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %10, i32 noundef 0) #26, !dbg !6601
  %11 = load %struct.device*, %struct.device** %4, align 4, !dbg !6602
  tail call fastcc void @uart_irq_rx_enable(%struct.device* noundef %11) #26, !dbg !6603
  br label %12, !dbg !6604

12:                                               ; preds = %9, %3
  ret i32 0, !dbg !6605
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6606 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6608, metadata !DIExpression()), !dbg !6609
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6610, !srcloc !6612
  tail call fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) #26, !dbg !6613
  ret void, !dbg !6614
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !6615 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6619, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata i32 %1, metadata !6620, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata i32 -1, metadata !6621, metadata !DIExpression()), !dbg !6622
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6623, !srcloc !6625
  %3 = tail call i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef -1) #25, !dbg !6626
  ret void, !dbg !6627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6628 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6630, metadata !DIExpression()), !dbg !6631
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6632, !srcloc !6634
  tail call fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) #26, !dbg !6635
  ret void, !dbg !6636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6637 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6639, metadata !DIExpression()), !dbg !6641
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6642
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6642
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6642
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6640, metadata !DIExpression()), !dbg !6641
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 10, !dbg !6643
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6643
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6645
  br i1 %7, label %9, label %8, !dbg !6646

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6647
  br label %9, !dbg !6649

9:                                                ; preds = %8, %1
  ret void, !dbg !6650
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6653, metadata !DIExpression()), !dbg !6655
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6656
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6656
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6656
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6654, metadata !DIExpression()), !dbg !6655
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 11, !dbg !6657
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6657
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6659
  br i1 %7, label %9, label %8, !dbg !6660

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6661
  br label %9, !dbg !6663

9:                                                ; preds = %8, %1
  ret void, !dbg !6664
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_tx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6665 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6667, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i8* %1, metadata !6668, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i32 %2, metadata !6669, metadata !DIExpression()), !dbg !6670
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6671
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6671
  tail call fastcc void @uart_irq_tx_disable(%struct.device* noundef %5) #26, !dbg !6672
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6673
  store i8* %1, i8** %6, align 4, !dbg !6674
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6675
  store i32 %2, i32* %7, align 4, !dbg !6676
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !6677
  %9 = add i32 %2, -1, !dbg !6678
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %8, i32 noundef %9) #26, !dbg !6679
  ret i32 0, !dbg !6680
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_write(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6681 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6685, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.value(metadata i8* %1, metadata !6686, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.value(metadata i32 %2, metadata !6687, metadata !DIExpression()), !dbg !6688
  %4 = tail call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6689
  ret i32 %4, !dbg !6690
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_read(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6691 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6695, metadata !DIExpression()), !dbg !6698
  call void @llvm.dbg.value(metadata i8* %1, metadata !6696, metadata !DIExpression()), !dbg !6698
  call void @llvm.dbg.value(metadata i32 %2, metadata !6697, metadata !DIExpression()), !dbg !6698
  %4 = tail call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6699
  ret i32 %4, !dbg !6700
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_putchar(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !6701 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !6703, metadata !DIExpression()), !dbg !6704
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.value(metadata i8* %2, metadata !6703, metadata !DIExpression(DW_OP_deref)), !dbg !6704
  %3 = call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %2, i32 noundef 1) #25, !dbg !6705
  ret i32 %3, !dbg !6706
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_getchar() local_unnamed_addr #1 !dbg !6707 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6713
  call void @llvm.dbg.value(metadata i8* %1, metadata !6711, metadata !DIExpression(DW_OP_deref)), !dbg !6714
  %2 = call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %1, i32 noundef 1) #25, !dbg !6715
  call void @llvm.dbg.value(metadata i32 %2, metadata !6712, metadata !DIExpression()), !dbg !6714
  %3 = icmp slt i32 %2, 0, !dbg !6716
  %4 = load i8, i8* %1, align 1, !dbg !6718
  %5 = zext i8 %4 to i32, !dbg !6718
  %6 = select i1 %3, i32 %2, i32 %5, !dbg !6718
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6719
  ret i32 %6, !dbg !6719
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_init() local_unnamed_addr #1 !dbg !6720 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !6722, metadata !DIExpression()), !dbg !6727
  %1 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !6728
  br i1 %1, label %2, label %13, !dbg !6730

2:                                                ; preds = %0
  %3 = tail call i32 @tty_init(%struct.tty_serial* noundef nonnull @console_serial, %struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !6731
  call void @llvm.dbg.value(metadata i32 %3, metadata !6723, metadata !DIExpression()), !dbg !6727
  %4 = icmp eq i32 %3, 0, !dbg !6732
  br i1 %4, label %5, label %13, !dbg !6734

5:                                                ; preds = %2
  %6 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6735
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %6, metadata !6724, metadata !DIExpression()), !dbg !6736
  %7 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %6, i32 0, i32 18, !dbg !6737
  %8 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %7, align 4, !dbg !6737
  %9 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %8, null, !dbg !6739
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @tty_set_tx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @console_txbuf, i32 0, i32 0), i32 noundef 16) #25, !dbg !6740
  %12 = tail call i32 @tty_set_rx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @console_rxbuf, i32 0, i32 0), i32 noundef 16) #25, !dbg !6741
  br label %13, !dbg !6742

13:                                               ; preds = %2, %0, %5, %10
  %14 = phi i32 [ 0, %10 ], [ -134, %5 ], [ -19, %0 ], [ %3, %2 ]
  ret i32 %14, !dbg !6743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !6744 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !6749, metadata !DIExpression()), !dbg !6750
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6751, !srcloc !6753
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !6754
  ret i1 %1, !dbg !6755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !6756 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !6758, metadata !DIExpression()), !dbg !6759
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !6760
  ret i1 %1, !dbg !6761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6811, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6812, metadata !DIExpression()), !dbg !6813
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6814
  ret void, !dbg !6815
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6816 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6833, metadata !DIExpression()), !dbg !6836
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6834, metadata !DIExpression()), !dbg !6836
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6837
  %4 = load i32, i32* %3, align 4, !dbg !6837
  call void @llvm.dbg.value(metadata i32 %4, metadata !6835, metadata !DIExpression()), !dbg !6836
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6838
  ret void, !dbg !6839
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6840 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6844, metadata !DIExpression()), !dbg !6847
  call void @llvm.dbg.value(metadata i8* %0, metadata !6845, metadata !DIExpression()), !dbg !6847
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6848
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6848
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6846, metadata !DIExpression()), !dbg !6849
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6849
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6850
  %5 = bitcast i8* %4 to i32*, !dbg !6850
  %6 = load i32, i32* %5, align 4, !dbg !6850
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6851
  store i32 %6, i32* %7, align 4, !dbg !6852
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6853
  unreachable, !dbg !6854
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6855 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6858, metadata !DIExpression()), !dbg !6859
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6860
  ret void, !dbg !6861
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6862 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6866, metadata !DIExpression()), !dbg !6867
  %2 = icmp sgt i32 %0, -1, !dbg !6868
  br i1 %2, label %3, label %8, !dbg !6870

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6871, !srcloc !6873
  %4 = and i32 %0, 31, !dbg !6874
  %5 = shl nuw i32 1, %4, !dbg !6875
  %6 = lshr i32 %0, 5, !dbg !6876
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6877
  store volatile i32 %5, i32* %7, align 4, !dbg !6878
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6879, !srcloc !6880
  br label %8, !dbg !6881

8:                                                ; preds = %3, %1
  ret void, !dbg !6882
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6885, metadata !DIExpression()), !dbg !6886
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6887
  ret void, !dbg !6888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6891, metadata !DIExpression()), !dbg !6892
  %2 = icmp sgt i32 %0, -1, !dbg !6893
  br i1 %2, label %3, label %8, !dbg !6895

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6896
  %5 = shl nuw i32 1, %4, !dbg !6898
  %6 = lshr i32 %0, 5, !dbg !6899
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6900
  store volatile i32 %5, i32* %7, align 4, !dbg !6901
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6902, !srcloc !6906
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6907, !srcloc !6910
  br label %8, !dbg !6911

8:                                                ; preds = %3, %1
  ret void, !dbg !6912
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6917, metadata !DIExpression()), !dbg !6918
  %2 = lshr i32 %0, 5, !dbg !6919
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6920
  %4 = load volatile i32, i32* %3, align 4, !dbg !6920
  %5 = and i32 %0, 31, !dbg !6921
  %6 = shl nuw i32 1, %5, !dbg !6921
  %7 = and i32 %4, %6, !dbg !6922
  ret i32 %7, !dbg !6923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6928, metadata !DIExpression()), !dbg !6931
  call void @llvm.dbg.value(metadata i32 %1, metadata !6929, metadata !DIExpression()), !dbg !6931
  call void @llvm.dbg.value(metadata i32 %2, metadata !6930, metadata !DIExpression()), !dbg !6931
  %4 = add i32 %1, 1, !dbg !6932
  call void @llvm.dbg.value(metadata i32 %4, metadata !6929, metadata !DIExpression()), !dbg !6931
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6935
  ret void, !dbg !6936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6941, metadata !DIExpression()), !dbg !6943
  call void @llvm.dbg.value(metadata i32 %1, metadata !6942, metadata !DIExpression()), !dbg !6943
  %3 = trunc i32 %1 to i8, !dbg !6944
  %4 = shl i8 %3, 4, !dbg !6944
  %5 = and i32 %0, 15, !dbg !6946
  %6 = add nsw i32 %5, -4, !dbg !6946
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6946
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6946
  %9 = icmp slt i32 %0, 0, !dbg !6946
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6946
  store volatile i8 %4, i8* %10, align 1, !dbg !6944
  ret void, !dbg !6947
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6948 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6950, metadata !DIExpression()), !dbg !6951
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6952
  ret void, !dbg !6953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6954 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6956
  tail call void @z_arm_int_exit() #25, !dbg !6957
  ret void, !dbg !6958
}

; Function Attrs: optsize
declare !dbg !6959 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6960 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6962 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6964
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6965
  tail call void @z_bss_zero() #25, !dbg !6966
  tail call void @z_data_copy() #25, !dbg !6967
  tail call void @z_arm_interrupt_init() #25, !dbg !6968
  tail call void @z_cstart() #28, !dbg !6969
  unreachable, !dbg !6969
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6970 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6971
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6972, !srcloc !6975
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6976, !srcloc !6979
  ret void, !dbg !6980
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6981 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6982
  %2 = and i32 %1, -15728641, !dbg !6982
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6982
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !6983, !srcloc !6990
  call void @llvm.dbg.value(metadata i32 %3, metadata !6988, metadata !DIExpression()) #24, !dbg !6991
  %4 = and i32 %3, -5, !dbg !6992
  call void @llvm.dbg.value(metadata i32 %4, metadata !6993, metadata !DIExpression()) #24, !dbg !6998
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !7000, !srcloc !7001
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7002, !srcloc !6979
  ret void, !dbg !7004
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7008, metadata !DIExpression()), !dbg !7009
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7010
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7011
  store i32 %0, i32* %3, align 4, !dbg !7012
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7013
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7014
  store i32 %4, i32* %5, align 4, !dbg !7015
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7016
  %7 = or i32 %6, 268435456, !dbg !7016
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7016
  call void @llvm.dbg.value(metadata i32 0, metadata !7017, metadata !DIExpression()) #24, !dbg !7020
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7022, !srcloc !7023
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7024
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7025
  %10 = load i32, i32* %9, align 4, !dbg !7025
  ret i32 %10, !dbg !7026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !7027 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7137, metadata !DIExpression()), !dbg !7145
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7138, metadata !DIExpression()), !dbg !7145
  call void @llvm.dbg.value(metadata i8* %2, metadata !7139, metadata !DIExpression()), !dbg !7145
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7140, metadata !DIExpression()), !dbg !7145
  call void @llvm.dbg.value(metadata i8* %4, metadata !7141, metadata !DIExpression()), !dbg !7145
  call void @llvm.dbg.value(metadata i8* %5, metadata !7142, metadata !DIExpression()), !dbg !7145
  call void @llvm.dbg.value(metadata i8* %6, metadata !7143, metadata !DIExpression()), !dbg !7145
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7146
  call void @llvm.dbg.value(metadata i8* %8, metadata !7144, metadata !DIExpression()), !dbg !7145
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7147
  %10 = bitcast i8* %9 to i32*, !dbg !7147
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7148
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7149
  %12 = bitcast i8* %8 to i32*, !dbg !7150
  store i32 %11, i32* %12, align 4, !dbg !7151
  %13 = ptrtoint i8* %4 to i32, !dbg !7152
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7153
  %15 = bitcast i8* %14 to i32*, !dbg !7153
  store i32 %13, i32* %15, align 4, !dbg !7154
  %16 = ptrtoint i8* %5 to i32, !dbg !7155
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7156
  %18 = bitcast i8* %17 to i32*, !dbg !7156
  store i32 %16, i32* %18, align 4, !dbg !7157
  %19 = ptrtoint i8* %6 to i32, !dbg !7158
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7159
  %21 = bitcast i8* %20 to i32*, !dbg !7159
  store i32 %19, i32* %21, align 4, !dbg !7160
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7161
  %23 = bitcast i8* %22 to i32*, !dbg !7161
  store i32 16777216, i32* %23, align 4, !dbg !7162
  %24 = ptrtoint i8* %8 to i32, !dbg !7163
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7164
  store i32 %24, i32* %25, align 8, !dbg !7165
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7166
  store i32 0, i32* %26, align 4, !dbg !7167
  ret void, !dbg !7168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !7169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7174, metadata !DIExpression()), !dbg !7180
  call void @llvm.dbg.value(metadata i32 %1, metadata !7175, metadata !DIExpression()), !dbg !7180
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7181
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7176, metadata !DIExpression()), !dbg !7180
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7182
  br i1 %4, label %19, label %5, !dbg !7184

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7179, metadata !DIExpression()), !dbg !7180
  %6 = icmp eq i32 %0, -22, !dbg !7185
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7185
  %8 = load i32, i32* %7, align 4, !dbg !7185
  br i1 %6, label %16, label %9, !dbg !7187

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7185
  %11 = icmp ule i32 %10, %0, !dbg !7185
  %12 = icmp ugt i32 %8, %0, !dbg !7185
  %13 = and i1 %12, %11, !dbg !7185
  %14 = icmp ugt i32 %8, %1, !dbg !7185
  %15 = and i1 %14, %13, !dbg !7185
  br i1 %15, label %18, label %19, !dbg !7185

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7185
  br i1 %17, label %18, label %19, !dbg !7187

18:                                               ; preds = %9, %16
  br label %19, !dbg !7188

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7180
  ret i32 %20, !dbg !7190
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7191 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7195, metadata !DIExpression()), !dbg !7198
  call void @llvm.dbg.value(metadata i8* %1, metadata !7196, metadata !DIExpression()), !dbg !7198
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7197, metadata !DIExpression()), !dbg !7198
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7199
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7200
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !7201, !srcloc !7202
  unreachable, !dbg !7203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7204 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7222, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i32 %1, metadata !7223, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i32 %2, metadata !7224, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7225, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i32 0, metadata !7226, metadata !DIExpression()), !dbg !7232
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7233
  %9 = and i32 %8, 511, !dbg !7234
  call void @llvm.dbg.value(metadata i32 %9, metadata !7227, metadata !DIExpression()), !dbg !7232
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7235
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7235
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7236
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7236
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7231, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i32 0, metadata !7238, metadata !DIExpression()) #24, !dbg !7241
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7243, !srcloc !7244
  call void @llvm.dbg.value(metadata i8* %6, metadata !7229, metadata !DIExpression(DW_OP_deref)), !dbg !7232
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7245
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7230, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8* %5, metadata !7228, metadata !DIExpression(DW_OP_deref)), !dbg !7232
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7246
  call void @llvm.dbg.value(metadata i32 %12, metadata !7226, metadata !DIExpression()), !dbg !7232
  %13 = load i8, i8* %5, align 1, !dbg !7247, !range !7249
  call void @llvm.dbg.value(metadata i8 %13, metadata !7228, metadata !DIExpression()), !dbg !7232
  %14 = icmp eq i8 %13, 0, !dbg !7247
  br i1 %14, label %15, label %32, !dbg !7250

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7251
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7252
  %18 = load i8, i8* %6, align 1, !dbg !7253, !range !7249
  call void @llvm.dbg.value(metadata i8 %18, metadata !7229, metadata !DIExpression()), !dbg !7232
  %19 = icmp eq i8 %18, 0, !dbg !7253
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7255
  %21 = load i32, i32* %20, align 4, !dbg !7255
  br i1 %19, label %27, label %22, !dbg !7256

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7257
  %24 = icmp eq i32 %23, 0, !dbg !7260
  br i1 %24, label %25, label %31, !dbg !7261

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7262
  br label %29, !dbg !7264

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7265
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7255
  br label %31, !dbg !7267

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7267
  br label %32, !dbg !7268

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7268
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7268
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7268
  ret void, !dbg !7268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !7269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7274, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata i32 %1, metadata !7275, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata i32 %2, metadata !7276, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata i8* %3, metadata !7277, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata i8 0, metadata !7278, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7279, metadata !DIExpression()), !dbg !7280
  store i8 0, i8* %3, align 1, !dbg !7281
  %5 = icmp ult i32 %2, -16777216, !dbg !7282
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !7284
  br i1 %8, label %16, label %9, !dbg !7284

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !7285
  %11 = icmp eq i32 %10, 0, !dbg !7285
  br i1 %11, label %12, label %13, !dbg !7287

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !7279, metadata !DIExpression()), !dbg !7280
  store i8 1, i8* %3, align 1, !dbg !7290
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !7280
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !7279, metadata !DIExpression()), !dbg !7280
  br label %16, !dbg !7293

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !7280
  ret %struct.__esf* %17, !dbg !7294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7295 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7299, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i32 %1, metadata !7300, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i8* %2, metadata !7301, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i32 0, metadata !7302, metadata !DIExpression()), !dbg !7303
  store i8 0, i8* %2, align 1, !dbg !7304
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7305

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7306
  call void @llvm.dbg.value(metadata i32 %5, metadata !7302, metadata !DIExpression()), !dbg !7303
  br label %11, !dbg !7308

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7309
  call void @llvm.dbg.value(metadata i32 %7, metadata !7302, metadata !DIExpression()), !dbg !7303
  br label %11, !dbg !7310

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7311
  call void @llvm.dbg.value(metadata i32 0, metadata !7302, metadata !DIExpression()), !dbg !7303
  br label %11, !dbg !7312

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7313
  call void @llvm.dbg.value(metadata i32 0, metadata !7302, metadata !DIExpression()), !dbg !7303
  br label %11, !dbg !7314

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7315
  br label %11, !dbg !7316

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !7317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7318 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7322, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata i8* %1, metadata !7323, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata i32 0, metadata !7324, metadata !DIExpression()), !dbg !7325
  store i8 0, i8* %1, align 1, !dbg !7326
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7327
  %4 = and i32 %3, 2, !dbg !7329
  %5 = icmp eq i32 %4, 0, !dbg !7330
  br i1 %5, label %6, label %33, !dbg !7331

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7332
  %8 = icmp sgt i32 %7, -1, !dbg !7334
  br i1 %8, label %9, label %33, !dbg !7335

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7336
  %11 = and i32 %10, 1073741824, !dbg !7338
  %12 = icmp eq i32 %11, 0, !dbg !7339
  br i1 %12, label %33, label %13, !dbg !7340

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7341
  br i1 %14, label %15, label %18, !dbg !7344

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7345
  %17 = load i32, i32* %16, align 4, !dbg !7345
  call void @llvm.dbg.value(metadata i32 %17, metadata !7324, metadata !DIExpression()), !dbg !7325
  br label %33, !dbg !7347

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7348
  %20 = and i32 %19, 255, !dbg !7350
  %21 = icmp eq i32 %20, 0, !dbg !7351
  br i1 %21, label %24, label %22, !dbg !7352

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7353
  call void @llvm.dbg.value(metadata i32 %23, metadata !7324, metadata !DIExpression()), !dbg !7325
  br label %33, !dbg !7355

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7356
  %26 = and i32 %25, 65280, !dbg !7358
  %27 = icmp eq i32 %26, 0, !dbg !7359
  br i1 %27, label %29, label %28, !dbg !7360

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7361
  call void @llvm.dbg.value(metadata i32 0, metadata !7324, metadata !DIExpression()), !dbg !7325
  br label %33, !dbg !7363

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7364
  %31 = icmp ult i32 %30, 65536, !dbg !7366
  br i1 %31, label %33, label %32, !dbg !7367

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !7368
  call void @llvm.dbg.value(metadata i32 0, metadata !7324, metadata !DIExpression()), !dbg !7325
  br label %33, !dbg !7370

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !7325
  call void @llvm.dbg.value(metadata i32 %34, metadata !7324, metadata !DIExpression()), !dbg !7325
  ret i32 %34, !dbg !7371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7372 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7374, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i32 %1, metadata !7375, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i8* %2, metadata !7376, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i32 0, metadata !7377, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i32 -22, metadata !7378, metadata !DIExpression()), !dbg !7387
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7388
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7390
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7392
  %7 = and i32 %6, 2, !dbg !7393
  %8 = icmp eq i32 %7, 0, !dbg !7394
  br i1 %8, label %19, label %9, !dbg !7395

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7396
  call void @llvm.dbg.value(metadata i32 %10, metadata !7379, metadata !DIExpression()), !dbg !7397
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7398
  %12 = and i32 %11, 128, !dbg !7400
  %13 = icmp eq i32 %12, 0, !dbg !7401
  br i1 %13, label %19, label %14, !dbg !7402

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !7378, metadata !DIExpression()), !dbg !7387
  %15 = icmp eq i32 %1, 0, !dbg !7403
  br i1 %15, label %19, label %16, !dbg !7406

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7407
  %18 = and i32 %17, -129, !dbg !7407
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7407
  br label %19, !dbg !7409

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !7387
  call void @llvm.dbg.value(metadata i32 %20, metadata !7378, metadata !DIExpression()), !dbg !7387
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7410
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7412
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7414
  %24 = and i32 %23, 16, !dbg !7415
  %25 = icmp eq i32 %24, 0, !dbg !7415
  br i1 %25, label %26, label %30, !dbg !7416

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7417
  %28 = and i32 %27, 2, !dbg !7418
  %29 = icmp eq i32 %28, 0, !dbg !7418
  br i1 %29, label %39, label %30, !dbg !7419

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7420
  %32 = and i32 %31, 2048, !dbg !7421
  %33 = icmp eq i32 %32, 0, !dbg !7421
  br i1 %33, label %39, label %34, !dbg !7422

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !7423
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !7424
  call void @llvm.dbg.value(metadata i32 %36, metadata !7382, metadata !DIExpression()), !dbg !7425
  %37 = icmp eq i32 %36, 0, !dbg !7426
  br i1 %37, label %39, label %38, !dbg !7428

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !7429, metadata !DIExpression()) #24, !dbg !7432
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !7435, !srcloc !7436
  call void @llvm.dbg.value(metadata i32 2, metadata !7377, metadata !DIExpression()), !dbg !7387
  br label %39, !dbg !7437

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !7387
  call void @llvm.dbg.value(metadata i32 %40, metadata !7377, metadata !DIExpression()), !dbg !7387
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7438
  %42 = and i32 %41, 32, !dbg !7440
  %43 = icmp eq i32 %42, 0, !dbg !7441
  br i1 %43, label %47, label %44, !dbg !7442

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7443
  %46 = and i32 %45, -8193, !dbg !7443
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7443
  br label %47, !dbg !7445

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7446
  %49 = or i32 %48, 255, !dbg !7446
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7446
  store i8 0, i8* %2, align 1, !dbg !7447
  ret i32 %40, !dbg !7448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !7449 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7453, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i32 %0, metadata !7454, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i8* %1, metadata !7455, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i32 0, metadata !7456, metadata !DIExpression()), !dbg !7460
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7461
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7463
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7465
  %6 = and i32 %5, 512, !dbg !7466
  %7 = icmp eq i32 %6, 0, !dbg !7466
  br i1 %7, label %18, label %8, !dbg !7467

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7468
  call void @llvm.dbg.value(metadata i32 %9, metadata !7457, metadata !DIExpression()), !dbg !7469
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7470
  %11 = and i32 %10, 32768, !dbg !7472
  %12 = icmp ne i32 %11, 0, !dbg !7473
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7474
  br i1 %14, label %15, label %18, !dbg !7474

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7475
  %17 = and i32 %16, -32769, !dbg !7475
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7475
  br label %18, !dbg !7479

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7480
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7482
  %21 = and i32 %20, 256, !dbg !7484
  %22 = icmp eq i32 %21, 0, !dbg !7485
  br i1 %22, label %23, label %25, !dbg !7486

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7487
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7489
  %27 = or i32 %26, 65280, !dbg !7489
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7489
  store i8 0, i8* %1, align 1, !dbg !7490
  ret void, !dbg !7491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !7492 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7498, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.value(metadata i32 0, metadata !7499, metadata !DIExpression()), !dbg !7500
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7501
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7503
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7505
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7507
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7509
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7511
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7513
  %8 = or i32 %7, -65536, !dbg !7513
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7513
  ret void, !dbg !7514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !7515 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7519, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.value(metadata i8* %0, metadata !7520, metadata !DIExpression()), !dbg !7521
  store i8 0, i8* %0, align 1, !dbg !7522
  ret void, !dbg !7523
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7524 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7528, metadata !DIExpression()), !dbg !7531
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7532
  %3 = load i32, i32* %2, align 4, !dbg !7532
  %4 = inttoptr i32 %3 to i16*, !dbg !7533
  call void @llvm.dbg.value(metadata i16* %4, metadata !7529, metadata !DIExpression()), !dbg !7531
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7534
  %6 = or i32 %5, 256, !dbg !7534
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7534
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7535, !srcloc !7538
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7539, !srcloc !7542
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7543
  %8 = load i16, i16* %7, align 2, !dbg !7544
  call void @llvm.dbg.value(metadata i16 %8, metadata !7530, metadata !DIExpression()), !dbg !7531
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7545
  %10 = and i32 %9, -257, !dbg !7545
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7545
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7546, !srcloc !7538
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7548, !srcloc !7542
  %11 = icmp eq i16 %8, -8446, !dbg !7550
  ret i1 %11, !dbg !7552
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7553 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7554
  %2 = or i32 %1, 16, !dbg !7554
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7554
  ret void, !dbg !7555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7556 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7559, metadata !DIExpression()), !dbg !7560
  br label %1, !dbg !7561

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7559, metadata !DIExpression()), !dbg !7560
  tail call fastcc void @__NVIC_SetPriority.15(i32 noundef %2) #26, !dbg !7563
  %3 = add nuw nsw i32 %2, 1, !dbg !7566
  call void @llvm.dbg.value(metadata i32 %3, metadata !7559, metadata !DIExpression()), !dbg !7560
  %4 = icmp eq i32 %3, 97, !dbg !7567
  br i1 %4, label %5, label %1, !dbg !7561, !llvm.loop !7568

5:                                                ; preds = %1
  ret void, !dbg !7570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.15(i32 noundef %0) unnamed_addr #15 !dbg !7571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7573, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i32 1, metadata !7574, metadata !DIExpression()), !dbg !7575
  %2 = and i32 %0, 15, !dbg !7576
  %3 = add nsw i32 %2, -4, !dbg !7576
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7576
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7576
  %6 = icmp slt i32 %0, 0, !dbg !7576
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7576
  store volatile i8 16, i8* %7, align 1, !dbg !7577
  ret void, !dbg !7579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7580 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7686, metadata !DIExpression()), !dbg !7687
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7688
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7690
  br i1 %3, label %4, label %12, !dbg !7691

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7692, !srcloc !7704
  call void @llvm.dbg.value(metadata i32 %5, metadata !7695, metadata !DIExpression()) #24, !dbg !7705
  %6 = icmp eq i32 %5, 0, !dbg !7706
  br i1 %6, label %12, label %7, !dbg !7707

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7708
  %9 = or i32 %8, 268435456, !dbg !7708
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7708
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7710
  %11 = and i32 %10, -32769, !dbg !7710
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7710
  br label %12, !dbg !7711

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7712
  ret void, !dbg !7713
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7714 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7715
  ret void, !dbg !7716
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !468, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.value(metadata i8 0, metadata !469, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.value(metadata i32 64, metadata !471, metadata !DIExpression()), !dbg !7717
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7718
  %3 = load i32, i32* %2, align 4, !dbg !7718
  %4 = add i32 %3, -64, !dbg !7720
  call void @llvm.dbg.value(metadata i32 %4, metadata !470, metadata !DIExpression()), !dbg !7717
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7721
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7722
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7723
  call void @llvm.dbg.value(metadata i8 1, metadata !469, metadata !DIExpression()), !dbg !7717
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7724
  ret void, !dbg !7725
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7726 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7727
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7728, !srcloc !7731
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7732, !srcloc !7735
  ret void, !dbg !7736
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7737 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7738, !srcloc !7741
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7742
  ret void, !dbg !7743
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7744 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7759, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata i8 %1, metadata !7760, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata i32 %2, metadata !7761, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata i32 %3, metadata !7762, metadata !DIExpression()), !dbg !7763
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7764
  ret void, !dbg !7766
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7767 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7772, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i8 %1, metadata !7773, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i32 undef, metadata !7774, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i32 undef, metadata !7775, metadata !DIExpression()), !dbg !7777
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7778
  call void @llvm.dbg.value(metadata i8 %3, metadata !7776, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7777
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7779
  call void @llvm.dbg.value(metadata i32 %4, metadata !7776, metadata !DIExpression()), !dbg !7777
  %5 = trunc i32 %4 to i8, !dbg !7780
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7781
  ret void, !dbg !7782
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7783 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7787, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i8 %1, metadata !7788, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i8 %2, metadata !7789, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i1 %3, metadata !7790, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7793
  %5 = zext i8 %2 to i32, !dbg !7794
  call void @llvm.dbg.value(metadata i32 %5, metadata !7792, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i32 0, metadata !7791, metadata !DIExpression()), !dbg !7793
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7792, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i32 0, metadata !7791, metadata !DIExpression()), !dbg !7793
  %7 = icmp eq i8 %1, 0, !dbg !7795
  br i1 %7, label %29, label %8, !dbg !7798

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7792, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i32 %10, metadata !7791, metadata !DIExpression()), !dbg !7793
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7799
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7802
  %13 = load i32, i32* %12, align 4, !dbg !7802
  %14 = icmp eq i32 %13, 0, !dbg !7803
  br i1 %14, label %25, label %15, !dbg !7804

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7805

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7807
  %18 = icmp eq i32 %17, 0, !dbg !7807
  br i1 %18, label %29, label %19, !dbg !7808

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7809
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7810
  call void @llvm.dbg.value(metadata i32 %21, metadata !7792, metadata !DIExpression()), !dbg !7793
  %22 = icmp eq i32 %21, -22, !dbg !7811
  br i1 %22, label %29, label %23, !dbg !7813

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7814
  call void @llvm.dbg.value(metadata i32 %24, metadata !7792, metadata !DIExpression()), !dbg !7793
  br label %25, !dbg !7815

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7793
  call void @llvm.dbg.value(metadata i32 %26, metadata !7792, metadata !DIExpression()), !dbg !7793
  %27 = add nuw nsw i32 %10, 1, !dbg !7816
  call void @llvm.dbg.value(metadata i32 %27, metadata !7791, metadata !DIExpression()), !dbg !7793
  %28 = icmp eq i32 %27, %6, !dbg !7795
  br i1 %28, label %29, label %8, !dbg !7798, !llvm.loop !7817

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7793
  ret i32 %30, !dbg !7819
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7820 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7824, metadata !DIExpression()), !dbg !7826
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7827
  %3 = load i32, i32* %2, align 4, !dbg !7827
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7828, !range !3947
  %5 = icmp ult i32 %4, 2, !dbg !7828
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7829
  br i1 %7, label %8, label %15, !dbg !7829

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7830
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7831
  %11 = load i32, i32* %10, align 4, !dbg !7831
  %12 = and i32 %11, %9, !dbg !7832
  %13 = icmp eq i32 %12, 0, !dbg !7833
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7825, metadata !DIExpression()), !dbg !7826
  ret i32 %16, !dbg !7834
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7835 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7839, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7840, metadata !DIExpression()), !dbg !7842
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7843
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7843
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7841, metadata !DIExpression()), !dbg !7844
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7845
  %6 = load i32, i32* %5, align 4, !dbg !7845
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7846
  store i32 %6, i32* %7, align 4, !dbg !7847
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7848
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7849
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7850
  %11 = load i32, i32* %10, align 4, !dbg !7850
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7851
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7852
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7853
  ret i32 %12, !dbg !7854
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7855 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7862, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7863, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i32 undef, metadata !7864, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i32 %2, metadata !7865, metadata !DIExpression()), !dbg !7866
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7867
  %5 = load i32, i32* %4, align 4, !dbg !7867
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7868
  %7 = or i32 %6, %5, !dbg !7869
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7870
  store i32 %7, i32* %8, align 4, !dbg !7871
  ret void, !dbg !7872
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7873 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7877, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7878, metadata !DIExpression()), !dbg !7879
  %3 = zext i8 %0 to i32, !dbg !7880
  %4 = icmp ugt i8 %0, 7, !dbg !7882
  br i1 %4, label %6, label %5, !dbg !7883

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7884
  br label %6, !dbg !7885

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7879
  ret i32 %7, !dbg !7886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7891, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7892, metadata !DIExpression()), !dbg !7893
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7894
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7895
  %4 = load i32, i32* %3, align 4, !dbg !7895
  %5 = and i32 %4, -32, !dbg !7896
  %6 = or i32 %5, %0, !dbg !7897
  %7 = or i32 %6, 16, !dbg !7897
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7898
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7899
  %9 = load i32, i32* %8, align 4, !dbg !7899
  %10 = or i32 %9, 1, !dbg !7900
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7901
  ret void, !dbg !7902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7906, metadata !DIExpression()), !dbg !7907
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7908
  ret void, !dbg !7909
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7914, metadata !DIExpression()), !dbg !7915
  %2 = icmp ult i32 %0, 33, !dbg !7916
  br i1 %2, label %11, label %3, !dbg !7918

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7919
  br i1 %4, label %11, label %5, !dbg !7921

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7922
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7923, !range !3947
  %8 = mul nsw i32 %7, -2, !dbg !7924
  %9 = add nsw i32 %8, 62, !dbg !7924
  %10 = and i32 %9, 62, !dbg !7925
  br label %11, !dbg !7926

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7915
  ret i32 %12, !dbg !7927
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7928 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7932, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.value(metadata i8 %1, metadata !7933, metadata !DIExpression()), !dbg !7934
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7935
  ret void, !dbg !7937
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7938 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7942, metadata !DIExpression()), !dbg !7949
  call void @llvm.dbg.value(metadata i8 %1, metadata !7943, metadata !DIExpression()), !dbg !7949
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7950
  call void @llvm.dbg.value(metadata i8 %3, metadata !7944, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7949
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7951
  call void @llvm.dbg.value(metadata i32 %4, metadata !7944, metadata !DIExpression()), !dbg !7949
  %5 = icmp ne i32 %4, -22, !dbg !7952
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7953
  call void @llvm.dbg.value(metadata i32 %4, metadata !7945, metadata !DIExpression()), !dbg !7954
  br i1 %7, label %8, label %12, !dbg !7953

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7945, metadata !DIExpression()), !dbg !7954
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7955
  %10 = add i32 %9, 1, !dbg !7958
  call void @llvm.dbg.value(metadata i32 %10, metadata !7945, metadata !DIExpression()), !dbg !7954
  %11 = icmp eq i32 %10, 8, !dbg !7959
  br i1 %11, label %12, label %8, !dbg !7960, !llvm.loop !7961

12:                                               ; preds = %8, %2
  ret void, !dbg !7963
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7967, metadata !DIExpression()), !dbg !7968
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7969
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7970
  ret void, !dbg !7971
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7972 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7975
  %2 = icmp ugt i32 %1, 8, !dbg !7977
  br i1 %2, label %14, label %3, !dbg !7978

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7979
  call void @llvm.dbg.value(metadata i32 0, metadata !7974, metadata !DIExpression()), !dbg !7980
  %4 = icmp eq i32 %1, 0, !dbg !7981
  br i1 %4, label %12, label %5, !dbg !7984

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7984

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7974, metadata !DIExpression()), !dbg !7980
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7985
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7987
  %10 = add nuw i32 %8, 1, !dbg !7988
  call void @llvm.dbg.value(metadata i32 %10, metadata !7974, metadata !DIExpression()), !dbg !7980
  %11 = icmp eq i32 %10, %1, !dbg !7981
  br i1 %11, label %12, label %7, !dbg !7984, !llvm.loop !7989

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7991
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7992
  tail call void @arm_core_mpu_enable() #26, !dbg !7993
  br label %14, !dbg !7994

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7980
  ret i32 %15, !dbg !7995
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7996 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8003, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.value(metadata i8* %1, metadata !8004, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.value(metadata i8* %0, metadata !8005, metadata !DIExpression()), !dbg !8006
  %3 = load i8, i8* %1, align 1, !dbg !8007
  %4 = icmp eq i8 %3, 0, !dbg !8008
  br i1 %4, label %13, label %5, !dbg !8009

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8003, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.value(metadata i8* %8, metadata !8004, metadata !DIExpression()), !dbg !8006
  store i8 %6, i8* %7, align 1, !dbg !8010
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8012
  call void @llvm.dbg.value(metadata i8* %9, metadata !8003, metadata !DIExpression()), !dbg !8006
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8013
  call void @llvm.dbg.value(metadata i8* %10, metadata !8004, metadata !DIExpression()), !dbg !8006
  %11 = load i8, i8* %10, align 1, !dbg !8007
  %12 = icmp eq i8 %11, 0, !dbg !8008
  br i1 %12, label %13, label %5, !dbg !8009, !llvm.loop !8014

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8016
  ret i8* %0, !dbg !8017
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8018 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8022, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %1, metadata !8023, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %2, metadata !8024, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %0, metadata !8025, metadata !DIExpression()), !dbg !8026
  %4 = icmp eq i32 %2, 0, !dbg !8027
  br i1 %4, label %22, label %5, !dbg !8028

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8022, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %7, metadata !8024, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %8, metadata !8023, metadata !DIExpression()), !dbg !8026
  %9 = load i8, i8* %8, align 1, !dbg !8029
  %10 = icmp eq i8 %9, 0, !dbg !8030
  br i1 %10, label %16, label %11, !dbg !8031

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8032
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8034
  call void @llvm.dbg.value(metadata i8* %12, metadata !8023, metadata !DIExpression()), !dbg !8026
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8035
  call void @llvm.dbg.value(metadata i8* %13, metadata !8022, metadata !DIExpression()), !dbg !8026
  %14 = add i32 %7, -1, !dbg !8036
  call void @llvm.dbg.value(metadata i32 %14, metadata !8024, metadata !DIExpression()), !dbg !8026
  %15 = icmp eq i32 %14, 0, !dbg !8027
  br i1 %15, label %22, label %5, !dbg !8028, !llvm.loop !8037

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8022, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %18, metadata !8024, metadata !DIExpression()), !dbg !8026
  store i8 0, i8* %17, align 1, !dbg !8039
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8041
  call void @llvm.dbg.value(metadata i8* %19, metadata !8022, metadata !DIExpression()), !dbg !8026
  %20 = add i32 %18, -1, !dbg !8042
  call void @llvm.dbg.value(metadata i32 %20, metadata !8024, metadata !DIExpression()), !dbg !8026
  %21 = icmp eq i32 %20, 0, !dbg !8043
  br i1 %21, label %22, label %16, !dbg !8044, !llvm.loop !8045

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8047
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8048 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8052, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 %1, metadata !8053, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 %1, metadata !8054, metadata !DIExpression()), !dbg !8055
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8056

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8052, metadata !DIExpression()), !dbg !8055
  %6 = load i8, i8* %5, align 1, !dbg !8057
  %7 = icmp eq i8 %6, %3, !dbg !8058
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8059
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8060
  call void @llvm.dbg.value(metadata i8* %10, metadata !8052, metadata !DIExpression()), !dbg !8055
  br i1 %9, label %11, label %4, !dbg !8059, !llvm.loop !8062

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8064
  ret i8* %12, !dbg !8065
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8066 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8068, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i32 %1, metadata !8069, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i8* null, metadata !8070, metadata !DIExpression()), !dbg !8071
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8072

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8071
  call void @llvm.dbg.value(metadata i8* %6, metadata !8070, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i8* %5, metadata !8068, metadata !DIExpression()), !dbg !8071
  %7 = load i8, i8* %5, align 1, !dbg !8073
  %8 = icmp eq i8 %7, %3, !dbg !8076
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8077
  call void @llvm.dbg.value(metadata i8* %9, metadata !8070, metadata !DIExpression()), !dbg !8071
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8078
  call void @llvm.dbg.value(metadata i8* %10, metadata !8068, metadata !DIExpression()), !dbg !8071
  %11 = icmp eq i8 %7, 0, !dbg !8079
  br i1 %11, label %12, label %4, !dbg !8079, !llvm.loop !8080

12:                                               ; preds = %4
  ret i8* %9, !dbg !8082
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !8083 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8087, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 0, metadata !8088, metadata !DIExpression()), !dbg !8089
  %2 = load i8, i8* %0, align 1, !dbg !8090
  %3 = icmp eq i8 %2, 0, !dbg !8091
  br i1 %3, label %11, label %4, !dbg !8092

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8088, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i8* %6, metadata !8087, metadata !DIExpression()), !dbg !8089
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8093
  call void @llvm.dbg.value(metadata i8* %7, metadata !8087, metadata !DIExpression()), !dbg !8089
  %8 = add i32 %5, 1, !dbg !8095
  call void @llvm.dbg.value(metadata i32 %8, metadata !8088, metadata !DIExpression()), !dbg !8089
  %9 = load i8, i8* %7, align 1, !dbg !8090
  %10 = icmp eq i8 %9, 0, !dbg !8091
  br i1 %10, label %11, label %4, !dbg !8092, !llvm.loop !8096

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8089
  ret i32 %12, !dbg !8098
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8099 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8103, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.value(metadata i32 %1, metadata !8104, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.value(metadata i32 0, metadata !8105, metadata !DIExpression()), !dbg !8106
  %3 = load i8, i8* %0, align 1, !dbg !8107
  %4 = icmp ne i8 %3, 0, !dbg !8108
  %5 = icmp ne i32 %1, 0, !dbg !8109
  %6 = and i1 %4, %5, !dbg !8109
  br i1 %6, label %7, label %16, !dbg !8110

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8105, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.value(metadata i8* %9, metadata !8103, metadata !DIExpression()), !dbg !8106
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8111
  call void @llvm.dbg.value(metadata i8* %10, metadata !8103, metadata !DIExpression()), !dbg !8106
  %11 = add nuw i32 %8, 1, !dbg !8113
  call void @llvm.dbg.value(metadata i32 %11, metadata !8105, metadata !DIExpression()), !dbg !8106
  %12 = load i8, i8* %10, align 1, !dbg !8107
  %13 = icmp ne i8 %12, 0, !dbg !8108
  %14 = icmp ult i32 %11, %1, !dbg !8109
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8109
  br i1 %15, label %7, label %16, !dbg !8110, !llvm.loop !8114

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8106
  ret i32 %17, !dbg !8116
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !8117 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8121, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i8* %1, metadata !8122, metadata !DIExpression()), !dbg !8123
  %3 = load i8, i8* %0, align 1, !dbg !8124
  %4 = load i8, i8* %1, align 1, !dbg !8125
  %5 = icmp ne i8 %3, %4, !dbg !8126
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8127
  br i1 %7, label %18, label %8, !dbg !8127

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8122, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i8* %10, metadata !8121, metadata !DIExpression()), !dbg !8123
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8128
  call void @llvm.dbg.value(metadata i8* %11, metadata !8121, metadata !DIExpression()), !dbg !8123
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8130
  call void @llvm.dbg.value(metadata i8* %12, metadata !8122, metadata !DIExpression()), !dbg !8123
  %13 = load i8, i8* %11, align 1, !dbg !8124
  %14 = load i8, i8* %12, align 1, !dbg !8125
  %15 = icmp ne i8 %13, %14, !dbg !8126
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8127
  br i1 %17, label %18, label %8, !dbg !8127, !llvm.loop !8131

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8124
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8125
  %21 = zext i8 %19 to i32, !dbg !8134
  %22 = zext i8 %20 to i32, !dbg !8135
  %23 = sub nsw i32 %21, %22, !dbg !8136
  ret i32 %23, !dbg !8137
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8138 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8142, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i8* %1, metadata !8143, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %2, metadata !8144, metadata !DIExpression()), !dbg !8145
  %4 = icmp eq i32 %2, 0, !dbg !8146
  br i1 %4, label %23, label %5, !dbg !8146

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8144, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i8* %7, metadata !8143, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i8* %8, metadata !8142, metadata !DIExpression()), !dbg !8145
  %9 = load i8, i8* %8, align 1, !dbg !8147
  %10 = load i8, i8* %7, align 1, !dbg !8148
  %11 = icmp ne i8 %9, %10, !dbg !8149
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8150
  br i1 %13, label %19, label %14, !dbg !8150

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8151
  call void @llvm.dbg.value(metadata i8* %15, metadata !8142, metadata !DIExpression()), !dbg !8145
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8153
  call void @llvm.dbg.value(metadata i8* %16, metadata !8143, metadata !DIExpression()), !dbg !8145
  %17 = add i32 %6, -1, !dbg !8154
  call void @llvm.dbg.value(metadata i32 %17, metadata !8144, metadata !DIExpression()), !dbg !8145
  %18 = icmp eq i32 %17, 0, !dbg !8146
  br i1 %18, label %23, label %5, !dbg !8146, !llvm.loop !8155

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8158
  %21 = zext i8 %10 to i32, !dbg !8159
  %22 = sub nsw i32 %20, %21, !dbg !8160
  br label %23, !dbg !8161

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8161
  ret i32 %24, !dbg !8162
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8163 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8168, metadata !DIExpression()), !dbg !8173
  call void @llvm.dbg.value(metadata i8* %1, metadata !8169, metadata !DIExpression()), !dbg !8173
  call void @llvm.dbg.value(metadata i8** %2, metadata !8170, metadata !DIExpression()), !dbg !8173
  %4 = icmp eq i8* %0, null, !dbg !8174
  br i1 %4, label %5, label %7, !dbg !8174

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8175
  br label %7, !dbg !8174

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8174
  call void @llvm.dbg.value(metadata i8* %8, metadata !8171, metadata !DIExpression()), !dbg !8173
  %9 = load i8, i8* %8, align 1, !dbg !8176
  %10 = icmp eq i8 %9, 0, !dbg !8176
  br i1 %10, label %33, label %11, !dbg !8177

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8171, metadata !DIExpression()), !dbg !8173
  %14 = zext i8 %12 to i32, !dbg !8176
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8178
  %16 = icmp eq i8* %15, null, !dbg !8177
  br i1 %16, label %21, label %17, !dbg !8179

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8180
  call void @llvm.dbg.value(metadata i8* %18, metadata !8171, metadata !DIExpression()), !dbg !8173
  %19 = load i8, i8* %18, align 1, !dbg !8176
  %20 = icmp eq i8 %19, 0, !dbg !8176
  br i1 %20, label %33, label %11, !dbg !8177, !llvm.loop !8182

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8172, metadata !DIExpression()), !dbg !8173
  %24 = zext i8 %22 to i32, !dbg !8184
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8185
  %26 = icmp eq i8* %25, null, !dbg !8186
  br i1 %26, label %27, label %31, !dbg !8187

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8188
  call void @llvm.dbg.value(metadata i8* %28, metadata !8172, metadata !DIExpression()), !dbg !8173
  %29 = load i8, i8* %28, align 1, !dbg !8184
  %30 = icmp eq i8 %29, 0, !dbg !8184
  br i1 %30, label %33, label %21, !dbg !8190, !llvm.loop !8191

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8193
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8196
  br label %33, !dbg !8197

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8173
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8173
  store i8* %34, i8** %2, align 4, !dbg !8173
  ret i8* %35, !dbg !8198
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8199 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8201, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata i8* %1, metadata !8202, metadata !DIExpression()), !dbg !8203
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8204
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8205
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8206
  ret i8* %0, !dbg !8207
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8208 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8210, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i8* %1, metadata !8211, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i32 %2, metadata !8212, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i8* %0, metadata !8213, metadata !DIExpression()), !dbg !8215
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8216
  call void @llvm.dbg.value(metadata i32 %4, metadata !8214, metadata !DIExpression()), !dbg !8215
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8217
  call void @llvm.dbg.value(metadata i8* %5, metadata !8210, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i8* %1, metadata !8211, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i32 %2, metadata !8212, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i32 %2, metadata !8212, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8215
  %6 = icmp eq i32 %2, 0, !dbg !8218
  br i1 %6, label %18, label %7, !dbg !8219

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8220
  call void @llvm.dbg.value(metadata i8* %9, metadata !8210, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i8* %10, metadata !8211, metadata !DIExpression()), !dbg !8215
  %12 = load i8, i8* %10, align 1, !dbg !8221
  %13 = icmp eq i8 %12, 0, !dbg !8222
  br i1 %13, label %18, label %14, !dbg !8223

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8224
  call void @llvm.dbg.value(metadata i8* %15, metadata !8211, metadata !DIExpression()), !dbg !8215
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8226
  call void @llvm.dbg.value(metadata i8* %16, metadata !8210, metadata !DIExpression()), !dbg !8215
  store i8 %12, i8* %9, align 1, !dbg !8227
  call void @llvm.dbg.value(metadata i32 %11, metadata !8212, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i32 %11, metadata !8212, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8215
  %17 = icmp eq i32 %11, 0, !dbg !8218
  br i1 %17, label %18, label %7, !dbg !8219, !llvm.loop !8228

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8215
  store i8 0, i8* %19, align 1, !dbg !8230
  ret i8* %0, !dbg !8231
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8232 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8236, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i8* %1, metadata !8237, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %2, metadata !8238, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i8* %0, metadata !8239, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i8* %1, metadata !8240, metadata !DIExpression()), !dbg !8241
  %4 = icmp eq i32 %2, 0, !dbg !8242
  br i1 %4, label %31, label %5, !dbg !8244

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8240, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i8* %0, metadata !8239, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %2, metadata !8238, metadata !DIExpression()), !dbg !8241
  %6 = add i32 %2, -1, !dbg !8245
  call void @llvm.dbg.value(metadata i32 %6, metadata !8238, metadata !DIExpression()), !dbg !8241
  %7 = icmp eq i32 %6, 0, !dbg !8246
  br i1 %7, label %23, label %8, !dbg !8247

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8248
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8248
  br label %11, !dbg !8248

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8240, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i8* %14, metadata !8239, metadata !DIExpression()), !dbg !8241
  %15 = load i8, i8* %14, align 1, !dbg !8249
  %16 = load i8, i8* %13, align 1, !dbg !8250
  %17 = icmp eq i8 %15, %16, !dbg !8251
  br i1 %17, label %18, label %23, !dbg !8248

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8252
  call void @llvm.dbg.value(metadata i8* %19, metadata !8239, metadata !DIExpression()), !dbg !8241
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8254
  call void @llvm.dbg.value(metadata i8* %20, metadata !8240, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %12, metadata !8238, metadata !DIExpression()), !dbg !8241
  %21 = add i32 %12, -1, !dbg !8245
  call void @llvm.dbg.value(metadata i32 %21, metadata !8238, metadata !DIExpression()), !dbg !8241
  %22 = icmp eq i32 %21, 0, !dbg !8246
  br i1 %22, label %23, label %11, !dbg !8247, !llvm.loop !8255

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8241
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8241
  %26 = load i8, i8* %24, align 1, !dbg !8257
  %27 = zext i8 %26 to i32, !dbg !8257
  %28 = load i8, i8* %25, align 1, !dbg !8258
  %29 = zext i8 %28 to i32, !dbg !8258
  %30 = sub nsw i32 %27, %29, !dbg !8259
  br label %31, !dbg !8260

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8241
  ret i32 %32, !dbg !8261
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8262 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8266, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i8* %1, metadata !8267, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i32 %2, metadata !8268, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i8* %0, metadata !8269, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i8* %1, metadata !8270, metadata !DIExpression()), !dbg !8271
  %4 = ptrtoint i8* %0 to i32, !dbg !8272
  %5 = ptrtoint i8* %1 to i32, !dbg !8272
  %6 = sub i32 %4, %5, !dbg !8272
  %7 = icmp ult i32 %6, %2, !dbg !8274
  br i1 %7, label %10, label %8, !dbg !8275

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8270, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i8* %0, metadata !8269, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i32 %2, metadata !8268, metadata !DIExpression()), !dbg !8271
  %9 = icmp eq i32 %2, 0, !dbg !8276
  br i1 %9, label %26, label %17, !dbg !8278

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8268, metadata !DIExpression()), !dbg !8271
  %12 = add i32 %11, -1, !dbg !8279
  call void @llvm.dbg.value(metadata i32 %12, metadata !8268, metadata !DIExpression()), !dbg !8271
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8282
  %14 = load i8, i8* %13, align 1, !dbg !8282
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8283
  store i8 %14, i8* %15, align 1, !dbg !8284
  %16 = icmp eq i32 %12, 0, !dbg !8285
  br i1 %16, label %26, label %10, !dbg !8286, !llvm.loop !8287

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8270, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i8* %19, metadata !8269, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i32 %20, metadata !8268, metadata !DIExpression()), !dbg !8271
  %21 = load i8, i8* %18, align 1, !dbg !8289
  store i8 %21, i8* %19, align 1, !dbg !8291
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8292
  call void @llvm.dbg.value(metadata i8* %22, metadata !8269, metadata !DIExpression()), !dbg !8271
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8293
  call void @llvm.dbg.value(metadata i8* %23, metadata !8270, metadata !DIExpression()), !dbg !8271
  %24 = add i32 %20, -1, !dbg !8294
  call void @llvm.dbg.value(metadata i32 %24, metadata !8268, metadata !DIExpression()), !dbg !8271
  %25 = icmp eq i32 %24, 0, !dbg !8276
  br i1 %25, label %26, label %17, !dbg !8278, !llvm.loop !8295

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8297
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8298 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8304, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i8* %1, metadata !8305, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i32 %2, metadata !8306, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i8* %0, metadata !8307, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i8* %1, metadata !8308, metadata !DIExpression()), !dbg !8309
  %4 = icmp eq i32 %2, 0, !dbg !8310
  br i1 %4, label %14, label %5, !dbg !8311

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8308, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i8* %7, metadata !8307, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i32 %8, metadata !8306, metadata !DIExpression()), !dbg !8309
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8312
  call void @llvm.dbg.value(metadata i8* %9, metadata !8308, metadata !DIExpression()), !dbg !8309
  %10 = load i8, i8* %6, align 1, !dbg !8314
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8315
  call void @llvm.dbg.value(metadata i8* %11, metadata !8307, metadata !DIExpression()), !dbg !8309
  store i8 %10, i8* %7, align 1, !dbg !8316
  %12 = add i32 %8, -1, !dbg !8317
  call void @llvm.dbg.value(metadata i32 %12, metadata !8306, metadata !DIExpression()), !dbg !8309
  %13 = icmp eq i32 %12, 0, !dbg !8310
  br i1 %13, label %14, label %5, !dbg !8311, !llvm.loop !8318

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8320
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8321 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8325, metadata !DIExpression()), !dbg !8330
  call void @llvm.dbg.value(metadata i32 %1, metadata !8326, metadata !DIExpression()), !dbg !8330
  call void @llvm.dbg.value(metadata i32 %2, metadata !8327, metadata !DIExpression()), !dbg !8330
  call void @llvm.dbg.value(metadata i8* %0, metadata !8328, metadata !DIExpression()), !dbg !8330
  %4 = trunc i32 %1 to i8, !dbg !8331
  call void @llvm.dbg.value(metadata i8 %4, metadata !8329, metadata !DIExpression()), !dbg !8330
  call void @llvm.dbg.value(metadata i32 %2, metadata !8327, metadata !DIExpression()), !dbg !8330
  call void @llvm.dbg.value(metadata i8* %0, metadata !8328, metadata !DIExpression()), !dbg !8330
  %5 = icmp eq i32 %2, 0, !dbg !8332
  br i1 %5, label %12, label %6, !dbg !8333

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8327, metadata !DIExpression()), !dbg !8330
  call void @llvm.dbg.value(metadata i8* %8, metadata !8328, metadata !DIExpression()), !dbg !8330
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8334
  call void @llvm.dbg.value(metadata i8* %9, metadata !8328, metadata !DIExpression()), !dbg !8330
  store i8 %4, i8* %8, align 1, !dbg !8336
  %10 = add i32 %7, -1, !dbg !8337
  call void @llvm.dbg.value(metadata i32 %10, metadata !8327, metadata !DIExpression()), !dbg !8330
  %11 = icmp eq i32 %10, 0, !dbg !8332
  br i1 %11, label %12, label %6, !dbg !8333, !llvm.loop !8338

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8340
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8341 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8345, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 %1, metadata !8346, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 %2, metadata !8347, metadata !DIExpression()), !dbg !8351
  %4 = icmp eq i32 %2, 0, !dbg !8352
  br i1 %4, label %17, label %5, !dbg !8353

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8354

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8355
  call void @llvm.dbg.value(metadata i8* %9, metadata !8348, metadata !DIExpression()), !dbg !8355
  call void @llvm.dbg.value(metadata i32 %8, metadata !8347, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8* %9, metadata !8348, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8355
  %10 = load i8, i8* %9, align 1, !dbg !8356
  %11 = icmp eq i8 %10, %6, !dbg !8359
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8360
  call void @llvm.dbg.value(metadata i8* %12, metadata !8348, metadata !DIExpression()), !dbg !8355
  call void @llvm.dbg.value(metadata i32 %13, metadata !8347, metadata !DIExpression()), !dbg !8351
  br i1 %15, label %16, label %7, !dbg !8360, !llvm.loop !8361

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8363

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8351
  ret i8* %19, !dbg !8364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !8365 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8367, metadata !DIExpression()), !dbg !8368
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8369
  ret void, !dbg !8370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !8371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8373, metadata !DIExpression()), !dbg !8374
  ret i32 -1, !dbg !8375
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8380, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.value(metadata i32* %1, metadata !8381, metadata !DIExpression()), !dbg !8382
  %3 = ptrtoint i32* %1 to i32, !dbg !8383
  %4 = and i32 %3, -2, !dbg !8383
  %5 = icmp eq i32 %4, 2, !dbg !8383
  br i1 %5, label %6, label %9, !dbg !8383

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8384
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8384
  br label %9, !dbg !8385

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8385
  ret i32 %10, !dbg !8386
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8389, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32* %1, metadata !8390, metadata !DIExpression()), !dbg !8391
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8392
  ret i32 %3, !dbg !8393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8397, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32* %1, metadata !8398, metadata !DIExpression()), !dbg !8399
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8400, !srcloc !8402
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8403
  ret i32 %3, !dbg !8404
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8405 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8410, metadata !DIExpression()), !dbg !8414
  call void @llvm.dbg.value(metadata i32* %1, metadata !8411, metadata !DIExpression()), !dbg !8414
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8415
  call void @llvm.dbg.value(metadata i32 %3, metadata !8412, metadata !DIExpression()), !dbg !8414
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !8416
  call void @llvm.dbg.value(metadata i32 %4, metadata !8413, metadata !DIExpression()), !dbg !8414
  %5 = icmp ne i32 %3, %4, !dbg !8417
  %6 = sext i1 %5 to i32, !dbg !8418
  ret i32 %6, !dbg !8419
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8420 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8424, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i32 %1, metadata !8425, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i32 %2, metadata !8426, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i32* %3, metadata !8427, metadata !DIExpression()), !dbg !8428
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8429
  ret i32 %5, !dbg !8430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8431 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8433, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %1, metadata !8434, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %2, metadata !8435, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32* %3, metadata !8436, metadata !DIExpression()), !dbg !8437
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8438, !srcloc !8440
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8441
  ret i32 %5, !dbg !8442
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8443 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8445, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata i32 %1, metadata !8446, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata i32 %2, metadata !8447, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata i32* %3, metadata !8448, metadata !DIExpression()), !dbg !8453
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8454
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8456
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8456
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8456
  br i1 %11, label %33, label %12, !dbg !8456

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8453
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8453
  call void @llvm.dbg.value(metadata i8* %14, metadata !8451, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata i32 %13, metadata !8449, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata i32 %1, metadata !8450, metadata !DIExpression()), !dbg !8453
  br label %15, !dbg !8457

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8459
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8453
  call void @llvm.dbg.value(metadata i8* %17, metadata !8451, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata i32 %16, metadata !8450, metadata !DIExpression()), !dbg !8453
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8460
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8463
  call void @llvm.dbg.value(metadata i8* %19, metadata !8451, metadata !DIExpression()), !dbg !8453
  %20 = load i8, i8* %17, align 1, !dbg !8464
  %21 = zext i8 %20 to i32, !dbg !8465
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8460
  %23 = icmp eq i32 %22, -1, !dbg !8466
  br i1 %23, label %30, label %24, !dbg !8467

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8468
  call void @llvm.dbg.value(metadata i32 %25, metadata !8450, metadata !DIExpression()), !dbg !8453
  %26 = icmp eq i32 %25, 0, !dbg !8469
  br i1 %26, label %27, label %15, !dbg !8470, !llvm.loop !8471

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8473
  call void @llvm.dbg.value(metadata i32 %28, metadata !8449, metadata !DIExpression()), !dbg !8453
  %29 = icmp eq i32 %28, 0, !dbg !8474
  br i1 %29, label %30, label %12, !dbg !8475, !llvm.loop !8476

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8453
  call void @llvm.dbg.value(metadata i32 %31, metadata !8449, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.label(metadata !8452), !dbg !8479
  %32 = sub i32 %2, %31, !dbg !8480
  br label %33, !dbg !8481

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8453
  ret i32 %34, !dbg !8482
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8483 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8487, metadata !DIExpression()), !dbg !8488
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8489
  %3 = icmp eq i32 %2, -1, !dbg !8491
  br i1 %3, label %8, label %4, !dbg !8492

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8493
  %6 = icmp eq i32 %5, -1, !dbg !8494
  %7 = sext i1 %6 to i32, !dbg !8493
  br label %8, !dbg !8495

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8488
  ret i32 %9, !dbg !8496
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8497 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8499, metadata !DIExpression()), !dbg !8500
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8501
  ret void, !dbg !8502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8507, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.value(metadata i32 %1, metadata !8508, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8509, metadata !DIExpression()), !dbg !8513
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8514
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8514
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8514
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8510, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.value(metadata i32 %0, metadata !8512, metadata !DIExpression()), !dbg !8513
  %7 = icmp slt i32 %0, %1, !dbg !8515
  br i1 %7, label %8, label %22, !dbg !8518

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8512, metadata !DIExpression()), !dbg !8513
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8519
  %11 = icmp eq i32 %10, 0, !dbg !8519
  br i1 %11, label %19, label %12, !dbg !8522

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8523
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8525
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8525
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8527
  br i1 %15, label %19, label %16, !dbg !8528

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8529
  %18 = load i8*, i8** %17, align 4, !dbg !8529
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8530
  br label %19, !dbg !8531

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8532
  call void @llvm.dbg.value(metadata i32 %20, metadata !8512, metadata !DIExpression()), !dbg !8513
  %21 = icmp eq i32 %20, %1, !dbg !8515
  br i1 %21, label %22, label %8, !dbg !8518, !llvm.loop !8533

22:                                               ; preds = %19, %3
  ret void, !dbg !8535
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8538, metadata !DIExpression()), !dbg !8539
  %2 = shl nuw i32 1, %0, !dbg !8540
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8543
  ret i32 %3, !dbg !8544
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8549, metadata !DIExpression()), !dbg !8550
  %2 = shl nuw i32 1, %0, !dbg !8551
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8554
  ret void, !dbg !8555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8559, metadata !DIExpression()), !dbg !8560
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8561
  ret void, !dbg !8562
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8565, metadata !DIExpression()), !dbg !8566
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8567
  %3 = and i32 %2, %0, !dbg !8567
  %4 = icmp eq i32 %3, %0, !dbg !8568
  %5 = zext i1 %4 to i32, !dbg !8568
  ret i32 %5, !dbg !8569
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8570 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8572, metadata !DIExpression()), !dbg !8573
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8574
  ret void, !dbg !8575
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8576 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8578, metadata !DIExpression()), !dbg !8579
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8580
  ret void, !dbg !8581
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8582 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8584, metadata !DIExpression()), !dbg !8585
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8586
  ret void, !dbg !8587
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8588 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8590, metadata !DIExpression()), !dbg !8591
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8592
  ret void, !dbg !8593
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8594 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8596, metadata !DIExpression()), !dbg !8597
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8598
  ret void, !dbg !8599
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8600 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8602, metadata !DIExpression()), !dbg !8603
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8604
  ret void, !dbg !8605
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8606 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8608, metadata !DIExpression()), !dbg !8609
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8610
  ret void, !dbg !8611
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8612 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8614, metadata !DIExpression()), !dbg !8615
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8616
  ret void, !dbg !8617
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8618 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8620, metadata !DIExpression()), !dbg !8621
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8622
  ret void, !dbg !8623
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8624 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8626, metadata !DIExpression()), !dbg !8627
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8628
  ret void, !dbg !8629
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8630 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8632, metadata !DIExpression()), !dbg !8633
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8634
  ret i32 0, !dbg !8635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !726 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !730, metadata !DIExpression()), !dbg !8636
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8637
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8639
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8641
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8643
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8645
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8647
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8649
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8651
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8653
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8655
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8657
  ret void, !dbg !8659
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8660 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8662, metadata !DIExpression()), !dbg !8664
  call void @llvm.dbg.value(metadata i32 0, metadata !8663, metadata !DIExpression()), !dbg !8664
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8665
  %3 = load i32, i32* %2, align 4, !dbg !8665
  call void @llvm.dbg.value(metadata i32 %3, metadata !8663, metadata !DIExpression()), !dbg !8664
  %4 = shl nuw i32 1, %0, !dbg !8666
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8667
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8668
  ret void, !dbg !8669
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8672, metadata !DIExpression()), !dbg !8673
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8674
  %3 = or i32 %2, %0, !dbg !8674
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8674
  ret void, !dbg !8675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8678, metadata !DIExpression()), !dbg !8679
  %2 = icmp slt i32 %0, 32, !dbg !8680
  br i1 %2, label %3, label %5, !dbg !8682

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8683
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8685
  br label %5, !dbg !8686

5:                                                ; preds = %1, %3
  ret void, !dbg !8687
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8690, metadata !DIExpression()), !dbg !8691
  %2 = xor i32 %0, -1, !dbg !8692
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8692
  %4 = and i32 %3, %2, !dbg !8692
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8692
  ret void, !dbg !8693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8698, metadata !DIExpression()), !dbg !8700
  call void @llvm.dbg.value(metadata i32 %1, metadata !8699, metadata !DIExpression()), !dbg !8700
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8701

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8702
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8704
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8705
  br label %11, !dbg !8706

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8707
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8708
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8709
  br label %11, !dbg !8710

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8711
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8712
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8713
  br label %11, !dbg !8714

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8715
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8716
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8717
  br label %11, !dbg !8718

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8719
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8722, metadata !DIExpression()), !dbg !8723
  %2 = xor i32 %0, -1, !dbg !8724
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8724
  %4 = and i32 %3, %2, !dbg !8724
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8724
  ret void, !dbg !8725
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8726 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8728, metadata !DIExpression()), !dbg !8729
  %2 = xor i32 %0, -1, !dbg !8730
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8730
  %4 = and i32 %3, %2, !dbg !8730
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8730
  ret void, !dbg !8731
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8734, metadata !DIExpression()), !dbg !8735
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8736
  %3 = or i32 %2, %0, !dbg !8736
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8736
  ret void, !dbg !8737
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8738 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8740, metadata !DIExpression()), !dbg !8741
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8742
  %3 = or i32 %2, %0, !dbg !8742
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8742
  ret void, !dbg !8743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !8744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8748, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8749, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata i8* %2, metadata !8750, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8751, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8753, metadata !DIExpression()), !dbg !8754
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8755
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8755
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8757
  br i1 %6, label %7, label %9, !dbg !8758

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8759
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8760
  store i8* %2, i8** %8, align 4, !dbg !8761
  br label %9, !dbg !8762

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8754
  ret i32 %10, !dbg !8763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8766, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8767, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8768, metadata !DIExpression()), !dbg !8769
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8770
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8771
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8772
  store i8* null, i8** %3, align 4, !dbg !8773
  ret void, !dbg !8774
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8775 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8777, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i8* %1, metadata !8778, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i8* %1, metadata !8779, metadata !DIExpression()), !dbg !8782
  %3 = bitcast i8* %1 to i32*, !dbg !8783
  %4 = load i32, i32* %3, align 4, !dbg !8783
  %5 = add i32 %4, -169, !dbg !8783
  %6 = icmp ult i32 %5, -121, !dbg !8783
  br i1 %6, label %15, label %7, !dbg !8785

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8786
  %9 = inttoptr i32 %8 to i32*, !dbg !8787
  call void @llvm.dbg.value(metadata i32* %9, metadata !8780, metadata !DIExpression()), !dbg !8782
  %10 = load volatile i32, i32* %9, align 4, !dbg !8788
  call void @llvm.dbg.value(metadata i32 %10, metadata !8781, metadata !DIExpression()), !dbg !8782
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8789
  %12 = bitcast i8* %11 to i32*, !dbg !8789
  %13 = load i32, i32* %12, align 4, !dbg !8789
  %14 = or i32 %13, %10, !dbg !8790
  call void @llvm.dbg.value(metadata i32 %14, metadata !8781, metadata !DIExpression()), !dbg !8782
  store volatile i32 %14, i32* %9, align 4, !dbg !8791
  br label %15, !dbg !8792

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8782
  ret i32 %16, !dbg !8793
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8794 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8796, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i8* %1, metadata !8797, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i8* %1, metadata !8798, metadata !DIExpression()), !dbg !8801
  %3 = bitcast i8* %1 to i32*, !dbg !8802
  %4 = load i32, i32* %3, align 4, !dbg !8802
  %5 = add i32 %4, -169, !dbg !8802
  %6 = icmp ult i32 %5, -121, !dbg !8802
  br i1 %6, label %16, label %7, !dbg !8804

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8805
  %9 = inttoptr i32 %8 to i32*, !dbg !8806
  call void @llvm.dbg.value(metadata i32* %9, metadata !8799, metadata !DIExpression()), !dbg !8801
  %10 = load volatile i32, i32* %9, align 4, !dbg !8807
  call void @llvm.dbg.value(metadata i32 %10, metadata !8800, metadata !DIExpression()), !dbg !8801
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8808
  %12 = bitcast i8* %11 to i32*, !dbg !8808
  %13 = load i32, i32* %12, align 4, !dbg !8808
  %14 = xor i32 %13, -1, !dbg !8809
  %15 = and i32 %10, %14, !dbg !8810
  call void @llvm.dbg.value(metadata i32 %15, metadata !8800, metadata !DIExpression()), !dbg !8801
  store volatile i32 %15, i32* %9, align 4, !dbg !8811
  br label %16, !dbg !8812

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8801
  ret i32 %17, !dbg !8813
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8814 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8816, metadata !DIExpression()), !dbg !8824
  call void @llvm.dbg.value(metadata i8* %1, metadata !8817, metadata !DIExpression()), !dbg !8824
  call void @llvm.dbg.value(metadata i32* %2, metadata !8818, metadata !DIExpression()), !dbg !8824
  call void @llvm.dbg.value(metadata i8* %1, metadata !8819, metadata !DIExpression()), !dbg !8824
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8825
  call void @llvm.dbg.value(metadata i32 %4, metadata !8820, metadata !DIExpression()), !dbg !8824
  call void @llvm.dbg.value(metadata i32 undef, metadata !8821, metadata !DIExpression()), !dbg !8824
  call void @llvm.dbg.value(metadata i32 undef, metadata !8822, metadata !DIExpression()), !dbg !8824
  call void @llvm.dbg.value(metadata i32 %4, metadata !8823, metadata !DIExpression()), !dbg !8824
  %5 = bitcast i8* %1 to i32*, !dbg !8826
  %6 = load i32, i32* %5, align 4, !dbg !8826
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8827

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8828
  call void @llvm.dbg.value(metadata i32 %8, metadata !8821, metadata !DIExpression()), !dbg !8824
  br label %19, !dbg !8829

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !8831
  call void @llvm.dbg.value(metadata i32 %10, metadata !8822, metadata !DIExpression()), !dbg !8824
  br label %19, !dbg !8832

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8833
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !8834
  br label %19, !dbg !8835

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8836
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #26, !dbg !8837
  br label %19, !dbg !8838

17:                                               ; preds = %3
  br label %19, !dbg !8839

18:                                               ; preds = %3
  br label %19, !dbg !8840

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8841
  br label %21, !dbg !8842

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8824
  ret i32 %22, !dbg !8842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8843 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8845, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i8* %1, metadata !8846, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i8* %2, metadata !8847, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i8* %1, metadata !8848, metadata !DIExpression()), !dbg !8853
  %4 = bitcast i8* %1 to i32*, !dbg !8854
  %5 = load i32, i32* %4, align 4, !dbg !8854
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8855
  call void @llvm.dbg.value(metadata i32 %6, metadata !8852, metadata !DIExpression()), !dbg !8853
  %7 = icmp slt i32 %6, 0, !dbg !8856
  br i1 %7, label %22, label %8, !dbg !8858

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8848, metadata !DIExpression()), !dbg !8853
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8859
  %10 = bitcast i8* %9 to i32*, !dbg !8859
  %11 = load i32, i32* %10, align 4, !dbg !8859
  %12 = lshr i32 %11, 16, !dbg !8859
  %13 = and i32 %12, 7, !dbg !8859
  %14 = lshr i32 %11, 8, !dbg !8860
  %15 = and i32 %14, 31, !dbg !8860
  %16 = shl i32 %13, %15, !dbg !8861
  call void @llvm.dbg.value(metadata i32 %16, metadata !8851, metadata !DIExpression()), !dbg !8853
  %17 = and i32 %11, 255, !dbg !8862
  %18 = or i32 %17, 1073887232, !dbg !8863
  %19 = inttoptr i32 %18 to i32*, !dbg !8864
  call void @llvm.dbg.value(metadata i32* %19, metadata !8849, metadata !DIExpression()), !dbg !8853
  %20 = load volatile i32, i32* %19, align 4, !dbg !8865
  call void @llvm.dbg.value(metadata i32 %20, metadata !8850, metadata !DIExpression()), !dbg !8853
  %21 = or i32 %16, %20, !dbg !8866
  call void @llvm.dbg.value(metadata i32 %21, metadata !8850, metadata !DIExpression()), !dbg !8853
  store volatile i32 %21, i32* %19, align 4, !dbg !8867
  br label %22, !dbg !8868

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8853
  ret i32 %23, !dbg !8869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8874, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.value(metadata i32 0, metadata !8875, metadata !DIExpression()), !dbg !8876
  %2 = add i32 %0, -1, !dbg !8877
  %3 = icmp ult i32 %2, 6, !dbg !8877
  br i1 %3, label %4, label %7, !dbg !8877

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8877
  %6 = load i32, i32* %5, align 4, !dbg !8877
  call void @llvm.dbg.value(metadata i32 %6, metadata !8875, metadata !DIExpression()), !dbg !8876
  br label %7, !dbg !8878

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8876
  ret i32 %8, !dbg !8879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8884, metadata !DIExpression()), !dbg !8886
  call void @llvm.dbg.value(metadata i32 %1, metadata !8885, metadata !DIExpression()), !dbg !8886
  %3 = udiv i32 %0, %1, !dbg !8887
  ret i32 %3, !dbg !8888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8893, metadata !DIExpression()), !dbg !8897
  call void @llvm.dbg.value(metadata i32 8, metadata !8894, metadata !DIExpression()), !dbg !8897
  call void @llvm.dbg.value(metadata i32 84, metadata !8895, metadata !DIExpression()), !dbg !8897
  call void @llvm.dbg.value(metadata i32 %1, metadata !8896, metadata !DIExpression()), !dbg !8897
  %3 = mul i32 %0, 84, !dbg !8898
  %4 = shl nsw i32 %1, 3, !dbg !8899
  %5 = udiv i32 %3, %4, !dbg !8900
  ret i32 %5, !dbg !8901
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8902 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8904, metadata !DIExpression()), !dbg !8907
  tail call void @config_enable_default_clocks() #25, !dbg !8908
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8909
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8909
  %4 = lshr i32 %3, 4, !dbg !8909
  %5 = and i32 %4, 15, !dbg !8909
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8909
  %7 = load i8, i8* %6, align 1, !dbg !8909
  %8 = zext i8 %7 to i32, !dbg !8909
  %9 = lshr i32 %2, %8, !dbg !8909
  call void @llvm.dbg.value(metadata i32 %9, metadata !8905, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8907
  %10 = icmp ult i32 %9, 84000000, !dbg !8910
  br i1 %10, label %11, label %13, !dbg !8912

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8913
  br label %13, !dbg !8915

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8916
  tail call fastcc void @set_up_plls() #26, !dbg !8917
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8918
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8921
  br label %14, !dbg !8922

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8923
  %16 = icmp eq i32 %15, 8, !dbg !8924
  br i1 %16, label %17, label %14, !dbg !8922, !llvm.loop !8925

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8927
  br i1 %18, label %19, label %21, !dbg !8929

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8930
  br label %21, !dbg !8932

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8933
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8934
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8935
  ret i32 0, !dbg !8936
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8937 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8939
  %2 = and i32 %1, 240, !dbg !8939
  ret i32 %2, !dbg !8940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8941 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8942
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8947
  br label %1, !dbg !8948

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8949
  %3 = icmp eq i32 %2, 1, !dbg !8950
  br i1 %3, label %4, label %1, !dbg !8948, !llvm.loop !8951

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8953
  br label %5, !dbg !8956

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8957
  %7 = icmp eq i32 %6, 1, !dbg !8958
  br i1 %7, label %8, label %5, !dbg !8956, !llvm.loop !8959

8:                                                ; preds = %5
  ret void, !dbg !8961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8962 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8963
  %2 = icmp eq i32 %1, 8, !dbg !8965
  br i1 %2, label %3, label %4, !dbg !8966

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8967
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8969
  br label %4, !dbg !8970

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8971
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8972
  %6 = and i32 %5, -196609, !dbg !8972
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8972
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8973
  %8 = and i32 %7, -251658241, !dbg !8973
  %9 = or i32 %8, 134217728, !dbg !8973
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8973
  tail call void @config_pll_sysclock() #25, !dbg !8974
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8975
  br label %10, !dbg !8976

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8977
  %12 = icmp eq i32 %11, 1, !dbg !8978
  br i1 %12, label %13, label %10, !dbg !8976, !llvm.loop !8979

13:                                               ; preds = %10
  ret void, !dbg !8981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8982 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8984, metadata !DIExpression()), !dbg !8985
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8986
  %2 = and i32 %1, -241, !dbg !8986
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8986
  ret void, !dbg !8987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8988 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8990, metadata !DIExpression()), !dbg !8991
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8992
  %3 = and i32 %2, -4, !dbg !8992
  %4 = or i32 %3, %0, !dbg !8992
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8992
  ret void, !dbg !8993
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8994 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8995
  %2 = and i32 %1, 12, !dbg !8995
  ret i32 %2, !dbg !8996
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8997 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8999, metadata !DIExpression()), !dbg !9000
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9001
  %2 = and i32 %1, -7169, !dbg !9001
  %3 = or i32 %2, 4096, !dbg !9001
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9001
  ret void, !dbg !9002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !9003 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9005, metadata !DIExpression()), !dbg !9006
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9007
  %2 = and i32 %1, -57345, !dbg !9007
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9007
  ret void, !dbg !9008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !9009 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !9010
  %2 = icmp eq i32 %1, 1, !dbg !9012
  br i1 %2, label %7, label %3, !dbg !9013

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !9014
  br label %4, !dbg !9016

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !9017
  %6 = icmp eq i32 %5, 1, !dbg !9018
  br i1 %6, label %7, label %4, !dbg !9016, !llvm.loop !9019

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !9021
  br label %8, !dbg !9022

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !9023
  %10 = icmp eq i32 %9, 0, !dbg !9024
  br i1 %10, label %11, label %8, !dbg !9022, !llvm.loop !9025

11:                                               ; preds = %8
  ret void, !dbg !9027
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !9028 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9029
  %2 = and i32 %1, -16777217, !dbg !9029
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9029
  ret void, !dbg !9030
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !9031 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9032
  %2 = or i32 %1, 16777216, !dbg !9032
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9032
  ret void, !dbg !9033
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !9034 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9035
  %2 = lshr i32 %1, 25, !dbg !9036
  %3 = and i32 %2, 1, !dbg !9036
  ret i32 %3, !dbg !9037
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !9038 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9039
  %2 = lshr i32 %1, 1, !dbg !9040
  %3 = and i32 %2, 1, !dbg !9040
  ret i32 %3, !dbg !9041
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !9042 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9043
  %2 = or i32 %1, 1, !dbg !9043
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9043
  ret void, !dbg !9044
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !9045 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9046
  %2 = and i32 %1, -262145, !dbg !9046
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9046
  ret void, !dbg !9047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !9048 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9049
  %2 = or i32 %1, 65536, !dbg !9049
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9049
  ret void, !dbg !9050
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !9051 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9052
  %2 = lshr i32 %1, 17, !dbg !9053
  %3 = and i32 %2, 1, !dbg !9053
  ret i32 %3, !dbg !9054
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !9055 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9056
  %2 = or i32 %1, 1, !dbg !9056
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9056
  ret void, !dbg !9057
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !9058 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9059
  %2 = lshr i32 %1, 1, !dbg !9060
  %3 = and i32 %2, 1, !dbg !9060
  ret i32 %3, !dbg !9061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !9062 {
  ret i32 16000000, !dbg !9064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !9068 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !9069
  ret void, !dbg !9070
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !9071 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9075, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.value(metadata i32 8, metadata !9076, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.value(metadata i32 84, metadata !9077, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.value(metadata i32 0, metadata !9078, metadata !DIExpression()), !dbg !9079
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9080
  %2 = and i32 %1, -4227072, !dbg !9080
  %3 = or i32 %2, 4199688, !dbg !9080
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9080
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9081
  %5 = and i32 %4, -196609, !dbg !9081
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9081
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9082
  %7 = and i32 %6, -1879048193, !dbg !9082
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9082
  ret void, !dbg !9083
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !9084 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !9085
  ret void, !dbg !9086
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !9087 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9090, metadata !DIExpression()), !dbg !9092
  %2 = bitcast i32* %1 to i8*, !dbg !9093
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9093
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9091, metadata !DIExpression()), !dbg !9094
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9095
  %4 = or i32 %3, 268435456, !dbg !9095
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9095
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9096
  %6 = and i32 %5, 268435456, !dbg !9096
  store volatile i32 %6, i32* %1, align 4, !dbg !9097
  %7 = load volatile i32, i32* %1, align 4, !dbg !9098
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9099
  ret void, !dbg !9099
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9100 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9102, metadata !DIExpression()), !dbg !9103
  %2 = tail call fastcc zeroext i1 @device_is_ready.45() #26, !dbg !9104
  br i1 %2, label %3, label %4, !dbg !9106

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !9107
  br label %4, !dbg !9108

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9103
  ret i32 %5, !dbg !9109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.45() unnamed_addr #1 !dbg !9110 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9114, metadata !DIExpression()), !dbg !9115
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9116, !srcloc !9118
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.48() #26, !dbg !9119
  ret i1 %1, !dbg !9120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9121 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9122
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9123
  ret void, !dbg !9124
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9127, metadata !DIExpression()), !dbg !9129
  %2 = load i32 (i8)*, i32 (i8)** @debug_hook_out, align 4, !dbg !9130
  %3 = trunc i32 %0 to i8, !dbg !9130
  %4 = tail call i32 %2(i8 noundef zeroext %3) #25, !dbg !9130
  %5 = icmp eq i32 %4, 1, !dbg !9130
  call void @llvm.dbg.value(metadata i1 %5, metadata !9128, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9129
  br i1 %5, label %10, label %6, !dbg !9131

6:                                                ; preds = %1
  %7 = icmp eq i32 %0, 10, !dbg !9132
  br i1 %7, label %8, label %9, !dbg !9134

8:                                                ; preds = %6
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 13) #26, !dbg !9135
  br label %9, !dbg !9137

9:                                                ; preds = %8, %6
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %3) #26, !dbg !9138
  br label %10, !dbg !9139

10:                                               ; preds = %1, %9
  ret i32 %0, !dbg !9140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.46(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9141 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9143, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i8 %0, metadata !9144, metadata !DIExpression()), !dbg !9145
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9146, !srcloc !9148
  tail call fastcc void @z_impl_uart_poll_out.47(i8 noundef zeroext %0) #26, !dbg !9149
  ret void, !dbg !9150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.47(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9151 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9153, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.value(metadata i8 %0, metadata !9154, metadata !DIExpression()), !dbg !9156
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9157
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9155, metadata !DIExpression()), !dbg !9156
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9158
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9158
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #25, !dbg !9159
  ret void, !dbg !9160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @debug_hook_out_nop(i8 noundef zeroext %0) #11 !dbg !9161 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9163, metadata !DIExpression()), !dbg !9164
  ret i32 0, !dbg !9165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.48() unnamed_addr #1 !dbg !9166 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9168, metadata !DIExpression()), !dbg !9169
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9170
  ret i1 %1, !dbg !9171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_in_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9172 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9176, metadata !DIExpression()), !dbg !9177
  store i32 (i8)* %0, i32 (i8)** @debug_hook_in, align 4, !dbg !9178
  ret void, !dbg !9179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_out_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9180 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9184, metadata !DIExpression()), !dbg !9185
  store i32 (i8)* %0, i32 (i8)** @debug_hook_out, align 4, !dbg !9186
  ret void, !dbg !9187
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !9188 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9192, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9193, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9194, metadata !DIExpression()), !dbg !9195
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !9196
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !9197
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9198
  tail call fastcc void @console_input_init() #26, !dbg !9199
  ret void, !dbg !9200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !9201 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9204
  tail call fastcc void @uart_irq_rx_disable.49() #26, !dbg !9205
  tail call fastcc void @uart_irq_tx_disable.50() #26, !dbg !9206
  tail call fastcc void @uart_irq_callback_set() #26, !dbg !9207
  %2 = call fastcc i32 @uart_irq_rx_ready.51() #26, !dbg !9208
  %3 = icmp eq i32 %2, 0, !dbg !9209
  br i1 %3, label %8, label %4, !dbg !9209

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !9203, metadata !DIExpression(DW_OP_deref)), !dbg !9210
  %5 = call fastcc i32 @uart_fifo_read.52(i8* noundef nonnull %1) #26, !dbg !9211
  %6 = call fastcc i32 @uart_irq_rx_ready.51() #26, !dbg !9208
  %7 = icmp eq i32 %6, 0, !dbg !9209
  br i1 %7, label %8, label %4, !dbg !9209, !llvm.loop !9213

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable.53() #26, !dbg !9215
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9216
  ret void, !dbg !9216
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable.49() unnamed_addr #1 !dbg !9217 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9219, metadata !DIExpression()), !dbg !9220
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9221, !srcloc !9223
  tail call fastcc void @z_impl_uart_irq_rx_disable.62() #26, !dbg !9224
  ret void, !dbg !9225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable.50() unnamed_addr #1 !dbg !9226 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9228, metadata !DIExpression()), !dbg !9229
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9230, !srcloc !9232
  tail call fastcc void @z_impl_uart_irq_tx_disable.61() #26, !dbg !9233
  ret void, !dbg !9234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !9235 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9239, metadata !DIExpression()), !dbg !9241
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9240, metadata !DIExpression()), !dbg !9241
  tail call fastcc void @uart_irq_callback_user_data_set.55() #26, !dbg !9242
  ret void, !dbg !9243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready.51() unnamed_addr #1 !dbg !9244 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9246, metadata !DIExpression()), !dbg !9248
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9249
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9247, metadata !DIExpression()), !dbg !9248
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !9250
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9250
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9252
  br i1 %4, label %7, label %5, !dbg !9253

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9254
  br label %7, !dbg !9255

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9248
  ret i32 %8, !dbg !9256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read.52(i8* noundef %0) unnamed_addr #1 !dbg !9257 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9259, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i8* %0, metadata !9260, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i32 1, metadata !9261, metadata !DIExpression()), !dbg !9263
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9264
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9262, metadata !DIExpression()), !dbg !9263
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !9265
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !9265
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !9267
  br i1 %5, label %8, label %6, !dbg !9268

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8* noundef %0, i32 noundef 1) #25, !dbg !9269
  br label %8, !dbg !9270

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !9263
  ret i32 %9, !dbg !9271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable.53() unnamed_addr #1 !dbg !9272 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9274, metadata !DIExpression()), !dbg !9275
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9276, !srcloc !9278
  tail call fastcc void @z_impl_uart_irq_rx_enable.54() #26, !dbg !9279
  ret void, !dbg !9280
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable.54() unnamed_addr #1 !dbg !9281 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9283, metadata !DIExpression()), !dbg !9285
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9286
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9284, metadata !DIExpression()), !dbg !9285
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !9287
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9287
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9289
  br i1 %4, label %6, label %5, !dbg !9290

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9291
  br label %6, !dbg !9293

6:                                                ; preds = %5, %0
  ret void, !dbg !9294
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1100 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1102, metadata !DIExpression()), !dbg !9295
  call void @llvm.dbg.value(metadata i8* %1, metadata !1103, metadata !DIExpression()), !dbg !9295
  %4 = call fastcc i32 @uart_irq_update.56() #26, !dbg !9296
  %5 = icmp eq i32 %4, 0, !dbg !9296
  br i1 %5, label %96, label %6, !dbg !9297

6:                                                ; preds = %2, %93
  %7 = call fastcc i32 @uart_irq_is_pending() #26, !dbg !9298
  %8 = icmp eq i32 %7, 0, !dbg !9297
  br i1 %8, label %96, label %9, !dbg !9299

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9300
  %10 = call fastcc i32 @uart_irq_rx_ready.51() #26, !dbg !9301
  %11 = icmp eq i32 %10, 0, !dbg !9301
  br i1 %11, label %93, label %12, !dbg !9303, !llvm.loop !9304

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1104, metadata !DIExpression(DW_OP_deref)), !dbg !9306
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #26, !dbg !9307
  call void @llvm.dbg.value(metadata i32 %13, metadata !1106, metadata !DIExpression()), !dbg !9306
  %14 = icmp slt i32 %13, 0, !dbg !9308
  br i1 %14, label %92, label %15, !dbg !9310

15:                                               ; preds = %12
  %16 = load i32 (i8)*, i32 (i8)** @debug_hook_in, align 4, !dbg !9311
  %17 = icmp eq i32 (i8)* %16, null, !dbg !9313
  br i1 %17, label %22, label %18, !dbg !9314

18:                                               ; preds = %15
  %19 = load i8, i8* %3, align 1, !dbg !9315
  call void @llvm.dbg.value(metadata i8 %19, metadata !1104, metadata !DIExpression()), !dbg !9306
  %20 = call i32 %16(i8 noundef zeroext %19) #25, !dbg !9316
  %21 = icmp eq i32 %20, 0, !dbg !9317
  br i1 %21, label %22, label %92, !dbg !9318

22:                                               ; preds = %18, %15
  %23 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9319
  %24 = icmp eq %struct.console_input* %23, null, !dbg !9319
  br i1 %24, label %25, label %30, !dbg !9320

25:                                               ; preds = %22
  %26 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !9321
  %27 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %26, i32 0, i32 0, !dbg !9321
  %28 = call fastcc i8* @k_queue_get(%struct.k_queue* noundef %27) #26, !dbg !9321
  call void @llvm.dbg.value(metadata i8* %28, metadata !1107, metadata !DIExpression()), !dbg !9322
  store i8* %28, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9323
  %29 = icmp eq i8* %28, null, !dbg !9324
  br i1 %29, label %92, label %30, !dbg !9326

30:                                               ; preds = %25, %22
  %31 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #26, !dbg !9327
  br i1 %31, label %32, label %36, !dbg !9329

32:                                               ; preds = %30
  %33 = load i8, i8* %3, align 1, !dbg !9330
  call void @llvm.dbg.value(metadata i8 %33, metadata !1104, metadata !DIExpression()), !dbg !9306
  %34 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9332
  %35 = getelementptr inbounds %struct.console_input, %struct.console_input* %34, i32 0, i32 2, i32 0, !dbg !9332
  call fastcc void @handle_ansi(i8 noundef zeroext %33, i8* noundef nonnull %35) #26, !dbg !9333
  br label %93, !dbg !9334, !llvm.loop !9304

36:                                               ; preds = %30
  %37 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #26, !dbg !9335
  %38 = load i8, i8* %3, align 1, !dbg !9306
  call void @llvm.dbg.value(metadata i8 %38, metadata !1104, metadata !DIExpression()), !dbg !9306
  call void @llvm.dbg.value(metadata i8 %38, metadata !1104, metadata !DIExpression()), !dbg !9306
  br i1 %37, label %39, label %42, !dbg !9337

39:                                               ; preds = %36
  %40 = icmp eq i8 %38, 91, !dbg !9338
  br i1 %40, label %41, label %93, !dbg !9341, !llvm.loop !9304

41:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 1) #26, !dbg !9342
  call fastcc void @atomic_set_bit(i32 noundef 2) #26, !dbg !9344
  br label %93, !dbg !9345, !llvm.loop !9304

42:                                               ; preds = %36
  %43 = zext i8 %38 to i32, !dbg !9346
  %44 = call fastcc i32 @isprint(i32 noundef %43) #26, !dbg !9348
  %45 = icmp eq i32 %44, 0, !dbg !9348
  br i1 %45, label %46, label %81, !dbg !9349

46:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i8 undef, metadata !1104, metadata !DIExpression()), !dbg !9306
  switch i8 %38, label %93 [
    i8 8, label %47
    i8 127, label %47
    i8 27, label %56
    i8 13, label %57
    i8 9, label %68
  ], !dbg !9350, !llvm.loop !9304

47:                                               ; preds = %46, %46
  %48 = load i8, i8* @cur, align 1, !dbg !9352
  %49 = icmp eq i8 %48, 0, !dbg !9355
  br i1 %49, label %93, label %50, !dbg !9356, !llvm.loop !9304

50:                                               ; preds = %47
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9357
  %52 = add i8 %48, -1, !dbg !9359
  store i8 %52, i8* @cur, align 1, !dbg !9359
  %53 = zext i8 %52 to i32, !dbg !9357
  %54 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %53, !dbg !9357
  %55 = load i8, i8* @end, align 1, !dbg !9360
  call fastcc void @del_char(i8* noundef nonnull %54, i8 noundef zeroext %55) #26, !dbg !9361
  br label %93, !dbg !9362, !llvm.loop !9304

56:                                               ; preds = %46
  call fastcc void @atomic_set_bit(i32 noundef 0) #26, !dbg !9363
  br label %93, !dbg !9364, !llvm.loop !9304

57:                                               ; preds = %46
  %58 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9365
  %59 = load i8, i8* @cur, align 1, !dbg !9366
  %60 = zext i8 %59 to i32, !dbg !9366
  %61 = load i8, i8* @end, align 1, !dbg !9367
  %62 = zext i8 %61 to i32, !dbg !9367
  %63 = add nuw nsw i32 %62, %60, !dbg !9368
  %64 = getelementptr inbounds %struct.console_input, %struct.console_input* %58, i32 0, i32 2, i32 %63, !dbg !9365
  store i8 0, i8* %64, align 1, !dbg !9369
  call fastcc void @uart_poll_out.46(i8 noundef zeroext 13) #26, !dbg !9370
  call fastcc void @uart_poll_out.46(i8 noundef zeroext 10) #26, !dbg !9371
  store i8 0, i8* @cur, align 1, !dbg !9372
  store i8 0, i8* @end, align 1, !dbg !9373
  %65 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !9374
  %66 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %65, i32 0, i32 0, !dbg !9374
  %67 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9374
  call void @k_queue_append(%struct.k_queue* noundef %66, i8* noundef %67) #25, !dbg !9374
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9376
  br label %93, !dbg !9377, !llvm.loop !9304

68:                                               ; preds = %46
  %69 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9378
  %70 = icmp eq i8 (i8*, i8)* %69, null, !dbg !9378
  %71 = load i8, i8* @end, align 1
  %72 = icmp ne i8 %71, 0
  %73 = select i1 %70, i1 true, i1 %72, !dbg !9380
  br i1 %73, label %93, label %74, !dbg !9380, !llvm.loop !9304

74:                                               ; preds = %68
  %75 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9381
  %76 = getelementptr inbounds %struct.console_input, %struct.console_input* %75, i32 0, i32 2, i32 0, !dbg !9381
  %77 = load i8, i8* @cur, align 1, !dbg !9383
  %78 = call zeroext i8 %69(i8* noundef nonnull %76, i8 noundef zeroext %77) #25, !dbg !9384
  %79 = load i8, i8* @cur, align 1, !dbg !9385
  %80 = add i8 %79, %78, !dbg !9385
  store i8 %80, i8* @cur, align 1, !dbg !9385
  br label %93, !dbg !9386, !llvm.loop !9304

81:                                               ; preds = %42
  %82 = load i8, i8* @cur, align 1, !dbg !9387
  %83 = zext i8 %82 to i32, !dbg !9387
  %84 = load i8, i8* @end, align 1, !dbg !9389
  %85 = zext i8 %84 to i32, !dbg !9389
  %86 = add nuw nsw i32 %85, %83, !dbg !9390
  %87 = icmp ult i32 %86, 127, !dbg !9391
  br i1 %87, label %88, label %93, !dbg !9392

88:                                               ; preds = %81
  %89 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9393
  %90 = add i8 %82, 1, !dbg !9395
  store i8 %90, i8* @cur, align 1, !dbg !9395
  %91 = getelementptr inbounds %struct.console_input, %struct.console_input* %89, i32 0, i32 2, i32 %83, !dbg !9393
  call void @llvm.dbg.value(metadata i8 %38, metadata !1104, metadata !DIExpression()), !dbg !9306
  call fastcc void @insert_char(i8* noundef nonnull %91, i8 noundef zeroext %38, i8 noundef zeroext %84) #26, !dbg !9396
  br label %93, !dbg !9397

92:                                               ; preds = %12, %18, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9305
  br label %96

93:                                               ; preds = %81, %88, %56, %57, %50, %47, %74, %68, %46, %39, %41, %9, %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9305
  %94 = call fastcc i32 @uart_irq_update.56() #26, !dbg !9296
  %95 = icmp eq i32 %94, 0, !dbg !9296
  br i1 %95, label %96, label %6, !dbg !9297

96:                                               ; preds = %6, %93, %2, %92
  ret void, !dbg !9398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set.55() unnamed_addr #1 !dbg !9399 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9401, metadata !DIExpression()), !dbg !9405
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9402, metadata !DIExpression()), !dbg !9405
  call void @llvm.dbg.value(metadata i8* null, metadata !9403, metadata !DIExpression()), !dbg !9405
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9406
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9404, metadata !DIExpression()), !dbg !9405
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !9407
  br i1 %2, label %8, label %3, !dbg !9409

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !9410
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !9410
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !9411
  br i1 %6, label %8, label %7, !dbg !9412

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_48, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #25, !dbg !9413
  br label %8, !dbg !9415

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !9416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update.56() unnamed_addr #1 !dbg !9417 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9419, metadata !DIExpression()), !dbg !9420
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9421, !srcloc !9423
  %1 = tail call fastcc i32 @z_impl_uart_irq_update.60() #26, !dbg !9424
  ret i32 %1, !dbg !9425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !9426 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9428, metadata !DIExpression()), !dbg !9429
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9430, !srcloc !9432
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #26, !dbg !9433
  ret i32 %1, !dbg !9434
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !9435 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9439, metadata !DIExpression()), !dbg !9443
  call void @llvm.dbg.value(metadata i8* %0, metadata !9440, metadata !DIExpression()), !dbg !9443
  call void @llvm.dbg.value(metadata i32 1, metadata !9441, metadata !DIExpression()), !dbg !9443
  %2 = tail call fastcc i32 @uart_fifo_read.52(i8* noundef %0) #26, !dbg !9444
  call void @llvm.dbg.value(metadata i32 %2, metadata !9442, metadata !DIExpression()), !dbg !9443
  %3 = icmp slt i32 %2, 0, !dbg !9445
  br i1 %3, label %4, label %5, !dbg !9447

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable.49() #26, !dbg !9448
  br label %5, !dbg !9450

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !9443
  ret i32 %6, !dbg !9451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !9452 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9462, metadata !DIExpression()), !dbg !9463
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !9461, metadata !DIExpression()), !dbg !9463
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9464, !srcloc !9466
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #25, !dbg !9467
  ret i8* %2, !dbg !9468
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !9469 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9475, metadata !DIExpression()), !dbg !9479
  call void @llvm.dbg.value(metadata i32 %0, metadata !9476, metadata !DIExpression()), !dbg !9479
  %2 = tail call fastcc i32 @atomic_get() #26, !dbg !9480
  call void @llvm.dbg.value(metadata i32 %2, metadata !9477, metadata !DIExpression()), !dbg !9479
  %3 = and i32 %0, 31, !dbg !9481
  %4 = shl nuw i32 1, %3, !dbg !9482
  %5 = and i32 %2, %4, !dbg !9482
  %6 = icmp ne i32 %5, 0, !dbg !9482
  ret i1 %6, !dbg !9483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !9484 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9488, metadata !DIExpression()), !dbg !9491
  call void @llvm.dbg.value(metadata i8* %1, metadata !9489, metadata !DIExpression()), !dbg !9491
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #26, !dbg !9492
  br i1 %3, label %4, label %11, !dbg !9494

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !9495
  %6 = tail call fastcc i32 @isdigit.57(i32 noundef %5) #26, !dbg !9498
  %7 = icmp eq i32 %6, 0, !dbg !9498
  br i1 %7, label %8, label %9, !dbg !9499

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !9500
  br label %34, !dbg !9502

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #26, !dbg !9503
  %10 = add nsw i32 %5, -48, !dbg !9504
  store i32 %10, i32* @ansi_val, align 4, !dbg !9505
  store i32 0, i32* @ansi_val_2, align 4, !dbg !9506
  br label %81, !dbg !9507

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #26, !dbg !9508
  br i1 %12, label %13, label %34, !dbg !9510

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !9511
  %15 = tail call fastcc i32 @isdigit.57(i32 noundef %14) #26, !dbg !9514
  %16 = icmp eq i32 %15, 0, !dbg !9514
  br i1 %16, label %29, label %17, !dbg !9515

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #26, !dbg !9516
  br i1 %18, label %19, label %24, !dbg !9519

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !9520
  %21 = mul i32 %20, 10, !dbg !9520
  %22 = add nsw i32 %14, -48, !dbg !9522
  %23 = add i32 %22, %21, !dbg !9523
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !9523
  br label %81, !dbg !9524

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !9525
  %26 = mul i32 %25, 10, !dbg !9525
  %27 = add nsw i32 %14, -48, !dbg !9527
  %28 = add i32 %27, %26, !dbg !9528
  store i32 %28, i32* @ansi_val, align 4, !dbg !9528
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !9529
  br i1 %30, label %31, label %33, !dbg !9531

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #26, !dbg !9532
  br i1 %32, label %33, label %81, !dbg !9533

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #26, !dbg !9534
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #26, !dbg !9535
  br label %34, !dbg !9536

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !9490), !dbg !9537
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !9538

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !9539
  %37 = load i8, i8* @cur, align 1, !dbg !9542
  %38 = zext i8 %37 to i32, !dbg !9542
  %39 = icmp ugt i32 %36, %38, !dbg !9543
  br i1 %39, label %80, label %40, !dbg !9544

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !9545
  %42 = trunc i32 %36 to i8, !dbg !9545
  %43 = add i8 %41, %42, !dbg !9545
  store i8 %43, i8* @end, align 1, !dbg !9545
  %44 = sub i8 %37, %42, !dbg !9546
  store i8 %44, i8* @cur, align 1, !dbg !9546
  tail call fastcc void @cursor_backward(i32 noundef %36) #26, !dbg !9547
  br label %80, !dbg !9548

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !9549
  %47 = load i8, i8* @end, align 1, !dbg !9551
  %48 = zext i8 %47 to i32, !dbg !9551
  %49 = icmp ugt i32 %46, %48, !dbg !9552
  br i1 %49, label %80, label %50, !dbg !9553

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !9554
  %52 = sub i8 %47, %51, !dbg !9554
  store i8 %52, i8* @end, align 1, !dbg !9554
  %53 = load i8, i8* @cur, align 1, !dbg !9555
  %54 = add i8 %53, %51, !dbg !9555
  store i8 %54, i8* @cur, align 1, !dbg !9555
  tail call fastcc void @cursor_forward(i32 noundef %46) #26, !dbg !9556
  br label %80, !dbg !9557

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !9558
  %57 = icmp eq i8 %56, 0, !dbg !9558
  br i1 %57, label %80, label %58, !dbg !9560

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !9561
  tail call fastcc void @cursor_backward(i32 noundef %59) #26, !dbg !9562
  %60 = load i8, i8* @cur, align 1, !dbg !9563
  %61 = load i8, i8* @end, align 1, !dbg !9564
  %62 = add i8 %61, %60, !dbg !9564
  store i8 %62, i8* @end, align 1, !dbg !9564
  store i8 0, i8* @cur, align 1, !dbg !9565
  br label %80, !dbg !9566

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !9567
  %65 = icmp eq i8 %64, 0, !dbg !9567
  br i1 %65, label %80, label %66, !dbg !9569

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !9570
  tail call fastcc void @cursor_forward(i32 noundef %67) #26, !dbg !9571
  %68 = load i8, i8* @end, align 1, !dbg !9572
  %69 = load i8, i8* @cur, align 1, !dbg !9573
  %70 = add i8 %69, %68, !dbg !9573
  store i8 %70, i8* @cur, align 1, !dbg !9573
  store i8 0, i8* @end, align 1, !dbg !9574
  br label %80, !dbg !9575

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !9576
  %73 = icmp eq i8 %72, 0, !dbg !9576
  br i1 %73, label %80, label %74, !dbg !9578

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #26, !dbg !9579
  %75 = load i8, i8* @cur, align 1, !dbg !9580
  %76 = zext i8 %75 to i32, !dbg !9581
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !9581
  %78 = load i8, i8* @end, align 1, !dbg !9582
  %79 = add i8 %78, -1, !dbg !9582
  store i8 %79, i8* @end, align 1, !dbg !9582
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #26, !dbg !9583
  br label %80, !dbg !9584

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #26, !dbg !9585
  br label %81, !dbg !9586

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !9586
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9587 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9592, metadata !DIExpression()), !dbg !9596
  call void @llvm.dbg.value(metadata i32 %0, metadata !9593, metadata !DIExpression()), !dbg !9596
  %2 = and i32 %0, 31, !dbg !9597
  %3 = shl nuw i32 1, %2, !dbg !9597
  call void @llvm.dbg.value(metadata i32 %3, metadata !9594, metadata !DIExpression()), !dbg !9596
  %4 = xor i32 %3, -1, !dbg !9598
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9599
  call void @llvm.dbg.value(metadata i32 %5, metadata !9595, metadata !DIExpression()), !dbg !9596
  %6 = and i32 %5, %3, !dbg !9600
  %7 = icmp ne i32 %6, 0, !dbg !9601
  ret i1 %7, !dbg !9602
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !9603 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9607, metadata !DIExpression()), !dbg !9610
  call void @llvm.dbg.value(metadata i32 %0, metadata !9608, metadata !DIExpression()), !dbg !9610
  %2 = and i32 %0, 31, !dbg !9611
  %3 = shl nuw i32 1, %2, !dbg !9611
  call void @llvm.dbg.value(metadata i32 %3, metadata !9609, metadata !DIExpression()), !dbg !9610
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #26, !dbg !9612
  ret void, !dbg !9613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !9614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9616, metadata !DIExpression()), !dbg !9617
  %2 = add i32 %0, -32, !dbg !9618
  %3 = icmp ult i32 %2, 95, !dbg !9618
  %4 = zext i1 %3 to i32, !dbg !9618
  ret i32 %4, !dbg !9619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9620 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9624, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i8 %1, metadata !9625, metadata !DIExpression()), !dbg !9626
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 8) #26, !dbg !9627
  %3 = icmp eq i8 %1, 0, !dbg !9628
  br i1 %3, label %4, label %5, !dbg !9630

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 32) #26, !dbg !9631
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 8) #26, !dbg !9633
  br label %14, !dbg !9634

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #26, !dbg !9635
  call void @llvm.dbg.value(metadata i8 %1, metadata !9625, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i8* %0, metadata !9624, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i8 %1, metadata !9625, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9626
  br label %6, !dbg !9636

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !9625, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i8* %8, metadata !9624, metadata !DIExpression()), !dbg !9626
  %9 = add i8 %7, -1, !dbg !9637
  call void @llvm.dbg.value(metadata i8 %9, metadata !9625, metadata !DIExpression()), !dbg !9626
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9638
  %11 = load i8, i8* %10, align 1, !dbg !9640
  store i8 %11, i8* %8, align 1, !dbg !9641
  call void @llvm.dbg.value(metadata i8* %10, metadata !9624, metadata !DIExpression()), !dbg !9626
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %11) #26, !dbg !9642
  call void @llvm.dbg.value(metadata i8 %9, metadata !9625, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9626
  %12 = icmp eq i8 %9, 0, !dbg !9643
  br i1 %12, label %13, label %6, !dbg !9636, !llvm.loop !9644

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 32) #26, !dbg !9646
  tail call fastcc void @cursor_restore() #26, !dbg !9647
  br label %14, !dbg !9648

14:                                               ; preds = %13, %4
  ret void, !dbg !9648
}

; Function Attrs: optsize
declare !dbg !9649 dso_local void @k_queue_append(%struct.k_queue* noundef, i8* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !9652 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9656, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i8 %1, metadata !9657, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i8 %2, metadata !9658, metadata !DIExpression()), !dbg !9660
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %1) #26, !dbg !9661
  %4 = icmp eq i8 %2, 0, !dbg !9662
  br i1 %4, label %5, label %6, !dbg !9664

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !9665
  br label %17, !dbg !9667

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !9668
  call void @llvm.dbg.value(metadata i8 %7, metadata !9659, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i8* %0, metadata !9656, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9660
  store i8 %1, i8* %0, align 1, !dbg !9669
  tail call fastcc void @cursor_save() #26, !dbg !9670
  call void @llvm.dbg.value(metadata i8 %7, metadata !9659, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i8 %2, metadata !9658, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i8* %0, metadata !9656, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9660
  call void @llvm.dbg.value(metadata i8 %2, metadata !9658, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9660
  br label %8, !dbg !9671

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9660
  call void @llvm.dbg.value(metadata i8 %10, metadata !9659, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i8 %11, metadata !9658, metadata !DIExpression()), !dbg !9660
  %13 = add i8 %11, -1, !dbg !9672
  call void @llvm.dbg.value(metadata i8 %13, metadata !9658, metadata !DIExpression()), !dbg !9660
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %10) #26, !dbg !9673
  %14 = load i8, i8* %12, align 1, !dbg !9675
  call void @llvm.dbg.value(metadata i8 %14, metadata !9657, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i8* %12, metadata !9656, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9660
  store i8 %10, i8* %12, align 1, !dbg !9676
  call void @llvm.dbg.value(metadata i8 %14, metadata !9659, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i8* %12, metadata !9656, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9660
  call void @llvm.dbg.value(metadata i8 %13, metadata !9658, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9660
  %15 = icmp eq i8 %13, 0, !dbg !9677
  br i1 %15, label %16, label %8, !dbg !9671, !llvm.loop !9678

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #26, !dbg !9680
  br label %17, !dbg !9681

17:                                               ; preds = %16, %5
  ret void, !dbg !9681
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !9682 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0)) #25, !dbg !9683
  ret void, !dbg !9684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !9685 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !9686
  ret void, !dbg !9687
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !9688 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9693, metadata !DIExpression()), !dbg !9695
  call void @llvm.dbg.value(metadata i32 %0, metadata !9694, metadata !DIExpression()), !dbg !9695
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9696
  ret i32 %2, !dbg !9697
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !9698 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9700, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.value(metadata i32 %0, metadata !9701, metadata !DIExpression()), !dbg !9702
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9703
  ret i32 %2, !dbg !9704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.57(i32 noundef %0) unnamed_addr #11 !dbg !9705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9707, metadata !DIExpression()), !dbg !9708
  %2 = add i32 %0, -48, !dbg !9709
  %3 = icmp ult i32 %2, 10, !dbg !9710
  %4 = zext i1 %3 to i32, !dbg !9710
  ret i32 %4, !dbg !9711
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !9712 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9714, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.value(metadata i32 4, metadata !9715, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.value(metadata i32 16, metadata !9716, metadata !DIExpression()), !dbg !9718
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #26, !dbg !9719
  call void @llvm.dbg.value(metadata i32 %1, metadata !9717, metadata !DIExpression()), !dbg !9718
  %2 = and i32 %1, 16, !dbg !9720
  %3 = icmp ne i32 %2, 0, !dbg !9721
  ret i1 %3, !dbg !9722
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9723 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9725, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.value(metadata i32 %0, metadata !9726, metadata !DIExpression()), !dbg !9728
  %2 = and i32 %0, 31, !dbg !9729
  %3 = shl nuw i32 1, %2, !dbg !9729
  call void @llvm.dbg.value(metadata i32 %3, metadata !9727, metadata !DIExpression()), !dbg !9728
  %4 = xor i32 %3, -1, !dbg !9730
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9731
  ret void, !dbg !9732
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !9733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9735, metadata !DIExpression()), !dbg !9736
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), i32 noundef %0) #25, !dbg !9737
  ret void, !dbg !9738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !9739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9741, metadata !DIExpression()), !dbg !9742
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.58, i32 0, i32 0), i32 noundef %0) #25, !dbg !9743
  ret void, !dbg !9744
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !9745 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9749, metadata !DIExpression()), !dbg !9750
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !9751
  ret i32 %1, !dbg !9752
}

; Function Attrs: optsize
declare !dbg !9753 dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef, [1 x i64]) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !9754 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9756, metadata !DIExpression()), !dbg !9758
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9759
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9757, metadata !DIExpression()), !dbg !9758
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !9760
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9760
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9762
  br i1 %4, label %7, label %5, !dbg !9763

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9764
  br label %7, !dbg !9765

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9758
  ret i32 %8, !dbg !9766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update.60() unnamed_addr #1 !dbg !9767 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9769, metadata !DIExpression()), !dbg !9771
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9772
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9770, metadata !DIExpression()), !dbg !9771
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !9773
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9773
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9775
  br i1 %4, label %7, label %5, !dbg !9776

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9777
  br label %7, !dbg !9778

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9771
  ret i32 %8, !dbg !9779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable.61() unnamed_addr #1 !dbg !9780 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9782, metadata !DIExpression()), !dbg !9784
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9785
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9783, metadata !DIExpression()), !dbg !9784
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !9786
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9786
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9788
  br i1 %4, label %6, label %5, !dbg !9789

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9790
  br label %6, !dbg !9792

6:                                                ; preds = %5, %0
  ret void, !dbg !9793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable.62() unnamed_addr #1 !dbg !9794 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9796, metadata !DIExpression()), !dbg !9798
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9799
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9797, metadata !DIExpression()), !dbg !9798
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !9800
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9800
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9802
  br i1 %4, label %6, label %5, !dbg !9803

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9804
  br label %6, !dbg !9806

6:                                                ; preds = %5, %0
  ret void, !dbg !9807
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9808 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9810, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i8 %1, metadata !9811, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 %2, metadata !9812, metadata !DIExpression()), !dbg !9815
  %5 = bitcast i32* %4 to i8*, !dbg !9816
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9816
  call void @llvm.dbg.value(metadata i32* %4, metadata !9814, metadata !DIExpression(DW_OP_deref)), !dbg !9815
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !9817
  call void @llvm.dbg.value(metadata i32 %6, metadata !9813, metadata !DIExpression()), !dbg !9815
  %7 = icmp eq i32 %6, 0, !dbg !9818
  br i1 %7, label %8, label %31, !dbg !9820

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9813, metadata !DIExpression()), !dbg !9815
  %9 = and i32 %2, 131072, !dbg !9821
  %10 = icmp eq i32 %9, 0, !dbg !9823
  br i1 %10, label %28, label %11, !dbg !9824

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9825
  %13 = icmp eq i32 %12, 0, !dbg !9828
  br i1 %13, label %18, label %14, !dbg !9829

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9830
  %16 = shl nuw i32 1, %15, !dbg !9830
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !9832
  br label %25, !dbg !9833

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9834
  %20 = icmp eq i32 %19, 0, !dbg !9836
  %21 = zext i8 %1 to i32, !dbg !9815
  br i1 %20, label %25, label %22, !dbg !9837

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9838
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !9840
  br label %25, !dbg !9841

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9842
  %27 = load i32, i32* %4, align 4, !dbg !9843
  call void @llvm.dbg.value(metadata i32 %30, metadata !9814, metadata !DIExpression()), !dbg !9815
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !9844
  br label %31, !dbg !9845

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9842
  %30 = load i32, i32* %4, align 4, !dbg !9843
  call void @llvm.dbg.value(metadata i32 %30, metadata !9814, metadata !DIExpression()), !dbg !9815
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !9844
  call void @llvm.dbg.value(metadata i32 0, metadata !9813, metadata !DIExpression()), !dbg !9815
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9846
  ret i32 %6, !dbg !9846
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !9847 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9851, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata i32* %1, metadata !9852, metadata !DIExpression()), !dbg !9856
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9857
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9857
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9857
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9853, metadata !DIExpression()), !dbg !9856
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9858
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9858
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9858
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9855, metadata !DIExpression()), !dbg !9856
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !9859
  store i32 %9, i32* %1, align 4, !dbg !9860
  ret i32 0, !dbg !9861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9862 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9864, metadata !DIExpression()), !dbg !9870
  call void @llvm.dbg.value(metadata i32 %1, metadata !9865, metadata !DIExpression()), !dbg !9870
  call void @llvm.dbg.value(metadata i32 %2, metadata !9866, metadata !DIExpression()), !dbg !9870
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9871
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9871
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9871
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9867, metadata !DIExpression()), !dbg !9870
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9872
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9872
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9872
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9868, metadata !DIExpression()), !dbg !9870
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !9873
  call void @llvm.dbg.value(metadata i32 %10, metadata !9869, metadata !DIExpression()), !dbg !9870
  %11 = xor i32 %1, -1, !dbg !9874
  %12 = and i32 %10, %11, !dbg !9875
  %13 = and i32 %2, %1, !dbg !9876
  %14 = or i32 %12, %13, !dbg !9877
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !9878
  ret i32 0, !dbg !9879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9880 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9882, metadata !DIExpression()), !dbg !9886
  call void @llvm.dbg.value(metadata i32 %1, metadata !9883, metadata !DIExpression()), !dbg !9886
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9887
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9887
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9887
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9884, metadata !DIExpression()), !dbg !9886
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9888
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9888
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9888
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9885, metadata !DIExpression()), !dbg !9886
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9889
  store volatile i32 %1, i32* %9, align 4, !dbg !9889
  ret i32 0, !dbg !9890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9891 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9893, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %1, metadata !9894, metadata !DIExpression()), !dbg !9897
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9898
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9898
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9898
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9895, metadata !DIExpression()), !dbg !9897
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9899
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9899
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9899
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9896, metadata !DIExpression()), !dbg !9897
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !9900
  ret i32 0, !dbg !9901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9902 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9904, metadata !DIExpression()), !dbg !9908
  call void @llvm.dbg.value(metadata i32 %1, metadata !9905, metadata !DIExpression()), !dbg !9908
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9909
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9909
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9909
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9906, metadata !DIExpression()), !dbg !9908
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9910
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9910
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9910
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9907, metadata !DIExpression()), !dbg !9908
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9911
  %10 = load volatile i32, i32* %9, align 4, !dbg !9911
  %11 = xor i32 %10, %1, !dbg !9911
  store volatile i32 %11, i32* %9, align 4, !dbg !9911
  ret i32 0, !dbg !9912
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9913 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9915, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i8 %1, metadata !9916, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i32 %2, metadata !9917, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i32 %3, metadata !9918, metadata !DIExpression()), !dbg !9925
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9926
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9926
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9926
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9919, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i8* undef, metadata !9920, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i32 0, metadata !9922, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i32 0, metadata !9923, metadata !DIExpression()), !dbg !9925
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9927

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9928
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !9932
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9933
  %12 = load i32, i32* %11, align 4, !dbg !9933
  %13 = icmp eq i32 %10, %12, !dbg !9934
  br i1 %13, label %14, label %29, !dbg !9935

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9936
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9938
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9939
  br label %29, !dbg !9940

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9941
  %17 = load i8*, i8** %16, align 4, !dbg !9941
  call void @llvm.dbg.value(metadata i8* %17, metadata !9920, metadata !DIExpression()), !dbg !9925
  %18 = zext i8 %1 to i32, !dbg !9942
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9944
  %20 = icmp eq i32 %19, 0, !dbg !9945
  br i1 %20, label %21, label %29, !dbg !9946

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9947
  %23 = load i32, i32* %22, align 4, !dbg !9947
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !9948
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9949

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9922, metadata !DIExpression()), !dbg !9925
  br label %27, !dbg !9950

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9922, metadata !DIExpression()), !dbg !9925
  br label %27, !dbg !9952

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9922, metadata !DIExpression()), !dbg !9925
  br label %27, !dbg !9953

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9925
  call void @llvm.dbg.value(metadata i32 %28, metadata !9922, metadata !DIExpression()), !dbg !9925
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9954
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9955
  br label %29, !dbg !9955

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9925
  call void @llvm.dbg.value(metadata i32 %30, metadata !9923, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.label(metadata !9924), !dbg !9956
  ret i32 %30, !dbg !9957
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !9958 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9960, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9961, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i1 %2, metadata !9962, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9964
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9965
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9965
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9965
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9963, metadata !DIExpression()), !dbg !9964
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9966
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !9967
  ret i32 %8, !dbg !9968
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !9969 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9975, metadata !DIExpression()), !dbg !9978
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9976, metadata !DIExpression()), !dbg !9978
  call void @llvm.dbg.value(metadata i1 %2, metadata !9977, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9978
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !9979
  br i1 %4, label %10, label %5, !dbg !9981

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9982
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !9985
  %8 = or i1 %7, %2, !dbg !9986
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9986
  br i1 %2, label %11, label %13, !dbg !9986

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9987

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9988
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !9991
  br label %13, !dbg !9992

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9978
  ret i32 %14, !dbg !9993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9994 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9998, metadata !DIExpression()), !dbg !9999
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10000
  %3 = icmp eq %struct._snode* %2, null, !dbg !10000
  ret i1 %3, !dbg !10000
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10001 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10005, metadata !DIExpression()), !dbg !10009
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10006, metadata !DIExpression()), !dbg !10009
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10007, metadata !DIExpression()), !dbg !10009
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10010
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10008, metadata !DIExpression()), !dbg !10009
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10007, metadata !DIExpression()), !dbg !10009
  %4 = icmp eq %struct._snode* %3, null, !dbg !10012
  br i1 %4, label %15, label %5, !dbg !10010

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10008, metadata !DIExpression()), !dbg !10009
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10007, metadata !DIExpression()), !dbg !10009
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10014
  br i1 %6, label %9, label %11, !dbg !10017

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10008, metadata !DIExpression()), !dbg !10009
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10007, metadata !DIExpression()), !dbg !10009
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10014
  br i1 %8, label %9, label %11, !dbg !10017, !llvm.loop !10018

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !10019
  br label %15, !dbg !10019

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10008, metadata !DIExpression()), !dbg !10009
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10007, metadata !DIExpression()), !dbg !10009
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !10012
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10008, metadata !DIExpression()), !dbg !10009
  %14 = icmp eq %struct._snode* %13, null, !dbg !10012
  br i1 %14, label %15, label %7, !dbg !10010, !llvm.loop !10018

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10022 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10026, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10027, metadata !DIExpression()), !dbg !10028
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10029
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !10029
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !10029
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10030
  %5 = icmp eq %struct._snode* %4, null, !dbg !10030
  br i1 %5, label %6, label %8, !dbg !10029

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10032
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !10032
  br label %8, !dbg !10032

8:                                                ; preds = %6, %2
  ret void, !dbg !10029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10034 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10038, metadata !DIExpression()), !dbg !10039
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10040
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10040
  ret %struct._snode* %3, !dbg !10041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !10042 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10046, metadata !DIExpression()), !dbg !10048
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10047, metadata !DIExpression()), !dbg !10048
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10049
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10050
  ret void, !dbg !10051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !10052 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10054, metadata !DIExpression()), !dbg !10056
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10055, metadata !DIExpression()), !dbg !10056
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10057
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10058
  ret void, !dbg !10059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10060 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10062, metadata !DIExpression()), !dbg !10063
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10064
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10064
  ret %struct._snode* %3, !dbg !10065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !10066 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10068, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10069, metadata !DIExpression()), !dbg !10070
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10071
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10072
  ret void, !dbg !10073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !10074 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10078, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10079, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10080, metadata !DIExpression()), !dbg !10081
  %4 = icmp eq %struct._snode* %1, null, !dbg !10082
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !10084
  br i1 %4, label %6, label %11, !dbg !10085

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !10086
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10088
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10088
  br i1 %8, label %9, label %15, !dbg !10086

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10090
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !10090
  br label %15, !dbg !10090

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !10092
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10094
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10094
  br i1 %13, label %14, label %15, !dbg !10092

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !10096
  br label %15, !dbg !10096

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !10085
  ret void, !dbg !10085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !10098 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10102, metadata !DIExpression()), !dbg !10103
  %2 = icmp eq %struct._snode* %0, null, !dbg !10104
  br i1 %2, label %5, label %3, !dbg !10104

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !10104
  br label %5, !dbg !10104

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10104
  ret %struct._snode* %6, !dbg !10104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10105 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10107, metadata !DIExpression()), !dbg !10108
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !10109
  ret %struct._snode* %2, !dbg !10109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10110 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10112, metadata !DIExpression()), !dbg !10113
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10114
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10114
  ret %struct._snode* %3, !dbg !10115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10118, metadata !DIExpression()), !dbg !10121
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10122, !range !10123
  call void @llvm.dbg.value(metadata i32 %2, metadata !10119, metadata !DIExpression()), !dbg !10121
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10124
  call void @llvm.dbg.value(metadata i32 %3, metadata !10120, metadata !DIExpression()), !dbg !10121
  ret i32 %3, !dbg !10125
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10128, metadata !DIExpression()), !dbg !10131
  call void @llvm.dbg.value(metadata i8* %1, metadata !10129, metadata !DIExpression()), !dbg !10131
  call void @llvm.dbg.value(metadata i8* %1, metadata !10130, metadata !DIExpression()), !dbg !10131
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10132
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10132
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10133
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10133
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10133
  %8 = shl nuw i32 1, %0, !dbg !10134
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10135
  ret void, !dbg !10136
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10137 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10141, metadata !DIExpression()), !dbg !10147
  call void @llvm.dbg.value(metadata i32 %1, metadata !10142, metadata !DIExpression()), !dbg !10147
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10143, metadata !DIExpression()), !dbg !10147
  %4 = bitcast i64* %3 to i8*, !dbg !10148
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10148
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10145, metadata !DIExpression()), !dbg !10147
  store i64 70368744177732, i64* %3, align 8, !dbg !10149
  call void @llvm.dbg.value(metadata i64* %3, metadata !10145, metadata !DIExpression(DW_OP_deref)), !dbg !10147
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10150
  call void @llvm.dbg.value(metadata i32 %5, metadata !10146, metadata !DIExpression()), !dbg !10147
  %6 = icmp eq i32 %5, 0, !dbg !10151
  br i1 %6, label %7, label %8, !dbg !10153

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10154
  br label %8, !dbg !10155

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10156
  ret void, !dbg !10156
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10157 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10159, metadata !DIExpression()), !dbg !10162
  call void @llvm.dbg.value(metadata i8* %0, metadata !10160, metadata !DIExpression()), !dbg !10162
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10163
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10161, metadata !DIExpression()), !dbg !10162
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10164
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10164
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10165
  ret i32 %5, !dbg !10166
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10169, metadata !DIExpression()), !dbg !10172
  call void @llvm.dbg.value(metadata i32 %1, metadata !10170, metadata !DIExpression()), !dbg !10172
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10173
  call void @llvm.dbg.value(metadata i32 %3, metadata !10171, metadata !DIExpression()), !dbg !10172
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10174
  ret void, !dbg !10175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !10176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10180, metadata !DIExpression()), !dbg !10181
  %2 = sdiv i32 %0, 4, !dbg !10182
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10183
  %6 = add nsw i32 %5, 16, !dbg !10184
  %7 = shl i32 15, %6, !dbg !10185
  %8 = or i32 %7, %2, !dbg !10186
  ret i32 %8, !dbg !10187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10192, metadata !DIExpression()), !dbg !10194
  call void @llvm.dbg.value(metadata i32 %1, metadata !10193, metadata !DIExpression()), !dbg !10194
  %3 = and i32 %1, 255, !dbg !10195
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10195
  %5 = load volatile i32, i32* %4, align 4, !dbg !10195
  %6 = lshr i32 %1, 16, !dbg !10195
  %7 = xor i32 %6, -1, !dbg !10195
  %8 = and i32 %5, %7, !dbg !10195
  call void @llvm.dbg.value(metadata i32 %6, metadata !10196, metadata !DIExpression()) #24, !dbg !10200
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10202, !srcloc !10203
  call void @llvm.dbg.value(metadata i32 %9, metadata !10199, metadata !DIExpression()) #24, !dbg !10200
  call void @llvm.dbg.value(metadata i32 %9, metadata !10204, metadata !DIExpression()) #24, !dbg !10209
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !10211, !range !3947
  %11 = shl i32 %0, %10, !dbg !10195
  %12 = or i32 %11, %8, !dbg !10195
  store volatile i32 %12, i32* %4, align 4, !dbg !10195
  ret void, !dbg !10212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10213 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10217, metadata !DIExpression()), !dbg !10222
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10218, metadata !DIExpression()), !dbg !10222
  call void @llvm.dbg.value(metadata i32 %2, metadata !10219, metadata !DIExpression()), !dbg !10222
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10223
  %5 = icmp eq %struct._snode* %4, null, !dbg !10223
  br i1 %5, label %21, label %6, !dbg !10223

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10225
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10221, metadata !DIExpression()), !dbg !10222
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10220, metadata !DIExpression()), !dbg !10222
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10226
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10226
  %11 = load i32, i32* %10, align 4, !dbg !10226
  %12 = and i32 %11, %2, !dbg !10230
  %13 = icmp eq i32 %12, 0, !dbg !10230
  br i1 %13, label %19, label %14, !dbg !10231

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10220, metadata !DIExpression()), !dbg !10222
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10232
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10232
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10232
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10234
  br label %19, !dbg !10235

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10220, metadata !DIExpression()), !dbg !10222
  %20 = icmp eq %struct._snode* %8, null, !dbg !10236
  br i1 %20, label %21, label %6, !dbg !10236

21:                                               ; preds = %19, %3
  ret void, !dbg !10237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10240, metadata !DIExpression()), !dbg !10241
  %2 = and i32 %0, 255, !dbg !10242
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10242
  %4 = load volatile i32, i32* %3, align 4, !dbg !10242
  %5 = lshr i32 %0, 16, !dbg !10242
  %6 = and i32 %4, %5, !dbg !10242
  call void @llvm.dbg.value(metadata i32 %5, metadata !10196, metadata !DIExpression()) #24, !dbg !10243
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !10245, !srcloc !10203
  call void @llvm.dbg.value(metadata i32 %7, metadata !10199, metadata !DIExpression()) #24, !dbg !10243
  call void @llvm.dbg.value(metadata i32 %7, metadata !10204, metadata !DIExpression()) #24, !dbg !10246
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10248, !range !3947
  %9 = lshr i32 %6, %8, !dbg !10249
  ret i32 %9, !dbg !10250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10251 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10256, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata i32 %1, metadata !10257, metadata !DIExpression()), !dbg !10258
  %3 = shl i32 %1, 16, !dbg !10259
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10259
  store volatile i32 %3, i32* %4, align 4, !dbg !10259
  ret void, !dbg !10260
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10261 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10265, metadata !DIExpression()), !dbg !10266
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10267
  %3 = load volatile i32, i32* %2, align 4, !dbg !10267
  ret i32 %3, !dbg !10268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10269 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10271, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.value(metadata i32 %1, metadata !10272, metadata !DIExpression()), !dbg !10273
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10274
  store volatile i32 %1, i32* %3, align 4, !dbg !10274
  ret void, !dbg !10275
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10276 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10278, metadata !DIExpression()), !dbg !10279
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10280
  %3 = load volatile i32, i32* %2, align 4, !dbg !10280
  ret i32 %3, !dbg !10281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !10282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10286, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.value(metadata i32* %1, metadata !10287, metadata !DIExpression()), !dbg !10288
  %3 = and i32 %0, 131072, !dbg !10289
  %4 = icmp eq i32 %3, 0, !dbg !10291
  br i1 %4, label %22, label %5, !dbg !10292

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10293
  %6 = and i32 %0, 2, !dbg !10295
  %7 = icmp eq i32 %6, 0, !dbg !10297
  br i1 %7, label %11, label %8, !dbg !10298

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10299
  %10 = icmp eq i32 %9, 0, !dbg !10299
  br i1 %10, label %33, label %11, !dbg !10302

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10303
  store i32 %12, i32* %1, align 4, !dbg !10303
  %13 = and i32 %0, 16, !dbg !10304
  %14 = icmp eq i32 %13, 0, !dbg !10306
  br i1 %14, label %17, label %15, !dbg !10307

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10308
  br label %31, !dbg !10310

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10311
  %19 = icmp eq i32 %18, 0, !dbg !10313
  br i1 %19, label %33, label %20, !dbg !10314

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10315
  br label %31, !dbg !10317

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10318
  %24 = icmp eq i32 %23, 0, !dbg !10320
  br i1 %24, label %31, label %25, !dbg !10321

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10322
  %27 = icmp eq i32 %26, 0, !dbg !10325
  br i1 %27, label %28, label %31, !dbg !10326

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10327
  br label %33, !dbg !10328

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10288
  ret i32 %34, !dbg !10328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10329 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10333, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.value(metadata i32 %1, metadata !10334, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.value(metadata i32 %2, metadata !10335, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.value(metadata i32 %3, metadata !10336, metadata !DIExpression()), !dbg !10344
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10345
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10345
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10345
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10337, metadata !DIExpression()), !dbg !10344
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10346
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10346
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10346
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10338, metadata !DIExpression()), !dbg !10344
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10347
  call void @llvm.dbg.value(metadata i32 %11, metadata !10339, metadata !DIExpression()), !dbg !10344
  %12 = and i32 %2, 48, !dbg !10348
  call void @llvm.dbg.value(metadata i32 %12, metadata !10340, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.value(metadata i32 %2, metadata !10341, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10344
  call void @llvm.dbg.value(metadata i32 %2, metadata !10342, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10344
  call void @llvm.dbg.value(metadata i32 %2, metadata !10343, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10344
  %13 = lshr i32 %2, 6, !dbg !10349
  %14 = and i32 %13, 1, !dbg !10349
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10350
  %15 = lshr i32 %2, 7, !dbg !10351
  %16 = and i32 %15, 3, !dbg !10351
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10352
  %17 = lshr i32 %2, 9, !dbg !10353
  %18 = and i32 %17, 3, !dbg !10353
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10354
  %19 = icmp eq i32 %12, 32, !dbg !10355
  br i1 %19, label %20, label %24, !dbg !10357

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10358
  br i1 %21, label %22, label %23, !dbg !10361

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10362
  br label %24, !dbg !10364

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10365
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10367
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10368
  ret void, !dbg !10369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !10370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10372, metadata !DIExpression()), !dbg !10374
  %2 = shl nuw i32 1, %0, !dbg !10375
  call void @llvm.dbg.value(metadata i32 %2, metadata !10373, metadata !DIExpression()), !dbg !10374
  ret i32 %2, !dbg !10376
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10377 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10381, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i32 %1, metadata !10382, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i32 %2, metadata !10383, metadata !DIExpression()), !dbg !10384
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10385
  %5 = load volatile i32, i32* %4, align 4, !dbg !10385
  %6 = xor i32 %1, -1, !dbg !10385
  %7 = and i32 %5, %6, !dbg !10385
  %8 = mul i32 %2, %1, !dbg !10385
  %9 = or i32 %7, %8, !dbg !10385
  store volatile i32 %9, i32* %4, align 4, !dbg !10385
  ret void, !dbg !10386
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10387 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10389, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i32 %1, metadata !10390, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i32 %2, metadata !10391, metadata !DIExpression()), !dbg !10392
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10393
  %5 = load volatile i32, i32* %4, align 4, !dbg !10393
  call void @llvm.dbg.value(metadata i32 %1, metadata !10196, metadata !DIExpression()) #24, !dbg !10394
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10396, !srcloc !10203
  call void @llvm.dbg.value(metadata i32 %6, metadata !10199, metadata !DIExpression()) #24, !dbg !10394
  call void @llvm.dbg.value(metadata i32 %6, metadata !10204, metadata !DIExpression()) #24, !dbg !10397
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10399, !range !3947
  %8 = shl nuw nsw i32 %7, 1, !dbg !10393
  %9 = shl i32 3, %8, !dbg !10393
  %10 = xor i32 %9, -1, !dbg !10393
  %11 = and i32 %5, %10, !dbg !10393
  call void @llvm.dbg.value(metadata i32 %1, metadata !10196, metadata !DIExpression()) #24, !dbg !10400
  call void @llvm.dbg.value(metadata i32 %6, metadata !10199, metadata !DIExpression()) #24, !dbg !10400
  call void @llvm.dbg.value(metadata i32 %6, metadata !10204, metadata !DIExpression()) #24, !dbg !10402
  %12 = shl i32 %2, %8, !dbg !10393
  %13 = or i32 %11, %12, !dbg !10393
  store volatile i32 %13, i32* %4, align 4, !dbg !10393
  ret void, !dbg !10404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10405 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10407, metadata !DIExpression()), !dbg !10410
  call void @llvm.dbg.value(metadata i32 %1, metadata !10408, metadata !DIExpression()), !dbg !10410
  call void @llvm.dbg.value(metadata i32 %2, metadata !10409, metadata !DIExpression()), !dbg !10410
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10411
  %5 = load volatile i32, i32* %4, align 4, !dbg !10411
  call void @llvm.dbg.value(metadata i32 %1, metadata !10196, metadata !DIExpression()) #24, !dbg !10412
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10414, !srcloc !10203
  call void @llvm.dbg.value(metadata i32 %6, metadata !10199, metadata !DIExpression()) #24, !dbg !10412
  call void @llvm.dbg.value(metadata i32 %6, metadata !10204, metadata !DIExpression()) #24, !dbg !10415
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10417, !range !3947
  %8 = shl nuw nsw i32 %7, 1, !dbg !10411
  %9 = shl i32 3, %8, !dbg !10411
  %10 = xor i32 %9, -1, !dbg !10411
  %11 = and i32 %5, %10, !dbg !10411
  call void @llvm.dbg.value(metadata i32 %1, metadata !10196, metadata !DIExpression()) #24, !dbg !10418
  call void @llvm.dbg.value(metadata i32 %6, metadata !10199, metadata !DIExpression()) #24, !dbg !10418
  call void @llvm.dbg.value(metadata i32 %6, metadata !10204, metadata !DIExpression()) #24, !dbg !10420
  %12 = shl i32 %2, %8, !dbg !10411
  %13 = or i32 %11, %12, !dbg !10411
  store volatile i32 %13, i32* %4, align 4, !dbg !10411
  ret void, !dbg !10422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10423 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10425, metadata !DIExpression()), !dbg !10428
  call void @llvm.dbg.value(metadata i32 %1, metadata !10426, metadata !DIExpression()), !dbg !10428
  call void @llvm.dbg.value(metadata i32 %2, metadata !10427, metadata !DIExpression()), !dbg !10428
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10429
  %5 = load volatile i32, i32* %4, align 4, !dbg !10429
  call void @llvm.dbg.value(metadata i32 %1, metadata !10196, metadata !DIExpression()) #24, !dbg !10430
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10432, !srcloc !10203
  call void @llvm.dbg.value(metadata i32 %6, metadata !10199, metadata !DIExpression()) #24, !dbg !10430
  call void @llvm.dbg.value(metadata i32 %6, metadata !10204, metadata !DIExpression()) #24, !dbg !10433
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10435, !range !3947
  %8 = shl nuw nsw i32 %7, 2, !dbg !10429
  %9 = shl i32 15, %8, !dbg !10429
  %10 = xor i32 %9, -1, !dbg !10429
  %11 = and i32 %5, %10, !dbg !10429
  call void @llvm.dbg.value(metadata i32 %1, metadata !10196, metadata !DIExpression()) #24, !dbg !10436
  call void @llvm.dbg.value(metadata i32 %6, metadata !10199, metadata !DIExpression()) #24, !dbg !10436
  call void @llvm.dbg.value(metadata i32 %6, metadata !10204, metadata !DIExpression()) #24, !dbg !10438
  %12 = shl i32 %2, %8, !dbg !10429
  %13 = or i32 %11, %12, !dbg !10429
  store volatile i32 %13, i32* %4, align 4, !dbg !10429
  ret void, !dbg !10440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10441 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10443, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i32 %1, metadata !10444, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i32 %2, metadata !10445, metadata !DIExpression()), !dbg !10446
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10447
  %5 = load volatile i32, i32* %4, align 4, !dbg !10447
  %6 = lshr i32 %1, 8, !dbg !10447
  call void @llvm.dbg.value(metadata i32 %6, metadata !10196, metadata !DIExpression()) #24, !dbg !10448
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10450, !srcloc !10203
  call void @llvm.dbg.value(metadata i32 %7, metadata !10199, metadata !DIExpression()) #24, !dbg !10448
  call void @llvm.dbg.value(metadata i32 %7, metadata !10204, metadata !DIExpression()) #24, !dbg !10451
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10453, !range !3947
  %9 = shl nuw nsw i32 %8, 2, !dbg !10447
  %10 = shl i32 15, %9, !dbg !10447
  %11 = xor i32 %10, -1, !dbg !10447
  %12 = and i32 %5, %11, !dbg !10447
  call void @llvm.dbg.value(metadata i32 %6, metadata !10196, metadata !DIExpression()) #24, !dbg !10454
  call void @llvm.dbg.value(metadata i32 %7, metadata !10199, metadata !DIExpression()) #24, !dbg !10454
  call void @llvm.dbg.value(metadata i32 %7, metadata !10204, metadata !DIExpression()) #24, !dbg !10456
  %13 = shl i32 %2, %9, !dbg !10447
  %14 = or i32 %12, %13, !dbg !10447
  store volatile i32 %14, i32* %4, align 4, !dbg !10447
  ret void, !dbg !10458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10459 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10461, metadata !DIExpression()), !dbg !10464
  call void @llvm.dbg.value(metadata i32 %1, metadata !10462, metadata !DIExpression()), !dbg !10464
  call void @llvm.dbg.value(metadata i32 %2, metadata !10463, metadata !DIExpression()), !dbg !10464
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10465
  %5 = load volatile i32, i32* %4, align 4, !dbg !10465
  call void @llvm.dbg.value(metadata i32 %1, metadata !10196, metadata !DIExpression()) #24, !dbg !10466
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10468, !srcloc !10203
  call void @llvm.dbg.value(metadata i32 %6, metadata !10199, metadata !DIExpression()) #24, !dbg !10466
  call void @llvm.dbg.value(metadata i32 %6, metadata !10204, metadata !DIExpression()) #24, !dbg !10469
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10471, !range !3947
  %8 = shl nuw nsw i32 %7, 1, !dbg !10465
  %9 = shl i32 3, %8, !dbg !10465
  %10 = xor i32 %9, -1, !dbg !10465
  %11 = and i32 %5, %10, !dbg !10465
  call void @llvm.dbg.value(metadata i32 %1, metadata !10196, metadata !DIExpression()) #24, !dbg !10472
  call void @llvm.dbg.value(metadata i32 %6, metadata !10199, metadata !DIExpression()) #24, !dbg !10472
  call void @llvm.dbg.value(metadata i32 %6, metadata !10204, metadata !DIExpression()) #24, !dbg !10474
  %12 = shl i32 %2, %8, !dbg !10465
  %13 = or i32 %11, %12, !dbg !10465
  store volatile i32 %13, i32* %4, align 4, !dbg !10465
  ret void, !dbg !10476
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10477 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10479, metadata !DIExpression()), !dbg !10482
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10483
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10483
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10483
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10480, metadata !DIExpression()), !dbg !10482
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10484
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10485
  %6 = tail call fastcc zeroext i1 @device_is_ready.69() #26, !dbg !10486
  br i1 %6, label %7, label %11, !dbg !10488

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %8, metadata !10481, metadata !DIExpression()), !dbg !10482
  %9 = icmp slt i32 %8, 0, !dbg !10490
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10492
  br label %11, !dbg !10492

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10482
  ret i32 %12, !dbg !10493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.69() unnamed_addr #1 !dbg !10494 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10498, metadata !DIExpression()), !dbg !10499
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10500, !srcloc !10502
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.70() #26, !dbg !10503
  ret i1 %1, !dbg !10504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10505 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10509, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.value(metadata i8 1, metadata !10510, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10511, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.value(metadata i32 0, metadata !10512, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10513, metadata !DIExpression()), !dbg !10514
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10515
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10515
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10515
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10511, metadata !DIExpression()), !dbg !10514
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10516
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10519
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10520
  call void @llvm.dbg.value(metadata i32 %7, metadata !10512, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.value(metadata i32 %7, metadata !10512, metadata !DIExpression()), !dbg !10514
  ret i32 %7, !dbg !10521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.70() unnamed_addr #1 !dbg !10522 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10524, metadata !DIExpression()), !dbg !10525
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10526
  ret i1 %1, !dbg !10527
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10528 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10532, metadata !DIExpression()), !dbg !10540
  call void @llvm.dbg.value(metadata i32 %1, metadata !10533, metadata !DIExpression()), !dbg !10540
  call void @llvm.dbg.value(metadata i32 %2, metadata !10534, metadata !DIExpression()), !dbg !10540
  call void @llvm.dbg.value(metadata i32 %3, metadata !10535, metadata !DIExpression()), !dbg !10540
  call void @llvm.dbg.value(metadata i32 0, metadata !10536, metadata !DIExpression()), !dbg !10540
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10541
  %5 = icmp eq i32 %3, 17, !dbg !10542
  br i1 %5, label %6, label %14, !dbg !10543

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10544
  call void @llvm.dbg.value(metadata i32 %7, metadata !10537, metadata !DIExpression()), !dbg !10545
  %8 = icmp eq i32 %7, 0, !dbg !10546
  %9 = shl nuw i32 1, %1, !dbg !10548
  br i1 %8, label %12, label %10, !dbg !10549

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10550
  br label %14, !dbg !10552

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10553
  br label %14, !dbg !10556

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10557
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !10558 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10560, metadata !DIExpression()), !dbg !10564
  call void @llvm.dbg.value(metadata i8* %1, metadata !10561, metadata !DIExpression()), !dbg !10564
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10565
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10565
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10565
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10562, metadata !DIExpression()), !dbg !10564
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10566
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10566
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !10568
  %9 = icmp eq i32 %8, 0, !dbg !10568
  br i1 %9, label %12, label %10, !dbg !10569

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10570
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !10572
  br label %12, !dbg !10573

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10574
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10576
  %15 = icmp eq i32 %14, 0, !dbg !10576
  br i1 %15, label %19, label %16, !dbg !10577

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10578
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !10579
  store i8 %18, i8* %1, align 1, !dbg !10580
  br label %19, !dbg !10581

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10564
  ret i32 %20, !dbg !10582
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10583 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10585, metadata !DIExpression()), !dbg !10589
  call void @llvm.dbg.value(metadata i8 %1, metadata !10586, metadata !DIExpression()), !dbg !10589
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10590
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10590
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10590
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10587, metadata !DIExpression()), !dbg !10589
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10591

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10592
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10595
  %10 = icmp eq i32 %9, 0, !dbg !10595
  br i1 %10, label %18, label %11, !dbg !10596

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10597, !srcloc !10604
  call void @llvm.dbg.value(metadata i32 undef, metadata !10600, metadata !DIExpression()) #24, !dbg !10605
  call void @llvm.dbg.value(metadata i32 undef, metadata !10601, metadata !DIExpression()) #24, !dbg !10605
  call void @llvm.dbg.value(metadata i32 undef, metadata !10588, metadata !DIExpression()), !dbg !10589
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10606
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10608
  %15 = icmp eq i32 %14, 0, !dbg !10608
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10597
  br i1 %15, label %17, label %19, !dbg !10609

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10600, metadata !DIExpression()) #24, !dbg !10605
  call void @llvm.dbg.value(metadata i32 %16, metadata !10588, metadata !DIExpression()), !dbg !10589
  call void @llvm.dbg.value(metadata i32 undef, metadata !10610, metadata !DIExpression()) #24, !dbg !10613
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !10615, !srcloc !10616
  br label %18, !dbg !10617

18:                                               ; preds = %17, %7
  br label %7, !dbg !10592, !llvm.loop !10618

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10597
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10620
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !10621
  call void @llvm.dbg.value(metadata i32 %20, metadata !10610, metadata !DIExpression()) #24, !dbg !10622
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !10624, !srcloc !10616
  ret void, !dbg !10625
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !10626 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10628, metadata !DIExpression()), !dbg !10631
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10632
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10632
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10632
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10629, metadata !DIExpression()), !dbg !10631
  call void @llvm.dbg.value(metadata i32 0, metadata !10630, metadata !DIExpression()), !dbg !10631
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10633
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10633
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10635
  %8 = icmp ne i32 %7, 0, !dbg !10635
  %9 = zext i1 %8 to i32, !dbg !10636
  call void @llvm.dbg.value(metadata i32 %9, metadata !10630, metadata !DIExpression()), !dbg !10631
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10637
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10639
  %12 = icmp eq i32 %11, 0, !dbg !10639
  %13 = or i32 %9, 2, !dbg !10640
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10640
  call void @llvm.dbg.value(metadata i32 %14, metadata !10630, metadata !DIExpression()), !dbg !10631
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10641
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !10643
  %17 = icmp eq i32 %16, 0, !dbg !10643
  %18 = or i32 %14, 4, !dbg !10644
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10644
  call void @llvm.dbg.value(metadata i32 %19, metadata !10630, metadata !DIExpression()), !dbg !10631
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10645
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !10647
  %22 = icmp eq i32 %21, 0, !dbg !10647
  %23 = or i32 %19, 8, !dbg !10648
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10648
  call void @llvm.dbg.value(metadata i32 %24, metadata !10630, metadata !DIExpression()), !dbg !10631
  %25 = and i32 %24, 8, !dbg !10649
  %26 = icmp eq i32 %25, 0, !dbg !10649
  br i1 %26, label %29, label %27, !dbg !10651

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10652
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !10654
  br label %29, !dbg !10655

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10656
  %31 = icmp eq i32 %30, 0, !dbg !10656
  br i1 %31, label %34, label %32, !dbg !10658

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10659
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !10661
  br label %34, !dbg !10662

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10663
  %36 = icmp eq i32 %35, 0, !dbg !10663
  br i1 %36, label %39, label %37, !dbg !10665

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10666
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !10668
  br label %39, !dbg !10669

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10670
  %41 = icmp eq i32 %40, 0, !dbg !10670
  br i1 %41, label %44, label %42, !dbg !10672

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10673
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !10675
  br label %44, !dbg !10676

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10677
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !10678
  ret i32 %24, !dbg !10679
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10680 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10682, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10683, metadata !DIExpression()), !dbg !10691
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10692
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10692
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10692
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10684, metadata !DIExpression()), !dbg !10691
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10693
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10693
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10693
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10685, metadata !DIExpression()), !dbg !10691
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10694
  %10 = load i8, i8* %9, align 4, !dbg !10694
  %11 = zext i8 %10 to i32, !dbg !10695
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !10696
  call void @llvm.dbg.value(metadata i32 %12, metadata !10687, metadata !DIExpression()), !dbg !10691
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10697
  %14 = load i8, i8* %13, align 1, !dbg !10697
  %15 = zext i8 %14 to i32, !dbg !10698
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !10699
  call void @llvm.dbg.value(metadata i32 %16, metadata !10688, metadata !DIExpression()), !dbg !10691
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10700
  %18 = load i8, i8* %17, align 2, !dbg !10700
  %19 = zext i8 %18 to i32, !dbg !10701
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !10702
  call void @llvm.dbg.value(metadata i32 %20, metadata !10689, metadata !DIExpression()), !dbg !10691
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10703
  %22 = load i8, i8* %21, align 1, !dbg !10703
  %23 = zext i8 %22 to i32, !dbg !10704
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !10705
  call void @llvm.dbg.value(metadata i32 %24, metadata !10690, metadata !DIExpression()), !dbg !10691
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10706

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10708
  br i1 %26, label %69, label %27, !dbg !10710

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10711

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10712
  br i1 %29, label %65, label %30, !dbg !10712

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10714
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10691
  br i1 %31, label %38, label %34, !dbg !10716

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10717
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !10717

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10720
  br i1 %37, label %38, label %69, !dbg !10721

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10722
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !10723
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !10724
  %41 = icmp eq i32 %12, %40, !dbg !10726
  br i1 %41, label %43, label %42, !dbg !10727

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !10728
  br label %43, !dbg !10730

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !10731
  %45 = icmp eq i32 %16, %44, !dbg !10733
  br i1 %45, label %47, label %46, !dbg !10734

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !10735
  br label %47, !dbg !10737

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !10738
  %49 = icmp eq i32 %20, %48, !dbg !10740
  br i1 %49, label %51, label %50, !dbg !10741

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !10742
  br label %51, !dbg !10744

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !10745
  %53 = icmp eq i32 %24, %52, !dbg !10747
  br i1 %53, label %55, label %54, !dbg !10748

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !10749
  br label %55, !dbg !10751

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10752
  %57 = load i32, i32* %56, align 4, !dbg !10752
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10754
  %59 = load i32, i32* %58, align 4, !dbg !10754
  %60 = icmp eq i32 %57, %59, !dbg !10755
  br i1 %60, label %63, label %61, !dbg !10756

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !10757
  %62 = load i32, i32* %56, align 4, !dbg !10759
  store i32 %62, i32* %58, align 4, !dbg !10760
  br label %63, !dbg !10761

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10762
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !10763
  br label %69, !dbg !10764

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10712
  %67 = and i8 %66, 1, !dbg !10712
  %68 = icmp eq i8 %67, 0, !dbg !10712
  br i1 %68, label %30, label %69, !dbg !10712

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10691
  ret i32 %70, !dbg !10765
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !10766 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10768, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10769, metadata !DIExpression()), !dbg !10771
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10772
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10772
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10772
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10770, metadata !DIExpression()), !dbg !10771
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10773
  %7 = load i32, i32* %6, align 4, !dbg !10773
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10774
  store i32 %7, i32* %8, align 4, !dbg !10775
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10776, !range !10777
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !10778
  %11 = trunc i32 %10 to i8, !dbg !10778
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10779
  store i8 %11, i8* %12, align 4, !dbg !10780
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !10781, !range !10782
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !10783
  %15 = trunc i32 %14 to i8, !dbg !10783
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10784
  store i8 %15, i8* %16, align 1, !dbg !10785
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !10786
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10787, !range !10777
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !10788
  %20 = trunc i32 %19 to i8, !dbg !10788
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10789
  store i8 %20, i8* %21, align 2, !dbg !10790
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !10791, !range !10792
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !10793
  %24 = trunc i32 %23 to i8, !dbg !10793
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10794
  store i8 %24, i8* %25, align 1, !dbg !10795
  ret i32 0, !dbg !10796
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !10797 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10799, metadata !DIExpression()), !dbg !10805
  call void @llvm.dbg.value(metadata i8* %1, metadata !10800, metadata !DIExpression()), !dbg !10805
  call void @llvm.dbg.value(metadata i32 %2, metadata !10801, metadata !DIExpression()), !dbg !10805
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10806
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10806
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10806
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10802, metadata !DIExpression()), !dbg !10805
  call void @llvm.dbg.value(metadata i8 0, metadata !10803, metadata !DIExpression()), !dbg !10805
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10807
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10807
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10809
  %10 = icmp eq i32 %9, 0, !dbg !10809
  br i1 %10, label %30, label %11, !dbg !10810

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10811, !srcloc !10604
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !10811
  call void @llvm.dbg.value(metadata i32 %13, metadata !10600, metadata !DIExpression()) #24, !dbg !10813
  call void @llvm.dbg.value(metadata i32 undef, metadata !10601, metadata !DIExpression()) #24, !dbg !10813
  call void @llvm.dbg.value(metadata i32 %13, metadata !10804, metadata !DIExpression()), !dbg !10805
  call void @llvm.dbg.value(metadata i8 0, metadata !10803, metadata !DIExpression()), !dbg !10805
  %14 = icmp sgt i32 %2, 0, !dbg !10814
  br i1 %14, label %15, label %28, !dbg !10815

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !10803, metadata !DIExpression()), !dbg !10805
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10816
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !10817
  %20 = icmp eq i32 %19, 0, !dbg !10815
  br i1 %20, label %28, label %21, !dbg !10818

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10819
  %23 = add i8 %17, 1, !dbg !10821
  call void @llvm.dbg.value(metadata i8 %23, metadata !10803, metadata !DIExpression()), !dbg !10805
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !10822
  %25 = load i8, i8* %24, align 1, !dbg !10822
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !10823
  %26 = zext i8 %23 to i32, !dbg !10824
  %27 = icmp slt i32 %26, %2, !dbg !10814
  br i1 %27, label %15, label %28, !dbg !10815, !llvm.loop !10825

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !10824
  call void @llvm.dbg.value(metadata i32 %13, metadata !10610, metadata !DIExpression()) #24, !dbg !10827
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !10829, !srcloc !10616
  br label %30, !dbg !10830

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !10805
  ret i32 %31, !dbg !10831
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !10832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10834, metadata !DIExpression()), !dbg !10839
  call void @llvm.dbg.value(metadata i8* %1, metadata !10835, metadata !DIExpression()), !dbg !10839
  call void @llvm.dbg.value(metadata i32 %2, metadata !10836, metadata !DIExpression()), !dbg !10839
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10840
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10840
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10840
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10837, metadata !DIExpression()), !dbg !10839
  call void @llvm.dbg.value(metadata i8 0, metadata !10838, metadata !DIExpression()), !dbg !10839
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10841
  call void @llvm.dbg.value(metadata i8 0, metadata !10838, metadata !DIExpression()), !dbg !10839
  %8 = icmp sgt i32 %2, 0, !dbg !10842
  br i1 %8, label %9, label %28, !dbg !10843

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !10838, metadata !DIExpression()), !dbg !10839
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10841
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10844
  %14 = icmp eq i32 %13, 0, !dbg !10843
  br i1 %14, label %28, label %15, !dbg !10845

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10846
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !10848
  %18 = add i8 %11, 1, !dbg !10849
  call void @llvm.dbg.value(metadata i8 %18, metadata !10838, metadata !DIExpression()), !dbg !10839
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !10850
  store i8 %17, i8* %19, align 1, !dbg !10851
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10852
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !10854
  %22 = icmp eq i32 %21, 0, !dbg !10854
  br i1 %22, label %25, label %23, !dbg !10855

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10856
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !10858
  br label %25, !dbg !10859

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !10838, metadata !DIExpression()), !dbg !10839
  %26 = zext i8 %18 to i32, !dbg !10860
  %27 = icmp slt i32 %26, %2, !dbg !10842
  br i1 %27, label %9, label %28, !dbg !10843, !llvm.loop !10861

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !10860
  ret i32 %29, !dbg !10863
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10864 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10866, metadata !DIExpression()), !dbg !10868
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10869
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10869
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10869
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10867, metadata !DIExpression()), !dbg !10868
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10870
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10870
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10871
  ret void, !dbg !10872
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10873 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10875, metadata !DIExpression()), !dbg !10877
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10878
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10878
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10878
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10876, metadata !DIExpression()), !dbg !10877
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10879
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10879
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10880
  ret void, !dbg !10881
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10882 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10884, metadata !DIExpression()), !dbg !10886
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10887
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10887
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10887
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10885, metadata !DIExpression()), !dbg !10886
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10888
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10888
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10889
  %8 = icmp eq i32 %7, 0, !dbg !10889
  br i1 %8, label %14, label %9, !dbg !10890

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10891
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !10892
  %12 = icmp ne i32 %11, 0, !dbg !10890
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !10893
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10894 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10896, metadata !DIExpression()), !dbg !10898
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10899
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10899
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10899
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10897, metadata !DIExpression()), !dbg !10898
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10900
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10900
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10901
  ret void, !dbg !10902
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10903 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10905, metadata !DIExpression()), !dbg !10907
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10908
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10908
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10908
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10906, metadata !DIExpression()), !dbg !10907
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10909
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10909
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10910
  ret void, !dbg !10911
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !10912 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10914, metadata !DIExpression()), !dbg !10916
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10917
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10917
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10917
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10915, metadata !DIExpression()), !dbg !10916
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10918
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10918
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10919
  ret i32 %7, !dbg !10920
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10921 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10923, metadata !DIExpression()), !dbg !10925
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10926
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10926
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10926
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10924, metadata !DIExpression()), !dbg !10925
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10927
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10927
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10928
  ret i32 %7, !dbg !10929
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10930 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10932, metadata !DIExpression()), !dbg !10934
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10935
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10935
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10935
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10933, metadata !DIExpression()), !dbg !10934
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10936
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10936
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10937
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10938
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10938
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !10938

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10940
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10942
  br label %11, !dbg !10943

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10942
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10944
  ret void, !dbg !10945
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10946 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10948, metadata !DIExpression()), !dbg !10950
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10951
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10951
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10951
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10949, metadata !DIExpression()), !dbg !10950
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10952
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10952
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10953
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10954
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10954
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !10954

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10956
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10958
  br label %11, !dbg !10959

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10958
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10960
  ret void, !dbg !10961
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !10962 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10964, metadata !DIExpression()), !dbg !10966
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10967
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10967
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10967
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10965, metadata !DIExpression()), !dbg !10966
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10968
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10968
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10969
  %8 = icmp eq i32 %7, 0, !dbg !10969
  br i1 %8, label %13, label %9, !dbg !10970

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10971
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10972
  %12 = icmp eq i32 %11, 0, !dbg !10972
  br i1 %12, label %13, label %22, !dbg !10973

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10974
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !10975
  %16 = icmp eq i32 %15, 0, !dbg !10975
  br i1 %16, label %22, label %17, !dbg !10976

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10977
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !10978
  %20 = icmp ne i32 %19, 0, !dbg !10976
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !10979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !10980 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10982, metadata !DIExpression()), !dbg !10983
  ret i32 1, !dbg !10984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10985 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10987, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10988, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.value(metadata i8* %2, metadata !10989, metadata !DIExpression()), !dbg !10991
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10992
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10992
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10992
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10990, metadata !DIExpression()), !dbg !10991
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10993
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10994
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10995
  store i8* %2, i8** %8, align 4, !dbg !10996
  ret void, !dbg !10997
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10998 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11003, metadata !DIExpression()), !dbg !11004
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11005
  %3 = load volatile i32, i32* %2, align 4, !dbg !11005
  %4 = lshr i32 %3, 5, !dbg !11006
  %5 = and i32 %4, 1, !dbg !11006
  ret i32 %5, !dbg !11007
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11008 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11010, metadata !DIExpression()), !dbg !11011
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11012
  %3 = load volatile i32, i32* %2, align 4, !dbg !11012
  %4 = lshr i32 %3, 5, !dbg !11013
  %5 = and i32 %4, 1, !dbg !11013
  ret i32 %5, !dbg !11014
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11015 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11017, metadata !DIExpression()), !dbg !11018
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11019
  %3 = load volatile i32, i32* %2, align 4, !dbg !11019
  %4 = lshr i32 %3, 6, !dbg !11020
  %5 = and i32 %4, 1, !dbg !11020
  ret i32 %5, !dbg !11021
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11022 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11024, metadata !DIExpression()), !dbg !11025
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11026
  %3 = load volatile i32, i32* %2, align 4, !dbg !11026
  %4 = lshr i32 %3, 6, !dbg !11027
  %5 = and i32 %4, 1, !dbg !11027
  ret i32 %5, !dbg !11028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11029 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11033, metadata !DIExpression()), !dbg !11036
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !11037

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11038, metadata !DIExpression()) #24, !dbg !11044
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11047, !srcloc !11048
  call void @llvm.dbg.value(metadata i32 %4, metadata !11043, metadata !DIExpression()) #24, !dbg !11044
  %5 = and i32 %4, -2, !dbg !11049
  call void @llvm.dbg.value(metadata i32 %5, metadata !11034, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i32 %5, metadata !11051, metadata !DIExpression()) #24, !dbg !11058
  call void @llvm.dbg.value(metadata i32* %2, metadata !11056, metadata !DIExpression()) #24, !dbg !11058
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11060, !srcloc !11061
  call void @llvm.dbg.value(metadata i32 %6, metadata !11057, metadata !DIExpression()) #24, !dbg !11058
  %7 = icmp eq i32 %6, 0, !dbg !11037
  br i1 %7, label %8, label %3, !dbg !11049, !llvm.loop !11062

8:                                                ; preds = %3
  ret void, !dbg !11063
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11064 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11066, metadata !DIExpression()), !dbg !11067
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11068
  %3 = load volatile i32, i32* %2, align 4, !dbg !11068
  %4 = and i32 %3, -65, !dbg !11068
  store volatile i32 %4, i32* %2, align 4, !dbg !11068
  ret void, !dbg !11069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11070 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11072, metadata !DIExpression()), !dbg !11075
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11076

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11038, metadata !DIExpression()) #24, !dbg !11077
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11080, !srcloc !11048
  call void @llvm.dbg.value(metadata i32 %4, metadata !11043, metadata !DIExpression()) #24, !dbg !11077
  %5 = and i32 %4, -257, !dbg !11081
  call void @llvm.dbg.value(metadata i32 %5, metadata !11073, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.value(metadata i32 %5, metadata !11051, metadata !DIExpression()) #24, !dbg !11083
  call void @llvm.dbg.value(metadata i32* %2, metadata !11056, metadata !DIExpression()) #24, !dbg !11083
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11085, !srcloc !11061
  call void @llvm.dbg.value(metadata i32 %6, metadata !11057, metadata !DIExpression()) #24, !dbg !11083
  %7 = icmp eq i32 %6, 0, !dbg !11076
  br i1 %7, label %8, label %3, !dbg !11081, !llvm.loop !11086

8:                                                ; preds = %3
  ret void, !dbg !11087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11088 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11090, metadata !DIExpression()), !dbg !11093
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !11094

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11038, metadata !DIExpression()) #24, !dbg !11095
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11098, !srcloc !11048
  call void @llvm.dbg.value(metadata i32 %4, metadata !11043, metadata !DIExpression()) #24, !dbg !11095
  %5 = or i32 %4, 1, !dbg !11099
  call void @llvm.dbg.value(metadata i32 %5, metadata !11091, metadata !DIExpression()), !dbg !11100
  call void @llvm.dbg.value(metadata i32 %5, metadata !11051, metadata !DIExpression()) #24, !dbg !11101
  call void @llvm.dbg.value(metadata i32* %2, metadata !11056, metadata !DIExpression()) #24, !dbg !11101
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11103, !srcloc !11061
  call void @llvm.dbg.value(metadata i32 %6, metadata !11057, metadata !DIExpression()) #24, !dbg !11101
  %7 = icmp eq i32 %6, 0, !dbg !11094
  br i1 %7, label %8, label %3, !dbg !11099, !llvm.loop !11104

8:                                                ; preds = %3
  ret void, !dbg !11105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11106 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11108, metadata !DIExpression()), !dbg !11109
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11110
  %3 = load volatile i32, i32* %2, align 4, !dbg !11110
  %4 = or i32 %3, 64, !dbg !11110
  store volatile i32 %4, i32* %2, align 4, !dbg !11110
  ret void, !dbg !11111
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11112 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11114, metadata !DIExpression()), !dbg !11117
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11118

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11038, metadata !DIExpression()) #24, !dbg !11119
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11122, !srcloc !11048
  call void @llvm.dbg.value(metadata i32 %4, metadata !11043, metadata !DIExpression()) #24, !dbg !11119
  %5 = or i32 %4, 256, !dbg !11123
  call void @llvm.dbg.value(metadata i32 %5, metadata !11115, metadata !DIExpression()), !dbg !11124
  call void @llvm.dbg.value(metadata i32 %5, metadata !11051, metadata !DIExpression()) #24, !dbg !11125
  call void @llvm.dbg.value(metadata i32* %2, metadata !11056, metadata !DIExpression()) #24, !dbg !11125
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11127, !srcloc !11061
  call void @llvm.dbg.value(metadata i32 %6, metadata !11057, metadata !DIExpression()) #24, !dbg !11125
  %7 = icmp eq i32 %6, 0, !dbg !11118
  br i1 %7, label %8, label %3, !dbg !11123, !llvm.loop !11128

8:                                                ; preds = %3
  ret void, !dbg !11129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11130 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11132, metadata !DIExpression()), !dbg !11135
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11136

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11038, metadata !DIExpression()) #24, !dbg !11137
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11140, !srcloc !11048
  call void @llvm.dbg.value(metadata i32 %4, metadata !11043, metadata !DIExpression()) #24, !dbg !11137
  %5 = and i32 %4, -33, !dbg !11141
  call void @llvm.dbg.value(metadata i32 %5, metadata !11133, metadata !DIExpression()), !dbg !11142
  call void @llvm.dbg.value(metadata i32 %5, metadata !11051, metadata !DIExpression()) #24, !dbg !11143
  call void @llvm.dbg.value(metadata i32* %2, metadata !11056, metadata !DIExpression()) #24, !dbg !11143
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11145, !srcloc !11061
  call void @llvm.dbg.value(metadata i32 %6, metadata !11057, metadata !DIExpression()) #24, !dbg !11143
  %7 = icmp eq i32 %6, 0, !dbg !11136
  br i1 %7, label %8, label %3, !dbg !11141, !llvm.loop !11146

8:                                                ; preds = %3
  ret void, !dbg !11147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11148 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11150, metadata !DIExpression()), !dbg !11153
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11154

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11038, metadata !DIExpression()) #24, !dbg !11155
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11158, !srcloc !11048
  call void @llvm.dbg.value(metadata i32 %4, metadata !11043, metadata !DIExpression()) #24, !dbg !11155
  %5 = or i32 %4, 32, !dbg !11159
  call void @llvm.dbg.value(metadata i32 %5, metadata !11151, metadata !DIExpression()), !dbg !11160
  call void @llvm.dbg.value(metadata i32 %5, metadata !11051, metadata !DIExpression()) #24, !dbg !11161
  call void @llvm.dbg.value(metadata i32* %2, metadata !11056, metadata !DIExpression()) #24, !dbg !11161
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11163, !srcloc !11061
  call void @llvm.dbg.value(metadata i32 %6, metadata !11057, metadata !DIExpression()) #24, !dbg !11161
  %7 = icmp eq i32 %6, 0, !dbg !11154
  br i1 %7, label %8, label %3, !dbg !11159, !llvm.loop !11164

8:                                                ; preds = %3
  ret void, !dbg !11165
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11166 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11168, metadata !DIExpression()), !dbg !11169
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11170
  %3 = load volatile i32, i32* %2, align 4, !dbg !11170
  %4 = lshr i32 %3, 7, !dbg !11171
  %5 = and i32 %4, 1, !dbg !11171
  ret i32 %5, !dbg !11172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11173 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11175, metadata !DIExpression()), !dbg !11178
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11179

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11038, metadata !DIExpression()) #24, !dbg !11180
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11183, !srcloc !11048
  call void @llvm.dbg.value(metadata i32 %4, metadata !11043, metadata !DIExpression()) #24, !dbg !11180
  %5 = and i32 %4, -65, !dbg !11184
  call void @llvm.dbg.value(metadata i32 %5, metadata !11176, metadata !DIExpression()), !dbg !11185
  call void @llvm.dbg.value(metadata i32 %5, metadata !11051, metadata !DIExpression()) #24, !dbg !11186
  call void @llvm.dbg.value(metadata i32* %2, metadata !11056, metadata !DIExpression()) #24, !dbg !11186
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11188, !srcloc !11061
  call void @llvm.dbg.value(metadata i32 %6, metadata !11057, metadata !DIExpression()) #24, !dbg !11186
  %7 = icmp eq i32 %6, 0, !dbg !11179
  br i1 %7, label %8, label %3, !dbg !11184, !llvm.loop !11189

8:                                                ; preds = %3
  ret void, !dbg !11190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11191 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11193, metadata !DIExpression()), !dbg !11196
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11197

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11038, metadata !DIExpression()) #24, !dbg !11198
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11201, !srcloc !11048
  call void @llvm.dbg.value(metadata i32 %4, metadata !11043, metadata !DIExpression()) #24, !dbg !11198
  %5 = or i32 %4, 64, !dbg !11202
  call void @llvm.dbg.value(metadata i32 %5, metadata !11194, metadata !DIExpression()), !dbg !11203
  call void @llvm.dbg.value(metadata i32 %5, metadata !11051, metadata !DIExpression()) #24, !dbg !11204
  call void @llvm.dbg.value(metadata i32* %2, metadata !11056, metadata !DIExpression()) #24, !dbg !11204
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11206, !srcloc !11061
  call void @llvm.dbg.value(metadata i32 %6, metadata !11057, metadata !DIExpression()) #24, !dbg !11204
  %7 = icmp eq i32 %6, 0, !dbg !11197
  br i1 %7, label %8, label %3, !dbg !11202, !llvm.loop !11207

8:                                                ; preds = %3
  ret void, !dbg !11208
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11209 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11213, metadata !DIExpression()), !dbg !11214
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11215
  %3 = load volatile i32, i32* %2, align 4, !dbg !11215
  %4 = trunc i32 %3 to i8, !dbg !11216
  ret i8 %4, !dbg !11217
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11218 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11220, metadata !DIExpression()), !dbg !11221
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11222
  %3 = load volatile i32, i32* %2, align 4, !dbg !11222
  %4 = lshr i32 %3, 3, !dbg !11223
  %5 = and i32 %4, 1, !dbg !11223
  ret i32 %5, !dbg !11224
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11225 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11227, metadata !DIExpression()), !dbg !11229
  %3 = bitcast i32* %2 to i8*, !dbg !11230
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11230
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11228, metadata !DIExpression()), !dbg !11231
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11232
  %5 = load volatile i32, i32* %4, align 4, !dbg !11232
  store volatile i32 %5, i32* %2, align 4, !dbg !11233
  %6 = load volatile i32, i32* %2, align 4, !dbg !11234
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11235
  %8 = load volatile i32, i32* %7, align 4, !dbg !11235
  store volatile i32 %8, i32* %2, align 4, !dbg !11236
  %9 = load volatile i32, i32* %2, align 4, !dbg !11237
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11238
  ret void, !dbg !11238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11239 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11243, metadata !DIExpression()), !dbg !11245
  call void @llvm.dbg.value(metadata i8 %1, metadata !11244, metadata !DIExpression()), !dbg !11245
  %3 = zext i8 %1 to i32, !dbg !11246
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11247
  store volatile i32 %3, i32* %4, align 4, !dbg !11248
  ret void, !dbg !11249
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11250 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11254, metadata !DIExpression()), !dbg !11256
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11257
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11257
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11257
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11255, metadata !DIExpression()), !dbg !11256
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11258
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11258
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11259
  ret i32 %7, !dbg !11260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !11261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11265, metadata !DIExpression()), !dbg !11266
  %2 = icmp eq i32 %0, 1024, !dbg !11267
  %3 = select i1 %2, i32 2, i32 0, !dbg !11267
  %4 = icmp eq i32 %0, 1536, !dbg !11267
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11267
  ret i32 %5, !dbg !11268
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11269 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11271, metadata !DIExpression()), !dbg !11273
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11274
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11274
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11274
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11272, metadata !DIExpression()), !dbg !11273
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11275
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11275
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11276
  ret i32 %7, !dbg !11277
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !11278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11282, metadata !DIExpression()), !dbg !11283
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11284
  %3 = icmp ult i32 %2, 4, !dbg !11284
  br i1 %3, label %4, label %7, !dbg !11284

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11284
  %6 = load i32, i32* %5, align 4, !dbg !11284
  br label %7, !dbg !11284

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11285
  ret i32 %8, !dbg !11287
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11288 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11290, metadata !DIExpression()), !dbg !11292
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11293
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11293
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11293
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11291, metadata !DIExpression()), !dbg !11292
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11294
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11294
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11295
  ret i32 %7, !dbg !11296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11301, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata i32 %1, metadata !11302, metadata !DIExpression()), !dbg !11303
  %3 = icmp eq i32 %0, 4096, !dbg !11304
  %4 = icmp eq i32 %1, 0, !dbg !11304
  %5 = select i1 %4, i32 4, i32 3, !dbg !11304
  %6 = select i1 %4, i32 3, i32 2, !dbg !11304
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11304
  ret i32 %7, !dbg !11305
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11306 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11308, metadata !DIExpression()), !dbg !11310
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11311
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11311
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11311
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11309, metadata !DIExpression()), !dbg !11310
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11312
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11312
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11313
  ret i32 %7, !dbg !11314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11319, metadata !DIExpression()), !dbg !11320
  %2 = icmp eq i32 %0, 768, !dbg !11321
  %3 = zext i1 %2 to i32, !dbg !11320
  ret i32 %3, !dbg !11323
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11324 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11326, metadata !DIExpression()), !dbg !11327
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11328
  %3 = load volatile i32, i32* %2, align 4, !dbg !11328
  %4 = and i32 %3, 768, !dbg !11328
  ret i32 %4, !dbg !11329
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11330 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11332, metadata !DIExpression()), !dbg !11333
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11334
  %3 = load volatile i32, i32* %2, align 4, !dbg !11334
  %4 = and i32 %3, 4096, !dbg !11334
  ret i32 %4, !dbg !11335
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11336 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11338, metadata !DIExpression()), !dbg !11339
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11340
  %3 = load volatile i32, i32* %2, align 4, !dbg !11340
  %4 = and i32 %3, 12288, !dbg !11340
  ret i32 %4, !dbg !11341
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11342 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11344, metadata !DIExpression()), !dbg !11345
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11346
  %3 = load volatile i32, i32* %2, align 4, !dbg !11346
  %4 = and i32 %3, 1536, !dbg !11346
  ret i32 %4, !dbg !11347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !11348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11352, metadata !DIExpression()), !dbg !11353
  %2 = icmp eq i32 %0, 2, !dbg !11354
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11354
  %4 = icmp eq i32 %0, 1, !dbg !11354
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11354
  ret i32 %5, !dbg !11355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11360, metadata !DIExpression()), !dbg !11361
  %2 = icmp ult i32 %0, 3, !dbg !11362
  br i1 %2, label %3, label %6, !dbg !11362

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11362
  %5 = load i32, i32* %4, align 4, !dbg !11362
  br label %6, !dbg !11362

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11363
  ret i32 %7, !dbg !11365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11366 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11370, metadata !DIExpression()), !dbg !11372
  call void @llvm.dbg.value(metadata i32 %1, metadata !11371, metadata !DIExpression()), !dbg !11372
  %3 = icmp eq i32 %0, 4, !dbg !11373
  %4 = icmp eq i32 %1, 0, !dbg !11373
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11373
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11373
  ret i32 %6, !dbg !11374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11379, metadata !DIExpression()), !dbg !11380
  %2 = icmp eq i32 %0, 1, !dbg !11381
  %3 = select i1 %2, i32 768, i32 0, !dbg !11380
  ret i32 %3, !dbg !11383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11384 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11386, metadata !DIExpression()), !dbg !11387
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11388
  %3 = load volatile i32, i32* %2, align 4, !dbg !11388
  %4 = and i32 %3, -8193, !dbg !11388
  store volatile i32 %4, i32* %2, align 4, !dbg !11388
  ret void, !dbg !11389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11390 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11394, metadata !DIExpression()), !dbg !11397
  call void @llvm.dbg.value(metadata i32 %1, metadata !11395, metadata !DIExpression()), !dbg !11397
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11398
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11398
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11398
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11396, metadata !DIExpression()), !dbg !11397
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11399
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11399
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11400
  ret void, !dbg !11401
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11402 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11404, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i32 %1, metadata !11405, metadata !DIExpression()), !dbg !11407
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11408
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11408
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11408
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11406, metadata !DIExpression()), !dbg !11407
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11409
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11409
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11410
  ret void, !dbg !11411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11414, metadata !DIExpression()), !dbg !11417
  call void @llvm.dbg.value(metadata i32 %1, metadata !11415, metadata !DIExpression()), !dbg !11417
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11418
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11418
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11418
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11416, metadata !DIExpression()), !dbg !11417
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11419
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11419
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11420
  ret void, !dbg !11421
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11422 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11424, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.value(metadata i32 %1, metadata !11425, metadata !DIExpression()), !dbg !11427
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11428
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11428
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11428
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11426, metadata !DIExpression()), !dbg !11427
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11429
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11429
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11430
  ret void, !dbg !11431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11432 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11434, metadata !DIExpression()), !dbg !11439
  call void @llvm.dbg.value(metadata i32 %1, metadata !11435, metadata !DIExpression()), !dbg !11439
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11440
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11440
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11440
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11436, metadata !DIExpression()), !dbg !11439
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11441
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11441
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11441
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11437, metadata !DIExpression()), !dbg !11439
  %10 = bitcast i32* %3 to i8*, !dbg !11442
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11442
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11443
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11443
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11447
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11447
  %15 = load i8*, i8** %14, align 4, !dbg !11447
  call void @llvm.dbg.value(metadata i32* %3, metadata !11438, metadata !DIExpression(DW_OP_deref)), !dbg !11439
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11448
  %17 = icmp slt i32 %16, 0, !dbg !11449
  br i1 %17, label %23, label %18, !dbg !11450

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11451
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11451
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !11452
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11453
  %22 = load i32, i32* %3, align 4, !dbg !11454
  call void @llvm.dbg.value(metadata i32 %22, metadata !11438, metadata !DIExpression()), !dbg !11439
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !11455
  br label %23, !dbg !11456

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11456
  ret void, !dbg !11456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11457 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11459, metadata !DIExpression()), !dbg !11460
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11461
  %3 = load volatile i32, i32* %2, align 4, !dbg !11461
  %4 = or i32 %3, 8192, !dbg !11461
  store volatile i32 %4, i32* %2, align 4, !dbg !11461
  ret void, !dbg !11462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11463 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11465, metadata !DIExpression()), !dbg !11469
  call void @llvm.dbg.value(metadata i8* %1, metadata !11466, metadata !DIExpression()), !dbg !11469
  call void @llvm.dbg.value(metadata i32* %2, metadata !11467, metadata !DIExpression()), !dbg !11469
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11470
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11470
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11470
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11468, metadata !DIExpression()), !dbg !11469
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11471
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11471
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11473
  br i1 %9, label %12, label %10, !dbg !11474

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11475
  br label %12, !dbg !11476

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11469
  ret i32 %13, !dbg !11477
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11478 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11482, metadata !DIExpression()), !dbg !11484
  call void @llvm.dbg.value(metadata i32 0, metadata !11483, metadata !DIExpression()), !dbg !11484
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11485
  %3 = load volatile i32, i32* %2, align 4, !dbg !11485
  %4 = and i32 %3, -32769, !dbg !11485
  store volatile i32 %4, i32* %2, align 4, !dbg !11485
  ret void, !dbg !11486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11487 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11491, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata i32 %1, metadata !11492, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata i32 0, metadata !11493, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata i32 %2, metadata !11494, metadata !DIExpression()), !dbg !11495
  %4 = zext i32 %1 to i64, !dbg !11496
  %5 = mul nuw nsw i64 %4, 25, !dbg !11496
  %6 = zext i32 %2 to i64, !dbg !11496
  %7 = shl nuw nsw i64 %6, 2, !dbg !11496
  %8 = udiv i64 %5, %7, !dbg !11496
  %9 = trunc i64 %8 to i32, !dbg !11496
  %10 = udiv i32 %9, 100, !dbg !11496
  %11 = shl nuw nsw i32 %10, 4, !dbg !11496
  %12 = mul i32 %10, -100, !dbg !11496
  %13 = add i32 %12, %9, !dbg !11496
  %14 = shl i32 %13, 4, !dbg !11496
  %15 = add i32 %14, 50, !dbg !11496
  %16 = udiv i32 %15, 100, !dbg !11496
  %17 = and i32 %16, 240, !dbg !11496
  %18 = add nuw nsw i32 %17, %11, !dbg !11496
  %19 = and i32 %16, 15, !dbg !11496
  %20 = and i32 %18, 65520, !dbg !11499
  %21 = or i32 %20, %19, !dbg !11499
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11500
  store volatile i32 %21, i32* %22, align 4, !dbg !11501
  ret void, !dbg !11502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11503 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11505, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i32 %1, metadata !11506, metadata !DIExpression()), !dbg !11507
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11508
  %4 = load volatile i32, i32* %3, align 4, !dbg !11508
  %5 = and i32 %4, -769, !dbg !11508
  %6 = or i32 %5, %1, !dbg !11508
  store volatile i32 %6, i32* %3, align 4, !dbg !11508
  ret void, !dbg !11509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11510 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11512, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.value(metadata i32 %1, metadata !11513, metadata !DIExpression()), !dbg !11514
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11515
  %4 = load volatile i32, i32* %3, align 4, !dbg !11515
  %5 = and i32 %4, -4097, !dbg !11515
  %6 = or i32 %5, %1, !dbg !11515
  store volatile i32 %6, i32* %3, align 4, !dbg !11515
  ret void, !dbg !11516
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11517 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11519, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata i32 %1, metadata !11520, metadata !DIExpression()), !dbg !11521
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11522
  %4 = load volatile i32, i32* %3, align 4, !dbg !11522
  %5 = and i32 %4, -12289, !dbg !11522
  %6 = or i32 %5, %1, !dbg !11522
  store volatile i32 %6, i32* %3, align 4, !dbg !11522
  ret void, !dbg !11523
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11524 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11526, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i32 %1, metadata !11527, metadata !DIExpression()), !dbg !11528
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11529
  %4 = load volatile i32, i32* %3, align 4, !dbg !11529
  %5 = and i32 %4, -1537, !dbg !11529
  %6 = or i32 %5, %1, !dbg !11529
  store volatile i32 %6, i32* %3, align 4, !dbg !11529
  ret void, !dbg !11530
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11531 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11533, metadata !DIExpression()), !dbg !11534
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11535
  %3 = load volatile i32, i32* %2, align 4, !dbg !11535
  %4 = and i32 %3, 1, !dbg !11535
  ret i32 %4, !dbg !11536
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11537 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11539, metadata !DIExpression()), !dbg !11540
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11541
  %3 = load volatile i32, i32* %2, align 4, !dbg !11541
  %4 = lshr i32 %3, 1, !dbg !11542
  %5 = and i32 %4, 1, !dbg !11542
  ret i32 %5, !dbg !11543
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11544 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11546, metadata !DIExpression()), !dbg !11547
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11548
  %3 = load volatile i32, i32* %2, align 4, !dbg !11548
  %4 = lshr i32 %3, 8, !dbg !11549
  %5 = and i32 %4, 1, !dbg !11549
  ret i32 %5, !dbg !11550
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11551 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11553, metadata !DIExpression()), !dbg !11554
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11555
  store volatile i32 -257, i32* %2, align 4, !dbg !11555
  ret void, !dbg !11556
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11557 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11559, metadata !DIExpression()), !dbg !11561
  %3 = bitcast i32* %2 to i8*, !dbg !11562
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11562
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11560, metadata !DIExpression()), !dbg !11563
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11564
  %5 = load volatile i32, i32* %4, align 4, !dbg !11564
  store volatile i32 %5, i32* %2, align 4, !dbg !11565
  %6 = load volatile i32, i32* %2, align 4, !dbg !11566
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11567
  %8 = load volatile i32, i32* %7, align 4, !dbg !11567
  store volatile i32 %8, i32* %2, align 4, !dbg !11568
  %9 = load volatile i32, i32* %2, align 4, !dbg !11569
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11570
  ret void, !dbg !11570
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11571 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11573, metadata !DIExpression()), !dbg !11575
  %3 = bitcast i32* %2 to i8*, !dbg !11576
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11576
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11574, metadata !DIExpression()), !dbg !11577
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11578
  %5 = load volatile i32, i32* %4, align 4, !dbg !11578
  store volatile i32 %5, i32* %2, align 4, !dbg !11579
  %6 = load volatile i32, i32* %2, align 4, !dbg !11580
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11581
  %8 = load volatile i32, i32* %7, align 4, !dbg !11581
  store volatile i32 %8, i32* %2, align 4, !dbg !11582
  %9 = load volatile i32, i32* %2, align 4, !dbg !11583
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11584
  ret void, !dbg !11584
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11585 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11587, metadata !DIExpression()), !dbg !11589
  %3 = bitcast i32* %2 to i8*, !dbg !11590
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11590
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11588, metadata !DIExpression()), !dbg !11591
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11592
  %5 = load volatile i32, i32* %4, align 4, !dbg !11592
  store volatile i32 %5, i32* %2, align 4, !dbg !11593
  %6 = load volatile i32, i32* %2, align 4, !dbg !11594
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11595
  %8 = load volatile i32, i32* %7, align 4, !dbg !11595
  store volatile i32 %8, i32* %2, align 4, !dbg !11596
  %9 = load volatile i32, i32* %2, align 4, !dbg !11597
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11598
  ret void, !dbg !11598
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1695 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1697, metadata !DIExpression()), !dbg !11599
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #25, !dbg !11600
  tail call void @arch_irq_enable(i32 noundef 37) #25, !dbg !11602
  ret void, !dbg !11602
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_1(%struct.device* nocapture noundef readnone %0) #1 !dbg !1744 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1746, metadata !DIExpression()), !dbg !11603
  tail call void @z_arm_irq_priority_set(i32 noundef 38, i32 noundef 0, i32 noundef 0) #25, !dbg !11604
  tail call void @arch_irq_enable(i32 noundef 38) #25, !dbg !11606
  ret void, !dbg !11606
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_2(%struct.device* nocapture noundef readnone %0) #1 !dbg !1761 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1763, metadata !DIExpression()), !dbg !11607
  tail call void @z_arm_irq_priority_set(i32 noundef 39, i32 noundef 0, i32 noundef 0) #25, !dbg !11608
  tail call void @arch_irq_enable(i32 noundef 39) #25, !dbg !11610
  ret void, !dbg !11610
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_3(%struct.device* nocapture noundef readnone %0) #1 !dbg !1778 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1780, metadata !DIExpression()), !dbg !11611
  tail call void @z_arm_irq_priority_set(i32 noundef 52, i32 noundef 0, i32 noundef 0) #25, !dbg !11612
  tail call void @arch_irq_enable(i32 noundef 52) #25, !dbg !11614
  ret void, !dbg !11614
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !11615 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11617, metadata !DIExpression()), !dbg !11619
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11620
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11620
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11620
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11618, metadata !DIExpression()), !dbg !11619
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !11621
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !11621
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !11623
  br i1 %7, label %11, label %8, !dbg !11624

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !11625
  %10 = load i8*, i8** %9, align 4, !dbg !11625
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !11627
  br label %11, !dbg !11628

11:                                               ; preds = %8, %1
  ret void, !dbg !11629
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !11630 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11632, metadata !DIExpression()), !dbg !11638
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11639
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11639
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11639
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11633, metadata !DIExpression()), !dbg !11638
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11640
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11640
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11640
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11634, metadata !DIExpression()), !dbg !11638
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11641
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11642
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11642
  %10 = tail call fastcc zeroext i1 @device_is_ready.78(%struct.device* noundef %9) #26, !dbg !11644
  br i1 %10, label %11, label %51, !dbg !11645

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !11646
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11647
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11647
  %15 = load i8*, i8** %14, align 4, !dbg !11647
  %16 = tail call fastcc i32 @clock_control_on.79(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !11648
  call void @llvm.dbg.value(metadata i32 %16, metadata !11637, metadata !DIExpression()), !dbg !11638
  %17 = icmp eq i32 %16, 0, !dbg !11649
  br i1 %17, label %18, label %51, !dbg !11651

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11652
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !11652
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !11653
  call void @llvm.dbg.value(metadata i32 %21, metadata !11637, metadata !DIExpression()), !dbg !11638
  %22 = icmp slt i32 %21, 0, !dbg !11654
  br i1 %22, label %51, label %23, !dbg !11656

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11657
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11657
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !11658
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11659
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !11660
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11661
  %28 = load i32, i32* %27, align 4, !dbg !11661
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !11663

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !11635, metadata !DIExpression()), !dbg !11638
  call void @llvm.dbg.value(metadata i32 4096, metadata !11636, metadata !DIExpression()), !dbg !11638
  br label %31, !dbg !11664

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !11635, metadata !DIExpression()), !dbg !11638
  call void @llvm.dbg.value(metadata i32 0, metadata !11636, metadata !DIExpression()), !dbg !11638
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !11667
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !11667
  call void @llvm.dbg.value(metadata i32 %33, metadata !11636, metadata !DIExpression()), !dbg !11638
  call void @llvm.dbg.value(metadata i32 %32, metadata !11635, metadata !DIExpression()), !dbg !11638
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11668
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !11669
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11670
  %36 = load i8, i8* %35, align 4, !dbg !11670, !range !7249
  %37 = icmp eq i8 %36, 0, !dbg !11670
  br i1 %37, label %39, label %38, !dbg !11672

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11673
  br label %39, !dbg !11675

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11676
  %41 = load i32, i32* %40, align 4, !dbg !11676
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !11677
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11678
  %43 = load i8, i8* %42, align 4, !dbg !11678, !range !7249
  %44 = icmp eq i8 %43, 0, !dbg !11678
  br i1 %44, label %47, label %45, !dbg !11680

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11681
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !11683
  br label %47, !dbg !11684

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11685
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !11686
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !11687
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !11687
  tail call void %50(%struct.device* noundef nonnull %0) #25, !dbg !11688
  br label %51, !dbg !11689

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !11638
  ret i32 %52, !dbg !11690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11691 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11693, metadata !DIExpression()), !dbg !11697
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11698
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11698
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11698
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11694, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11695, metadata !DIExpression()), !dbg !11697
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11699
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11700
  ret void, !dbg !11701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.78(%struct.device* noundef %0) unnamed_addr #1 !dbg !11702 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11706, metadata !DIExpression()), !dbg !11707
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11708, !srcloc !11710
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.80(%struct.device* noundef %0) #26, !dbg !11711
  ret i1 %2, !dbg !11712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.79(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11713 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11715, metadata !DIExpression()), !dbg !11718
  call void @llvm.dbg.value(metadata i8* %1, metadata !11716, metadata !DIExpression()), !dbg !11718
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11719
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11719
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11719
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11717, metadata !DIExpression()), !dbg !11718
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11720
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11720
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11721
  ret i32 %8, !dbg !11722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11723 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11727, metadata !DIExpression()), !dbg !11731
  call void @llvm.dbg.value(metadata i8 0, metadata !11728, metadata !DIExpression()), !dbg !11731
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11732
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11732
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11730, metadata !DIExpression(DW_OP_deref)), !dbg !11731
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11733
  call void @llvm.dbg.value(metadata i32 %4, metadata !11729, metadata !DIExpression()), !dbg !11731
  %5 = icmp slt i32 %4, 0, !dbg !11734
  br i1 %5, label %9, label %6, !dbg !11736

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11737
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11730, metadata !DIExpression()), !dbg !11731
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11738
  br label %9, !dbg !11739

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11731
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11740
  ret i32 %10, !dbg !11740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11741 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11743, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.value(metadata i32 12, metadata !11744, metadata !DIExpression()), !dbg !11747
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11748

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11038, metadata !DIExpression()) #24, !dbg !11749
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11752, !srcloc !11048
  call void @llvm.dbg.value(metadata i32 %4, metadata !11043, metadata !DIExpression()) #24, !dbg !11749
  %5 = or i32 %4, 12, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %5, metadata !11745, metadata !DIExpression()), !dbg !11754
  call void @llvm.dbg.value(metadata i32 %5, metadata !11051, metadata !DIExpression()) #24, !dbg !11755
  call void @llvm.dbg.value(metadata i32* %2, metadata !11056, metadata !DIExpression()) #24, !dbg !11755
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11757, !srcloc !11061
  call void @llvm.dbg.value(metadata i32 %6, metadata !11057, metadata !DIExpression()) #24, !dbg !11755
  %7 = icmp eq i32 %6, 0, !dbg !11748
  br i1 %7, label %8, label %3, !dbg !11753, !llvm.loop !11758

8:                                                ; preds = %3
  ret void, !dbg !11759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11760 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11762, metadata !DIExpression()), !dbg !11766
  call void @llvm.dbg.value(metadata i32 %1, metadata !11763, metadata !DIExpression()), !dbg !11766
  call void @llvm.dbg.value(metadata i32 %2, metadata !11764, metadata !DIExpression()), !dbg !11766
  call void @llvm.dbg.value(metadata i32 0, metadata !11765, metadata !DIExpression()), !dbg !11766
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11767
  %5 = load volatile i32, i32* %4, align 4, !dbg !11767
  %6 = and i32 %5, -5633, !dbg !11767
  %7 = or i32 %2, %1, !dbg !11767
  %8 = or i32 %7, %6, !dbg !11767
  store volatile i32 %8, i32* %4, align 4, !dbg !11767
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11768
  %10 = load volatile i32, i32* %9, align 4, !dbg !11768
  %11 = and i32 %10, -12289, !dbg !11768
  store volatile i32 %11, i32* %9, align 4, !dbg !11768
  ret void, !dbg !11769
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11770 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11772, metadata !DIExpression()), !dbg !11773
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11774
  %3 = load volatile i32, i32* %2, align 4, !dbg !11774
  %4 = or i32 %3, 8, !dbg !11774
  store volatile i32 %4, i32* %2, align 4, !dbg !11774
  ret void, !dbg !11775
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11776 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11780, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 0, metadata !11782, metadata !DIExpression()), !dbg !11783
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11784
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11784
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11785
  %5 = load i8, i8* %4, align 4, !dbg !11785
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11786
  ret i32 %6, !dbg !11787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.80(%struct.device* noundef %0) unnamed_addr #1 !dbg !11788 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11790, metadata !DIExpression()), !dbg !11791
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11792
  ret i1 %2, !dbg !11793
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11794 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11796, metadata !DIExpression()), !dbg !11797
  tail call fastcc void @__NVIC_SetPriority.82() #26, !dbg !11798
  store i32 8399, i32* @last_load, align 4, !dbg !11799
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11800
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11801
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11802
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11803
  %3 = or i32 %2, 7, !dbg !11803
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11803
  ret i32 0, !dbg !11804
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.82() unnamed_addr #15 !dbg !11805 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11807, metadata !DIExpression()), !dbg !11809
  call void @llvm.dbg.value(metadata i32 1, metadata !11808, metadata !DIExpression()), !dbg !11809
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11810
  ret void, !dbg !11813
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11814 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11816, metadata !DIExpression()), !dbg !11818
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11819
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11820
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11821
  %5 = add i32 %4, %3, !dbg !11821
  store i32 %5, i32* @cycle_count, align 4, !dbg !11821
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11822
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11823
  %7 = sub i32 %5, %6, !dbg !11826
  %8 = udiv i32 %7, 8400, !dbg !11827
  call void @llvm.dbg.value(metadata i32 %8, metadata !11817, metadata !DIExpression()), !dbg !11818
  %9 = mul nuw i32 %8, 8400, !dbg !11828
  %10 = add i32 %9, %6, !dbg !11829
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11829
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11830
  tail call void @z_arm_int_exit() #25, !dbg !11831
  ret void, !dbg !11832
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11833 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11838
  call void @llvm.dbg.value(metadata i32 %1, metadata !11835, metadata !DIExpression()), !dbg !11839
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %2, metadata !11836, metadata !DIExpression()), !dbg !11839
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11841
  call void @llvm.dbg.value(metadata i32 %3, metadata !11837, metadata !DIExpression()), !dbg !11839
  %4 = and i32 %2, 65536, !dbg !11842
  %5 = icmp ne i32 %4, 0, !dbg !11842
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11844
  %8 = load i32, i32* @last_load, align 4, !dbg !11839
  br i1 %7, label %9, label %13, !dbg !11844

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11845
  %11 = add i32 %10, %8, !dbg !11845
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11845
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11847
  br label %13, !dbg !11848

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11849
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11850
  %16 = add i32 %14, %15, !dbg !11851
  ret i32 %16, !dbg !11852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11857, metadata !DIExpression()), !dbg !11870
  call void @llvm.dbg.value(metadata i1 %1, metadata !11858, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11870
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11871
  br i1 %4, label %5, label %8, !dbg !11871

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11873
  %7 = and i32 %6, -2, !dbg !11873
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11873
  store i32 -16777216, i32* @last_load, align 4, !dbg !11875
  br label %54, !dbg !11876

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11877
  call void @llvm.dbg.value(metadata i32 %9, metadata !11862, metadata !DIExpression()), !dbg !11870
  br i1 %3, label %18, label %10, !dbg !11878

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11878
  call void @llvm.dbg.value(metadata i32 undef, metadata !11857, metadata !DIExpression()), !dbg !11870
  %12 = icmp slt i32 %11, 1, !dbg !11879
  br i1 %12, label %18, label %13, !dbg !11879

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11879
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11879
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11879
  %17 = add nuw nsw i32 %16, 8399, !dbg !11879
  br label %18, !dbg !11879

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11857, metadata !DIExpression()), !dbg !11870
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11880, metadata !DIExpression()) #24, !dbg !11887
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11889, !srcloc !11895
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %21, metadata !11892, metadata !DIExpression()) #24, !dbg !11896
  call void @llvm.dbg.value(metadata i32 undef, metadata !11893, metadata !DIExpression()) #24, !dbg !11896
  call void @llvm.dbg.value(metadata i32 %21, metadata !11886, metadata !DIExpression()) #24, !dbg !11887
  call void @llvm.dbg.value(metadata i32 %21, metadata !11863, metadata !DIExpression()), !dbg !11870
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11897
  call void @llvm.dbg.value(metadata i32 %22, metadata !11868, metadata !DIExpression()), !dbg !11870
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11898
  call void @llvm.dbg.value(metadata i32 %23, metadata !11860, metadata !DIExpression()), !dbg !11870
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11899
  %25 = add i32 %24, %22, !dbg !11899
  store i32 %25, i32* @cycle_count, align 4, !dbg !11899
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11900
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11901
  %27 = sub i32 %25, %26, !dbg !11902
  call void @llvm.dbg.value(metadata i32 %27, metadata !11869, metadata !DIExpression()), !dbg !11870
  %28 = icmp slt i32 %27, 0, !dbg !11903
  br i1 %28, label %38, label %29, !dbg !11905

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11859, metadata !DIExpression()), !dbg !11870
  call void @llvm.dbg.value(metadata i32 undef, metadata !11859, metadata !DIExpression()), !dbg !11870
  %30 = add nuw i32 %19, %27, !dbg !11906
  %31 = urem i32 %30, 8400, !dbg !11908
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11859, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11870
  %32 = sub nuw nsw i32 %19, %31, !dbg !11909
  call void @llvm.dbg.value(metadata i32 %32, metadata !11859, metadata !DIExpression()), !dbg !11870
  %33 = icmp ugt i32 %32, 1024, !dbg !11910
  br i1 %33, label %34, label %36, !dbg !11910

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11859, metadata !DIExpression()), !dbg !11870
  %35 = icmp ugt i32 %32, 16766400, !dbg !11911
  br i1 %35, label %38, label %36, !dbg !11913

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11914
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11915
  call void @llvm.dbg.value(metadata i32 %40, metadata !11861, metadata !DIExpression()), !dbg !11870
  %41 = add nsw i32 %39, -1, !dbg !11916
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11917
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11918
  %42 = icmp ult i32 %23, %40, !dbg !11919
  br i1 %42, label %43, label %48, !dbg !11921

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11922
  %45 = add i32 %23, %9, !dbg !11924
  %46 = sub i32 %45, %40, !dbg !11925
  %47 = add i32 %46, %44, !dbg !11922
  br label %52, !dbg !11926

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11927
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11929
  %51 = add i32 %49, %50, !dbg !11929
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11930
  store i32 %53, i32* @cycle_count, align 4, !dbg !11930
  call void @llvm.dbg.value(metadata i32 %21, metadata !11931, metadata !DIExpression()) #24, !dbg !11937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11936, metadata !DIExpression()) #24, !dbg !11937
  call void @llvm.dbg.value(metadata i32 %21, metadata !11939, metadata !DIExpression()) #24, !dbg !11942
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !11944, !srcloc !11945
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11947 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11880, metadata !DIExpression()) #24, !dbg !11951
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11953, !srcloc !11895
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11953
  call void @llvm.dbg.value(metadata i32 %2, metadata !11892, metadata !DIExpression()) #24, !dbg !11955
  call void @llvm.dbg.value(metadata i32 undef, metadata !11893, metadata !DIExpression()) #24, !dbg !11955
  call void @llvm.dbg.value(metadata i32 %2, metadata !11886, metadata !DIExpression()) #24, !dbg !11951
  call void @llvm.dbg.value(metadata i32 %2, metadata !11949, metadata !DIExpression()), !dbg !11956
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11957
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11958
  %5 = add i32 %4, %3, !dbg !11959
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11960
  %7 = sub i32 %5, %6, !dbg !11961
  call void @llvm.dbg.value(metadata i32 %7, metadata !11950, metadata !DIExpression()), !dbg !11956
  call void @llvm.dbg.value(metadata i32 %2, metadata !11931, metadata !DIExpression()) #24, !dbg !11962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11936, metadata !DIExpression()) #24, !dbg !11962
  call void @llvm.dbg.value(metadata i32 %2, metadata !11939, metadata !DIExpression()) #24, !dbg !11964
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11966, !srcloc !11945
  %8 = udiv i32 %7, 8400, !dbg !11967
  ret i32 %8, !dbg !11968
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11969 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11880, metadata !DIExpression()) #24, !dbg !11973
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11975, !srcloc !11895
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %2, metadata !11892, metadata !DIExpression()) #24, !dbg !11977
  call void @llvm.dbg.value(metadata i32 undef, metadata !11893, metadata !DIExpression()) #24, !dbg !11977
  call void @llvm.dbg.value(metadata i32 %2, metadata !11886, metadata !DIExpression()) #24, !dbg !11973
  call void @llvm.dbg.value(metadata i32 %2, metadata !11971, metadata !DIExpression()), !dbg !11978
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11979
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11980
  %5 = add i32 %4, %3, !dbg !11981
  call void @llvm.dbg.value(metadata i32 %5, metadata !11972, metadata !DIExpression()), !dbg !11978
  call void @llvm.dbg.value(metadata i32 %2, metadata !11931, metadata !DIExpression()) #24, !dbg !11982
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11936, metadata !DIExpression()) #24, !dbg !11982
  call void @llvm.dbg.value(metadata i32 %2, metadata !11939, metadata !DIExpression()) #24, !dbg !11984
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11986, !srcloc !11945
  ret i32 %5, !dbg !11987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11988 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11989
  %2 = icmp eq i32 %1, -16777216, !dbg !11991
  br i1 %2, label %3, label %6, !dbg !11992

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11993
  %5 = or i32 %4, 1, !dbg !11993
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11993
  br label %6, !dbg !11995

6:                                                ; preds = %3, %0
  ret void, !dbg !11996
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11997 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11998
  %2 = and i32 %1, -2, !dbg !11998
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11998
  ret void, !dbg !11999
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !12000 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12026, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i8 %1, metadata !12027, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12028, metadata !DIExpression()), !dbg !12029
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12030
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12030
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12029
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12031
  %8 = load i8, i8* %6, align 4, !dbg !12032
  %9 = zext i8 %8 to i32, !dbg !12033
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12033
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12034
  br i1 %11, label %18, label %24, !dbg !12035

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12029
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12031
  %14 = load i8, i8* %6, align 4, !dbg !12032
  %15 = zext i8 %14 to i32, !dbg !12033
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12033
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12034
  br i1 %17, label %18, label %24, !dbg !12035, !llvm.loop !12036

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12038
  %21 = load i8, i8* %20, align 1, !dbg !12038
  %22 = icmp eq i8 %21, %1, !dbg !12041
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12042
  br i1 %22, label %24, label %12, !dbg !12043

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12029
  ret i32 %25, !dbg !12044
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12045 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12056, metadata !DIExpression()), !dbg !12072
  call void @llvm.dbg.value(metadata i8 %1, metadata !12057, metadata !DIExpression()), !dbg !12072
  call void @llvm.dbg.value(metadata i32 %2, metadata !12058, metadata !DIExpression()), !dbg !12072
  call void @llvm.dbg.value(metadata i32 0, metadata !12061, metadata !DIExpression()), !dbg !12072
  call void @llvm.dbg.value(metadata i32 0, metadata !12062, metadata !DIExpression()), !dbg !12072
  call void @llvm.dbg.value(metadata i8 0, metadata !12063, metadata !DIExpression()), !dbg !12073
  %4 = icmp eq i8 %1, 0, !dbg !12074
  br i1 %4, label %35, label %5, !dbg !12075

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12074
  br label %9, !dbg !12075

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12063, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 %29, metadata !12061, metadata !DIExpression()), !dbg !12072
  %8 = icmp eq i32 %34, %6, !dbg !12074
  br i1 %8, label %35, label %9, !dbg !12075, !llvm.loop !12076

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12063, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 %11, metadata !12061, metadata !DIExpression()), !dbg !12072
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12078
  %13 = load i32, i32* %12, align 4, !dbg !12078
  call void @llvm.dbg.value(metadata i32 %13, metadata !12060, metadata !DIExpression()), !dbg !12072
  %14 = and i32 %13, 31, !dbg !12079
  %15 = icmp ult i32 %14, 16, !dbg !12080
  br i1 %15, label %16, label %20, !dbg !12081

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12082
  %18 = load i32, i32* %17, align 4, !dbg !12082
  %19 = or i32 %18, 32, !dbg !12084
  call void @llvm.dbg.value(metadata i32 %19, metadata !12061, metadata !DIExpression()), !dbg !12072
  br label %28, !dbg !12085

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12086

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12087
  %23 = load i32, i32* %22, align 4, !dbg !12087
  call void @llvm.dbg.value(metadata i32 %23, metadata !12065, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12088
  %24 = lshr i32 %23, 7, !dbg !12089
  %25 = and i32 %24, 16, !dbg !12089
  %26 = or i32 %25, %23, !dbg !12089
  call void @llvm.dbg.value(metadata i32 %26, metadata !12061, metadata !DIExpression()), !dbg !12072
  br label %28, !dbg !12090

27:                                               ; preds = %20
  br label %28, !dbg !12091

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12072
  call void @llvm.dbg.value(metadata i32 %29, metadata !12061, metadata !DIExpression()), !dbg !12072
  %30 = lshr i32 %13, 5, !dbg !12091
  %31 = and i32 %30, 255, !dbg !12091
  call void @llvm.dbg.value(metadata i32 %31, metadata !12059, metadata !DIExpression()), !dbg !12072
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !12092
  call void @llvm.dbg.value(metadata i32 %32, metadata !12062, metadata !DIExpression()), !dbg !12072
  %33 = icmp slt i32 %32, 0, !dbg !12093
  %34 = add nuw nsw i32 %10, 1, !dbg !12095
  call void @llvm.dbg.value(metadata i32 %34, metadata !12063, metadata !DIExpression()), !dbg !12073
  br i1 %33, label %35, label %7, !dbg !12096

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12097
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12098 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12102, metadata !DIExpression()), !dbg !12106
  call void @llvm.dbg.value(metadata i32 %1, metadata !12103, metadata !DIExpression()), !dbg !12106
  call void @llvm.dbg.value(metadata i32 %2, metadata !12104, metadata !DIExpression()), !dbg !12106
  %4 = icmp ugt i32 %0, 175, !dbg !12107
  br i1 %4, label %16, label %5, !dbg !12109

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12110
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12111
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12111
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12105, metadata !DIExpression()), !dbg !12106
  %9 = add nsw i32 %6, -8, !dbg !12112
  %10 = icmp ult i32 %9, 3, !dbg !12112
  br i1 %10, label %16, label %11, !dbg !12114

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.87(%struct.device* noundef %8) #26, !dbg !12115
  br i1 %12, label %13, label %16, !dbg !12116

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12117
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !12118
  br label %16, !dbg !12119

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12106
  ret i32 %17, !dbg !12120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.87(%struct.device* noundef %0) unnamed_addr #1 !dbg !12121 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12125, metadata !DIExpression()), !dbg !12126
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12127, !srcloc !12129
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.88(%struct.device* noundef %0) #26, !dbg !12130
  ret i1 %2, !dbg !12131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.88(%struct.device* noundef %0) unnamed_addr #1 !dbg !12132 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12134, metadata !DIExpression()), !dbg !12135
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12136
  ret i1 %2, !dbg !12137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !12138 {
  ret void, !dbg !12139
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !12140 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12142, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i32 0, metadata !12143, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i32 2, metadata !12144, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i32 0, metadata !12145, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i32 2, metadata !12146, metadata !DIExpression()), !dbg !12147
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12148
  %2 = and i32 %1, 12, !dbg !12149
  call void @llvm.dbg.value(metadata i32 %2, metadata !12142, metadata !DIExpression()), !dbg !12147
  %3 = icmp eq i32 %2, 8, !dbg !12150
  br i1 %3, label %4, label %18, !dbg !12150

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12151
  call void @llvm.dbg.value(metadata i32 %5, metadata !12145, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12147
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12153
  %7 = and i32 %6, 63, !dbg !12154
  call void @llvm.dbg.value(metadata i32 %7, metadata !12146, metadata !DIExpression()), !dbg !12147
  %8 = udiv i32 16000000, %7, !dbg !12155
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12155
  %10 = lshr i32 %9, 6, !dbg !12155
  %11 = and i32 %10, 511, !dbg !12155
  %12 = mul i32 %11, %8, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %12, metadata !12143, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i32 %12, metadata !12143, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i32 %12, metadata !12143, metadata !DIExpression()), !dbg !12147
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12157
  %14 = lshr i32 %13, 15, !dbg !12158
  %15 = and i32 %14, 6, !dbg !12158
  %16 = add nuw nsw i32 %15, 2, !dbg !12158
  call void @llvm.dbg.value(metadata i32 %16, metadata !12144, metadata !DIExpression()), !dbg !12147
  %17 = udiv i32 %12, %16, !dbg !12159
  br label %18, !dbg !12160

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12161
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12162
  %21 = lshr i32 %20, 4, !dbg !12163
  %22 = and i32 %21, 15, !dbg !12163
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12164
  %24 = load i8, i8* %23, align 1, !dbg !12164
  %25 = zext i8 %24 to i32, !dbg !12164
  call void @llvm.dbg.value(metadata i32 %25, metadata !12142, metadata !DIExpression()), !dbg !12147
  %26 = lshr i32 %19, %25, !dbg !12165
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12165
  ret void, !dbg !12166
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12167 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12209, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 0, metadata !12210, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 0, metadata !12211, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 0, metadata !12212, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 0, metadata !12213, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 0, metadata !12214, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 0, metadata !12215, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 0, metadata !12216, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 0, metadata !12217, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 0, metadata !12218, metadata !DIExpression()), !dbg !12223
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12224
  %4 = load i32, i32* %3, align 4, !dbg !12224
  %5 = and i32 %4, 1, !dbg !12226
  %6 = icmp eq i32 %5, 0, !dbg !12227
  br i1 %6, label %17, label %7, !dbg !12228

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12229
  %9 = and i32 %8, -100663297, !dbg !12229
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12229
  %11 = load i32, i32* %10, align 4, !dbg !12229
  %12 = or i32 %9, %11, !dbg !12229
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12229
  %13 = load i32, i32* %10, align 4, !dbg !12231
  %14 = icmp eq i32 %13, 0, !dbg !12233
  %15 = zext i1 %14 to i32, !dbg !12234
  %16 = load i32, i32* %3, align 4, !dbg !12235
  br label %17, !dbg !12234

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !12235
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !12223
  call void @llvm.dbg.value(metadata i32 %19, metadata !12217, metadata !DIExpression()), !dbg !12223
  %20 = and i32 %18, 2, !dbg !12237
  %21 = icmp eq i32 %20, 0, !dbg !12238
  br i1 %21, label %32, label %22, !dbg !12239

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12240
  %24 = and i32 %23, -402653185, !dbg !12240
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12240
  %26 = load i32, i32* %25, align 4, !dbg !12240
  %27 = or i32 %24, %26, !dbg !12240
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12240
  %28 = load i32, i32* %25, align 4, !dbg !12242
  %29 = icmp eq i32 %28, 0, !dbg !12244
  %30 = select i1 %29, i32 1, i32 %19, !dbg !12245
  %31 = load i32, i32* %3, align 4, !dbg !12246
  br label %32, !dbg !12245

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !12246
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !12223
  call void @llvm.dbg.value(metadata i32 %34, metadata !12217, metadata !DIExpression()), !dbg !12223
  %35 = and i32 %33, 4, !dbg !12248
  %36 = icmp eq i32 %35, 0, !dbg !12249
  br i1 %36, label %49, label %37, !dbg !12250

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12251
  %39 = and i32 %38, -3145729, !dbg !12251
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12251
  %41 = load i32, i32* %40, align 4, !dbg !12251
  %42 = or i32 %39, %41, !dbg !12251
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12251
  %43 = load i32, i32* %40, align 4, !dbg !12253
  %44 = icmp eq i32 %43, 1048576, !dbg !12255
  %45 = select i1 %44, i32 1, i32 %34, !dbg !12256
  call void @llvm.dbg.value(metadata i32 %45, metadata !12217, metadata !DIExpression()), !dbg !12223
  %46 = icmp eq i32 %43, 0, !dbg !12257
  %47 = zext i1 %46 to i32, !dbg !12259
  %48 = load i32, i32* %3, align 4, !dbg !12260
  br label %49, !dbg !12259

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !12260
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !12223
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !12223
  call void @llvm.dbg.value(metadata i32 %52, metadata !12218, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 %51, metadata !12217, metadata !DIExpression()), !dbg !12223
  %53 = and i32 %50, 8, !dbg !12262
  %54 = icmp eq i32 %53, 0, !dbg !12263
  br i1 %54, label %67, label %55, !dbg !12264

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12265
  %57 = and i32 %56, -12582913, !dbg !12265
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12265
  %59 = load i32, i32* %58, align 4, !dbg !12265
  %60 = or i32 %57, %59, !dbg !12265
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12265
  %61 = load i32, i32* %58, align 4, !dbg !12267
  %62 = icmp eq i32 %61, 4194304, !dbg !12269
  %63 = select i1 %62, i32 1, i32 %51, !dbg !12270
  call void @llvm.dbg.value(metadata i32 %63, metadata !12217, metadata !DIExpression()), !dbg !12223
  %64 = icmp eq i32 %61, 0, !dbg !12271
  %65 = select i1 %64, i32 1, i32 %52, !dbg !12273
  %66 = load i32, i32* %3, align 4, !dbg !12274
  br label %67, !dbg !12273

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !12274
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !12223
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !12223
  call void @llvm.dbg.value(metadata i32 %70, metadata !12218, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 %69, metadata !12217, metadata !DIExpression()), !dbg !12223
  %71 = and i32 %68, 32, !dbg !12275
  %72 = icmp eq i32 %71, 0, !dbg !12276
  br i1 %72, label %131, label %73, !dbg !12277

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !12278
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !12278
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12219, metadata !DIExpression()), !dbg !12278
  store volatile i32 0, i32* %2, align 4, !dbg !12278
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12278
  %76 = or i32 %75, 268435456, !dbg !12278
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12278
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12278
  %78 = and i32 %77, 268435456, !dbg !12278
  store volatile i32 %78, i32* %2, align 4, !dbg !12278
  %79 = load volatile i32, i32* %2, align 4, !dbg !12278
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !12279
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12280
  %81 = or i32 %80, 256, !dbg !12280
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12280
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !12281
  call void @llvm.dbg.value(metadata i32 %82, metadata !12210, metadata !DIExpression()), !dbg !12223
  br label %83, !dbg !12282

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12283
  %85 = and i32 %84, 256, !dbg !12284
  %86 = icmp eq i32 %85, 0, !dbg !12285
  br i1 %86, label %87, label %91, !dbg !12282

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #25, !dbg !12286
  %89 = sub i32 %88, %82, !dbg !12289
  %90 = icmp ugt i32 %89, 2, !dbg !12290
  br i1 %90, label %439, label %83, !dbg !12291, !llvm.loop !12292

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12294
  %93 = and i32 %92, 768, !dbg !12295
  call void @llvm.dbg.value(metadata i32 %93, metadata !12211, metadata !DIExpression()), !dbg !12223
  %94 = icmp eq i32 %93, 0, !dbg !12296
  br i1 %94, label %116, label %95, !dbg !12298

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12299
  %97 = load i32, i32* %96, align 4, !dbg !12299
  %98 = and i32 %97, 768, !dbg !12300
  %99 = icmp eq i32 %93, %98, !dbg !12301
  br i1 %99, label %116, label %100, !dbg !12302

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12303
  %102 = and i32 %101, -769, !dbg !12305
  call void @llvm.dbg.value(metadata i32 %102, metadata !12211, metadata !DIExpression()), !dbg !12223
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12306
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12307
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12308
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12309
  %104 = and i32 %103, 1, !dbg !12309
  %105 = icmp eq i32 %104, 0, !dbg !12309
  br i1 %105, label %116, label %106, !dbg !12311

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #25, !dbg !12312
  call void @llvm.dbg.value(metadata i32 %107, metadata !12210, metadata !DIExpression()), !dbg !12223
  br label %108, !dbg !12314

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12315
  %110 = and i32 %109, 2, !dbg !12316
  %111 = icmp eq i32 %110, 0, !dbg !12316
  br i1 %111, label %112, label %116, !dbg !12314

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #25, !dbg !12317
  %114 = sub i32 %113, %107, !dbg !12320
  %115 = icmp ugt i32 %114, 5000, !dbg !12321
  br i1 %115, label %439, label %108, !dbg !12322, !llvm.loop !12323

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12325
  %118 = load i32, i32* %117, align 4, !dbg !12325
  %119 = and i32 %118, 768, !dbg !12325
  %120 = icmp eq i32 %119, 768, !dbg !12325
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12325
  %122 = and i32 %121, -2031617, !dbg !12325
  %123 = and i32 %118, 268434687, !dbg !12325
  %124 = select i1 %120, i32 %123, i32 0, !dbg !12325
  %125 = or i32 %122, %124, !dbg !12325
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12325
  %126 = load i32, i32* %117, align 4, !dbg !12325
  %127 = and i32 %126, 4095, !dbg !12325
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12325
  %129 = or i32 %128, %127, !dbg !12325
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12325
  %130 = load i32, i32* %3, align 4, !dbg !12327
  br label %131, !dbg !12329

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !12327
  %133 = and i32 %132, 16, !dbg !12330
  %134 = icmp eq i32 %133, 0, !dbg !12331
  br i1 %134, label %140, label %135, !dbg !12332

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12333
  %137 = load i8, i8* %136, align 4, !dbg !12333
  %138 = zext i8 %137 to i32, !dbg !12333
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !12333
  %139 = load i32, i32* %3, align 4, !dbg !12335
  br label %140, !dbg !12337

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !12335
  %142 = and i32 %141, 128, !dbg !12338
  %143 = icmp eq i32 %142, 0, !dbg !12339
  br i1 %143, label %151, label %144, !dbg !12340

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12341
  %146 = and i32 %145, -12582913, !dbg !12341
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12341
  %148 = load i32, i32* %147, align 4, !dbg !12341
  %149 = or i32 %146, %148, !dbg !12341
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12341
  %150 = load i32, i32* %3, align 4, !dbg !12343
  br label %151, !dbg !12345

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !12343
  %153 = and i32 %152, 64, !dbg !12346
  %154 = icmp eq i32 %153, 0, !dbg !12347
  br i1 %154, label %162, label %155, !dbg !12348

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12349
  %157 = and i32 %156, -67108865, !dbg !12349
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12349
  %159 = load i32, i32* %158, align 4, !dbg !12349
  %160 = or i32 %157, %159, !dbg !12349
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12349
  %161 = load i32, i32* %3, align 4, !dbg !12351
  br label %162, !dbg !12353

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !12351
  %164 = and i32 %163, 256, !dbg !12354
  %165 = icmp eq i32 %164, 0, !dbg !12355
  br i1 %165, label %176, label %166, !dbg !12356

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12357
  %168 = and i32 %167, -134217729, !dbg !12357
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12357
  %170 = load i32, i32* %169, align 4, !dbg !12357
  %171 = or i32 %168, %170, !dbg !12357
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12357
  %172 = load i32, i32* %169, align 4, !dbg !12359
  %173 = icmp eq i32 %172, 134217728, !dbg !12361
  %174 = select i1 %173, i32 1, i32 %70, !dbg !12362
  %175 = load i32, i32* %3, align 4, !dbg !12363
  br label %176, !dbg !12362

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !12363
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !12223
  call void @llvm.dbg.value(metadata i32 %178, metadata !12218, metadata !DIExpression()), !dbg !12223
  %179 = and i32 %177, 512, !dbg !12365
  %180 = icmp eq i32 %179, 0, !dbg !12366
  br i1 %180, label %188, label %181, !dbg !12367

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12368
  %183 = and i32 %182, -268435457, !dbg !12368
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12368
  %185 = load i32, i32* %184, align 4, !dbg !12368
  %186 = or i32 %183, %185, !dbg !12368
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12368
  %187 = load i32, i32* %3, align 4, !dbg !12370
  br label %188, !dbg !12372

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !12370
  %190 = and i32 %189, 1024, !dbg !12373
  %191 = icmp eq i32 %190, 0, !dbg !12374
  br i1 %191, label %204, label %192, !dbg !12375

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12376
  %194 = and i32 %193, -536870913, !dbg !12376
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12376
  %196 = load i32, i32* %195, align 4, !dbg !12376
  %197 = or i32 %194, %196, !dbg !12376
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12376
  %198 = load i32, i32* %195, align 4, !dbg !12378
  %199 = icmp eq i32 %198, 536870912, !dbg !12380
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !12381
  call void @llvm.dbg.value(metadata i32 %69, metadata !12217, metadata !DIExpression()), !dbg !12223
  br i1 %201, label %209, label %202, !dbg !12381

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !12382
  br label %206, !dbg !12381

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !12217, metadata !DIExpression()), !dbg !12223
  %205 = icmp eq i32 %69, 1, !dbg !12384
  br i1 %205, label %209, label %206, !dbg !12385

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !12382
  %208 = icmp eq i32 %207, 2048, !dbg !12386
  br i1 %208, label %209, label %356, !dbg !12387

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12388
  %210 = tail call i32 @HAL_GetTick() #25, !dbg !12390
  call void @llvm.dbg.value(metadata i32 %210, metadata !12210, metadata !DIExpression()), !dbg !12223
  br label %211, !dbg !12391

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12392
  %213 = and i32 %212, 134217728, !dbg !12392
  %214 = icmp eq i32 %213, 0, !dbg !12392
  br i1 %214, label %219, label %215, !dbg !12391

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !12393
  %217 = sub i32 %216, %210, !dbg !12396
  %218 = icmp ugt i32 %217, 2, !dbg !12397
  br i1 %218, label %439, label %211, !dbg !12398, !llvm.loop !12399

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !12401
  %221 = and i32 %220, 1, !dbg !12403
  %222 = icmp eq i32 %221, 0, !dbg !12404
  br i1 %222, label %227, label %223, !dbg !12405

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12406
  %225 = load i32, i32* %224, align 4, !dbg !12406
  %226 = icmp eq i32 %225, 0, !dbg !12407
  br i1 %226, label %234, label %227, !dbg !12408

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !12409
  %229 = icmp eq i32 %228, 0, !dbg !12410
  br i1 %229, label %252, label %230, !dbg !12411

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12412
  %232 = load i32, i32* %231, align 4, !dbg !12412
  %233 = icmp eq i32 %232, 0, !dbg !12413
  br i1 %233, label %234, label %252, !dbg !12414

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12415
  %236 = and i32 %235, 196608, !dbg !12417
  call void @llvm.dbg.value(metadata i32 %236, metadata !12212, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12223
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12418
  %238 = and i32 %237, 251658240, !dbg !12419
  call void @llvm.dbg.value(metadata i32 %238, metadata !12213, metadata !DIExpression()), !dbg !12223
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12420
  %240 = load i32, i32* %239, align 4, !dbg !12420
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12420
  %242 = load i32, i32* %241, align 4, !dbg !12420
  %243 = shl i32 %242, 6, !dbg !12420
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12420
  %245 = load i32, i32* %244, align 4, !dbg !12420
  %246 = shl i32 %245, 28, !dbg !12420
  %247 = or i32 %240, %236, !dbg !12420
  %248 = or i32 %247, %238, !dbg !12420
  %249 = or i32 %248, %243, !dbg !12420
  %250 = or i32 %249, %246, !dbg !12420
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12420
  %251 = load i32, i32* %3, align 4, !dbg !12421
  br label %252, !dbg !12423

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !12421
  %254 = and i32 %253, 4, !dbg !12424
  %255 = icmp eq i32 %254, 0, !dbg !12425
  br i1 %255, label %260, label %256, !dbg !12426

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12427
  %258 = load i32, i32* %257, align 4, !dbg !12427
  %259 = icmp eq i32 %258, 1048576, !dbg !12428
  br i1 %259, label %267, label %260, !dbg !12429

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !12430
  %262 = icmp eq i32 %261, 0, !dbg !12431
  br i1 %262, label %291, label %263, !dbg !12432

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12433
  %265 = load i32, i32* %264, align 4, !dbg !12433
  %266 = icmp eq i32 %265, 4194304, !dbg !12434
  br i1 %266, label %267, label %291, !dbg !12435

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12436
  %269 = and i32 %268, 196608, !dbg !12438
  call void @llvm.dbg.value(metadata i32 %269, metadata !12212, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12223
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12439
  %271 = and i32 %270, 1879048192, !dbg !12440
  call void @llvm.dbg.value(metadata i32 %271, metadata !12214, metadata !DIExpression()), !dbg !12223
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12441
  %273 = load i32, i32* %272, align 4, !dbg !12441
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12441
  %275 = load i32, i32* %274, align 4, !dbg !12441
  %276 = shl i32 %275, 6, !dbg !12441
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12441
  %278 = load i32, i32* %277, align 4, !dbg !12441
  %279 = shl i32 %278, 24, !dbg !12441
  %280 = or i32 %273, %269, !dbg !12441
  %281 = or i32 %280, %271, !dbg !12441
  %282 = or i32 %281, %276, !dbg !12441
  %283 = or i32 %282, %279, !dbg !12441
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12441
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12442
  %285 = and i32 %284, -32, !dbg !12442
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12442
  %287 = load i32, i32* %286, align 4, !dbg !12442
  %288 = add i32 %287, -1, !dbg !12442
  %289 = or i32 %288, %285, !dbg !12442
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12442
  %290 = load i32, i32* %3, align 4, !dbg !12443
  br label %291, !dbg !12445

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !12443
  %293 = and i32 %292, 1024, !dbg !12446
  %294 = icmp eq i32 %293, 0, !dbg !12447
  br i1 %294, label %321, label %295, !dbg !12448

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12449
  %297 = load i32, i32* %296, align 4, !dbg !12449
  %298 = icmp eq i32 %297, 536870912, !dbg !12450
  br i1 %298, label %299, label %321, !dbg !12451

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12452
  call void @llvm.dbg.value(metadata i32 %300, metadata !12213, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12223
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12454
  %302 = and i32 %301, 1879048192, !dbg !12455
  call void @llvm.dbg.value(metadata i32 %302, metadata !12214, metadata !DIExpression()), !dbg !12223
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12456
  %304 = load i32, i32* %303, align 4, !dbg !12456
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12456
  %306 = load i32, i32* %305, align 4, !dbg !12456
  %307 = shl i32 %306, 6, !dbg !12456
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12456
  %309 = load i32, i32* %308, align 4, !dbg !12456
  %310 = shl i32 %309, 15, !dbg !12456
  %311 = add i32 %310, -65536, !dbg !12456
  %312 = and i32 %311, -65536, !dbg !12456
  %313 = shl i32 %300, 9, !dbg !12456
  %314 = and i32 %313, 100663296, !dbg !12456
  %315 = add nuw nsw i32 %314, 33554432, !dbg !12456
  %316 = or i32 %302, %304, !dbg !12456
  %317 = or i32 %316, %315, !dbg !12456
  %318 = or i32 %317, %307, !dbg !12456
  %319 = or i32 %318, %312, !dbg !12456
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12456
  %320 = load i32, i32* %3, align 4, !dbg !12457
  br label %321, !dbg !12459

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !12457
  %323 = and i32 %322, 2048, !dbg !12460
  %324 = icmp eq i32 %323, 0, !dbg !12461
  br i1 %324, label %346, label %325, !dbg !12462

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12463
  %327 = load i32, i32* %326, align 4, !dbg !12463
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12463
  %329 = load i32, i32* %328, align 4, !dbg !12463
  %330 = shl i32 %329, 6, !dbg !12463
  %331 = or i32 %330, %327, !dbg !12463
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12463
  %333 = load i32, i32* %332, align 4, !dbg !12463
  %334 = shl i32 %333, 15, !dbg !12463
  %335 = add i32 %334, -65536, !dbg !12463
  %336 = and i32 %335, -65536, !dbg !12463
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12463
  %338 = load i32, i32* %337, align 4, !dbg !12463
  %339 = shl i32 %338, 24, !dbg !12463
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12463
  %341 = load i32, i32* %340, align 4, !dbg !12463
  %342 = shl i32 %341, 28, !dbg !12463
  %343 = or i32 %331, %339, !dbg !12463
  %344 = or i32 %343, %336, !dbg !12463
  %345 = or i32 %344, %342, !dbg !12463
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12463
  br label %346, !dbg !12465

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12466
  %347 = tail call i32 @HAL_GetTick() #25, !dbg !12467
  call void @llvm.dbg.value(metadata i32 %347, metadata !12210, metadata !DIExpression()), !dbg !12223
  br label %348, !dbg !12468

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12469
  %350 = and i32 %349, 134217728, !dbg !12470
  %351 = icmp eq i32 %350, 0, !dbg !12470
  br i1 %351, label %352, label %356, !dbg !12468

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #25, !dbg !12471
  %354 = sub i32 %353, %347, !dbg !12474
  %355 = icmp ugt i32 %354, 2, !dbg !12475
  br i1 %355, label %439, label %348, !dbg !12476, !llvm.loop !12477

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !12479
  br i1 %357, label %358, label %439, !dbg !12481

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12482
  %359 = tail call i32 @HAL_GetTick() #25, !dbg !12484
  call void @llvm.dbg.value(metadata i32 %359, metadata !12210, metadata !DIExpression()), !dbg !12223
  br label %360, !dbg !12485

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12486
  %362 = and i32 %361, 536870912, !dbg !12486
  %363 = icmp eq i32 %362, 0, !dbg !12486
  br i1 %363, label %368, label %364, !dbg !12485

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #25, !dbg !12487
  %366 = sub i32 %365, %359, !dbg !12490
  %367 = icmp ugt i32 %366, 2, !dbg !12491
  br i1 %367, label %439, label %360, !dbg !12492, !llvm.loop !12493

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !12495
  %370 = and i32 %369, 4, !dbg !12497
  %371 = icmp eq i32 %370, 0, !dbg !12498
  br i1 %371, label %376, label %372, !dbg !12499

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12500
  %374 = load i32, i32* %373, align 4, !dbg !12500
  %375 = icmp eq i32 %374, 0, !dbg !12501
  br i1 %375, label %383, label %376, !dbg !12502

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !12503
  %378 = icmp eq i32 %377, 0, !dbg !12504
  br i1 %378, label %405, label %379, !dbg !12505

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12506
  %381 = load i32, i32* %380, align 4, !dbg !12506
  %382 = icmp eq i32 %381, 0, !dbg !12507
  br i1 %382, label %383, label %405, !dbg !12508

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12509
  %385 = and i32 %384, 196608, !dbg !12511
  call void @llvm.dbg.value(metadata i32 %385, metadata !12215, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12223
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12512
  %387 = load i32, i32* %386, align 4, !dbg !12512
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12512
  %389 = load i32, i32* %388, align 4, !dbg !12512
  %390 = shl i32 %389, 6, !dbg !12512
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12512
  %392 = load i32, i32* %391, align 4, !dbg !12512
  %393 = shl i32 %392, 24, !dbg !12512
  %394 = or i32 %385, %387, !dbg !12512
  %395 = or i32 %394, %390, !dbg !12512
  %396 = or i32 %395, %393, !dbg !12512
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12512
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12513
  %398 = and i32 %397, -7937, !dbg !12513
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12513
  %400 = load i32, i32* %399, align 4, !dbg !12513
  %401 = shl i32 %400, 8, !dbg !12513
  %402 = add i32 %401, -256, !dbg !12513
  %403 = or i32 %402, %398, !dbg !12513
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12513
  %404 = load i32, i32* %3, align 4, !dbg !12514
  br label %405, !dbg !12516

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !12514
  %407 = and i32 %406, 256, !dbg !12517
  %408 = icmp eq i32 %407, 0, !dbg !12518
  br i1 %408, label %429, label %409, !dbg !12519

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12520
  %411 = load i32, i32* %410, align 4, !dbg !12520
  %412 = icmp eq i32 %411, 134217728, !dbg !12521
  br i1 %412, label %413, label %429, !dbg !12522

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12523
  %415 = and i32 %414, 251658240, !dbg !12525
  call void @llvm.dbg.value(metadata i32 %415, metadata !12216, metadata !DIExpression()), !dbg !12223
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12526
  %417 = load i32, i32* %416, align 4, !dbg !12526
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12526
  %419 = load i32, i32* %418, align 4, !dbg !12526
  %420 = shl i32 %419, 6, !dbg !12526
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12526
  %422 = load i32, i32* %421, align 4, !dbg !12526
  %423 = shl i32 %422, 15, !dbg !12526
  %424 = add i32 %423, -65536, !dbg !12526
  %425 = and i32 %424, -65536, !dbg !12526
  %426 = or i32 %415, %417, !dbg !12526
  %427 = or i32 %426, %420, !dbg !12526
  %428 = or i32 %427, %425, !dbg !12526
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12526
  br label %429, !dbg !12527

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12528
  %430 = tail call i32 @HAL_GetTick() #25, !dbg !12529
  call void @llvm.dbg.value(metadata i32 %430, metadata !12210, metadata !DIExpression()), !dbg !12223
  br label %431, !dbg !12530

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12531
  %433 = and i32 %432, 536870912, !dbg !12532
  %434 = icmp eq i32 %433, 0, !dbg !12532
  br i1 %434, label %435, label %439, !dbg !12530

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #25, !dbg !12533
  %437 = sub i32 %436, %430, !dbg !12536
  %438 = icmp ugt i32 %437, 2, !dbg !12537
  br i1 %438, label %439, label %431, !dbg !12538, !llvm.loop !12539

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !12223
  ret i32 %440, !dbg !12541
}

; Function Attrs: optsize
declare !dbg !12542 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #16 !dbg !12544 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12548, metadata !DIExpression()), !dbg !12550
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12551
  store i32 2047, i32* %2, align 4, !dbg !12552
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12553
  %4 = and i32 %3, 63, !dbg !12554
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12555
  store i32 %4, i32* %5, align 4, !dbg !12556
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12557
  %7 = lshr i32 %6, 6, !dbg !12558
  %8 = and i32 %7, 511, !dbg !12558
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12559
  store i32 %8, i32* %9, align 4, !dbg !12560
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12561
  %11 = lshr i32 %10, 15, !dbg !12562
  %12 = and i32 %11, 6, !dbg !12562
  %13 = add nuw nsw i32 %12, 2, !dbg !12562
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12563
  store i32 %13, i32* %14, align 4, !dbg !12564
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12565
  %16 = lshr i32 %15, 24, !dbg !12566
  %17 = and i32 %16, 15, !dbg !12566
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12567
  store i32 %17, i32* %18, align 4, !dbg !12568
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12569
  %20 = lshr i32 %19, 28, !dbg !12570
  %21 = and i32 %20, 7, !dbg !12570
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12571
  store i32 %21, i32* %22, align 4, !dbg !12572
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12573
  %24 = and i32 %23, 63, !dbg !12574
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12575
  store i32 %24, i32* %25, align 4, !dbg !12576
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12577
  %27 = lshr i32 %26, 6, !dbg !12578
  %28 = and i32 %27, 511, !dbg !12578
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12579
  store i32 %28, i32* %29, align 4, !dbg !12580
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12581
  %31 = lshr i32 %30, 15, !dbg !12582
  %32 = and i32 %31, 6, !dbg !12582
  %33 = add nuw nsw i32 %32, 2, !dbg !12582
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12583
  store i32 %33, i32* %34, align 4, !dbg !12584
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12585
  %36 = lshr i32 %35, 24, !dbg !12586
  %37 = and i32 %36, 15, !dbg !12586
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12587
  store i32 %37, i32* %38, align 4, !dbg !12588
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12589
  %40 = and i32 %39, 31, !dbg !12590
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12591
  store i32 %40, i32* %41, align 4, !dbg !12592
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12593
  %43 = lshr i32 %42, 8, !dbg !12594
  %44 = and i32 %43, 31, !dbg !12594
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12595
  store i32 %44, i32* %45, align 4, !dbg !12596
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12597
  %47 = and i32 %46, 3145728, !dbg !12597
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12598
  store i32 %47, i32* %48, align 4, !dbg !12599
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12600
  %50 = and i32 %49, 12582912, !dbg !12600
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12601
  store i32 %50, i32* %51, align 4, !dbg !12602
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12603
  %53 = and i32 %52, 100663296, !dbg !12603
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12604
  store i32 %53, i32* %54, align 4, !dbg !12605
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12606
  %56 = and i32 %55, 402653184, !dbg !12606
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12607
  store i32 %56, i32* %57, align 4, !dbg !12608
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12609
  %59 = and i32 %58, 2031616, !dbg !12610
  call void @llvm.dbg.value(metadata i32 %59, metadata !12549, metadata !DIExpression()), !dbg !12550
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12611
  %61 = and i32 %60, 768, !dbg !12612
  %62 = or i32 %61, %59, !dbg !12613
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12614
  store i32 %62, i32* %63, align 4, !dbg !12615
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12616
  %65 = and i32 %64, 67108864, !dbg !12616
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12617
  store i32 %65, i32* %66, align 4, !dbg !12618
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12619
  %68 = and i32 %67, 12582912, !dbg !12619
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12620
  store i32 %68, i32* %69, align 4, !dbg !12621
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12622
  %71 = and i32 %70, 134217728, !dbg !12622
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12623
  store i32 %71, i32* %72, align 4, !dbg !12624
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12625
  %74 = and i32 %73, 268435456, !dbg !12625
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12626
  store i32 %74, i32* %75, align 4, !dbg !12627
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12628
  %77 = and i32 %76, 536870912, !dbg !12628
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12629
  store i32 %77, i32* %78, align 4, !dbg !12630
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12631
  %80 = lshr i32 %79, 24, !dbg !12633
  %81 = trunc i32 %80 to i8, !dbg !12633
  %82 = and i8 %81, 1, !dbg !12633
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12634
  store i8 %82, i8* %83, align 4, !dbg !12636
  ret void, !dbg !12637
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #16 !dbg !12638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12640, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 0, metadata !12641, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 0, metadata !12642, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 0, metadata !12643, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 0, metadata !12644, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 0, metadata !12645, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 0, metadata !12646, metadata !DIExpression()), !dbg !12647
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !12648

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12649
  call void @llvm.dbg.value(metadata i32 %3, metadata !12644, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 %3, metadata !12644, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !12647
  %4 = lshr i32 %3, 20, !dbg !12652
  %5 = and i32 %4, 15, !dbg !12652
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !12652

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12653
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12657
  %9 = and i32 %8, 63, !dbg !12657
  %10 = udiv i32 16000000, %9, !dbg !12657
  call void @llvm.dbg.value(metadata i32 %10, metadata !12643, metadata !DIExpression()), !dbg !12647
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12658
  %12 = lshr i32 %11, 24, !dbg !12659
  %13 = and i32 %12, 15, !dbg !12659
  call void @llvm.dbg.value(metadata i32 %13, metadata !12641, metadata !DIExpression()), !dbg !12647
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12660
  %15 = lshr i32 %14, 6, !dbg !12661
  %16 = and i32 %15, 511, !dbg !12661
  %17 = mul i32 %16, %10, !dbg !12662
  %18 = udiv i32 %17, %13, !dbg !12663
  call void @llvm.dbg.value(metadata i32 %18, metadata !12642, metadata !DIExpression()), !dbg !12647
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12664
  %20 = lshr i32 %19, 8, !dbg !12665
  %21 = and i32 %20, 31, !dbg !12665
  %22 = add nuw nsw i32 %21, 1, !dbg !12666
  call void @llvm.dbg.value(metadata i32 %22, metadata !12641, metadata !DIExpression()), !dbg !12647
  %23 = udiv i32 %18, %22, !dbg !12667
  call void @llvm.dbg.value(metadata i32 %23, metadata !12642, metadata !DIExpression()), !dbg !12647
  br label %123, !dbg !12668

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12669
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12672
  %27 = and i32 %26, 63, !dbg !12672
  %28 = udiv i32 16000000, %27, !dbg !12672
  call void @llvm.dbg.value(metadata i32 %28, metadata !12643, metadata !DIExpression()), !dbg !12647
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12673
  %30 = lshr i32 %29, 24, !dbg !12674
  %31 = and i32 %30, 15, !dbg !12674
  call void @llvm.dbg.value(metadata i32 %31, metadata !12641, metadata !DIExpression()), !dbg !12647
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12675
  %33 = lshr i32 %32, 6, !dbg !12676
  %34 = and i32 %33, 511, !dbg !12676
  %35 = mul i32 %34, %28, !dbg !12677
  %36 = udiv i32 %35, %31, !dbg !12678
  call void @llvm.dbg.value(metadata i32 %36, metadata !12642, metadata !DIExpression()), !dbg !12647
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12679
  %38 = and i32 %37, 31, !dbg !12680
  %39 = add nuw nsw i32 %38, 1, !dbg !12681
  call void @llvm.dbg.value(metadata i32 %39, metadata !12641, metadata !DIExpression()), !dbg !12647
  %40 = udiv i32 %36, %39, !dbg !12682
  call void @llvm.dbg.value(metadata i32 %40, metadata !12642, metadata !DIExpression()), !dbg !12647
  br label %123, !dbg !12683

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12684
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12687
  %44 = and i32 %43, 63, !dbg !12687
  %45 = udiv i32 16000000, %44, !dbg !12687
  call void @llvm.dbg.value(metadata i32 %45, metadata !12643, metadata !DIExpression()), !dbg !12647
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12688
  %47 = lshr i32 %46, 28, !dbg !12689
  %48 = and i32 %47, 7, !dbg !12689
  call void @llvm.dbg.value(metadata i32 %48, metadata !12641, metadata !DIExpression()), !dbg !12647
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12690
  %50 = lshr i32 %49, 6, !dbg !12691
  %51 = and i32 %50, 511, !dbg !12691
  %52 = mul i32 %51, %45, !dbg !12692
  %53 = udiv i32 %52, %48, !dbg !12693
  call void @llvm.dbg.value(metadata i32 %53, metadata !12642, metadata !DIExpression()), !dbg !12647
  br label %123, !dbg !12694

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !12642, metadata !DIExpression()), !dbg !12647
  br label %123, !dbg !12695

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12697
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12642, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12642, metadata !DIExpression()), !dbg !12647
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12700
  call void @llvm.dbg.value(metadata i32 %58, metadata !12645, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !12647
  %59 = lshr i32 %58, 25, !dbg !12702
  %60 = and i32 %59, 3, !dbg !12702
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !12702

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12703
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12707
  %64 = and i32 %63, 63, !dbg !12707
  %65 = udiv i32 16000000, %64, !dbg !12707
  call void @llvm.dbg.value(metadata i32 %65, metadata !12643, metadata !DIExpression()), !dbg !12647
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12708
  %67 = lshr i32 %66, 6, !dbg !12709
  %68 = and i32 %67, 511, !dbg !12709
  %69 = mul i32 %68, %65, !dbg !12710
  call void @llvm.dbg.value(metadata i32 %69, metadata !12646, metadata !DIExpression()), !dbg !12647
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12711
  %71 = lshr i32 %70, 28, !dbg !12712
  %72 = and i32 %71, 7, !dbg !12712
  %73 = udiv i32 %69, %72, !dbg !12713
  call void @llvm.dbg.value(metadata i32 %73, metadata !12642, metadata !DIExpression()), !dbg !12647
  br label %123, !dbg !12714

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12715
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12718
  %77 = and i32 %76, 63, !dbg !12718
  %78 = udiv i32 16000000, %77, !dbg !12718
  call void @llvm.dbg.value(metadata i32 %78, metadata !12643, metadata !DIExpression()), !dbg !12647
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12719
  %80 = lshr i32 %79, 6, !dbg !12720
  %81 = and i32 %80, 511, !dbg !12720
  %82 = mul i32 %81, %78, !dbg !12721
  call void @llvm.dbg.value(metadata i32 %82, metadata !12646, metadata !DIExpression()), !dbg !12647
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12722
  %84 = lshr i32 %83, 28, !dbg !12723
  %85 = and i32 %84, 7, !dbg !12723
  %86 = udiv i32 %82, %85, !dbg !12724
  call void @llvm.dbg.value(metadata i32 %86, metadata !12642, metadata !DIExpression()), !dbg !12647
  br label %123, !dbg !12725

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12726
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12642, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12642, metadata !DIExpression()), !dbg !12647
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12729
  call void @llvm.dbg.value(metadata i32 %91, metadata !12645, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !12647
  %92 = lshr i32 %91, 27, !dbg !12731
  %93 = and i32 %92, 3, !dbg !12731
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !12731

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12732
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12736
  %97 = and i32 %96, 63, !dbg !12736
  %98 = udiv i32 16000000, %97, !dbg !12736
  call void @llvm.dbg.value(metadata i32 %98, metadata !12643, metadata !DIExpression()), !dbg !12647
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12737
  %100 = lshr i32 %99, 6, !dbg !12738
  %101 = and i32 %100, 511, !dbg !12738
  %102 = mul i32 %101, %98, !dbg !12739
  call void @llvm.dbg.value(metadata i32 %102, metadata !12646, metadata !DIExpression()), !dbg !12647
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12740
  %104 = lshr i32 %103, 28, !dbg !12741
  %105 = and i32 %104, 7, !dbg !12741
  %106 = udiv i32 %102, %105, !dbg !12742
  call void @llvm.dbg.value(metadata i32 %106, metadata !12642, metadata !DIExpression()), !dbg !12647
  br label %123, !dbg !12743

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12744
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12747
  %110 = and i32 %109, 63, !dbg !12747
  %111 = udiv i32 16000000, %110, !dbg !12747
  call void @llvm.dbg.value(metadata i32 %111, metadata !12643, metadata !DIExpression()), !dbg !12647
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12748
  %113 = lshr i32 %112, 6, !dbg !12749
  %114 = and i32 %113, 511, !dbg !12749
  %115 = mul i32 %114, %111, !dbg !12750
  call void @llvm.dbg.value(metadata i32 %115, metadata !12646, metadata !DIExpression()), !dbg !12647
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12751
  %117 = lshr i32 %116, 28, !dbg !12752
  %118 = and i32 %117, 7, !dbg !12752
  %119 = udiv i32 %115, %118, !dbg !12753
  call void @llvm.dbg.value(metadata i32 %119, metadata !12642, metadata !DIExpression()), !dbg !12647
  br label %123, !dbg !12754

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12755
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12642, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12642, metadata !DIExpression()), !dbg !12647
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !12647
  call void @llvm.dbg.value(metadata i32 %124, metadata !12642, metadata !DIExpression()), !dbg !12647
  ret i32 %124, !dbg !12758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #15 !dbg !12759 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !12763, metadata !DIExpression()), !dbg !12764
  %2 = icmp eq i8 %0, 1, !dbg !12765
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12767
  %4 = and i32 %3, -9, !dbg !12768
  %5 = select i1 %2, i32 8, i32 0, !dbg !12768
  %6 = or i32 %4, %5, !dbg !12768
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12767
  ret void, !dbg !12769
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !12770 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !12775, metadata !DIExpression()), !dbg !12777
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12778
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !12779
  call void @llvm.dbg.value(metadata i32 %2, metadata !12776, metadata !DIExpression()), !dbg !12777
  br label %3, !dbg !12780

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12781
  %5 = and i32 %4, 134217728, !dbg !12781
  %6 = icmp eq i32 %5, 0, !dbg !12781
  br i1 %6, label %11, label %7, !dbg !12780

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !12782
  %9 = sub i32 %8, %2, !dbg !12785
  %10 = icmp ugt i32 %9, 2, !dbg !12786
  br i1 %10, label %41, label %3, !dbg !12787, !llvm.loop !12788

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !12790
  %13 = load i32, i32* %12, align 4, !dbg !12790
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !12790
  %15 = load i32, i32* %14, align 4, !dbg !12790
  %16 = shl i32 %15, 6, !dbg !12790
  %17 = or i32 %16, %13, !dbg !12790
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !12790
  %19 = load i32, i32* %18, align 4, !dbg !12790
  %20 = shl i32 %19, 15, !dbg !12790
  %21 = add i32 %20, -65536, !dbg !12790
  %22 = and i32 %21, -65536, !dbg !12790
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !12790
  %24 = load i32, i32* %23, align 4, !dbg !12790
  %25 = shl i32 %24, 24, !dbg !12790
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !12790
  %27 = load i32, i32* %26, align 4, !dbg !12790
  %28 = shl i32 %27, 28, !dbg !12790
  %29 = or i32 %17, %25, !dbg !12790
  %30 = or i32 %29, %22, !dbg !12790
  %31 = or i32 %30, %28, !dbg !12790
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12790
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12791
  %32 = tail call i32 @HAL_GetTick() #25, !dbg !12792
  call void @llvm.dbg.value(metadata i32 %32, metadata !12776, metadata !DIExpression()), !dbg !12777
  br label %33, !dbg !12793

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12794
  %35 = and i32 %34, 134217728, !dbg !12795
  %36 = icmp eq i32 %35, 0, !dbg !12795
  br i1 %36, label %37, label %41, !dbg !12793

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #25, !dbg !12796
  %39 = sub i32 %38, %32, !dbg !12799
  %40 = icmp ugt i32 %39, 2, !dbg !12800
  br i1 %40, label %41, label %33, !dbg !12801, !llvm.loop !12802

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !12777
  ret i32 %42, !dbg !12804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !12805 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12810
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !12811
  call void @llvm.dbg.value(metadata i32 %1, metadata !12809, metadata !DIExpression()), !dbg !12812
  br label %2, !dbg !12813

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12814
  %4 = and i32 %3, 134217728, !dbg !12814
  %5 = icmp eq i32 %4, 0, !dbg !12815
  br i1 %5, label %10, label %6, !dbg !12813

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !12816
  %8 = sub i32 %7, %1, !dbg !12819
  %9 = icmp ugt i32 %8, 2, !dbg !12820
  br i1 %9, label %10, label %2, !dbg !12821, !llvm.loop !12822

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !12812
  ret i32 %11, !dbg !12824
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !12825 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !12830, metadata !DIExpression()), !dbg !12832
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12833
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !12834
  call void @llvm.dbg.value(metadata i32 %2, metadata !12831, metadata !DIExpression()), !dbg !12832
  br label %3, !dbg !12835

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12836
  %5 = and i32 %4, 536870912, !dbg !12836
  %6 = icmp eq i32 %5, 0, !dbg !12836
  br i1 %6, label %11, label %7, !dbg !12835

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !12837
  %9 = sub i32 %8, %2, !dbg !12840
  %10 = icmp ugt i32 %9, 2, !dbg !12841
  br i1 %10, label %37, label %3, !dbg !12842, !llvm.loop !12843

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !12845
  %13 = load i32, i32* %12, align 4, !dbg !12845
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !12845
  %15 = load i32, i32* %14, align 4, !dbg !12845
  %16 = shl i32 %15, 6, !dbg !12845
  %17 = or i32 %16, %13, !dbg !12845
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !12845
  %19 = load i32, i32* %18, align 4, !dbg !12845
  %20 = shl i32 %19, 15, !dbg !12845
  %21 = add i32 %20, -65536, !dbg !12845
  %22 = and i32 %21, -65536, !dbg !12845
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !12845
  %24 = load i32, i32* %23, align 4, !dbg !12845
  %25 = shl i32 %24, 24, !dbg !12845
  %26 = or i32 %17, %25, !dbg !12845
  %27 = or i32 %26, %22, !dbg !12845
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12845
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12846
  %28 = tail call i32 @HAL_GetTick() #25, !dbg !12847
  call void @llvm.dbg.value(metadata i32 %28, metadata !12831, metadata !DIExpression()), !dbg !12832
  br label %29, !dbg !12848

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12849
  %31 = and i32 %30, 536870912, !dbg !12850
  %32 = icmp eq i32 %31, 0, !dbg !12850
  br i1 %32, label %33, label %37, !dbg !12848

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #25, !dbg !12851
  %35 = sub i32 %34, %28, !dbg !12854
  %36 = icmp ugt i32 %35, 2, !dbg !12855
  br i1 %36, label %37, label %29, !dbg !12856, !llvm.loop !12857

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !12832
  ret i32 %38, !dbg !12859
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !12860 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12863
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !12864
  call void @llvm.dbg.value(metadata i32 %1, metadata !12862, metadata !DIExpression()), !dbg !12865
  br label %2, !dbg !12866

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12867
  %4 = and i32 %3, 536870912, !dbg !12867
  %5 = icmp eq i32 %4, 0, !dbg !12867
  br i1 %5, label %10, label %6, !dbg !12866

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !12868
  %8 = sub i32 %7, %1, !dbg !12871
  %9 = icmp ugt i32 %8, 2, !dbg !12872
  br i1 %9, label %10, label %2, !dbg !12873, !llvm.loop !12874

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !12865
  ret i32 %11, !dbg !12876
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #16 !dbg !12877 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12879, metadata !DIExpression()), !dbg !12884
  call void @llvm.dbg.value(metadata i32 0, metadata !12880, metadata !DIExpression()), !dbg !12884
  call void @llvm.dbg.value(metadata i32 0, metadata !12881, metadata !DIExpression()), !dbg !12884
  call void @llvm.dbg.value(metadata i32 0, metadata !12882, metadata !DIExpression()), !dbg !12884
  call void @llvm.dbg.value(metadata i32 0, metadata !12883, metadata !DIExpression()), !dbg !12884
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12885
  %2 = lshr i32 %1, 2, !dbg !12886
  %3 = and i32 %2, 3, !dbg !12886
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !12886

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12887
  %6 = and i32 %5, 63, !dbg !12890
  call void @llvm.dbg.value(metadata i32 %6, metadata !12879, metadata !DIExpression()), !dbg !12884
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12891
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12893
  %9 = lshr i32 %8, 6, !dbg !12893
  %10 = and i32 %9, 511, !dbg !12893
  %11 = zext i32 %10 to i64, !dbg !12893
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12893
  %13 = zext i32 %6 to i64, !dbg !12893
  %14 = udiv i64 %12, %13, !dbg !12893
  %15 = trunc i64 %14 to i32, !dbg !12893
  call void @llvm.dbg.value(metadata i32 %15, metadata !12880, metadata !DIExpression()), !dbg !12884
  call void @llvm.dbg.value(metadata i32 %15, metadata !12880, metadata !DIExpression()), !dbg !12884
  call void @llvm.dbg.value(metadata i32 %15, metadata !12880, metadata !DIExpression()), !dbg !12884
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12894
  %17 = lshr i32 %16, 15, !dbg !12895
  %18 = and i32 %17, 6, !dbg !12895
  %19 = add nuw nsw i32 %18, 2, !dbg !12895
  call void @llvm.dbg.value(metadata i32 %19, metadata !12881, metadata !DIExpression()), !dbg !12884
  %20 = udiv i32 %15, %19, !dbg !12896
  call void @llvm.dbg.value(metadata i32 %20, metadata !12883, metadata !DIExpression()), !dbg !12884
  br label %38, !dbg !12897

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12898
  %23 = and i32 %22, 63, !dbg !12900
  call void @llvm.dbg.value(metadata i32 %23, metadata !12879, metadata !DIExpression()), !dbg !12884
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12901
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12903
  %26 = lshr i32 %25, 6, !dbg !12903
  %27 = and i32 %26, 511, !dbg !12903
  %28 = zext i32 %27 to i64, !dbg !12903
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !12903
  %30 = zext i32 %23 to i64, !dbg !12903
  %31 = udiv i64 %29, %30, !dbg !12903
  %32 = trunc i64 %31 to i32, !dbg !12903
  call void @llvm.dbg.value(metadata i32 %32, metadata !12880, metadata !DIExpression()), !dbg !12884
  call void @llvm.dbg.value(metadata i32 %32, metadata !12880, metadata !DIExpression()), !dbg !12884
  call void @llvm.dbg.value(metadata i32 %32, metadata !12880, metadata !DIExpression()), !dbg !12884
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12904
  %34 = lshr i32 %33, 28, !dbg !12905
  %35 = and i32 %34, 7, !dbg !12905
  call void @llvm.dbg.value(metadata i32 %35, metadata !12882, metadata !DIExpression()), !dbg !12884
  %36 = udiv i32 %32, %35, !dbg !12906
  call void @llvm.dbg.value(metadata i32 %36, metadata !12883, metadata !DIExpression()), !dbg !12884
  br label %38, !dbg !12907

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !12908
  call void @llvm.dbg.value(metadata i32 %39, metadata !12883, metadata !DIExpression()), !dbg !12884
  ret i32 %39, !dbg !12909
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12910 {
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !12913
  call void @llvm.dbg.value(metadata i32 %1, metadata !12912, metadata !DIExpression()), !dbg !12914
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12915
  %3 = or i32 %2, 1, !dbg !12915
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12915
  br label %4, !dbg !12916

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12917
  %6 = and i32 %5, 2, !dbg !12917
  %7 = icmp eq i32 %6, 0, !dbg !12918
  br i1 %7, label %8, label %12, !dbg !12916

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #25, !dbg !12919
  %10 = sub i32 %9, %1, !dbg !12922
  %11 = icmp ugt i32 %10, 2, !dbg !12923
  br i1 %11, label %89, label %4, !dbg !12924, !llvm.loop !12925

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12927
  %14 = or i32 %13, 128, !dbg !12927
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12927
  %15 = tail call i32 @HAL_GetTick() #25, !dbg !12928
  call void @llvm.dbg.value(metadata i32 %15, metadata !12912, metadata !DIExpression()), !dbg !12914
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12929
  br label %16, !dbg !12930

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12931
  %18 = and i32 %17, 12, !dbg !12931
  %19 = icmp eq i32 %18, 0, !dbg !12932
  %20 = tail call i32 @HAL_GetTick() #25, !dbg !12914
  br i1 %19, label %24, label %21, !dbg !12930

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !12933
  %23 = icmp ugt i32 %22, 5000, !dbg !12936
  br i1 %23, label %89, label %16, !dbg !12937, !llvm.loop !12938

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !12912, metadata !DIExpression()), !dbg !12914
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12940
  %26 = and i32 %25, -851969, !dbg !12940
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12940
  br label %27, !dbg !12941

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12942
  %29 = and i32 %28, 131072, !dbg !12942
  %30 = icmp eq i32 %29, 0, !dbg !12943
  %31 = tail call i32 @HAL_GetTick() #25, !dbg !12914
  br i1 %30, label %35, label %32, !dbg !12941

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !12944
  %34 = icmp ugt i32 %33, 100, !dbg !12947
  br i1 %34, label %89, label %27, !dbg !12948, !llvm.loop !12949

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !12912, metadata !DIExpression()), !dbg !12914
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12951
  %37 = and i32 %36, -16777217, !dbg !12951
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12951
  br label %38, !dbg !12952

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12953
  %40 = and i32 %39, 33554432, !dbg !12953
  %41 = icmp eq i32 %40, 0, !dbg !12954
  %42 = tail call i32 @HAL_GetTick() #25, !dbg !12914
  br i1 %41, label %46, label %43, !dbg !12952

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !12955
  %45 = icmp ugt i32 %44, 2, !dbg !12958
  br i1 %45, label %89, label %38, !dbg !12959, !llvm.loop !12960

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !12912, metadata !DIExpression()), !dbg !12914
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12962
  %48 = and i32 %47, -67108865, !dbg !12962
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12962
  br label %49, !dbg !12963

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12964
  %51 = and i32 %50, 134217728, !dbg !12964
  %52 = icmp eq i32 %51, 0, !dbg !12965
  %53 = tail call i32 @HAL_GetTick() #25, !dbg !12914
  br i1 %52, label %57, label %54, !dbg !12963

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !12966
  %56 = icmp ugt i32 %55, 2, !dbg !12969
  br i1 %56, label %89, label %49, !dbg !12970, !llvm.loop !12971

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !12912, metadata !DIExpression()), !dbg !12914
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12973
  %59 = and i32 %58, -268435457, !dbg !12973
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12973
  br label %60, !dbg !12974

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12975
  %62 = and i32 %61, 536870912, !dbg !12975
  %63 = icmp eq i32 %62, 0, !dbg !12976
  br i1 %63, label %68, label %64, !dbg !12974

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #25, !dbg !12977
  %66 = sub i32 %65, %53, !dbg !12980
  %67 = icmp ugt i32 %66, 2, !dbg !12981
  br i1 %67, label %89, label %60, !dbg !12982, !llvm.loop !12983

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12985
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12986
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12987
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12988
  %70 = and i32 %69, -7937, !dbg !12988
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12988
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12989
  %72 = and i32 %71, -8193, !dbg !12989
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12989
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12990
  %74 = and i32 %73, -16385, !dbg !12990
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12990
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12991
  %76 = or i32 %75, 10420224, !dbg !12991
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12991
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12992
  %78 = or i32 %77, 2097152, !dbg !12992
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12992
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12993
  %80 = or i32 %79, 4194304, !dbg !12993
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12993
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12994
  %82 = and i32 %81, -2, !dbg !12994
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12994
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12995
  %84 = or i32 %83, 16777216, !dbg !12995
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12995
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !12996
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !12997
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #25, !dbg !12999
  %87 = icmp ne i32 %86, 0, !dbg !13000
  %88 = zext i1 %87 to i32, !dbg !13001
  br label %89, !dbg !13001

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !12914
  ret i32 %90, !dbg !13002
}

; Function Attrs: optsize
declare !dbg !13003 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !13006 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13032, metadata !DIExpression()), !dbg !13043
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13044
  br i1 %3, label %337, label %4, !dbg !13046

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13047
  %6 = load i32, i32* %5, align 4, !dbg !13047
  %7 = and i32 %6, 1, !dbg !13049
  %8 = icmp eq i32 %7, 0, !dbg !13050
  br i1 %8, label %74, label %9, !dbg !13051

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13052
  %11 = and i32 %10, 12, !dbg !13052
  %12 = icmp eq i32 %11, 4, !dbg !13055
  br i1 %12, label %29, label %13, !dbg !13056

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13057
  %15 = and i32 %14, 12, !dbg !13057
  %16 = icmp eq i32 %15, 8, !dbg !13058
  br i1 %16, label %17, label %21, !dbg !13059

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13060
  %19 = and i32 %18, 4194304, !dbg !13061
  %20 = icmp eq i32 %19, 0, !dbg !13062
  br i1 %20, label %21, label %29, !dbg !13063

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13064
  %23 = and i32 %22, 12, !dbg !13064
  %24 = icmp eq i32 %23, 12, !dbg !13065
  br i1 %24, label %25, label %37, !dbg !13066

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13067
  %27 = and i32 %26, 4194304, !dbg !13068
  %28 = icmp eq i32 %27, 0, !dbg !13069
  br i1 %28, label %37, label %29, !dbg !13070

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13071
  %31 = and i32 %30, 131072, !dbg !13071
  %32 = icmp eq i32 %31, 0, !dbg !13071
  br i1 %32, label %74, label %33, !dbg !13074

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13075
  %35 = load i32, i32* %34, align 4, !dbg !13075
  %36 = icmp eq i32 %35, 0, !dbg !13076
  br i1 %36, label %337, label %74, !dbg !13077

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13078
  %39 = load i32, i32* %38, align 4, !dbg !13078
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !13082

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13083
  %42 = or i32 %41, 65536, !dbg !13083
  br label %53, !dbg !13083

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13085
  %45 = or i32 %44, 262144, !dbg !13085
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13085
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13085
  %47 = or i32 %46, 65536, !dbg !13085
  br label %53, !dbg !13085

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13088
  %50 = and i32 %49, -65537, !dbg !13088
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13088
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13088
  %52 = and i32 %51, -262145, !dbg !13088
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13090
  %55 = load i32, i32* %38, align 4, !dbg !13091
  %56 = icmp eq i32 %55, 0, !dbg !13093
  %57 = tail call i32 @HAL_GetTick() #25, !dbg !13094
  call void @llvm.dbg.value(metadata i32 %57, metadata !13033, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.value(metadata i32 %57, metadata !13033, metadata !DIExpression()), !dbg !13043
  br i1 %56, label %66, label %58, !dbg !13095

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13096
  %60 = and i32 %59, 131072, !dbg !13098
  %61 = icmp eq i32 %60, 0, !dbg !13098
  br i1 %61, label %62, label %74, !dbg !13099

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !13100
  %64 = sub i32 %63, %57, !dbg !13103
  %65 = icmp ugt i32 %64, 100, !dbg !13104
  br i1 %65, label %337, label %58, !dbg !13105, !llvm.loop !13106

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13108
  %68 = and i32 %67, 131072, !dbg !13108
  %69 = icmp eq i32 %68, 0, !dbg !13108
  br i1 %69, label %74, label %70, !dbg !13110

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #25, !dbg !13111
  %72 = sub i32 %71, %57, !dbg !13114
  %73 = icmp ugt i32 %72, 100, !dbg !13115
  br i1 %73, label %337, label %66, !dbg !13116, !llvm.loop !13117

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !13119
  %76 = and i32 %75, 2, !dbg !13121
  %77 = icmp eq i32 %76, 0, !dbg !13122
  br i1 %77, label %137, label %78, !dbg !13123

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13124
  %80 = and i32 %79, 12, !dbg !13124
  %81 = icmp eq i32 %80, 0, !dbg !13127
  br i1 %81, label %98, label %82, !dbg !13128

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13129
  %84 = and i32 %83, 12, !dbg !13129
  %85 = icmp eq i32 %84, 8, !dbg !13130
  br i1 %85, label %86, label %90, !dbg !13131

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13132
  %88 = and i32 %87, 4194304, !dbg !13133
  %89 = icmp eq i32 %88, 0, !dbg !13134
  br i1 %89, label %98, label %90, !dbg !13135

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13136
  %92 = and i32 %91, 12, !dbg !13136
  %93 = icmp eq i32 %92, 12, !dbg !13137
  br i1 %93, label %94, label %106, !dbg !13138

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13139
  %96 = and i32 %95, 4194304, !dbg !13140
  %97 = icmp eq i32 %96, 0, !dbg !13141
  br i1 %97, label %98, label %106, !dbg !13142

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13143
  %100 = and i32 %99, 2, !dbg !13143
  %101 = icmp eq i32 %100, 0, !dbg !13143
  br i1 %101, label %130, label %102, !dbg !13146

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13147
  %104 = load i32, i32* %103, align 4, !dbg !13147
  %105 = icmp eq i32 %104, 1, !dbg !13148
  br i1 %105, label %130, label %337, !dbg !13149

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13150
  %108 = load i32, i32* %107, align 4, !dbg !13150
  %109 = icmp eq i32 %108, 0, !dbg !13153
  br i1 %109, label %120, label %110, !dbg !13154

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13155
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !13157
  call void @llvm.dbg.value(metadata i32 %111, metadata !13033, metadata !DIExpression()), !dbg !13043
  br label %112, !dbg !13158

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13159
  %114 = and i32 %113, 2, !dbg !13160
  %115 = icmp eq i32 %114, 0, !dbg !13160
  br i1 %115, label %116, label %130, !dbg !13158

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #25, !dbg !13161
  %118 = sub i32 %117, %111, !dbg !13164
  %119 = icmp ugt i32 %118, 2, !dbg !13165
  br i1 %119, label %337, label %112, !dbg !13166, !llvm.loop !13167

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13169
  %121 = tail call i32 @HAL_GetTick() #25, !dbg !13171
  call void @llvm.dbg.value(metadata i32 %121, metadata !13033, metadata !DIExpression()), !dbg !13043
  br label %122, !dbg !13172

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13173
  %124 = and i32 %123, 2, !dbg !13173
  %125 = icmp eq i32 %124, 0, !dbg !13173
  br i1 %125, label %137, label %126, !dbg !13172

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #25, !dbg !13174
  %128 = sub i32 %127, %121, !dbg !13177
  %129 = icmp ugt i32 %128, 2, !dbg !13178
  br i1 %129, label %337, label %122, !dbg !13179, !llvm.loop !13180

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13182
  %132 = and i32 %131, -249, !dbg !13182
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13182
  %134 = load i32, i32* %133, align 4, !dbg !13182
  %135 = shl i32 %134, 3, !dbg !13182
  %136 = or i32 %135, %132, !dbg !13182
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13182
  br label %137, !dbg !13183

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !13183
  %139 = and i32 %138, 8, !dbg !13185
  %140 = icmp eq i32 %139, 0, !dbg !13186
  br i1 %140, label %165, label %141, !dbg !13187

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13188
  %143 = load i32, i32* %142, align 4, !dbg !13188
  %144 = icmp eq i32 %143, 0, !dbg !13191
  br i1 %144, label %155, label %145, !dbg !13192

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13193
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !13195
  call void @llvm.dbg.value(metadata i32 %146, metadata !13033, metadata !DIExpression()), !dbg !13043
  br label %147, !dbg !13196

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13197
  %149 = and i32 %148, 2, !dbg !13198
  %150 = icmp eq i32 %149, 0, !dbg !13198
  br i1 %150, label %151, label %165, !dbg !13196

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #25, !dbg !13199
  %153 = sub i32 %152, %146, !dbg !13202
  %154 = icmp ugt i32 %153, 2, !dbg !13203
  br i1 %154, label %337, label %147, !dbg !13204, !llvm.loop !13205

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13207
  %156 = tail call i32 @HAL_GetTick() #25, !dbg !13209
  call void @llvm.dbg.value(metadata i32 %156, metadata !13033, metadata !DIExpression()), !dbg !13043
  br label %157, !dbg !13210

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13211
  %159 = and i32 %158, 2, !dbg !13211
  %160 = icmp eq i32 %159, 0, !dbg !13211
  br i1 %160, label %165, label %161, !dbg !13210

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #25, !dbg !13212
  %163 = sub i32 %162, %156, !dbg !13215
  %164 = icmp ugt i32 %163, 2, !dbg !13216
  br i1 %164, label %337, label %157, !dbg !13217, !llvm.loop !13218

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !13220
  %167 = and i32 %166, 4, !dbg !13221
  %168 = icmp eq i32 %167, 0, !dbg !13222
  br i1 %168, label %237, label %169, !dbg !13223

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !13035, metadata !DIExpression()), !dbg !13224
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13225
  %171 = and i32 %170, 268435456, !dbg !13225
  %172 = icmp eq i32 %171, 0, !dbg !13225
  br i1 %172, label %173, label %180, !dbg !13226

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !13227
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !13227
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13039, metadata !DIExpression()), !dbg !13227
  store volatile i32 0, i32* %2, align 4, !dbg !13227
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13227
  %176 = or i32 %175, 268435456, !dbg !13227
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13227
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13227
  %178 = and i32 %177, 268435456, !dbg !13227
  store volatile i32 %178, i32* %2, align 4, !dbg !13227
  %179 = load volatile i32, i32* %2, align 4, !dbg !13227
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !13228
  call void @llvm.dbg.value(metadata i32 1, metadata !13035, metadata !DIExpression()), !dbg !13224
  br label %180, !dbg !13229

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !13035, metadata !DIExpression()), !dbg !13224
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13230
  %182 = and i32 %181, 256, !dbg !13230
  %183 = icmp eq i32 %182, 0, !dbg !13230
  br i1 %183, label %184, label %196, !dbg !13232

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13233
  %186 = or i32 %185, 256, !dbg !13233
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13233
  %187 = tail call i32 @HAL_GetTick() #25, !dbg !13235
  call void @llvm.dbg.value(metadata i32 %187, metadata !13033, metadata !DIExpression()), !dbg !13043
  br label %188, !dbg !13236

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13237
  %190 = and i32 %189, 256, !dbg !13237
  %191 = icmp eq i32 %190, 0, !dbg !13237
  br i1 %191, label %192, label %196, !dbg !13236

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #25, !dbg !13238
  %194 = sub i32 %193, %187, !dbg !13241
  %195 = icmp ugt i32 %194, 2, !dbg !13242
  br i1 %195, label %337, label %188, !dbg !13243, !llvm.loop !13244

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13246
  %198 = load i32, i32* %197, align 4, !dbg !13246
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !13249

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13250
  %201 = or i32 %200, 1, !dbg !13250
  br label %212, !dbg !13250

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13252
  %204 = or i32 %203, 4, !dbg !13252
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13252
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13252
  %206 = or i32 %205, 1, !dbg !13252
  br label %212, !dbg !13252

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13255
  %209 = and i32 %208, -2, !dbg !13255
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13255
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13255
  %211 = and i32 %210, -5, !dbg !13255
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13257
  %214 = load i32, i32* %197, align 4, !dbg !13258
  %215 = icmp eq i32 %214, 0, !dbg !13260
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !13261
  call void @llvm.dbg.value(metadata i32 %216, metadata !13033, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.value(metadata i32 %216, metadata !13033, metadata !DIExpression()), !dbg !13043
  br i1 %215, label %225, label %217, !dbg !13262

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13263
  %219 = and i32 %218, 2, !dbg !13265
  %220 = icmp eq i32 %219, 0, !dbg !13265
  br i1 %220, label %221, label %233, !dbg !13266

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #25, !dbg !13267
  %223 = sub i32 %222, %216, !dbg !13270
  %224 = icmp ugt i32 %223, 5000, !dbg !13271
  br i1 %224, label %337, label %217, !dbg !13272, !llvm.loop !13273

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13275
  %227 = and i32 %226, 2, !dbg !13275
  %228 = icmp eq i32 %227, 0, !dbg !13275
  br i1 %228, label %233, label %229, !dbg !13277

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !13278
  %231 = sub i32 %230, %216, !dbg !13281
  %232 = icmp ugt i32 %231, 5000, !dbg !13282
  br i1 %232, label %337, label %225, !dbg !13283, !llvm.loop !13284

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !13286

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13287
  %236 = and i32 %235, -268435457, !dbg !13287
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13287
  br label %237, !dbg !13290

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13291
  %239 = load i32, i32* %238, align 4, !dbg !13291
  %240 = icmp eq i32 %239, 0, !dbg !13293
  br i1 %240, label %336, label %241, !dbg !13294

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13295
  %243 = and i32 %242, 12, !dbg !13295
  %244 = icmp eq i32 %243, 8, !dbg !13298
  br i1 %244, label %297, label %245, !dbg !13299

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !13300
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13303
  %247 = tail call i32 @HAL_GetTick() #25, !dbg !13303
  call void @llvm.dbg.value(metadata i32 %247, metadata !13033, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.value(metadata i32 %247, metadata !13033, metadata !DIExpression()), !dbg !13043
  br i1 %246, label %248, label %289, !dbg !13304

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13305
  %250 = and i32 %249, 33554432, !dbg !13305
  %251 = icmp eq i32 %250, 0, !dbg !13305
  br i1 %251, label %256, label %252, !dbg !13307

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #25, !dbg !13308
  %254 = sub i32 %253, %247, !dbg !13311
  %255 = icmp ugt i32 %254, 2, !dbg !13312
  br i1 %255, label %337, label %248, !dbg !13313, !llvm.loop !13314

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13316
  %258 = load i32, i32* %257, align 4, !dbg !13316
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13316
  %260 = load i32, i32* %259, align 4, !dbg !13316
  %261 = or i32 %260, %258, !dbg !13316
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13316
  %263 = load i32, i32* %262, align 4, !dbg !13316
  %264 = shl i32 %263, 6, !dbg !13316
  %265 = or i32 %261, %264, !dbg !13316
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13316
  %267 = load i32, i32* %266, align 4, !dbg !13316
  %268 = shl i32 %267, 15, !dbg !13316
  %269 = add i32 %268, -65536, !dbg !13316
  %270 = and i32 %269, -65536, !dbg !13316
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13316
  %272 = load i32, i32* %271, align 4, !dbg !13316
  %273 = shl i32 %272, 24, !dbg !13316
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13316
  %275 = load i32, i32* %274, align 4, !dbg !13316
  %276 = shl i32 %275, 28, !dbg !13316
  %277 = or i32 %265, %273, !dbg !13316
  %278 = or i32 %277, %270, !dbg !13316
  %279 = or i32 %278, %276, !dbg !13316
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13316
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13317
  %280 = tail call i32 @HAL_GetTick() #25, !dbg !13318
  call void @llvm.dbg.value(metadata i32 %280, metadata !13033, metadata !DIExpression()), !dbg !13043
  br label %281, !dbg !13319

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13320
  %283 = and i32 %282, 33554432, !dbg !13321
  %284 = icmp eq i32 %283, 0, !dbg !13321
  br i1 %284, label %285, label %336, !dbg !13319

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #25, !dbg !13322
  %287 = sub i32 %286, %280, !dbg !13325
  %288 = icmp ugt i32 %287, 2, !dbg !13326
  br i1 %288, label %337, label %281, !dbg !13327, !llvm.loop !13328

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13330
  %291 = and i32 %290, 33554432, !dbg !13330
  %292 = icmp eq i32 %291, 0, !dbg !13330
  br i1 %292, label %336, label %293, !dbg !13332

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #25, !dbg !13333
  %295 = sub i32 %294, %247, !dbg !13336
  %296 = icmp ugt i32 %295, 2, !dbg !13337
  br i1 %296, label %337, label %289, !dbg !13338, !llvm.loop !13339

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !13341
  br i1 %298, label %337, label %299, !dbg !13344

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13345
  call void @llvm.dbg.value(metadata i32 %300, metadata !13034, metadata !DIExpression()), !dbg !13043
  %301 = and i32 %300, 4194304, !dbg !13347
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13349
  %303 = load i32, i32* %302, align 4, !dbg !13349
  %304 = icmp eq i32 %301, %303, !dbg !13350
  br i1 %304, label %305, label %337, !dbg !13351

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !13352
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13353
  %308 = load i32, i32* %307, align 4, !dbg !13353
  %309 = icmp eq i32 %306, %308, !dbg !13354
  br i1 %309, label %310, label %337, !dbg !13355

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !13356
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13357
  %313 = load i32, i32* %312, align 4, !dbg !13357
  %314 = shl i32 %313, 6, !dbg !13358
  %315 = icmp eq i32 %311, %314, !dbg !13359
  br i1 %315, label %316, label %337, !dbg !13360

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !13361
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13362
  %319 = load i32, i32* %318, align 4, !dbg !13362
  %320 = shl i32 %319, 15, !dbg !13363
  %321 = add i32 %320, -65536, !dbg !13363
  %322 = and i32 %321, -65536, !dbg !13363
  %323 = icmp eq i32 %317, %322, !dbg !13364
  br i1 %323, label %324, label %337, !dbg !13365

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !13366
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13367
  %327 = load i32, i32* %326, align 4, !dbg !13367
  %328 = shl i32 %327, 24, !dbg !13368
  %329 = icmp eq i32 %325, %328, !dbg !13369
  br i1 %329, label %330, label %337, !dbg !13370

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !13371
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13372
  %333 = load i32, i32* %332, align 4, !dbg !13372
  %334 = shl i32 %333, 28, !dbg !13373
  %335 = icmp eq i32 %331, %334, !dbg !13374
  br i1 %335, label %336, label %337, !dbg !13375

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !13376

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !13043
  ret i32 %338, !dbg !13377
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #16 !dbg !13378 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13382, metadata !DIExpression()), !dbg !13383
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13384
  store i32 15, i32* %2, align 4, !dbg !13385
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13386
  %4 = and i32 %3, 262144, !dbg !13388
  %5 = icmp eq i32 %4, 0, !dbg !13389
  br i1 %5, label %8, label %6, !dbg !13390

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13391
  store i32 327680, i32* %7, align 4, !dbg !13393
  br label %15, !dbg !13394

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13395
  %10 = and i32 %9, 65536, !dbg !13397
  %11 = icmp eq i32 %10, 0, !dbg !13398
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13399
  br i1 %11, label %14, label %13, !dbg !13400

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13401
  br label %15, !dbg !13403

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13404
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13406
  %17 = and i32 %16, 1, !dbg !13408
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13409
  store i32 %17, i32* %18, align 4, !dbg !13411
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13412
  %20 = lshr i32 %19, 3, !dbg !13413
  %21 = and i32 %20, 31, !dbg !13413
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13414
  store i32 %21, i32* %22, align 4, !dbg !13415
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13416
  %24 = and i32 %23, 4, !dbg !13418
  %25 = icmp eq i32 %24, 0, !dbg !13419
  br i1 %25, label %28, label %26, !dbg !13420

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13421
  store i32 5, i32* %27, align 4, !dbg !13423
  br label %35, !dbg !13424

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13425
  %30 = and i32 %29, 1, !dbg !13427
  %31 = icmp eq i32 %30, 0, !dbg !13428
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13429
  br i1 %31, label %34, label %33, !dbg !13430

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13431
  br label %35, !dbg !13433

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13434
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13436
  %37 = and i32 %36, 1, !dbg !13438
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13439
  store i32 %37, i32* %38, align 4, !dbg !13441
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13442
  %40 = and i32 %39, 16777216, !dbg !13444
  %41 = icmp eq i32 %40, 0, !dbg !13445
  %42 = select i1 %41, i32 1, i32 2, !dbg !13446
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13447
  store i32 %42, i32* %43, align 4, !dbg !13449
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13450
  %45 = and i32 %44, 4194304, !dbg !13451
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13452
  store i32 %45, i32* %46, align 4, !dbg !13453
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13454
  %48 = and i32 %47, 63, !dbg !13455
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13456
  store i32 %48, i32* %49, align 4, !dbg !13457
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13458
  %51 = lshr i32 %50, 6, !dbg !13459
  %52 = and i32 %51, 511, !dbg !13459
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13460
  store i32 %52, i32* %53, align 4, !dbg !13461
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13462
  %55 = shl i32 %54, 1, !dbg !13463
  %56 = and i32 %55, 393216, !dbg !13463
  %57 = add nuw nsw i32 %56, 131072, !dbg !13463
  %58 = lshr exact i32 %57, 16, !dbg !13464
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13465
  store i32 %58, i32* %59, align 4, !dbg !13466
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13467
  %61 = lshr i32 %60, 24, !dbg !13468
  %62 = and i32 %61, 15, !dbg !13468
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13469
  store i32 %62, i32* %63, align 4, !dbg !13470
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13471
  %65 = lshr i32 %64, 28, !dbg !13472
  %66 = and i32 %65, 7, !dbg !13472
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13473
  store i32 %66, i32* %67, align 4, !dbg !13474
  ret void, !dbg !13475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !13476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13479, metadata !DIExpression()), !dbg !13480
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !13481
  ret void, !dbg !13482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !13483 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13486, metadata !DIExpression()), !dbg !13488
  call void @llvm.dbg.value(metadata i32 1000, metadata !13487, metadata !DIExpression()), !dbg !13488
  %2 = udiv i32 %0, 1000, !dbg !13489
  %3 = add nsw i32 %2, -1, !dbg !13490
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13491
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13492
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13493
  ret void, !dbg !13494
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !13495 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13497, metadata !DIExpression()), !dbg !13499
  %3 = bitcast i32* %2 to i8*, !dbg !13500
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13500
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13498, metadata !DIExpression()), !dbg !13501
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13502
  store volatile i32 %4, i32* %2, align 4, !dbg !13501
  %5 = load volatile i32, i32* %2, align 4, !dbg !13503
  %6 = icmp eq i32 %0, -1, !dbg !13504
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13497, metadata !DIExpression()), !dbg !13499
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13499
  call void @llvm.dbg.value(metadata i32 %8, metadata !13497, metadata !DIExpression()), !dbg !13499
  br label %9, !dbg !13506

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13497, metadata !DIExpression()), !dbg !13499
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13507
  call void @llvm.dbg.value(metadata i32 undef, metadata !13497, metadata !DIExpression()), !dbg !13499
  %12 = shl i32 %11, 15, !dbg !13499
  %13 = ashr i32 %12, 31, !dbg !13499
  %14 = add i32 %13, %10, !dbg !13499
  call void @llvm.dbg.value(metadata i32 %14, metadata !13497, metadata !DIExpression()), !dbg !13499
  %15 = icmp eq i32 %14, 0, !dbg !13506
  br i1 %15, label %16, label %9, !dbg !13506

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13510
  ret void, !dbg !13510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !13511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13513, metadata !DIExpression()), !dbg !13514
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13515
  ret void, !dbg !13516
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !13517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13522, metadata !DIExpression()), !dbg !13527
  call void @llvm.dbg.value(metadata i32 0, metadata !13525, metadata !DIExpression()), !dbg !13527
  call void @llvm.dbg.value(metadata i32 0, metadata !13526, metadata !DIExpression()), !dbg !13527
  %2 = icmp eq i32 %0, 0, !dbg !13528
  br i1 %2, label %72, label %3, !dbg !13530

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13531
  %5 = icmp eq i32 %4, 49152, !dbg !13534
  br i1 %5, label %6, label %21, !dbg !13535

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13536
  %8 = select i1 %7, i32 0, i32 5, !dbg !13539
  call void @llvm.dbg.value(metadata i32 %8, metadata !13525, metadata !DIExpression()), !dbg !13527
  %9 = add i32 %0, -120000001, !dbg !13540
  %10 = icmp ult i32 %9, 30000000, !dbg !13540
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13540
  call void @llvm.dbg.value(metadata i32 %11, metadata !13525, metadata !DIExpression()), !dbg !13527
  %12 = icmp ult i32 %9, -30000000, !dbg !13542
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13542
  call void @llvm.dbg.value(metadata i32 %13, metadata !13525, metadata !DIExpression()), !dbg !13527
  %14 = icmp ugt i32 %0, 60000000, !dbg !13544
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13546
  br i1 %16, label %21, label %17, !dbg !13546

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13547
  %19 = and i1 %18, %15, !dbg !13550
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13550
  br label %21, !dbg !13550

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13527
  call void @llvm.dbg.value(metadata i32 %22, metadata !13525, metadata !DIExpression()), !dbg !13527
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13551
  %24 = icmp eq i32 %23, 32768, !dbg !13553
  br i1 %24, label %25, label %45, !dbg !13554

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !13555
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13558
  %29 = select i1 %28, i32 5, i32 %22, !dbg !13558
  call void @llvm.dbg.value(metadata i32 %29, metadata !13525, metadata !DIExpression()), !dbg !13527
  %30 = icmp ugt i32 %0, 12000000, !dbg !13559
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13561
  %33 = select i1 %32, i32 4, i32 %29, !dbg !13561
  call void @llvm.dbg.value(metadata i32 %33, metadata !13525, metadata !DIExpression()), !dbg !13527
  %34 = icmp ugt i32 %0, 90000000, !dbg !13562
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13564
  %37 = select i1 %36, i32 3, i32 %33, !dbg !13564
  call void @llvm.dbg.value(metadata i32 %37, metadata !13525, metadata !DIExpression()), !dbg !13527
  %38 = icmp ugt i32 %0, 60000000, !dbg !13565
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !13567
  br i1 %40, label %45, label %41, !dbg !13567

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !13568
  %43 = select i1 %42, i1 %39, i1 false, !dbg !13571
  %44 = select i1 %43, i32 1, i32 %37, !dbg !13571
  br label %45, !dbg !13571

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !13572
  call void @llvm.dbg.value(metadata i32 %46, metadata !13525, metadata !DIExpression()), !dbg !13527
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13573
  %48 = icmp eq i32 %47, 16384, !dbg !13575
  br i1 %48, label %49, label %61, !dbg !13576

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !13577
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !13580
  %53 = select i1 %52, i32 3, i32 %46, !dbg !13580
  call void @llvm.dbg.value(metadata i32 %53, metadata !13525, metadata !DIExpression()), !dbg !13527
  %54 = icmp ugt i32 %0, 60000000, !dbg !13581
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !13583
  br i1 %56, label %61, label %57, !dbg !13583

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !13584
  %59 = select i1 %58, i1 %55, i1 false, !dbg !13587
  %60 = select i1 %59, i32 1, i32 %53, !dbg !13587
  br label %61, !dbg !13587

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !13572
  call void @llvm.dbg.value(metadata i32 %62, metadata !13525, metadata !DIExpression()), !dbg !13527
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #26, !dbg !13588
  call void @llvm.dbg.value(metadata i32 2, metadata !13523, metadata !DIExpression()), !dbg !13527
  br label %63, !dbg !13589

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !13572
  call void @llvm.dbg.value(metadata i32 %64, metadata !13523, metadata !DIExpression()), !dbg !13527
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %65, metadata !13524, metadata !DIExpression()), !dbg !13527
  %66 = add nsw i32 %64, -1, !dbg !13592
  call void @llvm.dbg.value(metadata i32 %66, metadata !13523, metadata !DIExpression()), !dbg !13527
  %67 = icmp ne i32 %65, %62, !dbg !13593
  %68 = icmp ne i32 %66, 0, !dbg !13594
  %69 = select i1 %67, i1 %68, i1 false, !dbg !13594
  br i1 %69, label %63, label %70, !dbg !13595, !llvm.loop !13596

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !13598
  call void @llvm.dbg.value(metadata i32 %73, metadata !13526, metadata !DIExpression()), !dbg !13527
  ret i32 %73, !dbg !13599
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !13600 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13602
  %2 = and i32 %1, 49152, !dbg !13602
  ret i32 %2, !dbg !13603
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !13604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13606, metadata !DIExpression()), !dbg !13607
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13608
  %3 = and i32 %2, -16, !dbg !13608
  %4 = or i32 %3, %0, !dbg !13608
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13608
  ret void, !dbg !13609
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !13610 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13611
  %2 = and i32 %1, 15, !dbg !13611
  ret i32 %2, !dbg !13612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !13613 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13631, metadata !DIExpression()), !dbg !13635
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13632, metadata !DIExpression()), !dbg !13635
  call void @llvm.dbg.value(metadata i32 0, metadata !13633, metadata !DIExpression()), !dbg !13635
  call void @llvm.dbg.value(metadata i32 0, metadata !13634, metadata !DIExpression()), !dbg !13635
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13636
  %4 = icmp eq i32 %3, 0, !dbg !13638
  br i1 %4, label %5, label %21, !dbg !13639

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !13640
  call void @llvm.dbg.value(metadata i32 %6, metadata !13634, metadata !DIExpression()), !dbg !13635
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.97() #26, !dbg !13642
  %8 = icmp eq i32 %7, 1, !dbg !13644
  br i1 %8, label %13, label %9, !dbg !13645

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.98() #26, !dbg !13646
  br label %10, !dbg !13648

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.97() #26, !dbg !13649
  %12 = icmp eq i32 %11, 1, !dbg !13650
  br i1 %12, label %13, label %10, !dbg !13648, !llvm.loop !13651

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13653
  %15 = load i32, i32* %14, align 4, !dbg !13653
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13654
  %17 = load i32, i32* %16, align 4, !dbg !13654
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13655
  %19 = load i32, i32* %18, align 4, !dbg !13655
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.99(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !13656
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !13657
  call void @llvm.dbg.value(metadata i32 %20, metadata !13633, metadata !DIExpression()), !dbg !13635
  br label %21, !dbg !13658

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13659
  call void @llvm.dbg.value(metadata i32 %22, metadata !13633, metadata !DIExpression()), !dbg !13635
  ret i32 %22, !dbg !13660
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !13661 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13665, metadata !DIExpression()), !dbg !13666
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.101() #26, !dbg !13667
  %2 = icmp ne i32 %1, 0, !dbg !13669
  call void @llvm.dbg.value(metadata i1 %2, metadata !13665, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13666
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #26, !dbg !13670
  %4 = icmp ne i32 %3, 0, !dbg !13672
  call void @llvm.dbg.value(metadata i1 undef, metadata !13665, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13666
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !13673
  %6 = icmp ne i32 %5, 0, !dbg !13675
  %7 = select i1 %6, i1 true, i1 %4, !dbg !13676
  %8 = select i1 %7, i1 true, i1 %2, !dbg !13676
  %9 = zext i1 %8 to i32, !dbg !13676
  call void @llvm.dbg.value(metadata i32 %9, metadata !13665, metadata !DIExpression()), !dbg !13666
  ret i32 %9, !dbg !13677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !13678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13682, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13683, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i32 0, metadata !13684, metadata !DIExpression()), !dbg !13685
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13686
  %4 = load i32, i32* %3, align 4, !dbg !13686
  %5 = and i32 %4, 63, !dbg !13687
  %6 = udiv i32 %0, %5, !dbg !13688
  call void @llvm.dbg.value(metadata i32 %6, metadata !13684, metadata !DIExpression()), !dbg !13685
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13689
  %8 = load i32, i32* %7, align 4, !dbg !13689
  %9 = and i32 %8, 511, !dbg !13690
  %10 = mul i32 %9, %6, !dbg !13691
  call void @llvm.dbg.value(metadata i32 %10, metadata !13684, metadata !DIExpression()), !dbg !13685
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13692
  %12 = load i32, i32* %11, align 4, !dbg !13692
  %13 = lshr i32 %12, 15, !dbg !13693
  %14 = and i32 %13, 131070, !dbg !13693
  %15 = add nuw nsw i32 %14, 2, !dbg !13693
  %16 = udiv i32 %10, %15, !dbg !13694
  call void @llvm.dbg.value(metadata i32 %16, metadata !13684, metadata !DIExpression()), !dbg !13685
  ret i32 %16, !dbg !13695
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.97() unnamed_addr #16 !dbg !13696 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13697
  %2 = lshr i32 %1, 1, !dbg !13698
  %3 = and i32 %2, 1, !dbg !13698
  ret i32 %3, !dbg !13699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.98() unnamed_addr #15 !dbg !13700 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13701
  %2 = or i32 %1, 1, !dbg !13701
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13701
  ret void, !dbg !13702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.99(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !13703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13705, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata i32 %1, metadata !13706, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata i32 %2, metadata !13707, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata i32 %3, metadata !13708, metadata !DIExpression()), !dbg !13709
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13710
  %6 = and i32 %5, -4227072, !dbg !13710
  %7 = or i32 %1, %0, !dbg !13710
  %8 = shl i32 %2, 6, !dbg !13710
  %9 = or i32 %7, %8, !dbg !13710
  %10 = or i32 %9, %6, !dbg !13710
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13710
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13711
  %12 = and i32 %11, -196609, !dbg !13711
  %13 = or i32 %12, %3, !dbg !13711
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13711
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13712
  %15 = and i32 %14, -1879048193, !dbg !13712
  %16 = or i32 %15, %3, !dbg !13712
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13712
  ret void, !dbg !13713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !13714 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13718, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13719, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata i32 0, metadata !13720, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata i32 0, metadata !13721, metadata !DIExpression()), !dbg !13722
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13723
  %4 = load i32, i32* %3, align 4, !dbg !13723
  %5 = lshr i32 %4, 4, !dbg !13723
  %6 = and i32 %5, 15, !dbg !13723
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13723
  %8 = load i8, i8* %7, align 1, !dbg !13723
  %9 = zext i8 %8 to i32, !dbg !13723
  %10 = lshr i32 %0, %9, !dbg !13723
  call void @llvm.dbg.value(metadata i32 %10, metadata !13721, metadata !DIExpression()), !dbg !13722
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13724
  %12 = icmp ult i32 %11, %10, !dbg !13726
  br i1 %12, label %13, label %16, !dbg !13727

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13728
  call void @llvm.dbg.value(metadata i32 %14, metadata !13720, metadata !DIExpression()), !dbg !13722
  %15 = icmp eq i32 %14, 0, !dbg !13730
  br i1 %15, label %16, label %30, !dbg !13732

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.100() #26, !dbg !13733
  br label %17, !dbg !13735

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.101() #26, !dbg !13736
  %19 = icmp eq i32 %18, 1, !dbg !13737
  br i1 %19, label %20, label %17, !dbg !13735, !llvm.loop !13738

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13740
  tail call fastcc void @LL_RCC_SetAHBPrescaler.102(i32 noundef %21) #26, !dbg !13741
  tail call fastcc void @LL_RCC_SetSysClkSource.103() #26, !dbg !13742
  br label %22, !dbg !13743

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.104() #26, !dbg !13744
  %24 = icmp eq i32 %23, 8, !dbg !13745
  br i1 %24, label %25, label %22, !dbg !13743, !llvm.loop !13746

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13748
  %27 = load i32, i32* %26, align 4, !dbg !13748
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.105(i32 noundef %27) #26, !dbg !13749
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13750
  %29 = load i32, i32* %28, align 4, !dbg !13750
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.106(i32 noundef %29) #26, !dbg !13751
  br label %30, !dbg !13752

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13753
  %33 = icmp ugt i32 %32, %10, !dbg !13755
  br i1 %33, label %34, label %36, !dbg !13756

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13757
  call void @llvm.dbg.value(metadata i32 %35, metadata !13720, metadata !DIExpression()), !dbg !13722
  br label %36, !dbg !13759

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13722
  call void @llvm.dbg.value(metadata i32 %37, metadata !13720, metadata !DIExpression()), !dbg !13722
  %38 = icmp eq i32 %37, 0, !dbg !13760
  br i1 %38, label %39, label %40, !dbg !13762

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13763
  br label %40, !dbg !13765

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13766
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.100() unnamed_addr #15 !dbg !13767 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13768
  %2 = or i32 %1, 16777216, !dbg !13768
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13768
  ret void, !dbg !13769
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.101() unnamed_addr #16 !dbg !13770 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13771
  %2 = lshr i32 %1, 25, !dbg !13772
  %3 = and i32 %2, 1, !dbg !13772
  ret i32 %3, !dbg !13773
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.102(i32 noundef %0) unnamed_addr #15 !dbg !13774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13776, metadata !DIExpression()), !dbg !13777
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13778
  %3 = and i32 %2, -241, !dbg !13778
  %4 = or i32 %3, %0, !dbg !13778
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13778
  ret void, !dbg !13779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.103() unnamed_addr #15 !dbg !13780 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13782, metadata !DIExpression()), !dbg !13783
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13784
  %2 = and i32 %1, -4, !dbg !13784
  %3 = or i32 %2, 2, !dbg !13784
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13784
  ret void, !dbg !13785
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.104() unnamed_addr #16 !dbg !13786 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13787
  %2 = and i32 %1, 12, !dbg !13787
  ret i32 %2, !dbg !13788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.105(i32 noundef %0) unnamed_addr #15 !dbg !13789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13791, metadata !DIExpression()), !dbg !13792
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13793
  %3 = and i32 %2, -7169, !dbg !13793
  %4 = or i32 %3, %0, !dbg !13793
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13793
  ret void, !dbg !13794
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.106(i32 noundef %0) unnamed_addr #15 !dbg !13795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13797, metadata !DIExpression()), !dbg !13798
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13799
  %3 = and i32 %2, -57345, !dbg !13799
  %4 = or i32 %3, %0, !dbg !13799
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13799
  ret void, !dbg !13800
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #16 !dbg !13801 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13802
  %2 = lshr i32 %1, 29, !dbg !13803
  %3 = and i32 %2, 1, !dbg !13803
  ret i32 %3, !dbg !13804
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !13805 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13806
  %2 = lshr i32 %1, 27, !dbg !13807
  %3 = and i32 %2, 1, !dbg !13807
  ret i32 %3, !dbg !13808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13813, metadata !DIExpression()), !dbg !13819
  call void @llvm.dbg.value(metadata i32 %1, metadata !13814, metadata !DIExpression()), !dbg !13819
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13815, metadata !DIExpression()), !dbg !13819
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13816, metadata !DIExpression()), !dbg !13819
  call void @llvm.dbg.value(metadata i32 0, metadata !13817, metadata !DIExpression()), !dbg !13819
  call void @llvm.dbg.value(metadata i32 0, metadata !13818, metadata !DIExpression()), !dbg !13819
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13820
  %6 = icmp eq i32 %5, 0, !dbg !13822
  br i1 %6, label %7, label %27, !dbg !13823

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !13824
  call void @llvm.dbg.value(metadata i32 %8, metadata !13818, metadata !DIExpression()), !dbg !13819
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.107() #26, !dbg !13826
  %10 = icmp eq i32 %9, 1, !dbg !13828
  br i1 %10, label %19, label %11, !dbg !13829

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13830
  br i1 %12, label %13, label %14, !dbg !13833

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13834
  br label %15, !dbg !13836

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.108() #26, !dbg !13837
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.109() #26, !dbg !13839
  br label %16, !dbg !13840

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.107() #26, !dbg !13841
  %18 = icmp eq i32 %17, 1, !dbg !13842
  br i1 %18, label %19, label %16, !dbg !13840, !llvm.loop !13843

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13845
  %21 = load i32, i32* %20, align 4, !dbg !13845
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13846
  %23 = load i32, i32* %22, align 4, !dbg !13846
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13847
  %25 = load i32, i32* %24, align 4, !dbg !13847
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.99(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !13848
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13849
  call void @llvm.dbg.value(metadata i32 %26, metadata !13817, metadata !DIExpression()), !dbg !13819
  br label %27, !dbg !13850

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13851
  call void @llvm.dbg.value(metadata i32 %28, metadata !13817, metadata !DIExpression()), !dbg !13819
  ret i32 %28, !dbg !13852
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.107() unnamed_addr #16 !dbg !13853 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13854
  %2 = lshr i32 %1, 17, !dbg !13855
  %3 = and i32 %2, 1, !dbg !13855
  ret i32 %3, !dbg !13856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13857 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13858
  %2 = or i32 %1, 262144, !dbg !13858
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13858
  ret void, !dbg !13859
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.108() unnamed_addr #15 !dbg !13860 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13861
  %2 = and i32 %1, -262145, !dbg !13861
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13861
  ret void, !dbg !13862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.109() unnamed_addr #15 !dbg !13863 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13864
  %2 = or i32 %1, 65536, !dbg !13864
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13864
  ret void, !dbg !13865
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13866 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13869, metadata !DIExpression()), !dbg !13885
  call void @llvm.dbg.value(metadata i32 undef, metadata !13869, metadata !DIExpression()), !dbg !13885
  call void @llvm.dbg.value(metadata i32 undef, metadata !13869, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13885
  ret void, !dbg !13886
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13887 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13891, metadata !DIExpression()), !dbg !13893
  %2 = icmp eq i8* %0, null, !dbg !13894
  br i1 %2, label %29, label %3, !dbg !13896

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13897
  %5 = icmp eq i8 %4, 0, !dbg !13898
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13899
  br i1 %6, label %29, label %8, !dbg !13899

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13892, metadata !DIExpression()), !dbg !13893
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13900

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13892, metadata !DIExpression()), !dbg !13893
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13902
  br i1 %10, label %11, label %15, !dbg !13907

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13908
  %13 = load i8*, i8** %12, align 4, !dbg !13908
  %14 = icmp eq i8* %13, %0, !dbg !13909
  br i1 %14, label %29, label %15, !dbg !13910

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13911
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13892, metadata !DIExpression()), !dbg !13893
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13912
  br i1 %17, label %7, label %8, !dbg !13913, !llvm.loop !13914

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13892, metadata !DIExpression()), !dbg !13893
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13916
  br i1 %20, label %21, label %26, !dbg !13920

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13921
  %23 = load i8*, i8** %22, align 4, !dbg !13921
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13922
  %25 = icmp eq i32 %24, 0, !dbg !13923
  br i1 %25, label %29, label %26, !dbg !13924

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13925
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13892, metadata !DIExpression()), !dbg !13893
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13926
  br i1 %28, label %29, label %18, !dbg !13900, !llvm.loop !13927

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13893
  ret %struct.device* %30, !dbg !13929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !13930 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13934, metadata !DIExpression()), !dbg !13935
  %2 = icmp eq %struct.device* %0, null, !dbg !13936
  br i1 %2, label %14, label %3, !dbg !13938

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13939
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13939
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13940
  %7 = load i8, i8* %6, align 1, !dbg !13940
  %8 = and i8 %7, 1, !dbg !13940
  %9 = icmp eq i8 %8, 0, !dbg !13940
  br i1 %9, label %14, label %10, !dbg !13941

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13942
  %12 = load i8, i8* %11, align 1, !dbg !13942
  %13 = icmp eq i8 %12, 0, !dbg !13943
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13935
  ret i1 %15, !dbg !13944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !13945 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13950, metadata !DIExpression()), !dbg !13951
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13952
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13953
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13954 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13962, metadata !DIExpression()), !dbg !13967
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13963, metadata !DIExpression()), !dbg !13967
  call void @llvm.dbg.value(metadata i8* %2, metadata !13964, metadata !DIExpression()), !dbg !13967
  %5 = bitcast i32* %4 to i8*, !dbg !13968
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13968
  call void @llvm.dbg.value(metadata i32 0, metadata !13965, metadata !DIExpression()), !dbg !13967
  store i32 0, i32* %4, align 4, !dbg !13969
  call void @llvm.dbg.value(metadata i32* %4, metadata !13965, metadata !DIExpression(DW_OP_deref)), !dbg !13967
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13970
  call void @llvm.dbg.value(metadata i16* %6, metadata !13966, metadata !DIExpression()), !dbg !13967
  %7 = load i32, i32* %4, align 4, !dbg !13971
  call void @llvm.dbg.value(metadata i32 %7, metadata !13965, metadata !DIExpression()), !dbg !13967
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13972
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13973
  ret i32 %8, !dbg !13974
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13975 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13979, metadata !DIExpression()), !dbg !13985
  call void @llvm.dbg.value(metadata i32* %1, metadata !13980, metadata !DIExpression()), !dbg !13985
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13986
  %4 = load i16*, i16** %3, align 4, !dbg !13986
  call void @llvm.dbg.value(metadata i16* %4, metadata !13981, metadata !DIExpression()), !dbg !13985
  %5 = icmp eq i16* %4, null, !dbg !13987
  br i1 %5, label %14, label %6, !dbg !13988

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13989
  call void @llvm.dbg.value(metadata i32 %7, metadata !13982, metadata !DIExpression()), !dbg !13989
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13990
  %9 = load i16, i16* %8, align 2, !dbg !13990
  %10 = add i16 %9, -32767, !dbg !13991
  %11 = icmp ult i16 %10, 2, !dbg !13991
  %12 = add i32 %7, 1, !dbg !13992
  call void @llvm.dbg.value(metadata i32 %12, metadata !13982, metadata !DIExpression()), !dbg !13989
  br i1 %11, label %13, label %6, !dbg !13991, !llvm.loop !13994

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13997
  br label %14, !dbg !13998

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14000 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14004, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i32 %1, metadata !14005, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14006, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i8* %3, metadata !14007, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i32 0, metadata !14008, metadata !DIExpression()), !dbg !14016
  %5 = icmp eq i32 %1, 0, !dbg !14017
  br i1 %5, label %16, label %8, !dbg !14018

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14008, metadata !DIExpression()), !dbg !14016
  %7 = icmp eq i32 %15, %1, !dbg !14017
  br i1 %7, label %16, label %8, !dbg !14018, !llvm.loop !14019

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14008, metadata !DIExpression()), !dbg !14016
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14021
  %11 = load i16, i16* %10, align 2, !dbg !14021
  call void @llvm.dbg.value(metadata i16 %11, metadata !14010, metadata !DIExpression()), !dbg !14022
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !14023
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14013, metadata !DIExpression()), !dbg !14022
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !14024
  call void @llvm.dbg.value(metadata i32 %13, metadata !14014, metadata !DIExpression()), !dbg !14022
  %14 = icmp slt i32 %13, 0, !dbg !14025
  %15 = add nuw i32 %9, 1, !dbg !14027
  call void @llvm.dbg.value(metadata i32 %15, metadata !14008, metadata !DIExpression()), !dbg !14016
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !14029 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14033, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14034, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14035, metadata !DIExpression()), !dbg !14036
  %2 = sext i16 %0 to i32, !dbg !14037
  %3 = icmp slt i16 %0, 1, !dbg !14039
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14040
  %6 = add nsw i32 %2, -1, !dbg !14040
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14040
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14040
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14034, metadata !DIExpression()), !dbg !14036
  ret %struct.device* %8, !dbg !14041
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14042 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14044, metadata !DIExpression()), !dbg !14049
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14045, metadata !DIExpression()), !dbg !14049
  call void @llvm.dbg.value(metadata i8* %2, metadata !14046, metadata !DIExpression()), !dbg !14049
  %5 = bitcast i32* %4 to i8*, !dbg !14050
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !14050
  call void @llvm.dbg.value(metadata i32 0, metadata !14047, metadata !DIExpression()), !dbg !14049
  store i32 0, i32* %4, align 4, !dbg !14051
  call void @llvm.dbg.value(metadata i32* %4, metadata !14047, metadata !DIExpression(DW_OP_deref)), !dbg !14049
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14052
  call void @llvm.dbg.value(metadata i16* %6, metadata !14048, metadata !DIExpression()), !dbg !14049
  %7 = load i32, i32* %4, align 4, !dbg !14053
  call void @llvm.dbg.value(metadata i32 %7, metadata !14047, metadata !DIExpression()), !dbg !14049
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14054
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !14055
  ret i32 %8, !dbg !14056
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14057 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14059, metadata !DIExpression()), !dbg !14064
  call void @llvm.dbg.value(metadata i32* %1, metadata !14060, metadata !DIExpression()), !dbg !14064
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14065
  %4 = load i16*, i16** %3, align 4, !dbg !14065
  call void @llvm.dbg.value(metadata i16* %4, metadata !14061, metadata !DIExpression()), !dbg !14064
  call void @llvm.dbg.value(metadata i32 0, metadata !14062, metadata !DIExpression()), !dbg !14064
  call void @llvm.dbg.value(metadata i32 0, metadata !14063, metadata !DIExpression()), !dbg !14064
  %5 = icmp eq i16* %4, null, !dbg !14066
  br i1 %5, label %22, label %6, !dbg !14068

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14062, metadata !DIExpression()), !dbg !14064
  call void @llvm.dbg.value(metadata i16* %8, metadata !14061, metadata !DIExpression()), !dbg !14064
  %9 = load i16, i16* %8, align 2, !dbg !14069
  %10 = icmp eq i16 %9, -32768, !dbg !14073
  call void @llvm.dbg.value(metadata i32 undef, metadata !14062, metadata !DIExpression()), !dbg !14064
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14074
  call void @llvm.dbg.value(metadata i16* %11, metadata !14061, metadata !DIExpression()), !dbg !14064
  %12 = zext i1 %10 to i32, !dbg !14075
  %13 = add i32 %7, %12, !dbg !14075
  call void @llvm.dbg.value(metadata i32 %13, metadata !14062, metadata !DIExpression()), !dbg !14064
  %14 = icmp eq i32 %13, 2, !dbg !14076
  br i1 %14, label %15, label %6, !dbg !14077

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14064
  call void @llvm.dbg.value(metadata i32 %16, metadata !14063, metadata !DIExpression()), !dbg !14064
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14078
  %18 = load i16, i16* %17, align 2, !dbg !14078
  %19 = icmp eq i16 %18, 32767, !dbg !14079
  %20 = add i32 %16, 1, !dbg !14080
  call void @llvm.dbg.value(metadata i32 %20, metadata !14063, metadata !DIExpression()), !dbg !14064
  br i1 %19, label %21, label %15, !dbg !14082, !llvm.loop !14083

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14085
  br label %22, !dbg !14086

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14087
  call void @llvm.dbg.value(metadata i16* %23, metadata !14061, metadata !DIExpression()), !dbg !14064
  ret i16* %23, !dbg !14088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !14089 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14090
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14091
  ret i32* %2, !dbg !14092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !14093 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14241, metadata !DIExpression()), !dbg !14244
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14242, metadata !DIExpression()), !dbg !14244
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14243, metadata !DIExpression()), !dbg !14244
  ret void, !dbg !14245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !14246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14250, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata i32 %1, metadata !14251, metadata !DIExpression()), !dbg !14252
  ret void, !dbg !14253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !14254 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14258, metadata !DIExpression()), !dbg !14260
  call void @llvm.dbg.value(metadata i32 %1, metadata !14259, metadata !DIExpression()), !dbg !14260
  ret void, !dbg !14261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !14262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14266, metadata !DIExpression()), !dbg !14268
  call void @llvm.dbg.value(metadata i8* %1, metadata !14267, metadata !DIExpression()), !dbg !14268
  ret i32 -134, !dbg !14269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !14270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14274, metadata !DIExpression()), !dbg !14276
  call void @llvm.dbg.value(metadata i8* %1, metadata !14275, metadata !DIExpression()), !dbg !14276
  ret i32 -134, !dbg !14277
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !14278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14281, metadata !DIExpression()), !dbg !14282
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14283, !srcloc !14289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14286, metadata !DIExpression()) #24, !dbg !14290
  call void @llvm.dbg.value(metadata i32 undef, metadata !14287, metadata !DIExpression()) #24, !dbg !14290
  br label %3, !dbg !14291

3:                                                ; preds = %3, %1
  br label %3, !dbg !14292, !llvm.loop !14295
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14302, metadata !DIExpression()), !dbg !14304
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14303, metadata !DIExpression()), !dbg !14304
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !14305
  unreachable, !dbg !14305
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !14306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14308, metadata !DIExpression()), !dbg !14309
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !14310
  unreachable, !dbg !14310
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14313, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14314, metadata !DIExpression()), !dbg !14317
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14318, !srcloc !14289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14286, metadata !DIExpression()) #24, !dbg !14320
  call void @llvm.dbg.value(metadata i32 undef, metadata !14287, metadata !DIExpression()) #24, !dbg !14320
  call void @llvm.dbg.value(metadata i32 undef, metadata !14315, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14316, metadata !DIExpression()), !dbg !14317
  %4 = icmp eq %struct.__esf* %1, null, !dbg !14321
  br i1 %4, label %6, label %5, !dbg !14323

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !14324
  br label %7, !dbg !14325

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !14324
  br label %7, !dbg !14328

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !14318
  call void @llvm.dbg.value(metadata i32 %8, metadata !14286, metadata !DIExpression()) #24, !dbg !14320
  call void @llvm.dbg.value(metadata i32 %8, metadata !14315, metadata !DIExpression()), !dbg !14317
  %9 = tail call fastcc %struct.k_thread* @k_current_get.118() #27, !dbg !14330
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14316, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.value(metadata i32 undef, metadata !14331, metadata !DIExpression()) #24, !dbg !14334
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !14336, !srcloc !14337
  tail call fastcc void @k_thread_abort.119(%struct.k_thread* noundef %9) #26, !dbg !14338
  ret void, !dbg !14341
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.118() unnamed_addr #9 !dbg !14342 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.120() #27, !dbg !14346
  ret %struct.k_thread* %1, !dbg !14347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.119(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14348 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14352, metadata !DIExpression()), !dbg !14353
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14354, !srcloc !14356
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !14357
  ret void, !dbg !14358
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.120() unnamed_addr #9 !dbg !14359 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14360, !srcloc !14362
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !14363
  ret %struct.k_thread* %1, !dbg !14364
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14365 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14369, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.value(metadata i32 %1, metadata !14370, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.value(metadata i32 %2, metadata !14371, metadata !DIExpression()), !dbg !14372
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !14373
  ret void, !dbg !14374
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14375 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14379, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.value(metadata i8* %1, metadata !14380, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.value(metadata i32 %2, metadata !14381, metadata !DIExpression()), !dbg !14382
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !14383
  ret void, !dbg !14384
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14385 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !14386
  ret void, !dbg !14387
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14390, metadata !DIExpression()), !dbg !14391
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !14392
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14393
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14394
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14395
  %4 = trunc i32 %0 to i8, !dbg !14396
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14397
  store i8 %4, i8* %5, align 4, !dbg !14398
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14399
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !14400
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14401
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14402
  store i8* %8, i8** %9, align 4, !dbg !14403
  ret void, !dbg !14404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14407, metadata !DIExpression()), !dbg !14413
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14414
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14408, metadata !DIExpression()), !dbg !14413
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14415
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14409, metadata !DIExpression()), !dbg !14413
  call void @llvm.dbg.value(metadata i8* null, metadata !14412, metadata !DIExpression()), !dbg !14413
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14416
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14417
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !14418
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !14419
  ret void, !dbg !14420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !14421 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14425, metadata !DIExpression()), !dbg !14426
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14427
  ret i8* %2, !dbg !14428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !14429 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14434, metadata !DIExpression()), !dbg !14435
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14436
  %3 = load i8, i8* %2, align 1, !dbg !14437
  %4 = and i8 %3, -5, !dbg !14437
  store i8 %4, i8* %2, align 1, !dbg !14437
  ret void, !dbg !14438
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14439 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !14442
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !14443
  %3 = ptrtoint i8* %2 to i32, !dbg !14452
  %4 = add i32 %3, 2048, !dbg !14453
  call void @llvm.dbg.value(metadata i32 %4, metadata !14447, metadata !DIExpression()) #24, !dbg !14454
  call void @llvm.dbg.value(metadata i32 %4, metadata !14455, metadata !DIExpression()) #24, !dbg !14458
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !14460, !srcloc !14461
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14462
  %6 = or i32 %5, 512, !dbg !14462
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14462
  tail call fastcc void @__NVIC_SetPriority.127(i32 noundef -2, i32 noundef 255) #25, !dbg !14463
  tail call fastcc void @__NVIC_SetPriority.127(i32 noundef -5, i32 noundef 0) #25, !dbg !14466
  tail call fastcc void @__NVIC_SetPriority.127(i32 noundef -12, i32 noundef 0) #25, !dbg !14467
  tail call fastcc void @__NVIC_SetPriority.127(i32 noundef -11, i32 noundef 0) #25, !dbg !14468
  tail call fastcc void @__NVIC_SetPriority.127(i32 noundef -10, i32 noundef 0) #25, !dbg !14469
  tail call fastcc void @__NVIC_SetPriority.127(i32 noundef -4, i32 noundef 0) #25, !dbg !14470
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14471
  %8 = or i32 %7, 458752, !dbg !14471
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14471
  tail call void @z_arm_fault_init() #25, !dbg !14472
  tail call void @z_arm_cpu_idle_init() #25, !dbg !14473
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14474
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14477
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !14478
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !14479
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14480
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !14480
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14441, metadata !DIExpression()), !dbg !14481
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !14482
  call void @z_device_state_init() #25, !dbg !14483
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !14484
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !14485
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !14486
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !14487
  unreachable, !dbg !14487
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2281, metadata !DIExpression()), !dbg !14488
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14489
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14489
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2282, metadata !DIExpression()), !dbg !14488
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2282, metadata !DIExpression()), !dbg !14488
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14490
  br i1 %7, label %8, label %35, !dbg !14491

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2282, metadata !DIExpression()), !dbg !14488
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14492
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14492
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2292, metadata !DIExpression()), !dbg !14493
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14494
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14494
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !14495
  call void @llvm.dbg.value(metadata i32 %14, metadata !2296, metadata !DIExpression()), !dbg !14493
  %15 = icmp eq %struct.device* %11, null, !dbg !14496
  br i1 %15, label %32, label %16, !dbg !14498

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14499
  br i1 %17, label %26, label %18, !dbg !14502

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14503
  call void @llvm.dbg.value(metadata i32 %19, metadata !2296, metadata !DIExpression()), !dbg !14493
  %20 = icmp ult i32 %19, 255, !dbg !14505
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14505
  call void @llvm.dbg.value(metadata i32 %21, metadata !2296, metadata !DIExpression()), !dbg !14493
  %22 = trunc i32 %21 to i8, !dbg !14506
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14507
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14507
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14508
  store i8 %22, i8* %25, align 1, !dbg !14509
  br label %26, !dbg !14510

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14511
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14511
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14512
  %30 = load i8, i8* %29, align 1, !dbg !14513
  %31 = or i8 %30, 1, !dbg !14513
  store i8 %31, i8* %29, align 1, !dbg !14513
  br label %32, !dbg !14514

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14515
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2282, metadata !DIExpression()), !dbg !14488
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14490
  br i1 %34, label %8, label %35, !dbg !14491, !llvm.loop !14516

35:                                               ; preds = %32, %1
  ret void, !dbg !14518
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.127(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !14519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14521, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i32 %1, metadata !14522, metadata !DIExpression()), !dbg !14523
  %3 = trunc i32 %1 to i8, !dbg !14524
  %4 = shl i8 %3, 4, !dbg !14524
  %5 = and i32 %0, 15, !dbg !14527
  %6 = add nsw i32 %5, -4, !dbg !14528
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14529
  store volatile i8 %4, i8* %7, align 1, !dbg !14530
  ret void, !dbg !14531
}

; Function Attrs: optsize
declare !dbg !14532 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !14533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14536, metadata !DIExpression()), !dbg !14537
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14538
  store i8 1, i8* %2, align 1, !dbg !14539
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14540
  store i8 1, i8* %3, align 4, !dbg !14541
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14542
  store i32 0, i32* %4, align 4, !dbg !14543
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14544
  store i32 0, i32* %5, align 4, !dbg !14545
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14546
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14547
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14548
  ret void, !dbg !14549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14550 {
  tail call void @z_sched_init() #25, !dbg !14555
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14556
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.128, i32 0, i32 0)) #25, !dbg !14557
  call void @llvm.dbg.value(metadata i8* %1, metadata !14554, metadata !DIExpression()), !dbg !14558
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !14559
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !14560
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !14561
  ret i8* %1, !dbg !14562
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14563 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14567, metadata !DIExpression()), !dbg !14568
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !14569
  unreachable, !dbg !14570
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14571 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14573, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata i8* %1, metadata !14574, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata i8* %2, metadata !14575, metadata !DIExpression()), !dbg !14576
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14577
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !14578
  tail call void @boot_banner() #25, !dbg !14579
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !14580
  tail call void @z_init_static_threads() #25, !dbg !14581
  tail call void @main() #25, !dbg !14582
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14583
  %5 = and i8 %4, -2, !dbg !14583
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14583
  ret void, !dbg !14584
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !14585 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14595, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i8* %1, metadata !14596, metadata !DIExpression()), !dbg !14597
  ret void, !dbg !14598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !14599 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14601, metadata !DIExpression()), !dbg !14603
  call void @llvm.dbg.value(metadata i8* %1, metadata !14602, metadata !DIExpression()), !dbg !14603
  ret void, !dbg !14604
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14605 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14606, !srcloc !14613
  call void @llvm.dbg.value(metadata i32 %1, metadata !14609, metadata !DIExpression()) #24, !dbg !14614
  %2 = icmp ne i32 %1, 0, !dbg !14615
  ret i1 %2, !dbg !14616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !14617 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14618
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14619
  %3 = load i8, i8* %2, align 4, !dbg !14620
  %4 = or i8 %3, 1, !dbg !14620
  store i8 %4, i8* %2, align 4, !dbg !14620
  ret void, !dbg !14621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !14622 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14623
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14624
  %3 = load i8, i8* %2, align 4, !dbg !14625
  %4 = and i8 %3, -2, !dbg !14625
  store i8 %4, i8* %2, align 4, !dbg !14625
  ret void, !dbg !14626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !14627 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14628
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14629
  %3 = load i8, i8* %2, align 4, !dbg !14629
  %4 = and i8 %3, 1, !dbg !14630
  %5 = icmp ne i8 %4, 0, !dbg !14631
  ret i1 %5, !dbg !14632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !14633 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14637, metadata !DIExpression()), !dbg !14639
  call void @llvm.dbg.value(metadata i8* %1, metadata !14638, metadata !DIExpression()), !dbg !14639
  ret i32 -88, !dbg !14640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !14641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14645, metadata !DIExpression()), !dbg !14646
  ret i8* null, !dbg !14647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !14648 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14652, metadata !DIExpression()), !dbg !14655
  call void @llvm.dbg.value(metadata i8* %1, metadata !14653, metadata !DIExpression()), !dbg !14655
  call void @llvm.dbg.value(metadata i32 %2, metadata !14654, metadata !DIExpression()), !dbg !14655
  ret i32 -88, !dbg !14656
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2305 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2419, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i8* %1, metadata !2420, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i32 %2, metadata !2421, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i32 0, metadata !2422, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i8 undef, metadata !2424, metadata !DIExpression()), !dbg !14657
  %4 = icmp eq i8* %1, null, !dbg !14658
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14660
  br i1 %6, label %46, label %7, !dbg !14660

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14661
  %9 = load i8, i8* %8, align 1, !dbg !14661
  call void @llvm.dbg.value(metadata i8 %9, metadata !2424, metadata !DIExpression()), !dbg !14657
  %10 = add i32 %2, -1, !dbg !14662
  call void @llvm.dbg.value(metadata i32 %10, metadata !2421, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i8 0, metadata !2425, metadata !DIExpression()), !dbg !14663
  call void @llvm.dbg.value(metadata i8 %9, metadata !2424, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i32 0, metadata !2422, metadata !DIExpression()), !dbg !14657
  %11 = icmp eq i8 %9, 0, !dbg !14664
  br i1 %11, label %12, label %15, !dbg !14666

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14667
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14668
  store i8 0, i8* %14, align 1, !dbg !14669
  br label %46, !dbg !14670

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2425, metadata !DIExpression()), !dbg !14663
  call void @llvm.dbg.value(metadata i8 %17, metadata !2424, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i32 %18, metadata !2422, metadata !DIExpression()), !dbg !14657
  %19 = zext i8 %17 to i32, !dbg !14671
  %20 = zext i8 %16 to i32, !dbg !14672
  %21 = shl nuw i32 1, %20, !dbg !14672
  call void @llvm.dbg.value(metadata i32 %21, metadata !2423, metadata !DIExpression()), !dbg !14657
  %22 = and i32 %21, %19, !dbg !14674
  %23 = icmp eq i32 %22, 0, !dbg !14676
  br i1 %23, label %42, label %24, !dbg !14677

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14678
  %26 = sub i32 %10, %18, !dbg !14679
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14680
  %28 = load i8*, i8** %27, align 4, !dbg !14680
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14681
  %30 = load i32, i32* %29, align 4, !dbg !14681
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !14682
  %32 = add i32 %31, %18, !dbg !14683
  call void @llvm.dbg.value(metadata i32 %32, metadata !2422, metadata !DIExpression()), !dbg !14657
  %33 = trunc i32 %21 to i8, !dbg !14684
  %34 = xor i8 %33, -1, !dbg !14684
  %35 = and i8 %17, %34, !dbg !14684
  call void @llvm.dbg.value(metadata i8 %35, metadata !2424, metadata !DIExpression()), !dbg !14657
  %36 = icmp eq i8 %35, 0, !dbg !14685
  br i1 %36, label %12, label %37, !dbg !14687

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14688
  %39 = sub i32 %10, %32, !dbg !14690
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !14691
  %41 = add i32 %40, %32, !dbg !14692
  call void @llvm.dbg.value(metadata i32 %41, metadata !2422, metadata !DIExpression()), !dbg !14657
  br label %42, !dbg !14693

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14657
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14657
  call void @llvm.dbg.value(metadata i8 %44, metadata !2424, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i32 %43, metadata !2422, metadata !DIExpression()), !dbg !14657
  %45 = add i8 %16, 1, !dbg !14694
  call void @llvm.dbg.value(metadata i8 %45, metadata !2425, metadata !DIExpression()), !dbg !14663
  br label %15, !dbg !14666

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.131, i32 0, i32 0), %3 ], !dbg !14657
  ret i8* %47, !dbg !14695
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14696 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14700, metadata !DIExpression()), !dbg !14705
  call void @llvm.dbg.value(metadata i32 %1, metadata !14701, metadata !DIExpression()), !dbg !14705
  call void @llvm.dbg.value(metadata i8* %2, metadata !14702, metadata !DIExpression()), !dbg !14705
  call void @llvm.dbg.value(metadata i32 %3, metadata !14703, metadata !DIExpression()), !dbg !14705
  %5 = icmp ult i32 %1, %3, !dbg !14706
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14706
  call void @llvm.dbg.value(metadata i32 %6, metadata !14704, metadata !DIExpression()), !dbg !14705
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14707
  ret i32 %6, !dbg !14708
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14709 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14713, metadata !DIExpression()), !dbg !14714
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14715
  ret void, !dbg !14716
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14717 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14726, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14727, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.value(metadata i32 %2, metadata !14728, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14729, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.value(metadata i8* %4, metadata !14730, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.value(metadata i8* %5, metadata !14731, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.value(metadata i8* %6, metadata !14732, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.value(metadata i32 %7, metadata !14733, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.value(metadata i32 %8, metadata !14734, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.value(metadata i8* undef, metadata !14735, metadata !DIExpression()), !dbg !14737
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14738
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !14739
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14740
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14741
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14742
  call void @llvm.dbg.value(metadata i8* %13, metadata !14736, metadata !DIExpression()), !dbg !14737
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14743
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14744
  store i8* null, i8** %14, align 4, !dbg !14745
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14746
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14746
  br i1 %16, label %20, label %17, !dbg !14748

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14749
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14749
  br label %20, !dbg !14750

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14737
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14751
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14753
  ret i8* %13, !dbg !14754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !14755 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14760, metadata !DIExpression()), !dbg !14761
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14762
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14763
  ret void, !dbg !14764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !14765 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14770, metadata !DIExpression()), !dbg !14774
  call void @llvm.dbg.value(metadata i32 %1, metadata !14771, metadata !DIExpression()), !dbg !14774
  call void @llvm.dbg.value(metadata i32 %2, metadata !14772, metadata !DIExpression()), !dbg !14774
  call void @llvm.dbg.value(metadata i32 %3, metadata !14773, metadata !DIExpression()), !dbg !14774
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14775
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14776
  %6 = trunc i32 %3 to i8, !dbg !14777
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14778
  store i8 %6, i8* %7, align 4, !dbg !14779
  %8 = trunc i32 %2 to i8, !dbg !14780
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14781
  store i8 %8, i8* %9, align 1, !dbg !14782
  %10 = trunc i32 %1 to i8, !dbg !14783
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14784
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14784
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14784
  store i8 %10, i8* %13, align 2, !dbg !14785
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14786
  store i8 0, i8* %14, align 1, !dbg !14787
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14788
  ret void, !dbg !14789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !14790 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14794, metadata !DIExpression()), !dbg !14802
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14795, metadata !DIExpression()), !dbg !14802
  call void @llvm.dbg.value(metadata i32 %2, metadata !14796, metadata !DIExpression()), !dbg !14802
  call void @llvm.dbg.value(metadata i32 0, metadata !14801, metadata !DIExpression()), !dbg !14802
  %4 = add i32 %2, 7, !dbg !14803
  %5 = and i32 %4, -8, !dbg !14803
  %6 = add i32 %5, 64, !dbg !14803
  call void @llvm.dbg.value(metadata i32 %6, metadata !14797, metadata !DIExpression()), !dbg !14802
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.141(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14805
  call void @llvm.dbg.value(metadata i8* %7, metadata !14800, metadata !DIExpression()), !dbg !14802
  call void @llvm.dbg.value(metadata i32 %5, metadata !14798, metadata !DIExpression()), !dbg !14802
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14806
  call void @llvm.dbg.value(metadata i8* %8, metadata !14799, metadata !DIExpression()), !dbg !14802
  call void @llvm.dbg.value(metadata i32 0, metadata !14801, metadata !DIExpression()), !dbg !14802
  %9 = ptrtoint i8* %7 to i32, !dbg !14807
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14808
  store i32 %9, i32* %10, align 4, !dbg !14809
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14810
  store i32 %5, i32* %11, align 4, !dbg !14811
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14812
  store i32 0, i32* %12, align 4, !dbg !14813
  call void @llvm.dbg.value(metadata i8* %8, metadata !14799, metadata !DIExpression()), !dbg !14802
  ret i8* %8, !dbg !14814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.141(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !14815 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14819, metadata !DIExpression()), !dbg !14820
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14821
  ret i8* %2, !dbg !14822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14823 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14828, metadata !DIExpression()), !dbg !14829
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14830
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14831
  ret void, !dbg !14832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14833 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14835, metadata !DIExpression()), !dbg !14836
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14837
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14838
  ret void, !dbg !14839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14840 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14844, metadata !DIExpression()), !dbg !14845
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14846
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14847
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14848
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14849
  ret void, !dbg !14850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14851 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14856, metadata !DIExpression()), !dbg !14857
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14858
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14859
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14860
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14861
  ret void, !dbg !14862
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14863 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14880, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14871, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14872, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata i32 %2, metadata !14873, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14874, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata i8* %4, metadata !14875, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata i8* %5, metadata !14876, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata i8* %6, metadata !14877, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata i32 %7, metadata !14878, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata i32 %8, metadata !14879, metadata !DIExpression()), !dbg !14881
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14882
  %13 = icmp eq i64 %11, -1, !dbg !14883
  br i1 %13, label %15, label %14, !dbg !14885

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14886
  br label %15, !dbg !14888

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14890 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14895, metadata !DIExpression()), !dbg !14896
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14894, metadata !DIExpression()), !dbg !14896
  %4 = icmp eq i64 %3, 0, !dbg !14897
  br i1 %4, label %5, label %6, !dbg !14899

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14900
  br label %7, !dbg !14902

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14903
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14906 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14910, metadata !DIExpression()), !dbg !14911
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14912, !srcloc !14914
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14915
  ret void, !dbg !14916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14917 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14920, metadata !DIExpression()), !dbg !14921
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14919, metadata !DIExpression()), !dbg !14921
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14922
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14923
  ret void, !dbg !14924
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14925 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14927, metadata !DIExpression()), !dbg !14947
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14948

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14949
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14945, metadata !DIExpression()), !dbg !14950
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14951

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14927, metadata !DIExpression()), !dbg !14947
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14952
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14952
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14955
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14955
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14956
  %9 = load i32, i32* %8, align 4, !dbg !14956
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14957
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14957
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14958
  %13 = load i8*, i8** %12, align 4, !dbg !14958
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14959
  %15 = load i8*, i8** %14, align 4, !dbg !14959
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14960
  %17 = load i8*, i8** %16, align 4, !dbg !14960
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14961
  %19 = load i32, i32* %18, align 4, !dbg !14961
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14962
  %21 = load i32, i32* %20, align 4, !dbg !14962
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14963
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14964
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14965
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14966
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14966
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14967
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14927, metadata !DIExpression()), !dbg !14947
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14968
  br i1 %27, label %2, label %1, !dbg !14948, !llvm.loop !14970

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14949
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14945, metadata !DIExpression()), !dbg !14950
  br label %29, !dbg !14951

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14972
  ret void, !dbg !14973

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14945, metadata !DIExpression()), !dbg !14950
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14974
  %33 = load i32, i32* %32, align 4, !dbg !14974
  %34 = icmp eq i32 %33, -1, !dbg !14978
  br i1 %34, label %43, label %35, !dbg !14979

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14980
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14980
  %38 = icmp sgt i32 %33, 0, !dbg !14982
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14982
  %40 = zext i32 %39 to i64, !dbg !14982
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.144(i64 noundef %40) #26, !dbg !14982
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14983
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14983
  br label %43, !dbg !14984

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14985
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14945, metadata !DIExpression()), !dbg !14950
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14986
  br i1 %45, label %30, label %29, !dbg !14951, !llvm.loop !14988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.144(i64 noundef %0) unnamed_addr #11 !dbg !14990 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14992, metadata !DIExpression()), !dbg !14993
  call void @llvm.dbg.value(metadata i64 %0, metadata !14994, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.value(metadata i32 1000, metadata !14997, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.value(metadata i32 10000, metadata !14998, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.value(metadata i8 1, metadata !14999, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.value(metadata i8 0, metadata !15000, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.value(metadata i8 1, metadata !15001, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.value(metadata i8 0, metadata !15002, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.value(metadata i8 1, metadata !15003, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.value(metadata i8 0, metadata !15004, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.value(metadata i64 0, metadata !15005, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.value(metadata i64 0, metadata !15005, metadata !DIExpression()), !dbg !15009
  %2 = mul i64 %0, 10, !dbg !15011
  ret i64 %2, !dbg !15017
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !15018 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15020, metadata !DIExpression()), !dbg !15024
  call void @llvm.dbg.value(metadata i8* %1, metadata !15021, metadata !DIExpression()), !dbg !15024
  call void @llvm.dbg.value(metadata i8* %2, metadata !15022, metadata !DIExpression()), !dbg !15024
  call void @llvm.dbg.value(metadata i8* %3, metadata !15023, metadata !DIExpression()), !dbg !15024
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15025
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15026
  %7 = load i8, i8* %6, align 4, !dbg !15027
  %8 = or i8 %7, 4, !dbg !15027
  store i8 %8, i8* %6, align 4, !dbg !15027
  tail call void @z_thread_essential_clear() #26, !dbg !15028
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !15029
  unreachable, !dbg !15029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !15030 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15034, metadata !DIExpression()), !dbg !15035
  ret i32 -134, !dbg !15036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !15037 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15041, metadata !DIExpression()), !dbg !15043
  call void @llvm.dbg.value(metadata i32 %1, metadata !15042, metadata !DIExpression()), !dbg !15043
  ret i32 -134, !dbg !15044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !15045 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15052, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !15053, metadata !DIExpression()), !dbg !15054
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15055
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !15057
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15054
  ret i32 %6, !dbg !15058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !15059 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15063, metadata !DIExpression()), !dbg !15064
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !15065
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15064
  ret i32 %3, !dbg !15067
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15068 {
  tail call void @sys_clock_idle_exit() #25, !dbg !15070
  ret void, !dbg !15071
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !15072 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15074, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i8* %1, metadata !15075, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i8* %2, metadata !15076, metadata !DIExpression()), !dbg !15077
  br label %4, !dbg !15078

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15079, !srcloc !15086
  call void @llvm.dbg.value(metadata i32 undef, metadata !15082, metadata !DIExpression()) #24, !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !15083, metadata !DIExpression()) #24, !dbg !15087
  tail call fastcc void @k_cpu_idle() #26, !dbg !15088
  br label %4, !dbg !15078, !llvm.loop !15089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15091 {
  tail call void @arch_cpu_idle() #25, !dbg !15092
  ret void, !dbg !15093
}

; Function Attrs: optsize
declare !dbg !15094 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 !dbg !15095 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15110, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata i32 %1, metadata !15111, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata i32 %2, metadata !15112, metadata !DIExpression()), !dbg !15113
  %4 = icmp eq i32 %2, 0, !dbg !15114
  %5 = icmp ugt i32 %1, %2, !dbg !15114
  %6 = or i1 %4, %5, !dbg !15114
  br i1 %6, label %11, label %7, !dbg !15114

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15116
  store i32 %1, i32* %8, align 4, !dbg !15117
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15118
  store i32 %2, i32* %9, align 4, !dbg !15119
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15120
  tail call fastcc void @z_waitq_init.149(%union.anon* noundef %10) #26, !dbg !15121
  br label %11, !dbg !15122

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !15113
  ret i32 %12, !dbg !15123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.149(%union.anon* noundef %0) unnamed_addr #4 !dbg !15124 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15129, metadata !DIExpression()), !dbg !15130
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15131
  tail call fastcc void @sys_dlist_init.150(%struct._dnode* noundef %2) #26, !dbg !15132
  ret void, !dbg !15133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.150(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15134 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15139, metadata !DIExpression()), !dbg !15140
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15141
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15142
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15143
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15144
  ret void, !dbg !15145
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15146 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15150, metadata !DIExpression()), !dbg !15236
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15237, metadata !DIExpression()) #24, !dbg !15244
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15246, !srcloc !15252
  call void @llvm.dbg.value(metadata i32 undef, metadata !15249, metadata !DIExpression()) #24, !dbg !15253
  call void @llvm.dbg.value(metadata i32 undef, metadata !15250, metadata !DIExpression()) #24, !dbg !15253
  call void @llvm.dbg.value(metadata i32 undef, metadata !15243, metadata !DIExpression()) #24, !dbg !15244
  call void @llvm.dbg.value(metadata i32 undef, metadata !15151, metadata !DIExpression()), !dbg !15236
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15254
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !15255
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15156, metadata !DIExpression()), !dbg !15236
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15256
  br i1 %5, label %8, label %6, !dbg !15258

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15259, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i32 0, metadata !15264, metadata !DIExpression()), !dbg !15265
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 7, i32 1, !dbg !15268
  store i32 0, i32* %7, align 4, !dbg !15269
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %4) #25, !dbg !15270
  br label %16, !dbg !15271

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15272
  %10 = load i32, i32* %9, align 4, !dbg !15272
  %11 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15274
  %12 = load i32, i32* %11, align 4, !dbg !15274
  %13 = icmp ne i32 %10, %12, !dbg !15275
  %14 = zext i1 %13 to i32, !dbg !15276
  %15 = add i32 %10, %14, !dbg !15277
  store i32 %15, i32* %9, align 4, !dbg !15277
  br label %16

16:                                               ; preds = %8, %6
  %17 = extractvalue { i32, i32 } %2, 0, !dbg !15246
  call void @llvm.dbg.value(metadata i32 %17, metadata !15249, metadata !DIExpression()) #24, !dbg !15253
  call void @llvm.dbg.value(metadata i32 %17, metadata !15243, metadata !DIExpression()) #24, !dbg !15244
  call void @llvm.dbg.value(metadata i32 %17, metadata !15151, metadata !DIExpression()), !dbg !15236
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !15278
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %18) #25, !dbg !15278
  ret void, !dbg !15279
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15280 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15289, metadata !DIExpression()), !dbg !15293
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15288, metadata !DIExpression()), !dbg !15293
  call void @llvm.dbg.value(metadata i32 0, metadata !15290, metadata !DIExpression()), !dbg !15293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15237, metadata !DIExpression()) #24, !dbg !15294
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15296, !srcloc !15252
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15296
  call void @llvm.dbg.value(metadata i32 %4, metadata !15249, metadata !DIExpression()) #24, !dbg !15298
  call void @llvm.dbg.value(metadata i32 undef, metadata !15250, metadata !DIExpression()) #24, !dbg !15298
  call void @llvm.dbg.value(metadata i32 %4, metadata !15243, metadata !DIExpression()) #24, !dbg !15294
  call void @llvm.dbg.value(metadata i32 %4, metadata !15291, metadata !DIExpression()), !dbg !15293
  %5 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15299
  %6 = load i32, i32* %5, align 4, !dbg !15299
  %7 = icmp eq i32 %6, 0, !dbg !15299
  br i1 %7, label %10, label %8, !dbg !15301, !prof !15302

8:                                                ; preds = %2
  %9 = add i32 %6, -1, !dbg !15303
  store i32 %9, i32* %5, align 4, !dbg !15303
  call void @llvm.dbg.value(metadata i32 %4, metadata !15305, metadata !DIExpression()) #24, !dbg !15311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15310, metadata !DIExpression()) #24, !dbg !15311
  call void @llvm.dbg.value(metadata i32 %4, metadata !15313, metadata !DIExpression()) #24, !dbg !15316
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15318, !srcloc !15319
  call void @llvm.dbg.value(metadata i32 0, metadata !15290, metadata !DIExpression()), !dbg !15293
  br label %18, !dbg !15320

10:                                               ; preds = %2
  %11 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !15289, metadata !DIExpression()), !dbg !15293
  %12 = icmp eq i64 %11, 0, !dbg !15321
  br i1 %12, label %13, label %14, !dbg !15323

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %4, metadata !15305, metadata !DIExpression()) #24, !dbg !15324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15310, metadata !DIExpression()) #24, !dbg !15324
  call void @llvm.dbg.value(metadata i32 %4, metadata !15313, metadata !DIExpression()) #24, !dbg !15327
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15329, !srcloc !15319
  call void @llvm.dbg.value(metadata i32 -16, metadata !15290, metadata !DIExpression()), !dbg !15293
  br label %18, !dbg !15330

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15331
  %16 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !15332
  %17 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %16, %union.anon* noundef %15, [1 x i64] %1) #25, !dbg !15332
  call void @llvm.dbg.value(metadata i32 %17, metadata !15290, metadata !DIExpression()), !dbg !15293
  br label %18, !dbg !15333

18:                                               ; preds = %8, %13, %14
  %19 = phi i32 [ 0, %8 ], [ -16, %13 ], [ %17, %14 ], !dbg !15293
  call void @llvm.dbg.value(metadata i32 %19, metadata !15290, metadata !DIExpression()), !dbg !15293
  call void @llvm.dbg.label(metadata !15292), !dbg !15334
  ret i32 %19, !dbg !15335
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15336 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15338, metadata !DIExpression()), !dbg !15341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15237, metadata !DIExpression()) #24, !dbg !15342
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15344, !srcloc !15252
  call void @llvm.dbg.value(metadata i32 undef, metadata !15249, metadata !DIExpression()) #24, !dbg !15346
  call void @llvm.dbg.value(metadata i32 undef, metadata !15250, metadata !DIExpression()) #24, !dbg !15346
  call void @llvm.dbg.value(metadata i32 undef, metadata !15243, metadata !DIExpression()) #24, !dbg !15342
  call void @llvm.dbg.value(metadata i32 undef, metadata !15340, metadata !DIExpression()), !dbg !15341
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !15347
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15339, metadata !DIExpression()), !dbg !15341
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15349
  br i1 %5, label %11, label %6, !dbg !15351

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15259, metadata !DIExpression()), !dbg !15352
  call void @llvm.dbg.value(metadata i32 -11, metadata !15264, metadata !DIExpression()), !dbg !15352
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15354
  store i32 -11, i32* %8, align 4, !dbg !15355
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #25, !dbg !15356
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !15347
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15339, metadata !DIExpression()), !dbg !15341
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15349
  br i1 %10, label %11, label %6, !dbg !15351, !llvm.loop !15357

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !15344
  call void @llvm.dbg.value(metadata i32 %12, metadata !15249, metadata !DIExpression()) #24, !dbg !15346
  call void @llvm.dbg.value(metadata i32 %12, metadata !15243, metadata !DIExpression()) #24, !dbg !15342
  call void @llvm.dbg.value(metadata i32 %12, metadata !15340, metadata !DIExpression()), !dbg !15341
  %13 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15360
  store i32 0, i32* %13, align 4, !dbg !15361
  %14 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !15362
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %14) #25, !dbg !15362
  ret void, !dbg !15363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !15364 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15368, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15369, metadata !DIExpression()), !dbg !15372
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15373
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15373
  %5 = load i8, i8* %4, align 2, !dbg !15373
  call void @llvm.dbg.value(metadata i8 %5, metadata !15370, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15372
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15374
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15374
  %8 = load i8, i8* %7, align 2, !dbg !15374
  call void @llvm.dbg.value(metadata i8 %8, metadata !15371, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15372
  %9 = icmp eq i8 %8, %5, !dbg !15375
  %10 = sext i8 %5 to i32, !dbg !15377
  %11 = sext i8 %8 to i32, !dbg !15377
  %12 = sub nsw i32 %11, %10, !dbg !15377
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15377
  ret i32 %13, !dbg !15378
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15379 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15383, metadata !DIExpression()), !dbg !15384
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !15385
  %3 = icmp eq i32 %2, 0, !dbg !15387
  br i1 %3, label %8, label %4, !dbg !15388

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !15389
  %6 = add i32 %5, %2, !dbg !15391
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15392
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !15393
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !15394
  br label %8, !dbg !15395

8:                                                ; preds = %4, %1
  ret void, !dbg !15396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !15397 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15401, metadata !DIExpression()), !dbg !15403
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15404
  call void @llvm.dbg.value(metadata i32 %1, metadata !15402, metadata !DIExpression()), !dbg !15403
  ret i32 %1, !dbg !15405
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15410, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata i32 %1, metadata !15411, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata i32 0, metadata !15412, metadata !DIExpression()), !dbg !15420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !15428
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15430, !srcloc !15436
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15430
  call void @llvm.dbg.value(metadata i32 %4, metadata !15433, metadata !DIExpression()) #24, !dbg !15437
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !15437
  call void @llvm.dbg.value(metadata i32 %4, metadata !15427, metadata !DIExpression()) #24, !dbg !15428
  call void @llvm.dbg.value(metadata i32 %4, metadata !15418, metadata !DIExpression()), !dbg !15420
  call void @llvm.dbg.value(metadata i32 undef, metadata !15412, metadata !DIExpression()), !dbg !15420
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15438
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !15441
  %6 = icmp sgt i32 %0, 0, !dbg !15442
  %7 = icmp sgt i32 %5, 2, !dbg !15444
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15444
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15444
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15445
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15446
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15447
  call void @llvm.dbg.value(metadata i32 %4, metadata !15448, metadata !DIExpression()) #24, !dbg !15454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !15454
  call void @llvm.dbg.value(metadata i32 %4, metadata !15456, metadata !DIExpression()) #24, !dbg !15459
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15461, !srcloc !15462
  call void @llvm.dbg.value(metadata i32 1, metadata !15412, metadata !DIExpression()), !dbg !15420
  call void @llvm.dbg.value(metadata i32 undef, metadata !15412, metadata !DIExpression()), !dbg !15420
  ret void, !dbg !15463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !15464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15466, metadata !DIExpression()), !dbg !15467
  call void @llvm.dbg.value(metadata i32 %0, metadata !15468, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15483
  call void @llvm.dbg.value(metadata i32 1000, metadata !15471, metadata !DIExpression()), !dbg !15483
  call void @llvm.dbg.value(metadata i32 10000, metadata !15472, metadata !DIExpression()), !dbg !15483
  call void @llvm.dbg.value(metadata i8 1, metadata !15473, metadata !DIExpression()), !dbg !15483
  call void @llvm.dbg.value(metadata i1 true, metadata !15474, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15483
  call void @llvm.dbg.value(metadata i1 true, metadata !15475, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15483
  call void @llvm.dbg.value(metadata i8 0, metadata !15476, metadata !DIExpression()), !dbg !15483
  call void @llvm.dbg.value(metadata i1 true, metadata !15477, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15483
  call void @llvm.dbg.value(metadata i1 false, metadata !15478, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15483
  call void @llvm.dbg.value(metadata i64 0, metadata !15479, metadata !DIExpression()), !dbg !15483
  call void @llvm.dbg.value(metadata i64 0, metadata !15479, metadata !DIExpression()), !dbg !15483
  %2 = mul i32 %0, 10, !dbg !15485
  ret i32 %2, !dbg !15491
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15494, metadata !DIExpression()), !dbg !15496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !15497
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15499, !srcloc !15436
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15499
  call void @llvm.dbg.value(metadata i32 %3, metadata !15433, metadata !DIExpression()) #24, !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !15501
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #24, !dbg !15497
  call void @llvm.dbg.value(metadata i32 %3, metadata !15495, metadata !DIExpression()), !dbg !15496
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15502
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15504
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15505
  br i1 %6, label %7, label %8, !dbg !15506

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15507
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #24, !dbg !15509
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !15509
  call void @llvm.dbg.value(metadata i32 %3, metadata !15456, metadata !DIExpression()) #24, !dbg !15511
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15513, !srcloc !15462
  br label %24, !dbg !15514

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15515
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !15516
  %10 = icmp eq i32 %9, 0, !dbg !15516
  br i1 %10, label %21, label %11, !dbg !15518

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !15519
  br i1 %12, label %13, label %21, !dbg !15520

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15521
  %15 = icmp sgt i32 %14, %0, !dbg !15524
  br i1 %15, label %19, label %16, !dbg !15525

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15526
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !15526
  call void @llvm.dbg.value(metadata i32 %18, metadata !15495, metadata !DIExpression()), !dbg !15496
  br label %22, !dbg !15528

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15529
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15529
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15531
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15496
  call void @llvm.dbg.value(metadata i32 %23, metadata !15495, metadata !DIExpression()), !dbg !15496
  call void @llvm.dbg.value(metadata i32 %23, metadata !15448, metadata !DIExpression()) #24, !dbg !15533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !15533
  call void @llvm.dbg.value(metadata i32 %23, metadata !15456, metadata !DIExpression()) #24, !dbg !15535
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !15537, !srcloc !15462
  br label %24, !dbg !15538

24:                                               ; preds = %22, %7
  ret void, !dbg !15538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !15539 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15543, metadata !DIExpression()), !dbg !15545
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !15546
  %3 = icmp eq i32 %2, 0, !dbg !15546
  br i1 %3, label %16, label %4, !dbg !15547

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15548
  br i1 %5, label %16, label %6, !dbg !15549

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15550
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15550
  %9 = load i8, i8* %8, align 2, !dbg !15550
  %10 = sext i8 %9 to i32, !dbg !15551
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15552
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !15553
  br i1 %12, label %16, label %13, !dbg !15554

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !15555
  %15 = xor i1 %14, true, !dbg !15556
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15545
  call void @llvm.dbg.value(metadata i1 %17, metadata !15544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15545
  ret i1 %17, !dbg !15557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15558 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15562, metadata !DIExpression()), !dbg !15564
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15565
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15563, metadata !DIExpression()), !dbg !15564
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !15566
  br i1 %3, label %5, label %4, !dbg !15568

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !15569
  br label %5, !dbg !15571

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15562, metadata !DIExpression()), !dbg !15564
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15572
  ret i32 %6, !dbg !15573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15574 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15576, metadata !DIExpression()), !dbg !15578
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15579
  %3 = load i8, i8* %2, align 1, !dbg !15579
  call void @llvm.dbg.value(metadata i8 %3, metadata !15577, metadata !DIExpression()), !dbg !15578
  %4 = and i8 %3, 31, !dbg !15580
  %5 = icmp ne i8 %4, 0, !dbg !15581
  ret i1 %5, !dbg !15582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15585, metadata !DIExpression()), !dbg !15586
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15587
  br i1 %2, label %3, label %7, !dbg !15589

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15590, metadata !DIExpression()) #24, !dbg !15593
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15596
  %5 = load i8, i8* %4, align 1, !dbg !15597
  %6 = and i8 %5, 127, !dbg !15597
  store i8 %6, i8* %4, align 1, !dbg !15597
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15598, metadata !DIExpression()) #24, !dbg !15601
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15605
  br label %7, !dbg !15606

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15607, metadata !DIExpression()) #24, !dbg !15610
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15612
  %9 = load i8, i8* %8, align 1, !dbg !15613
  %10 = or i8 %9, -128, !dbg !15613
  store i8 %10, i8* %8, align 1, !dbg !15613
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15614, metadata !DIExpression()) #24, !dbg !15617
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15621, metadata !DIExpression()) #24, !dbg !15629
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15627, metadata !DIExpression()) #24, !dbg !15629
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15631
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15628, metadata !DIExpression()) #24, !dbg !15629
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15633
  br i1 %12, label %23, label %13, !dbg !15631

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15628, metadata !DIExpression()) #24, !dbg !15629
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15635
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15628, metadata !DIExpression()) #24, !dbg !15629
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !15636
  %17 = icmp sgt i32 %16, 0, !dbg !15639
  br i1 %17, label %18, label %20, !dbg !15640

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15641
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !15643
  br label %25, !dbg !15644

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !15633
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15628, metadata !DIExpression()) #24, !dbg !15629
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15633
  br i1 %22, label %23, label %13, !dbg !15631, !llvm.loop !15645

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15647
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !15648
  br label %25, !dbg !15649

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15650
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15651
  %28 = zext i1 %27 to i32, !dbg !15651
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !15652
  ret void, !dbg !15653
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15654 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15656, metadata !DIExpression()), !dbg !15657
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !15658
  ret i1 %2, !dbg !15659
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !15660 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15662, metadata !DIExpression()), !dbg !15664
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15663, metadata !DIExpression()), !dbg !15664
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15665
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15666
  ret void, !dbg !15667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !15668 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15672, metadata !DIExpression()), !dbg !15673
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !15674
  br i1 %2, label %6, label %3, !dbg !15674

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15675
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15675
  br label %6, !dbg !15674

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15674
  ret %struct._dnode* %7, !dbg !15676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15677 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15681, metadata !DIExpression()), !dbg !15685
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15682, metadata !DIExpression()), !dbg !15685
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15686
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15686
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15683, metadata !DIExpression()), !dbg !15685
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15687
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15688
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15689
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15690
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15691
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15692
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15693
  ret void, !dbg !15694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15695 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15699, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15700, metadata !DIExpression()), !dbg !15701
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15702
  br i1 %3, label %6, label %4, !dbg !15703

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15704
  br label %6, !dbg !15703

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15703
  ret %struct._dnode* %7, !dbg !15705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15706 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15710, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15711, metadata !DIExpression()), !dbg !15713
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15714
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15714
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15712, metadata !DIExpression()), !dbg !15713
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15715
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15716
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15717
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15718
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15719
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15720
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15721
  ret void, !dbg !15722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15723 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15725, metadata !DIExpression()), !dbg !15727
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15728
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15735, metadata !DIExpression()) #24, !dbg !15737
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15738
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15739
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15739
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15726, metadata !DIExpression()), !dbg !15727
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15740, metadata !DIExpression()) #24, !dbg !15746
  call void @llvm.dbg.value(metadata i32 %0, metadata !15745, metadata !DIExpression()) #24, !dbg !15746
  %6 = icmp eq i32 %0, 0, !dbg !15749
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15751
  br i1 %6, label %8, label %15, !dbg !15752

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15753
  br i1 %9, label %15, label %10, !dbg !15755

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15756
  br i1 %11, label %15, label %12, !dbg !15758

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15759
  %14 = icmp eq i32 %13, 0, !dbg !15759
  br i1 %14, label %18, label %15, !dbg !15761

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15762
  br i1 %16, label %18, label %17, !dbg !15765

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15766
  br label %18, !dbg !15768

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15751
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15751
  ret void, !dbg !15769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !15770 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15774, metadata !DIExpression()), !dbg !15777
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15775, metadata !DIExpression()), !dbg !15777
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !15778
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15776, metadata !DIExpression()), !dbg !15777
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15775, metadata !DIExpression()), !dbg !15777
  ret %struct.k_thread* %3, !dbg !15779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15780 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15782, metadata !DIExpression()), !dbg !15783
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15784
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15785
  %4 = xor i1 %3, true, !dbg !15786
  ret i1 %4, !dbg !15787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15788 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15790, metadata !DIExpression()), !dbg !15791
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15792
  %3 = load i16, i16* %2, align 2, !dbg !15792
  %4 = icmp ult i16 %3, 128, !dbg !15793
  %5 = zext i1 %4 to i32, !dbg !15793
  ret i32 %5, !dbg !15794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15795 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15801, metadata !DIExpression()), !dbg !15802
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15803
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15804
  %4 = xor i1 %3, true, !dbg !15805
  ret i1 %4, !dbg !15806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15807 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15813, metadata !DIExpression()), !dbg !15814
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15815
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15815
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15816
  ret i1 %4, !dbg !15817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15818 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15820, metadata !DIExpression()), !dbg !15822
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15821, metadata !DIExpression()), !dbg !15822
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15823
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15823
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15824
  br i1 %5, label %9, label %6, !dbg !15825

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15826
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15826
  br label %9, !dbg !15825

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15825
  ret %struct._dnode* %10, !dbg !15827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15828 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15832, metadata !DIExpression()), !dbg !15833
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15834
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15834
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15835
  ret i1 %4, !dbg !15836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !15837 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15841, metadata !DIExpression()), !dbg !15844
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15845
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15845
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15842, metadata !DIExpression()), !dbg !15844
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15846
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15846
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15843, metadata !DIExpression()), !dbg !15844
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15847
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15848
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15849
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15850
  tail call fastcc void @sys_dnode_init.155(%struct._dnode* noundef %0) #26, !dbg !15851
  ret void, !dbg !15852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.155(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15853 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15855, metadata !DIExpression()), !dbg !15856
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15857
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15858
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15859
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15860
  ret void, !dbg !15861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15862 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15866, metadata !DIExpression()), !dbg !15868
  call void @llvm.dbg.value(metadata i32 128, metadata !15867, metadata !DIExpression()), !dbg !15868
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15869
  %3 = load i8, i8* %2, align 1, !dbg !15869
  %4 = icmp slt i8 %3, 0, !dbg !15870
  ret i1 %4, !dbg !15871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15876, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 %1, metadata !15877, metadata !DIExpression()), !dbg !15878
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15879
  ret i1 %3, !dbg !15880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !15881 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15883, metadata !DIExpression()), !dbg !15884
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15885
  ret i1 %2, !dbg !15886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15889, metadata !DIExpression()), !dbg !15891
  call void @llvm.dbg.value(metadata i32 %1, metadata !15890, metadata !DIExpression()), !dbg !15891
  %3 = icmp slt i32 %0, %1, !dbg !15892
  ret i1 %3, !dbg !15893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15894 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15896, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i32 0, metadata !15897, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !15902
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15904, !srcloc !15436
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15904
  call void @llvm.dbg.value(metadata i32 %3, metadata !15433, metadata !DIExpression()) #24, !dbg !15906
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !15906
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #24, !dbg !15902
  call void @llvm.dbg.value(metadata i32 %3, metadata !15899, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !15897, metadata !DIExpression()), !dbg !15901
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15907
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #24, !dbg !15912
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !15912
  call void @llvm.dbg.value(metadata i32 %3, metadata !15456, metadata !DIExpression()) #24, !dbg !15914
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15916, !srcloc !15462
  call void @llvm.dbg.value(metadata i32 1, metadata !15897, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !15897, metadata !DIExpression()), !dbg !15901
  ret void, !dbg !15917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15918 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15920, metadata !DIExpression()), !dbg !15921
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15922
  br i1 %2, label %24, label %3, !dbg !15924

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15925
  br i1 %4, label %5, label %24, !dbg !15926

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15607, metadata !DIExpression()) #24, !dbg !15927
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15930
  %7 = load i8, i8* %6, align 1, !dbg !15931
  %8 = or i8 %7, -128, !dbg !15931
  store i8 %8, i8* %6, align 1, !dbg !15931
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15614, metadata !DIExpression()) #24, !dbg !15932
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15621, metadata !DIExpression()) #24, !dbg !15934
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15627, metadata !DIExpression()) #24, !dbg !15934
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15936
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15628, metadata !DIExpression()) #24, !dbg !15934
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15937
  br i1 %10, label %21, label %11, !dbg !15936

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15628, metadata !DIExpression()) #24, !dbg !15934
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15938
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15628, metadata !DIExpression()) #24, !dbg !15934
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15939
  %15 = icmp sgt i32 %14, 0, !dbg !15940
  br i1 %15, label %16, label %18, !dbg !15941

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15942
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15943
  br label %23, !dbg !15944

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15937
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15628, metadata !DIExpression()) #24, !dbg !15934
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15937
  br i1 %20, label %21, label %11, !dbg !15936, !llvm.loop !15945

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15947
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15948
  br label %23, !dbg !15949

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15950
  br label %24, !dbg !15951

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15953 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15955, metadata !DIExpression()), !dbg !15956
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15957
  br i1 %2, label %6, label %3, !dbg !15958

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15959
  %5 = xor i1 %4, true, !dbg !15958
  br label %6, !dbg !15958

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15960
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15961 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15963, metadata !DIExpression()), !dbg !15967
  call void @llvm.dbg.value(metadata i32 0, metadata !15964, metadata !DIExpression()), !dbg !15968
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !15969
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15971, !srcloc !15436
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15971
  call void @llvm.dbg.value(metadata i32 %3, metadata !15433, metadata !DIExpression()) #24, !dbg !15973
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !15973
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #24, !dbg !15969
  call void @llvm.dbg.value(metadata i32 %3, metadata !15966, metadata !DIExpression()), !dbg !15968
  call void @llvm.dbg.value(metadata i32 undef, metadata !15964, metadata !DIExpression()), !dbg !15968
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15974
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #24, !dbg !15977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !15977
  call void @llvm.dbg.value(metadata i32 %3, metadata !15456, metadata !DIExpression()) #24, !dbg !15979
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15981, !srcloc !15462
  call void @llvm.dbg.value(metadata i32 1, metadata !15964, metadata !DIExpression()), !dbg !15968
  call void @llvm.dbg.value(metadata i32 undef, metadata !15964, metadata !DIExpression()), !dbg !15968
  ret void, !dbg !15982
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15983 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15985, metadata !DIExpression()), !dbg !15987
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !15988
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15990, !srcloc !15436
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15990
  call void @llvm.dbg.value(metadata i32 %3, metadata !15433, metadata !DIExpression()) #24, !dbg !15992
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !15992
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #24, !dbg !15988
  call void @llvm.dbg.value(metadata i32 %3, metadata !15986, metadata !DIExpression()), !dbg !15987
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !15993
  br i1 %4, label %5, label %6, !dbg !15995

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #24, !dbg !15996
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !15996
  call void @llvm.dbg.value(metadata i32 %3, metadata !15456, metadata !DIExpression()) #24, !dbg !15999
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16001, !srcloc !15462
  br label %8, !dbg !16002

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.160(%struct.k_thread* noundef %0) #26, !dbg !16003
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16004
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16005
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16005
  br label %8, !dbg !16006

8:                                                ; preds = %6, %5
  ret void, !dbg !16006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16007 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16009, metadata !DIExpression()), !dbg !16010
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16011
  %3 = load i8, i8* %2, align 1, !dbg !16011
  %4 = and i8 %3, 4, !dbg !16012
  %5 = icmp eq i8 %4, 0, !dbg !16013
  ret i1 %5, !dbg !16014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.160(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !16015 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16017, metadata !DIExpression()), !dbg !16018
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16019
  %3 = load i8, i8* %2, align 1, !dbg !16020
  %4 = and i8 %3, -5, !dbg !16020
  store i8 %4, i8* %2, align 1, !dbg !16020
  ret void, !dbg !16021
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16022 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16025, metadata !DIExpression()), !dbg !16026
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16024, metadata !DIExpression()), !dbg !16026
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !16027
  br i1 %4, label %5, label %9, !dbg !16029

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16030
  br i1 %6, label %7, label %9, !dbg !16031

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16032, metadata !DIExpression()) #24, !dbg !16038
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16037, metadata !DIExpression()) #24, !dbg !16038
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16041
  br label %10, !dbg !16042

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #24, !dbg !16043
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !16043
  call void @llvm.dbg.value(metadata i32 %3, metadata !15456, metadata !DIExpression()) #24, !dbg !16046
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16048, !srcloc !15462
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16054, metadata !DIExpression()), !dbg !16055
  call void @llvm.dbg.value(metadata i32 %0, metadata !16056, metadata !DIExpression()), !dbg !16061
  %2 = icmp eq i32 %0, 0, !dbg !16063
  br i1 %2, label %3, label %6, !dbg !16064

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16065, !srcloc !16072
  call void @llvm.dbg.value(metadata i32 %4, metadata !16068, metadata !DIExpression()) #24, !dbg !16073
  %5 = icmp eq i32 %4, 0, !dbg !16074
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16055
  ret i1 %7, !dbg !16075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !16076 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16079
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16078, metadata !DIExpression()), !dbg !16080
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16081
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16082
  ret i1 %3, !dbg !16083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16086, metadata !DIExpression()), !dbg !16088
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !16089
  call void @llvm.dbg.value(metadata i32 %2, metadata !16087, metadata !DIExpression()), !dbg !16088
  ret i32 %2, !dbg !16090
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16091 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16093, metadata !DIExpression()), !dbg !16097
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16098
  call void @llvm.dbg.value(metadata i32 0, metadata !16094, metadata !DIExpression()), !dbg !16099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16100
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16102, !srcloc !15436
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16102
  call void @llvm.dbg.value(metadata i32 %4, metadata !15433, metadata !DIExpression()) #24, !dbg !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16104
  call void @llvm.dbg.value(metadata i32 %4, metadata !15427, metadata !DIExpression()) #24, !dbg !16100
  call void @llvm.dbg.value(metadata i32 %4, metadata !16096, metadata !DIExpression()), !dbg !16099
  call void @llvm.dbg.value(metadata i32 undef, metadata !16094, metadata !DIExpression()), !dbg !16099
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16105
  br i1 %5, label %6, label %10, !dbg !16109

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15590, metadata !DIExpression()) #24, !dbg !16110
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16113
  %8 = load i8, i8* %7, align 1, !dbg !16114
  %9 = and i8 %8, 127, !dbg !16114
  store i8 %9, i8* %7, align 1, !dbg !16114
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15598, metadata !DIExpression()) #24, !dbg !16115
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16117
  br label %10, !dbg !16118

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16119
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16120
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16121
  %13 = zext i1 %12 to i32, !dbg !16121
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16122
  call void @llvm.dbg.value(metadata i32 %4, metadata !15448, metadata !DIExpression()) #24, !dbg !16123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !16123
  call void @llvm.dbg.value(metadata i32 %4, metadata !15456, metadata !DIExpression()) #24, !dbg !16125
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !16127, !srcloc !15462
  call void @llvm.dbg.value(metadata i32 1, metadata !16094, metadata !DIExpression()), !dbg !16099
  call void @llvm.dbg.value(metadata i32 undef, metadata !16094, metadata !DIExpression()), !dbg !16099
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16128
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16130
  br i1 %15, label %16, label %17, !dbg !16131

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16132
  br label %17, !dbg !16134

17:                                               ; preds = %16, %10
  ret void, !dbg !16135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16136 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16138, metadata !DIExpression()), !dbg !16139
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16140
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !16141
  ret i32 %3, !dbg !16142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !16143 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16145, metadata !DIExpression()), !dbg !16146
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16147
  %3 = load i8, i8* %2, align 1, !dbg !16148
  %4 = or i8 %3, 16, !dbg !16148
  store i8 %4, i8* %2, align 1, !dbg !16148
  ret void, !dbg !16149
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16150 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16151, !srcloc !15436
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16151
  call void @llvm.dbg.value(metadata i32 %2, metadata !15433, metadata !DIExpression()) #24, !dbg !16153
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16153
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16154
  ret void, !dbg !16155
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16158, metadata !DIExpression()), !dbg !16159
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16160
  br i1 %2, label %3, label %5, !dbg !16162

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16163
  br label %6, !dbg !16165

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15456, metadata !DIExpression()) #24, !dbg !16166
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !16169, !srcloc !15462
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16170
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16171 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16173, metadata !DIExpression()), !dbg !16175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16176
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16178, !srcloc !15436
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16178
  call void @llvm.dbg.value(metadata i32 %3, metadata !15433, metadata !DIExpression()) #24, !dbg !16180
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16180
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #24, !dbg !16176
  call void @llvm.dbg.value(metadata i32 %3, metadata !16174, metadata !DIExpression()), !dbg !16175
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16181
  br i1 %4, label %6, label %5, !dbg !16183

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #24, !dbg !16184
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !16184
  call void @llvm.dbg.value(metadata i32 %3, metadata !15456, metadata !DIExpression()) #24, !dbg !16187
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16189, !srcloc !15462
  br label %8, !dbg !16190

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16191
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16192
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16193
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16193
  br label %8, !dbg !16194

8:                                                ; preds = %6, %5
  ret void, !dbg !16194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16195 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16197, metadata !DIExpression()), !dbg !16198
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16199
  %3 = load i8, i8* %2, align 1, !dbg !16199
  %4 = and i8 %3, 16, !dbg !16200
  %5 = icmp ne i8 %4, 0, !dbg !16201
  ret i1 %5, !dbg !16202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !16203 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16205, metadata !DIExpression()), !dbg !16206
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16207
  %3 = load i8, i8* %2, align 1, !dbg !16208
  %4 = and i8 %3, -17, !dbg !16208
  store i8 %4, i8* %2, align 1, !dbg !16208
  ret void, !dbg !16209
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16210 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16220, metadata !DIExpression()), !dbg !16224
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16218, metadata !DIExpression()), !dbg !16224
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16219, metadata !DIExpression()), !dbg !16224
  call void @llvm.dbg.value(metadata i32 0, metadata !16221, metadata !DIExpression()), !dbg !16225
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16226
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16228, !srcloc !15436
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16228
  call void @llvm.dbg.value(metadata i32 %5, metadata !15433, metadata !DIExpression()) #24, !dbg !16230
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16230
  call void @llvm.dbg.value(metadata i32 %5, metadata !15427, metadata !DIExpression()) #24, !dbg !16226
  call void @llvm.dbg.value(metadata i32 %5, metadata !16223, metadata !DIExpression()), !dbg !16225
  call void @llvm.dbg.value(metadata i32 undef, metadata !16221, metadata !DIExpression()), !dbg !16225
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16231
  call void @llvm.dbg.value(metadata i32 %5, metadata !15448, metadata !DIExpression()) #24, !dbg !16234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !16234
  call void @llvm.dbg.value(metadata i32 %5, metadata !15456, metadata !DIExpression()) #24, !dbg !16236
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !16238, !srcloc !15462
  call void @llvm.dbg.value(metadata i32 1, metadata !16221, metadata !DIExpression()), !dbg !16225
  call void @llvm.dbg.value(metadata i32 undef, metadata !16221, metadata !DIExpression()), !dbg !16225
  ret void, !dbg !16239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16240 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16244, metadata !DIExpression()), !dbg !16245
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16242, metadata !DIExpression()), !dbg !16245
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16243, metadata !DIExpression()), !dbg !16245
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !16246
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16247
  ret void, !dbg !16248
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16249 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16253, metadata !DIExpression()), !dbg !16255
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16254, metadata !DIExpression()), !dbg !16255
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16256
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16257
  %3 = icmp eq %union.anon* %1, null, !dbg !16258
  br i1 %3, label %21, label %4, !dbg !16260

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16261
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16263
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16264
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15621, metadata !DIExpression()) #24, !dbg !16265
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15627, metadata !DIExpression()) #24, !dbg !16265
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !16267
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15628, metadata !DIExpression()) #24, !dbg !16265
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16268
  br i1 %8, label %19, label %9, !dbg !16267

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15628, metadata !DIExpression()) #24, !dbg !16265
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16269
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15628, metadata !DIExpression()) #24, !dbg !16265
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !16270
  %13 = icmp sgt i32 %12, 0, !dbg !16271
  br i1 %13, label %14, label %16, !dbg !16272

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16273
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !16274
  br label %21, !dbg !16275

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !16268
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15628, metadata !DIExpression()) #24, !dbg !16265
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16268
  br i1 %18, label %19, label %9, !dbg !16267, !llvm.loop !16276

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16278
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !16279
  br label %21, !dbg !16280

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16282 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16287, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16286, metadata !DIExpression()), !dbg !16288
  %4 = icmp eq i64 %3, -1, !dbg !16289
  br i1 %4, label %6, label %5, !dbg !16291

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.163(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16292
  br label %6, !dbg !16294

6:                                                ; preds = %5, %2
  ret void, !dbg !16295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.163(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16296 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16299, metadata !DIExpression()), !dbg !16300
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16298, metadata !DIExpression()), !dbg !16300
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16301
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !16302
  ret void, !dbg !16303
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16304 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16306, metadata !DIExpression()), !dbg !16314
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16315
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16315
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16307, metadata !DIExpression()), !dbg !16314
  call void @llvm.dbg.value(metadata i32 0, metadata !16308, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16317
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16319, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 undef, metadata !15433, metadata !DIExpression()) #24, !dbg !16321
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16321
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #24, !dbg !16317
  call void @llvm.dbg.value(metadata i32 undef, metadata !16310, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.value(metadata i32 undef, metadata !16308, metadata !DIExpression()), !dbg !16316
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16322
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16323
  %7 = load i8, i8* %6, align 1, !dbg !16323
  %8 = and i8 %7, 40, !dbg !16324
  %9 = icmp eq i8 %8, 0, !dbg !16324
  call void @llvm.dbg.value(metadata i1 %9, metadata !16311, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16325
  br i1 %9, label %10, label %17, !dbg !16326

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16327
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !16327
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !16327
  %14 = icmp eq %union.anon* %13, null, !dbg !16331
  br i1 %14, label %16, label %15, !dbg !16332

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16333
  br label %16, !dbg !16335

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.160(%struct.k_thread* noundef nonnull %3) #26, !dbg !16336
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !16337
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !16338
  br label %17, !dbg !16339

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16319
  call void @llvm.dbg.value(metadata i32 %18, metadata !15433, metadata !DIExpression()) #24, !dbg !16321
  call void @llvm.dbg.value(metadata i32 %18, metadata !15427, metadata !DIExpression()) #24, !dbg !16317
  call void @llvm.dbg.value(metadata i32 %18, metadata !16310, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #24, !dbg !16340
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !16340
  call void @llvm.dbg.value(metadata i32 undef, metadata !15456, metadata !DIExpression()) #24, !dbg !16342
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !16344, !srcloc !15462
  call void @llvm.dbg.value(metadata i32 1, metadata !16308, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.value(metadata i32 undef, metadata !16308, metadata !DIExpression()), !dbg !16316
  ret void, !dbg !16345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !16346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16348, metadata !DIExpression()), !dbg !16349
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16350
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !16351
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16352
  store %union.anon* null, %union.anon** %2, align 8, !dbg !16353
  ret void, !dbg !16354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !16355 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16357, metadata !DIExpression()), !dbg !16358
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16359
  %3 = load i8, i8* %2, align 1, !dbg !16360
  %4 = and i8 %3, -3, !dbg !16360
  store i8 %4, i8* %2, align 1, !dbg !16360
  ret void, !dbg !16361
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16362 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16364, metadata !DIExpression()), !dbg !16365
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16366
  br i1 %2, label %3, label %7, !dbg !16368

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15590, metadata !DIExpression()) #24, !dbg !16369
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16372
  %5 = load i8, i8* %4, align 1, !dbg !16373
  %6 = and i8 %5, 127, !dbg !16373
  store i8 %6, i8* %4, align 1, !dbg !16373
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15598, metadata !DIExpression()) #24, !dbg !16374
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16376
  br label %7, !dbg !16377

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16378
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16379
  %10 = zext i1 %9 to i32, !dbg !16379
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !16380
  ret void, !dbg !16381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !16382 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16384, metadata !DIExpression()), !dbg !16385
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16386
  %3 = load i8, i8* %2, align 1, !dbg !16387
  %4 = or i8 %3, 2, !dbg !16387
  store i8 %4, i8* %2, align 1, !dbg !16387
  ret void, !dbg !16388
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !16389 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16391, metadata !DIExpression()), !dbg !16395
  call void @llvm.dbg.value(metadata i32 0, metadata !16392, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16397
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16399, !srcloc !15436
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16399
  call void @llvm.dbg.value(metadata i32 %3, metadata !15433, metadata !DIExpression()) #24, !dbg !16401
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16401
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #24, !dbg !16397
  call void @llvm.dbg.value(metadata i32 %3, metadata !16394, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()), !dbg !16396
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16402
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #24, !dbg !16405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !16405
  call void @llvm.dbg.value(metadata i32 %3, metadata !15456, metadata !DIExpression()) #24, !dbg !16407
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16409, !srcloc !15462
  call void @llvm.dbg.value(metadata i32 1, metadata !16392, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()), !dbg !16396
  ret void, !dbg !16410
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16411 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16417, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata i32 %0, metadata !16415, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16416, metadata !DIExpression()), !dbg !16422
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16423
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16424
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16425
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16426
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16427
  call void @llvm.dbg.value(metadata i32 %6, metadata !16418, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata i32 0, metadata !16419, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16429
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16431, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 undef, metadata !15433, metadata !DIExpression()) #24, !dbg !16433
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16433
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #24, !dbg !16429
  call void @llvm.dbg.value(metadata i32 undef, metadata !16421, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i32 undef, metadata !16419, metadata !DIExpression()), !dbg !16428
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16434
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16438
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16439
  br i1 %10, label %11, label %12, !dbg !16440

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16441
  br label %12, !dbg !16443

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16431
  call void @llvm.dbg.value(metadata i32 %13, metadata !15433, metadata !DIExpression()) #24, !dbg !16433
  call void @llvm.dbg.value(metadata i32 %13, metadata !15427, metadata !DIExpression()) #24, !dbg !16429
  call void @llvm.dbg.value(metadata i32 %13, metadata !16421, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #24, !dbg !16444
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !16444
  call void @llvm.dbg.value(metadata i32 undef, metadata !15456, metadata !DIExpression()) #24, !dbg !16446
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !16448, !srcloc !15462
  call void @llvm.dbg.value(metadata i32 1, metadata !16419, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i32 undef, metadata !16419, metadata !DIExpression()), !dbg !16428
  ret i32 %6, !dbg !16449
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16450 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()), !dbg !16458
  call void @llvm.dbg.value(metadata i64 undef, metadata !16457, metadata !DIExpression()), !dbg !16458
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16454, metadata !DIExpression()), !dbg !16458
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16456, metadata !DIExpression()), !dbg !16458
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16459
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16460
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16461
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16463, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 undef, metadata !15433, metadata !DIExpression()) #24, !dbg !16465
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16465
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #24, !dbg !16461
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16466
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16467
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16032, metadata !DIExpression()) #24, !dbg !16468
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16037, metadata !DIExpression()) #24, !dbg !16468
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !16470
  ret i32 %9, !dbg !16471
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16472 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16476, metadata !DIExpression()), !dbg !16481
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16477, metadata !DIExpression()), !dbg !16481
  call void @llvm.dbg.value(metadata i32 0, metadata !16478, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16483
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16485, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 undef, metadata !15433, metadata !DIExpression()) #24, !dbg !16487
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16487
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #24, !dbg !16483
  call void @llvm.dbg.value(metadata i32 undef, metadata !16480, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16477, metadata !DIExpression()), !dbg !16481
  call void @llvm.dbg.value(metadata i32 undef, metadata !16478, metadata !DIExpression()), !dbg !16482
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16488
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16477, metadata !DIExpression()), !dbg !16481
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16491
  br i1 %5, label %7, label %6, !dbg !16493

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16494
  br label %7, !dbg !16496

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16485
  call void @llvm.dbg.value(metadata i32 %8, metadata !15433, metadata !DIExpression()) #24, !dbg !16487
  call void @llvm.dbg.value(metadata i32 %8, metadata !15427, metadata !DIExpression()) #24, !dbg !16483
  call void @llvm.dbg.value(metadata i32 %8, metadata !16480, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #24, !dbg !16497
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !16497
  call void @llvm.dbg.value(metadata i32 undef, metadata !15456, metadata !DIExpression()) #24, !dbg !16499
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !16501, !srcloc !15462
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16477, metadata !DIExpression()), !dbg !16481
  call void @llvm.dbg.value(metadata i32 undef, metadata !16478, metadata !DIExpression()), !dbg !16482
  ret %struct.k_thread* %4, !dbg !16502
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16503 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16505, metadata !DIExpression()), !dbg !16510
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16506, metadata !DIExpression()), !dbg !16510
  call void @llvm.dbg.value(metadata i32 0, metadata !16507, metadata !DIExpression()), !dbg !16511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16512
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16514, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 undef, metadata !15433, metadata !DIExpression()) #24, !dbg !16516
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16516
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #24, !dbg !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()), !dbg !16511
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16506, metadata !DIExpression()), !dbg !16510
  call void @llvm.dbg.value(metadata i32 undef, metadata !16507, metadata !DIExpression()), !dbg !16511
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16517
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16506, metadata !DIExpression()), !dbg !16510
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16520
  br i1 %5, label %8, label %6, !dbg !16522

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16523
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16525
  br label %8, !dbg !16526

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16514
  call void @llvm.dbg.value(metadata i32 %9, metadata !15433, metadata !DIExpression()) #24, !dbg !16516
  call void @llvm.dbg.value(metadata i32 %9, metadata !15427, metadata !DIExpression()) #24, !dbg !16512
  call void @llvm.dbg.value(metadata i32 %9, metadata !16509, metadata !DIExpression()), !dbg !16511
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #24, !dbg !16527
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !15456, metadata !DIExpression()) #24, !dbg !16529
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !16531, !srcloc !15462
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16506, metadata !DIExpression()), !dbg !16510
  call void @llvm.dbg.value(metadata i32 undef, metadata !16507, metadata !DIExpression()), !dbg !16511
  ret %struct.k_thread* %4, !dbg !16532
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16535, metadata !DIExpression()), !dbg !16536
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16391, metadata !DIExpression()) #24, !dbg !16537
  call void @llvm.dbg.value(metadata i32 0, metadata !16392, metadata !DIExpression()) #24, !dbg !16539
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16540
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16542, !srcloc !15436
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16542
  call void @llvm.dbg.value(metadata i32 %3, metadata !15433, metadata !DIExpression()) #24, !dbg !16544
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16544
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #24, !dbg !16540
  call void @llvm.dbg.value(metadata i32 %3, metadata !16394, metadata !DIExpression()) #24, !dbg !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()) #24, !dbg !16539
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !16545
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #24, !dbg !16546
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !16546
  call void @llvm.dbg.value(metadata i32 %3, metadata !15456, metadata !DIExpression()) #24, !dbg !16548
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16550, !srcloc !15462
  call void @llvm.dbg.value(metadata i32 1, metadata !16392, metadata !DIExpression()) #24, !dbg !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()) #24, !dbg !16539
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16551
  ret void, !dbg !16552
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16553 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16555, metadata !DIExpression()), !dbg !16561
  call void @llvm.dbg.value(metadata i32 %1, metadata !16556, metadata !DIExpression()), !dbg !16561
  call void @llvm.dbg.value(metadata i8 0, metadata !16557, metadata !DIExpression()), !dbg !16561
  call void @llvm.dbg.value(metadata i32 0, metadata !16558, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16563
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16565, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 undef, metadata !15433, metadata !DIExpression()) #24, !dbg !16567
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16567
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #24, !dbg !16563
  call void @llvm.dbg.value(metadata i32 undef, metadata !16560, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.value(metadata i8 poison, metadata !16557, metadata !DIExpression()), !dbg !16561
  call void @llvm.dbg.value(metadata i32 undef, metadata !16558, metadata !DIExpression()), !dbg !16562
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16568
  call void @llvm.dbg.value(metadata i1 %6, metadata !16557, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16561
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16571

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15590, metadata !DIExpression()) #24, !dbg !16572
  %11 = load i8, i8* %4, align 1, !dbg !16578
  %12 = and i8 %11, 127, !dbg !16578
  store i8 %12, i8* %4, align 1, !dbg !16578
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15598, metadata !DIExpression()) #24, !dbg !16579
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16581
  store i8 %9, i8* %8, align 2, !dbg !16582
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15607, metadata !DIExpression()) #24, !dbg !16583
  %13 = load i8, i8* %4, align 1, !dbg !16585
  %14 = or i8 %13, -128, !dbg !16585
  store i8 %14, i8* %4, align 1, !dbg !16585
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15614, metadata !DIExpression()) #24, !dbg !16586
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15621, metadata !DIExpression()) #24, !dbg !16588
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15627, metadata !DIExpression()) #24, !dbg !16588
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16590
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15628, metadata !DIExpression()) #24, !dbg !16588
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16591
  br i1 %16, label %26, label %17, !dbg !16590

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15628, metadata !DIExpression()) #24, !dbg !16588
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16592
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15628, metadata !DIExpression()) #24, !dbg !16588
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !16593
  %21 = icmp sgt i32 %20, 0, !dbg !16594
  br i1 %21, label %22, label %23, !dbg !16595

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !16596
  br label %27, !dbg !16597

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !16591
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15628, metadata !DIExpression()) #24, !dbg !16588
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16591
  br i1 %25, label %26, label %17, !dbg !16590, !llvm.loop !16598

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !16600
  br label %27, !dbg !16601

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16602
  br label %29, !dbg !16603

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16604
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16565
  call void @llvm.dbg.value(metadata i32 %30, metadata !15433, metadata !DIExpression()) #24, !dbg !16567
  call void @llvm.dbg.value(metadata i32 %30, metadata !15427, metadata !DIExpression()) #24, !dbg !16563
  call void @llvm.dbg.value(metadata i32 %30, metadata !16560, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #24, !dbg !16606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !16606
  call void @llvm.dbg.value(metadata i32 undef, metadata !15456, metadata !DIExpression()) #24, !dbg !16608
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !16610, !srcloc !15462
  call void @llvm.dbg.value(metadata i8 poison, metadata !16557, metadata !DIExpression()), !dbg !16561
  call void @llvm.dbg.value(metadata i32 undef, metadata !16558, metadata !DIExpression()), !dbg !16562
  ret i1 %6, !dbg !16611
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16612 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16616, metadata !DIExpression()), !dbg !16619
  call void @llvm.dbg.value(metadata i32 %1, metadata !16617, metadata !DIExpression()), !dbg !16619
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16620
  call void @llvm.dbg.value(metadata i1 %3, metadata !16618, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16619
  br i1 %3, label %4, label %12, !dbg !16621

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16623
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16624
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16624
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16624
  %9 = load i8, i8* %8, align 1, !dbg !16624
  %10 = icmp eq i8 %9, 0, !dbg !16625
  br i1 %10, label %11, label %12, !dbg !16626

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16627
  br label %12, !dbg !16629

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16630
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16631 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16633, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16637
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16639, !srcloc !15436
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16639
  call void @llvm.dbg.value(metadata i32 %2, metadata !15433, metadata !DIExpression()) #24, !dbg !16641
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16641
  call void @llvm.dbg.value(metadata i32 %2, metadata !15427, metadata !DIExpression()) #24, !dbg !16637
  call void @llvm.dbg.value(metadata i32 %2, metadata !16635, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata i32 undef, metadata !16633, metadata !DIExpression()), !dbg !16636
  tail call fastcc void @z_sched_lock() #26, !dbg !16642
  call void @llvm.dbg.value(metadata i32 %2, metadata !15448, metadata !DIExpression()) #24, !dbg !16645
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !16645
  call void @llvm.dbg.value(metadata i32 %2, metadata !15456, metadata !DIExpression()) #24, !dbg !16647
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !16649, !srcloc !15462
  call void @llvm.dbg.value(metadata i32 1, metadata !16633, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata i32 undef, metadata !16633, metadata !DIExpression()), !dbg !16636
  ret void, !dbg !16650
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16651 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16652
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16653
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16653
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16653
  %5 = load i8, i8* %4, align 1, !dbg !16654
  %6 = add i8 %5, -1, !dbg !16654
  store i8 %6, i8* %4, align 1, !dbg !16654
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16655, !srcloc !16657
  ret void, !dbg !16658
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16659 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16661, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16665
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16667, !srcloc !15436
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16667
  call void @llvm.dbg.value(metadata i32 %2, metadata !15433, metadata !DIExpression()) #24, !dbg !16669
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16669
  call void @llvm.dbg.value(metadata i32 %2, metadata !15427, metadata !DIExpression()) #24, !dbg !16665
  call void @llvm.dbg.value(metadata i32 %2, metadata !16663, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i32 undef, metadata !16661, metadata !DIExpression()), !dbg !16664
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16670
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16673
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16673
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16673
  %7 = load i8, i8* %6, align 1, !dbg !16674
  %8 = add i8 %7, 1, !dbg !16674
  store i8 %8, i8* %6, align 1, !dbg !16674
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16675
  call void @llvm.dbg.value(metadata i32 %2, metadata !15448, metadata !DIExpression()) #24, !dbg !16676
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !16676
  call void @llvm.dbg.value(metadata i32 %2, metadata !15456, metadata !DIExpression()) #24, !dbg !16678
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !16680, !srcloc !15462
  call void @llvm.dbg.value(metadata i32 1, metadata !16661, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i32 undef, metadata !16661, metadata !DIExpression()), !dbg !16664
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16681
  ret void, !dbg !16682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !16683 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16684
  ret %struct.k_thread* %1, !dbg !16685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !16686 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16690, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16691, metadata !DIExpression()), !dbg !16695
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16696
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16692, metadata !DIExpression()), !dbg !16695
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16697
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16693, metadata !DIExpression()), !dbg !16695
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16698
  call void @llvm.dbg.value(metadata i32 %5, metadata !16694, metadata !DIExpression()), !dbg !16695
  %6 = icmp sgt i32 %5, 0, !dbg !16699
  br i1 %6, label %17, label %7, !dbg !16701

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16702
  br i1 %8, label %17, label %9, !dbg !16704

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16705
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16705
  %12 = load i32, i32* %11, align 8, !dbg !16705
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16707
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16707
  %15 = load i32, i32* %14, align 8, !dbg !16707
  %16 = icmp ult i32 %12, %15, !dbg !16708
  br label %17, !dbg !16709

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16710
  ret i1 %18, !dbg !16711
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16712 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16729, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16730, metadata !DIExpression()), !dbg !16744
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16745
  %5 = load i32, i32* %4, align 4, !dbg !16746
  %6 = add nsw i32 %5, 1, !dbg !16746
  store i32 %6, i32* %4, align 4, !dbg !16746
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16747
  store i32 %5, i32* %7, align 8, !dbg !16748
  %8 = load i32, i32* %4, align 4, !dbg !16749
  %9 = icmp eq i32 %8, 0, !dbg !16750
  br i1 %9, label %10, label %32, !dbg !16751

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16752
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16752
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16732, metadata !DIExpression()), !dbg !16752
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16752
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16752
  %14 = load i32, i32* %13, align 4, !dbg !16752
  %15 = shl i32 %14, 2, !dbg !16752
  %16 = alloca i8, i32 %15, align 8, !dbg !16752
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16752
  store i8* %16, i8** %17, align 4, !dbg !16752
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16752
  %19 = alloca i8, i32 %14, align 8, !dbg !16752
  store i8* %19, i8** %18, align 4, !dbg !16752
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16752
  store i32 -1, i32* %20, align 4, !dbg !16752
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16753
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16741, metadata !DIExpression()), !dbg !16754
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16731, metadata !DIExpression()), !dbg !16744
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16755
  br i1 %22, label %23, label %24, !dbg !16752

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16755
  br label %32, !dbg !16756

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16731, metadata !DIExpression()), !dbg !16744
  %26 = load i32, i32* %4, align 4, !dbg !16757
  %27 = add nsw i32 %26, 1, !dbg !16757
  store i32 %27, i32* %4, align 4, !dbg !16757
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16759
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16759
  store i32 %26, i32* %29, align 8, !dbg !16760
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16753
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16741, metadata !DIExpression()), !dbg !16754
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16731, metadata !DIExpression()), !dbg !16744
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16755
  br i1 %31, label %23, label %24, !dbg !16752, !llvm.loop !16761

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16763
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16764
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16765
  ret void, !dbg !16766
}

; Function Attrs: optsize
declare !dbg !16767 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16772 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16775 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16777, metadata !DIExpression()), !dbg !16779
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16778, metadata !DIExpression()), !dbg !16779
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16780
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16781
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16782
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16783
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16783
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16785
  br i1 %7, label %8, label %10, !dbg !16786

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16787
  store i32 0, i32* %9, align 4, !dbg !16789
  br label %10, !dbg !16790

10:                                               ; preds = %8, %2
  ret void, !dbg !16791
}

; Function Attrs: optsize
declare !dbg !16792 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16793 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16797, metadata !DIExpression()), !dbg !16800
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16798, metadata !DIExpression()), !dbg !16800
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16801
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16802
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16799, metadata !DIExpression()), !dbg !16800
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16798, metadata !DIExpression()), !dbg !16800
  ret %struct.k_thread* %4, !dbg !16803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16804 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16808, metadata !DIExpression()), !dbg !16809
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16810
  ret %struct.rbnode* %2, !dbg !16811
}

; Function Attrs: optsize
declare !dbg !16812 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16815 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16827, metadata !DIExpression()), !dbg !16831
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16832
  %3 = load i32, i32* %2, align 4, !dbg !16832
  %4 = icmp eq i32 %3, 0, !dbg !16834
  br i1 %4, label %10, label %5, !dbg !16835

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16828, metadata !DIExpression()), !dbg !16831
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16836, !range !3947
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16837
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16829, metadata !DIExpression()), !dbg !16831
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !16838
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16830, metadata !DIExpression()), !dbg !16831
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16828, metadata !DIExpression()), !dbg !16831
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16831
  ret %struct.k_thread* %11, !dbg !16839
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16840 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16844, metadata !DIExpression()), !dbg !16847
  call void @llvm.dbg.value(metadata i32 0, metadata !16845, metadata !DIExpression()), !dbg !16847
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16848
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16846, metadata !DIExpression()), !dbg !16847
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16849
  br i1 %3, label %8, label %4, !dbg !16850

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16851
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16853
  call void @llvm.dbg.value(metadata i32 1, metadata !16845, metadata !DIExpression()), !dbg !16847
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16848
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16846, metadata !DIExpression()), !dbg !16847
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16849
  br i1 %7, label %8, label %4, !dbg !16850, !llvm.loop !16854

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16847
  ret i32 %9, !dbg !16856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !16857 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16859, metadata !DIExpression()), !dbg !16860
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16861
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !16862
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16863
  ret %struct.k_thread* %4, !dbg !16864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !16865 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16874, metadata !DIExpression()), !dbg !16875
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16876
  tail call fastcc void @sys_dlist_init.174(%struct._dnode* noundef nonnull %2) #26, !dbg !16877
  ret void, !dbg !16878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.174(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16879 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16883, metadata !DIExpression()), !dbg !16884
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16885
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16886
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16887
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16888
  ret void, !dbg !16889
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16890 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16891
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16892
  ret void, !dbg !16893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !16894 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16899, metadata !DIExpression()), !dbg !16900
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16901
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16901
  %4 = load i8, i8* %3, align 2, !dbg !16901
  %5 = sext i8 %4 to i32, !dbg !16902
  ret i32 %5, !dbg !16903
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16904 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16908, metadata !DIExpression()), !dbg !16911
  call void @llvm.dbg.value(metadata i32 %1, metadata !16909, metadata !DIExpression()), !dbg !16911
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16910, metadata !DIExpression()), !dbg !16911
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16912
  ret void, !dbg !16913
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16914 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16915
  br i1 %1, label %8, label %2, !dbg !16916

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16917
  br i1 %3, label %8, label %4, !dbg !16918

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16919
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16920
  %7 = xor i1 %6, true, !dbg !16918
  br label %8, !dbg !16918

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !16922 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16923, !range !7249
  %2 = icmp eq i8 %1, 0, !dbg !16923
  ret i1 %2, !dbg !16924
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16925 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !16928
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16930, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 undef, metadata !15433, metadata !DIExpression()) #24, !dbg !16932
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !16932
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #24, !dbg !16928
  call void @llvm.dbg.value(metadata i32 undef, metadata !16927, metadata !DIExpression()), !dbg !16933
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16934
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15590, metadata !DIExpression()) #24, !dbg !16937
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16939
  %4 = load i8, i8* %3, align 1, !dbg !16940
  %5 = and i8 %4, 127, !dbg !16940
  store i8 %5, i8* %3, align 1, !dbg !16940
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15598, metadata !DIExpression()) #24, !dbg !16941
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16943
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16944
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15607, metadata !DIExpression()) #24, !dbg !16945
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16947
  %8 = load i8, i8* %7, align 1, !dbg !16948
  %9 = or i8 %8, -128, !dbg !16948
  store i8 %9, i8* %7, align 1, !dbg !16948
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15614, metadata !DIExpression()) #24, !dbg !16949
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15621, metadata !DIExpression()) #24, !dbg !16951
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15627, metadata !DIExpression()) #24, !dbg !16951
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16953
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15628, metadata !DIExpression()) #24, !dbg !16951
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16954
  br i1 %11, label %22, label %12, !dbg !16953

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15628, metadata !DIExpression()) #24, !dbg !16951
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16955
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15628, metadata !DIExpression()) #24, !dbg !16951
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16956
  %16 = icmp sgt i32 %15, 0, !dbg !16957
  br i1 %16, label %17, label %19, !dbg !16958

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16959
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16960
  br label %24, !dbg !16961

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16954
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15628, metadata !DIExpression()) #24, !dbg !16951
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16954
  br i1 %21, label %22, label %12, !dbg !16953, !llvm.loop !16962

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16964
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16965
  br label %24, !dbg !16966

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16930
  call void @llvm.dbg.value(metadata i32 %25, metadata !15433, metadata !DIExpression()) #24, !dbg !16932
  call void @llvm.dbg.value(metadata i32 %25, metadata !15427, metadata !DIExpression()) #24, !dbg !16928
  call void @llvm.dbg.value(metadata i32 %25, metadata !16927, metadata !DIExpression()), !dbg !16933
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16967
  call void @llvm.dbg.value(metadata i32 undef, metadata !16032, metadata !DIExpression()) #24, !dbg !16968
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16037, metadata !DIExpression()) #24, !dbg !16968
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16970
  ret void, !dbg !16971
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16972 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16976, metadata !DIExpression()), !dbg !16979
  %3 = icmp eq i64 %2, -1, !dbg !16980
  br i1 %3, label %4, label %6, !dbg !16982

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16983
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !16985
  br label %11, !dbg !16986

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16977, metadata !DIExpression()), !dbg !16979
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !16987
  %8 = sext i32 %7 to i64, !dbg !16987
  call void @llvm.dbg.value(metadata i64 %8, metadata !16977, metadata !DIExpression()), !dbg !16979
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !16988
  %10 = trunc i64 %9 to i32, !dbg !16988
  call void @llvm.dbg.value(metadata i32 %10, metadata !16978, metadata !DIExpression()), !dbg !16979
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16979
  ret i32 %12, !dbg !16989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16990 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16994, metadata !DIExpression()), !dbg !16995
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16996, !srcloc !16998
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !16999
  ret void, !dbg !17000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17001 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17005, metadata !DIExpression()), !dbg !17009
  %2 = icmp eq i64 %0, 0, !dbg !17010
  br i1 %2, label %3, label %4, !dbg !17012

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17013
  br label %29, !dbg !17015

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17007, metadata !DIExpression()), !dbg !17009
  %5 = icmp sgt i64 %0, -3, !dbg !17016
  br i1 %5, label %6, label %10, !dbg !17018

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !17019
  %8 = trunc i64 %0 to i32, !dbg !17021
  %9 = add i32 %7, %8, !dbg !17021
  call void @llvm.dbg.value(metadata i32 %9, metadata !17006, metadata !DIExpression()), !dbg !17009
  br label %13, !dbg !17022

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17023
  %12 = sub i32 -2, %11, !dbg !17023
  call void @llvm.dbg.value(metadata i32 %12, metadata !17006, metadata !DIExpression()), !dbg !17009
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17025
  call void @llvm.dbg.value(metadata i32 %14, metadata !17006, metadata !DIExpression()), !dbg !17009
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !17026
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17028, !srcloc !15436
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17028
  call void @llvm.dbg.value(metadata i32 %16, metadata !15433, metadata !DIExpression()) #24, !dbg !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !17030
  call void @llvm.dbg.value(metadata i32 %16, metadata !15427, metadata !DIExpression()) #24, !dbg !17026
  call void @llvm.dbg.value(metadata i32 %16, metadata !17008, metadata !DIExpression()), !dbg !17009
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17031
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17032
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17033
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17034
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17035
  tail call fastcc void @z_add_thread_timeout.163(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17035
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17036
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17037
  call void @llvm.dbg.value(metadata i32 %16, metadata !16032, metadata !DIExpression()) #24, !dbg !17038
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16037, metadata !DIExpression()) #24, !dbg !17038
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !17040
  %22 = zext i32 %14 to i64, !dbg !17041
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !17042
  %24 = zext i32 %23 to i64, !dbg !17042
  %25 = sub nsw i64 %22, %24, !dbg !17043
  call void @llvm.dbg.value(metadata i64 %25, metadata !17005, metadata !DIExpression()), !dbg !17009
  %26 = icmp sgt i64 %25, 0, !dbg !17044
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17044
  %28 = trunc i64 %27 to i32, !dbg !17044
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17009
  ret i32 %30, !dbg !17045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !17046 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17048, metadata !DIExpression()), !dbg !17049
  call void @llvm.dbg.value(metadata i64 %0, metadata !15468, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i32 10000, metadata !15471, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i32 1000, metadata !15472, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i8 1, metadata !15473, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i1 false, metadata !15474, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17050
  call void @llvm.dbg.value(metadata i1 false, metadata !15475, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17050
  call void @llvm.dbg.value(metadata i8 0, metadata !15476, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i1 false, metadata !15477, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17050
  call void @llvm.dbg.value(metadata i1 true, metadata !15478, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17050
  call void @llvm.dbg.value(metadata i64 0, metadata !15479, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i64 0, metadata !15479, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i64 %0, metadata !15468, metadata !DIExpression()), !dbg !17050
  %2 = udiv i64 %0, 10, !dbg !17052
  ret i64 %2, !dbg !17056
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17057 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !17058, !srcloc !17060
  tail call void @z_impl_k_yield() #26, !dbg !17061
  ret void, !dbg !17062
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17067, metadata !DIExpression()), !dbg !17069
  %2 = sext i32 %0 to i64, !dbg !17070
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17071
  call void @llvm.dbg.value(metadata i64 %3, metadata !17068, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17069
  %4 = shl i64 %3, 32, !dbg !17072
  %5 = ashr exact i64 %4, 32, !dbg !17072
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17073
  call void @llvm.dbg.value(metadata i32 %6, metadata !17068, metadata !DIExpression()), !dbg !17069
  %7 = sext i32 %6 to i64, !dbg !17074
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17075
  %9 = trunc i64 %8 to i32, !dbg !17075
  ret i32 %9, !dbg !17076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !17077 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17079, metadata !DIExpression()), !dbg !17080
  call void @llvm.dbg.value(metadata i64 %0, metadata !15468, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15471, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i32 10000, metadata !15472, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i8 1, metadata !15473, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i1 false, metadata !15474, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17081
  call void @llvm.dbg.value(metadata i1 true, metadata !15475, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17081
  call void @llvm.dbg.value(metadata i8 0, metadata !15476, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i1 false, metadata !15477, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17081
  call void @llvm.dbg.value(metadata i1 true, metadata !15478, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17081
  call void @llvm.dbg.value(metadata i64 0, metadata !15479, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i64 0, metadata !15479, metadata !DIExpression()), !dbg !17081
  %2 = add i64 %0, 99, !dbg !17083
  call void @llvm.dbg.value(metadata i64 %2, metadata !15468, metadata !DIExpression()), !dbg !17081
  %3 = udiv i64 %2, 100, !dbg !17084
  ret i64 %3, !dbg !17085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !17086 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17088, metadata !DIExpression()), !dbg !17089
  call void @llvm.dbg.value(metadata i64 %0, metadata !15468, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i32 10000, metadata !15471, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15472, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i8 1, metadata !15473, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i1 false, metadata !15474, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17090
  call void @llvm.dbg.value(metadata i1 false, metadata !15475, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17090
  call void @llvm.dbg.value(metadata i8 0, metadata !15476, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i1 true, metadata !15477, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17090
  call void @llvm.dbg.value(metadata i1 false, metadata !15478, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17090
  call void @llvm.dbg.value(metadata i64 0, metadata !15479, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i64 0, metadata !15479, metadata !DIExpression()), !dbg !17090
  %2 = mul i64 %0, 100, !dbg !17092
  ret i64 %2, !dbg !17094
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17095 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17097, metadata !DIExpression()), !dbg !17098
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17099
  br i1 %2, label %14, label %3, !dbg !17101

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17102
  %5 = icmp slt i32 %4, 0, !dbg !17104
  br i1 %5, label %6, label %10, !dbg !17105

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17106
  %8 = load i8, i8* %7, align 1, !dbg !17106
  %9 = icmp eq i8 %8, 16, !dbg !17109
  br i1 %9, label %10, label %14, !dbg !17110

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17111
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17112
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !17113, !srcloc !16072
  call void @llvm.dbg.value(metadata i32 %11, metadata !16068, metadata !DIExpression()) #24, !dbg !17117
  %12 = icmp eq i32 %11, 0, !dbg !17118
  br i1 %12, label %13, label %14, !dbg !17119

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17120
  br label %14, !dbg !17122

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17124 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17126, metadata !DIExpression()), !dbg !17127
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17128
  %3 = load i8, i8* %2, align 1, !dbg !17128
  %4 = and i8 %3, 2, !dbg !17129
  %5 = icmp ne i8 %4, 0, !dbg !17130
  ret i1 %5, !dbg !17131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !17132 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17137
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17136, metadata !DIExpression()), !dbg !17138
  ret %struct.k_thread* %1, !dbg !17139
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17140 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !17141, !srcloc !16072
  call void @llvm.dbg.value(metadata i32 %1, metadata !16068, metadata !DIExpression()) #24, !dbg !17144
  %2 = icmp eq i32 %1, 0, !dbg !17145
  br i1 %2, label %3, label %8, !dbg !17146

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17147
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17148
  %6 = icmp ne i32 %5, 0, !dbg !17146
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17149
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17150 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17152, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !17155
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17157, !srcloc !15436
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17157
  call void @llvm.dbg.value(metadata i32 %3, metadata !15433, metadata !DIExpression()) #24, !dbg !17159
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !17159
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #24, !dbg !17155
  call void @llvm.dbg.value(metadata i32 %3, metadata !17153, metadata !DIExpression()), !dbg !17154
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17160
  %5 = load i8, i8* %4, align 4, !dbg !17160
  %6 = and i8 %5, 1, !dbg !17162
  %7 = icmp eq i8 %6, 0, !dbg !17163
  br i1 %7, label %9, label %8, !dbg !17164

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #24, !dbg !17165
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !17165
  call void @llvm.dbg.value(metadata i32 %3, metadata !15456, metadata !DIExpression()) #24, !dbg !17168
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17170, !srcloc !15462
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !17171, !srcloc !17173
  br label %24, !dbg !17174

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17175
  %11 = load i8, i8* %10, align 1, !dbg !17175
  %12 = and i8 %11, 8, !dbg !17177
  %13 = icmp eq i8 %12, 0, !dbg !17178
  br i1 %13, label %15, label %14, !dbg !17179

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #24, !dbg !17180
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !17180
  call void @llvm.dbg.value(metadata i32 %3, metadata !15456, metadata !DIExpression()) #24, !dbg !17183
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17185, !srcloc !15462
  br label %24, !dbg !17186

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17187
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17188
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17190
  br i1 %17, label %18, label %23, !dbg !17191

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !17192, !srcloc !16072
  call void @llvm.dbg.value(metadata i32 %19, metadata !16068, metadata !DIExpression()) #24, !dbg !17195
  %20 = icmp eq i32 %19, 0, !dbg !17196
  br i1 %20, label %21, label %23, !dbg !17197

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16032, metadata !DIExpression()) #24, !dbg !17198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16037, metadata !DIExpression()) #24, !dbg !17198
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !17201
  br label %23, !dbg !17202

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #24, !dbg !17203
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !17203
  call void @llvm.dbg.value(metadata i32 %3, metadata !15456, metadata !DIExpression()) #24, !dbg !17205
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17207, !srcloc !15462
  br label %24, !dbg !17208

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17208
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17211, metadata !DIExpression()), !dbg !17212
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17213
  %3 = load i8, i8* %2, align 1, !dbg !17213
  %4 = and i8 %3, 8, !dbg !17215
  %5 = icmp eq i8 %4, 0, !dbg !17216
  br i1 %5, label %6, label %20, !dbg !17217

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17218
  %8 = or i8 %7, 8, !dbg !17218
  store i8 %8, i8* %2, align 1, !dbg !17218
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17220
  br i1 %9, label %10, label %12, !dbg !17222

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15590, metadata !DIExpression()) #24, !dbg !17223
  %11 = and i8 %8, 95, !dbg !17226
  store i8 %11, i8* %2, align 1, !dbg !17226
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15598, metadata !DIExpression()) #24, !dbg !17227
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !17229
  br label %12, !dbg !17230

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17231
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !17231
  %15 = icmp eq %union.anon* %14, null, !dbg !17233
  br i1 %15, label %17, label %16, !dbg !17234

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17235
  br label %17, !dbg !17237

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17238
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17239
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !17240
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17241
  br label %20, !dbg !17242

20:                                               ; preds = %17, %1
  ret void, !dbg !17243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !17244 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17248, metadata !DIExpression()), !dbg !17250
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17251
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17249, metadata !DIExpression()), !dbg !17250
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17252
  br i1 %3, label %10, label %4, !dbg !17253

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17254
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17256
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17257, metadata !DIExpression()), !dbg !17263
  call void @llvm.dbg.value(metadata i32 0, metadata !17262, metadata !DIExpression()), !dbg !17263
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17265
  store i32 0, i32* %7, align 4, !dbg !17266
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17267
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17251
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17249, metadata !DIExpression()), !dbg !17250
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17252
  br i1 %9, label %10, label %4, !dbg !17253, !llvm.loop !17268

10:                                               ; preds = %4, %1
  ret void, !dbg !17270
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17271 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17276, metadata !DIExpression()), !dbg !17279
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17275, metadata !DIExpression()), !dbg !17279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !17280
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17282, !srcloc !15436
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17282
  call void @llvm.dbg.value(metadata i32 %4, metadata !15433, metadata !DIExpression()) #24, !dbg !17284
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !17284
  call void @llvm.dbg.value(metadata i32 %4, metadata !15427, metadata !DIExpression()) #24, !dbg !17280
  call void @llvm.dbg.value(metadata i32 %4, metadata !17277, metadata !DIExpression()), !dbg !17279
  call void @llvm.dbg.value(metadata i32 0, metadata !17278, metadata !DIExpression()), !dbg !17279
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17285
  %6 = load i8, i8* %5, align 1, !dbg !17285
  %7 = and i8 %6, 8, !dbg !17287
  %8 = icmp eq i8 %7, 0, !dbg !17288
  br i1 %8, label %9, label %24, !dbg !17289

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17276, metadata !DIExpression()), !dbg !17279
  %11 = icmp eq i64 %10, 0, !dbg !17290
  br i1 %11, label %24, label %12, !dbg !17292

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17293
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17295
  br i1 %14, label %24, label %15, !dbg !17296

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17297
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !17297
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17298
  %19 = icmp eq %union.anon* %17, %18, !dbg !17299
  br i1 %19, label %24, label %20, !dbg !17300

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17301
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !17303
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17304
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17305
  call void @llvm.dbg.value(metadata i32 %4, metadata !16032, metadata !DIExpression()) #24, !dbg !17306
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16037, metadata !DIExpression()) #24, !dbg !17306
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !17308
  call void @llvm.dbg.value(metadata i32 %23, metadata !17278, metadata !DIExpression()), !dbg !17279
  br label %26, !dbg !17309

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17310
  call void @llvm.dbg.value(metadata i32 %25, metadata !17278, metadata !DIExpression()), !dbg !17279
  call void @llvm.dbg.value(metadata i32 %4, metadata !15448, metadata !DIExpression()) #24, !dbg !17311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !17311
  call void @llvm.dbg.value(metadata i32 %4, metadata !15456, metadata !DIExpression()) #24, !dbg !17313
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !17315, !srcloc !15462
  br label %26, !dbg !17316

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17279
  ret i32 %27, !dbg !17317
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17318 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17322, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 %1, metadata !17323, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i8* %2, metadata !17324, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i8 0, metadata !17326, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 0, metadata !17327, metadata !DIExpression()), !dbg !17331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15421, metadata !DIExpression()) #24, !dbg !17332
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17334, !srcloc !15436
  call void @llvm.dbg.value(metadata i32 undef, metadata !15433, metadata !DIExpression()) #24, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()) #24, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #24, !dbg !17332
  call void @llvm.dbg.value(metadata i32 undef, metadata !17329, metadata !DIExpression()), !dbg !17331
  call void @llvm.dbg.value(metadata i8 poison, metadata !17326, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !17327, metadata !DIExpression()), !dbg !17331
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !17337
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17325, metadata !DIExpression()), !dbg !17330
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17340
  br i1 %7, label %12, label %8, !dbg !17342

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17343, metadata !DIExpression()), !dbg !17351
  call void @llvm.dbg.value(metadata i32 %1, metadata !17349, metadata !DIExpression()), !dbg !17351
  call void @llvm.dbg.value(metadata i8* %2, metadata !17350, metadata !DIExpression()), !dbg !17351
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17257, metadata !DIExpression()), !dbg !17354
  call void @llvm.dbg.value(metadata i32 %1, metadata !17262, metadata !DIExpression()), !dbg !17354
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17356
  store i32 %1, i32* %9, align 4, !dbg !17357
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17358
  store i8* %2, i8** %10, align 4, !dbg !17359
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17360
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17361
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !17362
  call void @llvm.dbg.value(metadata i8 1, metadata !17326, metadata !DIExpression()), !dbg !17330
  br label %12, !dbg !17363

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17334
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17334
  call void @llvm.dbg.value(metadata i32 %14, metadata !15433, metadata !DIExpression()) #24, !dbg !17336
  call void @llvm.dbg.value(metadata i32 %14, metadata !15427, metadata !DIExpression()) #24, !dbg !17332
  call void @llvm.dbg.value(metadata i32 %14, metadata !17329, metadata !DIExpression()), !dbg !17331
  call void @llvm.dbg.value(metadata i8 poison, metadata !17326, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #24, !dbg !17364
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15453, metadata !DIExpression()) #24, !dbg !17364
  call void @llvm.dbg.value(metadata i32 undef, metadata !15456, metadata !DIExpression()) #24, !dbg !17366
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !17368, !srcloc !15462
  call void @llvm.dbg.value(metadata i32 undef, metadata !17327, metadata !DIExpression()), !dbg !17331
  ret i1 %13, !dbg !17369
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17370 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17376, metadata !DIExpression()), !dbg !17381
  call void @llvm.dbg.value(metadata i64 undef, metadata !17378, metadata !DIExpression()), !dbg !17381
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17375, metadata !DIExpression()), !dbg !17381
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17377, metadata !DIExpression()), !dbg !17381
  call void @llvm.dbg.value(metadata i8** %4, metadata !17379, metadata !DIExpression()), !dbg !17381
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !17382
  call void @llvm.dbg.value(metadata i32 %6, metadata !17380, metadata !DIExpression()), !dbg !17381
  %7 = icmp eq i8** %4, null, !dbg !17383
  br i1 %7, label %12, label %8, !dbg !17385

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17386
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17388
  %11 = load i8*, i8** %10, align 4, !dbg !17388
  store i8* %11, i8** %4, align 4, !dbg !17389
  br label %12, !dbg !17390

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17391
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17392 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !17394
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !17395
  ret void, !dbg !17396
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17397 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17407, metadata !DIExpression()), !dbg !17424
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17405, metadata !DIExpression()), !dbg !17424
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17406, metadata !DIExpression()), !dbg !17424
  %5 = icmp eq i64 %4, -1, !dbg !17425
  br i1 %5, label %55, label %6, !dbg !17427

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17428
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17429
  call void @llvm.dbg.value(metadata i32 0, metadata !17408, metadata !DIExpression()), !dbg !17430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17431, metadata !DIExpression()) #24, !dbg !17438
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17440, !srcloc !17446
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17440
  call void @llvm.dbg.value(metadata i32 %9, metadata !17443, metadata !DIExpression()) #24, !dbg !17447
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()) #24, !dbg !17447
  call void @llvm.dbg.value(metadata i32 %9, metadata !17437, metadata !DIExpression()) #24, !dbg !17438
  call void @llvm.dbg.value(metadata i32 %9, metadata !17414, metadata !DIExpression()), !dbg !17430
  call void @llvm.dbg.value(metadata i32 undef, metadata !17408, metadata !DIExpression()), !dbg !17430
  %10 = icmp slt i64 %4, -1, !dbg !17448
  br i1 %10, label %11, label %17, !dbg !17449

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17450
  %13 = add i64 %4, %12, !dbg !17451
  %14 = sub i64 -2, %13, !dbg !17451
  call void @llvm.dbg.value(metadata i64 %14, metadata !17418, metadata !DIExpression()), !dbg !17452
  %15 = icmp sgt i64 %14, 1, !dbg !17453
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17453
  br label %22, !dbg !17454

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17455
  %19 = tail call fastcc i32 @elapsed.187() #26, !dbg !17457
  %20 = sext i32 %19 to i64, !dbg !17457
  %21 = add nsw i64 %18, %20, !dbg !17458
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17459
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17460
  store i64 %23, i64* %24, align 8, !dbg !17461
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !17462
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17415, metadata !DIExpression()), !dbg !17464
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17465
  br i1 %26, label %42, label %27, !dbg !17465

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17466
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17415, metadata !DIExpression()), !dbg !17464
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17470
  %31 = load i64, i64* %30, align 8, !dbg !17470
  %32 = icmp slt i64 %28, %31, !dbg !17471
  br i1 %32, label %33, label %38, !dbg !17472

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17470
  %35 = sub nsw i64 %31, %28, !dbg !17473
  store i64 %35, i64* %34, align 8, !dbg !17473
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17475
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17476
  tail call fastcc void @sys_dlist_insert.188(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !17477
  br label %44, !dbg !17478

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17479
  store i64 %39, i64* %24, align 8, !dbg !17479
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !17480
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17415, metadata !DIExpression()), !dbg !17464
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17465
  br i1 %41, label %42, label %27, !dbg !17465, !llvm.loop !17481

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17483
  tail call fastcc void @sys_dlist_append.189(%struct._dnode* noundef %43) #26, !dbg !17486
  br label %44, !dbg !17487

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !17488
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17489
  br i1 %46, label %47, label %54, !dbg !17490

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !17491
  call void @llvm.dbg.value(metadata i32 %48, metadata !17421, metadata !DIExpression()), !dbg !17492
  %49 = icmp ne i32 %48, 0, !dbg !17493
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17495
  br i1 %52, label %54, label %53, !dbg !17495

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !17496
  br label %54, !dbg !17498

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17499, metadata !DIExpression()) #24, !dbg !17505
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17504, metadata !DIExpression()) #24, !dbg !17505
  call void @llvm.dbg.value(metadata i32 %9, metadata !17507, metadata !DIExpression()) #24, !dbg !17510
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !17512, !srcloc !17513
  call void @llvm.dbg.value(metadata i32 undef, metadata !17408, metadata !DIExpression()), !dbg !17430
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17514
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.187() unnamed_addr #1 !dbg !17515 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17518
  %2 = icmp eq i32 %1, 0, !dbg !17519
  br i1 %2, label %3, label %5, !dbg !17518

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !17520
  br label %5, !dbg !17518

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17518
  ret i32 %6, !dbg !17521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !17522 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.192() #26, !dbg !17528
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17526, metadata !DIExpression()), !dbg !17529
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17530
  ret %struct._timeout* %2, !dbg !17531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.188(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !17532 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17536, metadata !DIExpression()), !dbg !17540
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17537, metadata !DIExpression()), !dbg !17540
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17541
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17541
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17538, metadata !DIExpression()), !dbg !17540
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17542
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17543
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17544
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17545
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17546
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17547
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17548
  ret void, !dbg !17549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !17550 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17554, metadata !DIExpression()), !dbg !17556
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17557
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.190(%struct._dnode* noundef %2) #26, !dbg !17558
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17555, metadata !DIExpression()), !dbg !17556
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17559
  ret %struct._timeout* %4, !dbg !17560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.189(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !17561 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17566, metadata !DIExpression()), !dbg !17569
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17567, metadata !DIExpression()), !dbg !17569
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17570
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17568, metadata !DIExpression()), !dbg !17569
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17571
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17572
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17573
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17574
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17575
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17576
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17577
  ret void, !dbg !17578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17579 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !17584
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17581, metadata !DIExpression()), !dbg !17585
  %2 = tail call fastcc i32 @elapsed.187() #26, !dbg !17586
  call void @llvm.dbg.value(metadata i32 %2, metadata !17582, metadata !DIExpression()), !dbg !17585
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17587
  br i1 %3, label %14, label %4, !dbg !17589

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17590
  %6 = load i64, i64* %5, align 8, !dbg !17590
  %7 = sext i32 %2 to i64, !dbg !17591
  %8 = sub nsw i64 %6, %7, !dbg !17592
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17593
  br i1 %9, label %14, label %10, !dbg !17594

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17595
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17595
  %13 = trunc i64 %12 to i32, !dbg !17595
  call void @llvm.dbg.value(metadata i32 %13, metadata !17583, metadata !DIExpression()), !dbg !17585
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17597
  call void @llvm.dbg.value(metadata i32 %15, metadata !17583, metadata !DIExpression()), !dbg !17585
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17598
  %17 = icmp ne i32 %16, 0, !dbg !17600
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17601
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17601
  call void @llvm.dbg.value(metadata i32 %20, metadata !17583, metadata !DIExpression()), !dbg !17585
  ret i32 %20, !dbg !17602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.190(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !17603 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17607, metadata !DIExpression()), !dbg !17609
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17608, metadata !DIExpression()), !dbg !17609
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17610
  br i1 %2, label %5, label %3, !dbg !17611

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.191(%struct._dnode* noundef nonnull %0) #26, !dbg !17612
  br label %5, !dbg !17611

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17611
  ret %struct._dnode* %6, !dbg !17613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.191(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !17614 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17616, metadata !DIExpression()), !dbg !17618
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17617, metadata !DIExpression()), !dbg !17618
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17619
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17620
  br i1 %3, label %7, label %4, !dbg !17621

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17622
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17622
  br label %7, !dbg !17621

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17621
  ret %struct._dnode* %8, !dbg !17623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.192() unnamed_addr #5 !dbg !17624 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17628, metadata !DIExpression()), !dbg !17629
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.193() #26, !dbg !17630
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17630
  ret %struct._dnode* %3, !dbg !17631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.193() unnamed_addr #5 !dbg !17632 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17636, metadata !DIExpression()), !dbg !17637
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17638
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17639
  ret i1 %2, !dbg !17640
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17641 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17645, metadata !DIExpression()), !dbg !17650
  call void @llvm.dbg.value(metadata i32 -22, metadata !17646, metadata !DIExpression()), !dbg !17650
  call void @llvm.dbg.value(metadata i32 0, metadata !17647, metadata !DIExpression()), !dbg !17651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17431, metadata !DIExpression()) #24, !dbg !17652
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17654, !srcloc !17446
  call void @llvm.dbg.value(metadata i32 undef, metadata !17443, metadata !DIExpression()) #24, !dbg !17656
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()) #24, !dbg !17656
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()) #24, !dbg !17652
  call void @llvm.dbg.value(metadata i32 undef, metadata !17649, metadata !DIExpression()), !dbg !17651
  call void @llvm.dbg.value(metadata i32 -22, metadata !17646, metadata !DIExpression()), !dbg !17650
  call void @llvm.dbg.value(metadata i32 undef, metadata !17647, metadata !DIExpression()), !dbg !17651
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17646, metadata !DIExpression()), !dbg !17650
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.196(%struct._dnode* noundef %3) #26, !dbg !17657
  br i1 %4, label %5, label %6, !dbg !17661

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !17662
  call void @llvm.dbg.value(metadata i32 0, metadata !17646, metadata !DIExpression()), !dbg !17650
  br label %6, !dbg !17664

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17650
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17654
  call void @llvm.dbg.value(metadata i32 %8, metadata !17443, metadata !DIExpression()) #24, !dbg !17656
  call void @llvm.dbg.value(metadata i32 %8, metadata !17437, metadata !DIExpression()) #24, !dbg !17652
  call void @llvm.dbg.value(metadata i32 %8, metadata !17649, metadata !DIExpression()), !dbg !17651
  call void @llvm.dbg.value(metadata i32 %7, metadata !17646, metadata !DIExpression()), !dbg !17650
  call void @llvm.dbg.value(metadata i32 undef, metadata !17499, metadata !DIExpression()) #24, !dbg !17665
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17504, metadata !DIExpression()) #24, !dbg !17665
  call void @llvm.dbg.value(metadata i32 undef, metadata !17507, metadata !DIExpression()) #24, !dbg !17667
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !17669, !srcloc !17513
  call void @llvm.dbg.value(metadata i32 undef, metadata !17647, metadata !DIExpression()), !dbg !17651
  ret i32 %7, !dbg !17670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.196(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17671 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17677, metadata !DIExpression()), !dbg !17678
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17679
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17679
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17680
  ret i1 %4, !dbg !17681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !17682 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17684, metadata !DIExpression()), !dbg !17685
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17686
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17688
  br i1 %3, label %10, label %4, !dbg !17689

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17690
  %6 = load i64, i64* %5, align 8, !dbg !17690
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17692
  %8 = load i64, i64* %7, align 8, !dbg !17693
  %9 = add nsw i64 %8, %6, !dbg !17693
  store i64 %9, i64* %7, align 8, !dbg !17693
  br label %10, !dbg !17694

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17695
  tail call fastcc void @sys_dlist_remove.197(%struct._dnode* noundef %11) #26, !dbg !17696
  ret void, !dbg !17697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.197(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !17698 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17702, metadata !DIExpression()), !dbg !17705
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17706
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17706
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17703, metadata !DIExpression()), !dbg !17705
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17707
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17707
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17704, metadata !DIExpression()), !dbg !17705
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17708
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17709
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17710
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17711
  tail call fastcc void @sys_dnode_init.198(%struct._dnode* noundef %0) #26, !dbg !17712
  ret void, !dbg !17713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.198(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !17714 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17716, metadata !DIExpression()), !dbg !17717
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17718
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17719
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17720
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17721
  ret void, !dbg !17722
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17723 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17729, metadata !DIExpression()), !dbg !17734
  call void @llvm.dbg.value(metadata i64 0, metadata !17730, metadata !DIExpression()), !dbg !17734
  call void @llvm.dbg.value(metadata i32 0, metadata !17731, metadata !DIExpression()), !dbg !17735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17431, metadata !DIExpression()) #24, !dbg !17736
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17738, !srcloc !17446
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17738
  call void @llvm.dbg.value(metadata i32 %3, metadata !17443, metadata !DIExpression()) #24, !dbg !17740
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()) #24, !dbg !17740
  call void @llvm.dbg.value(metadata i32 %3, metadata !17437, metadata !DIExpression()) #24, !dbg !17736
  call void @llvm.dbg.value(metadata i32 %3, metadata !17733, metadata !DIExpression()), !dbg !17735
  call void @llvm.dbg.value(metadata i64 0, metadata !17730, metadata !DIExpression()), !dbg !17734
  call void @llvm.dbg.value(metadata i32 undef, metadata !17731, metadata !DIExpression()), !dbg !17735
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17741
  call void @llvm.dbg.value(metadata i64 %4, metadata !17730, metadata !DIExpression()), !dbg !17734
  call void @llvm.dbg.value(metadata i32 %3, metadata !17499, metadata !DIExpression()) #24, !dbg !17744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17504, metadata !DIExpression()) #24, !dbg !17744
  call void @llvm.dbg.value(metadata i32 %3, metadata !17507, metadata !DIExpression()) #24, !dbg !17746
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17748, !srcloc !17513
  call void @llvm.dbg.value(metadata i32 undef, metadata !17731, metadata !DIExpression()), !dbg !17735
  ret i64 %4, !dbg !17749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17750 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17752, metadata !DIExpression()), !dbg !17756
  call void @llvm.dbg.value(metadata i64 0, metadata !17753, metadata !DIExpression()), !dbg !17756
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.199(%struct._timeout* noundef %0) #26, !dbg !17757
  br i1 %2, label %21, label %3, !dbg !17759

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17760
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17754, metadata !DIExpression()), !dbg !17761
  call void @llvm.dbg.value(metadata i64 0, metadata !17753, metadata !DIExpression()), !dbg !17756
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17762
  br i1 %5, label %16, label %6, !dbg !17764

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17754, metadata !DIExpression()), !dbg !17761
  call void @llvm.dbg.value(metadata i64 %8, metadata !17753, metadata !DIExpression()), !dbg !17756
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17765
  %10 = load i64, i64* %9, align 8, !dbg !17765
  %11 = add nsw i64 %10, %8, !dbg !17767
  call void @llvm.dbg.value(metadata i64 %11, metadata !17753, metadata !DIExpression()), !dbg !17756
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17768
  br i1 %12, label %16, label %13, !dbg !17770

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17771
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17754, metadata !DIExpression()), !dbg !17761
  call void @llvm.dbg.value(metadata i64 %11, metadata !17753, metadata !DIExpression()), !dbg !17756
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17762
  br i1 %15, label %16, label %6, !dbg !17764, !llvm.loop !17772

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17756
  call void @llvm.dbg.value(metadata i64 %17, metadata !17753, metadata !DIExpression()), !dbg !17756
  %18 = tail call fastcc i32 @elapsed.187() #26, !dbg !17774
  %19 = sext i32 %18 to i64, !dbg !17774
  %20 = sub nsw i64 %17, %19, !dbg !17775
  br label %21, !dbg !17776

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17756
  ret i64 %22, !dbg !17777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.199(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17778 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17782, metadata !DIExpression()), !dbg !17783
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17784
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.196(%struct._dnode* noundef %2) #26, !dbg !17785
  %4 = xor i1 %3, true, !dbg !17786
  ret i1 %4, !dbg !17787
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17788 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17790, metadata !DIExpression()), !dbg !17795
  call void @llvm.dbg.value(metadata i64 0, metadata !17791, metadata !DIExpression()), !dbg !17795
  call void @llvm.dbg.value(metadata i32 0, metadata !17792, metadata !DIExpression()), !dbg !17796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17431, metadata !DIExpression()) #24, !dbg !17797
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17799, !srcloc !17446
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17799
  call void @llvm.dbg.value(metadata i32 %3, metadata !17443, metadata !DIExpression()) #24, !dbg !17801
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()) #24, !dbg !17801
  call void @llvm.dbg.value(metadata i32 %3, metadata !17437, metadata !DIExpression()) #24, !dbg !17797
  call void @llvm.dbg.value(metadata i32 %3, metadata !17794, metadata !DIExpression()), !dbg !17796
  call void @llvm.dbg.value(metadata i64 0, metadata !17791, metadata !DIExpression()), !dbg !17795
  call void @llvm.dbg.value(metadata i32 undef, metadata !17792, metadata !DIExpression()), !dbg !17796
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17802
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17805
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17795
  call void @llvm.dbg.value(metadata i32 %3, metadata !17499, metadata !DIExpression()) #24, !dbg !17806
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17504, metadata !DIExpression()) #24, !dbg !17806
  call void @llvm.dbg.value(metadata i32 %3, metadata !17507, metadata !DIExpression()) #24, !dbg !17808
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17810, !srcloc !17513
  call void @llvm.dbg.value(metadata i32 undef, metadata !17792, metadata !DIExpression()), !dbg !17796
  %6 = add i64 %5, %4, !dbg !17811
  ret i64 %6, !dbg !17812
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17813 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17815, metadata !DIExpression()), !dbg !17819
  call void @llvm.dbg.value(metadata i32 0, metadata !17816, metadata !DIExpression()), !dbg !17820
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17431, metadata !DIExpression()) #24, !dbg !17821
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17823, !srcloc !17446
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17823
  call void @llvm.dbg.value(metadata i32 %2, metadata !17443, metadata !DIExpression()) #24, !dbg !17825
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()) #24, !dbg !17825
  call void @llvm.dbg.value(metadata i32 %2, metadata !17437, metadata !DIExpression()) #24, !dbg !17821
  call void @llvm.dbg.value(metadata i32 %2, metadata !17818, metadata !DIExpression()), !dbg !17820
  call void @llvm.dbg.value(metadata i32 -1, metadata !17815, metadata !DIExpression()), !dbg !17819
  call void @llvm.dbg.value(metadata i32 undef, metadata !17816, metadata !DIExpression()), !dbg !17820
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17826
  call void @llvm.dbg.value(metadata i32 %3, metadata !17815, metadata !DIExpression()), !dbg !17819
  call void @llvm.dbg.value(metadata i32 %2, metadata !17499, metadata !DIExpression()) #24, !dbg !17829
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17504, metadata !DIExpression()) #24, !dbg !17829
  call void @llvm.dbg.value(metadata i32 %2, metadata !17507, metadata !DIExpression()) #24, !dbg !17831
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17833, !srcloc !17513
  call void @llvm.dbg.value(metadata i32 undef, metadata !17816, metadata !DIExpression()), !dbg !17820
  ret i32 %3, !dbg !17834
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17837, metadata !DIExpression()), !dbg !17847
  call void @llvm.dbg.value(metadata i1 %1, metadata !17838, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17847
  call void @llvm.dbg.value(metadata i32 0, metadata !17839, metadata !DIExpression()), !dbg !17848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17431, metadata !DIExpression()) #24, !dbg !17849
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17851, !srcloc !17446
  call void @llvm.dbg.value(metadata i32 undef, metadata !17443, metadata !DIExpression()) #24, !dbg !17853
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()) #24, !dbg !17853
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()) #24, !dbg !17849
  call void @llvm.dbg.value(metadata i32 undef, metadata !17841, metadata !DIExpression()), !dbg !17848
  call void @llvm.dbg.value(metadata i32 undef, metadata !17839, metadata !DIExpression()), !dbg !17848
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17854
  call void @llvm.dbg.value(metadata i32 %4, metadata !17842, metadata !DIExpression()), !dbg !17855
  call void @llvm.dbg.value(metadata i1 undef, metadata !17845, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17855
  %5 = icmp slt i32 %4, 2, !dbg !17856
  call void @llvm.dbg.value(metadata i1 %5, metadata !17846, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17855
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17857
  call void @llvm.dbg.value(metadata i1 %6, metadata !17845, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17855
  br i1 %7, label %11, label %8, !dbg !17857

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17859
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17859
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17861
  br label %11, !dbg !17862

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17851
  call void @llvm.dbg.value(metadata i32 %12, metadata !17443, metadata !DIExpression()) #24, !dbg !17853
  call void @llvm.dbg.value(metadata i32 %12, metadata !17437, metadata !DIExpression()) #24, !dbg !17849
  call void @llvm.dbg.value(metadata i32 %12, metadata !17841, metadata !DIExpression()), !dbg !17848
  call void @llvm.dbg.value(metadata i32 undef, metadata !17499, metadata !DIExpression()) #24, !dbg !17863
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17504, metadata !DIExpression()) #24, !dbg !17863
  call void @llvm.dbg.value(metadata i32 undef, metadata !17507, metadata !DIExpression()) #24, !dbg !17865
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !17867, !srcloc !17513
  call void @llvm.dbg.value(metadata i32 1, metadata !17839, metadata !DIExpression()), !dbg !17848
  call void @llvm.dbg.value(metadata i32 undef, metadata !17839, metadata !DIExpression()), !dbg !17848
  ret void, !dbg !17868
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17873, metadata !DIExpression()), !dbg !17878
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17879
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17431, metadata !DIExpression()) #24, !dbg !17880
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17882, !srcloc !17446
  call void @llvm.dbg.value(metadata i32 undef, metadata !17443, metadata !DIExpression()) #24, !dbg !17884
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()) #24, !dbg !17884
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()) #24, !dbg !17880
  call void @llvm.dbg.value(metadata i32 undef, metadata !17874, metadata !DIExpression()), !dbg !17878
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17878
  call void @llvm.dbg.value(metadata i32 undef, metadata !17874, metadata !DIExpression()), !dbg !17878
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17885
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17886
  br i1 %4, label %28, label %5, !dbg !17887

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17888
  %10 = load i64, i64* %9, align 8, !dbg !17888
  %11 = sext i32 %8 to i64, !dbg !17889
  %12 = icmp sgt i64 %10, %11, !dbg !17890
  br i1 %12, label %26, label %13, !dbg !17891

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17878
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17875, metadata !DIExpression()), !dbg !17892
  %15 = trunc i64 %10 to i32, !dbg !17893
  call void @llvm.dbg.value(metadata i32 %15, metadata !17877, metadata !DIExpression()), !dbg !17892
  %16 = sext i32 %15 to i64, !dbg !17894
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17895
  %18 = add i64 %17, %16, !dbg !17895
  store i64 %18, i64* @curr_tick, align 8, !dbg !17895
  store i64 0, i64* %9, align 8, !dbg !17896
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17897
  call void @llvm.dbg.value(metadata i32 %14, metadata !17499, metadata !DIExpression()) #24, !dbg !17898
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17504, metadata !DIExpression()) #24, !dbg !17898
  call void @llvm.dbg.value(metadata i32 %14, metadata !17507, metadata !DIExpression()) #24, !dbg !17900
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !17902, !srcloc !17513
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17903
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17903
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17431, metadata !DIExpression()) #24, !dbg !17905
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17907, !srcloc !17446
  call void @llvm.dbg.value(metadata i32 undef, metadata !17443, metadata !DIExpression()) #24, !dbg !17909
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()) #24, !dbg !17909
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()) #24, !dbg !17905
  call void @llvm.dbg.value(metadata i32 undef, metadata !17874, metadata !DIExpression()), !dbg !17878
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17910
  %23 = sub nsw i32 %22, %15, !dbg !17910
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17878
  call void @llvm.dbg.value(metadata i32 undef, metadata !17874, metadata !DIExpression()), !dbg !17878
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17885
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17886
  br i1 %25, label %28, label %5, !dbg !17887, !llvm.loop !17911

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17913
  store i64 %27, i64* %9, align 8, !dbg !17913
  br label %32, !dbg !17916

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17878
  %31 = sext i32 %30 to i64, !dbg !17917
  br label %32, !dbg !17917

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17917
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17878
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17918
  %37 = add i64 %36, %33, !dbg !17918
  store i64 %37, i64* @curr_tick, align 8, !dbg !17918
  store i32 0, i32* @announce_remaining, align 4, !dbg !17919
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17920
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17921
  call void @llvm.dbg.value(metadata i32 %35, metadata !17499, metadata !DIExpression()) #24, !dbg !17922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17504, metadata !DIExpression()) #24, !dbg !17922
  call void @llvm.dbg.value(metadata i32 %35, metadata !17507, metadata !DIExpression()) #24, !dbg !17924
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !17926, !srcloc !17513
  ret void, !dbg !17927
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17928 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17932, metadata !DIExpression()), !dbg !17936
  call void @llvm.dbg.value(metadata i32 0, metadata !17933, metadata !DIExpression()), !dbg !17937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17431, metadata !DIExpression()) #24, !dbg !17938
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17940, !srcloc !17446
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17940
  call void @llvm.dbg.value(metadata i32 %2, metadata !17443, metadata !DIExpression()) #24, !dbg !17942
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()) #24, !dbg !17942
  call void @llvm.dbg.value(metadata i32 %2, metadata !17437, metadata !DIExpression()) #24, !dbg !17938
  call void @llvm.dbg.value(metadata i32 %2, metadata !17935, metadata !DIExpression()), !dbg !17937
  call void @llvm.dbg.value(metadata i64 0, metadata !17932, metadata !DIExpression()), !dbg !17936
  call void @llvm.dbg.value(metadata i32 undef, metadata !17933, metadata !DIExpression()), !dbg !17937
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17943
  %4 = tail call fastcc i32 @elapsed.187() #26, !dbg !17946
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17932, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17936
  call void @llvm.dbg.value(metadata i32 %2, metadata !17499, metadata !DIExpression()) #24, !dbg !17947
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17504, metadata !DIExpression()) #24, !dbg !17947
  call void @llvm.dbg.value(metadata i32 %2, metadata !17507, metadata !DIExpression()) #24, !dbg !17949
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17951, !srcloc !17513
  call void @llvm.dbg.value(metadata i32 undef, metadata !17933, metadata !DIExpression()), !dbg !17937
  %5 = sext i32 %4 to i64, !dbg !17946
  %6 = add i64 %3, %5, !dbg !17952
  ret i64 %6, !dbg !17953
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17954 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17955
  %2 = trunc i64 %1 to i32, !dbg !17956
  ret i32 %2, !dbg !17957
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17958 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17959
  ret i64 %1, !dbg !17960
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17963, metadata !DIExpression()), !dbg !17970
  %2 = icmp eq i32 %0, 0, !dbg !17971
  br i1 %2, label %10, label %3, !dbg !17973

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17974
  call void @llvm.dbg.value(metadata i32 %4, metadata !17964, metadata !DIExpression()), !dbg !17970
  %5 = mul i32 %0, 84, !dbg !17975
  call void @llvm.dbg.value(metadata i32 %5, metadata !17965, metadata !DIExpression()), !dbg !17970
  br label %6, !dbg !17976

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17977
  call void @llvm.dbg.value(metadata i32 %7, metadata !17966, metadata !DIExpression()), !dbg !17978
  %8 = sub i32 %7, %4, !dbg !17979
  %9 = icmp ult i32 %8, %5, !dbg !17981
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17983 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17984
  ret i32 %1, !dbg !17985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17986 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17988
  ret i32 %1, !dbg !17989
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17990 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17994, metadata !DIExpression()), !dbg !17996
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17997

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17998
  br label %14, !dbg !18002

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17995, metadata !DIExpression()), !dbg !17996
  %6 = icmp slt i64 %2, -1, !dbg !18003
  br i1 %6, label %7, label %9, !dbg !18006

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18007
  br label %14, !dbg !18008

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !18010
  %11 = icmp ugt i64 %2, 1, !dbg !18011
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18011
  %13 = add nsw i64 %10, %12, !dbg !18012
  br label %14, !dbg !18013

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18014
  ret i64 %15, !dbg !18015
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18016 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.208, i32 0, i32 0)) #25, !dbg !18018
  ret void, !dbg !18019
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18020 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18022, metadata !DIExpression()), !dbg !18042
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18023, metadata !DIExpression()), !dbg !18043
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !18044

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !18045

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18023, metadata !DIExpression()), !dbg !18043
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18046
  %6 = load i8*, i8** %5, align 4, !dbg !18046
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18050
  %8 = load i32, i32* %7, align 4, !dbg !18050
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !18051
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18052
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !18023, metadata !DIExpression()), !dbg !18043
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18053
  br i1 %10, label %3, label %2, !dbg !18044, !llvm.loop !18055
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18057 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18061, metadata !DIExpression()), !dbg !18064
  call void @llvm.dbg.value(metadata i8* %1, metadata !18062, metadata !DIExpression()), !dbg !18064
  call void @llvm.dbg.value(metadata i32 %2, metadata !18063, metadata !DIExpression()), !dbg !18064
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18065
  tail call fastcc void @z_waitq_init.210(%union.anon* noundef nonnull %4) #26, !dbg !18066
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18067
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !18068
  ret void, !dbg !18069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.210(%union.anon* noundef %0) unnamed_addr #4 !dbg !18070 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18075, metadata !DIExpression()), !dbg !18076
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !18077
  tail call fastcc void @sys_dlist_init.211(%struct._dnode* noundef %2) #26, !dbg !18078
  ret void, !dbg !18079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.211(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !18080 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18085, metadata !DIExpression()), !dbg !18086
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18087
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18088
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18089
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18090
  ret void, !dbg !18091
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18092 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18103, metadata !DIExpression()), !dbg !18113
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18100, metadata !DIExpression()), !dbg !18113
  call void @llvm.dbg.value(metadata i32 %1, metadata !18101, metadata !DIExpression()), !dbg !18113
  call void @llvm.dbg.value(metadata i32 %2, metadata !18102, metadata !DIExpression()), !dbg !18113
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !18114
  call void @llvm.dbg.value(metadata i64 %6, metadata !18105, metadata !DIExpression()), !dbg !18113
  call void @llvm.dbg.value(metadata i8* null, metadata !18106, metadata !DIExpression()), !dbg !18113
  %7 = icmp eq i64 %5, -1, !dbg !18115
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !18115
  call void @llvm.dbg.value(metadata i64 %8, metadata !18105, metadata !DIExpression()), !dbg !18113
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18117, metadata !DIExpression()) #24, !dbg !18124
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !18126, !srcloc !18132
  call void @llvm.dbg.value(metadata i32 undef, metadata !18129, metadata !DIExpression()) #24, !dbg !18133
  call void @llvm.dbg.value(metadata i32 undef, metadata !18130, metadata !DIExpression()) #24, !dbg !18133
  call void @llvm.dbg.value(metadata i32 undef, metadata !18123, metadata !DIExpression()) #24, !dbg !18124
  call void @llvm.dbg.value(metadata i32 undef, metadata !18107, metadata !DIExpression()), !dbg !18113
  call void @llvm.dbg.value(metadata i8 0, metadata !18112, metadata !DIExpression()), !dbg !18113
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18106, metadata !DIExpression()), !dbg !18113
  call void @llvm.dbg.value(metadata i8 0, metadata !18112, metadata !DIExpression()), !dbg !18113
  call void @llvm.dbg.value(metadata i32 undef, metadata !18107, metadata !DIExpression()), !dbg !18113
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !18134
  call void @llvm.dbg.value(metadata i8* %12, metadata !18106, metadata !DIExpression()), !dbg !18113
  %13 = tail call i64 @sys_clock_tick_get() #25, !dbg !18136
  call void @llvm.dbg.value(metadata i64 %13, metadata !18104, metadata !DIExpression()), !dbg !18113
  %14 = icmp eq i8* %12, null, !dbg !18137
  br i1 %14, label %15, label %31, !dbg !18139

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18107, metadata !DIExpression()), !dbg !18113
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !18139

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18112, metadata !DIExpression()), !dbg !18113
  %20 = sub nsw i64 %8, %18, !dbg !18140
  %21 = icmp slt i64 %20, 1, !dbg !18141
  br i1 %21, label %31, label %22, !dbg !18142

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !18113
  call void @llvm.dbg.value(metadata i8 undef, metadata !18112, metadata !DIExpression()), !dbg !18113
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !18143
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !18143
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #25, !dbg !18143
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18117, metadata !DIExpression()) #24, !dbg !18144
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !18146, !srcloc !18132
  call void @llvm.dbg.value(metadata i32 undef, metadata !18129, metadata !DIExpression()) #24, !dbg !18148
  call void @llvm.dbg.value(metadata i32 undef, metadata !18130, metadata !DIExpression()) #24, !dbg !18148
  call void @llvm.dbg.value(metadata i32 undef, metadata !18123, metadata !DIExpression()) #24, !dbg !18144
  call void @llvm.dbg.value(metadata i32 undef, metadata !18107, metadata !DIExpression()), !dbg !18113
  call void @llvm.dbg.value(metadata i8* null, metadata !18106, metadata !DIExpression()), !dbg !18113
  call void @llvm.dbg.value(metadata i32 undef, metadata !18107, metadata !DIExpression()), !dbg !18113
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !18134
  call void @llvm.dbg.value(metadata i8* %28, metadata !18106, metadata !DIExpression()), !dbg !18113
  %29 = tail call i64 @sys_clock_tick_get() #25, !dbg !18136
  call void @llvm.dbg.value(metadata i64 %29, metadata !18104, metadata !DIExpression()), !dbg !18113
  %30 = icmp eq i8* %28, null, !dbg !18137
  br i1 %30, label %17, label %31, !dbg !18139, !llvm.loop !18149

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !18134
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !18113
  call void @llvm.dbg.value(metadata i8* %33, metadata !18106, metadata !DIExpression()), !dbg !18113
  call void @llvm.dbg.value(metadata i32 %34, metadata !18152, metadata !DIExpression()) #24, !dbg !18158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18157, metadata !DIExpression()) #24, !dbg !18158
  call void @llvm.dbg.value(metadata i32 %34, metadata !18160, metadata !DIExpression()) #24, !dbg !18163
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #24, !dbg !18165, !srcloc !18166
  ret i8* %33, !dbg !18167
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18168 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18174, metadata !DIExpression()), !dbg !18176
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18172, metadata !DIExpression()), !dbg !18176
  call void @llvm.dbg.value(metadata i32 %1, metadata !18173, metadata !DIExpression()), !dbg !18176
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !18177
  call void @llvm.dbg.value(metadata i8* %4, metadata !18175, metadata !DIExpression()), !dbg !18176
  ret i8* %4, !dbg !18178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !18179 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18183, metadata !DIExpression()), !dbg !18186
  call void @llvm.dbg.value(metadata i8* %1, metadata !18184, metadata !DIExpression()), !dbg !18186
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18117, metadata !DIExpression()) #24, !dbg !18187
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !18189, !srcloc !18132
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !18189
  call void @llvm.dbg.value(metadata i32 %4, metadata !18129, metadata !DIExpression()) #24, !dbg !18191
  call void @llvm.dbg.value(metadata i32 undef, metadata !18130, metadata !DIExpression()) #24, !dbg !18191
  call void @llvm.dbg.value(metadata i32 %4, metadata !18123, metadata !DIExpression()) #24, !dbg !18187
  call void @llvm.dbg.value(metadata i32 %4, metadata !18185, metadata !DIExpression()), !dbg !18186
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18192
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #25, !dbg !18193
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18194
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #25, !dbg !18196
  %8 = icmp eq i32 %7, 0, !dbg !18197
  br i1 %8, label %12, label %9, !dbg !18198

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18199
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !18200
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #25, !dbg !18200
  br label %13, !dbg !18202

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !18152, metadata !DIExpression()) #24, !dbg !18203
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18157, metadata !DIExpression()) #24, !dbg !18203
  call void @llvm.dbg.value(metadata i32 %4, metadata !18160, metadata !DIExpression()) #24, !dbg !18206
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !18208, !srcloc !18166
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !18209
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!762, !2, !2638, !2640, !27, !2642, !2644, !2677, !2714, !111, !168, !2716, !197, !2798, !2809, !2855, !2857, !2885, !2913, !2956, !3027, !3072, !341, !490, !3100, !526, !536, !561, !800, !3105, !939, !1141, !1446, !1785, !3146, !1900, !1990, !3148, !3211, !3278, !2041, !3281, !2047, !2410, !3299, !2430, !2453, !3301, !2568, !3304, !2607}
!llvm.ident = !{!3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306, !3306}
!llvm.module.flags = !{!3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 407, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 398, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 400, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 401, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 402, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 403, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 404, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 405, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 406, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "console_serial", scope: !197, file: !288, line: 13, type: !294, isLocal: true, isDefinition: true)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !285, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!199 = !{!200, !102, !103}
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !225, !229, !233, !246, !251, !257, !263, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !202, file: !203, line: 365, baseType: !206, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!207 = !DISubroutineType(types: !208)
!208 = !{!103, !209, !224}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !212)
!212 = !{!213, !214, !215, !216, !222, !223}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !211, file: !141, line: 380, baseType: !144, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !211, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !211, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !211, file: !141, line: 386, baseType: !217, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !219)
!219 = !{!220, !221}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !218, file: !141, line: 359, baseType: !154, size: 8)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !218, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !211, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !211, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !202, file: !203, line: 366, baseType: !226, size: 32, offset: 32)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!227 = !DISubroutineType(types: !228)
!228 = !{null, !209, !155}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !202, file: !203, line: 374, baseType: !230, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DISubroutineType(types: !232)
!232 = !{!103, !209}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !202, file: !203, line: 377, baseType: !234, size: 32, offset: 96)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 32)
!235 = !DISubroutineType(types: !236)
!236 = !{!103, !209, !237}
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !240)
!240 = !{!241, !242, !243, !244, !245}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !239, file: !203, line: 123, baseType: !121, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !239, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !239, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !239, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !239, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !202, file: !203, line: 379, baseType: !247, size: 32, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!248 = !DISubroutineType(types: !249)
!249 = !{!103, !209, !250}
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !202, file: !203, line: 384, baseType: !252, size: 32, offset: 160)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DISubroutineType(types: !254)
!254 = !{!103, !209, !255, !103}
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !202, file: !203, line: 393, baseType: !258, size: 32, offset: 192)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DISubroutineType(types: !260)
!260 = !{!103, !209, !261, !262}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !202, file: !203, line: 402, baseType: !264, size: 32, offset: 224)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{null, !209}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !202, file: !203, line: 405, baseType: !264, size: 32, offset: 256)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !202, file: !203, line: 408, baseType: !230, size: 32, offset: 288)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !202, file: !203, line: 411, baseType: !264, size: 32, offset: 320)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !202, file: !203, line: 414, baseType: !264, size: 32, offset: 352)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !202, file: !203, line: 417, baseType: !230, size: 32, offset: 384)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !202, file: !203, line: 420, baseType: !230, size: 32, offset: 416)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !202, file: !203, line: 423, baseType: !264, size: 32, offset: 448)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !202, file: !203, line: 426, baseType: !264, size: 32, offset: 480)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !202, file: !203, line: 429, baseType: !230, size: 32, offset: 512)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !202, file: !203, line: 432, baseType: !230, size: 32, offset: 544)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !202, file: !203, line: 435, baseType: !278, size: 32, offset: 576)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DISubroutineType(types: !280)
!280 = !{null, !209, !281, !102}
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !282)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!283 = !DISubroutineType(types: !284)
!284 = !{null, !209, !102}
!285 = !{!195, !286, !292}
!286 = !DIGlobalVariableExpression(var: !287, expr: !DIExpression())
!287 = distinct !DIGlobalVariable(name: "console_rxbuf", scope: !197, file: !288, line: 15, type: !289, isLocal: true, isDefinition: true)
!288 = !DIFile(filename: "zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 128, elements: !290)
!290 = !{!291}
!291 = !DISubrange(count: 16)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "console_txbuf", scope: !197, file: !288, line: 16, type: !289, isLocal: true, isDefinition: true)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !295, line: 18, size: 544, elements: !296)
!295 = !DIFile(filename: "zephyr/include/zephyr/console/tty.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!296 = !{!297, !298, !325, !326, !327, !330, !331, !333, !334, !335, !336, !337, !338}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !294, file: !295, line: 19, baseType: !209, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !294, file: !295, line: 21, baseType: !299, size: 128, offset: 32)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !300, line: 2909, size: 128, elements: !301)
!300 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!301 = !{!302, !323, !324}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !299, file: !300, line: 2910, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !305)
!304 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !306)
!306 = !{!307}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !305, file: !304, line: 232, baseType: !308, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !311)
!311 = !{!312, !318}
!312 = !DIDerivedType(tag: DW_TAG_member, scope: !310, file: !309, line: 38, baseType: !313, size: 32)
!313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !310, file: !309, line: 38, size: 32, elements: !314)
!314 = !{!315, !317}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !313, file: !309, line: 39, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !313, file: !309, line: 40, baseType: !316, size: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, scope: !310, file: !309, line: 42, baseType: !319, size: 32, offset: 32)
!319 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !310, file: !309, line: 42, size: 32, elements: !320)
!320 = !{!321, !322}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !319, file: !309, line: 43, baseType: !316, size: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !319, file: !309, line: 44, baseType: !316, size: 32)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !299, file: !300, line: 2911, baseType: !32, size: 32, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !299, file: !300, line: 2912, baseType: !32, size: 32, offset: 96)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !294, file: !295, line: 22, baseType: !261, size: 32, offset: 160)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !294, file: !295, line: 23, baseType: !121, size: 32, offset: 192)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !294, file: !295, line: 24, baseType: !328, size: 16, offset: 224)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !329)
!329 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !294, file: !295, line: 24, baseType: !328, size: 16, offset: 240)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !294, file: !295, line: 25, baseType: !332, size: 32, offset: 256)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !294, file: !295, line: 27, baseType: !299, size: 128, offset: 288)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !294, file: !295, line: 28, baseType: !261, size: 32, offset: 416)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !294, file: !295, line: 29, baseType: !121, size: 32, offset: 448)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !294, file: !295, line: 30, baseType: !328, size: 16, offset: 480)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !294, file: !295, line: 30, baseType: !328, size: 16, offset: 496)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !294, file: !295, line: 31, baseType: !332, size: 32, offset: 512)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "static_regions", scope: !341, file: !350, line: 62, type: !486, isLocal: true, isDefinition: true)
!341 = distinct !DICompileUnit(language: DW_LANG_C99, file: !342, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !343, globals: !346, splitDebugInlining: false, nameTableKind: None)
!342 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!343 = !{!344, !103, !121, !102}
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !345, line: 214, baseType: !32)
!345 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = !{!347, !339}
!347 = !DIGlobalVariableExpression(var: !348, expr: !DIExpression())
!348 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !349, file: !350, line: 198, type: !472, isLocal: true, isDefinition: true)
!349 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !350, file: !350, line: 175, type: !351, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !341, retainedNodes: !467)
!350 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!351 = !DISubroutineType(types: !352)
!352 = !{null, !353}
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !356)
!355 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!356 = !{!357, !422, !435, !436, !437, !438, !444, !462}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !354, file: !355, line: 247, baseType: !358, size: 384)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !359)
!359 = !{!360, !387, !394, !395, !396, !407, !408, !409}
!360 = !DIDerivedType(tag: DW_TAG_member, scope: !358, file: !355, line: 60, baseType: !361, size: 64)
!361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !355, line: 60, size: 64, elements: !362)
!362 = !{!363, !378}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !361, file: !355, line: 61, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !366)
!366 = !{!367, !373}
!367 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !309, line: 38, baseType: !368, size: 32)
!368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !309, line: 38, size: 32, elements: !369)
!369 = !{!370, !372}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !368, file: !309, line: 39, baseType: !371, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !368, file: !309, line: 40, baseType: !371, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !309, line: 42, baseType: !374, size: 32, offset: 32)
!374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !309, line: 42, size: 32, elements: !375)
!375 = !{!376, !377}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !374, file: !309, line: 43, baseType: !371, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !374, file: !309, line: 44, baseType: !371, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !361, file: !355, line: 62, baseType: !379, size: 64)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !381)
!380 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !379, file: !380, line: 50, baseType: !383, size: 64)
!383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !384, size: 64, elements: !385)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!385 = !{!386}
!386 = !DISubrange(count: 2)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !358, file: !355, line: 68, baseType: !388, size: 32, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !391)
!391 = !{!392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !390, file: !304, line: 232, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !365)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !358, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !358, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!396 = !DIDerivedType(tag: DW_TAG_member, scope: !358, file: !355, line: 90, baseType: !397, size: 16, offset: 112)
!397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !355, line: 90, size: 16, elements: !398)
!398 = !{!399, !406}
!399 = !DIDerivedType(tag: DW_TAG_member, scope: !397, file: !355, line: 91, baseType: !400, size: 16)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !397, file: !355, line: 91, size: 16, elements: !401)
!401 = !{!402, !405}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !400, file: !355, line: 96, baseType: !403, size: 8)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !404)
!404 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !400, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !397, file: !355, line: 100, baseType: !328, size: 16)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !358, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !358, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !358, file: !355, line: 131, baseType: !410, size: 192, offset: 192)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !411)
!411 = !{!412, !413, !419}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !410, file: !304, line: 245, baseType: !364, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !410, file: !304, line: 246, baseType: !414, size: 32, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !415)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!416 = !DISubroutineType(types: !417)
!417 = !{null, !418}
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !410, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !421)
!421 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !354, file: !355, line: 250, baseType: !423, size: 288, offset: 384)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !425)
!424 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!425 = !{!426, !427, !428, !429, !430, !431, !432, !433, !434}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !423, file: !424, line: 26, baseType: !121, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !423, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !423, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !423, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !423, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !423, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !423, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !423, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !423, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !354, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !354, file: !355, line: 256, baseType: !389, size: 64, offset: 704)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !354, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !354, file: !355, line: 300, baseType: !439, size: 96, offset: 800)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !440)
!440 = !{!441, !442, !443}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !439, file: !355, line: 153, baseType: !22, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !439, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !439, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !354, file: !355, line: 325, baseType: !445, size: 32, offset: 896)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !447)
!447 = !{!448, !457, !458}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !446, file: !300, line: 5074, baseType: !449, size: 96)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !451)
!450 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!451 = !{!452, !455, !456}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !449, file: !450, line: 57, baseType: !453, size: 32)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !450, line: 57, flags: DIFlagFwdDecl)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !449, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !449, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !446, file: !300, line: 5075, baseType: !389, size: 64, offset: 96)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !446, file: !300, line: 5076, baseType: !459, offset: 160)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!460 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!461 = !{}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !354, file: !355, line: 343, baseType: !463, size: 64, offset: 928)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !464)
!464 = !{!465, !466}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !463, file: !424, line: 63, baseType: !121, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !463, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!467 = !{!468, !469, !470, !471}
!468 = !DILocalVariable(name: "thread", arg: 1, scope: !349, file: !350, line: 175, type: !353)
!469 = !DILocalVariable(name: "region_num", scope: !349, file: !350, line: 200, type: !154)
!470 = !DILocalVariable(name: "guard_start", scope: !349, file: !350, line: 265, type: !22)
!471 = !DILocalVariable(name: "guard_size", scope: !349, file: !350, line: 266, type: !344)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 96, elements: !484)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !474, line: 52, size: 96, elements: !475)
!474 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!475 = !{!476, !477, !478}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !473, file: !474, line: 53, baseType: !22, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !473, file: !474, line: 54, baseType: !344, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !473, file: !474, line: 55, baseType: !479, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !480, line: 151, baseType: !481)
!480 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !480, line: 149, size: 32, elements: !482)
!482 = !{!483}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !481, file: !480, line: 150, baseType: !121, size: 32)
!484 = !{!485}
!485 = !DISubrange(count: 1)
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, size: 96, elements: !484)
!487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!488 = !DIGlobalVariableExpression(var: !489, expr: !DIExpression())
!489 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !490, file: !523, line: 39, type: !154, isLocal: true, isDefinition: true)
!490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !492, globals: !522, splitDebugInlining: false, nameTableKind: None)
!491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!492 = !{!493, !102, !103, !510, !154}
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !495, line: 1226, baseType: !496)
!495 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 1213, size: 352, elements: !497)
!497 = !{!498, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !496, file: !495, line: 1215, baseType: !499, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !496, file: !495, line: 1216, baseType: !120, size: 32, offset: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !496, file: !495, line: 1217, baseType: !120, size: 32, offset: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !496, file: !495, line: 1218, baseType: !120, size: 32, offset: 96)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !496, file: !495, line: 1219, baseType: !120, size: 32, offset: 128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !496, file: !495, line: 1220, baseType: !120, size: 32, offset: 160)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !496, file: !495, line: 1221, baseType: !120, size: 32, offset: 192)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !496, file: !495, line: 1222, baseType: !120, size: 32, offset: 224)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !496, file: !495, line: 1223, baseType: !120, size: 32, offset: 256)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !496, file: !495, line: 1224, baseType: !120, size: 32, offset: 288)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !496, file: !495, line: 1225, baseType: !120, size: 32, offset: 320)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !512)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !513, line: 27, size: 96, elements: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = !{!515, !516, !517}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !512, file: !513, line: 29, baseType: !121, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !512, file: !513, line: 31, baseType: !144, size: 32, offset: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !512, file: !513, line: 37, baseType: !518, size: 32, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !480, line: 146, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !480, line: 141, size: 32, elements: !520)
!520 = !{!521}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !519, file: !480, line: 143, baseType: !121, size: 32)
!522 = !{!488}
!523 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !526, file: !533, line: 21, type: !106, isLocal: true, isDefinition: true)
!526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !527, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !528, globals: !532, splitDebugInlining: false, nameTableKind: None)
!527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!528 = !{!529, !103, !102}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !531, line: 22, baseType: !103)
!531 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!532 = !{!524}
!533 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !536, file: !541, line: 13, type: !558, isLocal: true, isDefinition: true)
!536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !538, splitDebugInlining: false, nameTableKind: None)
!537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!538 = !{!539, !534}
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "mpu_config", scope: !536, file: !541, line: 37, type: !542, isLocal: false, isDefinition: true)
!541 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !513, line: 41, size: 64, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !543, file: !513, line: 43, baseType: !121, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !543, file: !513, line: 45, baseType: !547, size: 32, offset: 32)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !549)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !513, line: 27, size: 96, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !549, file: !513, line: 29, baseType: !121, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !549, file: !513, line: 31, baseType: !144, size: 32, offset: 32)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !549, file: !513, line: 37, baseType: !554, size: 32, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !480, line: 146, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !480, line: 141, size: 32, elements: !556)
!556 = !{!557}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !555, file: !480, line: 143, baseType: !121, size: 32)
!558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 192, elements: !385)
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !561, file: !674, line: 72, type: !757, isLocal: true, isDefinition: true)
!561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !562, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !563, retainedTypes: !660, globals: !671, splitDebugInlining: false, nameTableKind: None)
!562 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!563 = !{!30, !564}
!564 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !565)
!565 = !{!566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659}
!566 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!567 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!568 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!569 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!570 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!571 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!572 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!573 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!574 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!575 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!576 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!577 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!578 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!579 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!580 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!581 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!582 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!583 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!584 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!585 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!586 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!587 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!588 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!589 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!590 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!591 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!592 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!593 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!594 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!595 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!596 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!597 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!598 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!599 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!600 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!601 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!602 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!603 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!604 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!605 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!606 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!607 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!608 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!609 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!610 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!611 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!612 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!613 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!614 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!615 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!616 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!617 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!618 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!619 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!620 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!621 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!622 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!623 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!624 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!625 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!626 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!627 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!628 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!629 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!630 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!631 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!632 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!633 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!634 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!635 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!636 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!637 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!638 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!639 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!640 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!641 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!642 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!643 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!644 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!645 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!646 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!647 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!648 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!649 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!650 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!651 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!652 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!653 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!654 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!655 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!656 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!657 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!658 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!659 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!660 = !{!344, !103, !102, !661}
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 392, baseType: !663)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 384, size: 192, elements: !664)
!664 = !{!665, !666, !667, !668, !669, !670}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !663, file: !116, line: 386, baseType: !120, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !663, file: !116, line: 387, baseType: !120, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !663, file: !116, line: 388, baseType: !120, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !663, file: !116, line: 389, baseType: !120, size: 32, offset: 96)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !663, file: !116, line: 390, baseType: !120, size: 32, offset: 128)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !663, file: !116, line: 391, baseType: !120, size: 32, offset: 160)
!671 = !{!672, !678, !694, !705, !722, !559, !724, !737, !739, !741, !743, !745, !747, !749, !751, !753, !755}
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !561, file: !674, line: 424, type: !675, isLocal: false, isDefinition: true, align: 16)
!674 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !676)
!676 = !{!677}
!677 = !DISubrange(count: 4)
!678 = !DIGlobalVariableExpression(var: !679, expr: !DIExpression())
!679 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !561, file: !674, line: 424, type: !680, isLocal: false, isDefinition: true, align: 32)
!680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !681)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !682)
!682 = !{!683, !684, !685, !686, !692, !693}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !681, file: !141, line: 380, baseType: !144, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !681, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !681, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !681, file: !141, line: 386, baseType: !687, size: 32, offset: 96)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 32)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !689)
!689 = !{!690, !691}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !688, file: !141, line: 359, baseType: !154, size: 8)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !688, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !681, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !681, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !561, file: !674, line: 424, type: !696, isLocal: true, isDefinition: true, align: 32)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !698)
!698 = !{!699, !704}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !697, file: !132, line: 60, baseType: !700, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 32)
!701 = !DISubroutineType(types: !702)
!702 = !{!103, !703}
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !697, file: !132, line: 65, baseType: !703, size: 32, offset: 32)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "exti_data", scope: !561, file: !674, line: 423, type: !707, isLocal: true, isDefinition: true)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !674, line: 107, size: 1472, elements: !708)
!708 = !{!709}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !707, file: !674, line: 109, baseType: !710, size: 1472)
!710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 1472, elements: !720)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !674, line: 101, size: 64, elements: !712)
!712 = !{!713, !719}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !711, file: !674, line: 102, baseType: !714, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !715, line: 63, baseType: !716)
!715 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 32)
!717 = !DISubroutineType(types: !718)
!718 = !{null, !103, !102}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !711, file: !674, line: 103, baseType: !102, size: 32, offset: 32)
!720 = !{!721}
!721 = !DISubrange(count: 23)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !561, file: !674, line: 424, type: !688, isLocal: true, isDefinition: true, align: 8)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !726, file: !674, line: 493, type: !731, isLocal: true, isDefinition: true, align: 32)
!726 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !674, file: !674, line: 460, type: !727, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !729)
!727 = !DISubroutineType(types: !728)
!728 = !{null, !703}
!729 = !{!730}
!730 = !DILocalVariable(name: "dev", arg: 1, scope: !726, file: !674, line: 460, type: !703)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !732)
!732 = !{!733, !734, !735, !736}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !731, file: !10, line: 55, baseType: !332, size: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !731, file: !10, line: 57, baseType: !332, size: 32, offset: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !731, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !731, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !726, file: !674, line: 497, type: !731, isLocal: true, isDefinition: true, align: 32)
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !726, file: !674, line: 507, type: !731, isLocal: true, isDefinition: true, align: 32)
!741 = !DIGlobalVariableExpression(var: !742, expr: !DIExpression())
!742 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !726, file: !674, line: 512, type: !731, isLocal: true, isDefinition: true, align: 32)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !726, file: !674, line: 516, type: !731, isLocal: true, isDefinition: true, align: 32)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !726, file: !674, line: 523, type: !731, isLocal: true, isDefinition: true, align: 32)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !726, file: !674, line: 527, type: !731, isLocal: true, isDefinition: true, align: 32)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !726, file: !674, line: 581, type: !731, isLocal: true, isDefinition: true, align: 32)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !726, file: !674, line: 586, type: !731, isLocal: true, isDefinition: true, align: 32)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !726, file: !674, line: 591, type: !731, isLocal: true, isDefinition: true, align: 32)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !726, file: !674, line: 595, type: !731, isLocal: true, isDefinition: true, align: 32)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 736, elements: !720)
!758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !759)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 163, baseType: !564)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !762, file: !767, line: 25, type: !795, isLocal: false, isDefinition: true, align: 16)
!762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !763, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !764, splitDebugInlining: false, nameTableKind: None)
!763 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!764 = !{!765, !760, !771, !773, !775, !777, !779, !781, !783, !785, !787, !789, !791, !793}
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !762, file: !767, line: 20, type: !768, isLocal: false, isDefinition: true, align: 16)
!767 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 240, elements: !769)
!769 = !{!770}
!770 = !DISubrange(count: 15)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !762, file: !767, line: 32, type: !675, isLocal: false, isDefinition: true, align: 16)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !762, file: !767, line: 39, type: !675, isLocal: false, isDefinition: true, align: 16)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !762, file: !767, line: 46, type: !675, isLocal: false, isDefinition: true, align: 16)
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !762, file: !767, line: 53, type: !675, isLocal: false, isDefinition: true, align: 16)
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !762, file: !767, line: 60, type: !675, isLocal: false, isDefinition: true, align: 16)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !762, file: !767, line: 67, type: !675, isLocal: false, isDefinition: true, align: 16)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !762, file: !767, line: 74, type: !675, isLocal: false, isDefinition: true, align: 16)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !762, file: !767, line: 81, type: !675, isLocal: false, isDefinition: true, align: 16)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !762, file: !767, line: 88, type: !675, isLocal: false, isDefinition: true, align: 16)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !762, file: !767, line: 95, type: !675, isLocal: false, isDefinition: true, align: 16)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !762, file: !767, line: 102, type: !675, isLocal: false, isDefinition: true, align: 16)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !762, file: !767, line: 109, type: !675, isLocal: false, isDefinition: true, align: 16)
!795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !796)
!796 = !{!797}
!797 = !DISubrange(count: 3)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !800, file: !865, line: 398, type: !898, isLocal: true, isDefinition: true)
!800 = distinct !DICompileUnit(language: DW_LANG_C99, file: !801, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !802, retainedTypes: !815, globals: !862, splitDebugInlining: false, nameTableKind: None)
!801 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!802 = !{!803, !30, !808}
!803 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !804, line: 197, baseType: !32, size: 32, elements: !805)
!804 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!805 = !{!806, !807}
!806 = !DIEnumerator(name: "SUCCESS", value: 0)
!807 = !DIEnumerator(name: "ERROR", value: 1)
!808 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !809, line: 44, baseType: !32, size: 32, elements: !810)
!809 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!810 = !{!811, !812, !813, !814}
!811 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!812 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!813 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!814 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!815 = !{!102, !103, !121, !816, !855, !861}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !819)
!819 = !{!820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !818, file: !116, line: 552, baseType: !120, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !818, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !818, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !818, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !818, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !818, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !818, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !818, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !818, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !818, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !818, file: !116, line: 562, baseType: !831, size: 64, offset: 320)
!831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !385)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !818, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !818, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !818, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !818, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !818, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !818, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !818, file: !116, line: 569, baseType: !831, size: 64, offset: 576)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !818, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !818, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !818, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !818, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !818, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !818, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !818, file: !116, line: 576, baseType: !831, size: 64, offset: 832)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !818, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !818, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !818, file: !116, line: 579, baseType: !831, size: 64, offset: 960)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !818, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !818, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !818, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !818, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !818, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !818, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !857, line: 343, size: 64, elements: !858)
!857 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!858 = !{!859, !860}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !856, file: !857, line: 344, baseType: !121, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !856, file: !857, line: 345, baseType: !121, size: 32, offset: 32)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!862 = !{!863, !869, !885, !896, !798}
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !800, file: !865, line: 752, type: !866, isLocal: false, isDefinition: true, align: 16)
!865 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 800, elements: !867)
!867 = !{!868}
!868 = !DISubrange(count: 50)
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !800, file: !865, line: 752, type: !871, isLocal: false, isDefinition: true, align: 32)
!871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !872)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !873)
!873 = !{!874, !875, !876, !877, !883, !884}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !872, file: !141, line: 380, baseType: !144, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !872, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !872, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !872, file: !141, line: 386, baseType: !878, size: 32, offset: 96)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !880)
!880 = !{!881, !882}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !879, file: !141, line: 359, baseType: !154, size: 8)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !879, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !872, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !872, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !800, file: !865, line: 752, type: !887, isLocal: true, isDefinition: true, align: 32)
!887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !889)
!889 = !{!890, !895}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !888, file: !132, line: 60, baseType: !891, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!892 = !DISubroutineType(types: !893)
!893 = !{!103, !894}
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !888, file: !132, line: 65, baseType: !894, size: 32, offset: 32)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !800, file: !865, line: 752, type: !879, isLocal: true, isDefinition: true, align: 8)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !809, line: 100, size: 224, elements: !899)
!899 = !{!900, !906, !907, !916, !921, !926, !932}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !898, file: !809, line: 101, baseType: !901, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !809, line: 76, baseType: !902)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 32)
!903 = !DISubroutineType(types: !904)
!904 = !{!103, !894, !905}
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !809, line: 56, baseType: !102)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !898, file: !809, line: 102, baseType: !901, size: 32, offset: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !898, file: !809, line: 103, baseType: !908, size: 32, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !809, line: 83, baseType: !909)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!910 = !DISubroutineType(types: !911)
!911 = !{!103, !894, !905, !912, !102}
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !809, line: 72, baseType: !913)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 32)
!914 = !DISubroutineType(types: !915)
!915 = !{null, !894, !905, !102}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !898, file: !809, line: 104, baseType: !917, size: 32, offset: 96)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !809, line: 79, baseType: !918)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 32)
!919 = !DISubroutineType(types: !920)
!920 = !{!103, !894, !905, !861}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !898, file: !809, line: 105, baseType: !922, size: 32, offset: 128)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !809, line: 88, baseType: !923)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DISubroutineType(types: !925)
!925 = !{!808, !894, !905}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !898, file: !809, line: 106, baseType: !927, size: 32, offset: 160)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !809, line: 92, baseType: !928)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 32)
!929 = !DISubroutineType(types: !930)
!930 = !{!103, !894, !905, !931}
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !809, line: 64, baseType: !102)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !898, file: !809, line: 107, baseType: !933, size: 32, offset: 192)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !809, line: 96, baseType: !934)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DISubroutineType(types: !936)
!936 = !{!103, !894, !905, !102}
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "debug_hook_in", scope: !939, file: !943, line: 43, type: !1135, isLocal: true, isDefinition: true)
!939 = distinct !DICompileUnit(language: DW_LANG_C99, file: !940, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !941, retainedTypes: !950, globals: !1030, splitDebugInlining: false, nameTableKind: None)
!940 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!941 = !{!30, !942}
!942 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !943, line: 214, baseType: !32, size: 32, elements: !944)
!943 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!944 = !{!945, !946, !947, !948, !949}
!945 = !DIEnumerator(name: "ESC_ESC", value: 0)
!946 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!947 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!948 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!949 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!950 = !{!102, !103, !951, !32, !24}
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !954)
!954 = !{!955, !974, !978, !982, !995, !1000, !1004, !1008, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !953, file: !203, line: 365, baseType: !956, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!957 = !DISubroutineType(types: !958)
!958 = !{!103, !959, !224}
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !961)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !962)
!962 = !{!963, !964, !965, !966, !972, !973}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !961, file: !141, line: 380, baseType: !144, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !961, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !961, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !961, file: !141, line: 386, baseType: !967, size: 32, offset: 96)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !969)
!969 = !{!970, !971}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !968, file: !141, line: 359, baseType: !154, size: 8)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !968, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !961, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !961, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !953, file: !203, line: 366, baseType: !975, size: 32, offset: 32)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DISubroutineType(types: !977)
!977 = !{null, !959, !155}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !953, file: !203, line: 374, baseType: !979, size: 32, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 32)
!980 = !DISubroutineType(types: !981)
!981 = !{!103, !959}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !953, file: !203, line: 377, baseType: !983, size: 32, offset: 96)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DISubroutineType(types: !985)
!985 = !{!103, !959, !986}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !989)
!989 = !{!990, !991, !992, !993, !994}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !988, file: !203, line: 123, baseType: !121, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !988, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !988, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !988, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !988, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !953, file: !203, line: 379, baseType: !996, size: 32, offset: 128)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!997 = !DISubroutineType(types: !998)
!998 = !{!103, !959, !999}
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !953, file: !203, line: 384, baseType: !1001, size: 32, offset: 160)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!103, !959, !255, !103}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !953, file: !203, line: 393, baseType: !1005, size: 32, offset: 192)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!103, !959, !261, !262}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !953, file: !203, line: 402, baseType: !1009, size: 32, offset: 224)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{null, !959}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !953, file: !203, line: 405, baseType: !1009, size: 32, offset: 256)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !953, file: !203, line: 408, baseType: !979, size: 32, offset: 288)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !953, file: !203, line: 411, baseType: !1009, size: 32, offset: 320)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !953, file: !203, line: 414, baseType: !1009, size: 32, offset: 352)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !953, file: !203, line: 417, baseType: !979, size: 32, offset: 384)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !953, file: !203, line: 420, baseType: !979, size: 32, offset: 416)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !953, file: !203, line: 423, baseType: !1009, size: 32, offset: 448)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !953, file: !203, line: 426, baseType: !1009, size: 32, offset: 480)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !953, file: !203, line: 429, baseType: !979, size: 32, offset: 512)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !953, file: !203, line: 432, baseType: !979, size: 32, offset: 544)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !953, file: !203, line: 435, baseType: !1023, size: 32, offset: 576)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{null, !959, !1026, !102}
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !1027)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{null, !959, !102}
!1030 = !{!1031, !937, !1038, !1080, !1082, !1088, !1095, !1098, !1123, !1127, !1129, !1131, !1133}
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !939, file: !943, line: 603, type: !1033, isLocal: true, isDefinition: true, align: 32)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1035)
!1035 = !{!1036, !1037}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1034, file: !132, line: 60, baseType: !979, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1034, file: !132, line: 65, baseType: !959, size: 32, offset: 32)
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(name: "avail_queue", scope: !939, file: !943, line: 108, type: !1040, isLocal: true, isDefinition: true)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !300, line: 2208, size: 128, elements: !1042)
!1042 = !{!1043}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1041, file: !300, line: 2209, baseType: !1044, size: 128)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !300, line: 1709, size: 128, elements: !1045)
!1045 = !{!1046, !1059, !1061}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1044, file: !300, line: 1710, baseType: !1047, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !1048, line: 46, baseType: !1049)
!1048 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !1048, line: 41, size: 64, elements: !1050)
!1050 = !{!1051, !1058}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1049, file: !1048, line: 42, baseType: !1052, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !1048, line: 39, baseType: !1054)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !1048, line: 35, size: 32, elements: !1055)
!1055 = !{!1056}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1054, file: !1048, line: 36, baseType: !1057, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !1048, line: 32, baseType: !121)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1049, file: !1048, line: 43, baseType: !1052, size: 32, offset: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1044, file: !300, line: 1711, baseType: !1060, offset: 64)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1044, file: !300, line: 1712, baseType: !1062, size: 64, offset: 64)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !1064)
!1064 = !{!1065}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1063, file: !304, line: 232, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !1067)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !1068)
!1068 = !{!1069, !1075}
!1069 = !DIDerivedType(tag: DW_TAG_member, scope: !1067, file: !309, line: 38, baseType: !1070, size: 32)
!1070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1067, file: !309, line: 38, size: 32, elements: !1071)
!1071 = !{!1072, !1074}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1070, file: !309, line: 39, baseType: !1073, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1070, file: !309, line: 40, baseType: !1073, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, scope: !1067, file: !309, line: 42, baseType: !1076, size: 32, offset: 32)
!1076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1067, file: !309, line: 42, size: 32, elements: !1077)
!1077 = !{!1078, !1079}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1076, file: !309, line: 43, baseType: !1073, size: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1076, file: !309, line: 44, baseType: !1073, size: 32)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "lines_queue", scope: !939, file: !943, line: 109, type: !1040, isLocal: true, isDefinition: true)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "completion_cb", scope: !939, file: !943, line: 110, type: !1084, isLocal: true, isDefinition: true)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!154, !1087, !154}
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "debug_hook_out", scope: !939, file: !943, line: 54, type: !1090, isLocal: true, isDefinition: true)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_out_debug_hook_t", file: !1092, line: 40, baseType: !1093)
!1092 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/uart_console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!103, !146}
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !939, file: !943, line: 38, type: !1097, isLocal: true, isDefinition: true)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !959)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "cmd", scope: !1100, file: !943, line: 435, type: !1111, isLocal: true, isDefinition: true)
!1100 = distinct !DISubprogram(name: "uart_console_isr", scope: !943, file: !943, line: 428, type: !1028, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !1101)
!1101 = !{!1102, !1103, !1104, !1106, !1107}
!1102 = !DILocalVariable(name: "unused", arg: 1, scope: !1100, file: !943, line: 428, type: !959)
!1103 = !DILocalVariable(name: "user_data", arg: 2, scope: !1100, file: !943, line: 428, type: !102)
!1104 = !DILocalVariable(name: "byte", scope: !1105, file: !943, line: 436, type: !154)
!1105 = distinct !DILexicalBlock(scope: !1100, file: !943, line: 434, column: 48)
!1106 = !DILocalVariable(name: "rx", scope: !1105, file: !943, line: 437, type: !103)
!1107 = !DILocalVariable(name: "ret", scope: !1108, file: !943, line: 461, type: !102)
!1108 = distinct !DILexicalBlock(scope: !1109, file: !943, line: 461, column: 10)
!1109 = distinct !DILexicalBlock(scope: !1110, file: !943, line: 460, column: 13)
!1110 = distinct !DILexicalBlock(scope: !1105, file: !943, line: 460, column: 7)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !1113, line: 21, size: 1088, elements: !1114)
!1113 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1114 = !{!1115, !1118, !1119}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1112, file: !1113, line: 23, baseType: !1116, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !1117)
!1117 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1112, file: !1113, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1112, file: !1113, line: 27, baseType: !1120, size: 1024, offset: 40)
!1120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 1024, elements: !1121)
!1121 = !{!1122}
!1122 = !DISubrange(count: 128)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "esc_state", scope: !939, file: !943, line: 228, type: !1125, isLocal: true, isDefinition: true)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1126, line: 22, baseType: !1117)
!1126 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "ansi_val", scope: !939, file: !943, line: 229, type: !32, isLocal: true, isDefinition: true)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !939, file: !943, line: 229, type: !32, isLocal: true, isDefinition: true)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "cur", scope: !939, file: !943, line: 230, type: !154, isLocal: true, isDefinition: true)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "end", scope: !939, file: !943, line: 230, type: !154, isLocal: true, isDefinition: true)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_in_debug_hook_t", file: !1092, line: 45, baseType: !1136)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!103, !154}
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1141, file: !1312, line: 762, type: !1421, isLocal: true, isDefinition: true)
!1141 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1142, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1143, retainedTypes: !1161, globals: !1309, splitDebugInlining: false, nameTableKind: None)
!1142 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!1143 = !{!30, !1144, !1150, !1155, !808}
!1144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1145, line: 506, baseType: !32, size: 32, elements: !1146)
!1145 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1146 = !{!1147, !1148, !1149}
!1147 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1148 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1149 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1145, line: 512, baseType: !32, size: 32, elements: !1151)
!1151 = !{!1152, !1153, !1154}
!1152 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1153 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1154 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1155 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !715, line: 43, baseType: !32, size: 32, elements: !1156)
!1156 = !{!1157, !1158, !1159, !1160}
!1157 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1158 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1159 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1160 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1161 = !{!102, !103, !1162, !1232, !1237, !1197, !1150, !1144, !1242, !1243, !121, !1257, !1212, !1087, !1269, !1270}
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1164)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1145, line: 523, size: 288, elements: !1165)
!1165 = !{!1166, !1187, !1193, !1198, !1202, !1203, !1204, !1208, !1228}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1164, file: !1145, line: 524, baseType: !1167, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!103, !1170, !1185, !1186}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1177, !1183, !1184}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1172, file: !141, line: 380, baseType: !144, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1172, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1172, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1172, file: !141, line: 386, baseType: !1178, size: 32, offset: 96)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1180)
!1180 = !{!1181, !1182}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1179, file: !141, line: 359, baseType: !154, size: 8)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1179, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1172, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1172, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1145, line: 237, baseType: !154)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1145, line: 257, baseType: !121)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1164, file: !1145, line: 530, baseType: !1188, size: 32, offset: 32)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!103, !1170, !1191}
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1145, line: 229, baseType: !121)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1164, file: !1145, line: 532, baseType: !1194, size: 32, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 32)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!103, !1170, !1197, !1192}
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1145, line: 216, baseType: !121)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1164, file: !1145, line: 535, baseType: !1199, size: 32, offset: 96)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!103, !1170, !1197}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1164, file: !1145, line: 537, baseType: !1199, size: 32, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1164, file: !1145, line: 539, baseType: !1199, size: 32, offset: 160)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1164, file: !1145, line: 541, baseType: !1205, size: 32, offset: 192)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!103, !1170, !1185, !1144, !1150}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1164, file: !1145, line: 544, baseType: !1209, size: 32, offset: 224)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!103, !1170, !1212, !157}
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 32)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1145, line: 478, size: 96, elements: !1214)
!1214 = !{!1215, !1222, !1227}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1213, file: !1145, line: 482, baseType: !1216, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1217, line: 33, baseType: !1218)
!1217 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1217, line: 29, size: 32, elements: !1219)
!1219 = !{!1220}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1218, file: !1217, line: 30, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1213, file: !1145, line: 485, baseType: !1223, size: 32, offset: 32)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1145, line: 464, baseType: !1224)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1225 = !DISubroutineType(types: !1226)
!1226 = !{null, !1170, !1212, !1197}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1213, file: !1145, line: 493, baseType: !1197, size: 32, offset: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1164, file: !1145, line: 547, baseType: !1229, size: 32, offset: 256)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{!121, !1170}
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1145, line: 428, size: 32, elements: !1235)
!1235 = !{!1236}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1234, file: !1145, line: 434, baseType: !1197, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1239)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1145, line: 441, size: 32, elements: !1240)
!1240 = !{!1241}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1239, file: !1145, line: 447, baseType: !1197, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 469, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 458, size: 320, elements: !1246)
!1246 = !{!1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1245, file: !116, line: 460, baseType: !120, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1245, file: !116, line: 461, baseType: !120, size: 32, offset: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1245, file: !116, line: 462, baseType: !120, size: 32, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1245, file: !116, line: 463, baseType: !120, size: 32, offset: 96)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1245, file: !116, line: 464, baseType: !120, size: 32, offset: 128)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1245, file: !116, line: 465, baseType: !120, size: 32, offset: 160)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1245, file: !116, line: 466, baseType: !120, size: 32, offset: 192)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1245, file: !116, line: 467, baseType: !120, size: 32, offset: 224)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1245, file: !116, line: 468, baseType: !1256, size: 64, offset: 256)
!1256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !385)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 484, baseType: !1259)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 475, size: 384, elements: !1260)
!1260 = !{!1261, !1262, !1263, !1265, !1266, !1267, !1268}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1259, file: !116, line: 477, baseType: !120, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1259, file: !116, line: 478, baseType: !120, size: 32, offset: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1259, file: !116, line: 479, baseType: !1264, size: 128, offset: 64)
!1264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !676)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1259, file: !116, line: 480, baseType: !831, size: 64, offset: 192)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1259, file: !116, line: 481, baseType: !120, size: 32, offset: 256)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1259, file: !116, line: 482, baseType: !831, size: 64, offset: 288)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1259, file: !116, line: 483, baseType: !120, size: 32, offset: 352)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1272)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !809, line: 100, size: 224, elements: !1273)
!1273 = !{!1274, !1279, !1280, !1289, !1294, !1299, !1304}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1272, file: !809, line: 101, baseType: !1275, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !809, line: 76, baseType: !1276)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!103, !1170, !905}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1272, file: !809, line: 102, baseType: !1275, size: 32, offset: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1272, file: !809, line: 103, baseType: !1281, size: 32, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !809, line: 83, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!103, !1170, !905, !1285, !102}
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !809, line: 72, baseType: !1286)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{null, !1170, !905, !102}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1272, file: !809, line: 104, baseType: !1290, size: 32, offset: 96)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !809, line: 79, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!103, !1170, !905, !861}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1272, file: !809, line: 105, baseType: !1295, size: 32, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !809, line: 88, baseType: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!808, !1170, !905}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1272, file: !809, line: 106, baseType: !1300, size: 32, offset: 160)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !809, line: 92, baseType: !1301)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!103, !1170, !905, !931}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1272, file: !809, line: 107, baseType: !1305, size: 32, offset: 192)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !809, line: 96, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!103, !1170, !905, !102}
!1309 = !{!1310, !1316, !1318, !1328, !1330, !1332, !1334, !1336, !1338, !1340, !1345, !1347, !1349, !1351, !1353, !1355, !1357, !1359, !1361, !1363, !1365, !1367, !1369, !1371, !1373, !1387, !1389, !1391, !1393, !1395, !1397, !1399, !1401, !1403, !1405, !1407, !1409, !1411, !1413, !1415, !1139, !1417, !1419, !1432, !1434, !1436, !1438, !1440, !1442}
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1141, file: !1312, line: 762, type: !1313, isLocal: false, isDefinition: true, align: 16)
!1312 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1314)
!1314 = !{!1315}
!1315 = !DISubrange(count: 5)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1141, file: !1312, line: 762, type: !1171, isLocal: false, isDefinition: true, align: 32)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1141, file: !1312, line: 762, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1322)
!1322 = !{!1323, !1327}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1321, file: !132, line: 60, baseType: !1324, size: 32)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!103, !1170}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1321, file: !132, line: 65, baseType: !1170, size: 32, offset: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1141, file: !1312, line: 766, type: !1313, isLocal: false, isDefinition: true, align: 16)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1141, file: !1312, line: 766, type: !1171, isLocal: false, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1141, file: !1312, line: 766, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1141, file: !1312, line: 770, type: !1313, isLocal: false, isDefinition: true, align: 16)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1141, file: !1312, line: 770, type: !1171, isLocal: false, isDefinition: true, align: 32)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1141, file: !1312, line: 770, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1141, file: !1312, line: 774, type: !1342, isLocal: false, isDefinition: true, align: 16)
!1342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 144, elements: !1343)
!1343 = !{!1344}
!1344 = !DISubrange(count: 9)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1141, file: !1312, line: 774, type: !1171, isLocal: false, isDefinition: true, align: 32)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1141, file: !1312, line: 774, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1141, file: !1312, line: 778, type: !1313, isLocal: false, isDefinition: true, align: 16)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1141, file: !1312, line: 778, type: !1171, isLocal: false, isDefinition: true, align: 32)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1141, file: !1312, line: 778, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1141, file: !1312, line: 782, type: !1313, isLocal: false, isDefinition: true, align: 16)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1141, file: !1312, line: 782, type: !1171, isLocal: false, isDefinition: true, align: 32)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1141, file: !1312, line: 782, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1141, file: !1312, line: 786, type: !1313, isLocal: false, isDefinition: true, align: 16)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1141, file: !1312, line: 786, type: !1171, isLocal: false, isDefinition: true, align: 32)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1141, file: !1312, line: 786, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1141, file: !1312, line: 790, type: !1313, isLocal: false, isDefinition: true, align: 16)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1141, file: !1312, line: 790, type: !1171, isLocal: false, isDefinition: true, align: 32)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1141, file: !1312, line: 790, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1141, file: !1312, line: 762, type: !1375, isLocal: true, isDefinition: true)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1376, line: 237, size: 128, elements: !1377)
!1376 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1377 = !{!1378, !1379, !1380}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1375, file: !1376, line: 239, baseType: !1239, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1375, file: !1376, line: 241, baseType: !1170, size: 32, offset: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1375, file: !1376, line: 243, baseType: !1381, size: 64, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1217, line: 40, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1217, line: 35, size: 64, elements: !1383)
!1383 = !{!1384, !1386}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1382, file: !1217, line: 36, baseType: !1385, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1382, file: !1217, line: 37, baseType: !1385, size: 32, offset: 32)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1141, file: !1312, line: 762, type: !1179, isLocal: true, isDefinition: true, align: 8)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1141, file: !1312, line: 766, type: !1375, isLocal: true, isDefinition: true)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1141, file: !1312, line: 766, type: !1179, isLocal: true, isDefinition: true, align: 8)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1141, file: !1312, line: 770, type: !1375, isLocal: true, isDefinition: true)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1141, file: !1312, line: 770, type: !1179, isLocal: true, isDefinition: true, align: 8)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1141, file: !1312, line: 774, type: !1375, isLocal: true, isDefinition: true)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1141, file: !1312, line: 774, type: !1179, isLocal: true, isDefinition: true, align: 8)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1141, file: !1312, line: 778, type: !1375, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1141, file: !1312, line: 778, type: !1179, isLocal: true, isDefinition: true, align: 8)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1141, file: !1312, line: 782, type: !1375, isLocal: true, isDefinition: true)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1141, file: !1312, line: 782, type: !1179, isLocal: true, isDefinition: true, align: 8)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1141, file: !1312, line: 786, type: !1375, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1141, file: !1312, line: 786, type: !1179, isLocal: true, isDefinition: true, align: 8)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1141, file: !1312, line: 790, type: !1375, isLocal: true, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1141, file: !1312, line: 790, type: !1179, isLocal: true, isDefinition: true, align: 8)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1141, file: !1312, line: 656, type: !1163, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1141, file: !1312, line: 766, type: !1421, isLocal: true, isDefinition: true)
!1421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1422)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1376, line: 224, size: 160, elements: !1423)
!1423 = !{!1424, !1425, !1426, !1427}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1422, file: !1376, line: 226, baseType: !1234, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1422, file: !1376, line: 228, baseType: !861, size: 32, offset: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1422, file: !1376, line: 230, baseType: !103, size: 32, offset: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1422, file: !1376, line: 231, baseType: !1428, size: 64, offset: 96)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !857, line: 343, size: 64, elements: !1429)
!1429 = !{!1430, !1431}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1428, file: !857, line: 344, baseType: !121, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1428, file: !857, line: 345, baseType: !121, size: 32, offset: 32)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1141, file: !1312, line: 770, type: !1421, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1141, file: !1312, line: 774, type: !1421, isLocal: true, isDefinition: true)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1141, file: !1312, line: 778, type: !1421, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1141, file: !1312, line: 782, type: !1421, isLocal: true, isDefinition: true)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1141, file: !1312, line: 786, type: !1421, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1141, file: !1312, line: 790, type: !1421, isLocal: true, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1446, file: !1617, line: 1914, type: !1717, isLocal: true, isDefinition: true)
!1446 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1447, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1448, retainedTypes: !1481, globals: !1614, splitDebugInlining: false, nameTableKind: None)
!1447 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!1448 = !{!30, !1449, !1456, !1463, !1470, !1476, !808}
!1449 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !203, line: 47, baseType: !32, size: 32, elements: !1450)
!1450 = !{!1451, !1452, !1453, !1454, !1455}
!1451 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1452 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1453 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1454 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1455 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1456 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !203, line: 75, baseType: !32, size: 32, elements: !1457)
!1457 = !{!1458, !1459, !1460, !1461, !1462}
!1458 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1459 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1460 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1461 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1462 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1463 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !203, line: 92, baseType: !32, size: 32, elements: !1464)
!1464 = !{!1465, !1466, !1467, !1468, !1469}
!1465 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1466 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1467 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1468 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1469 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1470 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !203, line: 84, baseType: !32, size: 32, elements: !1471)
!1471 = !{!1472, !1473, !1474, !1475}
!1472 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1473 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1474 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1475 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1476 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !203, line: 107, baseType: !32, size: 32, elements: !1477)
!1477 = !{!1478, !1479, !1480}
!1478 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1479 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1480 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1481 = !{!102, !103, !1482, !155, !154, !1561, !121, !905, !1572, !328, !1611, !1613}
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1484)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !1485)
!1485 = !{!1486, !1505, !1509, !1513, !1526, !1531, !1535, !1539, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1484, file: !203, line: 365, baseType: !1487, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!103, !1490, !224}
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1492)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1493)
!1493 = !{!1494, !1495, !1496, !1497, !1503, !1504}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1492, file: !141, line: 380, baseType: !144, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1492, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1492, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1492, file: !141, line: 386, baseType: !1498, size: 32, offset: 96)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1500)
!1500 = !{!1501, !1502}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1499, file: !141, line: 359, baseType: !154, size: 8)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1499, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1492, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1492, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1484, file: !203, line: 366, baseType: !1506, size: 32, offset: 32)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 32)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{null, !1490, !155}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1484, file: !203, line: 374, baseType: !1510, size: 32, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!103, !1490}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1484, file: !203, line: 377, baseType: !1514, size: 32, offset: 96)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!103, !1490, !1517}
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1519)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1519, file: !203, line: 123, baseType: !121, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1519, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1519, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1519, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1519, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1484, file: !203, line: 379, baseType: !1527, size: 32, offset: 128)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!103, !1490, !1530}
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1484, file: !203, line: 384, baseType: !1532, size: 32, offset: 160)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!103, !1490, !255, !103}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1484, file: !203, line: 393, baseType: !1536, size: 32, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!103, !1490, !261, !262}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1484, file: !203, line: 402, baseType: !1540, size: 32, offset: 224)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{null, !1490}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1484, file: !203, line: 405, baseType: !1540, size: 32, offset: 256)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1484, file: !203, line: 408, baseType: !1510, size: 32, offset: 288)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1484, file: !203, line: 411, baseType: !1540, size: 32, offset: 320)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1484, file: !203, line: 414, baseType: !1540, size: 32, offset: 352)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1484, file: !203, line: 417, baseType: !1510, size: 32, offset: 384)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1484, file: !203, line: 420, baseType: !1510, size: 32, offset: 416)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1484, file: !203, line: 423, baseType: !1540, size: 32, offset: 448)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1484, file: !203, line: 426, baseType: !1540, size: 32, offset: 480)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1484, file: !203, line: 429, baseType: !1510, size: 32, offset: 512)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1484, file: !203, line: 432, baseType: !1510, size: 32, offset: 544)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1484, file: !203, line: 435, baseType: !1554, size: 32, offset: 576)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{null, !1490, !1557, !102}
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !1558)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{null, !1490, !102}
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 783, baseType: !1563)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 774, size: 224, elements: !1564)
!1564 = !{!1565, !1566, !1567, !1568, !1569, !1570, !1571}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1563, file: !116, line: 776, baseType: !120, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1563, file: !116, line: 777, baseType: !120, size: 32, offset: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1563, file: !116, line: 778, baseType: !120, size: 32, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1563, file: !116, line: 779, baseType: !120, size: 32, offset: 96)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1563, file: !116, line: 780, baseType: !120, size: 32, offset: 128)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1563, file: !116, line: 781, baseType: !120, size: 32, offset: 160)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1563, file: !116, line: 782, baseType: !120, size: 32, offset: 192)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1574)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !809, line: 100, size: 224, elements: !1575)
!1575 = !{!1576, !1581, !1582, !1591, !1596, !1601, !1606}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1574, file: !809, line: 101, baseType: !1577, size: 32)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !809, line: 76, baseType: !1578)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!103, !1490, !905}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1574, file: !809, line: 102, baseType: !1577, size: 32, offset: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1574, file: !809, line: 103, baseType: !1583, size: 32, offset: 64)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !809, line: 83, baseType: !1584)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 32)
!1585 = !DISubroutineType(types: !1586)
!1586 = !{!103, !1490, !905, !1587, !102}
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !809, line: 72, baseType: !1588)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{null, !1490, !905, !102}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1574, file: !809, line: 104, baseType: !1592, size: 32, offset: 96)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !809, line: 79, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!103, !1490, !905, !861}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1574, file: !809, line: 105, baseType: !1597, size: 32, offset: 128)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !809, line: 88, baseType: !1598)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!808, !1490, !905}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1574, file: !809, line: 106, baseType: !1602, size: 32, offset: 160)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !809, line: 92, baseType: !1603)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!103, !1490, !905, !931}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1574, file: !809, line: 107, baseType: !1607, size: 32, offset: 192)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !809, line: 96, baseType: !1608)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!103, !1490, !905, !102}
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1612)
!1612 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1614 = !{!1615, !1621, !1623, !1630, !1632, !1634, !1636, !1638, !1640, !1642, !1644, !1646, !1648, !1650, !1652, !1654, !1444, !1656, !1664, !1687, !1690, !1693, !1704, !1706, !1715, !1734, !1736, !1738, !1740, !1742, !1747, !1749, !1751, !1753, !1755, !1757, !1759, !1764, !1766, !1768, !1770, !1772, !1774, !1776, !1781}
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1446, file: !1617, line: 1914, type: !1618, isLocal: false, isDefinition: true, align: 16)
!1617 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1619)
!1619 = !{!1620}
!1620 = !DISubrange(count: 8)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1446, file: !1617, line: 1914, type: !1491, isLocal: false, isDefinition: true, align: 32)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1446, file: !1617, line: 1914, type: !1625, isLocal: true, isDefinition: true, align: 32)
!1625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1626)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1627)
!1627 = !{!1628, !1629}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1626, file: !132, line: 60, baseType: !1510, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1626, file: !132, line: 65, baseType: !1490, size: 32, offset: 32)
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1446, file: !1617, line: 1914, type: !1618, isLocal: false, isDefinition: true, align: 16)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1446, file: !1617, line: 1914, type: !1491, isLocal: false, isDefinition: true, align: 32)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1446, file: !1617, line: 1914, type: !1625, isLocal: true, isDefinition: true, align: 32)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1446, file: !1617, line: 1914, type: !1618, isLocal: false, isDefinition: true, align: 16)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1446, file: !1617, line: 1914, type: !1491, isLocal: false, isDefinition: true, align: 32)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1446, file: !1617, line: 1914, type: !1625, isLocal: true, isDefinition: true, align: 32)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1446, file: !1617, line: 1914, type: !1618, isLocal: false, isDefinition: true, align: 16)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1446, file: !1617, line: 1914, type: !1491, isLocal: false, isDefinition: true, align: 32)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1446, file: !1617, line: 1914, type: !1625, isLocal: true, isDefinition: true, align: 32)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1446, file: !1617, line: 1914, type: !1499, isLocal: true, isDefinition: true, align: 8)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1446, file: !1617, line: 1914, type: !1499, isLocal: true, isDefinition: true, align: 8)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1446, file: !1617, line: 1914, type: !1499, isLocal: true, isDefinition: true, align: 8)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1446, file: !1617, line: 1914, type: !1499, isLocal: true, isDefinition: true, align: 8)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1446, file: !1617, line: 1914, type: !1658, isLocal: true, isDefinition: true)
!1658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1659, size: 64, elements: !484)
!1659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1660)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !857, line: 343, size: 64, elements: !1661)
!1661 = !{!1662, !1663}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1660, file: !857, line: 344, baseType: !121, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1660, file: !857, line: 345, baseType: !121, size: 32, offset: 32)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1446, file: !1617, line: 1914, type: !1666, isLocal: true, isDefinition: true)
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1667)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1668, line: 60, size: 64, elements: !1669)
!1668 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1669 = !{!1670, !1686}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1667, file: !1668, line: 69, baseType: !1671, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1673)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1668, line: 50, size: 64, elements: !1674)
!1674 = !{!1675, !1684, !1685}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1673, file: !1668, line: 52, baseType: !1676, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1678)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1679, line: 37, baseType: !1680)
!1679 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1679, line: 32, size: 64, elements: !1681)
!1681 = !{!1682, !1683}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1680, file: !1679, line: 34, baseType: !121, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1680, file: !1679, line: 36, baseType: !121, size: 32, offset: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1673, file: !1668, line: 54, baseType: !154, size: 8, offset: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1673, file: !1668, line: 56, baseType: !154, size: 8, offset: 40)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1667, file: !1668, line: 71, baseType: !154, size: 8, offset: 32)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1446, file: !1617, line: 1914, type: !1689, isLocal: true, isDefinition: true)
!1689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1672, size: 64, elements: !484)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1446, file: !1617, line: 1914, type: !1692, isLocal: true, isDefinition: true)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1677, size: 128, elements: !385)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1695, file: !1617, line: 1914, type: !1698, isLocal: true, isDefinition: true, align: 32)
!1695 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1617, file: !1617, line: 1914, type: !1541, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !1696)
!1696 = !{!1697}
!1697 = !DILocalVariable(name: "dev", arg: 1, scope: !1695, file: !1617, line: 1914, type: !1490)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1699)
!1699 = !{!1700, !1701, !1702, !1703}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1698, file: !10, line: 55, baseType: !332, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1698, file: !10, line: 57, baseType: !332, size: 32, offset: 32)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1698, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1698, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1446, file: !1617, line: 1539, type: !1483, isLocal: true, isDefinition: true)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1446, file: !1617, line: 1914, type: !1708, isLocal: true, isDefinition: true)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1709, line: 74, size: 128, elements: !1710)
!1709 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1710 = !{!1711, !1712, !1713, !1714}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1708, file: !1709, line: 76, baseType: !121, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1708, file: !1709, line: 78, baseType: !1490, size: 32, offset: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1708, file: !1709, line: 80, baseType: !1557, size: 32, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1708, file: !1709, line: 81, baseType: !102, size: 32, offset: 96)
!1715 = !DIGlobalVariableExpression(var: !1716, expr: !DIExpression())
!1716 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1446, file: !1617, line: 1914, type: !1717, isLocal: true, isDefinition: true)
!1717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1709, line: 22, size: 256, elements: !1719)
!1719 = !{!1720, !1721, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1732}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1718, file: !1709, line: 24, baseType: !1561, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1718, file: !1709, line: 26, baseType: !1722, size: 32, offset: 32)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1718, file: !1709, line: 28, baseType: !344, size: 32, offset: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1718, file: !1709, line: 30, baseType: !157, size: 8, offset: 96)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1718, file: !1709, line: 32, baseType: !103, size: 32, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1718, file: !1709, line: 34, baseType: !157, size: 8, offset: 160)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1718, file: !1709, line: 36, baseType: !157, size: 8, offset: 168)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1718, file: !1709, line: 38, baseType: !157, size: 8, offset: 176)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1718, file: !1709, line: 40, baseType: !157, size: 8, offset: 184)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1718, file: !1709, line: 41, baseType: !1731, size: 32, offset: 192)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1718, file: !1709, line: 44, baseType: !1733, size: 32, offset: 224)
!1733 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !203, line: 150, baseType: !1540)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1446, file: !1617, line: 1914, type: !1658, isLocal: true, isDefinition: true)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1446, file: !1617, line: 1914, type: !1666, isLocal: true, isDefinition: true)
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1446, file: !1617, line: 1914, type: !1689, isLocal: true, isDefinition: true)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1446, file: !1617, line: 1914, type: !1692, isLocal: true, isDefinition: true)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_1", scope: !1744, file: !1617, line: 1914, type: !1698, isLocal: true, isDefinition: true, align: 32)
!1744 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_1", scope: !1617, file: !1617, line: 1914, type: !1541, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !1745)
!1745 = !{!1746}
!1746 = !DILocalVariable(name: "dev", arg: 1, scope: !1744, file: !1617, line: 1914, type: !1490)
!1747 = !DIGlobalVariableExpression(var: !1748, expr: !DIExpression())
!1748 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1446, file: !1617, line: 1914, type: !1708, isLocal: true, isDefinition: true)
!1749 = !DIGlobalVariableExpression(var: !1750, expr: !DIExpression())
!1750 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1446, file: !1617, line: 1914, type: !1717, isLocal: true, isDefinition: true)
!1751 = !DIGlobalVariableExpression(var: !1752, expr: !DIExpression())
!1752 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1446, file: !1617, line: 1914, type: !1658, isLocal: true, isDefinition: true)
!1753 = !DIGlobalVariableExpression(var: !1754, expr: !DIExpression())
!1754 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1446, file: !1617, line: 1914, type: !1666, isLocal: true, isDefinition: true)
!1755 = !DIGlobalVariableExpression(var: !1756, expr: !DIExpression())
!1756 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1446, file: !1617, line: 1914, type: !1689, isLocal: true, isDefinition: true)
!1757 = !DIGlobalVariableExpression(var: !1758, expr: !DIExpression())
!1758 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1446, file: !1617, line: 1914, type: !1692, isLocal: true, isDefinition: true)
!1759 = !DIGlobalVariableExpression(var: !1760, expr: !DIExpression())
!1760 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_2", scope: !1761, file: !1617, line: 1914, type: !1698, isLocal: true, isDefinition: true, align: 32)
!1761 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_2", scope: !1617, file: !1617, line: 1914, type: !1541, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !1762)
!1762 = !{!1763}
!1763 = !DILocalVariable(name: "dev", arg: 1, scope: !1761, file: !1617, line: 1914, type: !1490)
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression())
!1765 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1446, file: !1617, line: 1914, type: !1708, isLocal: true, isDefinition: true)
!1766 = !DIGlobalVariableExpression(var: !1767, expr: !DIExpression())
!1767 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1446, file: !1617, line: 1914, type: !1717, isLocal: true, isDefinition: true)
!1768 = !DIGlobalVariableExpression(var: !1769, expr: !DIExpression())
!1769 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1446, file: !1617, line: 1914, type: !1658, isLocal: true, isDefinition: true)
!1770 = !DIGlobalVariableExpression(var: !1771, expr: !DIExpression())
!1771 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1446, file: !1617, line: 1914, type: !1666, isLocal: true, isDefinition: true)
!1772 = !DIGlobalVariableExpression(var: !1773, expr: !DIExpression())
!1773 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1446, file: !1617, line: 1914, type: !1689, isLocal: true, isDefinition: true)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1446, file: !1617, line: 1914, type: !1692, isLocal: true, isDefinition: true)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_3", scope: !1778, file: !1617, line: 1914, type: !1698, isLocal: true, isDefinition: true, align: 32)
!1778 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_3", scope: !1617, file: !1617, line: 1914, type: !1541, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !1779)
!1779 = !{!1780}
!1780 = !DILocalVariable(name: "dev", arg: 1, scope: !1778, file: !1617, line: 1914, type: !1490)
!1781 = !DIGlobalVariableExpression(var: !1782, expr: !DIExpression())
!1782 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1446, file: !1617, line: 1914, type: !1708, isLocal: true, isDefinition: true)
!1783 = !DIGlobalVariableExpression(var: !1784, expr: !DIExpression())
!1784 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1785, file: !1865, line: 65, type: !120, isLocal: true, isDefinition: true)
!1785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1787, retainedTypes: !1788, globals: !1862, splitDebugInlining: false, nameTableKind: None)
!1786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!1787 = !{!564}
!1788 = !{!1789, !1791, !332, !154, !121, !1799, !1830}
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1790, line: 46, baseType: !420)
!1790 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 32)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !495, line: 770, baseType: !1793)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 764, size: 128, elements: !1794)
!1794 = !{!1795, !1796, !1797, !1798}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1793, file: !495, line: 766, baseType: !120, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1793, file: !495, line: 767, baseType: !120, size: 32, offset: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1793, file: !495, line: 768, baseType: !120, size: 32, offset: 64)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1793, file: !495, line: 769, baseType: !499, size: 32, offset: 96)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !1801)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !1802)
!1802 = !{!1803, !1805, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1820, !1825, !1829}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1801, file: !495, line: 413, baseType: !1804, size: 256)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1619)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1801, file: !495, line: 414, baseType: !1806, size: 768, offset: 256)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1807)
!1807 = !{!1808}
!1808 = !DISubrange(count: 24)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1801, file: !495, line: 415, baseType: !1804, size: 256, offset: 1024)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1801, file: !495, line: 416, baseType: !1806, size: 768, offset: 1280)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1801, file: !495, line: 417, baseType: !1804, size: 256, offset: 2048)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1801, file: !495, line: 418, baseType: !1806, size: 768, offset: 2304)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1801, file: !495, line: 419, baseType: !1804, size: 256, offset: 3072)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1801, file: !495, line: 420, baseType: !1806, size: 768, offset: 3328)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1801, file: !495, line: 421, baseType: !1804, size: 256, offset: 4096)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1801, file: !495, line: 422, baseType: !1817, size: 1792, offset: 4352)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1818)
!1818 = !{!1819}
!1819 = !DISubrange(count: 56)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1801, file: !495, line: 423, baseType: !1821, size: 1920, offset: 6144)
!1821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1822, size: 1920, elements: !1823)
!1822 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1823 = !{!1824}
!1824 = !DISubrange(count: 240)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1801, file: !495, line: 424, baseType: !1826, size: 20608, offset: 8064)
!1826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1827)
!1827 = !{!1828}
!1828 = !DISubrange(count: 644)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1801, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !1832)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !1833)
!1833 = !{!1834, !1835, !1836, !1837, !1838, !1839, !1840, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1853, !1854, !1855, !1857, !1859, !1861}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1832, file: !495, line: 447, baseType: !499, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1832, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1832, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1832, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1832, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1832, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1832, file: !495, line: 453, baseType: !1841, size: 96, offset: 192)
!1841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1822, size: 96, elements: !1842)
!1842 = !{!1843}
!1843 = !DISubrange(count: 12)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1832, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1832, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1832, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1832, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1832, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1832, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1832, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1832, file: !495, line: 461, baseType: !1852, size: 64, offset: 512)
!1852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 64, elements: !385)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1832, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1832, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1832, file: !495, line: 464, baseType: !1856, size: 128, offset: 640)
!1856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 128, elements: !676)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1832, file: !495, line: 465, baseType: !1858, size: 160, offset: 768)
!1858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 160, elements: !1314)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1832, file: !495, line: 466, baseType: !1860, size: 160, offset: 928)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1314)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1832, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!1862 = !{!1863, !1889, !1892, !1894, !1896, !1783}
!1863 = !DIGlobalVariableExpression(var: !1864, expr: !DIExpression())
!1864 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1785, file: !1865, line: 285, type: !1866, isLocal: true, isDefinition: true, align: 32)
!1865 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1867)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1868)
!1868 = !{!1869, !1888}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1867, file: !132, line: 60, baseType: !1870, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!103, !1873}
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1876)
!1876 = !{!1877, !1878, !1879, !1880, !1886, !1887}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1875, file: !141, line: 380, baseType: !144, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1875, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1875, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1875, file: !141, line: 386, baseType: !1881, size: 32, offset: 96)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1883)
!1883 = !{!1884, !1885}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1882, file: !141, line: 359, baseType: !154, size: 8)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1882, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1875, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1875, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1867, file: !132, line: 65, baseType: !1873, size: 32, offset: 32)
!1889 = !DIGlobalVariableExpression(var: !1890, expr: !DIExpression())
!1890 = distinct !DIGlobalVariable(name: "lock", scope: !1785, file: !1865, line: 34, type: !1891, isLocal: true, isDefinition: true)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!1892 = !DIGlobalVariableExpression(var: !1893, expr: !DIExpression())
!1893 = distinct !DIGlobalVariable(name: "last_load", scope: !1785, file: !1865, line: 36, type: !121, isLocal: true, isDefinition: true)
!1894 = !DIGlobalVariableExpression(var: !1895, expr: !DIExpression())
!1895 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1785, file: !1865, line: 48, type: !121, isLocal: true, isDefinition: true)
!1896 = !DIGlobalVariableExpression(var: !1897, expr: !DIExpression())
!1897 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1785, file: !1865, line: 54, type: !121, isLocal: true, isDefinition: true)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1900, file: !1982, line: 22, type: !1984, isLocal: true, isDefinition: true)
!1900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1901, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1902, retainedTypes: !1903, globals: !1979, splitDebugInlining: false, nameTableKind: None)
!1901 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!1902 = !{!1144, !1150}
!1903 = !{!1904, !1968, !1973, !1197, !1150, !1144, !1978, !102}
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1906)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1145, line: 523, size: 288, elements: !1907)
!1907 = !{!1908, !1927, !1931, !1935, !1939, !1940, !1941, !1945, !1964}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1906, file: !1145, line: 524, baseType: !1909, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 32)
!1910 = !DISubroutineType(types: !1911)
!1911 = !{!103, !1912, !1185, !1186}
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1914)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1915)
!1915 = !{!1916, !1917, !1918, !1919, !1925, !1926}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1914, file: !141, line: 380, baseType: !144, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1914, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1914, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1914, file: !141, line: 386, baseType: !1920, size: 32, offset: 96)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 32)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1922)
!1922 = !{!1923, !1924}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1921, file: !141, line: 359, baseType: !154, size: 8)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1921, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1914, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1914, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1906, file: !1145, line: 530, baseType: !1928, size: 32, offset: 32)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 32)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{!103, !1912, !1191}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1906, file: !1145, line: 532, baseType: !1932, size: 32, offset: 64)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 32)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{!103, !1912, !1197, !1192}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1906, file: !1145, line: 535, baseType: !1936, size: 32, offset: 96)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!103, !1912, !1197}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1906, file: !1145, line: 537, baseType: !1936, size: 32, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1906, file: !1145, line: 539, baseType: !1936, size: 32, offset: 160)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1906, file: !1145, line: 541, baseType: !1942, size: 32, offset: 192)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 32)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{!103, !1912, !1185, !1144, !1150}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1906, file: !1145, line: 544, baseType: !1946, size: 32, offset: 224)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!103, !1912, !1949, !157}
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 32)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1145, line: 478, size: 96, elements: !1951)
!1951 = !{!1952, !1958, !1963}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1950, file: !1145, line: 482, baseType: !1953, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1217, line: 33, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1217, line: 29, size: 32, elements: !1955)
!1955 = !{!1956}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1954, file: !1217, line: 30, baseType: !1957, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1950, file: !1145, line: 485, baseType: !1959, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1145, line: 464, baseType: !1960)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{null, !1912, !1949, !1197}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1950, file: !1145, line: 493, baseType: !1197, size: 32, offset: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1906, file: !1145, line: 547, baseType: !1965, size: 32, offset: 256)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!1966 = !DISubroutineType(types: !1967)
!1967 = !{!121, !1912}
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1970)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1145, line: 428, size: 32, elements: !1971)
!1971 = !{!1972}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1970, file: !1145, line: 434, baseType: !1197, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1975)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1145, line: 441, size: 32, elements: !1976)
!1976 = !{!1977}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1975, file: !1145, line: 447, baseType: !1197, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 32)
!1979 = !{!1980, !1898}
!1980 = !DIGlobalVariableExpression(var: !1981, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1981 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1900, file: !1982, line: 37, type: !1983, isLocal: true, isDefinition: true)
!1982 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !344)
!1984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1985, size: 352, elements: !1986)
!1985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1912)
!1986 = !{!1987}
!1987 = !DISubrange(count: 11)
!1988 = !DIGlobalVariableExpression(var: !1989, expr: !DIExpression())
!1989 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1990, file: !2034, line: 139, type: !2038, isLocal: false, isDefinition: true)
!1990 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1991, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1992, globals: !2031, splitDebugInlining: false, nameTableKind: None)
!1991 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!1992 = !{!1993}
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !1995)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !1996)
!1996 = !{!1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1995, file: !116, line: 552, baseType: !120, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1995, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1995, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1995, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1995, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1995, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1995, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1995, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1995, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1995, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1995, file: !116, line: 562, baseType: !831, size: 64, offset: 320)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1995, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1995, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1995, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1995, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1995, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1995, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1995, file: !116, line: 569, baseType: !831, size: 64, offset: 576)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1995, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1995, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1995, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1995, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1995, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1995, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1995, file: !116, line: 576, baseType: !831, size: 64, offset: 832)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1995, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1995, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1995, file: !116, line: 579, baseType: !831, size: 64, offset: 960)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1995, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1995, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1995, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1995, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1995, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1995, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!2031 = !{!2032, !2035, !1988}
!2032 = !DIGlobalVariableExpression(var: !2033, expr: !DIExpression())
!2033 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1990, file: !2034, line: 137, type: !121, isLocal: false, isDefinition: true)
!2034 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2035 = !DIGlobalVariableExpression(var: !2036, expr: !DIExpression())
!2036 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1990, file: !2034, line: 138, type: !2037, isLocal: false, isDefinition: true)
!2037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 128, elements: !290)
!2038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 64, elements: !1619)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2041, file: !2044, line: 23, type: !262, isLocal: false, isDefinition: true)
!2041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !2043, splitDebugInlining: false, nameTableKind: None)
!2042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2043 = !{!2039}
!2044 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2045 = !DIGlobalVariableExpression(var: !2046, expr: !DIExpression())
!2046 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2047, file: !2051, line: 86, type: !2300, isLocal: false, isDefinition: true, align: 512)
!2047 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2048, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2049, retainedTypes: !2058, globals: !2131, splitDebugInlining: false, nameTableKind: None)
!2048 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2049 = !{!2050, !30, !564}
!2050 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2051, line: 63, baseType: !32, size: 32, elements: !2052)
!2051 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2052 = !{!2053, !2054, !2055, !2056, !2057}
!2053 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2054 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2055 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2056 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2057 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2058 = !{!344, !102, !103, !2059, !1087, !121, !2089, !332, !154, !2114}
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2061)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2062, line: 51, size: 64, elements: !2063)
!2062 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2063 = !{!2064, !2084}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2061, file: !2062, line: 52, baseType: !2065, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2062, line: 38, baseType: !2066)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2067 = !DISubroutineType(types: !2068)
!2068 = !{!103, !2069, !261, !328}
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2071)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !2072)
!2072 = !{!2073, !2074, !2075, !2076, !2082, !2083}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2071, file: !141, line: 380, baseType: !144, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2071, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2071, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2071, file: !141, line: 386, baseType: !2077, size: 32, offset: 96)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 32)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !2079)
!2079 = !{!2080, !2081}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2078, file: !141, line: 359, baseType: !154, size: 8)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2078, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2071, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2071, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2061, file: !2062, line: 53, baseType: !2085, size: 32, offset: 32)
!2085 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2062, line: 47, baseType: !2086)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 32)
!2087 = !DISubroutineType(types: !2088)
!2088 = !{!103, !2069, !261, !328, !121}
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2091)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2092)
!2092 = !{!2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2091, file: !495, line: 447, baseType: !499, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2091, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2091, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2091, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2091, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2091, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2091, file: !495, line: 453, baseType: !1841, size: 96, offset: 192)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2091, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2091, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2091, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2091, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2091, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2091, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2091, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2091, file: !495, line: 461, baseType: !1852, size: 64, offset: 512)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2091, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2091, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2091, file: !495, line: 464, baseType: !1856, size: 128, offset: 640)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2091, file: !495, line: 465, baseType: !1858, size: 160, offset: 768)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2091, file: !495, line: 466, baseType: !1860, size: 160, offset: 928)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2091, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !2116)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !2117)
!2117 = !{!2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2116, file: !495, line: 413, baseType: !1804, size: 256)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2116, file: !495, line: 414, baseType: !1806, size: 768, offset: 256)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2116, file: !495, line: 415, baseType: !1804, size: 256, offset: 1024)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2116, file: !495, line: 416, baseType: !1806, size: 768, offset: 1280)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2116, file: !495, line: 417, baseType: !1804, size: 256, offset: 2048)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2116, file: !495, line: 418, baseType: !1806, size: 768, offset: 2304)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2116, file: !495, line: 419, baseType: !1804, size: 256, offset: 3072)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2116, file: !495, line: 420, baseType: !1806, size: 768, offset: 3328)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2116, file: !495, line: 421, baseType: !1804, size: 256, offset: 4096)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2116, file: !495, line: 422, baseType: !1817, size: 1792, offset: 4352)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2116, file: !495, line: 423, baseType: !1821, size: 1920, offset: 6144)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2116, file: !495, line: 424, baseType: !1826, size: 20608, offset: 8064)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2116, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!2131 = !{!2132, !2254, !2263, !2265, !2045, !2268, !2270, !2275}
!2132 = !DIGlobalVariableExpression(var: !2133, expr: !DIExpression())
!2133 = distinct !DIGlobalVariable(name: "_kernel", scope: !2047, file: !2051, line: 40, type: !2134, isLocal: false, isDefinition: true)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !304, line: 158, size: 288, elements: !2135)
!2135 = !{!2136, !2249}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2134, file: !304, line: 159, baseType: !2137, size: 192)
!2137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2138, size: 192, elements: !484)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !304, line: 100, size: 192, elements: !2139)
!2139 = !{!2140, !2141, !2142, !2243, !2244, !2245, !2246}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2138, file: !304, line: 102, baseType: !121, size: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2138, file: !304, line: 105, baseType: !1087, size: 32, offset: 32)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2138, file: !304, line: 108, baseType: !2143, size: 32, offset: 64)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !2145)
!2145 = !{!2146, !2204, !2216, !2217, !2218, !2219, !2225, !2238}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2144, file: !355, line: 247, baseType: !2147, size: 384)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !2148)
!2148 = !{!2149, !2173, !2180, !2181, !2182, !2191, !2192, !2193}
!2149 = !DIDerivedType(tag: DW_TAG_member, scope: !2147, file: !355, line: 60, baseType: !2150, size: 64)
!2150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2147, file: !355, line: 60, size: 64, elements: !2151)
!2151 = !{!2152, !2167}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2150, file: !355, line: 61, baseType: !2153, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2154)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2155)
!2155 = !{!2156, !2162}
!2156 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !309, line: 38, baseType: !2157, size: 32)
!2157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !309, line: 38, size: 32, elements: !2158)
!2158 = !{!2159, !2161}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2157, file: !309, line: 39, baseType: !2160, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2157, file: !309, line: 40, baseType: !2160, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !309, line: 42, baseType: !2163, size: 32, offset: 32)
!2163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !309, line: 42, size: 32, elements: !2164)
!2164 = !{!2165, !2166}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2163, file: !309, line: 43, baseType: !2160, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2163, file: !309, line: 44, baseType: !2160, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2150, file: !355, line: 62, baseType: !2168, size: 64)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !2169)
!2169 = !{!2170}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2168, file: !380, line: 50, baseType: !2171, size: 64)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2172, size: 64, elements: !385)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2147, file: !355, line: 68, baseType: !2174, size: 32, offset: 64)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !2176)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !2177)
!2177 = !{!2178}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2176, file: !304, line: 232, baseType: !2179, size: 64)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2154)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2147, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2147, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!2182 = !DIDerivedType(tag: DW_TAG_member, scope: !2147, file: !355, line: 90, baseType: !2183, size: 16, offset: 112)
!2183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2147, file: !355, line: 90, size: 16, elements: !2184)
!2184 = !{!2185, !2190}
!2185 = !DIDerivedType(tag: DW_TAG_member, scope: !2183, file: !355, line: 91, baseType: !2186, size: 16)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2183, file: !355, line: 91, size: 16, elements: !2187)
!2187 = !{!2188, !2189}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2186, file: !355, line: 96, baseType: !403, size: 8)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2186, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2183, file: !355, line: 100, baseType: !328, size: 16)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2147, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2147, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2147, file: !355, line: 131, baseType: !2194, size: 192, offset: 192)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2195)
!2195 = !{!2196, !2197, !2203}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2194, file: !304, line: 245, baseType: !2153, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2194, file: !304, line: 246, baseType: !2198, size: 32, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2199)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 32)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{null, !2202}
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2194, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2144, file: !355, line: 250, baseType: !2205, size: 288, offset: 384)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !2206)
!2206 = !{!2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2205, file: !424, line: 26, baseType: !121, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2205, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2205, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2205, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2205, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2205, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2205, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2205, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2205, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2144, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2144, file: !355, line: 256, baseType: !2175, size: 64, offset: 704)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2144, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2144, file: !355, line: 300, baseType: !2220, size: 96, offset: 800)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !2221)
!2221 = !{!2222, !2223, !2224}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2220, file: !355, line: 153, baseType: !22, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2220, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2220, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2144, file: !355, line: 325, baseType: !2226, size: 32, offset: 896)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !2228)
!2228 = !{!2229, !2235, !2236}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2227, file: !300, line: 5074, baseType: !2230, size: 96)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !2231)
!2231 = !{!2232, !2233, !2234}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2230, file: !450, line: 57, baseType: !453, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2230, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2230, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2227, file: !300, line: 5075, baseType: !2175, size: 64, offset: 96)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2227, file: !300, line: 5076, baseType: !2237, offset: 160)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2144, file: !355, line: 343, baseType: !2239, size: 64, offset: 928)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !2240)
!2240 = !{!2241, !2242}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2239, file: !424, line: 63, baseType: !121, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2239, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2138, file: !304, line: 111, baseType: !2143, size: 32, offset: 96)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2138, file: !304, line: 124, baseType: !103, size: 32, offset: 128)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2138, file: !304, line: 127, baseType: !154, size: 8, offset: 160)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2138, file: !304, line: 153, baseType: !2247, offset: 168)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2248, line: 33, elements: !461)
!2248 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2134, file: !304, line: 170, baseType: !2250, size: 96, offset: 192)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !304, line: 83, size: 96, elements: !2251)
!2251 = !{!2252, !2253}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2250, file: !304, line: 86, baseType: !2143, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2250, file: !304, line: 90, baseType: !2179, size: 64, offset: 32)
!2254 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression())
!2255 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2047, file: !2051, line: 43, type: !2256, isLocal: false, isDefinition: true, align: 512)
!2256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 8704, elements: !2261)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2258, line: 47, size: 8, elements: !2259)
!2258 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2259 = !{!2260}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2257, file: !2258, line: 48, baseType: !146, size: 8)
!2261 = !{!2262}
!2262 = !DISubrange(count: 1088)
!2263 = !DIGlobalVariableExpression(var: !2264, expr: !DIExpression())
!2264 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2047, file: !2051, line: 44, type: !2144, isLocal: false, isDefinition: true)
!2265 = !DIGlobalVariableExpression(var: !2266, expr: !DIExpression())
!2266 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2047, file: !2051, line: 48, type: !2267, isLocal: false, isDefinition: true)
!2267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2144, size: 1024, elements: !484)
!2268 = !DIGlobalVariableExpression(var: !2269, expr: !DIExpression())
!2269 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2047, file: !2051, line: 217, type: !157, isLocal: false, isDefinition: true)
!2270 = !DIGlobalVariableExpression(var: !2271, expr: !DIExpression())
!2271 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2047, file: !2051, line: 50, type: !2272, isLocal: true, isDefinition: true, align: 512)
!2272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 3072, elements: !2273)
!2273 = !{!485, !2274}
!2274 = !DISubrange(count: 384)
!2275 = !DIGlobalVariableExpression(var: !2276, expr: !DIExpression())
!2276 = distinct !DIGlobalVariable(name: "levels", scope: !2277, file: !2051, line: 232, type: !2297, isLocal: true, isDefinition: true)
!2277 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2051, file: !2051, line: 230, type: !2278, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !2280)
!2278 = !DISubroutineType(types: !2279)
!2279 = !{null, !2050}
!2280 = !{!2281, !2282, !2292, !2296}
!2281 = !DILocalVariable(name: "level", arg: 1, scope: !2277, file: !2051, line: 230, type: !2050)
!2282 = !DILocalVariable(name: "entry", scope: !2277, file: !2051, line: 244, type: !2283)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2285)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2286)
!2286 = !{!2287, !2291}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2285, file: !132, line: 60, baseType: !2288, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 32)
!2289 = !DISubroutineType(types: !2290)
!2290 = !{!103, !2069}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2285, file: !132, line: 65, baseType: !2069, size: 32, offset: 32)
!2292 = !DILocalVariable(name: "dev", scope: !2293, file: !2051, line: 247, type: !2069)
!2293 = distinct !DILexicalBlock(scope: !2294, file: !2051, line: 246, column: 64)
!2294 = distinct !DILexicalBlock(scope: !2295, file: !2051, line: 246, column: 2)
!2295 = distinct !DILexicalBlock(scope: !2277, file: !2051, line: 246, column: 2)
!2296 = !DILocalVariable(name: "rc", scope: !2293, file: !2051, line: 248, type: !103)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2283, size: 192, elements: !2298)
!2298 = !{!2299}
!2299 = !DISubrange(count: 6)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 16896, elements: !2301)
!2301 = !{!485, !2302}
!2302 = !DISubrange(count: 2112)
!2303 = !DIGlobalVariableExpression(var: !2304, expr: !DIExpression())
!2304 = distinct !DIGlobalVariable(name: "states_str", scope: !2305, file: !2306, line: 276, type: !2427, isLocal: true, isDefinition: true)
!2305 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2306, file: !2306, line: 271, type: !2307, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !2418)
!2306 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2307 = !DISubroutineType(types: !2308)
!2308 = !{!144, !2309, !1087, !344}
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !2310)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 32)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !2312)
!2312 = !{!2313, !2371, !2383, !2384, !2385, !2386, !2392, !2405}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2311, file: !355, line: 247, baseType: !2314, size: 384)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !2315)
!2315 = !{!2316, !2340, !2347, !2348, !2349, !2358, !2359, !2360}
!2316 = !DIDerivedType(tag: DW_TAG_member, scope: !2314, file: !355, line: 60, baseType: !2317, size: 64)
!2317 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2314, file: !355, line: 60, size: 64, elements: !2318)
!2318 = !{!2319, !2334}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2317, file: !355, line: 61, baseType: !2320, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2321)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2322)
!2322 = !{!2323, !2329}
!2323 = !DIDerivedType(tag: DW_TAG_member, scope: !2321, file: !309, line: 38, baseType: !2324, size: 32)
!2324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2321, file: !309, line: 38, size: 32, elements: !2325)
!2325 = !{!2326, !2328}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2324, file: !309, line: 39, baseType: !2327, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2324, file: !309, line: 40, baseType: !2327, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, scope: !2321, file: !309, line: 42, baseType: !2330, size: 32, offset: 32)
!2330 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2321, file: !309, line: 42, size: 32, elements: !2331)
!2331 = !{!2332, !2333}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2330, file: !309, line: 43, baseType: !2327, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2330, file: !309, line: 44, baseType: !2327, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2317, file: !355, line: 62, baseType: !2335, size: 64)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !2336)
!2336 = !{!2337}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2335, file: !380, line: 50, baseType: !2338, size: 64)
!2338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2339, size: 64, elements: !385)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2314, file: !355, line: 68, baseType: !2341, size: 32, offset: 64)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !2343)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !2344)
!2344 = !{!2345}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2343, file: !304, line: 232, baseType: !2346, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2321)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2314, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2314, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!2349 = !DIDerivedType(tag: DW_TAG_member, scope: !2314, file: !355, line: 90, baseType: !2350, size: 16, offset: 112)
!2350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2314, file: !355, line: 90, size: 16, elements: !2351)
!2351 = !{!2352, !2357}
!2352 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !355, line: 91, baseType: !2353, size: 16)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2350, file: !355, line: 91, size: 16, elements: !2354)
!2354 = !{!2355, !2356}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2353, file: !355, line: 96, baseType: !403, size: 8)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2353, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2350, file: !355, line: 100, baseType: !328, size: 16)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2314, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2314, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2314, file: !355, line: 131, baseType: !2361, size: 192, offset: 192)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2362)
!2362 = !{!2363, !2364, !2370}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2361, file: !304, line: 245, baseType: !2320, size: 64)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2361, file: !304, line: 246, baseType: !2365, size: 32, offset: 64)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2366)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!2367 = !DISubroutineType(types: !2368)
!2368 = !{null, !2369}
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2361, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2311, file: !355, line: 250, baseType: !2372, size: 288, offset: 384)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !2373)
!2373 = !{!2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2372, file: !424, line: 26, baseType: !121, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2372, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2372, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2372, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2372, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2372, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2372, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2372, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2372, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2311, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2311, file: !355, line: 256, baseType: !2342, size: 64, offset: 704)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2311, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2311, file: !355, line: 300, baseType: !2387, size: 96, offset: 800)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !2388)
!2388 = !{!2389, !2390, !2391}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2387, file: !355, line: 153, baseType: !22, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2387, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2387, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2311, file: !355, line: 325, baseType: !2393, size: 32, offset: 896)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 32)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !2395)
!2395 = !{!2396, !2402, !2403}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2394, file: !300, line: 5074, baseType: !2397, size: 96)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !2398)
!2398 = !{!2399, !2400, !2401}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2397, file: !450, line: 57, baseType: !453, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2397, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2397, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2394, file: !300, line: 5075, baseType: !2342, size: 64, offset: 96)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2394, file: !300, line: 5076, baseType: !2404, offset: 160)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2311, file: !355, line: 343, baseType: !2406, size: 64, offset: 928)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !2407)
!2407 = !{!2408, !2409}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2406, file: !424, line: 63, baseType: !121, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2406, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!2410 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2411, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2412, globals: !2414, splitDebugInlining: false, nameTableKind: None)
!2411 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2412 = !{!102, !144, !1789, !154, !103, !2413, !24, !344, !1087, !22, !121, !1611}
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!2414 = !{!2303, !2415}
!2415 = !DIGlobalVariableExpression(var: !2416, expr: !DIExpression())
!2416 = distinct !DIGlobalVariable(name: "states_sz", scope: !2305, file: !2306, line: 279, type: !2417, isLocal: true, isDefinition: true)
!2417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1983, size: 256, elements: !1619)
!2418 = !{!2419, !2420, !2421, !2422, !2423, !2424, !2425}
!2419 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2305, file: !2306, line: 271, type: !2309)
!2420 = !DILocalVariable(name: "buf", arg: 2, scope: !2305, file: !2306, line: 271, type: !1087)
!2421 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2305, file: !2306, line: 271, type: !344)
!2422 = !DILocalVariable(name: "off", scope: !2305, file: !2306, line: 273, type: !344)
!2423 = !DILocalVariable(name: "bit", scope: !2305, file: !2306, line: 274, type: !154)
!2424 = !DILocalVariable(name: "thread_state", scope: !2305, file: !2306, line: 275, type: !154)
!2425 = !DILocalVariable(name: "index", scope: !2426, file: !2306, line: 293, type: !154)
!2426 = distinct !DILexicalBlock(scope: !2305, file: !2306, line: 293, column: 2)
!2427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1619)
!2428 = !DIGlobalVariableExpression(var: !2429, expr: !DIExpression())
!2429 = distinct !DIGlobalVariable(name: "lock", scope: !2430, file: !2449, line: 39, type: !2450, isLocal: true, isDefinition: true)
!2430 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2431, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2432, globals: !2448, splitDebugInlining: false, nameTableKind: None)
!2431 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2432 = !{!102, !157, !103, !2433}
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2435)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2436)
!2436 = !{!2437, !2443}
!2437 = !DIDerivedType(tag: DW_TAG_member, scope: !2435, file: !309, line: 38, baseType: !2438, size: 32)
!2438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2435, file: !309, line: 38, size: 32, elements: !2439)
!2439 = !{!2440, !2442}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2438, file: !309, line: 39, baseType: !2441, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2438, file: !309, line: 40, baseType: !2441, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, scope: !2435, file: !309, line: 42, baseType: !2444, size: 32, offset: 32)
!2444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2435, file: !309, line: 42, size: 32, elements: !2445)
!2445 = !{!2446, !2447}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2444, file: !309, line: 43, baseType: !2441, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2444, file: !309, line: 44, baseType: !2441, size: 32)
!2448 = !{!2428}
!2449 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2451 = !DIGlobalVariableExpression(var: !2452, expr: !DIExpression())
!2452 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2453, file: !2561, line: 56, type: !2550, isLocal: false, isDefinition: true)
!2453 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2454, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2455, globals: !2558, splitDebugInlining: false, nameTableKind: None)
!2454 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2455 = !{!2456, !1087, !102, !2556, !261, !1789, !332, !103, !121, !1611, !2557}
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !2458)
!2458 = !{!2459, !2517, !2529, !2530, !2531, !2532, !2538, !2551}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2457, file: !355, line: 247, baseType: !2460, size: 384)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !2461)
!2461 = !{!2462, !2486, !2493, !2494, !2495, !2504, !2505, !2506}
!2462 = !DIDerivedType(tag: DW_TAG_member, scope: !2460, file: !355, line: 60, baseType: !2463, size: 64)
!2463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2460, file: !355, line: 60, size: 64, elements: !2464)
!2464 = !{!2465, !2480}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2463, file: !355, line: 61, baseType: !2466, size: 64)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2467)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2468)
!2468 = !{!2469, !2475}
!2469 = !DIDerivedType(tag: DW_TAG_member, scope: !2467, file: !309, line: 38, baseType: !2470, size: 32)
!2470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2467, file: !309, line: 38, size: 32, elements: !2471)
!2471 = !{!2472, !2474}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2470, file: !309, line: 39, baseType: !2473, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2470, file: !309, line: 40, baseType: !2473, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, scope: !2467, file: !309, line: 42, baseType: !2476, size: 32, offset: 32)
!2476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2467, file: !309, line: 42, size: 32, elements: !2477)
!2477 = !{!2478, !2479}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2476, file: !309, line: 43, baseType: !2473, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2476, file: !309, line: 44, baseType: !2473, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2463, file: !355, line: 62, baseType: !2481, size: 64)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !2482)
!2482 = !{!2483}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2481, file: !380, line: 50, baseType: !2484, size: 64)
!2484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2485, size: 64, elements: !385)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2460, file: !355, line: 68, baseType: !2487, size: 32, offset: 64)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !2489)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !2490)
!2490 = !{!2491}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2489, file: !304, line: 232, baseType: !2492, size: 64)
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2467)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2460, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2460, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!2495 = !DIDerivedType(tag: DW_TAG_member, scope: !2460, file: !355, line: 90, baseType: !2496, size: 16, offset: 112)
!2496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2460, file: !355, line: 90, size: 16, elements: !2497)
!2497 = !{!2498, !2503}
!2498 = !DIDerivedType(tag: DW_TAG_member, scope: !2496, file: !355, line: 91, baseType: !2499, size: 16)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2496, file: !355, line: 91, size: 16, elements: !2500)
!2500 = !{!2501, !2502}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2499, file: !355, line: 96, baseType: !403, size: 8)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2499, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2496, file: !355, line: 100, baseType: !328, size: 16)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2460, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2460, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2460, file: !355, line: 131, baseType: !2507, size: 192, offset: 192)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2508)
!2508 = !{!2509, !2510, !2516}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2507, file: !304, line: 245, baseType: !2466, size: 64)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2507, file: !304, line: 246, baseType: !2511, size: 32, offset: 64)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2512)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 32)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{null, !2515}
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2507, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2457, file: !355, line: 250, baseType: !2518, size: 288, offset: 384)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !2519)
!2519 = !{!2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2518, file: !424, line: 26, baseType: !121, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2518, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2518, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2518, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2518, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2518, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2518, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2518, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2518, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2457, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2457, file: !355, line: 256, baseType: !2488, size: 64, offset: 704)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2457, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2457, file: !355, line: 300, baseType: !2533, size: 96, offset: 800)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !2534)
!2534 = !{!2535, !2536, !2537}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2533, file: !355, line: 153, baseType: !22, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2533, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2533, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2457, file: !355, line: 325, baseType: !2539, size: 32, offset: 896)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 32)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !2541)
!2541 = !{!2542, !2548, !2549}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2540, file: !300, line: 5074, baseType: !2543, size: 96)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !2544)
!2544 = !{!2545, !2546, !2547}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2543, file: !450, line: 57, baseType: !453, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2543, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2543, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2540, file: !300, line: 5075, baseType: !2488, size: 64, offset: 96)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2540, file: !300, line: 5076, baseType: !2550, offset: 160)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2457, file: !355, line: 343, baseType: !2552, size: 64, offset: 928)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !2553)
!2553 = !{!2554, !2555}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2552, file: !424, line: 63, baseType: !121, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2552, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 32)
!2558 = !{!2451, !2559, !2562, !2564}
!2559 = !DIGlobalVariableExpression(var: !2560, expr: !DIExpression())
!2560 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2453, file: !2561, line: 404, type: !103, isLocal: true, isDefinition: true)
!2561 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2562 = !DIGlobalVariableExpression(var: !2563, expr: !DIExpression())
!2563 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2453, file: !2561, line: 405, type: !103, isLocal: true, isDefinition: true)
!2564 = !DIGlobalVariableExpression(var: !2565, expr: !DIExpression())
!2565 = distinct !DIGlobalVariable(name: "pending_current", scope: !2453, file: !2561, line: 425, type: !2456, isLocal: true, isDefinition: true)
!2566 = !DIGlobalVariableExpression(var: !2567, expr: !DIExpression())
!2567 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2568, file: !2598, line: 15, type: !1611, isLocal: true, isDefinition: true)
!2568 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2569, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2570, globals: !2595, splitDebugInlining: false, nameTableKind: None)
!2569 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2570 = !{!1789, !102, !332, !121, !1611, !103, !2571, !1087, !420}
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 32)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2573)
!2573 = !{!2574, !2589, !2594}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2572, file: !304, line: 245, baseType: !2575, size: 64)
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2576)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2577)
!2577 = !{!2578, !2584}
!2578 = !DIDerivedType(tag: DW_TAG_member, scope: !2576, file: !309, line: 38, baseType: !2579, size: 32)
!2579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2576, file: !309, line: 38, size: 32, elements: !2580)
!2580 = !{!2581, !2583}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2579, file: !309, line: 39, baseType: !2582, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2579, file: !309, line: 40, baseType: !2582, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, scope: !2576, file: !309, line: 42, baseType: !2585, size: 32, offset: 32)
!2585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2576, file: !309, line: 42, size: 32, elements: !2586)
!2586 = !{!2587, !2588}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2585, file: !309, line: 43, baseType: !2582, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2585, file: !309, line: 44, baseType: !2582, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2572, file: !304, line: 246, baseType: !2590, size: 32, offset: 64)
!2590 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2591)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 32)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{null, !2571}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2572, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2595 = !{!2566, !2596, !2600, !2602}
!2596 = !DIGlobalVariableExpression(var: !2597, expr: !DIExpression())
!2597 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2568, file: !2598, line: 19, type: !2599, isLocal: true, isDefinition: true)
!2598 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2600 = !DIGlobalVariableExpression(var: !2601, expr: !DIExpression())
!2601 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2568, file: !2598, line: 25, type: !103, isLocal: true, isDefinition: true)
!2602 = !DIGlobalVariableExpression(var: !2603, expr: !DIExpression())
!2603 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2568, file: !2598, line: 17, type: !2604, isLocal: true, isDefinition: true)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2576)
!2605 = !DIGlobalVariableExpression(var: !2606, expr: !DIExpression())
!2606 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2607, file: !2626, line: 55, type: !2627, isLocal: true, isDefinition: true, align: 32)
!2607 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2608, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2609, globals: !2625, splitDebugInlining: false, nameTableKind: None)
!2608 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2609 = !{!102, !1789, !103, !2610}
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2612)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2613)
!2613 = !{!2614, !2620}
!2614 = !DIDerivedType(tag: DW_TAG_member, scope: !2612, file: !309, line: 38, baseType: !2615, size: 32)
!2615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2612, file: !309, line: 38, size: 32, elements: !2616)
!2616 = !{!2617, !2619}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2615, file: !309, line: 39, baseType: !2618, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2615, file: !309, line: 40, baseType: !2618, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, scope: !2612, file: !309, line: 42, baseType: !2621, size: 32, offset: 32)
!2621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2612, file: !309, line: 42, size: 32, elements: !2622)
!2622 = !{!2623, !2624}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2621, file: !309, line: 43, baseType: !2618, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2621, file: !309, line: 44, baseType: !2618, size: 32)
!2625 = !{!2605}
!2626 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2628)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2629)
!2629 = !{!2630, !2637}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2628, file: !132, line: 60, baseType: !2631, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 32)
!2632 = !DISubroutineType(types: !2633)
!2633 = !{!103, !2634}
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2636)
!2636 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !132, line: 48, flags: DIFlagFwdDecl)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2628, file: !132, line: 65, baseType: !2634, size: 32, offset: 32)
!2638 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2639, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2639 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2640 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2641, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2641 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getchar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2643, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2643 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2645, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2646, retainedTypes: !2654, splitDebugInlining: false, nameTableKind: None)
!2645 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2646 = !{!30, !2647}
!2647 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2648, line: 54, baseType: !32, size: 32, elements: !2649)
!2648 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2649 = !{!2650, !2651, !2652, !2653}
!2650 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2651 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2652 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2653 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2654 = !{!102, !344, !261, !24, !2655, !22, !2661, !103, !861, !2676}
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2648, line: 58, baseType: !2657)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2648, line: 58, size: 64, elements: !2658)
!2658 = !{!2659}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2657, file: !2648, line: 58, baseType: !2660, size: 64)
!2660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 64, elements: !1619)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 32)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2648, line: 68, size: 128, elements: !2663)
!2663 = !{!2664, !2667, !2668, !2669}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2662, file: !2648, line: 69, baseType: !2665, size: 64)
!2665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2666, size: 64, elements: !385)
!2666 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2648, line: 61, baseType: !121)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2662, file: !2648, line: 70, baseType: !2666, size: 32, offset: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2662, file: !2648, line: 71, baseType: !121, size: 32, offset: 96)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2662, file: !2648, line: 77, baseType: !2670, offset: 128)
!2670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2671, elements: !2674)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2648, line: 64, size: 32, elements: !2672)
!2672 = !{!2673}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2671, file: !2648, line: 65, baseType: !2666, size: 32)
!2674 = !{!2675}
!2675 = !DISubrange(count: 0)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 32)
!2677 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2678, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2679, retainedTypes: !2699, splitDebugInlining: false, nameTableKind: None)
!2678 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2679 = !{!2680, !2688}
!2680 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2681, line: 69, baseType: !32, size: 32, elements: !2682)
!2681 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2682 = !{!2683, !2684, !2685, !2686, !2687}
!2683 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2684 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2685 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2686 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2687 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2688 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2681, line: 56, baseType: !32, size: 32, elements: !2689)
!2689 = !{!2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698}
!2690 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2691 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2692 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2693 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2694 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2695 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2696 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2697 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2698 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2699 = !{!103, !2680, !2688, !2700, !404, !164, !2702, !2703, !155, !329, !144, !344, !102, !22, !32, !2705, !2706, !2707, !1117, !2708, !421, !2709, !2701, !2710, !2711, !2712, !2713}
!2700 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2681, line: 31, baseType: !2701)
!2701 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !421)
!2702 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !345, line: 329, baseType: !32)
!2703 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2681, line: 32, baseType: !2704)
!2704 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1612)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !345, line: 145, baseType: !103)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 32)
!2714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2715, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2715 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2716 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2717, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2718, splitDebugInlining: false, nameTableKind: None)
!2717 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2718 = !{!154, !102, !103, !2719, !1789, !121, !1611}
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2721)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !2722)
!2722 = !{!2723, !2742, !2746, !2750, !2763, !2768, !2772, !2776, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2721, file: !203, line: 365, baseType: !2724, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 32)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{!103, !2727, !224}
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2729)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !2730)
!2730 = !{!2731, !2732, !2733, !2734, !2740, !2741}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2729, file: !141, line: 380, baseType: !144, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2729, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2729, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2729, file: !141, line: 386, baseType: !2735, size: 32, offset: 96)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 32)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !2737)
!2737 = !{!2738, !2739}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2736, file: !141, line: 359, baseType: !154, size: 8)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2736, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2729, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2729, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2721, file: !203, line: 366, baseType: !2743, size: 32, offset: 32)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 32)
!2744 = !DISubroutineType(types: !2745)
!2745 = !{null, !2727, !155}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2721, file: !203, line: 374, baseType: !2747, size: 32, offset: 64)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 32)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{!103, !2727}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2721, file: !203, line: 377, baseType: !2751, size: 32, offset: 96)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 32)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!103, !2727, !2754}
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 32)
!2755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2756)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !2757)
!2757 = !{!2758, !2759, !2760, !2761, !2762}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2756, file: !203, line: 123, baseType: !121, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2756, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2756, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2756, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2756, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2721, file: !203, line: 379, baseType: !2764, size: 32, offset: 128)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 32)
!2765 = !DISubroutineType(types: !2766)
!2766 = !{!103, !2727, !2767}
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !2721, file: !203, line: 384, baseType: !2769, size: 32, offset: 160)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 32)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!103, !2727, !255, !103}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !2721, file: !203, line: 393, baseType: !2773, size: 32, offset: 192)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 32)
!2774 = !DISubroutineType(types: !2775)
!2775 = !{!103, !2727, !261, !262}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !2721, file: !203, line: 402, baseType: !2777, size: 32, offset: 224)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 32)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{null, !2727}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !2721, file: !203, line: 405, baseType: !2777, size: 32, offset: 256)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !2721, file: !203, line: 408, baseType: !2747, size: 32, offset: 288)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !2721, file: !203, line: 411, baseType: !2777, size: 32, offset: 320)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !2721, file: !203, line: 414, baseType: !2777, size: 32, offset: 352)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !2721, file: !203, line: 417, baseType: !2747, size: 32, offset: 384)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !2721, file: !203, line: 420, baseType: !2747, size: 32, offset: 416)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !2721, file: !203, line: 423, baseType: !2777, size: 32, offset: 448)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !2721, file: !203, line: 426, baseType: !2777, size: 32, offset: 480)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !2721, file: !203, line: 429, baseType: !2747, size: 32, offset: 512)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !2721, file: !203, line: 432, baseType: !2747, size: 32, offset: 544)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !2721, file: !203, line: 435, baseType: !2791, size: 32, offset: 576)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 32)
!2792 = !DISubroutineType(types: !2793)
!2793 = !{null, !2727, !2794, !102}
!2794 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !2795)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!2796 = !DISubroutineType(types: !2797)
!2797 = !{null, !2727, !102}
!2798 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2799, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2800, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2799 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2800 = !{!2801, !30}
!2801 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2802, line: 27, baseType: !32, size: 32, elements: !2803)
!2802 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2803 = !{!2804, !2805, !2806, !2807, !2808}
!2804 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2805 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2806 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2807 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2808 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2809 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2810, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2811, retainedTypes: !2812, splitDebugInlining: false, nameTableKind: None)
!2810 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2811 = !{!564, !2801, !30}
!2812 = !{!759, !2813, !102, !103, !332, !121, !154, !2830}
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !2815)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !2816)
!2816 = !{!2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2815, file: !495, line: 413, baseType: !1804, size: 256)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2815, file: !495, line: 414, baseType: !1806, size: 768, offset: 256)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2815, file: !495, line: 415, baseType: !1804, size: 256, offset: 1024)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2815, file: !495, line: 416, baseType: !1806, size: 768, offset: 1280)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2815, file: !495, line: 417, baseType: !1804, size: 256, offset: 2048)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2815, file: !495, line: 418, baseType: !1806, size: 768, offset: 2304)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2815, file: !495, line: 419, baseType: !1804, size: 256, offset: 3072)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2815, file: !495, line: 420, baseType: !1806, size: 768, offset: 3328)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2815, file: !495, line: 421, baseType: !1804, size: 256, offset: 4096)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2815, file: !495, line: 422, baseType: !1817, size: 1792, offset: 4352)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2815, file: !495, line: 423, baseType: !1821, size: 1920, offset: 6144)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2815, file: !495, line: 424, baseType: !1826, size: 20608, offset: 8064)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2815, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 32)
!2831 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2832)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2833)
!2833 = !{!2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2832, file: !495, line: 447, baseType: !499, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2832, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2832, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2832, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2832, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2832, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2832, file: !495, line: 453, baseType: !1841, size: 96, offset: 192)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2832, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2832, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2832, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2832, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2832, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2832, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2832, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2832, file: !495, line: 461, baseType: !1852, size: 64, offset: 512)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2832, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2832, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2832, file: !495, line: 464, baseType: !1856, size: 128, offset: 640)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2832, file: !495, line: 465, baseType: !1858, size: 160, offset: 768)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2832, file: !495, line: 466, baseType: !1860, size: 160, offset: 928)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2832, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2855 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2856, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2856 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2857 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2858, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2859, splitDebugInlining: false, nameTableKind: None)
!2858 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2859 = !{!102, !103, !22, !2860}
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2862)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2863)
!2863 = !{!2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2862, file: !495, line: 447, baseType: !499, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2862, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2862, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2862, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2862, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2862, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2862, file: !495, line: 453, baseType: !1841, size: 96, offset: 192)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2862, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2862, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2862, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2862, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2862, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2862, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2862, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2862, file: !495, line: 461, baseType: !1852, size: 64, offset: 512)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2862, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2862, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2862, file: !495, line: 464, baseType: !1856, size: 128, offset: 640)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2862, file: !495, line: 465, baseType: !1858, size: 160, offset: 768)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2862, file: !495, line: 466, baseType: !1860, size: 160, offset: 928)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2862, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2886, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2887, splitDebugInlining: false, nameTableKind: None)
!2886 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2887 = !{!2888, !102, !103}
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2890)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2891)
!2891 = !{!2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2890, file: !495, line: 447, baseType: !499, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2890, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2890, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2890, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2890, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2890, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2890, file: !495, line: 453, baseType: !1841, size: 96, offset: 192)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2890, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2890, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2890, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2890, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2890, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2890, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2890, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2890, file: !495, line: 461, baseType: !1852, size: 64, offset: 512)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2890, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2890, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2890, file: !495, line: 464, baseType: !1856, size: 128, offset: 640)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2890, file: !495, line: 465, baseType: !1858, size: 160, offset: 768)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2890, file: !495, line: 466, baseType: !1860, size: 160, offset: 928)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2890, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2913 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2914, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2915, splitDebugInlining: false, nameTableKind: None)
!2914 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2915 = !{!2916, !121, !102, !103}
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 32)
!2917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2918, line: 98, size: 256, elements: !2919)
!2918 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2919 = !{!2920, !2925, !2930, !2935, !2940, !2945, !2950, !2955}
!2920 = !DIDerivedType(tag: DW_TAG_member, scope: !2917, file: !2918, line: 99, baseType: !2921, size: 32)
!2921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2917, file: !2918, line: 99, size: 32, elements: !2922)
!2922 = !{!2923, !2924}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2921, file: !2918, line: 99, baseType: !121, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2921, file: !2918, line: 99, baseType: !121, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, scope: !2917, file: !2918, line: 100, baseType: !2926, size: 32, offset: 32)
!2926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2917, file: !2918, line: 100, size: 32, elements: !2927)
!2927 = !{!2928, !2929}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2926, file: !2918, line: 100, baseType: !121, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2926, file: !2918, line: 100, baseType: !121, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, scope: !2917, file: !2918, line: 101, baseType: !2931, size: 32, offset: 64)
!2931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2917, file: !2918, line: 101, size: 32, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2931, file: !2918, line: 101, baseType: !121, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2931, file: !2918, line: 101, baseType: !121, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, scope: !2917, file: !2918, line: 102, baseType: !2936, size: 32, offset: 96)
!2936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2917, file: !2918, line: 102, size: 32, elements: !2937)
!2937 = !{!2938, !2939}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2936, file: !2918, line: 102, baseType: !121, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2936, file: !2918, line: 102, baseType: !121, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, scope: !2917, file: !2918, line: 103, baseType: !2941, size: 32, offset: 128)
!2941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2917, file: !2918, line: 103, size: 32, elements: !2942)
!2942 = !{!2943, !2944}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2941, file: !2918, line: 103, baseType: !121, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2941, file: !2918, line: 103, baseType: !121, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, scope: !2917, file: !2918, line: 104, baseType: !2946, size: 32, offset: 160)
!2946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2917, file: !2918, line: 104, size: 32, elements: !2947)
!2947 = !{!2948, !2949}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2946, file: !2918, line: 104, baseType: !121, size: 32)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2946, file: !2918, line: 104, baseType: !121, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, scope: !2917, file: !2918, line: 105, baseType: !2951, size: 32, offset: 192)
!2951 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2917, file: !2918, line: 105, size: 32, elements: !2952)
!2952 = !{!2953, !2954}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2951, file: !2918, line: 105, baseType: !121, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2951, file: !2918, line: 105, baseType: !121, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2917, file: !2918, line: 106, baseType: !121, size: 32, offset: 224)
!2956 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2957, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2800, retainedTypes: !2958, splitDebugInlining: false, nameTableKind: None)
!2957 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!2958 = !{!2959, !102, !103, !2984, !2676, !121}
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2962)
!2962 = !{!2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2961, file: !495, line: 447, baseType: !499, size: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2961, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2961, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2961, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2961, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2961, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2961, file: !495, line: 453, baseType: !1841, size: 96, offset: 192)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2961, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2961, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2961, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2961, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2961, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2961, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2961, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2961, file: !495, line: 461, baseType: !1852, size: 64, offset: 512)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2961, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2961, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2961, file: !495, line: 464, baseType: !1856, size: 128, offset: 640)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2961, file: !495, line: 465, baseType: !1858, size: 160, offset: 768)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2961, file: !495, line: 466, baseType: !1860, size: 160, offset: 928)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2961, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2918, line: 141, baseType: !2986)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2918, line: 97, size: 256, elements: !2987)
!2987 = !{!2988}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2986, file: !2918, line: 107, baseType: !2989, size: 256)
!2989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2918, line: 98, size: 256, elements: !2990)
!2990 = !{!2991, !2996, !3001, !3006, !3011, !3016, !3021, !3026}
!2991 = !DIDerivedType(tag: DW_TAG_member, scope: !2989, file: !2918, line: 99, baseType: !2992, size: 32)
!2992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2989, file: !2918, line: 99, size: 32, elements: !2993)
!2993 = !{!2994, !2995}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2992, file: !2918, line: 99, baseType: !121, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2992, file: !2918, line: 99, baseType: !121, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, scope: !2989, file: !2918, line: 100, baseType: !2997, size: 32, offset: 32)
!2997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2989, file: !2918, line: 100, size: 32, elements: !2998)
!2998 = !{!2999, !3000}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2997, file: !2918, line: 100, baseType: !121, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2997, file: !2918, line: 100, baseType: !121, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, scope: !2989, file: !2918, line: 101, baseType: !3002, size: 32, offset: 64)
!3002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2989, file: !2918, line: 101, size: 32, elements: !3003)
!3003 = !{!3004, !3005}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3002, file: !2918, line: 101, baseType: !121, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3002, file: !2918, line: 101, baseType: !121, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, scope: !2989, file: !2918, line: 102, baseType: !3007, size: 32, offset: 96)
!3007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2989, file: !2918, line: 102, size: 32, elements: !3008)
!3008 = !{!3009, !3010}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3007, file: !2918, line: 102, baseType: !121, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3007, file: !2918, line: 102, baseType: !121, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, scope: !2989, file: !2918, line: 103, baseType: !3012, size: 32, offset: 128)
!3012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2989, file: !2918, line: 103, size: 32, elements: !3013)
!3013 = !{!3014, !3015}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3012, file: !2918, line: 103, baseType: !121, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3012, file: !2918, line: 103, baseType: !121, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, scope: !2989, file: !2918, line: 104, baseType: !3017, size: 32, offset: 160)
!3017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2989, file: !2918, line: 104, size: 32, elements: !3018)
!3018 = !{!3019, !3020}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3017, file: !2918, line: 104, baseType: !121, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3017, file: !2918, line: 104, baseType: !121, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, scope: !2989, file: !2918, line: 105, baseType: !3022, size: 32, offset: 192)
!3022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2989, file: !2918, line: 105, size: 32, elements: !3023)
!3023 = !{!3024, !3025}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3022, file: !2918, line: 105, baseType: !121, size: 32)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3022, file: !2918, line: 105, baseType: !121, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2989, file: !2918, line: 106, baseType: !121, size: 32, offset: 224)
!3027 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3028, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1787, retainedTypes: !3029, splitDebugInlining: false, nameTableKind: None)
!3028 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!3029 = !{!759, !332, !154, !121, !3030, !3047}
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !3032)
!3032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !3033)
!3033 = !{!3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3032, file: !495, line: 413, baseType: !1804, size: 256)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3032, file: !495, line: 414, baseType: !1806, size: 768, offset: 256)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3032, file: !495, line: 415, baseType: !1804, size: 256, offset: 1024)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3032, file: !495, line: 416, baseType: !1806, size: 768, offset: 1280)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3032, file: !495, line: 417, baseType: !1804, size: 256, offset: 2048)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3032, file: !495, line: 418, baseType: !1806, size: 768, offset: 2304)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3032, file: !495, line: 419, baseType: !1804, size: 256, offset: 3072)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3032, file: !495, line: 420, baseType: !1806, size: 768, offset: 3328)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3032, file: !495, line: 421, baseType: !1804, size: 256, offset: 4096)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3032, file: !495, line: 422, baseType: !1817, size: 1792, offset: 4352)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3032, file: !495, line: 423, baseType: !1821, size: 1920, offset: 6144)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3032, file: !495, line: 424, baseType: !1826, size: 20608, offset: 8064)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3032, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 32)
!3048 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !3049)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !3050)
!3050 = !{!3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3049, file: !495, line: 447, baseType: !499, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3049, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3049, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3049, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3049, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3049, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3049, file: !495, line: 453, baseType: !1841, size: 96, offset: 192)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3049, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3049, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3049, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3049, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3049, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3049, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3049, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3049, file: !495, line: 461, baseType: !1852, size: 64, offset: 512)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3049, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3049, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3049, file: !495, line: 464, baseType: !1856, size: 128, offset: 640)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3049, file: !495, line: 465, baseType: !1858, size: 160, offset: 768)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3049, file: !495, line: 466, baseType: !1860, size: 160, offset: 928)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3049, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!3072 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3073, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3074, splitDebugInlining: false, nameTableKind: None)
!3073 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!3074 = !{!3075, !102, !103}
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !3077)
!3077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !3078)
!3078 = !{!3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3077, file: !495, line: 447, baseType: !499, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3077, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3077, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3077, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3077, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3077, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3077, file: !495, line: 453, baseType: !1841, size: 96, offset: 192)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3077, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3077, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3077, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3077, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3077, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3077, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3077, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3077, file: !495, line: 461, baseType: !1852, size: 64, offset: 512)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3077, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3077, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3077, file: !495, line: 464, baseType: !1856, size: 128, offset: 640)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3077, file: !495, line: 465, baseType: !1858, size: 160, offset: 768)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3077, file: !495, line: 466, baseType: !1860, size: 160, offset: 928)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3077, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!3100 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3101, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3102, splitDebugInlining: false, nameTableKind: None)
!3101 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!3102 = !{!146, !1087, !344, !224, !3103, !155, !102}
!3103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3104, size: 32)
!3104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!3105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3106, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3107, splitDebugInlining: false, nameTableKind: None)
!3106 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!3107 = !{!3108}
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 32)
!3109 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !3110)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !3111)
!3111 = !{!3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3110, file: !116, line: 552, baseType: !120, size: 32)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3110, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3110, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3110, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3110, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3110, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3110, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3110, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3110, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3110, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3110, file: !116, line: 562, baseType: !831, size: 64, offset: 320)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3110, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3110, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3110, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3110, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3110, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3110, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3110, file: !116, line: 569, baseType: !831, size: 64, offset: 576)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3110, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3110, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3110, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3110, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3110, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3110, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3110, file: !116, line: 576, baseType: !831, size: 64, offset: 832)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3110, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3110, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3110, file: !116, line: 579, baseType: !831, size: 64, offset: 960)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3110, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3110, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3110, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3110, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3110, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3110, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!3146 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3147, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3147 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!3148 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3149, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3150, retainedTypes: !3166, splitDebugInlining: false, nameTableKind: None)
!3149 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!3150 = !{!3151, !3158, !3162}
!3151 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3152, line: 38, baseType: !32, size: 32, elements: !3153)
!3152 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3153 = !{!3154, !3155, !3156, !3157}
!3154 = !DIEnumerator(name: "HAL_OK", value: 0)
!3155 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3156 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3157 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3158 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !804, line: 184, baseType: !32, size: 32, elements: !3159)
!3159 = !{!3160, !3161}
!3160 = !DIEnumerator(name: "RESET", value: 0)
!3161 = !DIEnumerator(name: "SET", value: 1)
!3162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !804, line: 190, baseType: !32, size: 32, elements: !3163)
!3163 = !{!3164, !3165}
!3164 = !DIEnumerator(name: "DISABLE", value: 0)
!3165 = !DIEnumerator(name: "ENABLE", value: 1)
!3166 = !{!3167, !121, !3205, !1613, !154, !1611, !102}
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 32)
!3168 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !3169)
!3169 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !3170)
!3170 = !{!3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204}
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3169, file: !116, line: 552, baseType: !120, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3169, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3169, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3169, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3169, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3169, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3169, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3169, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3169, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3169, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3169, file: !116, line: 562, baseType: !831, size: 64, offset: 320)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3169, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3169, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3169, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3169, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3169, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3169, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3169, file: !116, line: 569, baseType: !831, size: 64, offset: 576)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3169, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3169, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3169, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3169, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3169, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3169, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3169, file: !116, line: 576, baseType: !831, size: 64, offset: 832)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3169, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3169, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3169, file: !116, line: 579, baseType: !831, size: 64, offset: 960)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3169, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3169, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3169, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3169, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3169, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3169, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 544, baseType: !3207)
!3207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 540, size: 64, elements: !3208)
!3208 = !{!3209, !3210}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3207, file: !116, line: 542, baseType: !120, size: 32)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3207, file: !116, line: 543, baseType: !120, size: 32, offset: 32)
!3211 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3212, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3213, retainedTypes: !3214, splitDebugInlining: false, nameTableKind: None)
!3212 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!3213 = !{!803}
!3214 = !{!3215, !121, !3223, !3229, !3240}
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 32)
!3216 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !495, line: 770, baseType: !3217)
!3217 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 764, size: 128, elements: !3218)
!3218 = !{!3219, !3220, !3221, !3222}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3217, file: !495, line: 766, baseType: !120, size: 32)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3217, file: !495, line: 767, baseType: !120, size: 32, offset: 32)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3217, file: !495, line: 768, baseType: !120, size: 32, offset: 64)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3217, file: !495, line: 769, baseType: !499, size: 32, offset: 96)
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 32)
!3224 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 544, baseType: !3225)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 540, size: 64, elements: !3226)
!3226 = !{!3227, !3228}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3225, file: !116, line: 542, baseType: !120, size: 32)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3225, file: !116, line: 543, baseType: !120, size: 32, offset: 32)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 32)
!3230 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 407, baseType: !3231)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 398, size: 224, elements: !3232)
!3232 = !{!3233, !3234, !3235, !3236, !3237, !3238, !3239}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3231, file: !116, line: 400, baseType: !120, size: 32)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3231, file: !116, line: 401, baseType: !120, size: 32, offset: 32)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3231, file: !116, line: 402, baseType: !120, size: 32, offset: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3231, file: !116, line: 403, baseType: !120, size: 32, offset: 96)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3231, file: !116, line: 404, baseType: !120, size: 32, offset: 128)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3231, file: !116, line: 405, baseType: !120, size: 32, offset: 160)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3231, file: !116, line: 406, baseType: !120, size: 32, offset: 192)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 32)
!3241 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !3242)
!3242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !3243)
!3243 = !{!3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3242, file: !116, line: 552, baseType: !120, size: 32)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3242, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3242, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3242, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3242, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3242, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3242, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3242, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3242, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3242, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3242, file: !116, line: 562, baseType: !831, size: 64, offset: 320)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3242, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3242, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3242, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3242, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3242, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3242, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3242, file: !116, line: 569, baseType: !831, size: 64, offset: 576)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3242, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3242, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3242, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3242, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3242, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3242, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3242, file: !116, line: 576, baseType: !831, size: 64, offset: 832)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3242, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3242, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3242, file: !116, line: 579, baseType: !831, size: 64, offset: 960)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3242, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3242, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3242, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3242, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3242, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3242, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!3278 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3279, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3280, splitDebugInlining: false, nameTableKind: None)
!3279 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!3280 = !{!102, !344}
!3281 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3282, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3283, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3282 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!3283 = !{!3284, !3291, !30}
!3284 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3285, line: 14, baseType: !32, size: 32, elements: !3286)
!3285 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3286 = !{!3287, !3288, !3289, !3290}
!3287 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3288 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3289 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3290 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3291 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3285, line: 42, baseType: !32, size: 32, elements: !3292)
!3292 = !{!3293, !3294, !3295, !3296, !3297, !3298}
!3293 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3294 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3295 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3296 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3297 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3298 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3300, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3300 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!3301 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3302, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3303, splitDebugInlining: false, nameTableKind: None)
!3302 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!3303 = !{!22, !102, !103}
!3304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3305, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3305 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!3306 = !{!"Ubuntu clang version 14.0.6"}
!3307 = !{i32 7, !"Dwarf Version", i32 4}
!3308 = !{i32 2, !"Debug Info Version", i32 3}
!3309 = !{i32 1, !"wchar_size", i32 4}
!3310 = !{i32 1, !"min_enum_size", i32 4}
!3311 = !{i32 1, !"branch-target-enforcement", i32 0}
!3312 = !{i32 1, !"sign-return-address", i32 0}
!3313 = !{i32 1, !"sign-return-address-all", i32 0}
!3314 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3315 = !{i32 7, !"frame-pointer", i32 2}
!3316 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3317, file: !3317, line: 26, type: !3318, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !461)
!3317 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3318 = !DISubroutineType(types: !3319)
!3319 = !{null}
!3320 = !DILocation(line: 28, column: 1, scope: !3316)
!3321 = !{i64 2155360699, i64 2155360719, i64 2155360782}
!3322 = !DILocation(line: 29, column: 1, scope: !3316)
!3323 = !{i64 2155361114, i64 2155361134, i64 2155361197}
!3324 = !DILocation(line: 30, column: 1, scope: !3316)
!3325 = !{i64 2155361533, i64 2155361553, i64 2155361616}
!3326 = !DILocation(line: 31, column: 1, scope: !3316)
!3327 = !{i64 2155361952, i64 2155361972, i64 2155362035}
!3328 = !DILocation(line: 33, column: 1, scope: !3316)
!3329 = !{i64 2155362244, i64 2155362264, i64 2155362327}
!3330 = !DILocation(line: 35, column: 1, scope: !3316)
!3331 = !{i64 2155362569, i64 2155362589, i64 2155362652}
!3332 = !DILocation(line: 50, column: 1, scope: !3316)
!3333 = !{i64 2155362996, i64 2155363016, i64 2155363079}
!3334 = !DILocation(line: 54, column: 1, scope: !3316)
!3335 = !{i64 2155367496, i64 2155367516, i64 2155367579}
!3336 = !DILocation(line: 61, column: 1, scope: !3316)
!3337 = !{i64 2155367813, i64 2155367833, i64 2155367896}
!3338 = !DILocation(line: 63, column: 1, scope: !3316)
!3339 = !{i64 2155368193, i64 2155368213, i64 2155368276}
!3340 = !DILocation(line: 64, column: 1, scope: !3316)
!3341 = !{i64 2155368715, i64 2155368735, i64 2155368798}
!3342 = !DILocation(line: 65, column: 1, scope: !3316)
!3343 = !{i64 2155369213, i64 2155369233, i64 2155369296}
!3344 = !DILocation(line: 66, column: 1, scope: !3316)
!3345 = !{i64 2155369695, i64 2155369715, i64 2155369778}
!3346 = !DILocation(line: 67, column: 1, scope: !3316)
!3347 = !{i64 2155370202, i64 2155370222, i64 2155370285}
!3348 = !DILocation(line: 68, column: 1, scope: !3316)
!3349 = !{i64 2155370690, i64 2155370710, i64 2155370773}
!3350 = !DILocation(line: 70, column: 1, scope: !3316)
!3351 = !{i64 2155371158, i64 2155371178, i64 2155371241}
!3352 = !DILocation(line: 71, column: 1, scope: !3316)
!3353 = !{i64 2155371600, i64 2155371620, i64 2155371683}
!3354 = !DILocation(line: 72, column: 1, scope: !3316)
!3355 = !{i64 2155372058, i64 2155372078, i64 2155372141}
!3356 = !DILocation(line: 79, column: 1, scope: !3316)
!3357 = !{i64 2155372512, i64 2155372532, i64 2155372595}
!3358 = !DILocation(line: 80, column: 1, scope: !3316)
!3359 = !{i64 2155373023, i64 2155373043, i64 2155373106}
!3360 = !DILocation(line: 82, column: 1, scope: !3316)
!3361 = !{i64 2155373514, i64 2155373534, i64 2155373597}
!3362 = !DILocation(line: 97, column: 1, scope: !3316)
!3363 = !{i64 2155373851, i64 2155373871, i64 2155373934}
!3364 = !DILocation(line: 99, column: 1, scope: !3316)
!3365 = !{i64 2155374069, i64 2155374089, i64 2155374152}
!3366 = !DILocation(line: 102, column: 1, scope: !3316)
!3367 = !{i64 2155374326, i64 2155374346, i64 2155374409}
!3368 = !DILocation(line: 105, column: 1, scope: !3316)
!3369 = !{i64 2155374566, i64 2155374586, i64 2155374649}
!3370 = !DILocation(line: 115, column: 1, scope: !3316)
!3371 = !{i64 2155374905, i64 2155374925, i64 2155374988}
!3372 = !DILocation(line: 118, column: 1, scope: !3316)
!3373 = !{i64 2155375249, i64 2155375269, i64 2155375332}
!3374 = !DILocation(line: 32, column: 1, scope: !3375)
!3375 = !DILexicalBlockFile(scope: !3316, file: !3376, discriminator: 0)
!3376 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3377 = !{i64 2155375605, i64 2155375625, i64 2155375688}
!3378 = !DILocation(line: 33, column: 1, scope: !3375)
!3379 = !{i64 2155376117, i64 2155376137, i64 2155376200}
!3380 = !DILocation(line: 53, column: 1, scope: !3375)
!3381 = !{i64 2155376625, i64 2155376645, i64 2155376708}
!3382 = !DILocation(line: 54, column: 1, scope: !3375)
!3383 = !{i64 2155381104, i64 2155381124, i64 2155381187}
!3384 = !DILocation(line: 55, column: 1, scope: !3375)
!3385 = !{i64 2155381522, i64 2155381542, i64 2155381605}
!3386 = !DILocation(line: 56, column: 1, scope: !3375)
!3387 = !{i64 2155381940, i64 2155381960, i64 2155382023}
!3388 = !DILocation(line: 57, column: 1, scope: !3375)
!3389 = !{i64 2155382358, i64 2155382378, i64 2155382441}
!3390 = !DILocation(line: 58, column: 1, scope: !3375)
!3391 = !{i64 2155382776, i64 2155382796, i64 2155382859}
!3392 = !DILocation(line: 59, column: 1, scope: !3375)
!3393 = !{i64 2155383194, i64 2155383214, i64 2155383277}
!3394 = !DILocation(line: 60, column: 1, scope: !3375)
!3395 = !{i64 2155383618, i64 2155383638, i64 2155383701}
!3396 = !DILocation(line: 61, column: 1, scope: !3375)
!3397 = !{i64 2155383935, i64 2155383955, i64 2155384018}
!3398 = !DILocation(line: 70, column: 1, scope: !3375)
!3399 = !{i64 2155384164, i64 2155384184, i64 2155384247}
!3400 = !DILocation(line: 72, column: 1, scope: !3375)
!3401 = !{i64 2155384496, i64 2155384516, i64 2155384579}
!3402 = !DILocation(line: 73, column: 1, scope: !3375)
!3403 = !{i64 2155384946, i64 2155384966, i64 2155385029}
!3404 = !DILocation(line: 74, column: 1, scope: !3375)
!3405 = !{i64 2155385396, i64 2155385416, i64 2155385479}
!3406 = !DILocation(line: 75, column: 1, scope: !3375)
!3407 = !{i64 2155385846, i64 2155385866, i64 2155385929}
!3408 = !DILocation(line: 76, column: 1, scope: !3375)
!3409 = !{i64 2155386296, i64 2155386316, i64 2155386379}
!3410 = !DILocation(line: 77, column: 1, scope: !3375)
!3411 = !{i64 2155386746, i64 2155386766, i64 2155386829}
!3412 = !DILocation(line: 78, column: 1, scope: !3375)
!3413 = !{i64 2155387196, i64 2155387216, i64 2155387279}
!3414 = !DILocation(line: 79, column: 1, scope: !3375)
!3415 = !{i64 2155387646, i64 2155387666, i64 2155387729}
!3416 = !DILocation(line: 80, column: 1, scope: !3375)
!3417 = !{i64 2155388099, i64 2155388119, i64 2155388182}
!3418 = !DILocation(line: 84, column: 1, scope: !3375)
!3419 = !{i64 2155388431, i64 2155388451, i64 2155388514}
!3420 = !DILocation(line: 91, column: 1, scope: !3375)
!3421 = !{i64 2155388828, i64 2155388848, i64 2155388911}
!3422 = !DILocation(line: 93, column: 1, scope: !3375)
!3423 = !{i64 2155389195, i64 2155389215, i64 2155389278}
!3424 = !DILocation(line: 106, column: 1, scope: !3375)
!3425 = !{i64 2155389465, i64 2155389485, i64 2155389548}
!3426 = !DILocation(line: 11, column: 1, scope: !3427)
!3427 = !DILexicalBlockFile(scope: !3316, file: !3428, discriminator: 0)
!3428 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3429 = distinct !DISubprogram(name: "main", scope: !3430, file: !3430, line: 11, type: !3318, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2640, retainedNodes: !3431)
!3430 = !DIFile(filename: "zephyr/samples/subsys/console/getchar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3431 = !{!3432}
!3432 = !DILocalVariable(name: "c", scope: !3433, file: !3430, line: 18, type: !154)
!3433 = distinct !DILexicalBlock(scope: !3429, file: !3430, line: 17, column: 12)
!3434 = !DILocation(line: 13, column: 2, scope: !3429)
!3435 = !DILocation(line: 15, column: 2, scope: !3429)
!3436 = !DILocation(line: 17, column: 2, scope: !3429)
!3437 = !DILocation(line: 18, column: 15, scope: !3433)
!3438 = !DILocation(line: 20, column: 31, scope: !3433)
!3439 = !DILocation(line: 0, scope: !3433)
!3440 = !DILocation(line: 20, column: 3, scope: !3433)
!3441 = distinct !{!3441, !3436, !3442}
!3442 = !DILocation(line: 21, column: 2, scope: !3429)
!3443 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3444)
!3444 = !{!3445}
!3445 = !DILocalVariable(name: "c", arg: 1, scope: !3443, file: !105, line: 45, type: !103)
!3446 = !DILocation(line: 0, scope: !3443)
!3447 = !DILocation(line: 50, column: 2, scope: !3443)
!3448 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3449, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3451)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{null, !106}
!3451 = !{!3452}
!3452 = !DILocalVariable(name: "fn", arg: 1, scope: !3448, file: !105, line: 63, type: !106)
!3453 = !DILocation(line: 0, scope: !3448)
!3454 = !DILocation(line: 65, column: 12, scope: !3448)
!3455 = !DILocation(line: 66, column: 1, scope: !3448)
!3456 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3457, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !461)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{!102}
!3459 = !DILocation(line: 78, column: 9, scope: !3456)
!3460 = !DILocation(line: 78, column: 2, scope: !3456)
!3461 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3462, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3471)
!3462 = !DISubroutineType(types: !3463)
!3463 = !{null, !144, !3464}
!3464 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3465, line: 99, baseType: !3466)
!3465 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3466 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3465, line: 40, baseType: !3467)
!3467 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3468)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3469)
!3469 = !{!3470}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3468, file: !105, line: 79, baseType: !102, size: 32)
!3471 = !{!3472, !3473, !3474}
!3472 = !DILocalVariable(name: "fmt", arg: 1, scope: !3461, file: !105, line: 113, type: !144)
!3473 = !DILocalVariable(name: "ap", arg: 2, scope: !3461, file: !105, line: 113, type: !3464)
!3474 = !DILocalVariable(name: "ctx", scope: !3475, file: !105, line: 121, type: !3477)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !105, line: 120, column: 27)
!3476 = distinct !DILexicalBlock(scope: !3461, file: !105, line: 120, column: 6)
!3477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3478)
!3478 = !{!3479, !3480}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3477, file: !105, line: 85, baseType: !32, size: 32)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3477, file: !105, line: 86, baseType: !3481, offset: 32)
!3481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2674)
!3482 = !DILocation(line: 0, scope: !3461)
!3483 = !DILocation(line: 148, column: 3, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3476, file: !105, line: 138, column: 9)
!3485 = !DILocation(line: 155, column: 1, scope: !3461)
!3486 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3487, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3489)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{!103, !103, !102}
!3489 = !{!3490, !3491}
!3490 = !DILocalVariable(name: "c", arg: 1, scope: !3486, file: !105, line: 107, type: !103)
!3491 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3486, file: !105, line: 107, type: !102)
!3492 = !DILocation(line: 0, scope: !3486)
!3493 = !DILocation(line: 110, column: 9, scope: !3486)
!3494 = !DILocation(line: 110, column: 2, scope: !3486)
!3495 = distinct !DISubprogram(name: "cbvprintf", scope: !3496, file: !3496, line: 739, type: !3497, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3503)
!3496 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3497 = !DISubroutineType(types: !3498)
!3498 = !{!103, !3499, !102, !144, !3464}
!3499 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3496, line: 297, baseType: !3500)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 32)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{!103, null}
!3503 = !{!3504, !3505, !3506, !3507}
!3504 = !DILocalVariable(name: "out", arg: 1, scope: !3495, file: !3496, line: 739, type: !3499)
!3505 = !DILocalVariable(name: "ctx", arg: 2, scope: !3495, file: !3496, line: 739, type: !102)
!3506 = !DILocalVariable(name: "format", arg: 3, scope: !3495, file: !3496, line: 739, type: !144)
!3507 = !DILocalVariable(name: "ap", arg: 4, scope: !3495, file: !3496, line: 739, type: !3464)
!3508 = !DILocation(line: 0, scope: !3495)
!3509 = !DILocation(line: 741, column: 9, scope: !3495)
!3510 = !DILocation(line: 741, column: 2, scope: !3495)
!3511 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3512, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3514)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{null, !1087, !344}
!3514 = !{!3515, !3516, !3517}
!3515 = !DILocalVariable(name: "c", arg: 1, scope: !3511, file: !105, line: 157, type: !1087)
!3516 = !DILocalVariable(name: "n", arg: 2, scope: !3511, file: !105, line: 157, type: !344)
!3517 = !DILocalVariable(name: "i", scope: !3511, file: !105, line: 159, type: !344)
!3518 = !DILocation(line: 0, scope: !3511)
!3519 = !DILocation(line: 164, column: 16, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !105, line: 164, column: 2)
!3521 = distinct !DILexicalBlock(scope: !3511, file: !105, line: 164, column: 2)
!3522 = !DILocation(line: 164, column: 2, scope: !3521)
!3523 = !DILocation(line: 165, column: 3, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3520, file: !105, line: 164, column: 26)
!3525 = !DILocation(line: 165, column: 13, scope: !3524)
!3526 = !DILocation(line: 164, column: 22, scope: !3520)
!3527 = distinct !{!3527, !3522, !3528}
!3528 = !DILocation(line: 166, column: 2, scope: !3521)
!3529 = !DILocation(line: 171, column: 1, scope: !3511)
!3530 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3531, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3533)
!3531 = !DISubroutineType(types: !3532)
!3532 = !{null, !144, null}
!3533 = !{!3534, !3535}
!3534 = !DILocalVariable(name: "fmt", arg: 1, scope: !3530, file: !105, line: 203, type: !144)
!3535 = !DILocalVariable(name: "ap", scope: !3530, file: !105, line: 205, type: !3464)
!3536 = !DILocation(line: 0, scope: !3530)
!3537 = !DILocation(line: 205, column: 2, scope: !3530)
!3538 = !DILocation(line: 205, column: 10, scope: !3530)
!3539 = !DILocation(line: 207, column: 2, scope: !3530)
!3540 = !DILocation(line: 209, column: 2, scope: !3530)
!3541 = !DILocation(line: 211, column: 2, scope: !3530)
!3542 = !DILocation(line: 212, column: 1, scope: !3530)
!3543 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3544, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3546)
!3544 = !DISubroutineType(types: !3545)
!3545 = !{!103, !1087, !344, !144, null}
!3546 = !{!3547, !3548, !3549, !3550, !3551}
!3547 = !DILocalVariable(name: "str", arg: 1, scope: !3543, file: !105, line: 239, type: !1087)
!3548 = !DILocalVariable(name: "size", arg: 2, scope: !3543, file: !105, line: 239, type: !344)
!3549 = !DILocalVariable(name: "fmt", arg: 3, scope: !3543, file: !105, line: 239, type: !144)
!3550 = !DILocalVariable(name: "ap", scope: !3543, file: !105, line: 241, type: !3464)
!3551 = !DILocalVariable(name: "ret", scope: !3543, file: !105, line: 242, type: !103)
!3552 = !DILocation(line: 0, scope: !3543)
!3553 = !DILocation(line: 241, column: 2, scope: !3543)
!3554 = !DILocation(line: 241, column: 10, scope: !3543)
!3555 = !DILocation(line: 244, column: 2, scope: !3543)
!3556 = !DILocation(line: 245, column: 8, scope: !3543)
!3557 = !DILocation(line: 246, column: 2, scope: !3543)
!3558 = !DILocation(line: 249, column: 1, scope: !3543)
!3559 = !DILocation(line: 248, column: 2, scope: !3543)
!3560 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3561, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3563)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{!103, !1087, !344, !144, !3464}
!3563 = !{!3564, !3565, !3566, !3567, !3568}
!3564 = !DILocalVariable(name: "str", arg: 1, scope: !3560, file: !105, line: 251, type: !1087)
!3565 = !DILocalVariable(name: "size", arg: 2, scope: !3560, file: !105, line: 251, type: !344)
!3566 = !DILocalVariable(name: "fmt", arg: 3, scope: !3560, file: !105, line: 251, type: !144)
!3567 = !DILocalVariable(name: "ap", arg: 4, scope: !3560, file: !105, line: 251, type: !3464)
!3568 = !DILocalVariable(name: "ctx", scope: !3560, file: !105, line: 253, type: !3569)
!3569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3570)
!3570 = !{!3571, !3572, !3573}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3569, file: !105, line: 218, baseType: !1087, size: 32)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3569, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3569, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3574 = !DILocation(line: 0, scope: !3560)
!3575 = !DILocation(line: 253, column: 2, scope: !3560)
!3576 = !DILocation(line: 253, column: 21, scope: !3560)
!3577 = !DILocation(line: 253, column: 27, scope: !3560)
!3578 = !DILocation(line: 255, column: 2, scope: !3560)
!3579 = !DILocation(line: 257, column: 10, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3560, file: !105, line: 257, column: 6)
!3581 = !DILocation(line: 257, column: 22, scope: !3580)
!3582 = !DILocation(line: 257, column: 16, scope: !3580)
!3583 = !DILocation(line: 257, column: 6, scope: !3560)
!3584 = !DILocation(line: 258, column: 3, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3580, file: !105, line: 257, column: 27)
!3586 = !DILocation(line: 258, column: 18, scope: !3585)
!3587 = !DILocation(line: 259, column: 2, scope: !3585)
!3588 = !DILocation(line: 262, column: 1, scope: !3560)
!3589 = !DILocation(line: 261, column: 2, scope: !3560)
!3590 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3591, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3594)
!3591 = !DISubroutineType(types: !3592)
!3592 = !{!103, !103, !3593}
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3569, size: 32)
!3594 = !{!3595, !3596}
!3595 = !DILocalVariable(name: "c", arg: 1, scope: !3590, file: !105, line: 223, type: !103)
!3596 = !DILocalVariable(name: "ctx", arg: 2, scope: !3590, file: !105, line: 223, type: !3593)
!3597 = !DILocation(line: 0, scope: !3590)
!3598 = !DILocation(line: 225, column: 11, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3590, file: !105, line: 225, column: 6)
!3600 = !DILocation(line: 225, column: 15, scope: !3599)
!3601 = !DILocation(line: 0, scope: !3599)
!3602 = !DILocation(line: 225, column: 23, scope: !3599)
!3603 = !DILocation(line: 225, column: 45, scope: !3599)
!3604 = !DILocation(line: 225, column: 37, scope: !3599)
!3605 = !DILocation(line: 225, column: 6, scope: !3590)
!3606 = !DILocation(line: 226, column: 8, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3599, file: !105, line: 225, column: 50)
!3608 = !DILocation(line: 226, column: 13, scope: !3607)
!3609 = !DILocation(line: 227, column: 3, scope: !3607)
!3610 = !DILocation(line: 230, column: 29, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3590, file: !105, line: 230, column: 6)
!3612 = !DILocation(line: 230, column: 17, scope: !3611)
!3613 = !DILocation(line: 230, column: 6, scope: !3590)
!3614 = !DILocation(line: 231, column: 22, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3611, file: !105, line: 230, column: 34)
!3616 = !DILocation(line: 231, column: 3, scope: !3615)
!3617 = !DILocation(line: 231, column: 26, scope: !3615)
!3618 = !DILocation(line: 232, column: 2, scope: !3615)
!3619 = !DILocation(line: 233, column: 28, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3611, file: !105, line: 232, column: 9)
!3621 = !DILocation(line: 233, column: 22, scope: !3620)
!3622 = !DILocation(line: 233, column: 3, scope: !3620)
!3623 = !DILocation(line: 233, column: 26, scope: !3620)
!3624 = !DILocation(line: 237, column: 1, scope: !3590)
!3625 = distinct !DISubprogram(name: "z_thread_entry", scope: !3626, file: !3626, line: 30, type: !3627, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !3634)
!3626 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3627 = !DISubroutineType(types: !3628)
!3628 = !{null, !3629, !102, !102, !102}
!3629 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3630, line: 46, baseType: !3631)
!3630 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 32)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{null, !102, !102, !102}
!3634 = !{!3635, !3636, !3637, !3638}
!3635 = !DILocalVariable(name: "entry", arg: 1, scope: !3625, file: !3626, line: 30, type: !3629)
!3636 = !DILocalVariable(name: "p1", arg: 2, scope: !3625, file: !3626, line: 31, type: !102)
!3637 = !DILocalVariable(name: "p2", arg: 3, scope: !3625, file: !3626, line: 31, type: !102)
!3638 = !DILocalVariable(name: "p3", arg: 4, scope: !3625, file: !3626, line: 31, type: !102)
!3639 = !DILocation(line: 0, scope: !3625)
!3640 = !DILocation(line: 36, column: 2, scope: !3625)
!3641 = !DILocation(line: 38, column: 17, scope: !3625)
!3642 = !DILocation(line: 38, column: 2, scope: !3625)
!3643 = !DILocation(line: 45, column: 2, scope: !3625)
!3644 = distinct !DISubprogram(name: "k_current_get", scope: !300, file: !300, line: 530, type: !3645, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !461)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{!3647}
!3647 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !3648)
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 32)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !3650)
!3650 = !{!3651, !3709, !3721, !3722, !3723, !3724, !3730, !3743}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3649, file: !355, line: 247, baseType: !3652, size: 384)
!3652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !3653)
!3653 = !{!3654, !3678, !3685, !3686, !3687, !3696, !3697, !3698}
!3654 = !DIDerivedType(tag: DW_TAG_member, scope: !3652, file: !355, line: 60, baseType: !3655, size: 64)
!3655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3652, file: !355, line: 60, size: 64, elements: !3656)
!3656 = !{!3657, !3672}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3655, file: !355, line: 61, baseType: !3658, size: 64)
!3658 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !3659)
!3659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !3660)
!3660 = !{!3661, !3667}
!3661 = !DIDerivedType(tag: DW_TAG_member, scope: !3659, file: !309, line: 38, baseType: !3662, size: 32)
!3662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3659, file: !309, line: 38, size: 32, elements: !3663)
!3663 = !{!3664, !3666}
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3662, file: !309, line: 39, baseType: !3665, size: 32)
!3665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 32)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3662, file: !309, line: 40, baseType: !3665, size: 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, scope: !3659, file: !309, line: 42, baseType: !3668, size: 32, offset: 32)
!3668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3659, file: !309, line: 42, size: 32, elements: !3669)
!3669 = !{!3670, !3671}
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3668, file: !309, line: 43, baseType: !3665, size: 32)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3668, file: !309, line: 44, baseType: !3665, size: 32)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3655, file: !355, line: 62, baseType: !3673, size: 64)
!3673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !3674)
!3674 = !{!3675}
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3673, file: !380, line: 50, baseType: !3676, size: 64)
!3676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3677, size: 64, elements: !385)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3673, size: 32)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3652, file: !355, line: 68, baseType: !3679, size: 32, offset: 64)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 32)
!3680 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !3681)
!3681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !3682)
!3682 = !{!3683}
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3681, file: !304, line: 232, baseType: !3684, size: 64)
!3684 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !3659)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3652, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3652, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!3687 = !DIDerivedType(tag: DW_TAG_member, scope: !3652, file: !355, line: 90, baseType: !3688, size: 16, offset: 112)
!3688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3652, file: !355, line: 90, size: 16, elements: !3689)
!3689 = !{!3690, !3695}
!3690 = !DIDerivedType(tag: DW_TAG_member, scope: !3688, file: !355, line: 91, baseType: !3691, size: 16)
!3691 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3688, file: !355, line: 91, size: 16, elements: !3692)
!3692 = !{!3693, !3694}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3691, file: !355, line: 96, baseType: !403, size: 8)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3691, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3688, file: !355, line: 100, baseType: !328, size: 16)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3652, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3652, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3652, file: !355, line: 131, baseType: !3699, size: 192, offset: 192)
!3699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !3700)
!3700 = !{!3701, !3702, !3708}
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3699, file: !304, line: 245, baseType: !3658, size: 64)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3699, file: !304, line: 246, baseType: !3703, size: 32, offset: 64)
!3703 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !3704)
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3705, size: 32)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{null, !3707}
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 32)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3699, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3649, file: !355, line: 250, baseType: !3710, size: 288, offset: 384)
!3710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !3711)
!3711 = !{!3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720}
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3710, file: !424, line: 26, baseType: !121, size: 32)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3710, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3710, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3710, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3710, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3710, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3710, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3710, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3710, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3649, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3649, file: !355, line: 256, baseType: !3680, size: 64, offset: 704)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3649, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3649, file: !355, line: 300, baseType: !3725, size: 96, offset: 800)
!3725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !3726)
!3726 = !{!3727, !3728, !3729}
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3725, file: !355, line: 153, baseType: !22, size: 32)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3725, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3725, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3649, file: !355, line: 325, baseType: !3731, size: 32, offset: 896)
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3732, size: 32)
!3732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !3733)
!3733 = !{!3734, !3740, !3741}
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3732, file: !300, line: 5074, baseType: !3735, size: 96)
!3735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !3736)
!3736 = !{!3737, !3738, !3739}
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3735, file: !450, line: 57, baseType: !453, size: 32)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3735, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3735, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3732, file: !300, line: 5075, baseType: !3680, size: 64, offset: 96)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3732, file: !300, line: 5076, baseType: !3742, offset: 160)
!3742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3649, file: !355, line: 343, baseType: !3744, size: 64, offset: 928)
!3744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !3745)
!3745 = !{!3746, !3747}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3744, file: !424, line: 63, baseType: !121, size: 32)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3744, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!3748 = !DILocation(line: 535, column: 9, scope: !3644)
!3749 = !DILocation(line: 535, column: 2, scope: !3644)
!3750 = distinct !DISubprogram(name: "k_thread_abort", scope: !3751, file: !3751, line: 188, type: !3752, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !3754)
!3751 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!3752 = !DISubroutineType(types: !3753)
!3753 = !{null, !3647}
!3754 = !{!3755}
!3755 = !DILocalVariable(name: "thread", arg: 1, scope: !3750, file: !3751, line: 188, type: !3647)
!3756 = !DILocation(line: 0, scope: !3750)
!3757 = !DILocation(line: 197, column: 2, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3750, file: !3751, line: 197, column: 2)
!3759 = !{i64 2155057964}
!3760 = !DILocation(line: 198, column: 2, scope: !3750)
!3761 = !DILocation(line: 199, column: 1, scope: !3750)
!3762 = distinct !DISubprogram(name: "z_current_get", scope: !3751, file: !3751, line: 173, type: !3645, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !461)
!3763 = !DILocation(line: 180, column: 2, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3762, file: !3751, line: 180, column: 2)
!3765 = !{i64 2155057896}
!3766 = !DILocation(line: 181, column: 9, scope: !3762)
!3767 = !DILocation(line: 181, column: 2, scope: !3762)
!3768 = distinct !DISubprogram(name: "sys_heap_free", scope: !3769, file: !3769, line: 163, type: !3770, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3778)
!3769 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3770 = !DISubroutineType(types: !3771)
!3771 = !{null, !3772, !102}
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 32)
!3773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !3774)
!3774 = !{!3775, !3776, !3777}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3773, file: !450, line: 57, baseType: !2661, size: 32)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3773, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3773, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!3778 = !{!3779, !3780, !3781, !3782}
!3779 = !DILocalVariable(name: "heap", arg: 1, scope: !3768, file: !3769, line: 163, type: !3772)
!3780 = !DILocalVariable(name: "mem", arg: 2, scope: !3768, file: !3769, line: 163, type: !102)
!3781 = !DILocalVariable(name: "h", scope: !3768, file: !3769, line: 168, type: !2661)
!3782 = !DILocalVariable(name: "c", scope: !3768, file: !3769, line: 169, type: !2666)
!3783 = !DILocation(line: 0, scope: !3768)
!3784 = !DILocation(line: 165, column: 10, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3768, file: !3769, line: 165, column: 6)
!3786 = !DILocation(line: 165, column: 6, scope: !3768)
!3787 = !DILocation(line: 168, column: 27, scope: !3768)
!3788 = !DILocation(line: 169, column: 16, scope: !3768)
!3789 = !{i32 0, i32 536870912}
!3790 = !DILocation(line: 187, column: 2, scope: !3768)
!3791 = !DILocation(line: 197, column: 2, scope: !3768)
!3792 = !DILocation(line: 198, column: 1, scope: !3768)
!3793 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3769, file: !3769, line: 157, type: !3794, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3796)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{!2666, !2661, !102}
!3796 = !{!3797, !3798, !3799, !3800}
!3797 = !DILocalVariable(name: "h", arg: 1, scope: !3793, file: !3769, line: 157, type: !2661)
!3798 = !DILocalVariable(name: "p", arg: 2, scope: !3793, file: !3769, line: 157, type: !102)
!3799 = !DILocalVariable(name: "mem", scope: !3793, file: !3769, line: 159, type: !261)
!3800 = !DILocalVariable(name: "base", scope: !3793, file: !3769, line: 159, type: !261)
!3801 = !DILocation(line: 0, scope: !3793)
!3802 = !DILocation(line: 159, column: 39, scope: !3793)
!3803 = !DILocation(line: 160, column: 14, scope: !3793)
!3804 = !DILocation(line: 160, column: 38, scope: !3793)
!3805 = !DILocation(line: 160, column: 46, scope: !3793)
!3806 = !DILocation(line: 160, column: 2, scope: !3793)
!3807 = distinct !DISubprogram(name: "set_chunk_used", scope: !2648, file: !2648, line: 147, type: !3808, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3810)
!3808 = !DISubroutineType(types: !3809)
!3809 = !{null, !2661, !2666, !157}
!3810 = !{!3811, !3812, !3813, !3814, !3815}
!3811 = !DILocalVariable(name: "h", arg: 1, scope: !3807, file: !2648, line: 147, type: !2661)
!3812 = !DILocalVariable(name: "c", arg: 2, scope: !3807, file: !2648, line: 147, type: !2666)
!3813 = !DILocalVariable(name: "used", arg: 3, scope: !3807, file: !2648, line: 147, type: !157)
!3814 = !DILocalVariable(name: "buf", scope: !3807, file: !2648, line: 149, type: !2655)
!3815 = !DILocalVariable(name: "cmem", scope: !3807, file: !2648, line: 150, type: !102)
!3816 = !DILocation(line: 0, scope: !3807)
!3817 = !DILocation(line: 149, column: 22, scope: !3807)
!3818 = !DILocation(line: 0, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !2648, line: 159, column: 7)
!3820 = distinct !DILexicalBlock(scope: !3821, file: !2648, line: 158, column: 9)
!3821 = distinct !DILexicalBlock(scope: !3807, file: !2648, line: 152, column: 6)
!3822 = !DILocation(line: 159, column: 7, scope: !3820)
!3823 = !DILocation(line: 165, column: 1, scope: !3807)
!3824 = distinct !DISubprogram(name: "free_chunk", scope: !3769, file: !3769, line: 133, type: !3825, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3827)
!3825 = !DISubroutineType(types: !3826)
!3826 = !{null, !2661, !2666}
!3827 = !{!3828, !3829}
!3828 = !DILocalVariable(name: "h", arg: 1, scope: !3824, file: !3769, line: 133, type: !2661)
!3829 = !DILocalVariable(name: "c", arg: 2, scope: !3824, file: !3769, line: 133, type: !2666)
!3830 = !DILocation(line: 0, scope: !3824)
!3831 = !DILocation(line: 136, column: 21, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3824, file: !3769, line: 136, column: 6)
!3833 = !DILocation(line: 136, column: 7, scope: !3832)
!3834 = !DILocation(line: 136, column: 6, scope: !3824)
!3835 = !DILocation(line: 137, column: 3, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3832, file: !3769, line: 136, column: 41)
!3837 = !DILocation(line: 138, column: 22, scope: !3836)
!3838 = !DILocation(line: 138, column: 3, scope: !3836)
!3839 = !DILocation(line: 139, column: 2, scope: !3836)
!3840 = !DILocation(line: 142, column: 21, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3824, file: !3769, line: 142, column: 6)
!3842 = !{i32 -65535, i32 536903678}
!3843 = !DILocation(line: 142, column: 7, scope: !3841)
!3844 = !DILocation(line: 142, column: 6, scope: !3824)
!3845 = !DILocation(line: 143, column: 3, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3841, file: !3769, line: 142, column: 40)
!3847 = !DILocation(line: 144, column: 19, scope: !3846)
!3848 = !DILocation(line: 144, column: 3, scope: !3846)
!3849 = !DILocation(line: 145, column: 7, scope: !3846)
!3850 = !DILocation(line: 146, column: 2, scope: !3846)
!3851 = !DILocation(line: 148, column: 2, scope: !3824)
!3852 = !DILocation(line: 149, column: 1, scope: !3824)
!3853 = distinct !DISubprogram(name: "right_chunk", scope: !2648, file: !2648, line: 204, type: !3854, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3856)
!3854 = !DISubroutineType(types: !3855)
!3855 = !{!2666, !2661, !2666}
!3856 = !{!3857, !3858}
!3857 = !DILocalVariable(name: "h", arg: 1, scope: !3853, file: !2648, line: 204, type: !2661)
!3858 = !DILocalVariable(name: "c", arg: 2, scope: !3853, file: !2648, line: 204, type: !2666)
!3859 = !DILocation(line: 0, scope: !3853)
!3860 = !DILocation(line: 206, column: 13, scope: !3853)
!3861 = !DILocation(line: 206, column: 11, scope: !3853)
!3862 = !DILocation(line: 206, column: 2, scope: !3853)
!3863 = distinct !DISubprogram(name: "chunk_used", scope: !2648, file: !2648, line: 137, type: !3864, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3866)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!157, !2661, !2666}
!3866 = !{!3867, !3868}
!3867 = !DILocalVariable(name: "h", arg: 1, scope: !3863, file: !2648, line: 137, type: !2661)
!3868 = !DILocalVariable(name: "c", arg: 2, scope: !3863, file: !2648, line: 137, type: !2666)
!3869 = !DILocation(line: 0, scope: !3863)
!3870 = !DILocation(line: 139, column: 9, scope: !3863)
!3871 = !DILocation(line: 139, column: 42, scope: !3863)
!3872 = !DILocation(line: 139, column: 2, scope: !3863)
!3873 = distinct !DISubprogram(name: "free_list_remove", scope: !3769, file: !3769, line: 60, type: !3825, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3874)
!3874 = !{!3875, !3876, !3877}
!3875 = !DILocalVariable(name: "h", arg: 1, scope: !3873, file: !3769, line: 60, type: !2661)
!3876 = !DILocalVariable(name: "c", arg: 2, scope: !3873, file: !3769, line: 60, type: !2666)
!3877 = !DILocalVariable(name: "bidx", scope: !3878, file: !3769, line: 63, type: !103)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !3769, line: 62, column: 31)
!3879 = distinct !DILexicalBlock(scope: !3873, file: !3769, line: 62, column: 6)
!3880 = !DILocation(line: 0, scope: !3873)
!3881 = !DILocation(line: 63, column: 28, scope: !3878)
!3882 = !{i32 0, i32 32768}
!3883 = !DILocation(line: 63, column: 14, scope: !3878)
!3884 = !DILocation(line: 0, scope: !3878)
!3885 = !DILocation(line: 64, column: 3, scope: !3878)
!3886 = !DILocation(line: 66, column: 1, scope: !3873)
!3887 = distinct !DISubprogram(name: "merge_chunks", scope: !3769, file: !3769, line: 125, type: !3888, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3890)
!3888 = !DISubroutineType(types: !3889)
!3889 = !{null, !2661, !2666, !2666}
!3890 = !{!3891, !3892, !3893, !3894}
!3891 = !DILocalVariable(name: "h", arg: 1, scope: !3887, file: !3769, line: 125, type: !2661)
!3892 = !DILocalVariable(name: "lc", arg: 2, scope: !3887, file: !3769, line: 125, type: !2666)
!3893 = !DILocalVariable(name: "rc", arg: 3, scope: !3887, file: !3769, line: 125, type: !2666)
!3894 = !DILocalVariable(name: "newsz", scope: !3887, file: !3769, line: 127, type: !3895)
!3895 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2648, line: 62, baseType: !121)
!3896 = !DILocation(line: 0, scope: !3887)
!3897 = !DILocation(line: 127, column: 20, scope: !3887)
!3898 = !DILocation(line: 127, column: 40, scope: !3887)
!3899 = !DILocation(line: 127, column: 38, scope: !3887)
!3900 = !DILocation(line: 129, column: 2, scope: !3887)
!3901 = !DILocation(line: 130, column: 25, scope: !3887)
!3902 = !DILocation(line: 130, column: 2, scope: !3887)
!3903 = !DILocation(line: 131, column: 1, scope: !3887)
!3904 = distinct !DISubprogram(name: "left_chunk", scope: !2648, file: !2648, line: 199, type: !3854, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3905)
!3905 = !{!3906, !3907}
!3906 = !DILocalVariable(name: "h", arg: 1, scope: !3904, file: !2648, line: 199, type: !2661)
!3907 = !DILocalVariable(name: "c", arg: 2, scope: !3904, file: !2648, line: 199, type: !2666)
!3908 = !DILocation(line: 0, scope: !3904)
!3909 = !DILocation(line: 201, column: 13, scope: !3904)
!3910 = !DILocation(line: 201, column: 11, scope: !3904)
!3911 = !DILocation(line: 201, column: 2, scope: !3904)
!3912 = distinct !DISubprogram(name: "free_list_add", scope: !3769, file: !3769, line: 98, type: !3825, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3913)
!3913 = !{!3914, !3915, !3916}
!3914 = !DILocalVariable(name: "h", arg: 1, scope: !3912, file: !3769, line: 98, type: !2661)
!3915 = !DILocalVariable(name: "c", arg: 2, scope: !3912, file: !3769, line: 98, type: !2666)
!3916 = !DILocalVariable(name: "bidx", scope: !3917, file: !3769, line: 101, type: !103)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !3769, line: 100, column: 31)
!3918 = distinct !DILexicalBlock(scope: !3912, file: !3769, line: 100, column: 6)
!3919 = !DILocation(line: 0, scope: !3912)
!3920 = !DILocation(line: 101, column: 28, scope: !3917)
!3921 = !DILocation(line: 101, column: 14, scope: !3917)
!3922 = !DILocation(line: 0, scope: !3917)
!3923 = !DILocation(line: 102, column: 3, scope: !3917)
!3924 = !DILocation(line: 104, column: 1, scope: !3912)
!3925 = distinct !DISubprogram(name: "chunk_size", scope: !2648, file: !2648, line: 142, type: !3926, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3928)
!3926 = !DISubroutineType(types: !3927)
!3927 = !{!3895, !2661, !2666}
!3928 = !{!3929, !3930}
!3929 = !DILocalVariable(name: "h", arg: 1, scope: !3925, file: !2648, line: 142, type: !2661)
!3930 = !DILocalVariable(name: "c", arg: 2, scope: !3925, file: !2648, line: 142, type: !2666)
!3931 = !DILocation(line: 0, scope: !3925)
!3932 = !DILocation(line: 144, column: 9, scope: !3925)
!3933 = !DILocation(line: 144, column: 42, scope: !3925)
!3934 = !DILocation(line: 144, column: 2, scope: !3925)
!3935 = distinct !DISubprogram(name: "bucket_idx", scope: !2648, file: !2648, line: 250, type: !3936, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3938)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!103, !2661, !3895}
!3938 = !{!3939, !3940, !3941}
!3939 = !DILocalVariable(name: "h", arg: 1, scope: !3935, file: !2648, line: 250, type: !2661)
!3940 = !DILocalVariable(name: "sz", arg: 2, scope: !3935, file: !2648, line: 250, type: !3895)
!3941 = !DILocalVariable(name: "usable_sz", scope: !3935, file: !2648, line: 252, type: !32)
!3942 = !DILocation(line: 0, scope: !3935)
!3943 = !DILocation(line: 252, column: 32, scope: !3935)
!3944 = !DILocation(line: 252, column: 30, scope: !3935)
!3945 = !DILocation(line: 252, column: 50, scope: !3935)
!3946 = !DILocation(line: 253, column: 14, scope: !3935)
!3947 = !{i32 0, i32 33}
!3948 = !DILocation(line: 253, column: 12, scope: !3935)
!3949 = !DILocation(line: 253, column: 2, scope: !3935)
!3950 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3769, file: !3769, line: 68, type: !3951, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3953)
!3951 = !DISubroutineType(types: !3952)
!3952 = !{null, !2661, !2666, !103}
!3953 = !{!3954, !3955, !3956, !3957, !3959, !3962}
!3954 = !DILocalVariable(name: "h", arg: 1, scope: !3950, file: !3769, line: 68, type: !2661)
!3955 = !DILocalVariable(name: "c", arg: 2, scope: !3950, file: !3769, line: 68, type: !2666)
!3956 = !DILocalVariable(name: "bidx", arg: 3, scope: !3950, file: !3769, line: 68, type: !103)
!3957 = !DILocalVariable(name: "b", scope: !3950, file: !3769, line: 70, type: !3958)
!3958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 32)
!3959 = !DILocalVariable(name: "second", scope: !3960, file: !3769, line: 84, type: !2666)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !3769, line: 80, column: 9)
!3961 = distinct !DILexicalBlock(scope: !3950, file: !3769, line: 72, column: 6)
!3962 = !DILocalVariable(name: "first", scope: !3960, file: !3769, line: 85, type: !2666)
!3963 = !DILocation(line: 0, scope: !3950)
!3964 = !DILocation(line: 72, column: 9, scope: !3961)
!3965 = !DILocation(line: 72, column: 14, scope: !3961)
!3966 = !DILocation(line: 72, column: 6, scope: !3950)
!3967 = !DILocation(line: 76, column: 23, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3961, file: !3769, line: 72, column: 21)
!3969 = !DILocation(line: 76, column: 6, scope: !3968)
!3970 = !DILocation(line: 76, column: 20, scope: !3968)
!3971 = !DILocation(line: 77, column: 11, scope: !3968)
!3972 = !DILocation(line: 78, column: 3, scope: !3968)
!3973 = !DILocation(line: 79, column: 3, scope: !3968)
!3974 = !DILocation(line: 80, column: 2, scope: !3968)
!3975 = !DILocation(line: 0, scope: !3960)
!3976 = !DILocation(line: 85, column: 21, scope: !3960)
!3977 = !{i32 0, i32 65536}
!3978 = !DILocation(line: 87, column: 3, scope: !3960)
!3979 = !DILocation(line: 88, column: 3, scope: !3960)
!3980 = !DILocation(line: 89, column: 3, scope: !3960)
!3981 = !DILocation(line: 90, column: 3, scope: !3960)
!3982 = !DILocation(line: 96, column: 1, scope: !3950)
!3983 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2648, file: !2648, line: 187, type: !3888, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3984)
!3984 = !{!3985, !3986, !3987}
!3985 = !DILocalVariable(name: "h", arg: 1, scope: !3983, file: !2648, line: 187, type: !2661)
!3986 = !DILocalVariable(name: "c", arg: 2, scope: !3983, file: !2648, line: 187, type: !2666)
!3987 = !DILocalVariable(name: "prev", arg: 3, scope: !3983, file: !2648, line: 188, type: !2666)
!3988 = !DILocation(line: 0, scope: !3983)
!3989 = !DILocation(line: 190, column: 2, scope: !3983)
!3990 = !DILocation(line: 191, column: 1, scope: !3983)
!3991 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2648, file: !2648, line: 193, type: !3888, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !3992)
!3992 = !{!3993, !3994, !3995}
!3993 = !DILocalVariable(name: "h", arg: 1, scope: !3991, file: !2648, line: 193, type: !2661)
!3994 = !DILocalVariable(name: "c", arg: 2, scope: !3991, file: !2648, line: 193, type: !2666)
!3995 = !DILocalVariable(name: "next", arg: 3, scope: !3991, file: !2648, line: 194, type: !2666)
!3996 = !DILocation(line: 0, scope: !3991)
!3997 = !DILocation(line: 196, column: 2, scope: !3991)
!3998 = !DILocation(line: 197, column: 1, scope: !3991)
!3999 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2648, file: !2648, line: 177, type: !3854, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4000)
!4000 = !{!4001, !4002}
!4001 = !DILocalVariable(name: "h", arg: 1, scope: !3999, file: !2648, line: 177, type: !2661)
!4002 = !DILocalVariable(name: "c", arg: 2, scope: !3999, file: !2648, line: 177, type: !2666)
!4003 = !DILocation(line: 0, scope: !3999)
!4004 = !DILocation(line: 179, column: 9, scope: !3999)
!4005 = !DILocation(line: 179, column: 2, scope: !3999)
!4006 = distinct !DISubprogram(name: "chunk_field", scope: !2648, file: !2648, line: 107, type: !4007, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4009)
!4007 = !DISubroutineType(types: !4008)
!4008 = !{!2666, !2661, !2666, !2647}
!4009 = !{!4010, !4011, !4012, !4013, !4014}
!4010 = !DILocalVariable(name: "h", arg: 1, scope: !4006, file: !2648, line: 107, type: !2661)
!4011 = !DILocalVariable(name: "c", arg: 2, scope: !4006, file: !2648, line: 107, type: !2666)
!4012 = !DILocalVariable(name: "f", arg: 3, scope: !4006, file: !2648, line: 108, type: !2647)
!4013 = !DILocalVariable(name: "buf", scope: !4006, file: !2648, line: 110, type: !2655)
!4014 = !DILocalVariable(name: "cmem", scope: !4006, file: !2648, line: 111, type: !102)
!4015 = !DILocation(line: 0, scope: !4006)
!4016 = !DILocation(line: 110, column: 22, scope: !4006)
!4017 = !DILocation(line: 111, column: 15, scope: !4006)
!4018 = !DILocation(line: 116, column: 11, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4020, file: !2648, line: 115, column: 9)
!4020 = distinct !DILexicalBlock(scope: !4006, file: !2648, line: 113, column: 6)
!4021 = !DILocation(line: 116, column: 10, scope: !4019)
!4022 = !DILocation(line: 118, column: 1, scope: !4006)
!4023 = distinct !DISubprogram(name: "chunk_buf", scope: !2648, file: !2648, line: 101, type: !4024, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4026)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!2655, !2661}
!4026 = !{!4027}
!4027 = !DILocalVariable(name: "h", arg: 1, scope: !4023, file: !2648, line: 101, type: !2661)
!4028 = !DILocation(line: 0, scope: !4023)
!4029 = !DILocation(line: 104, column: 9, scope: !4023)
!4030 = !DILocation(line: 104, column: 2, scope: !4023)
!4031 = distinct !DISubprogram(name: "chunk_set", scope: !2648, file: !2648, line: 120, type: !4032, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4034)
!4032 = !DISubroutineType(types: !4033)
!4033 = !{null, !2661, !2666, !2647, !2666}
!4034 = !{!4035, !4036, !4037, !4038, !4039, !4040}
!4035 = !DILocalVariable(name: "h", arg: 1, scope: !4031, file: !2648, line: 120, type: !2661)
!4036 = !DILocalVariable(name: "c", arg: 2, scope: !4031, file: !2648, line: 120, type: !2666)
!4037 = !DILocalVariable(name: "f", arg: 3, scope: !4031, file: !2648, line: 121, type: !2647)
!4038 = !DILocalVariable(name: "val", arg: 4, scope: !4031, file: !2648, line: 121, type: !2666)
!4039 = !DILocalVariable(name: "buf", scope: !4031, file: !2648, line: 125, type: !2655)
!4040 = !DILocalVariable(name: "cmem", scope: !4031, file: !2648, line: 126, type: !102)
!4041 = !DILocation(line: 0, scope: !4031)
!4042 = !DILocation(line: 125, column: 22, scope: !4031)
!4043 = !DILocation(line: 126, column: 15, scope: !4031)
!4044 = !DILocation(line: 133, column: 27, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !2648, line: 131, column: 9)
!4046 = distinct !DILexicalBlock(scope: !4031, file: !2648, line: 128, column: 6)
!4047 = !DILocation(line: 133, column: 4, scope: !4045)
!4048 = !DILocation(line: 133, column: 3, scope: !4045)
!4049 = !DILocation(line: 133, column: 25, scope: !4045)
!4050 = !DILocation(line: 135, column: 1, scope: !4031)
!4051 = distinct !DISubprogram(name: "min_chunk_size", scope: !2648, file: !2648, line: 240, type: !4052, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4054)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{!3895, !2661}
!4054 = !{!4055}
!4055 = !DILocalVariable(name: "h", arg: 1, scope: !4051, file: !2648, line: 240, type: !2661)
!4056 = !DILocation(line: 0, scope: !4051)
!4057 = !DILocation(line: 242, column: 9, scope: !4051)
!4058 = !DILocation(line: 242, column: 2, scope: !4051)
!4059 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2648, file: !2648, line: 235, type: !4060, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4062)
!4060 = !DISubroutineType(types: !4061)
!4061 = !{!3895, !2661, !344}
!4062 = !{!4063, !4064}
!4063 = !DILocalVariable(name: "h", arg: 1, scope: !4059, file: !2648, line: 235, type: !2661)
!4064 = !DILocalVariable(name: "bytes", arg: 2, scope: !4059, file: !2648, line: 235, type: !344)
!4065 = !DILocation(line: 0, scope: !4059)
!4066 = !DILocation(line: 237, column: 39, scope: !4059)
!4067 = !DILocation(line: 237, column: 9, scope: !4059)
!4068 = !DILocation(line: 237, column: 2, scope: !4059)
!4069 = distinct !DISubprogram(name: "chunksz", scope: !2648, file: !2648, line: 230, type: !4070, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4072)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{!3895, !344}
!4072 = !{!4073}
!4073 = !DILocalVariable(name: "bytes", arg: 1, scope: !4069, file: !2648, line: 230, type: !344)
!4074 = !DILocation(line: 0, scope: !4069)
!4075 = !DILocation(line: 232, column: 29, scope: !4069)
!4076 = !DILocation(line: 232, column: 35, scope: !4069)
!4077 = !DILocation(line: 232, column: 2, scope: !4069)
!4078 = distinct !DISubprogram(name: "set_chunk_size", scope: !2648, file: !2648, line: 172, type: !4079, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4081)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{null, !2661, !2666, !3895}
!4081 = !{!4082, !4083, !4084}
!4082 = !DILocalVariable(name: "h", arg: 1, scope: !4078, file: !2648, line: 172, type: !2661)
!4083 = !DILocalVariable(name: "c", arg: 2, scope: !4078, file: !2648, line: 172, type: !2666)
!4084 = !DILocalVariable(name: "size", arg: 3, scope: !4078, file: !2648, line: 172, type: !3895)
!4085 = !DILocation(line: 0, scope: !4078)
!4086 = !DILocation(line: 174, column: 38, scope: !4078)
!4087 = !DILocation(line: 174, column: 2, scope: !4078)
!4088 = !DILocation(line: 175, column: 1, scope: !4078)
!4089 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2648, file: !2648, line: 209, type: !4079, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4090)
!4090 = !{!4091, !4092, !4093}
!4091 = !DILocalVariable(name: "h", arg: 1, scope: !4089, file: !2648, line: 209, type: !2661)
!4092 = !DILocalVariable(name: "c", arg: 2, scope: !4089, file: !2648, line: 209, type: !2666)
!4093 = !DILocalVariable(name: "size", arg: 3, scope: !4089, file: !2648, line: 210, type: !3895)
!4094 = !DILocation(line: 0, scope: !4089)
!4095 = !DILocation(line: 212, column: 2, scope: !4089)
!4096 = !DILocation(line: 213, column: 1, scope: !4089)
!4097 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3769, file: !3769, line: 34, type: !3951, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4098)
!4098 = !{!4099, !4100, !4101, !4102, !4103, !4106}
!4099 = !DILocalVariable(name: "h", arg: 1, scope: !4097, file: !3769, line: 34, type: !2661)
!4100 = !DILocalVariable(name: "c", arg: 2, scope: !4097, file: !3769, line: 34, type: !2666)
!4101 = !DILocalVariable(name: "bidx", arg: 3, scope: !4097, file: !3769, line: 34, type: !103)
!4102 = !DILocalVariable(name: "b", scope: !4097, file: !3769, line: 36, type: !3958)
!4103 = !DILocalVariable(name: "first", scope: !4104, file: !3769, line: 47, type: !2666)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !3769, line: 46, column: 9)
!4105 = distinct !DILexicalBlock(scope: !4097, file: !3769, line: 42, column: 6)
!4106 = !DILocalVariable(name: "second", scope: !4104, file: !3769, line: 48, type: !2666)
!4107 = !DILocation(line: 0, scope: !4097)
!4108 = !DILocation(line: 36, column: 29, scope: !4097)
!4109 = !DILocation(line: 42, column: 6, scope: !4105)
!4110 = !DILocation(line: 42, column: 28, scope: !4105)
!4111 = !DILocation(line: 42, column: 6, scope: !4097)
!4112 = !DILocation(line: 44, column: 24, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4105, file: !3769, line: 42, column: 34)
!4114 = !DILocation(line: 44, column: 23, scope: !4113)
!4115 = !DILocation(line: 44, column: 6, scope: !4113)
!4116 = !DILocation(line: 44, column: 20, scope: !4113)
!4117 = !DILocation(line: 45, column: 6, scope: !4113)
!4118 = !DILocation(line: 45, column: 11, scope: !4113)
!4119 = !DILocation(line: 46, column: 2, scope: !4113)
!4120 = !DILocation(line: 47, column: 21, scope: !4104)
!4121 = !DILocation(line: 0, scope: !4104)
!4122 = !DILocation(line: 50, column: 6, scope: !4104)
!4123 = !DILocation(line: 50, column: 11, scope: !4104)
!4124 = !DILocation(line: 51, column: 3, scope: !4104)
!4125 = !DILocation(line: 52, column: 3, scope: !4104)
!4126 = !DILocation(line: 58, column: 1, scope: !4097)
!4127 = distinct !DISubprogram(name: "next_free_chunk", scope: !2648, file: !2648, line: 182, type: !3854, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4128)
!4128 = !{!4129, !4130}
!4129 = !DILocalVariable(name: "h", arg: 1, scope: !4127, file: !2648, line: 182, type: !2661)
!4130 = !DILocalVariable(name: "c", arg: 2, scope: !4127, file: !2648, line: 182, type: !2666)
!4131 = !DILocation(line: 0, scope: !4127)
!4132 = !DILocation(line: 184, column: 9, scope: !4127)
!4133 = !DILocation(line: 184, column: 2, scope: !4127)
!4134 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3769, file: !3769, line: 200, type: !4135, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4137)
!4135 = !DISubroutineType(types: !4136)
!4136 = !{!344, !3772, !102}
!4137 = !{!4138, !4139, !4140, !4141, !4142, !4143, !4144}
!4138 = !DILocalVariable(name: "heap", arg: 1, scope: !4134, file: !3769, line: 200, type: !3772)
!4139 = !DILocalVariable(name: "mem", arg: 2, scope: !4134, file: !3769, line: 200, type: !102)
!4140 = !DILocalVariable(name: "h", scope: !4134, file: !3769, line: 202, type: !2661)
!4141 = !DILocalVariable(name: "c", scope: !4134, file: !3769, line: 203, type: !2666)
!4142 = !DILocalVariable(name: "addr", scope: !4134, file: !3769, line: 204, type: !344)
!4143 = !DILocalVariable(name: "chunk_base", scope: !4134, file: !3769, line: 205, type: !344)
!4144 = !DILocalVariable(name: "chunk_sz", scope: !4134, file: !3769, line: 206, type: !344)
!4145 = !DILocation(line: 0, scope: !4134)
!4146 = !DILocation(line: 202, column: 27, scope: !4134)
!4147 = !DILocation(line: 203, column: 16, scope: !4134)
!4148 = !DILocation(line: 204, column: 16, scope: !4134)
!4149 = !DILocation(line: 205, column: 31, scope: !4134)
!4150 = !DILocation(line: 205, column: 22, scope: !4134)
!4151 = !DILocation(line: 206, column: 20, scope: !4134)
!4152 = !DILocation(line: 206, column: 37, scope: !4134)
!4153 = !DILocation(line: 208, column: 26, scope: !4134)
!4154 = !DILocation(line: 208, column: 18, scope: !4134)
!4155 = !DILocation(line: 208, column: 2, scope: !4134)
!4156 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3769, file: !3769, line: 263, type: !4157, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4159)
!4157 = !DISubroutineType(types: !4158)
!4158 = !{!102, !3772, !344}
!4159 = !{!4160, !4161, !4162, !4163, !4164, !4165}
!4160 = !DILocalVariable(name: "heap", arg: 1, scope: !4156, file: !3769, line: 263, type: !3772)
!4161 = !DILocalVariable(name: "bytes", arg: 2, scope: !4156, file: !3769, line: 263, type: !344)
!4162 = !DILocalVariable(name: "h", scope: !4156, file: !3769, line: 265, type: !2661)
!4163 = !DILocalVariable(name: "mem", scope: !4156, file: !3769, line: 266, type: !102)
!4164 = !DILocalVariable(name: "chunk_sz", scope: !4156, file: !3769, line: 272, type: !3895)
!4165 = !DILocalVariable(name: "c", scope: !4156, file: !3769, line: 273, type: !2666)
!4166 = !DILocation(line: 0, scope: !4156)
!4167 = !DILocation(line: 265, column: 27, scope: !4156)
!4168 = !DILocation(line: 268, column: 12, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4156, file: !3769, line: 268, column: 6)
!4170 = !DILocation(line: 268, column: 18, scope: !4169)
!4171 = !DILocation(line: 268, column: 21, scope: !4169)
!4172 = !DILocation(line: 268, column: 6, scope: !4156)
!4173 = !DILocation(line: 272, column: 23, scope: !4156)
!4174 = !DILocation(line: 273, column: 16, scope: !4156)
!4175 = !DILocation(line: 274, column: 8, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4156, file: !3769, line: 274, column: 6)
!4177 = !DILocation(line: 274, column: 6, scope: !4156)
!4178 = !DILocation(line: 279, column: 6, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4156, file: !3769, line: 279, column: 6)
!4180 = !DILocation(line: 279, column: 23, scope: !4179)
!4181 = !DILocation(line: 279, column: 6, scope: !4156)
!4182 = !DILocation(line: 280, column: 24, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4179, file: !3769, line: 279, column: 35)
!4184 = !DILocation(line: 280, column: 3, scope: !4183)
!4185 = !DILocation(line: 281, column: 3, scope: !4183)
!4186 = !DILocation(line: 282, column: 2, scope: !4183)
!4187 = !DILocation(line: 284, column: 2, scope: !4156)
!4188 = !DILocation(line: 286, column: 8, scope: !4156)
!4189 = !DILocation(line: 298, column: 2, scope: !4156)
!4190 = !DILocation(line: 299, column: 1, scope: !4156)
!4191 = distinct !DISubprogram(name: "size_too_big", scope: !2648, file: !2648, line: 256, type: !4192, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4194)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{!157, !2661, !344}
!4194 = !{!4195, !4196}
!4195 = !DILocalVariable(name: "h", arg: 1, scope: !4191, file: !2648, line: 256, type: !2661)
!4196 = !DILocalVariable(name: "bytes", arg: 2, scope: !4191, file: !2648, line: 256, type: !344)
!4197 = !DILocation(line: 0, scope: !4191)
!4198 = !DILocation(line: 262, column: 16, scope: !4191)
!4199 = !DILocation(line: 262, column: 36, scope: !4191)
!4200 = !DILocation(line: 262, column: 30, scope: !4191)
!4201 = !DILocation(line: 262, column: 2, scope: !4191)
!4202 = distinct !DISubprogram(name: "alloc_chunk", scope: !3769, file: !3769, line: 211, type: !4203, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4205)
!4203 = !DISubroutineType(types: !4204)
!4204 = !{!2666, !2661, !3895}
!4205 = !{!4206, !4207, !4208, !4209, !4210, !4213, !4214, !4216, !4217, !4220}
!4206 = !DILocalVariable(name: "h", arg: 1, scope: !4202, file: !3769, line: 211, type: !2661)
!4207 = !DILocalVariable(name: "sz", arg: 2, scope: !4202, file: !3769, line: 211, type: !3895)
!4208 = !DILocalVariable(name: "bi", scope: !4202, file: !3769, line: 213, type: !103)
!4209 = !DILocalVariable(name: "b", scope: !4202, file: !3769, line: 214, type: !3958)
!4210 = !DILocalVariable(name: "first", scope: !4211, file: !3769, line: 233, type: !2666)
!4211 = distinct !DILexicalBlock(scope: !4212, file: !3769, line: 232, column: 15)
!4212 = distinct !DILexicalBlock(scope: !4202, file: !3769, line: 232, column: 6)
!4213 = !DILocalVariable(name: "i", scope: !4211, file: !3769, line: 234, type: !103)
!4214 = !DILocalVariable(name: "c", scope: !4215, file: !3769, line: 236, type: !2666)
!4215 = distinct !DILexicalBlock(scope: !4211, file: !3769, line: 235, column: 6)
!4216 = !DILocalVariable(name: "bmask", scope: !4202, file: !3769, line: 249, type: !121)
!4217 = !DILocalVariable(name: "minbucket", scope: !4218, file: !3769, line: 252, type: !103)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !3769, line: 251, column: 19)
!4219 = distinct !DILexicalBlock(scope: !4202, file: !3769, line: 251, column: 6)
!4220 = !DILocalVariable(name: "c", scope: !4218, file: !3769, line: 253, type: !2666)
!4221 = !DILocation(line: 0, scope: !4202)
!4222 = !DILocation(line: 213, column: 11, scope: !4202)
!4223 = !DILocation(line: 232, column: 9, scope: !4212)
!4224 = !DILocation(line: 232, column: 6, scope: !4212)
!4225 = !DILocation(line: 232, column: 6, scope: !4202)
!4226 = !DILocation(line: 236, column: 21, scope: !4215)
!4227 = !DILocation(line: 0, scope: !4211)
!4228 = !DILocation(line: 0, scope: !4215)
!4229 = !DILocation(line: 237, column: 8, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4215, file: !3769, line: 237, column: 8)
!4231 = !DILocation(line: 237, column: 25, scope: !4230)
!4232 = !DILocation(line: 237, column: 8, scope: !4215)
!4233 = !DILocation(line: 238, column: 5, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4230, file: !3769, line: 237, column: 32)
!4235 = !DILocation(line: 241, column: 14, scope: !4215)
!4236 = !DILocation(line: 241, column: 12, scope: !4215)
!4237 = !DILocation(line: 243, column: 12, scope: !4211)
!4238 = !DILocation(line: 243, column: 16, scope: !4211)
!4239 = distinct !{!4239, !4240, !4241}
!4240 = !DILocation(line: 235, column: 3, scope: !4211)
!4241 = !DILocation(line: 243, column: 35, scope: !4211)
!4242 = !DILocation(line: 249, column: 22, scope: !4202)
!4243 = !DILocation(line: 249, column: 39, scope: !4202)
!4244 = !DILocation(line: 249, column: 36, scope: !4202)
!4245 = !DILocation(line: 251, column: 12, scope: !4219)
!4246 = !DILocation(line: 251, column: 6, scope: !4202)
!4247 = !DILocation(line: 252, column: 19, scope: !4218)
!4248 = !DILocation(line: 0, scope: !4218)
!4249 = !DILocation(line: 253, column: 39, scope: !4218)
!4250 = !DILocation(line: 255, column: 3, scope: !4218)
!4251 = !DILocation(line: 261, column: 1, scope: !4202)
!4252 = distinct !DISubprogram(name: "split_chunks", scope: !3769, file: !3769, line: 109, type: !3888, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4253)
!4253 = !{!4254, !4255, !4256, !4257, !4258, !4259}
!4254 = !DILocalVariable(name: "h", arg: 1, scope: !4252, file: !3769, line: 109, type: !2661)
!4255 = !DILocalVariable(name: "lc", arg: 2, scope: !4252, file: !3769, line: 109, type: !2666)
!4256 = !DILocalVariable(name: "rc", arg: 3, scope: !4252, file: !3769, line: 109, type: !2666)
!4257 = !DILocalVariable(name: "sz0", scope: !4252, file: !3769, line: 114, type: !3895)
!4258 = !DILocalVariable(name: "lsz", scope: !4252, file: !3769, line: 115, type: !3895)
!4259 = !DILocalVariable(name: "rsz", scope: !4252, file: !3769, line: 116, type: !3895)
!4260 = !DILocation(line: 0, scope: !4252)
!4261 = !DILocation(line: 114, column: 18, scope: !4252)
!4262 = !DILocation(line: 115, column: 21, scope: !4252)
!4263 = !DILocation(line: 116, column: 22, scope: !4252)
!4264 = !DILocation(line: 118, column: 2, scope: !4252)
!4265 = !DILocation(line: 119, column: 2, scope: !4252)
!4266 = !DILocation(line: 120, column: 2, scope: !4252)
!4267 = !DILocation(line: 121, column: 25, scope: !4252)
!4268 = !DILocation(line: 121, column: 2, scope: !4252)
!4269 = !DILocation(line: 122, column: 1, scope: !4252)
!4270 = distinct !DISubprogram(name: "chunk_mem", scope: !3769, file: !3769, line: 24, type: !4271, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4273)
!4271 = !DISubroutineType(types: !4272)
!4272 = !{!102, !2661, !2666}
!4273 = !{!4274, !4275, !4276, !4277}
!4274 = !DILocalVariable(name: "h", arg: 1, scope: !4270, file: !3769, line: 24, type: !2661)
!4275 = !DILocalVariable(name: "c", arg: 2, scope: !4270, file: !3769, line: 24, type: !2666)
!4276 = !DILocalVariable(name: "buf", scope: !4270, file: !3769, line: 26, type: !2655)
!4277 = !DILocalVariable(name: "ret", scope: !4270, file: !3769, line: 27, type: !261)
!4278 = !DILocation(line: 0, scope: !4270)
!4279 = !DILocation(line: 26, column: 22, scope: !4270)
!4280 = !DILocation(line: 27, column: 38, scope: !4270)
!4281 = !DILocation(line: 31, column: 2, scope: !4270)
!4282 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3769, file: !3769, line: 301, type: !4283, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4285)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!102, !3772, !344, !344}
!4285 = !{!4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4295, !4296, !4297}
!4286 = !DILocalVariable(name: "heap", arg: 1, scope: !4282, file: !3769, line: 301, type: !3772)
!4287 = !DILocalVariable(name: "align", arg: 2, scope: !4282, file: !3769, line: 301, type: !344)
!4288 = !DILocalVariable(name: "bytes", arg: 3, scope: !4282, file: !3769, line: 301, type: !344)
!4289 = !DILocalVariable(name: "h", scope: !4282, file: !3769, line: 303, type: !2661)
!4290 = !DILocalVariable(name: "gap", scope: !4282, file: !3769, line: 304, type: !344)
!4291 = !DILocalVariable(name: "rew", scope: !4282, file: !3769, line: 304, type: !344)
!4292 = !DILocalVariable(name: "padded_sz", scope: !4282, file: !3769, line: 335, type: !3895)
!4293 = !DILocalVariable(name: "c0", scope: !4282, file: !3769, line: 336, type: !2666)
!4294 = !DILocalVariable(name: "mem", scope: !4282, file: !3769, line: 341, type: !261)
!4295 = !DILocalVariable(name: "end", scope: !4282, file: !3769, line: 345, type: !2655)
!4296 = !DILocalVariable(name: "c", scope: !4282, file: !3769, line: 348, type: !2666)
!4297 = !DILocalVariable(name: "c_end", scope: !4282, file: !3769, line: 349, type: !2666)
!4298 = !DILocation(line: 0, scope: !4282)
!4299 = !DILocation(line: 303, column: 27, scope: !4282)
!4300 = !DILocation(line: 313, column: 16, scope: !4282)
!4301 = !DILocation(line: 313, column: 14, scope: !4282)
!4302 = !DILocation(line: 314, column: 12, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4282, file: !3769, line: 314, column: 6)
!4304 = !DILocation(line: 314, column: 6, scope: !4282)
!4305 = !DILocation(line: 315, column: 9, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4303, file: !3769, line: 314, column: 20)
!4307 = !DILocation(line: 316, column: 9, scope: !4306)
!4308 = !DILocation(line: 318, column: 13, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !3769, line: 318, column: 7)
!4310 = distinct !DILexicalBlock(scope: !4303, file: !3769, line: 317, column: 9)
!4311 = !DILocation(line: 318, column: 7, scope: !4310)
!4312 = !DILocation(line: 319, column: 11, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4309, file: !3769, line: 318, column: 39)
!4314 = !DILocation(line: 319, column: 4, scope: !4313)
!4315 = !DILocation(line: 0, scope: !4303)
!4316 = !DILocation(line: 326, column: 12, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4282, file: !3769, line: 326, column: 6)
!4318 = !DILocation(line: 326, column: 17, scope: !4317)
!4319 = !DILocation(line: 326, column: 20, scope: !4317)
!4320 = !DILocation(line: 326, column: 6, scope: !4282)
!4321 = !DILocation(line: 335, column: 50, scope: !4282)
!4322 = !DILocation(line: 335, column: 58, scope: !4282)
!4323 = !DILocation(line: 335, column: 24, scope: !4282)
!4324 = !DILocation(line: 336, column: 17, scope: !4282)
!4325 = !DILocation(line: 338, column: 9, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4282, file: !3769, line: 338, column: 6)
!4327 = !DILocation(line: 338, column: 6, scope: !4282)
!4328 = !DILocation(line: 341, column: 17, scope: !4282)
!4329 = !DILocation(line: 344, column: 20, scope: !4282)
!4330 = !DILocation(line: 344, column: 8, scope: !4282)
!4331 = !DILocation(line: 344, column: 47, scope: !4282)
!4332 = !DILocation(line: 345, column: 39, scope: !4282)
!4333 = !DILocation(line: 348, column: 16, scope: !4282)
!4334 = !DILocation(line: 349, column: 26, scope: !4282)
!4335 = !DILocation(line: 349, column: 24, scope: !4282)
!4336 = !DILocation(line: 353, column: 8, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4282, file: !3769, line: 353, column: 6)
!4338 = !DILocation(line: 353, column: 6, scope: !4282)
!4339 = !DILocation(line: 354, column: 3, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4337, file: !3769, line: 353, column: 14)
!4341 = !DILocation(line: 355, column: 3, scope: !4340)
!4342 = !DILocation(line: 356, column: 2, scope: !4340)
!4343 = !DILocation(line: 359, column: 6, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4282, file: !3769, line: 359, column: 6)
!4345 = !DILocation(line: 359, column: 24, scope: !4344)
!4346 = !DILocation(line: 359, column: 6, scope: !4282)
!4347 = !DILocation(line: 360, column: 3, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4344, file: !3769, line: 359, column: 33)
!4349 = !DILocation(line: 361, column: 3, scope: !4348)
!4350 = !DILocation(line: 362, column: 2, scope: !4348)
!4351 = !DILocation(line: 364, column: 2, scope: !4282)
!4352 = !DILocation(line: 377, column: 1, scope: !4282)
!4353 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3769, file: !3769, line: 379, type: !4354, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4356)
!4354 = !DISubroutineType(types: !4355)
!4355 = !{!102, !3772, !102, !344, !344}
!4356 = !{!4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4372, !4373}
!4357 = !DILocalVariable(name: "heap", arg: 1, scope: !4353, file: !3769, line: 379, type: !3772)
!4358 = !DILocalVariable(name: "ptr", arg: 2, scope: !4353, file: !3769, line: 379, type: !102)
!4359 = !DILocalVariable(name: "align", arg: 3, scope: !4353, file: !3769, line: 380, type: !344)
!4360 = !DILocalVariable(name: "bytes", arg: 4, scope: !4353, file: !3769, line: 380, type: !344)
!4361 = !DILocalVariable(name: "h", scope: !4353, file: !3769, line: 382, type: !2661)
!4362 = !DILocalVariable(name: "c", scope: !4353, file: !3769, line: 399, type: !2666)
!4363 = !DILocalVariable(name: "rc", scope: !4353, file: !3769, line: 400, type: !2666)
!4364 = !DILocalVariable(name: "align_gap", scope: !4353, file: !3769, line: 401, type: !344)
!4365 = !DILocalVariable(name: "chunks_need", scope: !4353, file: !3769, line: 402, type: !3895)
!4366 = !DILocalVariable(name: "split_size", scope: !4367, file: !3769, line: 435, type: !3895)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !3769, line: 433, column: 61)
!4368 = distinct !DILexicalBlock(scope: !4369, file: !3769, line: 432, column: 13)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !3769, line: 409, column: 13)
!4370 = distinct !DILexicalBlock(scope: !4371, file: !3769, line: 406, column: 13)
!4371 = distinct !DILexicalBlock(scope: !4353, file: !3769, line: 404, column: 6)
!4372 = !DILocalVariable(name: "ptr2", scope: !4353, file: !3769, line: 474, type: !102)
!4373 = !DILocalVariable(name: "prev_size", scope: !4374, file: !3769, line: 477, type: !344)
!4374 = distinct !DILexicalBlock(scope: !4375, file: !3769, line: 476, column: 20)
!4375 = distinct !DILexicalBlock(scope: !4353, file: !3769, line: 476, column: 6)
!4376 = !DILocation(line: 0, scope: !4353)
!4377 = !DILocation(line: 382, column: 27, scope: !4353)
!4378 = !DILocation(line: 385, column: 10, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4353, file: !3769, line: 385, column: 6)
!4380 = !DILocation(line: 385, column: 6, scope: !4353)
!4381 = !DILocation(line: 386, column: 10, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4379, file: !3769, line: 385, column: 19)
!4383 = !DILocation(line: 386, column: 3, scope: !4382)
!4384 = !DILocation(line: 388, column: 12, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4353, file: !3769, line: 388, column: 6)
!4386 = !DILocation(line: 388, column: 6, scope: !4353)
!4387 = !DILocation(line: 389, column: 3, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4385, file: !3769, line: 388, column: 18)
!4389 = !DILocation(line: 390, column: 3, scope: !4388)
!4390 = !DILocation(line: 395, column: 6, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4353, file: !3769, line: 395, column: 6)
!4392 = !DILocation(line: 395, column: 6, scope: !4353)
!4393 = !DILocation(line: 399, column: 16, scope: !4353)
!4394 = !DILocation(line: 400, column: 17, scope: !4353)
!4395 = !DILocation(line: 401, column: 49, scope: !4353)
!4396 = !DILocation(line: 401, column: 36, scope: !4353)
!4397 = !DILocation(line: 402, column: 52, scope: !4353)
!4398 = !DILocation(line: 402, column: 26, scope: !4353)
!4399 = !DILocation(line: 404, column: 6, scope: !4371)
!4400 = !DILocation(line: 404, column: 12, scope: !4371)
!4401 = !DILocation(line: 404, column: 40, scope: !4371)
!4402 = !DILocation(line: 404, column: 31, scope: !4371)
!4403 = !DILocation(line: 404, column: 6, scope: !4353)
!4404 = !DILocation(line: 406, column: 13, scope: !4370)
!4405 = !DILocation(line: 406, column: 30, scope: !4370)
!4406 = !DILocation(line: 406, column: 13, scope: !4371)
!4407 = !DILocation(line: 409, column: 30, scope: !4369)
!4408 = !DILocation(line: 409, column: 13, scope: !4370)
!4409 = !DILocation(line: 420, column: 24, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4369, file: !3769, line: 409, column: 45)
!4411 = !DILocation(line: 420, column: 3, scope: !4410)
!4412 = !DILocation(line: 421, column: 3, scope: !4410)
!4413 = !DILocation(line: 422, column: 3, scope: !4410)
!4414 = !DILocation(line: 431, column: 3, scope: !4410)
!4415 = !DILocation(line: 432, column: 14, scope: !4368)
!4416 = !DILocation(line: 432, column: 32, scope: !4368)
!4417 = !DILocation(line: 433, column: 26, scope: !4368)
!4418 = !DILocation(line: 433, column: 24, scope: !4368)
!4419 = !DILocation(line: 433, column: 44, scope: !4368)
!4420 = !DILocation(line: 432, column: 13, scope: !4369)
!4421 = !DILocation(line: 435, column: 38, scope: !4367)
!4422 = !DILocation(line: 0, scope: !4367)
!4423 = !DILocation(line: 445, column: 3, scope: !4367)
!4424 = !DILocation(line: 447, column: 20, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4367, file: !3769, line: 447, column: 7)
!4426 = !DILocation(line: 447, column: 18, scope: !4425)
!4427 = !DILocation(line: 447, column: 7, scope: !4367)
!4428 = !DILocation(line: 448, column: 27, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4425, file: !3769, line: 447, column: 39)
!4430 = !DILocation(line: 448, column: 4, scope: !4429)
!4431 = !DILocation(line: 449, column: 4, scope: !4429)
!4432 = !DILocation(line: 450, column: 3, scope: !4429)
!4433 = !DILocation(line: 452, column: 3, scope: !4367)
!4434 = !DILocation(line: 453, column: 3, scope: !4367)
!4435 = !DILocation(line: 474, column: 15, scope: !4353)
!4436 = !DILocation(line: 476, column: 11, scope: !4375)
!4437 = !DILocation(line: 476, column: 6, scope: !4353)
!4438 = !DILocation(line: 477, column: 42, scope: !4374)
!4439 = !DILocation(line: 477, column: 22, scope: !4374)
!4440 = !DILocation(line: 477, column: 60, scope: !4374)
!4441 = !DILocation(line: 0, scope: !4374)
!4442 = !DILocation(line: 479, column: 21, scope: !4374)
!4443 = !DILocation(line: 479, column: 3, scope: !4374)
!4444 = !DILocation(line: 480, column: 3, scope: !4374)
!4445 = !DILocation(line: 481, column: 2, scope: !4374)
!4446 = !DILocation(line: 483, column: 1, scope: !4353)
!4447 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2648, file: !2648, line: 245, type: !4448, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4450)
!4448 = !DISubroutineType(types: !4449)
!4449 = !{!344, !2661, !3895}
!4450 = !{!4451, !4452}
!4451 = !DILocalVariable(name: "h", arg: 1, scope: !4447, file: !2648, line: 245, type: !2661)
!4452 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4447, file: !2648, line: 245, type: !3895)
!4453 = !DILocation(line: 0, scope: !4447)
!4454 = !DILocation(line: 247, column: 20, scope: !4447)
!4455 = !DILocation(line: 247, column: 33, scope: !4447)
!4456 = !DILocation(line: 247, column: 2, scope: !4447)
!4457 = distinct !DISubprogram(name: "sys_heap_init", scope: !3769, file: !3769, line: 485, type: !4458, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4460)
!4458 = !DISubroutineType(types: !4459)
!4459 = !{null, !3772, !102, !344}
!4460 = !{!4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470}
!4461 = !DILocalVariable(name: "heap", arg: 1, scope: !4457, file: !3769, line: 485, type: !3772)
!4462 = !DILocalVariable(name: "mem", arg: 2, scope: !4457, file: !3769, line: 485, type: !102)
!4463 = !DILocalVariable(name: "bytes", arg: 3, scope: !4457, file: !3769, line: 485, type: !344)
!4464 = !DILocalVariable(name: "addr", scope: !4457, file: !3769, line: 502, type: !22)
!4465 = !DILocalVariable(name: "end", scope: !4457, file: !3769, line: 503, type: !22)
!4466 = !DILocalVariable(name: "heap_sz", scope: !4457, file: !3769, line: 504, type: !3895)
!4467 = !DILocalVariable(name: "h", scope: !4457, file: !3769, line: 509, type: !2661)
!4468 = !DILocalVariable(name: "nb_buckets", scope: !4457, file: !3769, line: 520, type: !103)
!4469 = !DILocalVariable(name: "chunk0_size", scope: !4457, file: !3769, line: 521, type: !3895)
!4470 = !DILocalVariable(name: "i", scope: !4471, file: !3769, line: 526, type: !103)
!4471 = distinct !DILexicalBlock(scope: !4457, file: !3769, line: 526, column: 2)
!4472 = !DILocation(line: 0, scope: !4457)
!4473 = !DILocation(line: 499, column: 8, scope: !4457)
!4474 = !DILocation(line: 502, column: 19, scope: !4457)
!4475 = !DILocation(line: 503, column: 18, scope: !4457)
!4476 = !DILocation(line: 504, column: 27, scope: !4457)
!4477 = !DILocation(line: 504, column: 35, scope: !4457)
!4478 = !DILocation(line: 509, column: 21, scope: !4457)
!4479 = !DILocation(line: 510, column: 8, scope: !4457)
!4480 = !DILocation(line: 510, column: 13, scope: !4457)
!4481 = !DILocation(line: 511, column: 5, scope: !4457)
!4482 = !DILocation(line: 511, column: 15, scope: !4457)
!4483 = !DILocation(line: 512, column: 5, scope: !4457)
!4484 = !DILocation(line: 512, column: 19, scope: !4457)
!4485 = !DILocation(line: 520, column: 19, scope: !4457)
!4486 = !DILocation(line: 522, column: 21, scope: !4457)
!4487 = !DILocation(line: 521, column: 56, scope: !4457)
!4488 = !DILocation(line: 521, column: 26, scope: !4457)
!4489 = !DILocation(line: 0, scope: !4471)
!4490 = !DILocation(line: 526, column: 20, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4471, file: !3769, line: 526, column: 2)
!4492 = !DILocation(line: 526, column: 2, scope: !4471)
!4493 = !DILocation(line: 531, column: 2, scope: !4457)
!4494 = !DILocation(line: 532, column: 2, scope: !4457)
!4495 = !DILocation(line: 533, column: 2, scope: !4457)
!4496 = !DILocation(line: 536, column: 41, scope: !4457)
!4497 = !DILocation(line: 536, column: 2, scope: !4457)
!4498 = !DILocation(line: 537, column: 2, scope: !4457)
!4499 = !DILocation(line: 540, column: 2, scope: !4457)
!4500 = !DILocation(line: 541, column: 2, scope: !4457)
!4501 = !DILocation(line: 542, column: 2, scope: !4457)
!4502 = !DILocation(line: 544, column: 2, scope: !4457)
!4503 = !DILocation(line: 545, column: 1, scope: !4457)
!4504 = !DILocation(line: 527, column: 17, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4491, file: !3769, line: 526, column: 39)
!4506 = !DILocation(line: 527, column: 22, scope: !4505)
!4507 = !DILocation(line: 526, column: 35, scope: !4491)
!4508 = distinct !{!4508, !4492, !4509}
!4509 = !DILocation(line: 528, column: 2, scope: !4471)
!4510 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2681, file: !2681, line: 1338, type: !4511, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !4519)
!4511 = !DISubroutineType(types: !4512)
!4512 = !{!103, !3499, !102, !144, !4513, !121}
!4513 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3465, line: 99, baseType: !4514)
!4514 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3465, line: 40, baseType: !4515)
!4515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2681, baseType: !4516)
!4516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4517)
!4517 = !{!4518}
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4516, file: !2681, baseType: !102, size: 32)
!4519 = !{!4520, !4521, !4522, !4523, !4524, !4525, !4529, !4530, !4531, !4533, !4538, !4583, !4586, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4598, !4599, !4600, !4604, !4607, !4609, !4612, !4613, !4614, !4619, !4625, !4628, !4632, !4638, !4642, !4645, !4647, !4650}
!4520 = !DILocalVariable(name: "out", arg: 1, scope: !4510, file: !2681, line: 1338, type: !3499)
!4521 = !DILocalVariable(name: "ctx", arg: 2, scope: !4510, file: !2681, line: 1338, type: !102)
!4522 = !DILocalVariable(name: "fp", arg: 3, scope: !4510, file: !2681, line: 1338, type: !144)
!4523 = !DILocalVariable(name: "ap", arg: 4, scope: !4510, file: !2681, line: 1339, type: !4513)
!4524 = !DILocalVariable(name: "flags", arg: 5, scope: !4510, file: !2681, line: 1339, type: !121)
!4525 = !DILocalVariable(name: "buf", scope: !4510, file: !2681, line: 1341, type: !4526)
!4526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !4527)
!4527 = !{!4528}
!4528 = !DISubrange(count: 22)
!4529 = !DILocalVariable(name: "count", scope: !4510, file: !2681, line: 1342, type: !344)
!4530 = !DILocalVariable(name: "sint", scope: !4510, file: !2681, line: 1343, type: !2700)
!4531 = !DILocalVariable(name: "tagged_ap", scope: !4510, file: !2681, line: 1345, type: !4532)
!4532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!4533 = !DILocalVariable(name: "rc", scope: !4534, file: !2681, line: 1377, type: !103)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !2681, line: 1377, column: 4)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !2681, line: 1376, column: 19)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1376, column: 7)
!4537 = distinct !DILexicalBlock(scope: !4510, file: !2681, line: 1375, column: 19)
!4538 = !DILocalVariable(name: "state", scope: !4537, file: !2681, line: 1395, type: !4539)
!4539 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4510, file: !2681, line: 1392, size: 192, elements: !4540)
!4540 = !{!4541, !4551}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4539, file: !2681, line: 1393, baseType: !4542, size: 64)
!4542 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2681, line: 166, size: 64, elements: !4543)
!4543 = !{!4544, !4545, !4546, !4548, !4550}
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4542, file: !2681, line: 168, baseType: !2700, size: 64)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4542, file: !2681, line: 171, baseType: !2703, size: 64)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4542, file: !2681, line: 174, baseType: !4547, size: 64)
!4547 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4542, file: !2681, line: 177, baseType: !4549, size: 64)
!4549 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4542, file: !2681, line: 180, baseType: !102, size: 32)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4539, file: !2681, line: 1394, baseType: !4552, size: 96, offset: 64)
!4552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2681, line: 189, size: 96, elements: !4553)
!4553 = !{!4554, !4555, !4556, !4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4578}
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4552, file: !2681, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4552, file: !2681, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4552, file: !2681, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4552, file: !2681, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4552, file: !2681, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4552, file: !2681, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4552, file: !2681, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4552, file: !2681, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4552, file: !2681, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4552, file: !2681, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4552, file: !2681, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4552, file: !2681, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4552, file: !2681, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4552, file: !2681, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4552, file: !2681, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4552, file: !2681, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4552, file: !2681, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4552, file: !2681, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4552, file: !2681, line: 260, baseType: !155, size: 8, offset: 24)
!4573 = !DIDerivedType(tag: DW_TAG_member, scope: !4552, file: !2681, line: 262, baseType: !4574, size: 32, offset: 32)
!4574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4552, file: !2681, line: 262, size: 32, elements: !4575)
!4575 = !{!4576, !4577}
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4574, file: !2681, line: 267, baseType: !103, size: 32)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4574, file: !2681, line: 289, baseType: !103, size: 32)
!4578 = !DIDerivedType(tag: DW_TAG_member, scope: !4552, file: !2681, line: 292, baseType: !4579, size: 32, offset: 64)
!4579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4552, file: !2681, line: 292, size: 32, elements: !4580)
!4580 = !{!4581, !4582}
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4579, file: !2681, line: 297, baseType: !103, size: 32)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4579, file: !2681, line: 306, baseType: !103, size: 32)
!4583 = !DILocalVariable(name: "conv", scope: !4537, file: !2681, line: 1400, type: !4584)
!4584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4585)
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4552, size: 32)
!4586 = !DILocalVariable(name: "value", scope: !4537, file: !2681, line: 1401, type: !4587)
!4587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4588)
!4588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4542, size: 32)
!4589 = !DILocalVariable(name: "sp", scope: !4537, file: !2681, line: 1402, type: !144)
!4590 = !DILocalVariable(name: "width", scope: !4537, file: !2681, line: 1403, type: !103)
!4591 = !DILocalVariable(name: "precision", scope: !4537, file: !2681, line: 1404, type: !103)
!4592 = !DILocalVariable(name: "bps", scope: !4537, file: !2681, line: 1405, type: !144)
!4593 = !DILocalVariable(name: "bpe", scope: !4537, file: !2681, line: 1406, type: !144)
!4594 = !DILocalVariable(name: "sign", scope: !4537, file: !2681, line: 1407, type: !146)
!4595 = !DILocalVariable(name: "arg", scope: !4596, file: !2681, line: 1432, type: !103)
!4596 = distinct !DILexicalBlock(scope: !4597, file: !2681, line: 1431, column: 24)
!4597 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1431, column: 7)
!4598 = !DILocalVariable(name: "specifier_cat", scope: !4537, file: !2681, line: 1468, type: !2680)
!4599 = !DILocalVariable(name: "length_mod", scope: !4537, file: !2681, line: 1470, type: !2688)
!4600 = !DILocalVariable(name: "rc", scope: !4601, file: !2681, line: 1575, type: !103)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !2681, line: 1575, column: 4)
!4602 = distinct !DILexicalBlock(scope: !4603, file: !2681, line: 1574, column: 43)
!4603 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1574, column: 7)
!4604 = !DILocalVariable(name: "rc", scope: !4605, file: !2681, line: 1584, type: !103)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !2681, line: 1584, column: 4)
!4606 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1582, column: 28)
!4607 = !DILocalVariable(name: "len", scope: !4608, file: !2681, line: 1589, type: !344)
!4608 = distinct !DILexicalBlock(scope: !4606, file: !2681, line: 1586, column: 13)
!4609 = !DILocalVariable(name: "len", scope: !4610, file: !2681, line: 1641, type: !344)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !2681, line: 1640, column: 24)
!4611 = distinct !DILexicalBlock(scope: !4606, file: !2681, line: 1640, column: 8)
!4612 = !DILocalVariable(name: "nj_len", scope: !4537, file: !2681, line: 1722, type: !344)
!4613 = !DILocalVariable(name: "pad_len", scope: !4537, file: !2681, line: 1723, type: !103)
!4614 = !DILocalVariable(name: "pad", scope: !4615, file: !2681, line: 1751, type: !146)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !2681, line: 1750, column: 26)
!4616 = distinct !DILexicalBlock(scope: !4617, file: !2681, line: 1750, column: 8)
!4617 = distinct !DILexicalBlock(scope: !4618, file: !2681, line: 1747, column: 18)
!4618 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1747, column: 7)
!4619 = !DILocalVariable(name: "rc", scope: !4620, file: !2681, line: 1758, type: !103)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !2681, line: 1758, column: 7)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !2681, line: 1757, column: 21)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !2681, line: 1757, column: 10)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !2681, line: 1756, column: 26)
!4624 = distinct !DILexicalBlock(scope: !4615, file: !2681, line: 1756, column: 9)
!4625 = !DILocalVariable(name: "rc", scope: !4626, file: !2681, line: 1765, type: !103)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !2681, line: 1765, column: 6)
!4627 = distinct !DILexicalBlock(scope: !4615, file: !2681, line: 1764, column: 25)
!4628 = !DILocalVariable(name: "rc", scope: !4629, file: !2681, line: 1774, type: !103)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !2681, line: 1774, column: 4)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !2681, line: 1773, column: 18)
!4631 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1773, column: 7)
!4632 = !DILocalVariable(name: "rc", scope: !4633, file: !2681, line: 1819, type: !103)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !2681, line: 1819, column: 5)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !2681, line: 1818, column: 44)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !2681, line: 1818, column: 8)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !2681, line: 1817, column: 10)
!4637 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1777, column: 7)
!4638 = !DILocalVariable(name: "rc", scope: !4639, file: !2681, line: 1823, type: !103)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !2681, line: 1823, column: 5)
!4640 = distinct !DILexicalBlock(scope: !4641, file: !2681, line: 1822, column: 26)
!4641 = distinct !DILexicalBlock(scope: !4636, file: !2681, line: 1822, column: 8)
!4642 = !DILocalVariable(name: "rc", scope: !4643, file: !2681, line: 1828, type: !103)
!4643 = distinct !DILexicalBlock(scope: !4644, file: !2681, line: 1828, column: 5)
!4644 = distinct !DILexicalBlock(scope: !4636, file: !2681, line: 1827, column: 26)
!4645 = !DILocalVariable(name: "rc", scope: !4646, file: !2681, line: 1831, type: !103)
!4646 = distinct !DILexicalBlock(scope: !4636, file: !2681, line: 1831, column: 4)
!4647 = !DILocalVariable(name: "rc", scope: !4648, file: !2681, line: 1836, type: !103)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !2681, line: 1836, column: 4)
!4649 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1835, column: 21)
!4650 = !DILabel(scope: !4606, name: "prec_int_pad0", file: !2681, line: 1634)
!4651 = !DILocation(line: 0, scope: !4510)
!4652 = !DILocation(line: 1341, column: 2, scope: !4510)
!4653 = !DILocation(line: 1341, column: 7, scope: !4510)
!4654 = !DILocation(line: 1375, column: 2, scope: !4510)
!4655 = !DILocation(line: 1342, column: 9, scope: !4510)
!4656 = !DILocation(line: 1375, column: 9, scope: !4510)
!4657 = !DILocation(line: 1377, column: 4, scope: !4534)
!4658 = !DILocation(line: 0, scope: !4534)
!4659 = !DILocation(line: 1377, column: 4, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4534, file: !2681, line: 1377, column: 4)
!4661 = distinct !{!4661, !4654, !4662}
!4662 = !DILocation(line: 1839, column: 2, scope: !4510)
!4663 = !DILocation(line: 1392, column: 3, scope: !4537)
!4664 = !DILocation(line: 1395, column: 5, scope: !4537)
!4665 = !DILocation(line: 0, scope: !4537)
!4666 = !DILocation(line: 1409, column: 8, scope: !4537)
!4667 = !DILocation(line: 1414, column: 13, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1414, column: 7)
!4669 = !DILocation(line: 1414, column: 7, scope: !4537)
!4670 = !DILocation(line: 1415, column: 12, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4668, file: !2681, line: 1414, column: 25)
!4672 = !DILocation(line: 1417, column: 14, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4671, file: !2681, line: 1417, column: 8)
!4674 = !DILocation(line: 1417, column: 8, scope: !4671)
!4675 = !DILocation(line: 1418, column: 21, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4673, file: !2681, line: 1417, column: 19)
!4677 = !DILocation(line: 1419, column: 13, scope: !4676)
!4678 = !DILocation(line: 1420, column: 4, scope: !4676)
!4679 = !DILocation(line: 1421, column: 20, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4668, file: !2681, line: 1421, column: 14)
!4681 = !DILocation(line: 1421, column: 14, scope: !4668)
!4682 = !DILocation(line: 1431, column: 13, scope: !4597)
!4683 = !DILocation(line: 1431, column: 7, scope: !4537)
!4684 = !DILocation(line: 1432, column: 14, scope: !4596)
!4685 = !DILocation(line: 0, scope: !4596)
!4686 = !DILocation(line: 1434, column: 12, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4596, file: !2681, line: 1434, column: 8)
!4688 = !DILocation(line: 1434, column: 8, scope: !4596)
!4689 = !DILocation(line: 1435, column: 24, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4687, file: !2681, line: 1434, column: 17)
!4691 = !DILocation(line: 1436, column: 4, scope: !4690)
!4692 = !DILocation(line: 1439, column: 20, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4597, file: !2681, line: 1439, column: 14)
!4694 = !DILocation(line: 1439, column: 14, scope: !4597)
!4695 = !DILocation(line: 1469, column: 37, scope: !4537)
!4696 = !DILocation(line: 1448, column: 20, scope: !4537)
!4697 = !DILocation(line: 1449, column: 22, scope: !4537)
!4698 = !DILocation(line: 1471, column: 34, scope: !4537)
!4699 = !DILocation(line: 1478, column: 7, scope: !4537)
!4700 = !DILocation(line: 1479, column: 4, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !2681, line: 1478, column: 40)
!4702 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1478, column: 7)
!4703 = !DILocation(line: 1484, column: 19, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4701, file: !2681, line: 1479, column: 24)
!4705 = !DILocation(line: 1484, column: 17, scope: !4704)
!4706 = !DILocation(line: 1485, column: 5, scope: !4704)
!4707 = !DILocation(line: 1492, column: 20, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2681, line: 1491, column: 12)
!4709 = distinct !DILexicalBlock(scope: !4704, file: !2681, line: 1487, column: 9)
!4710 = !DILocation(line: 1492, column: 18, scope: !4708)
!4711 = !DILocation(line: 1494, column: 5, scope: !4704)
!4712 = !DILocation(line: 1497, column: 23, scope: !4704)
!4713 = !DILocation(line: 1496, column: 17, scope: !4704)
!4714 = !DILocation(line: 1498, column: 5, scope: !4704)
!4715 = !DILocation(line: 1501, column: 23, scope: !4704)
!4716 = !DILocation(line: 1500, column: 17, scope: !4704)
!4717 = !DILocation(line: 1502, column: 5, scope: !4704)
!4718 = !DILocation(line: 1513, column: 23, scope: !4704)
!4719 = !DILocation(line: 1513, column: 6, scope: !4704)
!4720 = !DILocation(line: 1512, column: 17, scope: !4704)
!4721 = !DILocation(line: 1514, column: 5, scope: !4704)
!4722 = !DILocation(line: 0, scope: !4704)
!4723 = !DILocation(line: 1516, column: 8, scope: !4701)
!4724 = !DILocation(line: 1517, column: 19, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !2681, line: 1516, column: 33)
!4726 = distinct !DILexicalBlock(scope: !4701, file: !2681, line: 1516, column: 8)
!4727 = !DILocation(line: 1517, column: 17, scope: !4725)
!4728 = !DILocation(line: 1518, column: 4, scope: !4725)
!4729 = !DILocation(line: 1519, column: 19, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !2681, line: 1518, column: 39)
!4731 = distinct !DILexicalBlock(scope: !4726, file: !2681, line: 1518, column: 15)
!4732 = !DILocation(line: 1519, column: 17, scope: !4730)
!4733 = !DILocation(line: 1520, column: 4, scope: !4730)
!4734 = !DILocation(line: 1522, column: 4, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !2681, line: 1521, column: 47)
!4736 = distinct !DILexicalBlock(scope: !4702, file: !2681, line: 1521, column: 14)
!4737 = !DILocation(line: 1527, column: 19, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4735, file: !2681, line: 1522, column: 24)
!4739 = !DILocation(line: 1527, column: 17, scope: !4738)
!4740 = !DILocation(line: 1528, column: 5, scope: !4738)
!4741 = !DILocation(line: 0, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4738, file: !2681, line: 1530, column: 9)
!4743 = !DILocation(line: 1540, column: 23, scope: !4738)
!4744 = !DILocation(line: 1539, column: 17, scope: !4738)
!4745 = !DILocation(line: 1542, column: 5, scope: !4738)
!4746 = !DILocation(line: 1545, column: 23, scope: !4738)
!4747 = !DILocation(line: 1544, column: 17, scope: !4738)
!4748 = !DILocation(line: 1547, column: 5, scope: !4738)
!4749 = !DILocation(line: 1551, column: 23, scope: !4738)
!4750 = !DILocation(line: 1551, column: 6, scope: !4738)
!4751 = !DILocation(line: 1550, column: 17, scope: !4738)
!4752 = !DILocation(line: 1552, column: 5, scope: !4738)
!4753 = !DILocation(line: 0, scope: !4738)
!4754 = !DILocation(line: 1554, column: 8, scope: !4735)
!4755 = !DILocation(line: 1555, column: 19, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4757, file: !2681, line: 1554, column: 33)
!4757 = distinct !DILexicalBlock(scope: !4735, file: !2681, line: 1554, column: 8)
!4758 = !DILocation(line: 1555, column: 17, scope: !4756)
!4759 = !DILocation(line: 1556, column: 4, scope: !4756)
!4760 = !DILocation(line: 1557, column: 19, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !2681, line: 1556, column: 39)
!4762 = distinct !DILexicalBlock(scope: !4757, file: !2681, line: 1556, column: 15)
!4763 = !DILocation(line: 1557, column: 17, scope: !4761)
!4764 = !DILocation(line: 1558, column: 4, scope: !4761)
!4765 = !DILocation(line: 0, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !2681, line: 1560, column: 8)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !2681, line: 1559, column: 45)
!4768 = distinct !DILexicalBlock(scope: !4736, file: !2681, line: 1559, column: 14)
!4769 = !DILocation(line: 1566, column: 17, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4771, file: !2681, line: 1565, column: 46)
!4771 = distinct !DILexicalBlock(scope: !4768, file: !2681, line: 1565, column: 14)
!4772 = !DILocation(line: 1566, column: 15, scope: !4770)
!4773 = !DILocation(line: 1567, column: 3, scope: !4770)
!4774 = !DILocation(line: 1574, column: 21, scope: !4603)
!4775 = !DILocation(line: 1575, column: 4, scope: !4601)
!4776 = !DILocation(line: 0, scope: !4601)
!4777 = !DILocation(line: 1575, column: 4, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4601, file: !2681, line: 1575, column: 4)
!4779 = !DILocation(line: 1582, column: 17, scope: !4537)
!4780 = !DILocation(line: 1582, column: 3, scope: !4537)
!4781 = !DILocation(line: 1584, column: 4, scope: !4605)
!4782 = !DILocation(line: 0, scope: !4605)
!4783 = !DILocation(line: 1584, column: 4, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4605, file: !2681, line: 1584, column: 4)
!4785 = !DILocation(line: 1587, column: 31, scope: !4608)
!4786 = !DILocation(line: 1591, column: 18, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4608, file: !2681, line: 1591, column: 8)
!4788 = !DILocation(line: 1591, column: 8, scope: !4608)
!4789 = !DILocation(line: 1592, column: 11, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4787, file: !2681, line: 1591, column: 24)
!4791 = !DILocation(line: 0, scope: !4608)
!4792 = !DILocation(line: 1593, column: 4, scope: !4790)
!4793 = !DILocation(line: 1594, column: 11, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4787, file: !2681, line: 1593, column: 11)
!4795 = !DILocation(line: 1604, column: 51, scope: !4606)
!4796 = !DILocation(line: 1604, column: 13, scope: !4606)
!4797 = !DILocation(line: 1604, column: 11, scope: !4606)
!4798 = !DILocation(line: 1606, column: 4, scope: !4606)
!4799 = !DILocation(line: 1609, column: 14, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4606, file: !2681, line: 1609, column: 8)
!4801 = !DILocation(line: 1609, column: 8, scope: !4606)
!4802 = !DILocation(line: 1619, column: 18, scope: !4606)
!4803 = !DILocation(line: 1620, column: 13, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4606, file: !2681, line: 1620, column: 8)
!4805 = !DILocation(line: 1620, column: 8, scope: !4606)
!4806 = !DILocation(line: 1622, column: 36, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4804, file: !2681, line: 1620, column: 18)
!4808 = !DILocation(line: 1622, column: 17, scope: !4807)
!4809 = !DILocation(line: 1623, column: 4, scope: !4807)
!4810 = !DILocation(line: 1632, column: 29, scope: !4606)
!4811 = !DILocation(line: 1632, column: 10, scope: !4606)
!4812 = !DILocation(line: 1632, column: 4, scope: !4606)
!4813 = !DILocation(line: 1407, column: 8, scope: !4537)
!4814 = !DILocation(line: 0, scope: !4606)
!4815 = !DILocation(line: 1634, column: 3, scope: !4606)
!4816 = !DILocation(line: 1640, column: 18, scope: !4611)
!4817 = !DILocation(line: 1640, column: 8, scope: !4606)
!4818 = !DILocation(line: 1729, column: 13, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1729, column: 7)
!4820 = !DILocation(line: 1641, column: 22, scope: !4610)
!4821 = !DILocation(line: 0, scope: !4610)
!4822 = !DILocation(line: 1646, column: 21, scope: !4610)
!4823 = !DILocation(line: 1649, column: 13, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4610, file: !2681, line: 1649, column: 9)
!4825 = !DILocation(line: 1649, column: 9, scope: !4610)
!4826 = !DILocation(line: 1650, column: 35, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4824, file: !2681, line: 1649, column: 34)
!4828 = !DILocation(line: 1650, column: 23, scope: !4827)
!4829 = !DILocation(line: 1651, column: 5, scope: !4827)
!4830 = !DILocation(line: 1660, column: 15, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4606, file: !2681, line: 1660, column: 8)
!4832 = !DILocation(line: 1660, column: 19, scope: !4831)
!4833 = !DILocation(line: 1660, column: 8, scope: !4606)
!4834 = !DILocation(line: 1661, column: 23, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4831, file: !2681, line: 1660, column: 28)
!4836 = !DILocation(line: 1661, column: 11, scope: !4835)
!4837 = !DILocation(line: 1665, column: 22, scope: !4835)
!4838 = !DILocation(line: 1666, column: 21, scope: !4835)
!4839 = !DILocation(line: 1668, column: 5, scope: !4835)
!4840 = !DILocation(line: 1677, column: 30, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4842, file: !2681, line: 1676, column: 49)
!4842 = distinct !DILexicalBlock(scope: !4606, file: !2681, line: 1676, column: 8)
!4843 = !DILocation(line: 1677, column: 5, scope: !4841)
!4844 = !DILocation(line: 1680, column: 4, scope: !4606)
!4845 = !DILocation(line: 0, scope: !4787)
!4846 = !DILocation(line: 1597, column: 14, scope: !4608)
!4847 = !DILocation(line: 1699, column: 11, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1699, column: 7)
!4849 = !DILocation(line: 1699, column: 7, scope: !4537)
!4850 = !DILocation(line: 1725, column: 7, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1725, column: 7)
!4852 = !DILocation(line: 1725, column: 12, scope: !4851)
!4853 = !DILocation(line: 1747, column: 13, scope: !4618)
!4854 = !DILocation(line: 1747, column: 7, scope: !4537)
!4855 = !DILocation(line: 1722, column: 24, scope: !4537)
!4856 = !DILocation(line: 1725, column: 7, scope: !4537)
!4857 = !DILocation(line: 1729, column: 7, scope: !4537)
!4858 = !DILocation(line: 1736, column: 13, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4537, file: !2681, line: 1736, column: 7)
!4860 = !DILocation(line: 1735, column: 19, scope: !4537)
!4861 = !DILocation(line: 1736, column: 7, scope: !4537)
!4862 = !DILocation(line: 1748, column: 10, scope: !4617)
!4863 = !DILocation(line: 1750, column: 15, scope: !4616)
!4864 = !DILocation(line: 1750, column: 8, scope: !4617)
!4865 = !DILocation(line: 0, scope: !4615)
!4866 = !DILocation(line: 1756, column: 15, scope: !4624)
!4867 = !DILocation(line: 1756, column: 9, scope: !4615)
!4868 = !DILocation(line: 1758, column: 7, scope: !4620)
!4869 = !DILocation(line: 0, scope: !4620)
!4870 = !DILocation(line: 1758, column: 7, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4620, file: !2681, line: 1758, column: 7)
!4872 = !DILocation(line: 1764, column: 5, scope: !4615)
!4873 = !DILocation(line: 0, scope: !4617)
!4874 = !DILocation(line: 1764, column: 20, scope: !4615)
!4875 = !DILocation(line: 1764, column: 17, scope: !4615)
!4876 = !DILocation(line: 1765, column: 6, scope: !4626)
!4877 = !DILocation(line: 0, scope: !4626)
!4878 = !DILocation(line: 1765, column: 6, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4626, file: !2681, line: 1765, column: 6)
!4880 = distinct !{!4880, !4872, !4881}
!4881 = !DILocation(line: 1766, column: 5, scope: !4615)
!4882 = !DILocation(line: 1773, column: 12, scope: !4631)
!4883 = !DILocation(line: 1773, column: 7, scope: !4537)
!4884 = !DILocation(line: 1773, column: 7, scope: !4631)
!4885 = !DILocation(line: 1774, column: 4, scope: !4629)
!4886 = !DILocation(line: 0, scope: !4629)
!4887 = !DILocation(line: 1774, column: 4, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4629, file: !2681, line: 1774, column: 4)
!4889 = !DILocation(line: 1818, column: 8, scope: !4635)
!4890 = !DILocation(line: 1818, column: 27, scope: !4635)
!4891 = !DILocation(line: 1818, column: 25, scope: !4635)
!4892 = !DILocation(line: 1818, column: 8, scope: !4636)
!4893 = !DILocation(line: 1819, column: 5, scope: !4633)
!4894 = !DILocation(line: 0, scope: !4633)
!4895 = !DILocation(line: 1819, column: 5, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4633, file: !2681, line: 1819, column: 5)
!4897 = !DILocation(line: 1822, column: 14, scope: !4641)
!4898 = !DILocation(line: 1822, column: 8, scope: !4636)
!4899 = !DILocation(line: 1823, column: 5, scope: !4639)
!4900 = !DILocation(line: 0, scope: !4639)
!4901 = !DILocation(line: 1823, column: 5, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4639, file: !2681, line: 1823, column: 5)
!4903 = !DILocation(line: 1826, column: 20, scope: !4636)
!4904 = !DILocation(line: 1827, column: 4, scope: !4636)
!4905 = !DILocation(line: 0, scope: !4636)
!4906 = !DILocation(line: 1827, column: 21, scope: !4636)
!4907 = !DILocation(line: 1827, column: 18, scope: !4636)
!4908 = !DILocation(line: 1828, column: 5, scope: !4643)
!4909 = !DILocation(line: 0, scope: !4643)
!4910 = !DILocation(line: 1828, column: 5, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4643, file: !2681, line: 1828, column: 5)
!4912 = distinct !{!4912, !4904, !4913}
!4913 = !DILocation(line: 1829, column: 4, scope: !4636)
!4914 = !DILocation(line: 1831, column: 4, scope: !4646)
!4915 = !DILocation(line: 0, scope: !4646)
!4916 = !DILocation(line: 1831, column: 4, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4646, file: !2681, line: 1831, column: 4)
!4918 = !DILocation(line: 1835, column: 16, scope: !4537)
!4919 = !DILocation(line: 1835, column: 3, scope: !4537)
!4920 = !DILocation(line: 1836, column: 4, scope: !4648)
!4921 = !DILocation(line: 0, scope: !4648)
!4922 = !DILocation(line: 1836, column: 4, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4648, file: !2681, line: 1836, column: 4)
!4924 = !DILocation(line: 1837, column: 4, scope: !4649)
!4925 = distinct !{!4925, !4919, !4926}
!4926 = !DILocation(line: 1838, column: 3, scope: !4537)
!4927 = !DILocation(line: 1844, column: 1, scope: !4510)
!4928 = distinct !DISubprogram(name: "extract_conversion", scope: !2681, file: !2681, line: 642, type: !4929, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !4931)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{!144, !4585, !144}
!4931 = !{!4932, !4933}
!4932 = !DILocalVariable(name: "conv", arg: 1, scope: !4928, file: !2681, line: 642, type: !4585)
!4933 = !DILocalVariable(name: "sp", arg: 2, scope: !4928, file: !2681, line: 643, type: !144)
!4934 = !DILocation(line: 0, scope: !4928)
!4935 = !DILocation(line: 645, column: 10, scope: !4928)
!4936 = !DILocation(line: 653, column: 2, scope: !4928)
!4937 = !DILocation(line: 654, column: 6, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4928, file: !2681, line: 654, column: 6)
!4939 = !DILocation(line: 654, column: 10, scope: !4938)
!4940 = !DILocation(line: 654, column: 6, scope: !4928)
!4941 = !DILocation(line: 655, column: 24, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4938, file: !2681, line: 654, column: 18)
!4943 = !DILocation(line: 655, column: 19, scope: !4942)
!4944 = !DILocation(line: 656, column: 3, scope: !4942)
!4945 = !DILocation(line: 659, column: 7, scope: !4928)
!4946 = !DILocation(line: 660, column: 7, scope: !4928)
!4947 = !DILocation(line: 661, column: 7, scope: !4928)
!4948 = !DILocation(line: 662, column: 7, scope: !4928)
!4949 = !DILocation(line: 663, column: 7, scope: !4928)
!4950 = !DILocation(line: 665, column: 2, scope: !4928)
!4951 = !DILocation(line: 666, column: 1, scope: !4928)
!4952 = distinct !DISubprogram(name: "outs", scope: !2681, file: !2681, line: 1319, type: !4953, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !4955)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{!103, !3499, !102, !144, !144}
!4955 = !{!4956, !4957, !4958, !4959, !4960, !4961}
!4956 = !DILocalVariable(name: "out", arg: 1, scope: !4952, file: !2681, line: 1319, type: !3499)
!4957 = !DILocalVariable(name: "ctx", arg: 2, scope: !4952, file: !2681, line: 1320, type: !102)
!4958 = !DILocalVariable(name: "sp", arg: 3, scope: !4952, file: !2681, line: 1321, type: !144)
!4959 = !DILocalVariable(name: "ep", arg: 4, scope: !4952, file: !2681, line: 1322, type: !144)
!4960 = !DILocalVariable(name: "count", scope: !4952, file: !2681, line: 1324, type: !344)
!4961 = !DILocalVariable(name: "rc", scope: !4962, file: !2681, line: 1327, type: !103)
!4962 = distinct !DILexicalBlock(scope: !4952, file: !2681, line: 1326, column: 45)
!4963 = !DILocation(line: 0, scope: !4952)
!4964 = !DILocation(line: 1326, column: 2, scope: !4952)
!4965 = !DILocation(line: 1324, column: 9, scope: !4952)
!4966 = !DILocation(line: 1326, column: 13, scope: !4952)
!4967 = !DILocation(line: 1326, column: 19, scope: !4952)
!4968 = !DILocation(line: 1327, column: 21, scope: !4962)
!4969 = !DILocation(line: 1326, column: 36, scope: !4952)
!4970 = !DILocation(line: 1326, column: 39, scope: !4952)
!4971 = !DILocation(line: 1327, column: 24, scope: !4962)
!4972 = !DILocation(line: 1327, column: 16, scope: !4962)
!4973 = !DILocation(line: 1327, column: 12, scope: !4962)
!4974 = !DILocation(line: 0, scope: !4962)
!4975 = !DILocation(line: 1329, column: 10, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4962, file: !2681, line: 1329, column: 7)
!4977 = !DILocation(line: 1329, column: 7, scope: !4962)
!4978 = distinct !{!4978, !4964, !4979}
!4979 = !DILocation(line: 1333, column: 2, scope: !4952)
!4980 = !DILocation(line: 1336, column: 1, scope: !4952)
!4981 = distinct !DISubprogram(name: "encode_uint", scope: !2681, file: !2681, line: 788, type: !4982, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !4984)
!4982 = !DISubroutineType(types: !4983)
!4983 = !{!1087, !2703, !4585, !1087, !144}
!4984 = !{!4985, !4986, !4987, !4988, !4989, !4990, !4992, !4993}
!4985 = !DILocalVariable(name: "value", arg: 1, scope: !4981, file: !2681, line: 788, type: !2703)
!4986 = !DILocalVariable(name: "conv", arg: 2, scope: !4981, file: !2681, line: 789, type: !4585)
!4987 = !DILocalVariable(name: "bps", arg: 3, scope: !4981, file: !2681, line: 790, type: !1087)
!4988 = !DILocalVariable(name: "bpe", arg: 4, scope: !4981, file: !2681, line: 791, type: !144)
!4989 = !DILocalVariable(name: "upcase", scope: !4981, file: !2681, line: 793, type: !157)
!4990 = !DILocalVariable(name: "radix", scope: !4981, file: !2681, line: 794, type: !4991)
!4991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4992 = !DILocalVariable(name: "bp", scope: !4981, file: !2681, line: 795, type: !1087)
!4993 = !DILocalVariable(name: "lsv", scope: !4994, file: !2681, line: 798, type: !32)
!4994 = distinct !DILexicalBlock(scope: !4981, file: !2681, line: 797, column: 5)
!4995 = !DILocation(line: 0, scope: !4981)
!4996 = !DILocation(line: 793, column: 35, scope: !4981)
!4997 = !DILocation(line: 793, column: 24, scope: !4981)
!4998 = !DILocation(line: 793, column: 16, scope: !4981)
!4999 = !DILocation(line: 794, column: 29, scope: !4981)
!5000 = !DILocation(line: 795, column: 24, scope: !4981)
!5001 = !DILocation(line: 795, column: 17, scope: !4981)
!5002 = !DILocation(line: 797, column: 2, scope: !4981)
!5003 = !DILocation(line: 802, column: 9, scope: !4994)
!5004 = !DILocation(line: 798, column: 22, scope: !4994)
!5005 = !DILocation(line: 0, scope: !4994)
!5006 = !DILocation(line: 800, column: 16, scope: !4994)
!5007 = !DILocation(line: 800, column: 11, scope: !4994)
!5008 = !DILocation(line: 800, column: 4, scope: !4994)
!5009 = !DILocation(line: 800, column: 9, scope: !4994)
!5010 = !DILocation(line: 803, column: 18, scope: !4981)
!5011 = !DILocation(line: 803, column: 24, scope: !4981)
!5012 = !DILocation(line: 803, column: 2, scope: !4994)
!5013 = distinct !{!5013, !5002, !5014}
!5014 = !DILocation(line: 803, column: 37, scope: !4981)
!5015 = !DILocation(line: 808, column: 12, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !4981, file: !2681, line: 808, column: 6)
!5017 = !DILocation(line: 808, column: 6, scope: !4981)
!5018 = !DILocation(line: 809, column: 7, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5016, file: !2681, line: 808, column: 23)
!5020 = !DILocation(line: 813, column: 3, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5022, file: !2681, line: 811, column: 27)
!5022 = distinct !DILexicalBlock(scope: !5023, file: !2681, line: 811, column: 14)
!5023 = distinct !DILexicalBlock(scope: !5019, file: !2681, line: 809, column: 7)
!5024 = !DILocation(line: 0, scope: !5023)
!5025 = !DILocation(line: 818, column: 2, scope: !4981)
!5026 = distinct !DISubprogram(name: "store_count", scope: !2681, file: !2681, line: 1280, type: !5027, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !5031)
!5027 = !DISubroutineType(types: !5028)
!5028 = !{null, !5029, !102, !103}
!5029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5030, size: 32)
!5030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4552)
!5031 = !{!5032, !5033, !5034}
!5032 = !DILocalVariable(name: "conv", arg: 1, scope: !5026, file: !2681, line: 1280, type: !5029)
!5033 = !DILocalVariable(name: "dp", arg: 2, scope: !5026, file: !2681, line: 1281, type: !102)
!5034 = !DILocalVariable(name: "count", arg: 3, scope: !5026, file: !2681, line: 1282, type: !103)
!5035 = !DILocation(line: 0, scope: !5026)
!5036 = !DILocation(line: 1284, column: 38, scope: !5026)
!5037 = !DILocation(line: 1284, column: 2, scope: !5026)
!5038 = !DILocation(line: 1286, column: 4, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5026, file: !2681, line: 1284, column: 50)
!5040 = !DILocation(line: 1286, column: 14, scope: !5039)
!5041 = !DILocation(line: 1287, column: 3, scope: !5039)
!5042 = !DILocation(line: 1289, column: 24, scope: !5039)
!5043 = !DILocation(line: 1289, column: 22, scope: !5039)
!5044 = !DILocation(line: 1290, column: 3, scope: !5039)
!5045 = !DILocation(line: 1292, column: 18, scope: !5039)
!5046 = !DILocation(line: 1292, column: 4, scope: !5039)
!5047 = !DILocation(line: 1292, column: 16, scope: !5039)
!5048 = !DILocation(line: 1293, column: 3, scope: !5039)
!5049 = !DILocation(line: 1295, column: 4, scope: !5039)
!5050 = !DILocation(line: 1295, column: 15, scope: !5039)
!5051 = !DILocation(line: 1296, column: 3, scope: !5039)
!5052 = !DILocation(line: 1298, column: 22, scope: !5039)
!5053 = !DILocation(line: 1298, column: 4, scope: !5039)
!5054 = !DILocation(line: 1298, column: 20, scope: !5039)
!5055 = !DILocation(line: 1299, column: 3, scope: !5039)
!5056 = !DILocation(line: 1301, column: 21, scope: !5039)
!5057 = !DILocation(line: 1301, column: 4, scope: !5039)
!5058 = !DILocation(line: 1301, column: 19, scope: !5039)
!5059 = !DILocation(line: 1302, column: 3, scope: !5039)
!5060 = !DILocation(line: 1304, column: 4, scope: !5039)
!5061 = !DILocation(line: 1304, column: 17, scope: !5039)
!5062 = !DILocation(line: 1305, column: 3, scope: !5039)
!5063 = !DILocation(line: 1307, column: 4, scope: !5039)
!5064 = !DILocation(line: 1307, column: 20, scope: !5039)
!5065 = !DILocation(line: 1308, column: 3, scope: !5039)
!5066 = !DILocation(line: 1316, column: 1, scope: !5026)
!5067 = distinct !DISubprogram(name: "isupper", scope: !5068, file: !5068, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !5069)
!5068 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5069 = !{!5070}
!5070 = !DILocalVariable(name: "a", arg: 1, scope: !5067, file: !5068, line: 16, type: !103)
!5071 = !DILocation(line: 0, scope: !5067)
!5072 = !DILocation(line: 18, column: 29, scope: !5067)
!5073 = !DILocation(line: 18, column: 45, scope: !5067)
!5074 = !DILocation(line: 18, column: 2, scope: !5067)
!5075 = distinct !DISubprogram(name: "conversion_radix", scope: !2681, file: !2681, line: 761, type: !5076, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !5078)
!5076 = !DISubroutineType(types: !5077)
!5077 = !{!344, !146}
!5078 = !{!5079}
!5079 = !DILocalVariable(name: "specifier", arg: 1, scope: !5075, file: !2681, line: 761, type: !146)
!5080 = !DILocation(line: 0, scope: !5075)
!5081 = !DILocation(line: 763, column: 2, scope: !5075)
!5082 = !DILocation(line: 770, column: 3, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5075, file: !2681, line: 763, column: 21)
!5084 = !DILocation(line: 774, column: 3, scope: !5083)
!5085 = !DILocation(line: 0, scope: !5083)
!5086 = !DILocation(line: 776, column: 1, scope: !5075)
!5087 = distinct !DISubprogram(name: "extract_flags", scope: !2681, file: !2681, line: 339, type: !4929, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !5088)
!5088 = !{!5089, !5090, !5091}
!5089 = !DILocalVariable(name: "conv", arg: 1, scope: !5087, file: !2681, line: 339, type: !4585)
!5090 = !DILocalVariable(name: "sp", arg: 2, scope: !5087, file: !2681, line: 340, type: !144)
!5091 = !DILocalVariable(name: "loop", scope: !5087, file: !2681, line: 342, type: !157)
!5092 = !DILocation(line: 0, scope: !5087)
!5093 = !DILocation(line: 344, column: 2, scope: !5087)
!5094 = !DILocation(line: 345, column: 11, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5087, file: !2681, line: 344, column: 5)
!5096 = !DILocation(line: 345, column: 3, scope: !5095)
!5097 = !DILocation(line: 351, column: 4, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5095, file: !2681, line: 345, column: 16)
!5099 = !DILocation(line: 354, column: 4, scope: !5098)
!5100 = !DILocation(line: 357, column: 4, scope: !5098)
!5101 = !DILocation(line: 360, column: 4, scope: !5098)
!5102 = !DILocation(line: 0, scope: !5098)
!5103 = !DILocation(line: 370, column: 12, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5087, file: !2681, line: 370, column: 6)
!5105 = !DILocation(line: 370, column: 22, scope: !5104)
!5106 = !DILocation(line: 371, column: 19, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5104, file: !2681, line: 370, column: 42)
!5108 = !DILocation(line: 372, column: 2, scope: !5107)
!5109 = !DILocation(line: 376, column: 2, scope: !5087)
!5110 = distinct !DISubprogram(name: "extract_width", scope: !2681, file: !2681, line: 388, type: !4929, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !5111)
!5111 = !{!5112, !5113, !5114, !5115}
!5112 = !DILocalVariable(name: "conv", arg: 1, scope: !5110, file: !2681, line: 388, type: !4585)
!5113 = !DILocalVariable(name: "sp", arg: 2, scope: !5110, file: !2681, line: 389, type: !144)
!5114 = !DILocalVariable(name: "wp", scope: !5110, file: !2681, line: 398, type: !144)
!5115 = !DILocalVariable(name: "width", scope: !5110, file: !2681, line: 399, type: !344)
!5116 = !DILocation(line: 0, scope: !5110)
!5117 = !DILocation(line: 391, column: 8, scope: !5110)
!5118 = !DILocation(line: 391, column: 22, scope: !5110)
!5119 = !DILocation(line: 393, column: 6, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5110, file: !2681, line: 393, column: 6)
!5121 = !DILocation(line: 393, column: 10, scope: !5120)
!5122 = !DILocation(line: 393, column: 6, scope: !5110)
!5123 = !DILocation(line: 394, column: 20, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5120, file: !2681, line: 393, column: 18)
!5125 = !DILocation(line: 395, column: 10, scope: !5124)
!5126 = !DILocation(line: 395, column: 3, scope: !5124)
!5127 = !DILocation(line: 399, column: 17, scope: !5110)
!5128 = !DILocation(line: 401, column: 6, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5110, file: !2681, line: 401, column: 6)
!5130 = !DILocation(line: 401, column: 9, scope: !5129)
!5131 = !DILocation(line: 401, column: 6, scope: !5110)
!5132 = !DILocation(line: 402, column: 23, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5129, file: !2681, line: 401, column: 16)
!5134 = !DILocation(line: 403, column: 9, scope: !5133)
!5135 = !DILocation(line: 403, column: 21, scope: !5133)
!5136 = !DILocation(line: 405, column: 11, scope: !5133)
!5137 = !DILocation(line: 404, column: 21, scope: !5133)
!5138 = !DILocation(line: 406, column: 2, scope: !5133)
!5139 = !DILocation(line: 409, column: 1, scope: !5110)
!5140 = distinct !DISubprogram(name: "extract_prec", scope: !2681, file: !2681, line: 420, type: !4929, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !5141)
!5141 = !{!5142, !5143, !5144}
!5142 = !DILocalVariable(name: "conv", arg: 1, scope: !5140, file: !2681, line: 420, type: !4585)
!5143 = !DILocalVariable(name: "sp", arg: 2, scope: !5140, file: !2681, line: 421, type: !144)
!5144 = !DILocalVariable(name: "prec", scope: !5140, file: !2681, line: 435, type: !344)
!5145 = !DILocation(line: 0, scope: !5140)
!5146 = !DILocation(line: 423, column: 24, scope: !5140)
!5147 = !DILocation(line: 423, column: 28, scope: !5140)
!5148 = !DILocation(line: 423, column: 8, scope: !5140)
!5149 = !DILocation(line: 423, column: 21, scope: !5140)
!5150 = !DILocation(line: 425, column: 6, scope: !5140)
!5151 = !DILocation(line: 428, column: 2, scope: !5140)
!5152 = !DILocation(line: 430, column: 6, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5140, file: !2681, line: 430, column: 6)
!5154 = !DILocation(line: 430, column: 10, scope: !5153)
!5155 = !DILocation(line: 430, column: 6, scope: !5140)
!5156 = !DILocation(line: 431, column: 19, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5153, file: !2681, line: 430, column: 18)
!5158 = !DILocation(line: 432, column: 10, scope: !5157)
!5159 = !DILocation(line: 432, column: 3, scope: !5157)
!5160 = !DILocation(line: 435, column: 16, scope: !5140)
!5161 = !DILocation(line: 437, column: 8, scope: !5140)
!5162 = !DILocation(line: 437, column: 19, scope: !5140)
!5163 = !DILocation(line: 439, column: 10, scope: !5140)
!5164 = !DILocation(line: 438, column: 20, scope: !5140)
!5165 = !DILocation(line: 441, column: 9, scope: !5140)
!5166 = !DILocation(line: 442, column: 1, scope: !5140)
!5167 = distinct !DISubprogram(name: "extract_length", scope: !2681, file: !2681, line: 453, type: !4929, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !5168)
!5168 = !{!5169, !5170}
!5169 = !DILocalVariable(name: "conv", arg: 1, scope: !5167, file: !2681, line: 453, type: !4585)
!5170 = !DILocalVariable(name: "sp", arg: 2, scope: !5167, file: !2681, line: 454, type: !144)
!5171 = !DILocation(line: 0, scope: !5167)
!5172 = !DILocation(line: 456, column: 10, scope: !5167)
!5173 = !DILocation(line: 456, column: 2, scope: !5167)
!5174 = !DILocation(line: 458, column: 8, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5176, file: !2681, line: 458, column: 7)
!5176 = distinct !DILexicalBlock(scope: !5167, file: !2681, line: 456, column: 15)
!5177 = !DILocation(line: 458, column: 7, scope: !5175)
!5178 = !DILocation(line: 458, column: 13, scope: !5175)
!5179 = !DILocation(line: 0, scope: !5175)
!5180 = !DILocation(line: 458, column: 7, scope: !5176)
!5181 = !DILocation(line: 459, column: 21, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5175, file: !2681, line: 458, column: 21)
!5183 = !DILocation(line: 460, column: 4, scope: !5182)
!5184 = !DILocation(line: 461, column: 3, scope: !5182)
!5185 = !DILocation(line: 462, column: 21, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5175, file: !2681, line: 461, column: 10)
!5187 = !DILocation(line: 466, column: 8, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5176, file: !2681, line: 466, column: 7)
!5189 = !DILocation(line: 466, column: 7, scope: !5188)
!5190 = !DILocation(line: 466, column: 13, scope: !5188)
!5191 = !DILocation(line: 0, scope: !5188)
!5192 = !DILocation(line: 466, column: 7, scope: !5176)
!5193 = !DILocation(line: 467, column: 21, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5188, file: !2681, line: 466, column: 21)
!5195 = !DILocation(line: 468, column: 4, scope: !5194)
!5196 = !DILocation(line: 469, column: 3, scope: !5194)
!5197 = !DILocation(line: 470, column: 21, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5188, file: !2681, line: 469, column: 10)
!5199 = !DILocation(line: 474, column: 9, scope: !5176)
!5200 = !DILocation(line: 474, column: 20, scope: !5176)
!5201 = !DILocation(line: 475, column: 3, scope: !5176)
!5202 = !DILocation(line: 476, column: 3, scope: !5176)
!5203 = !DILocation(line: 478, column: 9, scope: !5176)
!5204 = !DILocation(line: 478, column: 20, scope: !5176)
!5205 = !DILocation(line: 479, column: 3, scope: !5176)
!5206 = !DILocation(line: 480, column: 3, scope: !5176)
!5207 = !DILocation(line: 482, column: 9, scope: !5176)
!5208 = !DILocation(line: 482, column: 20, scope: !5176)
!5209 = !DILocation(line: 483, column: 3, scope: !5176)
!5210 = !DILocation(line: 484, column: 3, scope: !5176)
!5211 = !DILocation(line: 486, column: 9, scope: !5176)
!5212 = !DILocation(line: 486, column: 20, scope: !5176)
!5213 = !DILocation(line: 487, column: 3, scope: !5176)
!5214 = !DILocation(line: 492, column: 21, scope: !5176)
!5215 = !DILocation(line: 493, column: 3, scope: !5176)
!5216 = !DILocation(line: 495, column: 9, scope: !5176)
!5217 = !DILocation(line: 495, column: 20, scope: !5176)
!5218 = !DILocation(line: 496, column: 3, scope: !5176)
!5219 = !DILocation(line: 498, column: 2, scope: !5167)
!5220 = distinct !DISubprogram(name: "extract_specifier", scope: !2681, file: !2681, line: 513, type: !4929, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !5221)
!5221 = !{!5222, !5223, !5224, !5225}
!5222 = !DILocalVariable(name: "conv", arg: 1, scope: !5220, file: !2681, line: 513, type: !4585)
!5223 = !DILocalVariable(name: "sp", arg: 2, scope: !5220, file: !2681, line: 514, type: !144)
!5224 = !DILocalVariable(name: "unsupported", scope: !5220, file: !2681, line: 516, type: !157)
!5225 = !DILabel(scope: !5226, name: "int_conv", file: !2681, line: 526)
!5226 = distinct !DILexicalBlock(scope: !5220, file: !2681, line: 520, column: 27)
!5227 = !DILocation(line: 0, scope: !5220)
!5228 = !DILocation(line: 518, column: 20, scope: !5220)
!5229 = !DILocation(line: 518, column: 8, scope: !5220)
!5230 = !DILocation(line: 518, column: 18, scope: !5220)
!5231 = !DILocation(line: 520, column: 2, scope: !5220)
!5232 = !DILocation(line: 525, column: 3, scope: !5226)
!5233 = !DILocation(line: 0, scope: !5226)
!5234 = !DILocation(line: 526, column: 1, scope: !5226)
!5235 = !DILocation(line: 528, column: 24, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5226, file: !2681, line: 528, column: 7)
!5237 = !DILocation(line: 528, column: 7, scope: !5226)
!5238 = !DILocation(line: 535, column: 23, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5226, file: !2681, line: 535, column: 7)
!5240 = !DILocation(line: 535, column: 7, scope: !5226)
!5241 = !DILocation(line: 536, column: 36, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5239, file: !2681, line: 535, column: 31)
!5243 = !DILocation(line: 537, column: 3, scope: !5242)
!5244 = !DILocation(line: 570, column: 9, scope: !5226)
!5245 = !DILocation(line: 570, column: 23, scope: !5226)
!5246 = !DILocation(line: 575, column: 4, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5248, file: !2681, line: 573, column: 48)
!5248 = distinct !DILexicalBlock(scope: !5226, file: !2681, line: 573, column: 7)
!5249 = !DILocation(line: 603, column: 9, scope: !5226)
!5250 = !DILocation(line: 603, column: 23, scope: !5226)
!5251 = !DILocation(line: 605, column: 24, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5226, file: !2681, line: 605, column: 7)
!5253 = !DILocation(line: 605, column: 7, scope: !5226)
!5254 = !DILocation(line: 612, column: 9, scope: !5226)
!5255 = !DILocation(line: 612, column: 23, scope: !5226)
!5256 = !DILocation(line: 619, column: 24, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5226, file: !2681, line: 619, column: 7)
!5258 = !DILocation(line: 619, column: 7, scope: !5226)
!5259 = !DILocation(line: 625, column: 9, scope: !5226)
!5260 = !DILocation(line: 625, column: 17, scope: !5226)
!5261 = !DILocation(line: 626, column: 3, scope: !5226)
!5262 = !DILocation(line: 629, column: 20, scope: !5220)
!5263 = !DILocation(line: 629, column: 8, scope: !5220)
!5264 = !DILocation(line: 518, column: 23, scope: !5220)
!5265 = !DILocation(line: 631, column: 2, scope: !5220)
!5266 = distinct !DISubprogram(name: "extract_decimal", scope: !2681, file: !2681, line: 318, type: !5267, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !5270)
!5267 = !DISubroutineType(types: !5268)
!5268 = !{!344, !5269}
!5269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!5270 = !{!5271, !5272, !5273}
!5271 = !DILocalVariable(name: "str", arg: 1, scope: !5266, file: !2681, line: 318, type: !5269)
!5272 = !DILocalVariable(name: "sp", scope: !5266, file: !2681, line: 320, type: !144)
!5273 = !DILocalVariable(name: "val", scope: !5266, file: !2681, line: 321, type: !344)
!5274 = !DILocation(line: 0, scope: !5266)
!5275 = !DILocation(line: 320, column: 19, scope: !5266)
!5276 = !DILocation(line: 323, column: 37, scope: !5266)
!5277 = !DILocation(line: 323, column: 17, scope: !5266)
!5278 = !DILocation(line: 323, column: 9, scope: !5266)
!5279 = !DILocation(line: 323, column: 2, scope: !5266)
!5280 = !DILocation(line: 324, column: 13, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5266, file: !2681, line: 323, column: 43)
!5282 = !DILocation(line: 324, column: 24, scope: !5281)
!5283 = !DILocation(line: 324, column: 19, scope: !5281)
!5284 = !DILocation(line: 324, column: 27, scope: !5281)
!5285 = distinct !{!5285, !5279, !5286}
!5286 = !DILocation(line: 325, column: 2, scope: !5266)
!5287 = !DILocation(line: 326, column: 7, scope: !5266)
!5288 = !DILocation(line: 327, column: 2, scope: !5266)
!5289 = distinct !DISubprogram(name: "isdigit", scope: !5068, file: !5068, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !5290)
!5290 = !{!5291}
!5291 = !DILocalVariable(name: "a", arg: 1, scope: !5289, file: !5068, line: 43, type: !103)
!5292 = !DILocation(line: 0, scope: !5289)
!5293 = !DILocation(line: 45, column: 29, scope: !5289)
!5294 = !DILocation(line: 45, column: 45, scope: !5289)
!5295 = !DILocation(line: 45, column: 2, scope: !5289)
!5296 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5297, file: !5297, line: 9, type: !3318, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !461)
!5297 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!5298 = !DILocation(line: 11, column: 1, scope: !5296)
!5299 = !{i64 2147562250, i64 2147562293, i64 2147562333}
!5300 = !DILocation(line: 12, column: 1, scope: !5296)
!5301 = !{i64 2147566477, i64 2147566520, i64 2147566560}
!5302 = !DILocation(line: 13, column: 1, scope: !5296)
!5303 = !{i64 2147566686, i64 2147566729, i64 2147566769}
!5304 = !DILocation(line: 14, column: 1, scope: !5296)
!5305 = !{i64 2147566903, i64 2147566946, i64 2147566986}
!5306 = !DILocation(line: 15, column: 1, scope: !5296)
!5307 = !{i64 2147567072, i64 2147567115, i64 2147567155}
!5308 = !DILocation(line: 16, column: 1, scope: !5296)
!5309 = !{i64 2147567235, i64 2147567278, i64 2147567318}
!5310 = !DILocation(line: 17, column: 1, scope: !5296)
!5311 = !{i64 2147567419, i64 2147567462, i64 2147567502}
!5312 = !DILocation(line: 18, column: 1, scope: !5296)
!5313 = !{i64 2147567598, i64 2147567641, i64 2147567681}
!5314 = !DILocation(line: 19, column: 1, scope: !5296)
!5315 = !{i64 2147567840, i64 2147567883, i64 2147567923}
!5316 = !DILocation(line: 20, column: 1, scope: !5296)
!5317 = !{i64 2147568075, i64 2147568118, i64 2147568158}
!5318 = !DILocation(line: 21, column: 1, scope: !5296)
!5319 = !{i64 2147568261, i64 2147568304, i64 2147568344}
!5320 = !DILocation(line: 22, column: 1, scope: !5296)
!5321 = !{i64 2147568477, i64 2147568520, i64 2147568560}
!5322 = !DILocation(line: 23, column: 1, scope: !5296)
!5323 = !{i64 2147568680, i64 2147568723, i64 2147568763}
!5324 = !DILocation(line: 24, column: 1, scope: !5296)
!5325 = !{i64 2147568883, i64 2147568926, i64 2147568966}
!5326 = !DILocation(line: 25, column: 1, scope: !5296)
!5327 = !{i64 2147569058, i64 2147569101, i64 2147569141}
!5328 = !DILocation(line: 26, column: 1, scope: !5296)
!5329 = !{i64 2147569266, i64 2147569309, i64 2147569349}
!5330 = !DILocation(line: 27, column: 1, scope: !5296)
!5331 = !{i64 2147569470, i64 2147569513, i64 2147569553}
!5332 = !DILocation(line: 28, column: 1, scope: !5296)
!5333 = !{i64 2147569663, i64 2147569706, i64 2147569746}
!5334 = !DILocation(line: 29, column: 1, scope: !5296)
!5335 = !{i64 2147569865, i64 2147569908, i64 2147569948}
!5336 = !DILocation(line: 30, column: 1, scope: !5296)
!5337 = !{i64 2147570092, i64 2147570135, i64 2147570175}
!5338 = !DILocation(line: 31, column: 1, scope: !5296)
!5339 = !{i64 2147570294, i64 2147570337, i64 2147570377}
!5340 = !DILocation(line: 32, column: 1, scope: !5296)
!5341 = !{i64 2147570509, i64 2147570552, i64 2147570592}
!5342 = !DILocation(line: 33, column: 1, scope: !5296)
!5343 = !{i64 2147570681, i64 2147570724, i64 2147570764}
!5344 = !DILocation(line: 34, column: 1, scope: !5296)
!5345 = !{i64 2147570883, i64 2147570926, i64 2147570966}
!5346 = !DILocation(line: 35, column: 1, scope: !5296)
!5347 = !{i64 2147571109, i64 2147571152, i64 2147571192}
!5348 = !DILocation(line: 36, column: 1, scope: !5296)
!5349 = !{i64 2147571308, i64 2147571351, i64 2147571391}
!5350 = !DILocation(line: 37, column: 1, scope: !5296)
!5351 = !{i64 2147571483, i64 2147571526, i64 2147571566}
!5352 = !DILocation(line: 38, column: 1, scope: !5296)
!5353 = !{i64 2147571736, i64 2147571779, i64 2147571819}
!5354 = !DILocation(line: 39, column: 1, scope: !5296)
!5355 = !{i64 2147571977, i64 2147572020, i64 2147572060}
!5356 = !DILocation(line: 40, column: 1, scope: !5296)
!5357 = !{i64 2147572212, i64 2147572255, i64 2147572295}
!5358 = !DILocation(line: 41, column: 1, scope: !5296)
!5359 = !{i64 2147572444, i64 2147572487, i64 2147572527}
!5360 = !DILocation(line: 42, column: 1, scope: !5296)
!5361 = !{i64 2147572670, i64 2147572713, i64 2147572753}
!5362 = !DILocation(line: 43, column: 1, scope: !5296)
!5363 = !{i64 2147572896, i64 2147572939, i64 2147572979}
!5364 = !DILocation(line: 44, column: 1, scope: !5296)
!5365 = !{i64 2147573122, i64 2147573165, i64 2147573205}
!5366 = !DILocation(line: 45, column: 1, scope: !5296)
!5367 = !{i64 2147573357, i64 2147573400, i64 2147573440}
!5368 = !DILocation(line: 46, column: 1, scope: !5296)
!5369 = !{i64 2147573601, i64 2147573644, i64 2147573684}
!5370 = !DILocation(line: 47, column: 1, scope: !5296)
!5371 = !{i64 2147573848, i64 2147573891, i64 2147573931}
!5372 = !DILocation(line: 48, column: 1, scope: !5296)
!5373 = !{i64 2147574080, i64 2147574123, i64 2147574163}
!5374 = !DILocation(line: 49, column: 1, scope: !5296)
!5375 = !{i64 2147574324, i64 2147574367, i64 2147574407}
!5376 = !DILocation(line: 50, column: 1, scope: !5296)
!5377 = !{i64 2147574562, i64 2147574605, i64 2147574645}
!5378 = !DILocation(line: 51, column: 1, scope: !5296)
!5379 = !{i64 2147574836, i64 2147574879, i64 2147574919}
!5380 = !DILocation(line: 52, column: 1, scope: !5296)
!5381 = !{i64 2147575074, i64 2147575117, i64 2147575157}
!5382 = !DILocation(line: 53, column: 1, scope: !5296)
!5383 = !{i64 2147579388, i64 2147579431, i64 2147579471}
!5384 = !DILocation(line: 54, column: 1, scope: !5296)
!5385 = !{i64 2147579632, i64 2147579675, i64 2147579715}
!5386 = !DILocation(line: 55, column: 1, scope: !5296)
!5387 = !{i64 2147579867, i64 2147579910, i64 2147579950}
!5388 = !DILocation(line: 56, column: 1, scope: !5296)
!5389 = !{i64 2147580117, i64 2147580160, i64 2147580200}
!5390 = !DILocation(line: 57, column: 1, scope: !5296)
!5391 = !{i64 2147580364, i64 2147580407, i64 2147580447}
!5392 = !DILocation(line: 58, column: 1, scope: !5296)
!5393 = !{i64 2147580599, i64 2147580642, i64 2147580682}
!5394 = !DILocation(line: 59, column: 1, scope: !5296)
!5395 = !{i64 2147580834, i64 2147580877, i64 2147580917}
!5396 = !DILocation(line: 60, column: 1, scope: !5296)
!5397 = !{i64 2147581069, i64 2147581112, i64 2147581152}
!5398 = !DILocation(line: 61, column: 1, scope: !5296)
!5399 = !{i64 2147581304, i64 2147581347, i64 2147581387}
!5400 = !DILocation(line: 62, column: 1, scope: !5296)
!5401 = !{i64 2147581548, i64 2147581591, i64 2147581631}
!5402 = !DILocation(line: 63, column: 1, scope: !5296)
!5403 = !{i64 2147581786, i64 2147581829, i64 2147581869}
!5404 = !DILocation(line: 64, column: 1, scope: !5296)
!5405 = !{i64 2147582027, i64 2147582070, i64 2147582110}
!5406 = !DILocation(line: 65, column: 1, scope: !5296)
!5407 = !{i64 2147582307, i64 2147582350, i64 2147582390}
!5408 = !DILocation(line: 66, column: 1, scope: !5296)
!5409 = !{i64 2147582566, i64 2147582609, i64 2147582649}
!5410 = !DILocation(line: 67, column: 1, scope: !5296)
!5411 = !{i64 2147582804, i64 2147582847, i64 2147582887}
!5412 = !DILocation(line: 68, column: 1, scope: !5296)
!5413 = !{i64 2147583033, i64 2147583076, i64 2147583116}
!5414 = !DILocation(line: 69, column: 1, scope: !5296)
!5415 = !{i64 2147583241, i64 2147583284, i64 2147583324}
!5416 = !DILocation(line: 70, column: 1, scope: !5296)
!5417 = !{i64 2147583452, i64 2147583495, i64 2147583535}
!5418 = !DILocation(line: 71, column: 1, scope: !5296)
!5419 = !{i64 2147583687, i64 2147583730, i64 2147583770}
!5420 = !DILocation(line: 72, column: 1, scope: !5296)
!5421 = !{i64 2147583916, i64 2147583959, i64 2147583999}
!5422 = !DILocation(line: 73, column: 1, scope: !5296)
!5423 = !{i64 2147584154, i64 2147584197, i64 2147584237}
!5424 = !DILocation(line: 74, column: 1, scope: !5296)
!5425 = !{i64 2147584386, i64 2147584429, i64 2147584469}
!5426 = !DILocation(line: 75, column: 1, scope: !5296)
!5427 = !{i64 2147584612, i64 2147584655, i64 2147584695}
!5428 = !DILocation(line: 76, column: 1, scope: !5296)
!5429 = !{i64 2147584829, i64 2147584872, i64 2147584912}
!5430 = !DILocation(line: 77, column: 1, scope: !5296)
!5431 = !{i64 2147585061, i64 2147585104, i64 2147585144}
!5432 = !DILocation(line: 78, column: 1, scope: !5296)
!5433 = !{i64 2147585287, i64 2147585330, i64 2147585370}
!5434 = !DILocation(line: 79, column: 1, scope: !5296)
!5435 = !{i64 2147585501, i64 2147585544, i64 2147585584}
!5436 = !DILocation(line: 80, column: 1, scope: !5296)
!5437 = !{i64 2147585721, i64 2147585764, i64 2147585804}
!5438 = !DILocation(line: 81, column: 1, scope: !5296)
!5439 = !{i64 2147585953, i64 2147585996, i64 2147586036}
!5440 = !DILocation(line: 82, column: 1, scope: !5296)
!5441 = !{i64 2147586161, i64 2147586204, i64 2147586244}
!5442 = !DILocation(line: 83, column: 1, scope: !5296)
!5443 = !{i64 2147586366, i64 2147586409, i64 2147586449}
!5444 = !DILocation(line: 84, column: 1, scope: !5296)
!5445 = !{i64 2147586583, i64 2147586626, i64 2147586666}
!5446 = !DILocation(line: 85, column: 1, scope: !5296)
!5447 = !{i64 2147586797, i64 2147586840, i64 2147586880}
!5448 = !DILocation(line: 86, column: 1, scope: !5296)
!5449 = !{i64 2147587023, i64 2147587066, i64 2147587106}
!5450 = !DILocation(line: 87, column: 1, scope: !5296)
!5451 = !{i64 2147587243, i64 2147587286, i64 2147587326}
!5452 = !DILocation(line: 88, column: 1, scope: !5296)
!5453 = !{i64 2147591509, i64 2147591552, i64 2147591592}
!5454 = !DILocation(line: 89, column: 1, scope: !5296)
!5455 = !{i64 2147591741, i64 2147591784, i64 2147591824}
!5456 = !DILocation(line: 90, column: 1, scope: !5296)
!5457 = !{i64 2147591976, i64 2147592019, i64 2147592059}
!5458 = !DILocation(line: 91, column: 1, scope: !5296)
!5459 = !{i64 2147592226, i64 2147592269, i64 2147592309}
!5460 = !DILocation(line: 92, column: 1, scope: !5296)
!5461 = !{i64 2147592476, i64 2147592519, i64 2147592559}
!5462 = !DILocation(line: 93, column: 1, scope: !5296)
!5463 = !{i64 2147592714, i64 2147592757, i64 2147592797}
!5464 = !DILocation(line: 94, column: 1, scope: !5296)
!5465 = !{i64 2147592925, i64 2147592968, i64 2147593008}
!5466 = !DILocation(line: 95, column: 1, scope: !5296)
!5467 = !{i64 2147593142, i64 2147593185, i64 2147593225}
!5468 = !DILocation(line: 96, column: 1, scope: !5296)
!5469 = !{i64 2147593338, i64 2147593381, i64 2147593421}
!5470 = !DILocation(line: 97, column: 1, scope: !5296)
!5471 = !{i64 2147593540, i64 2147593583, i64 2147593623}
!5472 = !DILocation(line: 98, column: 1, scope: !5296)
!5473 = !{i64 2147593733, i64 2147593776, i64 2147593816}
!5474 = !DILocation(line: 99, column: 1, scope: !5296)
!5475 = !{i64 2147593941, i64 2147593984, i64 2147594024}
!5476 = !DILocation(line: 100, column: 1, scope: !5296)
!5477 = !{i64 2147594137, i64 2147594180, i64 2147594220}
!5478 = !DILocation(line: 101, column: 1, scope: !5296)
!5479 = !{i64 2147594369, i64 2147594412, i64 2147594452}
!5480 = !DILocation(line: 102, column: 1, scope: !5296)
!5481 = !{i64 2147594580, i64 2147594623, i64 2147594663}
!5482 = !DILocation(line: 103, column: 1, scope: !5296)
!5483 = !{i64 2147594779, i64 2147594822, i64 2147594862}
!5484 = !DILocation(line: 104, column: 1, scope: !5296)
!5485 = !{i64 2147594954, i64 2147594997, i64 2147595037}
!5486 = !DILocation(line: 105, column: 1, scope: !5296)
!5487 = !{i64 2147595138, i64 2147595181, i64 2147595221}
!5488 = !DILocation(line: 106, column: 1, scope: !5296)
!5489 = !{i64 2147595340, i64 2147595383, i64 2147595423}
!5490 = !DILocation(line: 107, column: 1, scope: !5296)
!5491 = !{i64 2147595539, i64 2147595582, i64 2147595622}
!5492 = !DILocation(line: 108, column: 1, scope: !5296)
!5493 = !{i64 2147595705, i64 2147595748, i64 2147595788}
!5494 = !DILocation(line: 109, column: 1, scope: !5296)
!5495 = !{i64 2147595889, i64 2147595932, i64 2147595972}
!5496 = !DILocation(line: 110, column: 1, scope: !5296)
!5497 = !{i64 2147596079, i64 2147596122, i64 2147596162}
!5498 = !DILocation(line: 111, column: 1, scope: !5296)
!5499 = !{i64 2147596263, i64 2147596306, i64 2147596346}
!5500 = !DILocation(line: 112, column: 1, scope: !5296)
!5501 = !{i64 2147596477, i64 2147596520, i64 2147596560}
!5502 = !DILocation(line: 113, column: 1, scope: !5296)
!5503 = !{i64 2147596688, i64 2147596731, i64 2147596771}
!5504 = !DILocation(line: 114, column: 1, scope: !5296)
!5505 = !{i64 2147596911, i64 2147596954, i64 2147596994}
!5506 = !DILocation(line: 115, column: 1, scope: !5296)
!5507 = !{i64 2147597095, i64 2147597138, i64 2147597178}
!5508 = !DILocation(line: 116, column: 1, scope: !5296)
!5509 = !{i64 2147597309, i64 2147597352, i64 2147597392}
!5510 = !DILocation(line: 117, column: 1, scope: !5296)
!5511 = !{i64 2147597475, i64 2147597518, i64 2147597558}
!5512 = !DILocation(line: 118, column: 1, scope: !5296)
!5513 = !{i64 2147597656, i64 2147597699, i64 2147597739}
!5514 = !DILocation(line: 119, column: 1, scope: !5296)
!5515 = !{i64 2147597849, i64 2147597892, i64 2147597932}
!5516 = !DILocation(line: 120, column: 1, scope: !5296)
!5517 = !{i64 2147598075, i64 2147598118, i64 2147598158}
!5518 = !DILocation(line: 121, column: 1, scope: !5296)
!5519 = !{i64 2147598289, i64 2147598332, i64 2147598372}
!5520 = !DILocation(line: 122, column: 1, scope: !5296)
!5521 = !{i64 2147598515, i64 2147598558, i64 2147598598}
!5522 = !DILocation(line: 123, column: 1, scope: !5296)
!5523 = !{i64 2147598732, i64 2147598775, i64 2147598815}
!5524 = !DILocation(line: 124, column: 1, scope: !5296)
!5525 = !{i64 2147599009, i64 2147599052, i64 2147599092}
!5526 = !DILocation(line: 125, column: 1, scope: !5296)
!5527 = !{i64 2147599235, i64 2147599278, i64 2147599318}
!5528 = !DILocation(line: 126, column: 1, scope: !5296)
!5529 = !{i64 2147599443, i64 2147599486, i64 2147599526}
!5530 = !DILocation(line: 127, column: 1, scope: !5296)
!5531 = !{i64 2147599639, i64 2147599682, i64 2147599722}
!5532 = !DILocation(line: 128, column: 1, scope: !5296)
!5533 = !{i64 2147599904, i64 2147599947, i64 2147599987}
!5534 = !DILocation(line: 129, column: 1, scope: !5296)
!5535 = !{i64 2147600118, i64 2147600161, i64 2147600201}
!5536 = !DILocation(line: 130, column: 1, scope: !5296)
!5537 = !{i64 2147600293, i64 2147600336, i64 2147600376}
!5538 = !DILocation(line: 131, column: 1, scope: !5296)
!5539 = !{i64 2147604608, i64 2147604651, i64 2147604691}
!5540 = !DILocation(line: 132, column: 1, scope: !5296)
!5541 = !{i64 2147604807, i64 2147604850, i64 2147604890}
!5542 = !DILocation(line: 133, column: 1, scope: !5296)
!5543 = !{i64 2147605049, i64 2147605092, i64 2147605132}
!5544 = !DILocation(line: 134, column: 1, scope: !5296)
!5545 = !{i64 2147605212, i64 2147605255, i64 2147605295}
!5546 = !DILocation(line: 135, column: 1, scope: !5296)
!5547 = !{i64 2147605399, i64 2147605442, i64 2147605482}
!5548 = !DILocation(line: 136, column: 1, scope: !5296)
!5549 = !{i64 2147605592, i64 2147605635, i64 2147605675}
!5550 = !DILocation(line: 137, column: 1, scope: !5296)
!5551 = !{i64 2147605775, i64 2147605818, i64 2147605858}
!5552 = !DILocation(line: 138, column: 1, scope: !5296)
!5553 = !{i64 2147605989, i64 2147606032, i64 2147606072}
!5554 = !DILocation(line: 139, column: 1, scope: !5296)
!5555 = !{i64 2147606200, i64 2147606243, i64 2147606283}
!5556 = !DILocation(line: 140, column: 1, scope: !5296)
!5557 = !{i64 2147606420, i64 2147606463, i64 2147606503}
!5558 = !DILocation(line: 141, column: 1, scope: !5296)
!5559 = !{i64 2147606627, i64 2147606670, i64 2147606710}
!5560 = !DILocation(line: 142, column: 1, scope: !5296)
!5561 = !{i64 2147606900, i64 2147606943, i64 2147606983}
!5562 = !DILocation(line: 143, column: 1, scope: !5296)
!5563 = !{i64 2147607148, i64 2147607191, i64 2147607231}
!5564 = !DILocation(line: 144, column: 1, scope: !5296)
!5565 = !{i64 2147607347, i64 2147607390, i64 2147607430}
!5566 = !DILocation(line: 145, column: 1, scope: !5296)
!5567 = !{i64 2147607582, i64 2147607625, i64 2147607665}
!5568 = !DILocation(line: 146, column: 1, scope: !5296)
!5569 = !{i64 2147607832, i64 2147607875, i64 2147607915}
!5570 = !DILocation(line: 147, column: 1, scope: !5296)
!5571 = !{i64 2147608034, i64 2147608077, i64 2147608117}
!5572 = !DILocation(line: 148, column: 1, scope: !5296)
!5573 = !{i64 2147608257, i64 2147608300, i64 2147608340}
!5574 = !DILocation(line: 149, column: 1, scope: !5296)
!5575 = !{i64 2147608471, i64 2147608514, i64 2147608554}
!5576 = !DILocation(line: 150, column: 1, scope: !5296)
!5577 = !{i64 2147608715, i64 2147608758, i64 2147608798}
!5578 = !DILocation(line: 151, column: 1, scope: !5296)
!5579 = !{i64 2147608944, i64 2147608987, i64 2147609027}
!5580 = !DILocation(line: 152, column: 1, scope: !5296)
!5581 = !{i64 2147609173, i64 2147609216, i64 2147609256}
!5582 = !DILocation(line: 153, column: 1, scope: !5296)
!5583 = !{i64 2147609381, i64 2147609424, i64 2147609464}
!5584 = !DILocation(line: 154, column: 1, scope: !5296)
!5585 = !{i64 2147609619, i64 2147609662, i64 2147609702}
!5586 = !DILocation(line: 155, column: 1, scope: !5296)
!5587 = !{i64 2147609845, i64 2147609888, i64 2147609928}
!5588 = !DILocation(line: 156, column: 1, scope: !5296)
!5589 = !{i64 2147610104, i64 2147610147, i64 2147610187}
!5590 = !DILocation(line: 157, column: 1, scope: !5296)
!5591 = !{i64 2147610324, i64 2147610367, i64 2147610407}
!5592 = !DILocation(line: 158, column: 1, scope: !5296)
!5593 = !{i64 2147610556, i64 2147610599, i64 2147610639}
!5594 = !DILocation(line: 159, column: 1, scope: !5296)
!5595 = !{i64 2147610797, i64 2147610840, i64 2147610880}
!5596 = !DILocation(line: 160, column: 1, scope: !5296)
!5597 = !{i64 2147611038, i64 2147611081, i64 2147611121}
!5598 = !DILocation(line: 161, column: 1, scope: !5296)
!5599 = !{i64 2147611261, i64 2147611304, i64 2147611344}
!5600 = !DILocation(line: 162, column: 1, scope: !5296)
!5601 = !{i64 2147611478, i64 2147611521, i64 2147611561}
!5602 = !DILocation(line: 163, column: 1, scope: !5296)
!5603 = !{i64 2147611719, i64 2147611762, i64 2147611802}
!5604 = !DILocation(line: 164, column: 1, scope: !5296)
!5605 = !{i64 2147611906, i64 2147611949, i64 2147611989}
!5606 = !DILocation(line: 165, column: 1, scope: !5296)
!5607 = !{i64 2147612093, i64 2147612136, i64 2147612176}
!5608 = !DILocation(line: 166, column: 1, scope: !5296)
!5609 = !{i64 2147612256, i64 2147612299, i64 2147612339}
!5610 = !DILocation(line: 167, column: 1, scope: !5296)
!5611 = !{i64 2147612515, i64 2147612558, i64 2147612598}
!5612 = !DILocation(line: 168, column: 1, scope: !5296)
!5613 = !{i64 2147612738, i64 2147612781, i64 2147612821}
!5614 = !DILocation(line: 169, column: 1, scope: !5296)
!5615 = !{i64 2147612967, i64 2147613010, i64 2147613050}
!5616 = !DILocation(line: 170, column: 1, scope: !5296)
!5617 = !{i64 2147617224, i64 2147617267, i64 2147617307}
!5618 = !DILocation(line: 171, column: 1, scope: !5296)
!5619 = !{i64 2147617436, i64 2147617479, i64 2147617519}
!5620 = !DILocation(line: 172, column: 1, scope: !5296)
!5621 = !{i64 2147617657, i64 2147617700, i64 2147617740}
!5622 = !DILocation(line: 173, column: 1, scope: !5296)
!5623 = !{i64 2147617871, i64 2147617914, i64 2147617954}
!5624 = !DILocation(line: 174, column: 1, scope: !5296)
!5625 = !{i64 2147618061, i64 2147618104, i64 2147618144}
!5626 = !DILocation(line: 175, column: 1, scope: !5296)
!5627 = !{i64 2147618260, i64 2147618303, i64 2147618343}
!5628 = !DILocation(line: 176, column: 1, scope: !5296)
!5629 = !{i64 2147618465, i64 2147618508, i64 2147618548}
!5630 = !DILocation(line: 177, column: 1, scope: !5296)
!5631 = !{i64 2147618685, i64 2147618728, i64 2147618768}
!5632 = !DILocation(line: 178, column: 1, scope: !5296)
!5633 = !{i64 2147618886, i64 2147618929, i64 2147618969}
!5634 = !DILocation(line: 179, column: 1, scope: !5296)
!5635 = !{i64 2147619085, i64 2147619128, i64 2147619168}
!5636 = !DILocation(line: 180, column: 1, scope: !5296)
!5637 = !{i64 2147619290, i64 2147619333, i64 2147619373}
!5638 = !DILocation(line: 181, column: 1, scope: !5296)
!5639 = !{i64 2147619459, i64 2147619502, i64 2147619542}
!5640 = !DILocation(line: 182, column: 1, scope: !5296)
!5641 = !{i64 2147619643, i64 2147619686, i64 2147619726}
!5642 = !DILocation(line: 183, column: 1, scope: !5296)
!5643 = !{i64 2147619827, i64 2147619870, i64 2147619910}
!5644 = !DILocation(line: 184, column: 1, scope: !5296)
!5645 = !{i64 2147620014, i64 2147620057, i64 2147620097}
!5646 = !DILocation(line: 185, column: 1, scope: !5296)
!5647 = !{i64 2147620198, i64 2147620241, i64 2147620281}
!5648 = !DILocation(line: 186, column: 1, scope: !5296)
!5649 = !{i64 2147620436, i64 2147620479, i64 2147620519}
!5650 = !DILocation(line: 187, column: 1, scope: !5296)
!5651 = !{i64 2147620666, i64 2147620709, i64 2147620749}
!5652 = !DILocation(line: 188, column: 1, scope: !5296)
!5653 = !{i64 2147620895, i64 2147620938, i64 2147620978}
!5654 = !DILocation(line: 189, column: 1, scope: !5296)
!5655 = !{i64 2147621082, i64 2147621125, i64 2147621165}
!5656 = !DILocation(line: 190, column: 1, scope: !5296)
!5657 = !{i64 2147621278, i64 2147621321, i64 2147621361}
!5658 = !DILocation(line: 191, column: 1, scope: !5296)
!5659 = !{i64 2147621486, i64 2147621529, i64 2147621569}
!5660 = !DILocation(line: 192, column: 1, scope: !5296)
!5661 = !{i64 2147621698, i64 2147621741, i64 2147621781}
!5662 = !DILocation(line: 193, column: 1, scope: !5296)
!5663 = !{i64 2147621897, i64 2147621940, i64 2147621980}
!5664 = !DILocation(line: 194, column: 1, scope: !5296)
!5665 = !{i64 2147622135, i64 2147622178, i64 2147622218}
!5666 = !DILocation(line: 195, column: 1, scope: !5296)
!5667 = !{i64 2147622331, i64 2147622374, i64 2147622414}
!5668 = !DILocation(line: 196, column: 1, scope: !5296)
!5669 = !{i64 2147622533, i64 2147622576, i64 2147622616}
!5670 = !DILocation(line: 197, column: 1, scope: !5296)
!5671 = !{i64 2147622726, i64 2147622769, i64 2147622809}
!5672 = !DILocation(line: 198, column: 1, scope: !5296)
!5673 = !{i64 2147622960, i64 2147623003, i64 2147623043}
!5674 = !DILocation(line: 199, column: 1, scope: !5296)
!5675 = !{i64 2147623123, i64 2147623166, i64 2147623206}
!5676 = !DILocation(line: 200, column: 1, scope: !5296)
!5677 = !{i64 2147623362, i64 2147623405, i64 2147623445}
!5678 = !DILocation(line: 201, column: 1, scope: !5296)
!5679 = !{i64 2147623601, i64 2147623644, i64 2147623684}
!5680 = !DILocation(line: 202, column: 1, scope: !5296)
!5681 = !{i64 2147623837, i64 2147623880, i64 2147623920}
!5682 = !DILocation(line: 203, column: 1, scope: !5296)
!5683 = !{i64 2147624067, i64 2147624110, i64 2147624150}
!5684 = !DILocation(line: 204, column: 1, scope: !5296)
!5685 = !{i64 2147624254, i64 2147624297, i64 2147624337}
!5686 = !DILocation(line: 205, column: 1, scope: !5296)
!5687 = !{i64 2147624453, i64 2147624496, i64 2147624536}
!5688 = !DILocation(line: 206, column: 1, scope: !5296)
!5689 = !{i64 2147624724, i64 2147624767, i64 2147624807}
!5690 = !DILocation(line: 207, column: 1, scope: !5296)
!5691 = !{i64 2147624899, i64 2147624942, i64 2147624982}
!5692 = !DILocation(line: 208, column: 1, scope: !5296)
!5693 = !{i64 2147625133, i64 2147625176, i64 2147625216}
!5694 = !DILocation(line: 209, column: 1, scope: !5296)
!5695 = !{i64 2147625341, i64 2147625384, i64 2147625424}
!5696 = !DILocation(line: 210, column: 1, scope: !5296)
!5697 = !{i64 2147625540, i64 2147625583, i64 2147625623}
!5698 = !DILocation(line: 211, column: 1, scope: !5296)
!5699 = !{i64 2147625758, i64 2147625801, i64 2147625841}
!5700 = !DILocation(line: 212, column: 1, scope: !5296)
!5701 = !{i64 2147625948, i64 2147625991, i64 2147626031}
!5702 = !DILocation(line: 213, column: 1, scope: !5296)
!5703 = !{i64 2147626195, i64 2147626238, i64 2147626278}
!5704 = !DILocation(line: 214, column: 1, scope: !5296)
!5705 = !{i64 2147630452, i64 2147630495, i64 2147630535}
!5706 = !DILocation(line: 215, column: 1, scope: !5296)
!5707 = !{i64 2147630658, i64 2147630701, i64 2147630741}
!5708 = !DILocation(line: 216, column: 1, scope: !5296)
!5709 = !{i64 2147630863, i64 2147630906, i64 2147630946}
!5710 = !DILocation(line: 217, column: 1, scope: !5296)
!5711 = !{i64 2147631077, i64 2147631120, i64 2147631160}
!5712 = !DILocation(line: 218, column: 1, scope: !5296)
!5713 = !{i64 2147631303, i64 2147631346, i64 2147631386}
!5714 = !DILocation(line: 219, column: 1, scope: !5296)
!5715 = !{i64 2147631535, i64 2147631578, i64 2147631618}
!5716 = !DILocation(line: 220, column: 1, scope: !5296)
!5717 = !{i64 2147631719, i64 2147631762, i64 2147631802}
!5718 = !DILocation(line: 221, column: 1, scope: !5296)
!5719 = !{i64 2147631928, i64 2147631971, i64 2147632011}
!5720 = !DILocation(line: 222, column: 1, scope: !5296)
!5721 = !{i64 2147632112, i64 2147632155, i64 2147632195}
!5722 = !DILocation(line: 223, column: 1, scope: !5296)
!5723 = !{i64 2147632338, i64 2147632381, i64 2147632421}
!5724 = !DILocation(line: 224, column: 1, scope: !5296)
!5725 = !{i64 2147632564, i64 2147632607, i64 2147632647}
!5726 = !DILocation(line: 225, column: 1, scope: !5296)
!5727 = !{i64 2147632790, i64 2147632833, i64 2147632873}
!5728 = !DILocation(line: 226, column: 1, scope: !5296)
!5729 = !{i64 2147633016, i64 2147633059, i64 2147633099}
!5730 = !DILocation(line: 227, column: 1, scope: !5296)
!5731 = !{i64 2147633242, i64 2147633285, i64 2147633325}
!5732 = !DILocation(line: 228, column: 1, scope: !5296)
!5733 = !{i64 2147633474, i64 2147633517, i64 2147633557}
!5734 = !DILocation(line: 229, column: 1, scope: !5296)
!5735 = !{i64 2147633712, i64 2147633755, i64 2147633795}
!5736 = !DILocation(line: 230, column: 1, scope: !5296)
!5737 = !{i64 2147633932, i64 2147633975, i64 2147634015}
!5738 = !DILocation(line: 231, column: 1, scope: !5296)
!5739 = !{i64 2147634176, i64 2147634219, i64 2147634259}
!5740 = !DILocation(line: 232, column: 1, scope: !5296)
!5741 = !{i64 2147634417, i64 2147634460, i64 2147634500}
!5742 = !DILocation(line: 233, column: 1, scope: !5296)
!5743 = !{i64 2147634652, i64 2147634695, i64 2147634735}
!5744 = !DILocation(line: 234, column: 1, scope: !5296)
!5745 = !{i64 2147634884, i64 2147634927, i64 2147634967}
!5746 = !DILocation(line: 235, column: 1, scope: !5296)
!5747 = !{i64 2147635086, i64 2147635129, i64 2147635169}
!5748 = !DILocation(line: 236, column: 1, scope: !5296)
!5749 = !{i64 2147635336, i64 2147635379, i64 2147635419}
!5750 = !DILocation(line: 237, column: 1, scope: !5296)
!5751 = !{i64 2147635574, i64 2147635617, i64 2147635657}
!5752 = !DILocation(line: 238, column: 1, scope: !5296)
!5753 = !{i64 2147635758, i64 2147635801, i64 2147635841}
!5754 = !DILocation(line: 239, column: 1, scope: !5296)
!5755 = !{i64 2147635982, i64 2147636025, i64 2147636065}
!5756 = !DILocation(line: 240, column: 1, scope: !5296)
!5757 = !{i64 2147636220, i64 2147636263, i64 2147636303}
!5758 = !DILocation(line: 241, column: 1, scope: !5296)
!5759 = !{i64 2147636458, i64 2147636501, i64 2147636541}
!5760 = !DILocation(line: 242, column: 1, scope: !5296)
!5761 = !{i64 2147636651, i64 2147636694, i64 2147636734}
!5762 = !DILocation(line: 243, column: 1, scope: !5296)
!5763 = !{i64 2147636904, i64 2147636947, i64 2147636987}
!5764 = !DILocation(line: 244, column: 1, scope: !5296)
!5765 = !{i64 2147637118, i64 2147637161, i64 2147637201}
!5766 = !DILocation(line: 245, column: 1, scope: !5296)
!5767 = !{i64 2147637326, i64 2147637369, i64 2147637409}
!5768 = !DILocation(line: 246, column: 1, scope: !5296)
!5769 = !{i64 2147637516, i64 2147637559, i64 2147637599}
!5770 = !DILocation(line: 247, column: 1, scope: !5296)
!5771 = !{i64 2147637730, i64 2147637773, i64 2147637813}
!5772 = !DILocation(line: 248, column: 1, scope: !5296)
!5773 = !{i64 2147637992, i64 2147638035, i64 2147638075}
!5774 = !DILocation(line: 249, column: 1, scope: !5296)
!5775 = !{i64 2147638203, i64 2147638246, i64 2147638286}
!5776 = !DILocation(line: 250, column: 1, scope: !5296)
!5777 = !{i64 2147638447, i64 2147638490, i64 2147638530}
!5778 = !DILocation(line: 251, column: 1, scope: !5296)
!5779 = !{i64 2147638658, i64 2147638701, i64 2147638741}
!5780 = !DILocation(line: 252, column: 1, scope: !5296)
!5781 = !{i64 2147638887, i64 2147638930, i64 2147638970}
!5782 = !DILocation(line: 253, column: 1, scope: !5296)
!5783 = !{i64 2147643213, i64 2147643256, i64 2147643296}
!5784 = !DILocation(line: 254, column: 1, scope: !5296)
!5785 = !{i64 2147643418, i64 2147643461, i64 2147643501}
!5786 = !DILocation(line: 255, column: 1, scope: !5296)
!5787 = !{i64 2147643614, i64 2147643657, i64 2147643697}
!5788 = !DILocation(line: 256, column: 1, scope: !5296)
!5789 = !{i64 2147643837, i64 2147643880, i64 2147643920}
!5790 = !DILocation(line: 257, column: 1, scope: !5296)
!5791 = !{i64 2147644000, i64 2147644043, i64 2147644083}
!5792 = !DILocation(line: 258, column: 1, scope: !5296)
!5793 = !{i64 2147644205, i64 2147644248, i64 2147644288}
!5794 = !DILocation(line: 259, column: 1, scope: !5296)
!5795 = !{i64 2147644425, i64 2147644468, i64 2147644508}
!5796 = !DILocation(line: 260, column: 1, scope: !5296)
!5797 = !{i64 2147644639, i64 2147644682, i64 2147644722}
!5798 = !DILocation(line: 261, column: 1, scope: !5296)
!5799 = !{i64 2147644853, i64 2147644896, i64 2147644936}
!5800 = !DILocation(line: 262, column: 1, scope: !5296)
!5801 = !{i64 2147645064, i64 2147645107, i64 2147645147}
!5802 = !DILocation(line: 263, column: 1, scope: !5296)
!5803 = !{i64 2147645257, i64 2147645300, i64 2147645340}
!5804 = !DILocation(line: 264, column: 1, scope: !5296)
!5805 = !{i64 2147645456, i64 2147645499, i64 2147645539}
!5806 = !DILocation(line: 265, column: 1, scope: !5296)
!5807 = !{i64 2147645652, i64 2147645695, i64 2147645735}
!5808 = !DILocation(line: 266, column: 1, scope: !5296)
!5809 = !{i64 2147645851, i64 2147645894, i64 2147645934}
!5810 = !DILocation(line: 267, column: 1, scope: !5296)
!5811 = !{i64 2147646075, i64 2147646118, i64 2147646158}
!5812 = !DILocation(line: 268, column: 1, scope: !5296)
!5813 = !{i64 2147646299, i64 2147646342, i64 2147646382}
!5814 = !DILocation(line: 269, column: 1, scope: !5296)
!5815 = !{i64 2147646471, i64 2147646514, i64 2147646554}
!5816 = !DILocation(line: 270, column: 1, scope: !5296)
!5817 = !{i64 2147646664, i64 2147646707, i64 2147646747}
!5818 = !DILocation(line: 271, column: 1, scope: !5296)
!5819 = !{i64 2147646860, i64 2147646903, i64 2147646943}
!5820 = !DILocation(line: 272, column: 1, scope: !5296)
!5821 = !{i64 2147647087, i64 2147647130, i64 2147647170}
!5822 = !DILocation(line: 273, column: 1, scope: !5296)
!5823 = !{i64 2147647304, i64 2147647347, i64 2147647387}
!5824 = !DILocation(line: 274, column: 1, scope: !5296)
!5825 = !{i64 2147647596, i64 2147647639, i64 2147647679}
!5826 = !DILocation(line: 275, column: 1, scope: !5296)
!5827 = !{i64 2147647828, i64 2147647871, i64 2147647911}
!5828 = !DILocation(line: 276, column: 1, scope: !5296)
!5829 = !{i64 2147648045, i64 2147648088, i64 2147648128}
!5830 = !DILocation(line: 277, column: 1, scope: !5296)
!5831 = !{i64 2147648252, i64 2147648295, i64 2147648335}
!5832 = !DILocation(line: 278, column: 1, scope: !5296)
!5833 = !{i64 2147648453, i64 2147648496, i64 2147648536}
!5834 = !DILocation(line: 279, column: 1, scope: !5296)
!5835 = !{i64 2147648685, i64 2147648728, i64 2147648768}
!5836 = !DILocation(line: 280, column: 1, scope: !5296)
!5837 = !{i64 2147648893, i64 2147648936, i64 2147648976}
!5838 = !DILocation(line: 281, column: 1, scope: !5296)
!5839 = !{i64 2147649083, i64 2147649126, i64 2147649166}
!5840 = !DILocation(line: 282, column: 1, scope: !5296)
!5841 = !{i64 2147649309, i64 2147649352, i64 2147649392}
!5842 = !DILocation(line: 283, column: 1, scope: !5296)
!5843 = !{i64 2147649498, i64 2147649541, i64 2147649581}
!5844 = !DILocation(line: 284, column: 1, scope: !5296)
!5845 = !{i64 2147649769, i64 2147649812, i64 2147649852}
!5846 = !DILocation(line: 285, column: 1, scope: !5296)
!5847 = !{i64 2147649989, i64 2147650032, i64 2147650072}
!5848 = !DILocation(line: 286, column: 1, scope: !5296)
!5849 = !{i64 2147650242, i64 2147650285, i64 2147650325}
!5850 = !DILocation(line: 287, column: 1, scope: !5296)
!5851 = !{i64 2147650450, i64 2147650493, i64 2147650533}
!5852 = !DILocation(line: 288, column: 1, scope: !5296)
!5853 = !{i64 2147650682, i64 2147650725, i64 2147650765}
!5854 = !DILocation(line: 289, column: 1, scope: !5296)
!5855 = !{i64 2147650893, i64 2147650936, i64 2147650976}
!5856 = !DILocation(line: 290, column: 1, scope: !5296)
!5857 = !{i64 2147651083, i64 2147651126, i64 2147651166}
!5858 = !DILocation(line: 291, column: 1, scope: !5296)
!5859 = !{i64 2147651297, i64 2147651340, i64 2147651380}
!5860 = !DILocation(line: 292, column: 1, scope: !5296)
!5861 = !{i64 2147651496, i64 2147651539, i64 2147651579}
!5862 = !DILocation(line: 293, column: 1, scope: !5296)
!5863 = !{i64 2147651683, i64 2147651726, i64 2147651766}
!5864 = !DILocation(line: 294, column: 1, scope: !5296)
!5865 = !{i64 2147655952, i64 2147655995, i64 2147656035}
!5866 = !DILocation(line: 295, column: 1, scope: !5296)
!5867 = !{i64 2147656181, i64 2147656224, i64 2147656264}
!5868 = !DILocation(line: 296, column: 1, scope: !5296)
!5869 = !{i64 2147656383, i64 2147656426, i64 2147656466}
!5870 = !DILocation(line: 297, column: 1, scope: !5296)
!5871 = !{i64 2147656582, i64 2147656625, i64 2147656665}
!5872 = !DILocation(line: 298, column: 1, scope: !5296)
!5873 = !{i64 2147656799, i64 2147656842, i64 2147656882}
!5874 = !DILocation(line: 300, column: 1, scope: !5296)
!5875 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5876)
!5876 = !{!5877, !5878}
!5877 = !DILocalVariable(name: "arg", arg: 1, scope: !5875, file: !129, line: 30, type: !138)
!5878 = !DILocalVariable(name: "key", scope: !5875, file: !129, line: 32, type: !121)
!5879 = !DILocation(line: 0, scope: !5875)
!5880 = !DILocation(line: 37, column: 2, scope: !5875)
!5881 = !DILocation(line: 38, column: 2, scope: !5875)
!5882 = !DILocation(line: 55, column: 2, scope: !5883, inlinedAt: !5890)
!5883 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5887)
!5884 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!32}
!5887 = !{!5888, !5889}
!5888 = !DILocalVariable(name: "key", scope: !5883, file: !5884, line: 44, type: !32)
!5889 = !DILocalVariable(name: "tmp", scope: !5883, file: !5884, line: 53, type: !32)
!5890 = distinct !DILocation(line: 40, column: 8, scope: !5875)
!5891 = !{i64 2184860}
!5892 = !DILocation(line: 0, scope: !5883, inlinedAt: !5890)
!5893 = !DILocalVariable(name: "key", arg: 1, scope: !5894, file: !5884, line: 84, type: !32)
!5894 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5897)
!5895 = !DISubroutineType(types: !5896)
!5896 = !{null, !32}
!5897 = !{!5893}
!5898 = !DILocation(line: 0, scope: !5894, inlinedAt: !5899)
!5899 = distinct !DILocation(line: 47, column: 2, scope: !5875)
!5900 = !DILocation(line: 95, column: 2, scope: !5894, inlinedAt: !5899)
!5901 = !{i64 2185677}
!5902 = !DILocation(line: 51, column: 18, scope: !5875)
!5903 = !DILocation(line: 53, column: 2, scope: !5875)
!5904 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5905, file: !5905, line: 1609, type: !3318, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !461)
!5905 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5906 = !DILocation(line: 1611, column: 3, scope: !5904)
!5907 = !DILocation(line: 1612, column: 1, scope: !5904)
!5908 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5905, file: !5905, line: 1629, type: !3318, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !461)
!5909 = !DILocation(line: 1631, column: 3, scope: !5908)
!5910 = !DILocation(line: 1632, column: 1, scope: !5908)
!5911 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !5912)
!5912 = !{!5913}
!5913 = !DILocalVariable(name: "dev", arg: 1, scope: !5911, file: !171, line: 26, type: !179)
!5914 = !DILocation(line: 0, scope: !5911)
!5915 = !DILocation(line: 68, column: 2, scope: !5911)
!5916 = distinct !DISubprogram(name: "tty_write", scope: !5917, file: !5917, line: 100, type: !5918, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !5961)
!5917 = !DIFile(filename: "zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5918 = !DISubroutineType(types: !5919)
!5919 = !{!5920, !5922, !13, !344}
!5920 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !5921, line: 28, baseType: !103)
!5921 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5923, size: 32)
!5923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !295, line: 18, size: 544, elements: !5924)
!5924 = !{!5925, !5926, !5950, !5951, !5952, !5953, !5954, !5955, !5956, !5957, !5958, !5959, !5960}
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !5923, file: !295, line: 19, baseType: !2727, size: 32)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !5923, file: !295, line: 21, baseType: !5927, size: 128, offset: 32)
!5927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !300, line: 2909, size: 128, elements: !5928)
!5928 = !{!5929, !5948, !5949}
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5927, file: !300, line: 2910, baseType: !5930, size: 64)
!5930 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !5931)
!5931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !5932)
!5932 = !{!5933}
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5931, file: !304, line: 232, baseType: !5934, size: 64)
!5934 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !5935)
!5935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !5936)
!5936 = !{!5937, !5943}
!5937 = !DIDerivedType(tag: DW_TAG_member, scope: !5935, file: !309, line: 38, baseType: !5938, size: 32)
!5938 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5935, file: !309, line: 38, size: 32, elements: !5939)
!5939 = !{!5940, !5942}
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5938, file: !309, line: 39, baseType: !5941, size: 32)
!5941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5935, size: 32)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5938, file: !309, line: 40, baseType: !5941, size: 32)
!5943 = !DIDerivedType(tag: DW_TAG_member, scope: !5935, file: !309, line: 42, baseType: !5944, size: 32, offset: 32)
!5944 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5935, file: !309, line: 42, size: 32, elements: !5945)
!5945 = !{!5946, !5947}
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5944, file: !309, line: 43, baseType: !5941, size: 32)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5944, file: !309, line: 44, baseType: !5941, size: 32)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5927, file: !300, line: 2911, baseType: !32, size: 32, offset: 64)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5927, file: !300, line: 2912, baseType: !32, size: 32, offset: 96)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !5923, file: !295, line: 22, baseType: !261, size: 32, offset: 160)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !5923, file: !295, line: 23, baseType: !121, size: 32, offset: 192)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !5923, file: !295, line: 24, baseType: !328, size: 16, offset: 224)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !5923, file: !295, line: 24, baseType: !328, size: 16, offset: 240)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !5923, file: !295, line: 25, baseType: !332, size: 32, offset: 256)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !5923, file: !295, line: 27, baseType: !5927, size: 128, offset: 288)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !5923, file: !295, line: 28, baseType: !261, size: 32, offset: 416)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !5923, file: !295, line: 29, baseType: !121, size: 32, offset: 448)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !5923, file: !295, line: 30, baseType: !328, size: 16, offset: 480)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !5923, file: !295, line: 30, baseType: !328, size: 16, offset: 496)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !5923, file: !295, line: 31, baseType: !332, size: 32, offset: 512)
!5961 = !{!5962, !5963, !5964, !5965, !5966, !5967}
!5962 = !DILocalVariable(name: "tty", arg: 1, scope: !5916, file: !5917, line: 100, type: !5922)
!5963 = !DILocalVariable(name: "buf", arg: 2, scope: !5916, file: !5917, line: 100, type: !13)
!5964 = !DILocalVariable(name: "size", arg: 3, scope: !5916, file: !5917, line: 100, type: !344)
!5965 = !DILocalVariable(name: "p", scope: !5916, file: !5917, line: 102, type: !255)
!5966 = !DILocalVariable(name: "out_size", scope: !5916, file: !5917, line: 103, type: !344)
!5967 = !DILocalVariable(name: "res", scope: !5916, file: !5917, line: 104, type: !103)
!5968 = !DILocation(line: 0, scope: !5916)
!5969 = !DILocation(line: 106, column: 11, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5916, file: !5917, line: 106, column: 6)
!5971 = !DILocation(line: 106, column: 25, scope: !5970)
!5972 = !DILocation(line: 106, column: 6, scope: !5916)
!5973 = !DILocation(line: 117, column: 2, scope: !5916)
!5974 = !DILocation(line: 110, column: 3, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5970, file: !5917, line: 106, column: 32)
!5976 = !DILocation(line: 110, column: 14, scope: !5975)
!5977 = !DILocation(line: 111, column: 23, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5975, file: !5917, line: 110, column: 18)
!5979 = !DILocation(line: 111, column: 35, scope: !5978)
!5980 = !DILocation(line: 111, column: 33, scope: !5978)
!5981 = !DILocation(line: 111, column: 4, scope: !5978)
!5982 = distinct !{!5982, !5974, !5983}
!5983 = !DILocation(line: 112, column: 3, scope: !5975)
!5984 = !DILocation(line: 117, column: 13, scope: !5916)
!5985 = !DILocation(line: 118, column: 26, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5916, file: !5917, line: 117, column: 17)
!5987 = !DILocation(line: 118, column: 9, scope: !5986)
!5988 = !DILocation(line: 119, column: 11, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5986, file: !5917, line: 119, column: 7)
!5990 = !DILocation(line: 119, column: 7, scope: !5986)
!5991 = !DILocation(line: 121, column: 17, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5993, file: !5917, line: 121, column: 8)
!5993 = distinct !DILexicalBlock(scope: !5989, file: !5917, line: 119, column: 16)
!5994 = !DILocation(line: 121, column: 8, scope: !5993)
!5995 = !DILocation(line: 122, column: 13, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5992, file: !5917, line: 121, column: 23)
!5997 = !DILocation(line: 122, column: 5, scope: !5996)
!5998 = !DILocation(line: 122, column: 11, scope: !5996)
!5999 = !DILocation(line: 123, column: 5, scope: !5996)
!6000 = !DILocation(line: 118, column: 28, scope: !5986)
!6001 = !DILocation(line: 135, column: 11, scope: !5986)
!6002 = distinct !{!6002, !5973, !6003}
!6003 = !DILocation(line: 136, column: 2, scope: !5916)
!6004 = !DILocation(line: 139, column: 1, scope: !5916)
!6005 = distinct !DISubprogram(name: "uart_poll_out", scope: !6006, file: !6006, line: 95, type: !2744, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6007)
!6006 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!6007 = !{!6008, !6009}
!6008 = !DILocalVariable(name: "dev", arg: 1, scope: !6005, file: !6006, line: 95, type: !2727)
!6009 = !DILocalVariable(name: "out_char", arg: 2, scope: !6005, file: !6006, line: 95, type: !155)
!6010 = !DILocation(line: 0, scope: !6005)
!6011 = !DILocation(line: 105, column: 2, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6005, file: !6006, line: 105, column: 2)
!6013 = !{i64 2155345763}
!6014 = !DILocation(line: 106, column: 2, scope: !6005)
!6015 = !DILocation(line: 107, column: 1, scope: !6005)
!6016 = distinct !DISubprogram(name: "tty_putchar", scope: !5917, file: !5917, line: 69, type: !6017, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6019)
!6017 = !DISubroutineType(types: !6018)
!6018 = !{!103, !5922, !154}
!6019 = !{!6020, !6021, !6022, !6023, !6024}
!6020 = !DILocalVariable(name: "tty", arg: 1, scope: !6016, file: !5917, line: 69, type: !5922)
!6021 = !DILocalVariable(name: "c", arg: 2, scope: !6016, file: !5917, line: 69, type: !154)
!6022 = !DILocalVariable(name: "key", scope: !6016, file: !5917, line: 71, type: !32)
!6023 = !DILocalVariable(name: "tx_next", scope: !6016, file: !5917, line: 72, type: !103)
!6024 = !DILocalVariable(name: "res", scope: !6016, file: !5917, line: 73, type: !103)
!6025 = !DILocation(line: 0, scope: !6016)
!6026 = !DILocation(line: 75, column: 25, scope: !6016)
!6027 = !DILocation(line: 76, column: 5, scope: !6016)
!6028 = !DILocation(line: 77, column: 7, scope: !6016)
!6029 = !DILocation(line: 75, column: 8, scope: !6016)
!6030 = !DILocation(line: 78, column: 10, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6016, file: !5917, line: 78, column: 6)
!6032 = !DILocation(line: 78, column: 6, scope: !6016)
!6033 = !DILocation(line: 55, column: 2, scope: !6034, inlinedAt: !6038)
!6034 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6035)
!6035 = !{!6036, !6037}
!6036 = !DILocalVariable(name: "key", scope: !6034, file: !5884, line: 44, type: !32)
!6037 = !DILocalVariable(name: "tmp", scope: !6034, file: !5884, line: 53, type: !32)
!6038 = distinct !DILocation(line: 82, column: 8, scope: !6016)
!6039 = !{i64 2280931}
!6040 = !DILocation(line: 0, scope: !6034, inlinedAt: !6038)
!6041 = !DILocation(line: 83, column: 17, scope: !6016)
!6042 = !DILocation(line: 83, column: 12, scope: !6016)
!6043 = !DILocation(line: 83, column: 24, scope: !6016)
!6044 = !DILocation(line: 84, column: 22, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6016, file: !5917, line: 84, column: 6)
!6046 = !DILocation(line: 84, column: 14, scope: !6045)
!6047 = !DILocation(line: 84, column: 6, scope: !6016)
!6048 = !DILocation(line: 87, column: 22, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6016, file: !5917, line: 87, column: 6)
!6050 = !DILocation(line: 87, column: 17, scope: !6049)
!6051 = !DILocation(line: 87, column: 14, scope: !6049)
!6052 = !DILocation(line: 87, column: 6, scope: !6016)
!6053 = !DILocalVariable(name: "key", arg: 1, scope: !6054, file: !5884, line: 84, type: !32)
!6054 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6055)
!6055 = !{!6053}
!6056 = !DILocation(line: 0, scope: !6054, inlinedAt: !6057)
!6057 = distinct !DILocation(line: 88, column: 3, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6049, file: !5917, line: 87, column: 30)
!6059 = !DILocation(line: 95, column: 2, scope: !6054, inlinedAt: !6057)
!6060 = !{i64 2281748}
!6061 = !DILocation(line: 89, column: 3, scope: !6058)
!6062 = !DILocation(line: 92, column: 7, scope: !6016)
!6063 = !DILocation(line: 92, column: 2, scope: !6016)
!6064 = !DILocation(line: 92, column: 31, scope: !6016)
!6065 = !DILocation(line: 93, column: 16, scope: !6016)
!6066 = !DILocation(line: 93, column: 14, scope: !6016)
!6067 = !DILocation(line: 0, scope: !6054, inlinedAt: !6068)
!6068 = distinct !DILocation(line: 95, column: 2, scope: !6016)
!6069 = !DILocation(line: 95, column: 2, scope: !6054, inlinedAt: !6068)
!6070 = !DILocation(line: 96, column: 26, scope: !6016)
!6071 = !DILocation(line: 96, column: 2, scope: !6016)
!6072 = !DILocation(line: 97, column: 2, scope: !6016)
!6073 = !DILocation(line: 98, column: 1, scope: !6016)
!6074 = distinct !DISubprogram(name: "z_errno", scope: !6075, file: !6075, line: 24, type: !6076, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !461)
!6075 = !DIFile(filename: "zephyr/include/generated/syscalls/errno_private.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!6076 = !DISubroutineType(types: !6077)
!6077 = !{!2705}
!6078 = !DILocation(line: 31, column: 2, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6074, file: !6075, line: 31, column: 2)
!6080 = !{i64 2154586750}
!6081 = !DILocation(line: 32, column: 9, scope: !6074)
!6082 = !DILocation(line: 32, column: 2, scope: !6074)
!6083 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !6084, file: !6084, line: 403, type: !6085, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6087)
!6084 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6085 = !DISubroutineType(types: !6086)
!6086 = !{!1611, !1611}
!6087 = !{!6088}
!6088 = !DILocalVariable(name: "t", arg: 1, scope: !6083, file: !6084, line: 403, type: !1611)
!6089 = !DILocation(line: 0, scope: !6083)
!6090 = !DILocalVariable(name: "t", arg: 1, scope: !6091, file: !6084, line: 102, type: !1611)
!6091 = distinct !DISubprogram(name: "z_tmcvt", scope: !6084, file: !6084, line: 102, type: !6092, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6094)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{!1611, !1611, !121, !121, !157, !157, !157, !157}
!6094 = !{!6090, !6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104}
!6095 = !DILocalVariable(name: "from_hz", arg: 2, scope: !6091, file: !6084, line: 102, type: !121)
!6096 = !DILocalVariable(name: "to_hz", arg: 3, scope: !6091, file: !6084, line: 103, type: !121)
!6097 = !DILocalVariable(name: "const_hz", arg: 4, scope: !6091, file: !6084, line: 103, type: !157)
!6098 = !DILocalVariable(name: "result32", arg: 5, scope: !6091, file: !6084, line: 104, type: !157)
!6099 = !DILocalVariable(name: "round_up", arg: 6, scope: !6091, file: !6084, line: 104, type: !157)
!6100 = !DILocalVariable(name: "round_off", arg: 7, scope: !6091, file: !6084, line: 105, type: !157)
!6101 = !DILocalVariable(name: "mul_ratio", scope: !6091, file: !6084, line: 107, type: !157)
!6102 = !DILocalVariable(name: "div_ratio", scope: !6091, file: !6084, line: 109, type: !157)
!6103 = !DILocalVariable(name: "off", scope: !6091, file: !6084, line: 116, type: !1611)
!6104 = !DILocalVariable(name: "rdivisor", scope: !6105, file: !6084, line: 119, type: !121)
!6105 = distinct !DILexicalBlock(scope: !6106, file: !6084, line: 118, column: 18)
!6106 = distinct !DILexicalBlock(scope: !6091, file: !6084, line: 118, column: 6)
!6107 = !DILocation(line: 0, scope: !6091, inlinedAt: !6108)
!6108 = distinct !DILocation(line: 406, column: 9, scope: !6083)
!6109 = !DILocation(line: 145, column: 13, scope: !6110, inlinedAt: !6108)
!6110 = distinct !DILexicalBlock(scope: !6111, file: !6084, line: 144, column: 10)
!6111 = distinct !DILexicalBlock(scope: !6112, file: !6084, line: 142, column: 7)
!6112 = distinct !DILexicalBlock(scope: !6113, file: !6084, line: 141, column: 24)
!6113 = distinct !DILexicalBlock(scope: !6114, file: !6084, line: 141, column: 13)
!6114 = distinct !DILexicalBlock(scope: !6091, file: !6084, line: 134, column: 6)
!6115 = !DILocation(line: 406, column: 2, scope: !6083)
!6116 = distinct !DISubprogram(name: "k_sem_take", scope: !3751, file: !3751, line: 1044, type: !6117, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6124)
!6117 = !DISubroutineType(types: !6118)
!6118 = !{!103, !6119, !6120}
!6119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5927, size: 32)
!6120 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1790, line: 67, baseType: !6121)
!6121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1790, line: 65, size: 64, elements: !6122)
!6122 = !{!6123}
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !6121, file: !1790, line: 66, baseType: !1789, size: 64)
!6124 = !{!6125, !6126}
!6125 = !DILocalVariable(name: "sem", arg: 1, scope: !6116, file: !3751, line: 1044, type: !6119)
!6126 = !DILocalVariable(name: "timeout", arg: 2, scope: !6116, file: !3751, line: 1044, type: !6120)
!6127 = !DILocation(line: 0, scope: !6116)
!6128 = !DILocation(line: 1053, column: 2, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6116, file: !3751, line: 1053, column: 2)
!6130 = !{i64 2155065938}
!6131 = !DILocation(line: 1054, column: 9, scope: !6116)
!6132 = !DILocation(line: 1054, column: 2, scope: !6116)
!6133 = distinct !DISubprogram(name: "uart_irq_tx_enable", scope: !6006, file: !6006, line: 193, type: !2778, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6134)
!6134 = !{!6135}
!6135 = !DILocalVariable(name: "dev", arg: 1, scope: !6133, file: !6006, line: 193, type: !2727)
!6136 = !DILocation(line: 0, scope: !6133)
!6137 = !DILocation(line: 202, column: 2, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6133, file: !6006, line: 202, column: 2)
!6139 = !{i64 2155346035}
!6140 = !DILocation(line: 203, column: 2, scope: !6133)
!6141 = !DILocation(line: 204, column: 1, scope: !6133)
!6142 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_enable", scope: !203, file: !203, line: 857, type: !2778, scopeLine: 858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6143)
!6143 = !{!6144, !6145}
!6144 = !DILocalVariable(name: "dev", arg: 1, scope: !6142, file: !203, line: 857, type: !2727)
!6145 = !DILocalVariable(name: "api", scope: !6142, file: !203, line: 860, type: !2719)
!6146 = !DILocation(line: 0, scope: !6142)
!6147 = !DILocation(line: 861, column: 40, scope: !6142)
!6148 = !DILocation(line: 863, column: 11, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6142, file: !203, line: 863, column: 6)
!6150 = !DILocation(line: 863, column: 25, scope: !6149)
!6151 = !DILocation(line: 863, column: 6, scope: !6142)
!6152 = !DILocation(line: 864, column: 3, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6149, file: !203, line: 863, column: 34)
!6154 = !DILocation(line: 865, column: 2, scope: !6153)
!6155 = !DILocation(line: 869, column: 1, scope: !6142)
!6156 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !203, file: !203, line: 574, type: !2744, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6157)
!6157 = !{!6158, !6159, !6160}
!6158 = !DILocalVariable(name: "dev", arg: 1, scope: !6156, file: !203, line: 574, type: !2727)
!6159 = !DILocalVariable(name: "out_char", arg: 2, scope: !6156, file: !203, line: 575, type: !155)
!6160 = !DILocalVariable(name: "api", scope: !6156, file: !203, line: 577, type: !2719)
!6161 = !DILocation(line: 0, scope: !6156)
!6162 = !DILocation(line: 578, column: 40, scope: !6156)
!6163 = !DILocation(line: 580, column: 7, scope: !6156)
!6164 = !DILocation(line: 580, column: 2, scope: !6156)
!6165 = !DILocation(line: 581, column: 1, scope: !6156)
!6166 = distinct !DISubprogram(name: "tty_read", scope: !5917, file: !5917, line: 206, type: !6167, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6169)
!6167 = !DISubroutineType(types: !6168)
!6168 = !{!5920, !5922, !102, !344}
!6169 = !{!6170, !6171, !6172, !6173, !6174, !6175}
!6170 = !DILocalVariable(name: "tty", arg: 1, scope: !6166, file: !5917, line: 206, type: !5922)
!6171 = !DILocalVariable(name: "buf", arg: 2, scope: !6166, file: !5917, line: 206, type: !102)
!6172 = !DILocalVariable(name: "size", arg: 3, scope: !6166, file: !5917, line: 206, type: !344)
!6173 = !DILocalVariable(name: "p", scope: !6166, file: !5917, line: 208, type: !261)
!6174 = !DILocalVariable(name: "out_size", scope: !6166, file: !5917, line: 209, type: !344)
!6175 = !DILocalVariable(name: "res", scope: !6166, file: !5917, line: 210, type: !103)
!6176 = !DILocation(line: 0, scope: !6166)
!6177 = !DILocation(line: 212, column: 11, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6166, file: !5917, line: 212, column: 6)
!6179 = !DILocation(line: 212, column: 25, scope: !6178)
!6180 = !DILocation(line: 212, column: 6, scope: !6166)
!6181 = !DILocation(line: 216, column: 2, scope: !6166)
!6182 = !DILocation(line: 213, column: 10, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6178, file: !5917, line: 212, column: 32)
!6184 = !DILocation(line: 213, column: 3, scope: !6183)
!6185 = !DILocation(line: 216, column: 13, scope: !6166)
!6186 = !DILocation(line: 217, column: 9, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6166, file: !5917, line: 216, column: 17)
!6188 = !DILocation(line: 218, column: 11, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6187, file: !5917, line: 218, column: 7)
!6190 = !DILocation(line: 218, column: 7, scope: !6187)
!6191 = !DILocation(line: 220, column: 17, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !5917, line: 220, column: 8)
!6193 = distinct !DILexicalBlock(scope: !6189, file: !5917, line: 218, column: 16)
!6194 = !DILocation(line: 220, column: 8, scope: !6193)
!6195 = !DILocation(line: 221, column: 13, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6192, file: !5917, line: 220, column: 23)
!6197 = !DILocation(line: 221, column: 5, scope: !6196)
!6198 = !DILocation(line: 221, column: 11, scope: !6196)
!6199 = !DILocation(line: 222, column: 5, scope: !6196)
!6200 = !DILocation(line: 234, column: 10, scope: !6187)
!6201 = !DILocation(line: 234, column: 5, scope: !6187)
!6202 = !DILocation(line: 234, column: 8, scope: !6187)
!6203 = !DILocation(line: 235, column: 11, scope: !6187)
!6204 = distinct !{!6204, !6181, !6205}
!6205 = !DILocation(line: 236, column: 2, scope: !6166)
!6206 = !DILocation(line: 239, column: 1, scope: !6166)
!6207 = distinct !DISubprogram(name: "tty_read_unbuf", scope: !5917, file: !5917, line: 162, type: !6167, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6208)
!6208 = !{!6209, !6210, !6211, !6212, !6213, !6214, !6215, !6216}
!6209 = !DILocalVariable(name: "tty", arg: 1, scope: !6207, file: !5917, line: 162, type: !5922)
!6210 = !DILocalVariable(name: "buf", arg: 2, scope: !6207, file: !5917, line: 162, type: !102)
!6211 = !DILocalVariable(name: "size", arg: 3, scope: !6207, file: !5917, line: 162, type: !344)
!6212 = !DILocalVariable(name: "p", scope: !6207, file: !5917, line: 164, type: !261)
!6213 = !DILocalVariable(name: "out_size", scope: !6207, file: !5917, line: 165, type: !344)
!6214 = !DILocalVariable(name: "res", scope: !6207, file: !5917, line: 166, type: !103)
!6215 = !DILocalVariable(name: "timeout", scope: !6207, file: !5917, line: 167, type: !121)
!6216 = !DILocalVariable(name: "c", scope: !6217, file: !5917, line: 170, type: !154)
!6217 = distinct !DILexicalBlock(scope: !6207, file: !5917, line: 169, column: 15)
!6218 = !DILocation(line: 0, scope: !6207)
!6219 = !DILocation(line: 169, column: 2, scope: !6207)
!6220 = !DILocation(line: 167, column: 26, scope: !6207)
!6221 = !DILocation(line: 170, column: 3, scope: !6217)
!6222 = !DILocation(line: 171, column: 27, scope: !6217)
!6223 = !DILocation(line: 0, scope: !6217)
!6224 = !DILocation(line: 171, column: 9, scope: !6217)
!6225 = !DILocation(line: 172, column: 11, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6217, file: !5917, line: 172, column: 7)
!6227 = !DILocation(line: 172, column: 7, scope: !6217)
!6228 = !DILocation(line: 177, column: 17, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6230, file: !5917, line: 177, column: 8)
!6230 = distinct !DILexicalBlock(scope: !6226, file: !5917, line: 172, column: 18)
!6231 = !DILocation(line: 177, column: 8, scope: !6230)
!6232 = !DILocation(line: 178, column: 5, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6229, file: !5917, line: 177, column: 23)
!6234 = !DILocation(line: 178, column: 11, scope: !6233)
!6235 = !DILocation(line: 201, column: 2, scope: !6207)
!6236 = !DILocation(line: 184, column: 11, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6217, file: !5917, line: 184, column: 7)
!6238 = !DILocation(line: 184, column: 7, scope: !6217)
!6239 = !DILocation(line: 185, column: 11, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6237, file: !5917, line: 184, column: 17)
!6241 = !DILocation(line: 185, column: 6, scope: !6240)
!6242 = !DILocation(line: 185, column: 9, scope: !6240)
!6243 = !DILocation(line: 186, column: 12, scope: !6240)
!6244 = !DILocation(line: 187, column: 8, scope: !6240)
!6245 = !DILocation(line: 190, column: 12, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6217, file: !5917, line: 190, column: 7)
!6247 = !DILocation(line: 190, column: 17, scope: !6246)
!6248 = !DILocation(line: 191, column: 17, scope: !6246)
!6249 = !DILocation(line: 191, column: 36, scope: !6246)
!6250 = !DILocation(line: 191, column: 46, scope: !6246)
!6251 = !DILocation(line: 191, column: 49, scope: !6246)
!6252 = !DILocation(line: 190, column: 7, scope: !6217)
!6253 = !DILocation(line: 198, column: 11, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6217, file: !5917, line: 198, column: 7)
!6255 = !DILocation(line: 198, column: 7, scope: !6217)
!6256 = !DILocation(line: 199, column: 12, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6254, file: !5917, line: 198, column: 18)
!6258 = !DILocation(line: 199, column: 4, scope: !6257)
!6259 = !DILocation(line: 200, column: 3, scope: !6257)
!6260 = !DILocation(line: 204, column: 1, scope: !6207)
!6261 = distinct !DISubprogram(name: "tty_getchar", scope: !5917, file: !5917, line: 141, type: !6262, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6264)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{!103, !5922}
!6264 = !{!6265, !6266, !6267, !6268}
!6265 = !DILocalVariable(name: "tty", arg: 1, scope: !6261, file: !5917, line: 141, type: !5922)
!6266 = !DILocalVariable(name: "key", scope: !6261, file: !5917, line: 143, type: !32)
!6267 = !DILocalVariable(name: "c", scope: !6261, file: !5917, line: 144, type: !154)
!6268 = !DILocalVariable(name: "res", scope: !6261, file: !5917, line: 145, type: !103)
!6269 = !DILocation(line: 0, scope: !6261)
!6270 = !DILocation(line: 147, column: 25, scope: !6261)
!6271 = !DILocation(line: 147, column: 33, scope: !6261)
!6272 = !DILocation(line: 147, column: 8, scope: !6261)
!6273 = !DILocation(line: 148, column: 10, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6261, file: !5917, line: 148, column: 6)
!6275 = !DILocation(line: 148, column: 6, scope: !6261)
!6276 = !DILocation(line: 55, column: 2, scope: !6034, inlinedAt: !6277)
!6277 = distinct !DILocation(line: 152, column: 8, scope: !6261)
!6278 = !DILocation(line: 0, scope: !6034, inlinedAt: !6277)
!6279 = !DILocation(line: 153, column: 11, scope: !6261)
!6280 = !DILocation(line: 153, column: 27, scope: !6261)
!6281 = !DILocation(line: 153, column: 33, scope: !6261)
!6282 = !DILocation(line: 153, column: 6, scope: !6261)
!6283 = !DILocation(line: 154, column: 6, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6261, file: !5917, line: 154, column: 6)
!6285 = !DILocation(line: 154, column: 26, scope: !6284)
!6286 = !DILocation(line: 154, column: 18, scope: !6284)
!6287 = !DILocation(line: 154, column: 6, scope: !6261)
!6288 = !DILocation(line: 0, scope: !6054, inlinedAt: !6289)
!6289 = distinct !DILocation(line: 157, column: 2, scope: !6261)
!6290 = !DILocation(line: 95, column: 2, scope: !6054, inlinedAt: !6289)
!6291 = !DILocation(line: 159, column: 9, scope: !6261)
!6292 = !DILocation(line: 159, column: 2, scope: !6261)
!6293 = !DILocation(line: 160, column: 1, scope: !6261)
!6294 = distinct !DISubprogram(name: "uart_poll_in", scope: !6006, file: !6006, line: 47, type: !2725, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6295)
!6295 = !{!6296, !6297}
!6296 = !DILocalVariable(name: "dev", arg: 1, scope: !6294, file: !6006, line: 47, type: !2727)
!6297 = !DILocalVariable(name: "p_char", arg: 2, scope: !6294, file: !6006, line: 47, type: !224)
!6298 = !DILocation(line: 0, scope: !6294)
!6299 = !DILocation(line: 56, column: 2, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6294, file: !6006, line: 56, column: 2)
!6301 = !{i64 2155345627}
!6302 = !DILocation(line: 57, column: 9, scope: !6294)
!6303 = !DILocation(line: 57, column: 2, scope: !6294)
!6304 = distinct !DISubprogram(name: "k_sleep", scope: !3751, file: !3751, line: 91, type: !6305, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6307)
!6305 = !DISubroutineType(types: !6306)
!6306 = !{!332, !6120}
!6307 = !{!6308}
!6308 = !DILocalVariable(name: "timeout", arg: 1, scope: !6304, file: !3751, line: 91, type: !6120)
!6309 = !DILocation(line: 0, scope: !6304)
!6310 = !DILocation(line: 99, column: 2, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6304, file: !3751, line: 99, column: 2)
!6312 = !{i64 2155062094}
!6313 = !DILocation(line: 100, column: 9, scope: !6304)
!6314 = !DILocation(line: 100, column: 2, scope: !6304)
!6315 = distinct !DISubprogram(name: "z_impl_uart_poll_in", scope: !203, file: !203, line: 504, type: !2725, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6316)
!6316 = !{!6317, !6318, !6319}
!6317 = !DILocalVariable(name: "dev", arg: 1, scope: !6315, file: !203, line: 504, type: !2727)
!6318 = !DILocalVariable(name: "p_char", arg: 2, scope: !6315, file: !203, line: 505, type: !224)
!6319 = !DILocalVariable(name: "api", scope: !6315, file: !203, line: 507, type: !2719)
!6320 = !DILocation(line: 0, scope: !6315)
!6321 = !DILocation(line: 508, column: 40, scope: !6315)
!6322 = !DILocation(line: 510, column: 11, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6315, file: !203, line: 510, column: 6)
!6324 = !DILocation(line: 510, column: 19, scope: !6323)
!6325 = !DILocation(line: 510, column: 6, scope: !6315)
!6326 = !DILocation(line: 514, column: 9, scope: !6315)
!6327 = !DILocation(line: 514, column: 2, scope: !6315)
!6328 = !DILocation(line: 515, column: 1, scope: !6315)
!6329 = distinct !DISubprogram(name: "tty_init", scope: !5917, file: !5917, line: 241, type: !6330, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6332)
!6330 = !DISubroutineType(types: !6331)
!6331 = !{!103, !5922, !2727}
!6332 = !{!6333, !6334}
!6333 = !DILocalVariable(name: "tty", arg: 1, scope: !6329, file: !5917, line: 241, type: !5922)
!6334 = !DILocalVariable(name: "uart_dev", arg: 2, scope: !6329, file: !5917, line: 241, type: !2727)
!6335 = !DILocation(line: 0, scope: !6329)
!6336 = !DILocation(line: 243, column: 7, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6329, file: !5917, line: 243, column: 6)
!6338 = !DILocation(line: 243, column: 6, scope: !6329)
!6339 = !DILocation(line: 247, column: 7, scope: !6329)
!6340 = !DILocation(line: 247, column: 16, scope: !6329)
!6341 = !DILocation(line: 250, column: 7, scope: !6329)
!6342 = !DILocation(line: 250, column: 18, scope: !6329)
!6343 = !DILocation(line: 251, column: 7, scope: !6329)
!6344 = !DILocation(line: 251, column: 21, scope: !6329)
!6345 = !DILocation(line: 252, column: 7, scope: !6329)
!6346 = !DILocation(line: 252, column: 18, scope: !6329)
!6347 = !DILocation(line: 253, column: 7, scope: !6329)
!6348 = !DILocation(line: 253, column: 21, scope: !6329)
!6349 = !DILocation(line: 255, column: 49, scope: !6329)
!6350 = !DILocation(line: 255, column: 56, scope: !6329)
!6351 = !DILocation(line: 255, column: 35, scope: !6329)
!6352 = !DILocation(line: 255, column: 42, scope: !6329)
!6353 = !DILocation(line: 255, column: 21, scope: !6329)
!6354 = !DILocation(line: 255, column: 28, scope: !6329)
!6355 = !DILocation(line: 255, column: 7, scope: !6329)
!6356 = !DILocation(line: 255, column: 14, scope: !6329)
!6357 = !DILocation(line: 257, column: 7, scope: !6329)
!6358 = !DILocation(line: 257, column: 18, scope: !6329)
!6359 = !DILocation(line: 258, column: 7, scope: !6329)
!6360 = !DILocation(line: 258, column: 18, scope: !6329)
!6361 = !DILocation(line: 260, column: 58, scope: !6329)
!6362 = !DILocation(line: 260, column: 2, scope: !6329)
!6363 = !DILocation(line: 262, column: 2, scope: !6329)
!6364 = !DILocation(line: 263, column: 1, scope: !6329)
!6365 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !203, file: !203, line: 1163, type: !2792, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6366)
!6366 = !{!6367, !6368, !6369, !6370}
!6367 = !DILocalVariable(name: "dev", arg: 1, scope: !6365, file: !203, line: 1163, type: !2727)
!6368 = !DILocalVariable(name: "cb", arg: 2, scope: !6365, file: !203, line: 1164, type: !2794)
!6369 = !DILocalVariable(name: "user_data", arg: 3, scope: !6365, file: !203, line: 1165, type: !102)
!6370 = !DILocalVariable(name: "api", scope: !6365, file: !203, line: 1168, type: !2719)
!6371 = !DILocation(line: 0, scope: !6365)
!6372 = !DILocation(line: 1169, column: 40, scope: !6365)
!6373 = !DILocation(line: 1171, column: 11, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6365, file: !203, line: 1171, column: 6)
!6375 = !DILocation(line: 1171, column: 20, scope: !6374)
!6376 = !DILocation(line: 1171, column: 29, scope: !6374)
!6377 = !DILocation(line: 1171, column: 46, scope: !6374)
!6378 = !DILocation(line: 1171, column: 6, scope: !6365)
!6379 = !DILocation(line: 1172, column: 3, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6374, file: !203, line: 1171, column: 56)
!6381 = !DILocation(line: 1173, column: 2, scope: !6380)
!6382 = !DILocation(line: 1179, column: 1, scope: !6365)
!6383 = distinct !DISubprogram(name: "tty_uart_isr", scope: !5917, file: !5917, line: 15, type: !2796, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6384)
!6384 = !{!6385, !6386, !6387, !6388}
!6385 = !DILocalVariable(name: "dev", arg: 1, scope: !6383, file: !5917, line: 15, type: !2727)
!6386 = !DILocalVariable(name: "user_data", arg: 2, scope: !6383, file: !5917, line: 15, type: !102)
!6387 = !DILocalVariable(name: "tty", scope: !6383, file: !5917, line: 17, type: !5922)
!6388 = !DILocalVariable(name: "c", scope: !6389, file: !5917, line: 22, type: !154)
!6389 = distinct !DILexicalBlock(scope: !6390, file: !5917, line: 21, column: 30)
!6390 = distinct !DILexicalBlock(scope: !6383, file: !5917, line: 21, column: 6)
!6391 = !DILocation(line: 0, scope: !6383)
!6392 = !DILocation(line: 17, column: 27, scope: !6383)
!6393 = !DILocation(line: 19, column: 2, scope: !6383)
!6394 = !DILocation(line: 21, column: 6, scope: !6390)
!6395 = !DILocation(line: 21, column: 6, scope: !6383)
!6396 = !DILocation(line: 22, column: 3, scope: !6389)
!6397 = !DILocation(line: 0, scope: !6389)
!6398 = !DILocation(line: 25, column: 8, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6400, file: !5917, line: 25, column: 8)
!6400 = distinct !DILexicalBlock(scope: !6389, file: !5917, line: 24, column: 13)
!6401 = !DILocation(line: 25, column: 35, scope: !6399)
!6402 = !DILocation(line: 25, column: 8, scope: !6400)
!6403 = !DILocation(line: 28, column: 28, scope: !6400)
!6404 = !DILocation(line: 28, column: 4, scope: !6400)
!6405 = distinct !{!6405, !6406, !6407}
!6406 = !DILocation(line: 24, column: 3, scope: !6389)
!6407 = !DILocation(line: 29, column: 3, scope: !6389)
!6408 = !DILocation(line: 30, column: 2, scope: !6390)
!6409 = !DILocation(line: 30, column: 2, scope: !6389)
!6410 = !DILocation(line: 32, column: 6, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6383, file: !5917, line: 32, column: 6)
!6412 = !DILocation(line: 32, column: 6, scope: !6383)
!6413 = !DILocation(line: 33, column: 12, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6415, file: !5917, line: 33, column: 7)
!6415 = distinct !DILexicalBlock(scope: !6411, file: !5917, line: 32, column: 30)
!6416 = !DILocation(line: 33, column: 27, scope: !6414)
!6417 = !DILocation(line: 33, column: 19, scope: !6414)
!6418 = !DILocation(line: 33, column: 7, scope: !6415)
!6419 = !DILocation(line: 37, column: 4, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6414, file: !5917, line: 33, column: 35)
!6421 = !DILocation(line: 38, column: 3, scope: !6420)
!6422 = !DILocation(line: 33, column: 7, scope: !6414)
!6423 = !DILocation(line: 39, column: 30, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6414, file: !5917, line: 38, column: 10)
!6425 = !DILocation(line: 39, column: 52, scope: !6424)
!6426 = !DILocation(line: 39, column: 25, scope: !6424)
!6427 = !DILocation(line: 39, column: 4, scope: !6424)
!6428 = !DILocation(line: 40, column: 13, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6424, file: !5917, line: 40, column: 8)
!6430 = !DILocation(line: 40, column: 8, scope: !6429)
!6431 = !DILocation(line: 40, column: 28, scope: !6429)
!6432 = !DILocation(line: 40, column: 20, scope: !6429)
!6433 = !DILocation(line: 40, column: 8, scope: !6424)
!6434 = !DILocation(line: 41, column: 17, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6429, file: !5917, line: 40, column: 43)
!6436 = !DILocation(line: 42, column: 4, scope: !6435)
!6437 = !DILocation(line: 43, column: 21, scope: !6424)
!6438 = !DILocation(line: 43, column: 4, scope: !6424)
!6439 = !DILocation(line: 46, column: 1, scope: !6383)
!6440 = distinct !DISubprogram(name: "uart_irq_update", scope: !6006, file: !6006, line: 360, type: !2748, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6441)
!6441 = !{!6442}
!6442 = !DILocalVariable(name: "dev", arg: 1, scope: !6440, file: !6006, line: 360, type: !2727)
!6443 = !DILocation(line: 0, scope: !6440)
!6444 = !DILocation(line: 368, column: 2, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6440, file: !6006, line: 368, column: 2)
!6446 = !{i64 2155346511}
!6447 = !DILocation(line: 369, column: 9, scope: !6440)
!6448 = !DILocation(line: 369, column: 2, scope: !6440)
!6449 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !203, file: !203, line: 1024, type: !2748, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6450)
!6450 = !{!6451, !6452}
!6451 = !DILocalVariable(name: "dev", arg: 1, scope: !6449, file: !203, line: 1024, type: !2727)
!6452 = !DILocalVariable(name: "api", scope: !6449, file: !203, line: 1027, type: !2719)
!6453 = !DILocation(line: 0, scope: !6449)
!6454 = !DILocation(line: 1028, column: 40, scope: !6449)
!6455 = !DILocation(line: 1030, column: 11, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6449, file: !203, line: 1030, column: 6)
!6457 = !DILocation(line: 1030, column: 24, scope: !6456)
!6458 = !DILocation(line: 1030, column: 6, scope: !6449)
!6459 = !DILocation(line: 1033, column: 9, scope: !6449)
!6460 = !DILocation(line: 1033, column: 2, scope: !6449)
!6461 = !DILocation(line: 1038, column: 1, scope: !6449)
!6462 = distinct !DISubprogram(name: "uart_fifo_read", scope: !203, file: !203, line: 785, type: !2774, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6463)
!6463 = !{!6464, !6465, !6466, !6467}
!6464 = !DILocalVariable(name: "dev", arg: 1, scope: !6462, file: !203, line: 785, type: !2727)
!6465 = !DILocalVariable(name: "rx_data", arg: 2, scope: !6462, file: !203, line: 785, type: !261)
!6466 = !DILocalVariable(name: "size", arg: 3, scope: !6462, file: !203, line: 786, type: !262)
!6467 = !DILocalVariable(name: "api", scope: !6462, file: !203, line: 789, type: !2719)
!6468 = !DILocation(line: 0, scope: !6462)
!6469 = !DILocation(line: 790, column: 40, scope: !6462)
!6470 = !DILocation(line: 792, column: 11, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6462, file: !203, line: 792, column: 6)
!6472 = !DILocation(line: 792, column: 21, scope: !6471)
!6473 = !DILocation(line: 792, column: 6, scope: !6462)
!6474 = !DILocation(line: 796, column: 9, scope: !6462)
!6475 = !DILocation(line: 796, column: 2, scope: !6462)
!6476 = !DILocation(line: 803, column: 1, scope: !6462)
!6477 = distinct !DISubprogram(name: "tty_irq_input_hook", scope: !5917, file: !5917, line: 48, type: !6017, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6478)
!6478 = !{!6479, !6480, !6481}
!6479 = !DILocalVariable(name: "tty", arg: 1, scope: !6477, file: !5917, line: 48, type: !5922)
!6480 = !DILocalVariable(name: "c", arg: 2, scope: !6477, file: !5917, line: 48, type: !154)
!6481 = !DILocalVariable(name: "rx_next", scope: !6477, file: !5917, line: 50, type: !103)
!6482 = !DILocation(line: 0, scope: !6477)
!6483 = !DILocation(line: 50, column: 21, scope: !6477)
!6484 = !DILocation(line: 50, column: 16, scope: !6477)
!6485 = !DILocation(line: 50, column: 28, scope: !6477)
!6486 = !DILocation(line: 52, column: 22, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6477, file: !5917, line: 52, column: 6)
!6488 = !DILocation(line: 52, column: 14, scope: !6487)
!6489 = !DILocation(line: 52, column: 6, scope: !6477)
!6490 = !DILocation(line: 56, column: 22, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6477, file: !5917, line: 56, column: 6)
!6492 = !DILocation(line: 56, column: 17, scope: !6491)
!6493 = !DILocation(line: 56, column: 14, scope: !6491)
!6494 = !DILocation(line: 56, column: 6, scope: !6477)
!6495 = !DILocation(line: 58, column: 3, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6491, file: !5917, line: 56, column: 30)
!6497 = !DILocation(line: 59, column: 3, scope: !6496)
!6498 = !DILocation(line: 62, column: 7, scope: !6477)
!6499 = !DILocation(line: 62, column: 2, scope: !6477)
!6500 = !DILocation(line: 62, column: 31, scope: !6477)
!6501 = !DILocation(line: 63, column: 16, scope: !6477)
!6502 = !DILocation(line: 63, column: 14, scope: !6477)
!6503 = !DILocation(line: 64, column: 19, scope: !6477)
!6504 = !DILocation(line: 64, column: 2, scope: !6477)
!6505 = !DILocation(line: 66, column: 2, scope: !6477)
!6506 = !DILocation(line: 67, column: 1, scope: !6477)
!6507 = distinct !DISubprogram(name: "uart_irq_tx_ready", scope: !203, file: !203, line: 910, type: !2748, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6508)
!6508 = !{!6509, !6510}
!6509 = !DILocalVariable(name: "dev", arg: 1, scope: !6507, file: !203, line: 910, type: !2727)
!6510 = !DILocalVariable(name: "api", scope: !6507, file: !203, line: 913, type: !2719)
!6511 = !DILocation(line: 0, scope: !6507)
!6512 = !DILocation(line: 914, column: 40, scope: !6507)
!6513 = !DILocation(line: 916, column: 11, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6507, file: !203, line: 916, column: 6)
!6515 = !DILocation(line: 916, column: 24, scope: !6514)
!6516 = !DILocation(line: 916, column: 6, scope: !6507)
!6517 = !DILocation(line: 920, column: 9, scope: !6507)
!6518 = !DILocation(line: 920, column: 2, scope: !6507)
!6519 = !DILocation(line: 925, column: 1, scope: !6507)
!6520 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !6006, file: !6006, line: 217, type: !2778, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6521)
!6521 = !{!6522}
!6522 = !DILocalVariable(name: "dev", arg: 1, scope: !6520, file: !6006, line: 217, type: !2727)
!6523 = !DILocation(line: 0, scope: !6520)
!6524 = !DILocation(line: 226, column: 2, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6520, file: !6006, line: 226, column: 2)
!6526 = !{i64 2155346103}
!6527 = !DILocation(line: 227, column: 2, scope: !6520)
!6528 = !DILocation(line: 228, column: 1, scope: !6520)
!6529 = distinct !DISubprogram(name: "uart_fifo_fill", scope: !203, file: !203, line: 699, type: !2770, scopeLine: 702, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6530)
!6530 = !{!6531, !6532, !6533, !6534}
!6531 = !DILocalVariable(name: "dev", arg: 1, scope: !6529, file: !203, line: 699, type: !2727)
!6532 = !DILocalVariable(name: "tx_data", arg: 2, scope: !6529, file: !203, line: 700, type: !255)
!6533 = !DILocalVariable(name: "size", arg: 3, scope: !6529, file: !203, line: 701, type: !103)
!6534 = !DILocalVariable(name: "api", scope: !6529, file: !203, line: 704, type: !2719)
!6535 = !DILocation(line: 0, scope: !6529)
!6536 = !DILocation(line: 705, column: 40, scope: !6529)
!6537 = !DILocation(line: 707, column: 11, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6529, file: !203, line: 707, column: 6)
!6539 = !DILocation(line: 707, column: 21, scope: !6538)
!6540 = !DILocation(line: 707, column: 6, scope: !6529)
!6541 = !DILocation(line: 711, column: 9, scope: !6529)
!6542 = !DILocation(line: 711, column: 2, scope: !6529)
!6543 = !DILocation(line: 718, column: 1, scope: !6529)
!6544 = distinct !DISubprogram(name: "k_sem_give", scope: !3751, file: !3751, line: 1061, type: !6545, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6547)
!6545 = !DISubroutineType(types: !6546)
!6546 = !{null, !6119}
!6547 = !{!6548}
!6548 = !DILocalVariable(name: "sem", arg: 1, scope: !6544, file: !3751, line: 1061, type: !6119)
!6549 = !DILocation(line: 0, scope: !6544)
!6550 = !DILocation(line: 1070, column: 2, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6544, file: !3751, line: 1070, column: 2)
!6552 = !{i64 2155066006}
!6553 = !DILocation(line: 1071, column: 2, scope: !6544)
!6554 = !DILocation(line: 1072, column: 1, scope: !6544)
!6555 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !203, file: !203, line: 878, type: !2778, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6556)
!6556 = !{!6557, !6558}
!6557 = !DILocalVariable(name: "dev", arg: 1, scope: !6555, file: !203, line: 878, type: !2727)
!6558 = !DILocalVariable(name: "api", scope: !6555, file: !203, line: 881, type: !2719)
!6559 = !DILocation(line: 0, scope: !6555)
!6560 = !DILocation(line: 882, column: 40, scope: !6555)
!6561 = !DILocation(line: 884, column: 11, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6555, file: !203, line: 884, column: 6)
!6563 = !DILocation(line: 884, column: 26, scope: !6562)
!6564 = !DILocation(line: 884, column: 6, scope: !6555)
!6565 = !DILocation(line: 885, column: 3, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6562, file: !203, line: 884, column: 35)
!6567 = !DILocation(line: 886, column: 2, scope: !6566)
!6568 = !DILocation(line: 890, column: 1, scope: !6555)
!6569 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !203, file: !203, line: 1136, type: !2748, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6570)
!6570 = !{!6571, !6572}
!6571 = !DILocalVariable(name: "dev", arg: 1, scope: !6569, file: !203, line: 1136, type: !2727)
!6572 = !DILocalVariable(name: "api", scope: !6569, file: !203, line: 1139, type: !2719)
!6573 = !DILocation(line: 0, scope: !6569)
!6574 = !DILocation(line: 1140, column: 40, scope: !6569)
!6575 = !DILocation(line: 1142, column: 11, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6569, file: !203, line: 1142, column: 6)
!6577 = !DILocation(line: 1142, column: 22, scope: !6576)
!6578 = !DILocation(line: 1142, column: 6, scope: !6569)
!6579 = !DILocation(line: 1145, column: 9, scope: !6569)
!6580 = !DILocation(line: 1145, column: 2, scope: !6569)
!6581 = !DILocation(line: 1150, column: 1, scope: !6569)
!6582 = distinct !DISubprogram(name: "tty_set_rx_buf", scope: !5917, file: !5917, line: 265, type: !6583, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6585)
!6583 = !DISubroutineType(types: !6584)
!6584 = !{!103, !5922, !102, !344}
!6585 = !{!6586, !6587, !6588}
!6586 = !DILocalVariable(name: "tty", arg: 1, scope: !6582, file: !5917, line: 265, type: !5922)
!6587 = !DILocalVariable(name: "buf", arg: 2, scope: !6582, file: !5917, line: 265, type: !102)
!6588 = !DILocalVariable(name: "size", arg: 3, scope: !6582, file: !5917, line: 265, type: !344)
!6589 = !DILocation(line: 0, scope: !6582)
!6590 = !DILocation(line: 267, column: 27, scope: !6582)
!6591 = !DILocation(line: 267, column: 2, scope: !6582)
!6592 = !DILocation(line: 269, column: 7, scope: !6582)
!6593 = !DILocation(line: 269, column: 18, scope: !6582)
!6594 = !DILocation(line: 270, column: 7, scope: !6582)
!6595 = !DILocation(line: 270, column: 21, scope: !6582)
!6596 = !DILocation(line: 272, column: 11, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6582, file: !5917, line: 272, column: 6)
!6598 = !DILocation(line: 272, column: 6, scope: !6582)
!6599 = !DILocation(line: 273, column: 20, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6597, file: !5917, line: 272, column: 16)
!6601 = !DILocation(line: 273, column: 3, scope: !6600)
!6602 = !DILocation(line: 274, column: 27, scope: !6600)
!6603 = !DILocation(line: 274, column: 3, scope: !6600)
!6604 = !DILocation(line: 275, column: 2, scope: !6600)
!6605 = !DILocation(line: 277, column: 2, scope: !6582)
!6606 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !6006, file: !6006, line: 265, type: !2778, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6607)
!6607 = !{!6608}
!6608 = !DILocalVariable(name: "dev", arg: 1, scope: !6606, file: !6006, line: 265, type: !2727)
!6609 = !DILocation(line: 0, scope: !6606)
!6610 = !DILocation(line: 274, column: 2, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6606, file: !6006, line: 274, column: 2)
!6612 = !{i64 2155346239}
!6613 = !DILocation(line: 275, column: 2, scope: !6606)
!6614 = !DILocation(line: 276, column: 1, scope: !6606)
!6615 = distinct !DISubprogram(name: "k_sem_init", scope: !3751, file: !3751, line: 1026, type: !6616, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6618)
!6616 = !DISubroutineType(types: !6617)
!6617 = !{!103, !6119, !32, !32}
!6618 = !{!6619, !6620, !6621}
!6619 = !DILocalVariable(name: "sem", arg: 1, scope: !6615, file: !3751, line: 1026, type: !6119)
!6620 = !DILocalVariable(name: "initial_count", arg: 2, scope: !6615, file: !3751, line: 1026, type: !32)
!6621 = !DILocalVariable(name: "limit", arg: 3, scope: !6615, file: !3751, line: 1026, type: !32)
!6622 = !DILocation(line: 0, scope: !6615)
!6623 = !DILocation(line: 1036, column: 2, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6615, file: !3751, line: 1036, column: 2)
!6625 = !{i64 2155065870}
!6626 = !DILocation(line: 1037, column: 9, scope: !6615)
!6627 = !DILocation(line: 1037, column: 2, scope: !6615)
!6628 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !6006, file: !6006, line: 241, type: !2778, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6629)
!6629 = !{!6630}
!6630 = !DILocalVariable(name: "dev", arg: 1, scope: !6628, file: !6006, line: 241, type: !2727)
!6631 = !DILocation(line: 0, scope: !6628)
!6632 = !DILocation(line: 250, column: 2, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6628, file: !6006, line: 250, column: 2)
!6634 = !{i64 2155346171}
!6635 = !DILocation(line: 251, column: 2, scope: !6628)
!6636 = !DILocation(line: 252, column: 1, scope: !6628)
!6637 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !203, file: !203, line: 934, type: !2778, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6638)
!6638 = !{!6639, !6640}
!6639 = !DILocalVariable(name: "dev", arg: 1, scope: !6637, file: !203, line: 934, type: !2727)
!6640 = !DILocalVariable(name: "api", scope: !6637, file: !203, line: 937, type: !2719)
!6641 = !DILocation(line: 0, scope: !6637)
!6642 = !DILocation(line: 938, column: 40, scope: !6637)
!6643 = !DILocation(line: 940, column: 11, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6637, file: !203, line: 940, column: 6)
!6645 = !DILocation(line: 940, column: 25, scope: !6644)
!6646 = !DILocation(line: 940, column: 6, scope: !6637)
!6647 = !DILocation(line: 941, column: 3, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6644, file: !203, line: 940, column: 34)
!6649 = !DILocation(line: 942, column: 2, scope: !6648)
!6650 = !DILocation(line: 946, column: 1, scope: !6637)
!6651 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !203, file: !203, line: 955, type: !2778, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6652)
!6652 = !{!6653, !6654}
!6653 = !DILocalVariable(name: "dev", arg: 1, scope: !6651, file: !203, line: 955, type: !2727)
!6654 = !DILocalVariable(name: "api", scope: !6651, file: !203, line: 958, type: !2719)
!6655 = !DILocation(line: 0, scope: !6651)
!6656 = !DILocation(line: 959, column: 40, scope: !6651)
!6657 = !DILocation(line: 961, column: 11, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6651, file: !203, line: 961, column: 6)
!6659 = !DILocation(line: 961, column: 26, scope: !6658)
!6660 = !DILocation(line: 961, column: 6, scope: !6651)
!6661 = !DILocation(line: 962, column: 3, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6658, file: !203, line: 961, column: 35)
!6663 = !DILocation(line: 963, column: 2, scope: !6662)
!6664 = !DILocation(line: 967, column: 1, scope: !6651)
!6665 = distinct !DISubprogram(name: "tty_set_tx_buf", scope: !5917, file: !5917, line: 280, type: !6583, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !6666)
!6666 = !{!6667, !6668, !6669}
!6667 = !DILocalVariable(name: "tty", arg: 1, scope: !6665, file: !5917, line: 280, type: !5922)
!6668 = !DILocalVariable(name: "buf", arg: 2, scope: !6665, file: !5917, line: 280, type: !102)
!6669 = !DILocalVariable(name: "size", arg: 3, scope: !6665, file: !5917, line: 280, type: !344)
!6670 = !DILocation(line: 0, scope: !6665)
!6671 = !DILocation(line: 282, column: 27, scope: !6665)
!6672 = !DILocation(line: 282, column: 2, scope: !6665)
!6673 = !DILocation(line: 284, column: 7, scope: !6665)
!6674 = !DILocation(line: 284, column: 18, scope: !6665)
!6675 = !DILocation(line: 285, column: 7, scope: !6665)
!6676 = !DILocation(line: 285, column: 21, scope: !6665)
!6677 = !DILocation(line: 287, column: 19, scope: !6665)
!6678 = !DILocation(line: 287, column: 32, scope: !6665)
!6679 = !DILocation(line: 287, column: 2, scope: !6665)
!6680 = !DILocation(line: 293, column: 2, scope: !6665)
!6681 = distinct !DISubprogram(name: "console_write", scope: !288, file: !288, line: 18, type: !6682, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6684)
!6682 = !DISubroutineType(types: !6683)
!6683 = !{!5920, !102, !13, !344}
!6684 = !{!6685, !6686, !6687}
!6685 = !DILocalVariable(name: "dummy", arg: 1, scope: !6681, file: !288, line: 18, type: !102)
!6686 = !DILocalVariable(name: "buf", arg: 2, scope: !6681, file: !288, line: 18, type: !13)
!6687 = !DILocalVariable(name: "size", arg: 3, scope: !6681, file: !288, line: 18, type: !344)
!6688 = !DILocation(line: 0, scope: !6681)
!6689 = !DILocation(line: 22, column: 9, scope: !6681)
!6690 = !DILocation(line: 22, column: 2, scope: !6681)
!6691 = distinct !DISubprogram(name: "console_read", scope: !288, file: !288, line: 25, type: !6692, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6694)
!6692 = !DISubroutineType(types: !6693)
!6693 = !{!5920, !102, !102, !344}
!6694 = !{!6695, !6696, !6697}
!6695 = !DILocalVariable(name: "dummy", arg: 1, scope: !6691, file: !288, line: 25, type: !102)
!6696 = !DILocalVariable(name: "buf", arg: 2, scope: !6691, file: !288, line: 25, type: !102)
!6697 = !DILocalVariable(name: "size", arg: 3, scope: !6691, file: !288, line: 25, type: !344)
!6698 = !DILocation(line: 0, scope: !6691)
!6699 = !DILocation(line: 29, column: 9, scope: !6691)
!6700 = !DILocation(line: 29, column: 2, scope: !6691)
!6701 = distinct !DISubprogram(name: "console_putchar", scope: !288, file: !288, line: 32, type: !1093, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6702)
!6702 = !{!6703}
!6703 = !DILocalVariable(name: "c", arg: 1, scope: !6701, file: !288, line: 32, type: !146)
!6704 = !DILocation(line: 0, scope: !6701)
!6705 = !DILocation(line: 34, column: 9, scope: !6701)
!6706 = !DILocation(line: 34, column: 2, scope: !6701)
!6707 = distinct !DISubprogram(name: "console_getchar", scope: !288, file: !288, line: 37, type: !6708, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6710)
!6708 = !DISubroutineType(types: !6709)
!6709 = !{!103}
!6710 = !{!6711, !6712}
!6711 = !DILocalVariable(name: "c", scope: !6707, file: !288, line: 39, type: !154)
!6712 = !DILocalVariable(name: "res", scope: !6707, file: !288, line: 40, type: !103)
!6713 = !DILocation(line: 39, column: 2, scope: !6707)
!6714 = !DILocation(line: 0, scope: !6707)
!6715 = !DILocation(line: 42, column: 8, scope: !6707)
!6716 = !DILocation(line: 43, column: 10, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6707, file: !288, line: 43, column: 6)
!6718 = !DILocation(line: 43, column: 6, scope: !6707)
!6719 = !DILocation(line: 48, column: 1, scope: !6707)
!6720 = distinct !DISubprogram(name: "console_init", scope: !288, file: !288, line: 50, type: !6708, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6721)
!6721 = !{!6722, !6723, !6724}
!6722 = !DILocalVariable(name: "uart_dev", scope: !6720, file: !288, line: 52, type: !209)
!6723 = !DILocalVariable(name: "ret", scope: !6720, file: !288, line: 53, type: !103)
!6724 = !DILocalVariable(name: "api", scope: !6725, file: !288, line: 68, type: !200)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !288, line: 67, column: 71)
!6726 = distinct !DILexicalBlock(scope: !6720, file: !288, line: 67, column: 6)
!6727 = !DILocation(line: 0, scope: !6720)
!6728 = !DILocation(line: 56, column: 7, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6720, file: !288, line: 56, column: 6)
!6730 = !DILocation(line: 56, column: 6, scope: !6720)
!6731 = !DILocation(line: 60, column: 8, scope: !6720)
!6732 = !DILocation(line: 62, column: 6, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6720, file: !288, line: 62, column: 6)
!6734 = !DILocation(line: 62, column: 6, scope: !6720)
!6735 = !DILocation(line: 69, column: 46, scope: !6725)
!6736 = !DILocation(line: 0, scope: !6725)
!6737 = !DILocation(line: 70, column: 13, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6725, file: !288, line: 70, column: 7)
!6739 = !DILocation(line: 70, column: 8, scope: !6738)
!6740 = !DILocation(line: 75, column: 2, scope: !6720)
!6741 = !DILocation(line: 76, column: 2, scope: !6720)
!6742 = !DILocation(line: 78, column: 2, scope: !6720)
!6743 = !DILocation(line: 79, column: 1, scope: !6720)
!6744 = distinct !DISubprogram(name: "device_is_ready", scope: !6745, file: !6745, line: 47, type: !6746, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6748)
!6745 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!6746 = !DISubroutineType(types: !6747)
!6747 = !{!157, !209}
!6748 = !{!6749}
!6749 = !DILocalVariable(name: "dev", arg: 1, scope: !6744, file: !6745, line: 47, type: !209)
!6750 = !DILocation(line: 0, scope: !6744)
!6751 = !DILocation(line: 55, column: 2, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6744, file: !6745, line: 55, column: 2)
!6753 = !{i64 2155258452}
!6754 = !DILocation(line: 56, column: 9, scope: !6744)
!6755 = !DILocation(line: 56, column: 2, scope: !6744)
!6756 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !6746, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6757)
!6757 = !{!6758}
!6758 = !DILocalVariable(name: "dev", arg: 1, scope: !6756, file: !141, line: 730, type: !209)
!6759 = !DILocation(line: 0, scope: !6756)
!6760 = !DILocation(line: 732, column: 9, scope: !6756)
!6761 = !DILocation(line: 732, column: 2, scope: !6756)
!6762 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6763, file: !6763, line: 57, type: !6764, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !6810)
!6763 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6764 = !DISubroutineType(types: !6765)
!6765 = !{null, !32, !6766}
!6766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6767, size: 32)
!6767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6768)
!6768 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2918, line: 141, baseType: !6769)
!6769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2918, line: 97, size: 256, elements: !6770)
!6770 = !{!6771}
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6769, file: !2918, line: 107, baseType: !6772, size: 256)
!6772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2918, line: 98, size: 256, elements: !6773)
!6773 = !{!6774, !6779, !6784, !6789, !6794, !6799, !6804, !6809}
!6774 = !DIDerivedType(tag: DW_TAG_member, scope: !6772, file: !2918, line: 99, baseType: !6775, size: 32)
!6775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6772, file: !2918, line: 99, size: 32, elements: !6776)
!6776 = !{!6777, !6778}
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6775, file: !2918, line: 99, baseType: !121, size: 32)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6775, file: !2918, line: 99, baseType: !121, size: 32)
!6779 = !DIDerivedType(tag: DW_TAG_member, scope: !6772, file: !2918, line: 100, baseType: !6780, size: 32, offset: 32)
!6780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6772, file: !2918, line: 100, size: 32, elements: !6781)
!6781 = !{!6782, !6783}
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6780, file: !2918, line: 100, baseType: !121, size: 32)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6780, file: !2918, line: 100, baseType: !121, size: 32)
!6784 = !DIDerivedType(tag: DW_TAG_member, scope: !6772, file: !2918, line: 101, baseType: !6785, size: 32, offset: 64)
!6785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6772, file: !2918, line: 101, size: 32, elements: !6786)
!6786 = !{!6787, !6788}
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6785, file: !2918, line: 101, baseType: !121, size: 32)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6785, file: !2918, line: 101, baseType: !121, size: 32)
!6789 = !DIDerivedType(tag: DW_TAG_member, scope: !6772, file: !2918, line: 102, baseType: !6790, size: 32, offset: 96)
!6790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6772, file: !2918, line: 102, size: 32, elements: !6791)
!6791 = !{!6792, !6793}
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6790, file: !2918, line: 102, baseType: !121, size: 32)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6790, file: !2918, line: 102, baseType: !121, size: 32)
!6794 = !DIDerivedType(tag: DW_TAG_member, scope: !6772, file: !2918, line: 103, baseType: !6795, size: 32, offset: 128)
!6795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6772, file: !2918, line: 103, size: 32, elements: !6796)
!6796 = !{!6797, !6798}
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6795, file: !2918, line: 103, baseType: !121, size: 32)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6795, file: !2918, line: 103, baseType: !121, size: 32)
!6799 = !DIDerivedType(tag: DW_TAG_member, scope: !6772, file: !2918, line: 104, baseType: !6800, size: 32, offset: 160)
!6800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6772, file: !2918, line: 104, size: 32, elements: !6801)
!6801 = !{!6802, !6803}
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6800, file: !2918, line: 104, baseType: !121, size: 32)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6800, file: !2918, line: 104, baseType: !121, size: 32)
!6804 = !DIDerivedType(tag: DW_TAG_member, scope: !6772, file: !2918, line: 105, baseType: !6805, size: 32, offset: 192)
!6805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6772, file: !2918, line: 105, size: 32, elements: !6806)
!6806 = !{!6807, !6808}
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6805, file: !2918, line: 105, baseType: !121, size: 32)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6805, file: !2918, line: 105, baseType: !121, size: 32)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6772, file: !2918, line: 106, baseType: !121, size: 32, offset: 224)
!6810 = !{!6811, !6812}
!6811 = !DILocalVariable(name: "reason", arg: 1, scope: !6762, file: !6763, line: 57, type: !32)
!6812 = !DILocalVariable(name: "esf", arg: 2, scope: !6762, file: !6763, line: 57, type: !6766)
!6813 = !DILocation(line: 0, scope: !6762)
!6814 = !DILocation(line: 63, column: 2, scope: !6762)
!6815 = !DILocation(line: 64, column: 1, scope: !6762)
!6816 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6763, file: !6763, line: 82, type: !6817, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !6832)
!6817 = !DISubroutineType(types: !6818)
!6818 = !{null, !6766, !6819}
!6819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6820, size: 32)
!6820 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !424, line: 37, baseType: !6821)
!6821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !6822)
!6822 = !{!6823, !6824, !6825, !6826, !6827, !6828, !6829, !6830, !6831}
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6821, file: !424, line: 26, baseType: !121, size: 32)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6821, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6821, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6821, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6821, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6821, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6821, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6821, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6821, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!6832 = !{!6833, !6834, !6835}
!6833 = !DILocalVariable(name: "esf", arg: 1, scope: !6816, file: !6763, line: 82, type: !6766)
!6834 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6816, file: !6763, line: 82, type: !6819)
!6835 = !DILocalVariable(name: "reason", scope: !6816, file: !6763, line: 88, type: !32)
!6836 = !DILocation(line: 0, scope: !6816)
!6837 = !DILocation(line: 88, column: 35, scope: !6816)
!6838 = !DILocation(line: 108, column: 2, scope: !6816)
!6839 = !DILocation(line: 131, column: 1, scope: !6816)
!6840 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6763, file: !6763, line: 133, type: !6841, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !6843)
!6841 = !DISubroutineType(types: !6842)
!6842 = !{null, !102}
!6843 = !{!6844, !6845, !6846}
!6844 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6840, file: !6763, line: 133, type: !102)
!6845 = !DILocalVariable(name: "ssf_contents", scope: !6840, file: !6763, line: 135, type: !861)
!6846 = !DILocalVariable(name: "oops_esf", scope: !6840, file: !6763, line: 136, type: !6768)
!6847 = !DILocation(line: 0, scope: !6840)
!6848 = !DILocation(line: 136, column: 2, scope: !6840)
!6849 = !DILocation(line: 136, column: 15, scope: !6840)
!6850 = !DILocation(line: 139, column: 22, scope: !6840)
!6851 = !DILocation(line: 139, column: 17, scope: !6840)
!6852 = !DILocation(line: 139, column: 20, scope: !6840)
!6853 = !DILocation(line: 141, column: 2, scope: !6840)
!6854 = !DILocation(line: 142, column: 2, scope: !6840)
!6855 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6856, file: !6856, line: 40, type: !5895, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2809, retainedNodes: !6857)
!6856 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6857 = !{!6858}
!6858 = !DILocalVariable(name: "irq", arg: 1, scope: !6855, file: !6856, line: 40, type: !32)
!6859 = !DILocation(line: 0, scope: !6855)
!6860 = !DILocation(line: 42, column: 2, scope: !6855)
!6861 = !DILocation(line: 43, column: 1, scope: !6855)
!6862 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !495, file: !495, line: 1684, type: !6863, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2809, retainedNodes: !6865)
!6863 = !DISubroutineType(types: !6864)
!6864 = !{null, !759}
!6865 = !{!6866}
!6866 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6862, file: !495, line: 1684, type: !759)
!6867 = !DILocation(line: 0, scope: !6862)
!6868 = !DILocation(line: 1686, column: 23, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6862, file: !495, line: 1686, column: 7)
!6870 = !DILocation(line: 1686, column: 7, scope: !6862)
!6871 = !DILocation(line: 1688, column: 5, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6869, file: !495, line: 1687, column: 3)
!6873 = !{i64 2151254382}
!6874 = !DILocation(line: 1689, column: 81, scope: !6872)
!6875 = !DILocation(line: 1689, column: 60, scope: !6872)
!6876 = !DILocation(line: 1689, column: 34, scope: !6872)
!6877 = !DILocation(line: 1689, column: 5, scope: !6872)
!6878 = !DILocation(line: 1689, column: 43, scope: !6872)
!6879 = !DILocation(line: 1690, column: 5, scope: !6872)
!6880 = !{i64 2151254496}
!6881 = !DILocation(line: 1691, column: 3, scope: !6872)
!6882 = !DILocation(line: 1692, column: 1, scope: !6862)
!6883 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6856, file: !6856, line: 45, type: !5895, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2809, retainedNodes: !6884)
!6884 = !{!6885}
!6885 = !DILocalVariable(name: "irq", arg: 1, scope: !6883, file: !6856, line: 45, type: !32)
!6886 = !DILocation(line: 0, scope: !6883)
!6887 = !DILocation(line: 47, column: 2, scope: !6883)
!6888 = !DILocation(line: 48, column: 1, scope: !6883)
!6889 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !495, file: !495, line: 1722, type: !6863, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2809, retainedNodes: !6890)
!6890 = !{!6891}
!6891 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6889, file: !495, line: 1722, type: !759)
!6892 = !DILocation(line: 0, scope: !6889)
!6893 = !DILocation(line: 1724, column: 23, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6889, file: !495, line: 1724, column: 7)
!6895 = !DILocation(line: 1724, column: 7, scope: !6889)
!6896 = !DILocation(line: 1726, column: 81, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6894, file: !495, line: 1725, column: 3)
!6898 = !DILocation(line: 1726, column: 60, scope: !6897)
!6899 = !DILocation(line: 1726, column: 34, scope: !6897)
!6900 = !DILocation(line: 1726, column: 5, scope: !6897)
!6901 = !DILocation(line: 1726, column: 43, scope: !6897)
!6902 = !DILocation(line: 271, column: 3, scope: !6903, inlinedAt: !6905)
!6903 = distinct !DISubprogram(name: "__DSB", scope: !6904, file: !6904, line: 269, type: !3318, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2809, retainedNodes: !461)
!6904 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6905 = distinct !DILocation(line: 1727, column: 5, scope: !6897)
!6906 = !{i64 3708765}
!6907 = !DILocation(line: 260, column: 3, scope: !6908, inlinedAt: !6909)
!6908 = distinct !DISubprogram(name: "__ISB", scope: !6904, file: !6904, line: 258, type: !3318, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2809, retainedNodes: !461)
!6909 = distinct !DILocation(line: 1728, column: 5, scope: !6897)
!6910 = !{i64 3708482}
!6911 = !DILocation(line: 1729, column: 3, scope: !6897)
!6912 = !DILocation(line: 1730, column: 1, scope: !6889)
!6913 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6856, file: !6856, line: 50, type: !6914, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2809, retainedNodes: !6916)
!6914 = !DISubroutineType(types: !6915)
!6915 = !{!103, !32}
!6916 = !{!6917}
!6917 = !DILocalVariable(name: "irq", arg: 1, scope: !6913, file: !6856, line: 50, type: !32)
!6918 = !DILocation(line: 0, scope: !6913)
!6919 = !DILocation(line: 52, column: 20, scope: !6913)
!6920 = !DILocation(line: 52, column: 9, scope: !6913)
!6921 = !DILocation(line: 52, column: 41, scope: !6913)
!6922 = !DILocation(line: 52, column: 39, scope: !6913)
!6923 = !DILocation(line: 52, column: 2, scope: !6913)
!6924 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6856, file: !6856, line: 64, type: !6925, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2809, retainedNodes: !6927)
!6925 = !DISubroutineType(types: !6926)
!6926 = !{null, !32, !32, !121}
!6927 = !{!6928, !6929, !6930}
!6928 = !DILocalVariable(name: "irq", arg: 1, scope: !6924, file: !6856, line: 64, type: !32)
!6929 = !DILocalVariable(name: "prio", arg: 2, scope: !6924, file: !6856, line: 64, type: !32)
!6930 = !DILocalVariable(name: "flags", arg: 3, scope: !6924, file: !6856, line: 64, type: !121)
!6931 = !DILocation(line: 0, scope: !6924)
!6932 = !DILocation(line: 83, column: 8, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !6856, line: 82, column: 9)
!6934 = distinct !DILexicalBlock(scope: !6924, file: !6856, line: 76, column: 6)
!6935 = !DILocation(line: 95, column: 2, scope: !6924)
!6936 = !DILocation(line: 96, column: 1, scope: !6924)
!6937 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6938, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2809, retainedNodes: !6940)
!6938 = !DISubroutineType(types: !6939)
!6939 = !{null, !759, !121}
!6940 = !{!6941, !6942}
!6941 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6937, file: !495, line: 1814, type: !759)
!6942 = !DILocalVariable(name: "priority", arg: 2, scope: !6937, file: !495, line: 1814, type: !121)
!6943 = !DILocation(line: 0, scope: !6937)
!6944 = !DILocation(line: 0, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6937, file: !495, line: 1816, column: 7)
!6946 = !DILocation(line: 1816, column: 7, scope: !6937)
!6947 = !DILocation(line: 1824, column: 1, scope: !6937)
!6948 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6856, file: !6856, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2809, retainedNodes: !6949)
!6949 = !{!6950}
!6950 = !DILocalVariable(name: "unused", arg: 1, scope: !6948, file: !6856, line: 155, type: !13)
!6951 = !DILocation(line: 0, scope: !6948)
!6952 = !DILocation(line: 159, column: 2, scope: !6948)
!6953 = !DILocation(line: 160, column: 1, scope: !6948)
!6954 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6955, file: !6955, line: 87, type: !3318, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !461)
!6955 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6956 = !DILocation(line: 89, column: 2, scope: !6954)
!6957 = !DILocation(line: 90, column: 2, scope: !6954)
!6958 = !DILocation(line: 91, column: 1, scope: !6954)
!6959 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6955, file: !6955, line: 23, type: !3318, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!6960 = !DISubprogram(name: "z_arm_int_exit", scope: !6961, file: !6961, line: 153, type: !3318, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!6961 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6962 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6963, file: !6963, line: 256, type: !3318, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !461)
!6963 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6964 = !DILocation(line: 258, column: 2, scope: !6962)
!6965 = !DILocation(line: 260, column: 2, scope: !6962)
!6966 = !DILocation(line: 262, column: 2, scope: !6962)
!6967 = !DILocation(line: 263, column: 2, scope: !6962)
!6968 = !DILocation(line: 267, column: 2, scope: !6962)
!6969 = !DILocation(line: 268, column: 2, scope: !6962)
!6970 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6963, file: !6963, line: 53, type: !3318, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !461)
!6971 = !DILocation(line: 55, column: 12, scope: !6970)
!6972 = !DILocation(line: 271, column: 3, scope: !6973, inlinedAt: !6974)
!6973 = distinct !DISubprogram(name: "__DSB", scope: !6904, file: !6904, line: 269, type: !3318, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !461)
!6974 = distinct !DILocation(line: 56, column: 2, scope: !6970)
!6975 = !{i64 3707436}
!6976 = !DILocation(line: 260, column: 3, scope: !6977, inlinedAt: !6978)
!6977 = distinct !DISubprogram(name: "__ISB", scope: !6904, file: !6904, line: 258, type: !3318, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !461)
!6978 = distinct !DILocation(line: 57, column: 2, scope: !6970)
!6979 = !{i64 3707153}
!6980 = !DILocation(line: 58, column: 1, scope: !6970)
!6981 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6963, file: !6963, line: 96, type: !3318, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !461)
!6982 = !DILocation(line: 103, column: 13, scope: !6981)
!6983 = !DILocation(line: 975, column: 3, scope: !6984, inlinedAt: !6989)
!6984 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6904, file: !6904, line: 971, type: !6985, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !6987)
!6985 = !DISubroutineType(types: !6986)
!6986 = !{!121}
!6987 = !{!6988}
!6988 = !DILocalVariable(name: "result", scope: !6984, file: !6904, line: 973, type: !121)
!6989 = distinct !DILocation(line: 189, column: 16, scope: !6981)
!6990 = !{i64 3728266}
!6991 = !DILocation(line: 0, scope: !6984, inlinedAt: !6989)
!6992 = !DILocation(line: 189, column: 32, scope: !6981)
!6993 = !DILocalVariable(name: "control", arg: 1, scope: !6994, file: !6904, line: 1001, type: !121)
!6994 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6904, file: !6904, line: 1001, type: !6995, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !6997)
!6995 = !DISubroutineType(types: !6996)
!6996 = !{null, !121}
!6997 = !{!6993}
!6998 = !DILocation(line: 0, scope: !6994, inlinedAt: !6999)
!6999 = distinct !DILocation(line: 189, column: 2, scope: !6981)
!7000 = !DILocation(line: 1003, column: 3, scope: !6994, inlinedAt: !6999)
!7001 = !{i64 3728986}
!7002 = !DILocation(line: 260, column: 3, scope: !6977, inlinedAt: !7003)
!7003 = distinct !DILocation(line: 1004, column: 3, scope: !6994, inlinedAt: !6999)
!7004 = !DILocation(line: 191, column: 1, scope: !6981)
!7005 = distinct !DISubprogram(name: "arch_swap", scope: !7006, file: !7006, line: 33, type: !6914, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !7007)
!7006 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7007 = !{!7008}
!7008 = !DILocalVariable(name: "key", arg: 1, scope: !7005, file: !7006, line: 33, type: !32)
!7009 = !DILocation(line: 0, scope: !7005)
!7010 = !DILocation(line: 36, column: 2, scope: !7005)
!7011 = !DILocation(line: 36, column: 17, scope: !7005)
!7012 = !DILocation(line: 36, column: 25, scope: !7005)
!7013 = !DILocation(line: 37, column: 37, scope: !7005)
!7014 = !DILocation(line: 37, column: 17, scope: !7005)
!7015 = !DILocation(line: 37, column: 35, scope: !7005)
!7016 = !DILocation(line: 41, column: 12, scope: !7005)
!7017 = !DILocalVariable(name: "key", arg: 1, scope: !7018, file: !5884, line: 84, type: !32)
!7018 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !7019)
!7019 = !{!7017}
!7020 = !DILocation(line: 0, scope: !7018, inlinedAt: !7021)
!7021 = distinct !DILocation(line: 44, column: 2, scope: !7005)
!7022 = !DILocation(line: 95, column: 2, scope: !7018, inlinedAt: !7021)
!7023 = !{i64 2277937}
!7024 = !DILocation(line: 53, column: 9, scope: !7005)
!7025 = !DILocation(line: 53, column: 24, scope: !7005)
!7026 = !DILocation(line: 53, column: 2, scope: !7005)
!7027 = distinct !DISubprogram(name: "arch_new_thread", scope: !7028, file: !7028, line: 56, type: !7029, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !7136)
!7028 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7029 = !DISubroutineType(types: !7030)
!7030 = !{null, !7031, !7131, !1087, !3629, !102, !102, !102}
!7031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7032, size: 32)
!7032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !7033)
!7033 = !{!7034, !7092, !7104, !7105, !7106, !7107, !7113, !7126}
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7032, file: !355, line: 247, baseType: !7035, size: 384)
!7035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !7036)
!7036 = !{!7037, !7061, !7068, !7069, !7070, !7079, !7080, !7081}
!7037 = !DIDerivedType(tag: DW_TAG_member, scope: !7035, file: !355, line: 60, baseType: !7038, size: 64)
!7038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7035, file: !355, line: 60, size: 64, elements: !7039)
!7039 = !{!7040, !7055}
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7038, file: !355, line: 61, baseType: !7041, size: 64)
!7041 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !7042)
!7042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !7043)
!7043 = !{!7044, !7050}
!7044 = !DIDerivedType(tag: DW_TAG_member, scope: !7042, file: !309, line: 38, baseType: !7045, size: 32)
!7045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7042, file: !309, line: 38, size: 32, elements: !7046)
!7046 = !{!7047, !7049}
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7045, file: !309, line: 39, baseType: !7048, size: 32)
!7048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7042, size: 32)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7045, file: !309, line: 40, baseType: !7048, size: 32)
!7050 = !DIDerivedType(tag: DW_TAG_member, scope: !7042, file: !309, line: 42, baseType: !7051, size: 32, offset: 32)
!7051 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7042, file: !309, line: 42, size: 32, elements: !7052)
!7052 = !{!7053, !7054}
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7051, file: !309, line: 43, baseType: !7048, size: 32)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7051, file: !309, line: 44, baseType: !7048, size: 32)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7038, file: !355, line: 62, baseType: !7056, size: 64)
!7056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !7057)
!7057 = !{!7058}
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7056, file: !380, line: 50, baseType: !7059, size: 64)
!7059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7060, size: 64, elements: !385)
!7060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7056, size: 32)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7035, file: !355, line: 68, baseType: !7062, size: 32, offset: 64)
!7062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7063, size: 32)
!7063 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !7064)
!7064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !7065)
!7065 = !{!7066}
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7064, file: !304, line: 232, baseType: !7067, size: 64)
!7067 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !7042)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7035, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7035, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!7070 = !DIDerivedType(tag: DW_TAG_member, scope: !7035, file: !355, line: 90, baseType: !7071, size: 16, offset: 112)
!7071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7035, file: !355, line: 90, size: 16, elements: !7072)
!7072 = !{!7073, !7078}
!7073 = !DIDerivedType(tag: DW_TAG_member, scope: !7071, file: !355, line: 91, baseType: !7074, size: 16)
!7074 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7071, file: !355, line: 91, size: 16, elements: !7075)
!7075 = !{!7076, !7077}
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7074, file: !355, line: 96, baseType: !403, size: 8)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7074, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7071, file: !355, line: 100, baseType: !328, size: 16)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7035, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7035, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7035, file: !355, line: 131, baseType: !7082, size: 192, offset: 192)
!7082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !7083)
!7083 = !{!7084, !7085, !7091}
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7082, file: !304, line: 245, baseType: !7041, size: 64)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7082, file: !304, line: 246, baseType: !7086, size: 32, offset: 64)
!7086 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !7087)
!7087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7088, size: 32)
!7088 = !DISubroutineType(types: !7089)
!7089 = !{null, !7090}
!7090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7082, size: 32)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7082, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7032, file: !355, line: 250, baseType: !7093, size: 288, offset: 384)
!7093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !7094)
!7094 = !{!7095, !7096, !7097, !7098, !7099, !7100, !7101, !7102, !7103}
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7093, file: !424, line: 26, baseType: !121, size: 32)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7093, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7093, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7093, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7093, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7093, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7093, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7093, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7093, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7032, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7032, file: !355, line: 256, baseType: !7063, size: 64, offset: 704)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7032, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7032, file: !355, line: 300, baseType: !7108, size: 96, offset: 800)
!7108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !7109)
!7109 = !{!7110, !7111, !7112}
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7108, file: !355, line: 153, baseType: !22, size: 32)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7108, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7108, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7032, file: !355, line: 325, baseType: !7114, size: 32, offset: 896)
!7114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7115, size: 32)
!7115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !7116)
!7116 = !{!7117, !7123, !7124}
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7115, file: !300, line: 5074, baseType: !7118, size: 96)
!7118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !7119)
!7119 = !{!7120, !7121, !7122}
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7118, file: !450, line: 57, baseType: !453, size: 32)
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7118, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7118, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7115, file: !300, line: 5075, baseType: !7063, size: 64, offset: 96)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7115, file: !300, line: 5076, baseType: !7125, offset: 160)
!7125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7032, file: !355, line: 343, baseType: !7127, size: 64, offset: 928)
!7127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !7128)
!7128 = !{!7129, !7130}
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7127, file: !424, line: 63, baseType: !121, size: 32)
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7127, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!7131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7132, size: 32)
!7132 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3630, line: 44, baseType: !7133)
!7133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2258, line: 47, size: 8, elements: !7134)
!7134 = !{!7135}
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7133, file: !2258, line: 48, baseType: !146, size: 8)
!7136 = !{!7137, !7138, !7139, !7140, !7141, !7142, !7143, !7144}
!7137 = !DILocalVariable(name: "thread", arg: 1, scope: !7027, file: !7028, line: 56, type: !7031)
!7138 = !DILocalVariable(name: "stack", arg: 2, scope: !7027, file: !7028, line: 56, type: !7131)
!7139 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7027, file: !7028, line: 57, type: !1087)
!7140 = !DILocalVariable(name: "entry", arg: 4, scope: !7027, file: !7028, line: 57, type: !3629)
!7141 = !DILocalVariable(name: "p1", arg: 5, scope: !7027, file: !7028, line: 58, type: !102)
!7142 = !DILocalVariable(name: "p2", arg: 6, scope: !7027, file: !7028, line: 58, type: !102)
!7143 = !DILocalVariable(name: "p3", arg: 7, scope: !7027, file: !7028, line: 58, type: !102)
!7144 = !DILocalVariable(name: "iframe", scope: !7027, file: !7028, line: 60, type: !2916)
!7145 = !DILocation(line: 0, scope: !7027)
!7146 = !DILocation(line: 85, column: 11, scope: !7027)
!7147 = !DILocation(line: 93, column: 10, scope: !7027)
!7148 = !DILocation(line: 98, column: 13, scope: !7027)
!7149 = !DILocation(line: 100, column: 15, scope: !7027)
!7150 = !DILocation(line: 100, column: 10, scope: !7027)
!7151 = !DILocation(line: 100, column: 13, scope: !7027)
!7152 = !DILocation(line: 101, column: 15, scope: !7027)
!7153 = !DILocation(line: 101, column: 10, scope: !7027)
!7154 = !DILocation(line: 101, column: 13, scope: !7027)
!7155 = !DILocation(line: 102, column: 15, scope: !7027)
!7156 = !DILocation(line: 102, column: 10, scope: !7027)
!7157 = !DILocation(line: 102, column: 13, scope: !7027)
!7158 = !DILocation(line: 103, column: 15, scope: !7027)
!7159 = !DILocation(line: 103, column: 10, scope: !7027)
!7160 = !DILocation(line: 103, column: 13, scope: !7027)
!7161 = !DILocation(line: 106, column: 10, scope: !7027)
!7162 = !DILocation(line: 106, column: 15, scope: !7027)
!7163 = !DILocation(line: 122, column: 29, scope: !7027)
!7164 = !DILocation(line: 122, column: 23, scope: !7027)
!7165 = !DILocation(line: 122, column: 27, scope: !7027)
!7166 = !DILocation(line: 123, column: 15, scope: !7027)
!7167 = !DILocation(line: 123, column: 23, scope: !7027)
!7168 = !DILocation(line: 143, column: 1, scope: !7027)
!7169 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7028, file: !7028, line: 385, type: !7170, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !7173)
!7170 = !DISubroutineType(types: !7171)
!7171 = !{!121, !7172, !7172}
!7172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!7173 = !{!7174, !7175, !7176, !7179}
!7174 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7169, file: !7028, line: 385, type: !7172)
!7175 = !DILocalVariable(name: "psp", arg: 2, scope: !7169, file: !7028, line: 385, type: !7172)
!7176 = !DILocalVariable(name: "thread", scope: !7169, file: !7028, line: 388, type: !7177)
!7177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7178, size: 32)
!7178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7032)
!7179 = !DILocalVariable(name: "guard_len", scope: !7169, file: !7028, line: 405, type: !121)
!7180 = !DILocation(line: 0, scope: !7169)
!7181 = !DILocation(line: 388, column: 34, scope: !7169)
!7182 = !DILocation(line: 390, column: 13, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7169, file: !7028, line: 390, column: 6)
!7184 = !DILocation(line: 390, column: 6, scope: !7169)
!7185 = !DILocation(line: 438, column: 6, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7169, file: !7028, line: 438, column: 6)
!7187 = !DILocation(line: 438, column: 6, scope: !7169)
!7188 = !DILocation(line: 442, column: 3, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7186, file: !7028, line: 440, column: 22)
!7190 = !DILocation(line: 455, column: 1, scope: !7169)
!7191 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7028, file: !7028, line: 530, type: !7192, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !7194)
!7192 = !DISubroutineType(types: !7193)
!7193 = !{null, !7031, !1087, !3629}
!7194 = !{!7195, !7196, !7197}
!7195 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7191, file: !7028, line: 530, type: !7031)
!7196 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7191, file: !7028, line: 530, type: !1087)
!7197 = !DILocalVariable(name: "_main", arg: 3, scope: !7191, file: !7028, line: 531, type: !3629)
!7198 = !DILocation(line: 0, scope: !7191)
!7199 = !DILocation(line: 535, column: 11, scope: !7191)
!7200 = !DILocation(line: 560, column: 2, scope: !7191)
!7201 = !DILocation(line: 576, column: 2, scope: !7191)
!7202 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7203 = !DILocation(line: 603, column: 2, scope: !7191)
!7204 = distinct !DISubprogram(name: "z_arm_fault", scope: !7205, file: !7205, line: 1036, type: !7206, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7221)
!7205 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7206 = !DISubroutineType(types: !7207)
!7207 = !{null, !121, !121, !121, !7208}
!7208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7209, size: 32)
!7209 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !424, line: 37, baseType: !7210)
!7210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !7211)
!7211 = !{!7212, !7213, !7214, !7215, !7216, !7217, !7218, !7219, !7220}
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7210, file: !424, line: 26, baseType: !121, size: 32)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7210, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7210, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7210, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7210, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7210, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7210, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7210, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7210, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!7221 = !{!7222, !7223, !7224, !7225, !7226, !7227, !7228, !7229, !7230, !7231}
!7222 = !DILocalVariable(name: "msp", arg: 1, scope: !7204, file: !7205, line: 1036, type: !121)
!7223 = !DILocalVariable(name: "psp", arg: 2, scope: !7204, file: !7205, line: 1036, type: !121)
!7224 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7204, file: !7205, line: 1036, type: !121)
!7225 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7204, file: !7205, line: 1037, type: !7208)
!7226 = !DILocalVariable(name: "reason", scope: !7204, file: !7205, line: 1039, type: !121)
!7227 = !DILocalVariable(name: "fault", scope: !7204, file: !7205, line: 1040, type: !103)
!7228 = !DILocalVariable(name: "recoverable", scope: !7204, file: !7205, line: 1041, type: !157)
!7229 = !DILocalVariable(name: "nested_exc", scope: !7204, file: !7205, line: 1041, type: !157)
!7230 = !DILocalVariable(name: "esf", scope: !7204, file: !7205, line: 1042, type: !2984)
!7231 = !DILocalVariable(name: "esf_copy", scope: !7204, file: !7205, line: 1047, type: !2985)
!7232 = !DILocation(line: 0, scope: !7204)
!7233 = !DILocation(line: 1040, column: 19, scope: !7204)
!7234 = !DILocation(line: 1040, column: 24, scope: !7204)
!7235 = !DILocation(line: 1041, column: 2, scope: !7204)
!7236 = !DILocation(line: 1047, column: 2, scope: !7204)
!7237 = !DILocation(line: 1047, column: 15, scope: !7204)
!7238 = !DILocalVariable(name: "key", arg: 1, scope: !7239, file: !5884, line: 84, type: !32)
!7239 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7240)
!7240 = !{!7238}
!7241 = !DILocation(line: 0, scope: !7239, inlinedAt: !7242)
!7242 = distinct !DILocation(line: 1050, column: 2, scope: !7204)
!7243 = !DILocation(line: 95, column: 2, scope: !7239, inlinedAt: !7242)
!7244 = !{i64 2311181}
!7245 = !DILocation(line: 1055, column: 9, scope: !7204)
!7246 = !DILocation(line: 1063, column: 11, scope: !7204)
!7247 = !DILocation(line: 1064, column: 6, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7204, file: !7205, line: 1064, column: 6)
!7249 = !{i8 0, i8 2}
!7250 = !DILocation(line: 1064, column: 6, scope: !7204)
!7251 = !DILocation(line: 1070, column: 20, scope: !7204)
!7252 = !DILocation(line: 1070, column: 2, scope: !7204)
!7253 = !DILocation(line: 1089, column: 6, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7204, file: !7205, line: 1089, column: 6)
!7255 = !DILocation(line: 0, scope: !7254)
!7256 = !DILocation(line: 1089, column: 6, scope: !7204)
!7257 = !DILocation(line: 1090, column: 28, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7259, file: !7205, line: 1090, column: 7)
!7259 = distinct !DILexicalBlock(scope: !7254, file: !7205, line: 1089, column: 18)
!7260 = !DILocation(line: 1090, column: 44, scope: !7258)
!7261 = !DILocation(line: 1090, column: 7, scope: !7259)
!7262 = !DILocation(line: 1091, column: 24, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7258, file: !7205, line: 1090, column: 50)
!7264 = !DILocation(line: 1092, column: 3, scope: !7263)
!7265 = !DILocation(line: 1094, column: 23, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7254, file: !7205, line: 1093, column: 9)
!7267 = !DILocation(line: 1097, column: 2, scope: !7204)
!7268 = !DILocation(line: 1098, column: 1, scope: !7204)
!7269 = distinct !DISubprogram(name: "get_esf", scope: !7205, file: !7205, line: 894, type: !7270, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7273)
!7270 = !DISubroutineType(types: !7271)
!7271 = !{!2984, !121, !121, !121, !7272}
!7272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!7273 = !{!7274, !7275, !7276, !7277, !7278, !7279}
!7274 = !DILocalVariable(name: "msp", arg: 1, scope: !7269, file: !7205, line: 894, type: !121)
!7275 = !DILocalVariable(name: "psp", arg: 2, scope: !7269, file: !7205, line: 894, type: !121)
!7276 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7269, file: !7205, line: 894, type: !121)
!7277 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7269, file: !7205, line: 895, type: !7272)
!7278 = !DILocalVariable(name: "alternative_state_exc", scope: !7269, file: !7205, line: 897, type: !157)
!7279 = !DILocalVariable(name: "ptr_esf", scope: !7269, file: !7205, line: 898, type: !2984)
!7280 = !DILocation(line: 0, scope: !7269)
!7281 = !DILocation(line: 900, column: 14, scope: !7269)
!7282 = !DILocation(line: 902, column: 49, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7269, file: !7205, line: 902, column: 6)
!7284 = !DILocation(line: 902, column: 6, scope: !7269)
!7285 = !DILocation(line: 983, column: 18, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7269, file: !7205, line: 983, column: 6)
!7287 = !DILocation(line: 991, column: 7, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7289, file: !7205, line: 990, column: 30)
!7289 = distinct !DILexicalBlock(scope: !7269, file: !7205, line: 990, column: 6)
!7290 = !DILocation(line: 998, column: 16, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !7205, line: 995, column: 10)
!7292 = distinct !DILexicalBlock(scope: !7288, file: !7205, line: 991, column: 7)
!7293 = !DILocation(line: 1002, column: 2, scope: !7269)
!7294 = !DILocation(line: 1003, column: 1, scope: !7269)
!7295 = distinct !DISubprogram(name: "fault_handle", scope: !7205, file: !7205, line: 786, type: !7296, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7298)
!7296 = !DISubroutineType(types: !7297)
!7297 = !{!121, !2984, !103, !7272}
!7298 = !{!7299, !7300, !7301, !7302}
!7299 = !DILocalVariable(name: "esf", arg: 1, scope: !7295, file: !7205, line: 786, type: !2984)
!7300 = !DILocalVariable(name: "fault", arg: 2, scope: !7295, file: !7205, line: 786, type: !103)
!7301 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7295, file: !7205, line: 786, type: !7272)
!7302 = !DILocalVariable(name: "reason", scope: !7295, file: !7205, line: 788, type: !121)
!7303 = !DILocation(line: 0, scope: !7295)
!7304 = !DILocation(line: 790, column: 15, scope: !7295)
!7305 = !DILocation(line: 792, column: 2, scope: !7295)
!7306 = !DILocation(line: 794, column: 12, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7295, file: !7205, line: 792, column: 17)
!7308 = !DILocation(line: 795, column: 3, scope: !7307)
!7309 = !DILocation(line: 800, column: 12, scope: !7307)
!7310 = !DILocation(line: 801, column: 3, scope: !7307)
!7311 = !DILocation(line: 803, column: 12, scope: !7307)
!7312 = !DILocation(line: 804, column: 3, scope: !7307)
!7313 = !DILocation(line: 806, column: 12, scope: !7307)
!7314 = !DILocation(line: 807, column: 3, scope: !7307)
!7315 = !DILocation(line: 814, column: 3, scope: !7307)
!7316 = !DILocation(line: 815, column: 3, scope: !7307)
!7317 = !DILocation(line: 829, column: 2, scope: !7295)
!7318 = distinct !DISubprogram(name: "hard_fault", scope: !7205, file: !7205, line: 709, type: !7319, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7321)
!7319 = !DISubroutineType(types: !7320)
!7320 = !{!121, !2984, !7272}
!7321 = !{!7322, !7323, !7324}
!7322 = !DILocalVariable(name: "esf", arg: 1, scope: !7318, file: !7205, line: 709, type: !2984)
!7323 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7318, file: !7205, line: 709, type: !7272)
!7324 = !DILocalVariable(name: "reason", scope: !7318, file: !7205, line: 711, type: !121)
!7325 = !DILocation(line: 0, scope: !7318)
!7326 = !DILocation(line: 732, column: 15, scope: !7318)
!7327 = !DILocation(line: 734, column: 12, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7318, file: !7205, line: 734, column: 6)
!7329 = !DILocation(line: 734, column: 17, scope: !7328)
!7330 = !DILocation(line: 734, column: 41, scope: !7328)
!7331 = !DILocation(line: 734, column: 6, scope: !7318)
!7332 = !DILocation(line: 736, column: 19, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7328, file: !7205, line: 736, column: 13)
!7334 = !DILocation(line: 736, column: 49, scope: !7333)
!7335 = !DILocation(line: 736, column: 13, scope: !7328)
!7336 = !DILocation(line: 738, column: 19, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7333, file: !7205, line: 738, column: 13)
!7338 = !DILocation(line: 738, column: 24, scope: !7337)
!7339 = !DILocation(line: 738, column: 47, scope: !7337)
!7340 = !DILocation(line: 738, column: 13, scope: !7333)
!7341 = !DILocation(line: 740, column: 7, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7343, file: !7205, line: 740, column: 7)
!7343 = distinct !DILexicalBlock(scope: !7337, file: !7205, line: 738, column: 53)
!7344 = !DILocation(line: 740, column: 7, scope: !7343)
!7345 = !DILocation(line: 742, column: 24, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7342, file: !7205, line: 740, column: 38)
!7347 = !DILocation(line: 743, column: 3, scope: !7346)
!7348 = !DILocation(line: 743, column: 20, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7342, file: !7205, line: 743, column: 14)
!7350 = !DILocation(line: 743, column: 25, scope: !7349)
!7351 = !DILocation(line: 743, column: 52, scope: !7349)
!7352 = !DILocation(line: 743, column: 14, scope: !7342)
!7353 = !DILocation(line: 744, column: 13, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7349, file: !7205, line: 743, column: 58)
!7355 = !DILocation(line: 745, column: 3, scope: !7354)
!7356 = !DILocation(line: 745, column: 20, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7349, file: !7205, line: 745, column: 14)
!7358 = !DILocation(line: 745, column: 25, scope: !7357)
!7359 = !DILocation(line: 745, column: 52, scope: !7357)
!7360 = !DILocation(line: 745, column: 14, scope: !7349)
!7361 = !DILocation(line: 746, column: 13, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7357, file: !7205, line: 745, column: 58)
!7363 = !DILocation(line: 747, column: 3, scope: !7362)
!7364 = !DILocation(line: 747, column: 20, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7357, file: !7205, line: 747, column: 14)
!7366 = !DILocation(line: 747, column: 52, scope: !7365)
!7367 = !DILocation(line: 747, column: 14, scope: !7357)
!7368 = !DILocation(line: 748, column: 13, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7365, file: !7205, line: 747, column: 58)
!7370 = !DILocation(line: 753, column: 3, scope: !7369)
!7371 = !DILocation(line: 766, column: 2, scope: !7318)
!7372 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7205, file: !7205, line: 229, type: !7296, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7373)
!7373 = !{!7374, !7375, !7376, !7377, !7378, !7379, !7382}
!7374 = !DILocalVariable(name: "esf", arg: 1, scope: !7372, file: !7205, line: 229, type: !2984)
!7375 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7372, file: !7205, line: 229, type: !103)
!7376 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7372, file: !7205, line: 230, type: !7272)
!7377 = !DILocalVariable(name: "reason", scope: !7372, file: !7205, line: 232, type: !121)
!7378 = !DILocalVariable(name: "mmfar", scope: !7372, file: !7205, line: 233, type: !121)
!7379 = !DILocalVariable(name: "temp", scope: !7380, file: !7205, line: 254, type: !121)
!7380 = distinct !DILexicalBlock(scope: !7381, file: !7205, line: 244, column: 48)
!7381 = distinct !DILexicalBlock(scope: !7372, file: !7205, line: 244, column: 6)
!7382 = !DILocalVariable(name: "min_stack_ptr", scope: !7383, file: !7205, line: 309, type: !121)
!7383 = distinct !DILexicalBlock(scope: !7384, file: !7205, line: 308, column: 43)
!7384 = distinct !DILexicalBlock(scope: !7385, file: !7205, line: 308, column: 7)
!7385 = distinct !DILexicalBlock(scope: !7386, file: !7205, line: 289, column: 40)
!7386 = distinct !DILexicalBlock(scope: !7372, file: !7205, line: 288, column: 6)
!7387 = !DILocation(line: 0, scope: !7372)
!7388 = !DILocation(line: 237, column: 12, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7372, file: !7205, line: 237, column: 6)
!7390 = !DILocation(line: 241, column: 12, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7372, file: !7205, line: 241, column: 6)
!7392 = !DILocation(line: 244, column: 12, scope: !7381)
!7393 = !DILocation(line: 244, column: 17, scope: !7381)
!7394 = !DILocation(line: 244, column: 42, scope: !7381)
!7395 = !DILocation(line: 244, column: 6, scope: !7372)
!7396 = !DILocation(line: 254, column: 24, scope: !7380)
!7397 = !DILocation(line: 0, scope: !7380)
!7398 = !DILocation(line: 256, column: 13, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7380, file: !7205, line: 256, column: 7)
!7400 = !DILocation(line: 256, column: 18, scope: !7399)
!7401 = !DILocation(line: 256, column: 44, scope: !7399)
!7402 = !DILocation(line: 256, column: 7, scope: !7380)
!7403 = !DILocation(line: 259, column: 24, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7405, file: !7205, line: 259, column: 8)
!7405 = distinct !DILexicalBlock(scope: !7399, file: !7205, line: 256, column: 50)
!7406 = !DILocation(line: 259, column: 8, scope: !7405)
!7407 = !DILocation(line: 261, column: 15, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7404, file: !7205, line: 259, column: 30)
!7409 = !DILocation(line: 262, column: 4, scope: !7408)
!7410 = !DILocation(line: 265, column: 12, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7372, file: !7205, line: 265, column: 6)
!7412 = !DILocation(line: 269, column: 12, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7372, file: !7205, line: 269, column: 6)
!7414 = !DILocation(line: 288, column: 12, scope: !7386)
!7415 = !DILocation(line: 288, column: 17, scope: !7386)
!7416 = !DILocation(line: 288, column: 41, scope: !7386)
!7417 = !DILocation(line: 289, column: 9, scope: !7386)
!7418 = !DILocation(line: 289, column: 14, scope: !7386)
!7419 = !DILocation(line: 288, column: 6, scope: !7372)
!7420 = !DILocation(line: 308, column: 12, scope: !7384)
!7421 = !DILocation(line: 308, column: 17, scope: !7384)
!7422 = !DILocation(line: 308, column: 7, scope: !7385)
!7423 = !DILocation(line: 310, column: 6, scope: !7383)
!7424 = !DILocation(line: 309, column: 29, scope: !7383)
!7425 = !DILocation(line: 0, scope: !7383)
!7426 = !DILocation(line: 312, column: 8, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7383, file: !7205, line: 312, column: 8)
!7428 = !DILocation(line: 312, column: 8, scope: !7383)
!7429 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7430, file: !6904, line: 1099, type: !121)
!7430 = distinct !DISubprogram(name: "__set_PSP", scope: !6904, file: !6904, line: 1099, type: !6995, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7431)
!7431 = !{!7429}
!7432 = !DILocation(line: 0, scope: !7430, inlinedAt: !7433)
!7433 = distinct !DILocation(line: 338, column: 5, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7427, file: !7205, line: 312, column: 23)
!7435 = !DILocation(line: 1101, column: 3, scope: !7430, inlinedAt: !7433)
!7436 = !{i64 3758405}
!7437 = !DILocation(line: 341, column: 4, scope: !7434)
!7438 = !DILocation(line: 360, column: 12, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7372, file: !7205, line: 360, column: 6)
!7440 = !DILocation(line: 360, column: 17, scope: !7439)
!7441 = !DILocation(line: 360, column: 41, scope: !7439)
!7442 = !DILocation(line: 360, column: 6, scope: !7372)
!7443 = !DILocation(line: 361, column: 14, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7439, file: !7205, line: 360, column: 47)
!7445 = !DILocation(line: 362, column: 2, scope: !7444)
!7446 = !DILocation(line: 366, column: 12, scope: !7372)
!7447 = !DILocation(line: 369, column: 15, scope: !7372)
!7448 = !DILocation(line: 371, column: 2, scope: !7372)
!7449 = distinct !DISubprogram(name: "bus_fault", scope: !7205, file: !7205, line: 383, type: !7450, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7452)
!7450 = !DISubroutineType(types: !7451)
!7451 = !{!103, !2984, !103, !7272}
!7452 = !{!7453, !7454, !7455, !7456, !7457}
!7453 = !DILocalVariable(name: "esf", arg: 1, scope: !7449, file: !7205, line: 383, type: !2984)
!7454 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7449, file: !7205, line: 383, type: !103)
!7455 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7449, file: !7205, line: 383, type: !7272)
!7456 = !DILocalVariable(name: "reason", scope: !7449, file: !7205, line: 385, type: !121)
!7457 = !DILocalVariable(name: "bfar", scope: !7458, file: !7205, line: 405, type: !121)
!7458 = distinct !DILexicalBlock(scope: !7459, file: !7205, line: 395, column: 42)
!7459 = distinct !DILexicalBlock(scope: !7449, file: !7205, line: 395, column: 6)
!7460 = !DILocation(line: 0, scope: !7449)
!7461 = !DILocation(line: 389, column: 11, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7449, file: !7205, line: 389, column: 6)
!7463 = !DILocation(line: 392, column: 11, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7449, file: !7205, line: 392, column: 6)
!7465 = !DILocation(line: 395, column: 11, scope: !7459)
!7466 = !DILocation(line: 395, column: 16, scope: !7459)
!7467 = !DILocation(line: 395, column: 6, scope: !7449)
!7468 = !DILocation(line: 405, column: 3, scope: !7458)
!7469 = !DILocation(line: 0, scope: !7458)
!7470 = !DILocation(line: 407, column: 13, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7458, file: !7205, line: 407, column: 7)
!7472 = !DILocation(line: 407, column: 18, scope: !7471)
!7473 = !DILocation(line: 407, column: 44, scope: !7471)
!7474 = !DILocation(line: 407, column: 7, scope: !7458)
!7475 = !DILocation(line: 411, column: 15, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7477, file: !7205, line: 409, column: 30)
!7477 = distinct !DILexicalBlock(scope: !7478, file: !7205, line: 409, column: 8)
!7478 = distinct !DILexicalBlock(scope: !7471, file: !7205, line: 407, column: 50)
!7479 = !DILocation(line: 412, column: 4, scope: !7476)
!7480 = !DILocation(line: 415, column: 11, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7449, file: !7205, line: 415, column: 6)
!7482 = !DILocation(line: 418, column: 12, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7449, file: !7205, line: 418, column: 6)
!7484 = !DILocation(line: 418, column: 17, scope: !7483)
!7485 = !DILocation(line: 418, column: 41, scope: !7483)
!7486 = !DILocation(line: 418, column: 6, scope: !7449)
!7487 = !DILocation(line: 423, column: 18, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7483, file: !7205, line: 423, column: 13)
!7489 = !DILocation(line: 524, column: 12, scope: !7449)
!7490 = !DILocation(line: 526, column: 15, scope: !7449)
!7491 = !DILocation(line: 528, column: 2, scope: !7449)
!7492 = distinct !DISubprogram(name: "usage_fault", scope: !7205, file: !7205, line: 539, type: !7493, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7497)
!7493 = !DISubroutineType(types: !7494)
!7494 = !{!121, !7495}
!7495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7496, size: 32)
!7496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2985)
!7497 = !{!7498, !7499}
!7498 = !DILocalVariable(name: "esf", arg: 1, scope: !7492, file: !7205, line: 539, type: !7495)
!7499 = !DILocalVariable(name: "reason", scope: !7492, file: !7205, line: 541, type: !121)
!7500 = !DILocation(line: 0, scope: !7492)
!7501 = !DILocation(line: 546, column: 12, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7492, file: !7205, line: 546, column: 6)
!7503 = !DILocation(line: 549, column: 12, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7492, file: !7205, line: 549, column: 6)
!7505 = !DILocation(line: 567, column: 12, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7492, file: !7205, line: 567, column: 6)
!7507 = !DILocation(line: 570, column: 12, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7492, file: !7205, line: 570, column: 6)
!7509 = !DILocation(line: 573, column: 12, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7492, file: !7205, line: 573, column: 6)
!7511 = !DILocation(line: 576, column: 12, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7492, file: !7205, line: 576, column: 6)
!7513 = !DILocation(line: 581, column: 12, scope: !7492)
!7514 = !DILocation(line: 583, column: 2, scope: !7492)
!7515 = distinct !DISubprogram(name: "debug_monitor", scope: !7205, file: !7205, line: 632, type: !7516, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7518)
!7516 = !DISubroutineType(types: !7517)
!7517 = !{null, !2984, !7272}
!7518 = !{!7519, !7520}
!7519 = !DILocalVariable(name: "esf", arg: 1, scope: !7515, file: !7205, line: 632, type: !2984)
!7520 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7515, file: !7205, line: 632, type: !7272)
!7521 = !DILocation(line: 0, scope: !7515)
!7522 = !DILocation(line: 634, column: 15, scope: !7515)
!7523 = !DILocation(line: 652, column: 1, scope: !7515)
!7524 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7205, file: !7205, line: 658, type: !7525, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7527)
!7525 = !DISubroutineType(types: !7526)
!7526 = !{!157, !2984}
!7527 = !{!7528, !7529, !7530}
!7528 = !DILocalVariable(name: "esf", arg: 1, scope: !7524, file: !7205, line: 658, type: !2984)
!7529 = !DILocalVariable(name: "ret_addr", scope: !7524, file: !7205, line: 660, type: !2676)
!7530 = !DILocalVariable(name: "fault_insn", scope: !7524, file: !7205, line: 686, type: !328)
!7531 = !DILocation(line: 0, scope: !7524)
!7532 = !DILocation(line: 660, column: 46, scope: !7524)
!7533 = !DILocation(line: 660, column: 23, scope: !7524)
!7534 = !DILocation(line: 682, column: 11, scope: !7524)
!7535 = !DILocation(line: 271, column: 3, scope: !7536, inlinedAt: !7537)
!7536 = distinct !DISubprogram(name: "__DSB", scope: !6904, file: !6904, line: 269, type: !3318, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !461)
!7537 = distinct !DILocation(line: 683, column: 2, scope: !7524)
!7538 = !{i64 3734540}
!7539 = !DILocation(line: 260, column: 3, scope: !7540, inlinedAt: !7541)
!7540 = distinct !DISubprogram(name: "__ISB", scope: !6904, file: !6904, line: 258, type: !3318, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !461)
!7541 = distinct !DILocation(line: 684, column: 2, scope: !7524)
!7542 = !{i64 3734257}
!7543 = !DILocation(line: 686, column: 35, scope: !7524)
!7544 = !DILocation(line: 686, column: 24, scope: !7524)
!7545 = !DILocation(line: 688, column: 11, scope: !7524)
!7546 = !DILocation(line: 271, column: 3, scope: !7536, inlinedAt: !7547)
!7547 = distinct !DILocation(line: 689, column: 2, scope: !7524)
!7548 = !DILocation(line: 260, column: 3, scope: !7540, inlinedAt: !7549)
!7549 = distinct !DILocation(line: 690, column: 2, scope: !7524)
!7550 = !DILocation(line: 693, column: 45, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7524, file: !7205, line: 693, column: 6)
!7552 = !DILocation(line: 699, column: 1, scope: !7524)
!7553 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7205, file: !7205, line: 1107, type: !3318, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !461)
!7554 = !DILocation(line: 1111, column: 11, scope: !7553)
!7555 = !DILocation(line: 1136, column: 1, scope: !7553)
!7556 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7557, file: !7557, line: 26, type: !3318, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7558)
!7557 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7558 = !{!7559}
!7559 = !DILocalVariable(name: "irq", scope: !7556, file: !7557, line: 28, type: !103)
!7560 = !DILocation(line: 0, scope: !7556)
!7561 = !DILocation(line: 30, column: 2, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7556, file: !7557, line: 30, column: 2)
!7563 = !DILocation(line: 31, column: 3, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7565, file: !7557, line: 30, column: 39)
!7565 = distinct !DILexicalBlock(scope: !7562, file: !7557, line: 30, column: 2)
!7566 = !DILocation(line: 30, column: 35, scope: !7565)
!7567 = !DILocation(line: 30, column: 13, scope: !7565)
!7568 = distinct !{!7568, !7561, !7569}
!7569 = !DILocation(line: 32, column: 2, scope: !7562)
!7570 = !DILocation(line: 33, column: 1, scope: !7556)
!7571 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6938, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !7572)
!7572 = !{!7573, !7574}
!7573 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7571, file: !495, line: 1814, type: !759)
!7574 = !DILocalVariable(name: "priority", arg: 2, scope: !7571, file: !495, line: 1814, type: !121)
!7575 = !DILocation(line: 0, scope: !7571)
!7576 = !DILocation(line: 1816, column: 7, scope: !7571)
!7577 = !DILocation(line: 0, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7571, file: !495, line: 1816, column: 7)
!7579 = !DILocation(line: 1824, column: 1, scope: !7571)
!7580 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7581, file: !7581, line: 27, type: !7582, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3072, retainedNodes: !7685)
!7581 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7582 = !DISubroutineType(types: !7583)
!7583 = !{null, !7584}
!7584 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !7585)
!7585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7586, size: 32)
!7586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !7587)
!7587 = !{!7588, !7646, !7658, !7659, !7660, !7661, !7667, !7680}
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7586, file: !355, line: 247, baseType: !7589, size: 384)
!7589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !7590)
!7590 = !{!7591, !7615, !7622, !7623, !7624, !7633, !7634, !7635}
!7591 = !DIDerivedType(tag: DW_TAG_member, scope: !7589, file: !355, line: 60, baseType: !7592, size: 64)
!7592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7589, file: !355, line: 60, size: 64, elements: !7593)
!7593 = !{!7594, !7609}
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7592, file: !355, line: 61, baseType: !7595, size: 64)
!7595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !7596)
!7596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !7597)
!7597 = !{!7598, !7604}
!7598 = !DIDerivedType(tag: DW_TAG_member, scope: !7596, file: !309, line: 38, baseType: !7599, size: 32)
!7599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7596, file: !309, line: 38, size: 32, elements: !7600)
!7600 = !{!7601, !7603}
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7599, file: !309, line: 39, baseType: !7602, size: 32)
!7602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7596, size: 32)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7599, file: !309, line: 40, baseType: !7602, size: 32)
!7604 = !DIDerivedType(tag: DW_TAG_member, scope: !7596, file: !309, line: 42, baseType: !7605, size: 32, offset: 32)
!7605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7596, file: !309, line: 42, size: 32, elements: !7606)
!7606 = !{!7607, !7608}
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7605, file: !309, line: 43, baseType: !7602, size: 32)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7605, file: !309, line: 44, baseType: !7602, size: 32)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7592, file: !355, line: 62, baseType: !7610, size: 64)
!7610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !7611)
!7611 = !{!7612}
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7610, file: !380, line: 50, baseType: !7613, size: 64)
!7613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7614, size: 64, elements: !385)
!7614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7610, size: 32)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7589, file: !355, line: 68, baseType: !7616, size: 32, offset: 64)
!7616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7617, size: 32)
!7617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !7618)
!7618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !7619)
!7619 = !{!7620}
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7618, file: !304, line: 232, baseType: !7621, size: 64)
!7621 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !7596)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7589, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7589, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!7624 = !DIDerivedType(tag: DW_TAG_member, scope: !7589, file: !355, line: 90, baseType: !7625, size: 16, offset: 112)
!7625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7589, file: !355, line: 90, size: 16, elements: !7626)
!7626 = !{!7627, !7632}
!7627 = !DIDerivedType(tag: DW_TAG_member, scope: !7625, file: !355, line: 91, baseType: !7628, size: 16)
!7628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7625, file: !355, line: 91, size: 16, elements: !7629)
!7629 = !{!7630, !7631}
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7628, file: !355, line: 96, baseType: !403, size: 8)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7628, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7625, file: !355, line: 100, baseType: !328, size: 16)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7589, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7589, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7589, file: !355, line: 131, baseType: !7636, size: 192, offset: 192)
!7636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !7637)
!7637 = !{!7638, !7639, !7645}
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7636, file: !304, line: 245, baseType: !7595, size: 64)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7636, file: !304, line: 246, baseType: !7640, size: 32, offset: 64)
!7640 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !7641)
!7641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7642, size: 32)
!7642 = !DISubroutineType(types: !7643)
!7643 = !{null, !7644}
!7644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7636, size: 32)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7636, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7586, file: !355, line: 250, baseType: !7647, size: 288, offset: 384)
!7647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !7648)
!7648 = !{!7649, !7650, !7651, !7652, !7653, !7654, !7655, !7656, !7657}
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7647, file: !424, line: 26, baseType: !121, size: 32)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7647, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7647, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7647, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7647, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7647, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7647, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7647, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7647, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7586, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7586, file: !355, line: 256, baseType: !7617, size: 64, offset: 704)
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7586, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7586, file: !355, line: 300, baseType: !7662, size: 96, offset: 800)
!7662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !7663)
!7663 = !{!7664, !7665, !7666}
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7662, file: !355, line: 153, baseType: !22, size: 32)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7662, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7662, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7586, file: !355, line: 325, baseType: !7668, size: 32, offset: 896)
!7668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7669, size: 32)
!7669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !7670)
!7670 = !{!7671, !7677, !7678}
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7669, file: !300, line: 5074, baseType: !7672, size: 96)
!7672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !7673)
!7673 = !{!7674, !7675, !7676}
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7672, file: !450, line: 57, baseType: !453, size: 32)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7672, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7672, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7669, file: !300, line: 5075, baseType: !7617, size: 64, offset: 96)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7669, file: !300, line: 5076, baseType: !7679, offset: 160)
!7679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7586, file: !355, line: 343, baseType: !7681, size: 64, offset: 928)
!7681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !7682)
!7682 = !{!7683, !7684}
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7681, file: !424, line: 63, baseType: !121, size: 32)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7681, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!7685 = !{!7686}
!7686 = !DILocalVariable(name: "thread", arg: 1, scope: !7580, file: !7581, line: 27, type: !7584)
!7687 = !DILocation(line: 0, scope: !7580)
!7688 = !DILocation(line: 29, column: 6, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7580, file: !7581, line: 29, column: 6)
!7690 = !DILocation(line: 29, column: 15, scope: !7689)
!7691 = !DILocation(line: 29, column: 6, scope: !7580)
!7692 = !DILocation(line: 1031, column: 3, scope: !7693, inlinedAt: !7696)
!7693 = distinct !DISubprogram(name: "__get_IPSR", scope: !6904, file: !6904, line: 1027, type: !6985, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3072, retainedNodes: !7694)
!7694 = !{!7695}
!7695 = !DILocalVariable(name: "result", scope: !7693, file: !6904, line: 1029, type: !121)
!7696 = distinct !DILocation(line: 48, column: 10, scope: !7697, inlinedAt: !7701)
!7697 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7698, file: !7698, line: 46, type: !7699, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3072, retainedNodes: !461)
!7698 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7699 = !DISubroutineType(types: !7700)
!7700 = !{!157}
!7701 = distinct !DILocation(line: 30, column: 7, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7703, file: !7581, line: 30, column: 7)
!7703 = distinct !DILexicalBlock(scope: !7689, file: !7581, line: 29, column: 26)
!7704 = !{i64 3723388}
!7705 = !DILocation(line: 0, scope: !7693, inlinedAt: !7696)
!7706 = !DILocation(line: 48, column: 9, scope: !7697, inlinedAt: !7701)
!7707 = !DILocation(line: 30, column: 7, scope: !7703)
!7708 = !DILocation(line: 42, column: 14, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7702, file: !7581, line: 30, column: 25)
!7710 = !DILocation(line: 48, column: 15, scope: !7709)
!7711 = !DILocation(line: 49, column: 3, scope: !7709)
!7712 = !DILocation(line: 52, column: 2, scope: !7580)
!7713 = !DILocation(line: 53, column: 1, scope: !7580)
!7714 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !350, file: !350, line: 127, type: !3318, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !341, retainedNodes: !461)
!7715 = !DILocation(line: 134, column: 2, scope: !7714)
!7716 = !DILocation(line: 156, column: 1, scope: !7714)
!7717 = !DILocation(line: 0, scope: !349)
!7718 = !DILocation(line: 289, column: 36, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !349, file: !350, line: 285, column: 2)
!7720 = !DILocation(line: 289, column: 42, scope: !7719)
!7721 = !DILocation(line: 300, column: 36, scope: !349)
!7722 = !DILocation(line: 301, column: 35, scope: !349)
!7723 = !DILocation(line: 302, column: 37, scope: !349)
!7724 = !DILocation(line: 311, column: 2, scope: !349)
!7725 = !DILocation(line: 316, column: 1, scope: !349)
!7726 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !523, file: !523, line: 180, type: !3318, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7727 = !DILocation(line: 188, column: 12, scope: !7726)
!7728 = !DILocation(line: 271, column: 3, scope: !7729, inlinedAt: !7730)
!7729 = distinct !DISubprogram(name: "__DSB", scope: !6904, file: !6904, line: 269, type: !3318, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7730 = distinct !DILocation(line: 192, column: 2, scope: !7726)
!7731 = !{i64 3911290}
!7732 = !DILocation(line: 260, column: 3, scope: !7733, inlinedAt: !7734)
!7733 = distinct !DISubprogram(name: "__ISB", scope: !6904, file: !6904, line: 258, type: !3318, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7734 = distinct !DILocation(line: 193, column: 2, scope: !7726)
!7735 = !{i64 3911007}
!7736 = !DILocation(line: 194, column: 1, scope: !7726)
!7737 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !523, file: !523, line: 199, type: !3318, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7738 = !DILocation(line: 282, column: 3, scope: !7739, inlinedAt: !7740)
!7739 = distinct !DISubprogram(name: "__DMB", scope: !6904, file: !6904, line: 280, type: !3318, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7740 = distinct !DILocation(line: 202, column: 2, scope: !7737)
!7741 = !{i64 3911566}
!7742 = !DILocation(line: 205, column: 12, scope: !7737)
!7743 = !DILocation(line: 206, column: 1, scope: !7737)
!7744 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !523, file: !523, line: 275, type: !7745, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7758)
!7745 = !DISubroutineType(types: !7746)
!7746 = !{null, !7747, !256, !7172, !7172}
!7747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7748, size: 32)
!7748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7749)
!7749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !474, line: 52, size: 96, elements: !7750)
!7750 = !{!7751, !7752, !7753}
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7749, file: !474, line: 53, baseType: !22, size: 32)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7749, file: !474, line: 54, baseType: !344, size: 32, offset: 32)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7749, file: !474, line: 55, baseType: !7754, size: 32, offset: 64)
!7754 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !480, line: 151, baseType: !7755)
!7755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !480, line: 149, size: 32, elements: !7756)
!7756 = !{!7757}
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7755, file: !480, line: 150, baseType: !121, size: 32)
!7758 = !{!7759, !7760, !7761, !7762}
!7759 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7744, file: !523, line: 276, type: !7747)
!7760 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7744, file: !523, line: 276, type: !256)
!7761 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7744, file: !523, line: 277, type: !7172)
!7762 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7744, file: !523, line: 277, type: !7172)
!7763 = !DILocation(line: 0, scope: !7744)
!7764 = !DILocation(line: 279, column: 6, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7744, file: !523, line: 279, column: 6)
!7766 = !DILocation(line: 285, column: 1, scope: !7744)
!7767 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7768, file: !7768, line: 220, type: !7769, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7771)
!7768 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7769 = !DISubroutineType(types: !7770)
!7770 = !{!103, !7747, !256, !7172, !7172}
!7771 = !{!7772, !7773, !7774, !7775, !7776}
!7772 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7767, file: !7768, line: 221, type: !7747)
!7773 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7767, file: !7768, line: 221, type: !256)
!7774 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7767, file: !7768, line: 222, type: !7172)
!7775 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7767, file: !7768, line: 223, type: !7172)
!7776 = !DILocalVariable(name: "mpu_reg_index", scope: !7767, file: !7768, line: 225, type: !103)
!7777 = !DILocation(line: 0, scope: !7767)
!7778 = !DILocation(line: 225, column: 22, scope: !7767)
!7779 = !DILocation(line: 233, column: 18, scope: !7767)
!7780 = !DILocation(line: 236, column: 23, scope: !7767)
!7781 = !DILocation(line: 236, column: 21, scope: !7767)
!7782 = !DILocation(line: 238, column: 2, scope: !7767)
!7783 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !523, file: !523, line: 105, type: !7784, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7786)
!7784 = !DISubroutineType(types: !7785)
!7785 = !{!103, !7747, !154, !154, !157}
!7786 = !{!7787, !7788, !7789, !7790, !7791, !7792}
!7787 = !DILocalVariable(name: "regions", arg: 1, scope: !7783, file: !523, line: 106, type: !7747)
!7788 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7783, file: !523, line: 106, type: !154)
!7789 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7783, file: !523, line: 106, type: !154)
!7790 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7783, file: !523, line: 107, type: !157)
!7791 = !DILocalVariable(name: "i", scope: !7783, file: !523, line: 109, type: !103)
!7792 = !DILocalVariable(name: "reg_index", scope: !7783, file: !523, line: 110, type: !103)
!7793 = !DILocation(line: 0, scope: !7783)
!7794 = !DILocation(line: 110, column: 18, scope: !7783)
!7795 = !DILocation(line: 112, column: 16, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !523, line: 112, column: 2)
!7797 = distinct !DILexicalBlock(scope: !7783, file: !523, line: 112, column: 2)
!7798 = !DILocation(line: 112, column: 2, scope: !7797)
!7799 = !DILocation(line: 113, column: 7, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7801, file: !523, line: 113, column: 7)
!7801 = distinct !DILexicalBlock(scope: !7796, file: !523, line: 112, column: 36)
!7802 = !DILocation(line: 113, column: 18, scope: !7800)
!7803 = !DILocation(line: 113, column: 23, scope: !7800)
!7804 = !DILocation(line: 113, column: 7, scope: !7801)
!7805 = !DILocation(line: 118, column: 23, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7801, file: !523, line: 118, column: 7)
!7807 = !DILocation(line: 119, column: 7, scope: !7806)
!7808 = !DILocation(line: 118, column: 7, scope: !7801)
!7809 = !DILocation(line: 124, column: 36, scope: !7801)
!7810 = !DILocation(line: 124, column: 15, scope: !7801)
!7811 = !DILocation(line: 126, column: 17, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7801, file: !523, line: 126, column: 7)
!7813 = !DILocation(line: 126, column: 7, scope: !7801)
!7814 = !DILocation(line: 131, column: 12, scope: !7801)
!7815 = !DILocation(line: 132, column: 2, scope: !7801)
!7816 = !DILocation(line: 112, column: 32, scope: !7796)
!7817 = distinct !{!7817, !7798, !7818}
!7818 = !DILocation(line: 132, column: 2, scope: !7797)
!7819 = !DILocation(line: 135, column: 1, scope: !7783)
!7820 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7768, file: !7768, line: 63, type: !7821, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7823)
!7821 = !DISubroutineType(types: !7822)
!7822 = !{!103, !7747}
!7823 = !{!7824, !7825}
!7824 = !DILocalVariable(name: "part", arg: 1, scope: !7820, file: !7768, line: 63, type: !7747)
!7825 = !DILocalVariable(name: "partition_is_valid", scope: !7820, file: !7768, line: 70, type: !103)
!7826 = !DILocation(line: 0, scope: !7820)
!7827 = !DILocation(line: 71, column: 11, scope: !7820)
!7828 = !DILocation(line: 71, column: 37, scope: !7820)
!7829 = !DILocation(line: 72, column: 3, scope: !7820)
!7830 = !DILocation(line: 71, column: 30, scope: !7820)
!7831 = !DILocation(line: 75, column: 11, scope: !7820)
!7832 = !DILocation(line: 75, column: 17, scope: !7820)
!7833 = !DILocation(line: 75, column: 38, scope: !7820)
!7834 = !DILocation(line: 77, column: 2, scope: !7820)
!7835 = distinct !DISubprogram(name: "mpu_configure_region", scope: !523, file: !523, line: 79, type: !7836, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7838)
!7836 = !DISubroutineType(types: !7837)
!7837 = !{!103, !256, !7747}
!7838 = !{!7839, !7840, !7841}
!7839 = !DILocalVariable(name: "index", arg: 1, scope: !7835, file: !523, line: 79, type: !256)
!7840 = !DILocalVariable(name: "new_region", arg: 2, scope: !7835, file: !523, line: 80, type: !7747)
!7841 = !DILocalVariable(name: "region_conf", scope: !7835, file: !523, line: 82, type: !512)
!7842 = !DILocation(line: 0, scope: !7835)
!7843 = !DILocation(line: 82, column: 2, scope: !7835)
!7844 = !DILocation(line: 82, column: 24, scope: !7835)
!7845 = !DILocation(line: 87, column: 33, scope: !7835)
!7846 = !DILocation(line: 87, column: 14, scope: !7835)
!7847 = !DILocation(line: 87, column: 19, scope: !7835)
!7848 = !DILocation(line: 91, column: 55, scope: !7835)
!7849 = !DILocation(line: 92, column: 16, scope: !7835)
!7850 = !DILocation(line: 92, column: 53, scope: !7835)
!7851 = !DILocation(line: 91, column: 2, scope: !7835)
!7852 = !DILocation(line: 95, column: 9, scope: !7835)
!7853 = !DILocation(line: 97, column: 1, scope: !7835)
!7854 = !DILocation(line: 95, column: 2, scope: !7835)
!7855 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7768, file: !7768, line: 113, type: !7856, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7861)
!7856 = !DISubroutineType(types: !7857)
!7857 = !{null, !7858, !7859, !121, !121}
!7858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 32)
!7859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7860, size: 32)
!7860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7754)
!7861 = !{!7862, !7863, !7864, !7865}
!7862 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7855, file: !7768, line: 114, type: !7858)
!7863 = !DILocalVariable(name: "attr", arg: 2, scope: !7855, file: !7768, line: 115, type: !7859)
!7864 = !DILocalVariable(name: "base", arg: 3, scope: !7855, file: !7768, line: 115, type: !121)
!7865 = !DILocalVariable(name: "size", arg: 4, scope: !7855, file: !7768, line: 115, type: !121)
!7866 = !DILocation(line: 0, scope: !7855)
!7867 = !DILocation(line: 127, column: 23, scope: !7855)
!7868 = !DILocation(line: 127, column: 35, scope: !7855)
!7869 = !DILocation(line: 127, column: 33, scope: !7855)
!7870 = !DILocation(line: 127, column: 10, scope: !7855)
!7871 = !DILocation(line: 127, column: 15, scope: !7855)
!7872 = !DILocation(line: 129, column: 1, scope: !7855)
!7873 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !523, file: !523, line: 57, type: !7874, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7876)
!7874 = !DISubroutineType(types: !7875)
!7875 = !{!103, !256, !510}
!7876 = !{!7877, !7878}
!7877 = !DILocalVariable(name: "index", arg: 1, scope: !7873, file: !523, line: 57, type: !256)
!7878 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7873, file: !523, line: 58, type: !510)
!7879 = !DILocation(line: 0, scope: !7873)
!7880 = !DILocation(line: 61, column: 6, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7873, file: !523, line: 61, column: 6)
!7882 = !DILocation(line: 61, column: 12, scope: !7881)
!7883 = !DILocation(line: 61, column: 6, scope: !7873)
!7884 = !DILocation(line: 71, column: 2, scope: !7873)
!7885 = !DILocation(line: 73, column: 2, scope: !7873)
!7886 = !DILocation(line: 74, column: 1, scope: !7873)
!7887 = distinct !DISubprogram(name: "region_init", scope: !7768, file: !7768, line: 29, type: !7888, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7890)
!7888 = !DISubroutineType(types: !7889)
!7889 = !{null, !7172, !510}
!7890 = !{!7891, !7892}
!7891 = !DILocalVariable(name: "index", arg: 1, scope: !7887, file: !7768, line: 29, type: !7172)
!7892 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7887, file: !7768, line: 30, type: !510)
!7893 = !DILocation(line: 0, scope: !7887)
!7894 = !DILocation(line: 33, column: 2, scope: !7887)
!7895 = !DILocation(line: 47, column: 28, scope: !7887)
!7896 = !DILocation(line: 47, column: 33, scope: !7887)
!7897 = !DILocation(line: 48, column: 26, scope: !7887)
!7898 = !DILocation(line: 47, column: 12, scope: !7887)
!7899 = !DILocation(line: 49, column: 32, scope: !7887)
!7900 = !DILocation(line: 49, column: 37, scope: !7887)
!7901 = !DILocation(line: 49, column: 12, scope: !7887)
!7902 = !DILocation(line: 53, column: 1, scope: !7887)
!7903 = distinct !DISubprogram(name: "set_region_number", scope: !7904, file: !7904, line: 32, type: !6995, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7905)
!7904 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7905 = !{!7906}
!7906 = !DILocalVariable(name: "index", arg: 1, scope: !7903, file: !7904, line: 32, type: !121)
!7907 = !DILocation(line: 0, scope: !7903)
!7908 = !DILocation(line: 34, column: 11, scope: !7903)
!7909 = !DILocation(line: 35, column: 1, scope: !7903)
!7910 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7768, file: !7768, line: 88, type: !7911, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7913)
!7911 = !DISubroutineType(types: !7912)
!7912 = !{!121, !121}
!7913 = !{!7914}
!7914 = !DILocalVariable(name: "size", arg: 1, scope: !7910, file: !7768, line: 88, type: !121)
!7915 = !DILocation(line: 0, scope: !7910)
!7916 = !DILocation(line: 91, column: 11, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7910, file: !7768, line: 91, column: 6)
!7918 = !DILocation(line: 91, column: 6, scope: !7910)
!7919 = !DILocation(line: 100, column: 11, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7910, file: !7768, line: 100, column: 6)
!7921 = !DILocation(line: 100, column: 6, scope: !7910)
!7922 = !DILocation(line: 104, column: 35, scope: !7910)
!7923 = !DILocation(line: 104, column: 16, scope: !7910)
!7924 = !DILocation(line: 104, column: 50, scope: !7910)
!7925 = !DILocation(line: 104, column: 72, scope: !7910)
!7926 = !DILocation(line: 104, column: 2, scope: !7910)
!7927 = !DILocation(line: 106, column: 1, scope: !7910)
!7928 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !523, file: !523, line: 307, type: !7929, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7931)
!7929 = !DISubroutineType(types: !7930)
!7930 = !{null, !7747, !154}
!7931 = !{!7932, !7933}
!7932 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7928, file: !523, line: 308, type: !7747)
!7933 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7928, file: !523, line: 308, type: !154)
!7934 = !DILocation(line: 0, scope: !7928)
!7935 = !DILocation(line: 310, column: 6, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7928, file: !523, line: 310, column: 6)
!7937 = !DILocation(line: 316, column: 1, scope: !7928)
!7938 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7768, file: !7768, line: 249, type: !7939, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7941)
!7939 = !DISubroutineType(types: !7940)
!7940 = !{!103, !7747, !154}
!7941 = !{!7942, !7943, !7944, !7945}
!7942 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7938, file: !7768, line: 250, type: !7747)
!7943 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7938, file: !7768, line: 250, type: !154)
!7944 = !DILocalVariable(name: "mpu_reg_index", scope: !7938, file: !7768, line: 252, type: !103)
!7945 = !DILocalVariable(name: "i", scope: !7946, file: !7768, line: 264, type: !103)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !7768, line: 264, column: 3)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !7768, line: 261, column: 32)
!7948 = distinct !DILexicalBlock(scope: !7938, file: !7768, line: 261, column: 6)
!7949 = !DILocation(line: 0, scope: !7938)
!7950 = !DILocation(line: 252, column: 22, scope: !7938)
!7951 = !DILocation(line: 258, column: 18, scope: !7938)
!7952 = !DILocation(line: 261, column: 20, scope: !7948)
!7953 = !DILocation(line: 261, column: 6, scope: !7938)
!7954 = !DILocation(line: 0, scope: !7946)
!7955 = !DILocation(line: 265, column: 4, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7957, file: !7768, line: 264, column: 59)
!7957 = distinct !DILexicalBlock(scope: !7946, file: !7768, line: 264, column: 3)
!7958 = !DILocation(line: 264, column: 55, scope: !7957)
!7959 = !DILocation(line: 264, column: 33, scope: !7957)
!7960 = !DILocation(line: 264, column: 3, scope: !7946)
!7961 = distinct !{!7961, !7960, !7962}
!7962 = !DILocation(line: 266, column: 3, scope: !7946)
!7963 = !DILocation(line: 269, column: 2, scope: !7938)
!7964 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7965, file: !7965, line: 218, type: !6995, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7966)
!7965 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7966 = !{!7967}
!7967 = !DILocalVariable(name: "rnr", arg: 1, scope: !7964, file: !7965, line: 218, type: !121)
!7968 = !DILocation(line: 0, scope: !7964)
!7969 = !DILocation(line: 220, column: 12, scope: !7964)
!7970 = !DILocation(line: 221, column: 13, scope: !7964)
!7971 = !DILocation(line: 222, column: 1, scope: !7964)
!7972 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !523, file: !523, line: 326, type: !6708, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7973)
!7973 = !{!7974}
!7974 = !DILocalVariable(name: "r_index", scope: !7972, file: !523, line: 328, type: !121)
!7975 = !DILocation(line: 330, column: 17, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7972, file: !523, line: 330, column: 6)
!7977 = !DILocation(line: 330, column: 29, scope: !7976)
!7978 = !DILocation(line: 330, column: 6, scope: !7972)
!7979 = !DILocation(line: 347, column: 2, scope: !7972)
!7980 = !DILocation(line: 0, scope: !7972)
!7981 = !DILocation(line: 364, column: 29, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7983, file: !523, line: 364, column: 2)
!7983 = distinct !DILexicalBlock(scope: !7972, file: !523, line: 364, column: 2)
!7984 = !DILocation(line: 364, column: 2, scope: !7983)
!7985 = !DILocation(line: 365, column: 25, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7982, file: !523, line: 364, column: 66)
!7987 = !DILocation(line: 365, column: 3, scope: !7986)
!7988 = !DILocation(line: 364, column: 62, scope: !7982)
!7989 = distinct !{!7989, !7984, !7990}
!7990 = !DILocation(line: 366, column: 2, scope: !7983)
!7991 = !DILocation(line: 369, column: 23, scope: !7972)
!7992 = !DILocation(line: 369, column: 21, scope: !7972)
!7993 = !DILocation(line: 372, column: 2, scope: !7972)
!7994 = !DILocation(line: 443, column: 2, scope: !7972)
!7995 = !DILocation(line: 444, column: 1, scope: !7972)
!7996 = distinct !DISubprogram(name: "strcpy", scope: !7997, file: !7997, line: 20, type: !7998, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8002)
!7997 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7998 = !DISubroutineType(types: !7999)
!7999 = !{!1087, !8000, !8001}
!8000 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1087)
!8001 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!8002 = !{!8003, !8004, !8005}
!8003 = !DILocalVariable(name: "d", arg: 1, scope: !7996, file: !7997, line: 20, type: !8000)
!8004 = !DILocalVariable(name: "s", arg: 2, scope: !7996, file: !7997, line: 20, type: !8001)
!8005 = !DILocalVariable(name: "dest", scope: !7996, file: !7997, line: 22, type: !1087)
!8006 = !DILocation(line: 0, scope: !7996)
!8007 = !DILocation(line: 24, column: 9, scope: !7996)
!8008 = !DILocation(line: 24, column: 12, scope: !7996)
!8009 = !DILocation(line: 24, column: 2, scope: !7996)
!8010 = !DILocation(line: 25, column: 6, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !7996, file: !7997, line: 24, column: 21)
!8012 = !DILocation(line: 26, column: 4, scope: !8011)
!8013 = !DILocation(line: 27, column: 4, scope: !8011)
!8014 = distinct !{!8014, !8009, !8015}
!8015 = !DILocation(line: 28, column: 2, scope: !7996)
!8016 = !DILocation(line: 30, column: 5, scope: !7996)
!8017 = !DILocation(line: 32, column: 2, scope: !7996)
!8018 = distinct !DISubprogram(name: "strncpy", scope: !7997, file: !7997, line: 42, type: !8019, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8021)
!8019 = !DISubroutineType(types: !8020)
!8020 = !{!1087, !8000, !8001, !344}
!8021 = !{!8022, !8023, !8024, !8025}
!8022 = !DILocalVariable(name: "d", arg: 1, scope: !8018, file: !7997, line: 42, type: !8000)
!8023 = !DILocalVariable(name: "s", arg: 2, scope: !8018, file: !7997, line: 42, type: !8001)
!8024 = !DILocalVariable(name: "n", arg: 3, scope: !8018, file: !7997, line: 42, type: !344)
!8025 = !DILocalVariable(name: "dest", scope: !8018, file: !7997, line: 44, type: !1087)
!8026 = !DILocation(line: 0, scope: !8018)
!8027 = !DILocation(line: 46, column: 12, scope: !8018)
!8028 = !DILocation(line: 46, column: 17, scope: !8018)
!8029 = !DILocation(line: 46, column: 20, scope: !8018)
!8030 = !DILocation(line: 46, column: 23, scope: !8018)
!8031 = !DILocation(line: 46, column: 2, scope: !8018)
!8032 = !DILocation(line: 47, column: 6, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8018, file: !7997, line: 46, column: 32)
!8034 = !DILocation(line: 48, column: 4, scope: !8033)
!8035 = !DILocation(line: 49, column: 4, scope: !8033)
!8036 = !DILocation(line: 50, column: 4, scope: !8033)
!8037 = distinct !{!8037, !8031, !8038}
!8038 = !DILocation(line: 51, column: 2, scope: !8018)
!8039 = !DILocation(line: 54, column: 6, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8018, file: !7997, line: 53, column: 16)
!8041 = !DILocation(line: 55, column: 4, scope: !8040)
!8042 = !DILocation(line: 56, column: 4, scope: !8040)
!8043 = !DILocation(line: 53, column: 11, scope: !8018)
!8044 = !DILocation(line: 53, column: 2, scope: !8018)
!8045 = distinct !{!8045, !8044, !8046}
!8046 = !DILocation(line: 57, column: 2, scope: !8018)
!8047 = !DILocation(line: 59, column: 2, scope: !8018)
!8048 = distinct !DISubprogram(name: "strchr", scope: !7997, file: !7997, line: 69, type: !8049, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8051)
!8049 = !DISubroutineType(types: !8050)
!8050 = !{!1087, !144, !103}
!8051 = !{!8052, !8053, !8054}
!8052 = !DILocalVariable(name: "s", arg: 1, scope: !8048, file: !7997, line: 69, type: !144)
!8053 = !DILocalVariable(name: "c", arg: 2, scope: !8048, file: !7997, line: 69, type: !103)
!8054 = !DILocalVariable(name: "tmp", scope: !8048, file: !7997, line: 71, type: !146)
!8055 = !DILocation(line: 0, scope: !8048)
!8056 = !DILocation(line: 73, column: 2, scope: !8048)
!8057 = !DILocation(line: 73, column: 10, scope: !8048)
!8058 = !DILocation(line: 73, column: 13, scope: !8048)
!8059 = !DILocation(line: 73, column: 21, scope: !8048)
!8060 = !DILocation(line: 74, column: 4, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8048, file: !7997, line: 73, column: 38)
!8062 = distinct !{!8062, !8056, !8063}
!8063 = !DILocation(line: 75, column: 2, scope: !8048)
!8064 = !DILocation(line: 77, column: 9, scope: !8048)
!8065 = !DILocation(line: 77, column: 2, scope: !8048)
!8066 = distinct !DISubprogram(name: "strrchr", scope: !7997, file: !7997, line: 87, type: !8049, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8067)
!8067 = !{!8068, !8069, !8070}
!8068 = !DILocalVariable(name: "s", arg: 1, scope: !8066, file: !7997, line: 87, type: !144)
!8069 = !DILocalVariable(name: "c", arg: 2, scope: !8066, file: !7997, line: 87, type: !103)
!8070 = !DILocalVariable(name: "match", scope: !8066, file: !7997, line: 89, type: !1087)
!8071 = !DILocation(line: 0, scope: !8066)
!8072 = !DILocation(line: 91, column: 2, scope: !8066)
!8073 = !DILocation(line: 92, column: 7, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8075, file: !7997, line: 92, column: 7)
!8075 = distinct !DILexicalBlock(scope: !8066, file: !7997, line: 91, column: 5)
!8076 = !DILocation(line: 92, column: 10, scope: !8074)
!8077 = !DILocation(line: 92, column: 7, scope: !8075)
!8078 = !DILocation(line: 95, column: 13, scope: !8066)
!8079 = !DILocation(line: 95, column: 2, scope: !8075)
!8080 = distinct !{!8080, !8072, !8081}
!8081 = !DILocation(line: 95, column: 15, scope: !8066)
!8082 = !DILocation(line: 97, column: 2, scope: !8066)
!8083 = distinct !DISubprogram(name: "strlen", scope: !7997, file: !7997, line: 107, type: !8084, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8086)
!8084 = !DISubroutineType(types: !8085)
!8085 = !{!344, !144}
!8086 = !{!8087, !8088}
!8087 = !DILocalVariable(name: "s", arg: 1, scope: !8083, file: !7997, line: 107, type: !144)
!8088 = !DILocalVariable(name: "n", scope: !8083, file: !7997, line: 109, type: !344)
!8089 = !DILocation(line: 0, scope: !8083)
!8090 = !DILocation(line: 111, column: 9, scope: !8083)
!8091 = !DILocation(line: 111, column: 12, scope: !8083)
!8092 = !DILocation(line: 111, column: 2, scope: !8083)
!8093 = !DILocation(line: 112, column: 4, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8083, file: !7997, line: 111, column: 21)
!8095 = !DILocation(line: 113, column: 4, scope: !8094)
!8096 = distinct !{!8096, !8092, !8097}
!8097 = !DILocation(line: 114, column: 2, scope: !8083)
!8098 = !DILocation(line: 116, column: 2, scope: !8083)
!8099 = distinct !DISubprogram(name: "strnlen", scope: !7997, file: !7997, line: 126, type: !8100, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8102)
!8100 = !DISubroutineType(types: !8101)
!8101 = !{!344, !144, !344}
!8102 = !{!8103, !8104, !8105}
!8103 = !DILocalVariable(name: "s", arg: 1, scope: !8099, file: !7997, line: 126, type: !144)
!8104 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8099, file: !7997, line: 126, type: !344)
!8105 = !DILocalVariable(name: "n", scope: !8099, file: !7997, line: 128, type: !344)
!8106 = !DILocation(line: 0, scope: !8099)
!8107 = !DILocation(line: 130, column: 9, scope: !8099)
!8108 = !DILocation(line: 130, column: 12, scope: !8099)
!8109 = !DILocation(line: 130, column: 20, scope: !8099)
!8110 = !DILocation(line: 130, column: 2, scope: !8099)
!8111 = !DILocation(line: 131, column: 4, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8099, file: !7997, line: 130, column: 35)
!8113 = !DILocation(line: 132, column: 4, scope: !8112)
!8114 = distinct !{!8114, !8110, !8115}
!8115 = !DILocation(line: 133, column: 2, scope: !8099)
!8116 = !DILocation(line: 135, column: 2, scope: !8099)
!8117 = distinct !DISubprogram(name: "strcmp", scope: !7997, file: !7997, line: 145, type: !8118, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8120)
!8118 = !DISubroutineType(types: !8119)
!8119 = !{!103, !144, !144}
!8120 = !{!8121, !8122}
!8121 = !DILocalVariable(name: "s1", arg: 1, scope: !8117, file: !7997, line: 145, type: !144)
!8122 = !DILocalVariable(name: "s2", arg: 2, scope: !8117, file: !7997, line: 145, type: !144)
!8123 = !DILocation(line: 0, scope: !8117)
!8124 = !DILocation(line: 147, column: 10, scope: !8117)
!8125 = !DILocation(line: 147, column: 17, scope: !8117)
!8126 = !DILocation(line: 147, column: 14, scope: !8117)
!8127 = !DILocation(line: 147, column: 22, scope: !8117)
!8128 = !DILocation(line: 148, column: 5, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8117, file: !7997, line: 147, column: 40)
!8130 = !DILocation(line: 149, column: 5, scope: !8129)
!8131 = distinct !{!8131, !8132, !8133}
!8132 = !DILocation(line: 147, column: 2, scope: !8117)
!8133 = !DILocation(line: 150, column: 2, scope: !8117)
!8134 = !DILocation(line: 152, column: 9, scope: !8117)
!8135 = !DILocation(line: 152, column: 15, scope: !8117)
!8136 = !DILocation(line: 152, column: 13, scope: !8117)
!8137 = !DILocation(line: 152, column: 2, scope: !8117)
!8138 = distinct !DISubprogram(name: "strncmp", scope: !7997, file: !7997, line: 162, type: !8139, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8141)
!8139 = !DISubroutineType(types: !8140)
!8140 = !{!103, !144, !144, !344}
!8141 = !{!8142, !8143, !8144}
!8142 = !DILocalVariable(name: "s1", arg: 1, scope: !8138, file: !7997, line: 162, type: !144)
!8143 = !DILocalVariable(name: "s2", arg: 2, scope: !8138, file: !7997, line: 162, type: !144)
!8144 = !DILocalVariable(name: "n", arg: 3, scope: !8138, file: !7997, line: 162, type: !344)
!8145 = !DILocation(line: 0, scope: !8138)
!8146 = !DILocation(line: 164, column: 17, scope: !8138)
!8147 = !DILocation(line: 164, column: 21, scope: !8138)
!8148 = !DILocation(line: 164, column: 28, scope: !8138)
!8149 = !DILocation(line: 164, column: 25, scope: !8138)
!8150 = !DILocation(line: 164, column: 33, scope: !8138)
!8151 = !DILocation(line: 165, column: 5, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8138, file: !7997, line: 164, column: 51)
!8153 = !DILocation(line: 166, column: 5, scope: !8152)
!8154 = !DILocation(line: 167, column: 4, scope: !8152)
!8155 = distinct !{!8155, !8156, !8157}
!8156 = !DILocation(line: 164, column: 2, scope: !8138)
!8157 = !DILocation(line: 168, column: 2, scope: !8138)
!8158 = !DILocation(line: 170, column: 25, scope: !8138)
!8159 = !DILocation(line: 170, column: 31, scope: !8138)
!8160 = !DILocation(line: 170, column: 29, scope: !8138)
!8161 = !DILocation(line: 170, column: 9, scope: !8138)
!8162 = !DILocation(line: 170, column: 2, scope: !8138)
!8163 = distinct !DISubprogram(name: "strtok_r", scope: !7997, file: !7997, line: 180, type: !8164, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8167)
!8164 = !DISubroutineType(types: !8165)
!8165 = !{!1087, !1087, !144, !8166}
!8166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!8167 = !{!8168, !8169, !8170, !8171, !8172}
!8168 = !DILocalVariable(name: "str", arg: 1, scope: !8163, file: !7997, line: 180, type: !1087)
!8169 = !DILocalVariable(name: "sep", arg: 2, scope: !8163, file: !7997, line: 180, type: !144)
!8170 = !DILocalVariable(name: "state", arg: 3, scope: !8163, file: !7997, line: 180, type: !8166)
!8171 = !DILocalVariable(name: "start", scope: !8163, file: !7997, line: 182, type: !1087)
!8172 = !DILocalVariable(name: "end", scope: !8163, file: !7997, line: 182, type: !1087)
!8173 = !DILocation(line: 0, scope: !8163)
!8174 = !DILocation(line: 184, column: 10, scope: !8163)
!8175 = !DILocation(line: 184, column: 22, scope: !8163)
!8176 = !DILocation(line: 187, column: 9, scope: !8163)
!8177 = !DILocation(line: 187, column: 16, scope: !8163)
!8178 = !DILocation(line: 187, column: 19, scope: !8163)
!8179 = !DILocation(line: 187, column: 2, scope: !8163)
!8180 = !DILocation(line: 188, column: 8, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8163, file: !7997, line: 187, column: 40)
!8182 = distinct !{!8182, !8179, !8183}
!8183 = !DILocation(line: 189, column: 2, scope: !8163)
!8184 = !DILocation(line: 198, column: 9, scope: !8163)
!8185 = !DILocation(line: 198, column: 18, scope: !8163)
!8186 = !DILocation(line: 198, column: 17, scope: !8163)
!8187 = !DILocation(line: 198, column: 2, scope: !8163)
!8188 = !DILocation(line: 199, column: 6, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8163, file: !7997, line: 198, column: 37)
!8190 = !DILocation(line: 198, column: 14, scope: !8163)
!8191 = distinct !{!8191, !8187, !8192}
!8192 = !DILocation(line: 200, column: 2, scope: !8163)
!8193 = !DILocation(line: 203, column: 8, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !7997, line: 202, column: 20)
!8195 = distinct !DILexicalBlock(scope: !8163, file: !7997, line: 202, column: 6)
!8196 = !DILocation(line: 204, column: 16, scope: !8194)
!8197 = !DILocation(line: 205, column: 2, scope: !8194)
!8198 = !DILocation(line: 210, column: 1, scope: !8163)
!8199 = distinct !DISubprogram(name: "strcat", scope: !7997, file: !7997, line: 212, type: !7998, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8200)
!8200 = !{!8201, !8202}
!8201 = !DILocalVariable(name: "dest", arg: 1, scope: !8199, file: !7997, line: 212, type: !8000)
!8202 = !DILocalVariable(name: "src", arg: 2, scope: !8199, file: !7997, line: 212, type: !8001)
!8203 = !DILocation(line: 0, scope: !8199)
!8204 = !DILocation(line: 214, column: 16, scope: !8199)
!8205 = !DILocation(line: 214, column: 14, scope: !8199)
!8206 = !DILocation(line: 214, column: 2, scope: !8199)
!8207 = !DILocation(line: 215, column: 2, scope: !8199)
!8208 = distinct !DISubprogram(name: "strncat", scope: !7997, file: !7997, line: 218, type: !8019, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8209)
!8209 = !{!8210, !8211, !8212, !8213, !8214}
!8210 = !DILocalVariable(name: "dest", arg: 1, scope: !8208, file: !7997, line: 218, type: !8000)
!8211 = !DILocalVariable(name: "src", arg: 2, scope: !8208, file: !7997, line: 218, type: !8001)
!8212 = !DILocalVariable(name: "n", arg: 3, scope: !8208, file: !7997, line: 219, type: !344)
!8213 = !DILocalVariable(name: "orig_dest", scope: !8208, file: !7997, line: 221, type: !1087)
!8214 = !DILocalVariable(name: "len", scope: !8208, file: !7997, line: 222, type: !344)
!8215 = !DILocation(line: 0, scope: !8208)
!8216 = !DILocation(line: 222, column: 15, scope: !8208)
!8217 = !DILocation(line: 224, column: 7, scope: !8208)
!8218 = !DILocation(line: 225, column: 14, scope: !8208)
!8219 = !DILocation(line: 225, column: 19, scope: !8208)
!8220 = !DILocation(line: 225, column: 11, scope: !8208)
!8221 = !DILocation(line: 225, column: 23, scope: !8208)
!8222 = !DILocation(line: 225, column: 28, scope: !8208)
!8223 = !DILocation(line: 225, column: 2, scope: !8208)
!8224 = !DILocation(line: 226, column: 17, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8208, file: !7997, line: 225, column: 38)
!8226 = !DILocation(line: 226, column: 8, scope: !8225)
!8227 = !DILocation(line: 226, column: 11, scope: !8225)
!8228 = distinct !{!8228, !8223, !8229}
!8229 = !DILocation(line: 227, column: 2, scope: !8208)
!8230 = !DILocation(line: 228, column: 8, scope: !8208)
!8231 = !DILocation(line: 230, column: 2, scope: !8208)
!8232 = distinct !DISubprogram(name: "memcmp", scope: !7997, file: !7997, line: 239, type: !8233, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8235)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{!103, !13, !13, !344}
!8235 = !{!8236, !8237, !8238, !8239, !8240}
!8236 = !DILocalVariable(name: "m1", arg: 1, scope: !8232, file: !7997, line: 239, type: !13)
!8237 = !DILocalVariable(name: "m2", arg: 2, scope: !8232, file: !7997, line: 239, type: !13)
!8238 = !DILocalVariable(name: "n", arg: 3, scope: !8232, file: !7997, line: 239, type: !344)
!8239 = !DILocalVariable(name: "c1", scope: !8232, file: !7997, line: 241, type: !144)
!8240 = !DILocalVariable(name: "c2", scope: !8232, file: !7997, line: 242, type: !144)
!8241 = !DILocation(line: 0, scope: !8232)
!8242 = !DILocation(line: 244, column: 7, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8232, file: !7997, line: 244, column: 6)
!8244 = !DILocation(line: 244, column: 6, scope: !8232)
!8245 = !DILocation(line: 248, column: 10, scope: !8232)
!8246 = !DILocation(line: 248, column: 14, scope: !8232)
!8247 = !DILocation(line: 248, column: 19, scope: !8232)
!8248 = !DILocation(line: 248, column: 2, scope: !8232)
!8249 = !DILocation(line: 248, column: 23, scope: !8232)
!8250 = !DILocation(line: 248, column: 30, scope: !8232)
!8251 = !DILocation(line: 248, column: 27, scope: !8232)
!8252 = !DILocation(line: 249, column: 5, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8232, file: !7997, line: 248, column: 36)
!8254 = !DILocation(line: 250, column: 5, scope: !8253)
!8255 = distinct !{!8255, !8248, !8256}
!8256 = !DILocation(line: 251, column: 2, scope: !8232)
!8257 = !DILocation(line: 253, column: 9, scope: !8232)
!8258 = !DILocation(line: 253, column: 15, scope: !8232)
!8259 = !DILocation(line: 253, column: 13, scope: !8232)
!8260 = !DILocation(line: 253, column: 2, scope: !8232)
!8261 = !DILocation(line: 254, column: 1, scope: !8232)
!8262 = distinct !DISubprogram(name: "memmove", scope: !7997, file: !7997, line: 263, type: !8263, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8265)
!8263 = !DISubroutineType(types: !8264)
!8264 = !{!102, !102, !13, !344}
!8265 = !{!8266, !8267, !8268, !8269, !8270}
!8266 = !DILocalVariable(name: "d", arg: 1, scope: !8262, file: !7997, line: 263, type: !102)
!8267 = !DILocalVariable(name: "s", arg: 2, scope: !8262, file: !7997, line: 263, type: !13)
!8268 = !DILocalVariable(name: "n", arg: 3, scope: !8262, file: !7997, line: 263, type: !344)
!8269 = !DILocalVariable(name: "dest", scope: !8262, file: !7997, line: 265, type: !1087)
!8270 = !DILocalVariable(name: "src", scope: !8262, file: !7997, line: 266, type: !144)
!8271 = !DILocation(line: 0, scope: !8262)
!8272 = !DILocation(line: 268, column: 21, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8262, file: !7997, line: 268, column: 6)
!8274 = !DILocation(line: 268, column: 28, scope: !8273)
!8275 = !DILocation(line: 268, column: 6, scope: !8262)
!8276 = !DILocation(line: 280, column: 12, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8273, file: !7997, line: 278, column: 9)
!8278 = !DILocation(line: 280, column: 3, scope: !8277)
!8279 = !DILocation(line: 275, column: 5, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !7997, line: 274, column: 17)
!8281 = distinct !DILexicalBlock(scope: !8273, file: !7997, line: 268, column: 33)
!8282 = !DILocation(line: 276, column: 14, scope: !8280)
!8283 = !DILocation(line: 276, column: 4, scope: !8280)
!8284 = !DILocation(line: 276, column: 12, scope: !8280)
!8285 = !DILocation(line: 274, column: 12, scope: !8281)
!8286 = !DILocation(line: 274, column: 3, scope: !8281)
!8287 = distinct !{!8287, !8286, !8288}
!8288 = !DILocation(line: 277, column: 3, scope: !8281)
!8289 = !DILocation(line: 281, column: 12, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8277, file: !7997, line: 280, column: 17)
!8291 = !DILocation(line: 281, column: 10, scope: !8290)
!8292 = !DILocation(line: 282, column: 8, scope: !8290)
!8293 = !DILocation(line: 283, column: 7, scope: !8290)
!8294 = !DILocation(line: 284, column: 5, scope: !8290)
!8295 = distinct !{!8295, !8278, !8296}
!8296 = !DILocation(line: 285, column: 3, scope: !8277)
!8297 = !DILocation(line: 288, column: 2, scope: !8262)
!8298 = distinct !DISubprogram(name: "memcpy", scope: !7997, file: !7997, line: 298, type: !8299, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8303)
!8299 = !DISubroutineType(types: !8300)
!8300 = !{!102, !8301, !8302, !344}
!8301 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8302 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8303 = !{!8304, !8305, !8306, !8307, !8308}
!8304 = !DILocalVariable(name: "d", arg: 1, scope: !8298, file: !7997, line: 298, type: !8301)
!8305 = !DILocalVariable(name: "s", arg: 2, scope: !8298, file: !7997, line: 298, type: !8302)
!8306 = !DILocalVariable(name: "n", arg: 3, scope: !8298, file: !7997, line: 298, type: !344)
!8307 = !DILocalVariable(name: "d_byte", scope: !8298, file: !7997, line: 302, type: !224)
!8308 = !DILocalVariable(name: "s_byte", scope: !8298, file: !7997, line: 303, type: !3103)
!8309 = !DILocation(line: 0, scope: !8298)
!8310 = !DILocation(line: 337, column: 11, scope: !8298)
!8311 = !DILocation(line: 337, column: 2, scope: !8298)
!8312 = !DILocation(line: 338, column: 25, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8298, file: !7997, line: 337, column: 16)
!8314 = !DILocation(line: 338, column: 17, scope: !8313)
!8315 = !DILocation(line: 338, column: 11, scope: !8313)
!8316 = !DILocation(line: 338, column: 15, scope: !8313)
!8317 = !DILocation(line: 339, column: 4, scope: !8313)
!8318 = distinct !{!8318, !8311, !8319}
!8319 = !DILocation(line: 340, column: 2, scope: !8298)
!8320 = !DILocation(line: 342, column: 2, scope: !8298)
!8321 = distinct !DISubprogram(name: "memset", scope: !7997, file: !7997, line: 352, type: !8322, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8324)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{!102, !102, !103, !344}
!8324 = !{!8325, !8326, !8327, !8328, !8329}
!8325 = !DILocalVariable(name: "buf", arg: 1, scope: !8321, file: !7997, line: 352, type: !102)
!8326 = !DILocalVariable(name: "c", arg: 2, scope: !8321, file: !7997, line: 352, type: !103)
!8327 = !DILocalVariable(name: "n", arg: 3, scope: !8321, file: !7997, line: 352, type: !344)
!8328 = !DILocalVariable(name: "d_byte", scope: !8321, file: !7997, line: 356, type: !224)
!8329 = !DILocalVariable(name: "c_byte", scope: !8321, file: !7997, line: 357, type: !155)
!8330 = !DILocation(line: 0, scope: !8321)
!8331 = !DILocation(line: 357, column: 25, scope: !8321)
!8332 = !DILocation(line: 389, column: 11, scope: !8321)
!8333 = !DILocation(line: 389, column: 2, scope: !8321)
!8334 = !DILocation(line: 390, column: 11, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8321, file: !7997, line: 389, column: 16)
!8336 = !DILocation(line: 390, column: 15, scope: !8335)
!8337 = !DILocation(line: 391, column: 4, scope: !8335)
!8338 = distinct !{!8338, !8333, !8339}
!8339 = !DILocation(line: 392, column: 2, scope: !8321)
!8340 = !DILocation(line: 394, column: 2, scope: !8321)
!8341 = distinct !DISubprogram(name: "memchr", scope: !7997, file: !7997, line: 404, type: !8342, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !8344)
!8342 = !DISubroutineType(types: !8343)
!8343 = !{!102, !13, !103, !344}
!8344 = !{!8345, !8346, !8347, !8348}
!8345 = !DILocalVariable(name: "s", arg: 1, scope: !8341, file: !7997, line: 404, type: !13)
!8346 = !DILocalVariable(name: "c", arg: 2, scope: !8341, file: !7997, line: 404, type: !103)
!8347 = !DILocalVariable(name: "n", arg: 3, scope: !8341, file: !7997, line: 404, type: !344)
!8348 = !DILocalVariable(name: "p", scope: !8349, file: !7997, line: 407, type: !3103)
!8349 = distinct !DILexicalBlock(scope: !8350, file: !7997, line: 406, column: 14)
!8350 = distinct !DILexicalBlock(scope: !8341, file: !7997, line: 406, column: 6)
!8351 = !DILocation(line: 0, scope: !8341)
!8352 = !DILocation(line: 406, column: 8, scope: !8350)
!8353 = !DILocation(line: 406, column: 6, scope: !8341)
!8354 = !DILocation(line: 409, column: 3, scope: !8349)
!8355 = !DILocation(line: 0, scope: !8349)
!8356 = !DILocation(line: 410, column: 8, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8358, file: !7997, line: 410, column: 8)
!8358 = distinct !DILexicalBlock(scope: !8349, file: !7997, line: 409, column: 6)
!8359 = !DILocation(line: 410, column: 13, scope: !8357)
!8360 = !DILocation(line: 410, column: 8, scope: !8358)
!8361 = distinct !{!8361, !8354, !8362}
!8362 = !DILocation(line: 414, column: 20, scope: !8349)
!8363 = !DILocation(line: 417, column: 2, scope: !8341)
!8364 = !DILocation(line: 418, column: 1, scope: !8341)
!8365 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !533, file: !533, line: 23, type: !3449, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8366)
!8366 = !{!8367}
!8367 = !DILocalVariable(name: "hook", arg: 1, scope: !8365, file: !533, line: 23, type: !106)
!8368 = !DILocation(line: 0, scope: !8365)
!8369 = !DILocation(line: 25, column: 15, scope: !8365)
!8370 = !DILocation(line: 26, column: 1, scope: !8365)
!8371 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !533, file: !533, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8372)
!8372 = !{!8373}
!8373 = !DILocalVariable(name: "c", arg: 1, scope: !8371, file: !533, line: 14, type: !103)
!8374 = !DILocation(line: 0, scope: !8371)
!8375 = !DILocation(line: 18, column: 2, scope: !8371)
!8376 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !533, file: !533, line: 28, type: !8377, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8379)
!8377 = !DISubroutineType(types: !8378)
!8378 = !{!103, !103, !529}
!8379 = !{!8380, !8381}
!8380 = !DILocalVariable(name: "c", arg: 1, scope: !8376, file: !533, line: 28, type: !103)
!8381 = !DILocalVariable(name: "stream", arg: 2, scope: !8376, file: !533, line: 28, type: !529)
!8382 = !DILocation(line: 0, scope: !8376)
!8383 = !DILocation(line: 30, column: 27, scope: !8376)
!8384 = !DILocation(line: 30, column: 50, scope: !8376)
!8385 = !DILocation(line: 30, column: 9, scope: !8376)
!8386 = !DILocation(line: 30, column: 2, scope: !8376)
!8387 = distinct !DISubprogram(name: "fputc", scope: !533, file: !533, line: 41, type: !8377, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8388)
!8388 = !{!8389, !8390}
!8389 = !DILocalVariable(name: "c", arg: 1, scope: !8387, file: !533, line: 41, type: !103)
!8390 = !DILocalVariable(name: "stream", arg: 2, scope: !8387, file: !533, line: 41, type: !529)
!8391 = !DILocation(line: 0, scope: !8387)
!8392 = !DILocation(line: 43, column: 9, scope: !8387)
!8393 = !DILocation(line: 43, column: 2, scope: !8387)
!8394 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8395, file: !8395, line: 72, type: !8377, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8396)
!8395 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getchar")
!8396 = !{!8397, !8398}
!8397 = !DILocalVariable(name: "c", arg: 1, scope: !8394, file: !8395, line: 72, type: !103)
!8398 = !DILocalVariable(name: "stream", arg: 2, scope: !8394, file: !8395, line: 72, type: !529)
!8399 = !DILocation(line: 0, scope: !8394)
!8400 = !DILocation(line: 81, column: 2, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8394, file: !8395, line: 81, column: 2)
!8402 = !{i64 2155123513}
!8403 = !DILocation(line: 82, column: 9, scope: !8394)
!8404 = !DILocation(line: 82, column: 2, scope: !8394)
!8405 = distinct !DISubprogram(name: "fputs", scope: !533, file: !533, line: 46, type: !8406, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8409)
!8406 = !DISubroutineType(types: !8407)
!8407 = !{!103, !8001, !8408}
!8408 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !529)
!8409 = !{!8410, !8411, !8412, !8413}
!8410 = !DILocalVariable(name: "s", arg: 1, scope: !8405, file: !533, line: 46, type: !8001)
!8411 = !DILocalVariable(name: "stream", arg: 2, scope: !8405, file: !533, line: 46, type: !8408)
!8412 = !DILocalVariable(name: "len", scope: !8405, file: !533, line: 48, type: !103)
!8413 = !DILocalVariable(name: "ret", scope: !8405, file: !533, line: 49, type: !103)
!8414 = !DILocation(line: 0, scope: !8405)
!8415 = !DILocation(line: 48, column: 12, scope: !8405)
!8416 = !DILocation(line: 51, column: 8, scope: !8405)
!8417 = !DILocation(line: 53, column: 13, scope: !8405)
!8418 = !DILocation(line: 53, column: 9, scope: !8405)
!8419 = !DILocation(line: 53, column: 2, scope: !8405)
!8420 = distinct !DISubprogram(name: "fwrite", scope: !533, file: !533, line: 99, type: !8421, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8423)
!8421 = !DISubroutineType(types: !8422)
!8422 = !{!344, !8302, !344, !344, !8408}
!8423 = !{!8424, !8425, !8426, !8427}
!8424 = !DILocalVariable(name: "ptr", arg: 1, scope: !8420, file: !533, line: 99, type: !8302)
!8425 = !DILocalVariable(name: "size", arg: 2, scope: !8420, file: !533, line: 99, type: !344)
!8426 = !DILocalVariable(name: "nitems", arg: 3, scope: !8420, file: !533, line: 99, type: !344)
!8427 = !DILocalVariable(name: "stream", arg: 4, scope: !8420, file: !533, line: 100, type: !8408)
!8428 = !DILocation(line: 0, scope: !8420)
!8429 = !DILocation(line: 102, column: 9, scope: !8420)
!8430 = !DILocation(line: 102, column: 2, scope: !8420)
!8431 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8395, file: !8395, line: 96, type: !8421, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8432)
!8432 = !{!8433, !8434, !8435, !8436}
!8433 = !DILocalVariable(name: "ptr", arg: 1, scope: !8431, file: !8395, line: 96, type: !8302)
!8434 = !DILocalVariable(name: "size", arg: 2, scope: !8431, file: !8395, line: 96, type: !344)
!8435 = !DILocalVariable(name: "nitems", arg: 3, scope: !8431, file: !8395, line: 96, type: !344)
!8436 = !DILocalVariable(name: "stream", arg: 4, scope: !8431, file: !8395, line: 96, type: !8408)
!8437 = !DILocation(line: 0, scope: !8431)
!8438 = !DILocation(line: 107, column: 2, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8431, file: !8395, line: 107, column: 2)
!8440 = !{i64 2155123617}
!8441 = !DILocation(line: 108, column: 9, scope: !8431)
!8442 = !DILocation(line: 108, column: 2, scope: !8431)
!8443 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !533, file: !533, line: 56, type: !8421, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8444)
!8444 = !{!8445, !8446, !8447, !8448, !8449, !8450, !8451, !8452}
!8445 = !DILocalVariable(name: "ptr", arg: 1, scope: !8443, file: !533, line: 56, type: !8302)
!8446 = !DILocalVariable(name: "size", arg: 2, scope: !8443, file: !533, line: 56, type: !344)
!8447 = !DILocalVariable(name: "nitems", arg: 3, scope: !8443, file: !533, line: 57, type: !344)
!8448 = !DILocalVariable(name: "stream", arg: 4, scope: !8443, file: !533, line: 57, type: !8408)
!8449 = !DILocalVariable(name: "i", scope: !8443, file: !533, line: 59, type: !344)
!8450 = !DILocalVariable(name: "j", scope: !8443, file: !533, line: 60, type: !344)
!8451 = !DILocalVariable(name: "p", scope: !8443, file: !533, line: 61, type: !3103)
!8452 = !DILabel(scope: !8443, name: "done", file: !533, line: 82)
!8453 = !DILocation(line: 0, scope: !8443)
!8454 = !DILocation(line: 63, column: 14, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8443, file: !533, line: 63, column: 6)
!8456 = !DILocation(line: 63, column: 24, scope: !8455)
!8457 = !DILocation(line: 72, column: 3, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8443, file: !533, line: 70, column: 5)
!8459 = !DILocation(line: 0, scope: !8458)
!8460 = !DILocation(line: 73, column: 8, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !533, line: 73, column: 8)
!8462 = distinct !DILexicalBlock(scope: !8458, file: !533, line: 72, column: 6)
!8463 = !DILocation(line: 73, column: 29, scope: !8461)
!8464 = !DILocation(line: 73, column: 27, scope: !8461)
!8465 = !DILocation(line: 73, column: 21, scope: !8461)
!8466 = !DILocation(line: 73, column: 33, scope: !8461)
!8467 = !DILocation(line: 73, column: 8, scope: !8462)
!8468 = !DILocation(line: 76, column: 5, scope: !8462)
!8469 = !DILocation(line: 77, column: 14, scope: !8458)
!8470 = !DILocation(line: 77, column: 3, scope: !8462)
!8471 = distinct !{!8471, !8457, !8472}
!8472 = !DILocation(line: 77, column: 17, scope: !8458)
!8473 = !DILocation(line: 79, column: 4, scope: !8458)
!8474 = !DILocation(line: 80, column: 13, scope: !8443)
!8475 = !DILocation(line: 80, column: 2, scope: !8458)
!8476 = distinct !{!8476, !8477, !8478}
!8477 = !DILocation(line: 70, column: 2, scope: !8443)
!8478 = !DILocation(line: 80, column: 16, scope: !8443)
!8479 = !DILocation(line: 82, column: 1, scope: !8443)
!8480 = !DILocation(line: 83, column: 17, scope: !8443)
!8481 = !DILocation(line: 83, column: 2, scope: !8443)
!8482 = !DILocation(line: 84, column: 1, scope: !8443)
!8483 = distinct !DISubprogram(name: "puts", scope: !533, file: !533, line: 106, type: !8484, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8486)
!8484 = !DISubroutineType(types: !8485)
!8485 = !{!103, !144}
!8486 = !{!8487}
!8487 = !DILocalVariable(name: "s", arg: 1, scope: !8483, file: !533, line: 106, type: !144)
!8488 = !DILocation(line: 0, scope: !8483)
!8489 = !DILocation(line: 108, column: 6, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8483, file: !533, line: 108, column: 6)
!8491 = !DILocation(line: 108, column: 23, scope: !8490)
!8492 = !DILocation(line: 108, column: 6, scope: !8483)
!8493 = !DILocation(line: 112, column: 9, scope: !8483)
!8494 = !DILocation(line: 112, column: 29, scope: !8483)
!8495 = !DILocation(line: 112, column: 2, scope: !8483)
!8496 = !DILocation(line: 113, column: 1, scope: !8483)
!8497 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !674, file: !674, line: 368, type: !727, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8498)
!8498 = !{!8499}
!8499 = !DILocalVariable(name: "dev", arg: 1, scope: !8497, file: !674, line: 368, type: !703)
!8500 = !DILocation(line: 0, scope: !8497)
!8501 = !DILocation(line: 370, column: 2, scope: !8497)
!8502 = !DILocation(line: 371, column: 1, scope: !8497)
!8503 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !674, file: !674, line: 243, type: !8504, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8506)
!8504 = !DISubroutineType(types: !8505)
!8505 = !{null, !103, !103, !703}
!8506 = !{!8507, !8508, !8509, !8510, !8512}
!8507 = !DILocalVariable(name: "min", arg: 1, scope: !8503, file: !674, line: 243, type: !103)
!8508 = !DILocalVariable(name: "max", arg: 2, scope: !8503, file: !674, line: 243, type: !103)
!8509 = !DILocalVariable(name: "dev", arg: 3, scope: !8503, file: !674, line: 243, type: !703)
!8510 = !DILocalVariable(name: "data", scope: !8503, file: !674, line: 245, type: !8511)
!8511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 32)
!8512 = !DILocalVariable(name: "line", scope: !8503, file: !674, line: 246, type: !103)
!8513 = !DILocation(line: 0, scope: !8503)
!8514 = !DILocation(line: 245, column: 38, scope: !8503)
!8515 = !DILocation(line: 249, column: 24, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !674, line: 249, column: 2)
!8517 = distinct !DILexicalBlock(scope: !8503, file: !674, line: 249, column: 2)
!8518 = !DILocation(line: 249, column: 2, scope: !8517)
!8519 = !DILocation(line: 251, column: 7, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8521, file: !674, line: 251, column: 7)
!8521 = distinct !DILexicalBlock(scope: !8516, file: !674, line: 249, column: 39)
!8522 = !DILocation(line: 251, column: 7, scope: !8521)
!8523 = !DILocation(line: 253, column: 4, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8520, file: !674, line: 251, column: 36)
!8525 = !DILocation(line: 256, column: 24, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8524, file: !674, line: 256, column: 8)
!8527 = !DILocation(line: 256, column: 9, scope: !8526)
!8528 = !DILocation(line: 256, column: 8, scope: !8524)
!8529 = !DILocation(line: 260, column: 43, scope: !8524)
!8530 = !DILocation(line: 260, column: 4, scope: !8524)
!8531 = !DILocation(line: 261, column: 3, scope: !8524)
!8532 = !DILocation(line: 249, column: 35, scope: !8516)
!8533 = distinct !{!8533, !8518, !8534}
!8534 = !DILocation(line: 262, column: 2, scope: !8517)
!8535 = !DILocation(line: 263, column: 1, scope: !8503)
!8536 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !674, file: !674, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8537)
!8537 = !{!8538}
!8538 = !DILocalVariable(name: "line", arg: 1, scope: !8536, file: !674, line: 158, type: !103)
!8539 = !DILocation(line: 0, scope: !8536)
!8540 = !DILocation(line: 170, column: 38, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !674, line: 160, column: 17)
!8542 = distinct !DILexicalBlock(scope: !8536, file: !674, line: 160, column: 6)
!8543 = !DILocation(line: 170, column: 10, scope: !8541)
!8544 = !DILocation(line: 176, column: 1, scope: !8536)
!8545 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !674, file: !674, line: 183, type: !8546, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8548)
!8546 = !DISubroutineType(types: !8547)
!8547 = !{null, !103}
!8548 = !{!8549}
!8549 = !DILocalVariable(name: "line", arg: 1, scope: !8545, file: !674, line: 183, type: !103)
!8550 = !DILocation(line: 0, scope: !8545)
!8551 = !DILocation(line: 195, column: 28, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !674, line: 185, column: 17)
!8553 = distinct !DILexicalBlock(scope: !8545, file: !674, line: 185, column: 6)
!8554 = !DILocation(line: 195, column: 3, scope: !8552)
!8555 = !DILocation(line: 200, column: 1, scope: !8545)
!8556 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8557, file: !8557, line: 910, type: !6995, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8558)
!8557 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8558 = !{!8559}
!8559 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8556, file: !8557, line: 910, type: !121)
!8560 = !DILocation(line: 0, scope: !8556)
!8561 = !DILocation(line: 912, column: 3, scope: !8556)
!8562 = !DILocation(line: 913, column: 1, scope: !8556)
!8563 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8557, file: !8557, line: 834, type: !7911, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8564)
!8564 = !{!8565}
!8565 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8563, file: !8557, line: 834, type: !121)
!8566 = !DILocation(line: 0, scope: !8563)
!8567 = !DILocation(line: 836, column: 11, scope: !8563)
!8568 = !DILocation(line: 836, column: 40, scope: !8563)
!8569 = !DILocation(line: 836, column: 3, scope: !8563)
!8570 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !674, file: !674, line: 304, type: !727, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8571)
!8571 = !{!8572}
!8572 = !DILocalVariable(name: "dev", arg: 1, scope: !8570, file: !674, line: 304, type: !703)
!8573 = !DILocation(line: 0, scope: !8570)
!8574 = !DILocation(line: 306, column: 2, scope: !8570)
!8575 = !DILocation(line: 307, column: 1, scope: !8570)
!8576 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !674, file: !674, line: 299, type: !727, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8577)
!8577 = !{!8578}
!8578 = !DILocalVariable(name: "dev", arg: 1, scope: !8576, file: !674, line: 299, type: !703)
!8579 = !DILocation(line: 0, scope: !8576)
!8580 = !DILocation(line: 301, column: 2, scope: !8576)
!8581 = !DILocation(line: 302, column: 1, scope: !8576)
!8582 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !674, file: !674, line: 294, type: !727, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8583)
!8583 = !{!8584}
!8584 = !DILocalVariable(name: "dev", arg: 1, scope: !8582, file: !674, line: 294, type: !703)
!8585 = !DILocation(line: 0, scope: !8582)
!8586 = !DILocation(line: 296, column: 2, scope: !8582)
!8587 = !DILocation(line: 297, column: 1, scope: !8582)
!8588 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !674, file: !674, line: 397, type: !727, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8589)
!8589 = !{!8590}
!8590 = !DILocalVariable(name: "dev", arg: 1, scope: !8588, file: !674, line: 397, type: !703)
!8591 = !DILocation(line: 0, scope: !8588)
!8592 = !DILocation(line: 399, column: 2, scope: !8588)
!8593 = !DILocation(line: 400, column: 1, scope: !8588)
!8594 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !674, file: !674, line: 392, type: !727, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8595)
!8595 = !{!8596}
!8596 = !DILocalVariable(name: "dev", arg: 1, scope: !8594, file: !674, line: 392, type: !703)
!8597 = !DILocation(line: 0, scope: !8594)
!8598 = !DILocation(line: 394, column: 2, scope: !8594)
!8599 = !DILocation(line: 395, column: 1, scope: !8594)
!8600 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !674, file: !674, line: 289, type: !727, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8601)
!8601 = !{!8602}
!8602 = !DILocalVariable(name: "dev", arg: 1, scope: !8600, file: !674, line: 289, type: !703)
!8603 = !DILocation(line: 0, scope: !8600)
!8604 = !DILocation(line: 291, column: 2, scope: !8600)
!8605 = !DILocation(line: 292, column: 1, scope: !8600)
!8606 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !674, file: !674, line: 387, type: !727, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8607)
!8607 = !{!8608}
!8608 = !DILocalVariable(name: "dev", arg: 1, scope: !8606, file: !674, line: 387, type: !703)
!8609 = !DILocation(line: 0, scope: !8606)
!8610 = !DILocation(line: 389, column: 2, scope: !8606)
!8611 = !DILocation(line: 390, column: 1, scope: !8606)
!8612 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !674, file: !674, line: 382, type: !727, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8613)
!8613 = !{!8614}
!8614 = !DILocalVariable(name: "dev", arg: 1, scope: !8612, file: !674, line: 382, type: !703)
!8615 = !DILocation(line: 0, scope: !8612)
!8616 = !DILocation(line: 384, column: 2, scope: !8612)
!8617 = !DILocation(line: 385, column: 1, scope: !8612)
!8618 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !674, file: !674, line: 373, type: !727, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8619)
!8619 = !{!8620}
!8620 = !DILocalVariable(name: "dev", arg: 1, scope: !8618, file: !674, line: 373, type: !703)
!8621 = !DILocation(line: 0, scope: !8618)
!8622 = !DILocation(line: 375, column: 2, scope: !8618)
!8623 = !DILocation(line: 376, column: 1, scope: !8618)
!8624 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !674, file: !674, line: 284, type: !727, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8625)
!8625 = !{!8626}
!8626 = !DILocalVariable(name: "dev", arg: 1, scope: !8624, file: !674, line: 284, type: !703)
!8627 = !DILocation(line: 0, scope: !8624)
!8628 = !DILocation(line: 286, column: 2, scope: !8624)
!8629 = !DILocation(line: 287, column: 1, scope: !8624)
!8630 = distinct !DISubprogram(name: "stm32_exti_init", scope: !674, file: !674, line: 416, type: !701, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8631)
!8631 = !{!8632}
!8632 = !DILocalVariable(name: "dev", arg: 1, scope: !8630, file: !674, line: 416, type: !703)
!8633 = !DILocation(line: 0, scope: !8630)
!8634 = !DILocation(line: 418, column: 2, scope: !8630)
!8635 = !DILocation(line: 420, column: 2, scope: !8630)
!8636 = !DILocation(line: 0, scope: !726)
!8637 = !DILocation(line: 493, column: 2, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !726, file: !674, line: 493, column: 2)
!8639 = !DILocation(line: 497, column: 2, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !726, file: !674, line: 497, column: 2)
!8641 = !DILocation(line: 507, column: 2, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !726, file: !674, line: 507, column: 2)
!8643 = !DILocation(line: 512, column: 2, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !726, file: !674, line: 512, column: 2)
!8645 = !DILocation(line: 516, column: 2, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !726, file: !674, line: 516, column: 2)
!8647 = !DILocation(line: 523, column: 2, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !726, file: !674, line: 523, column: 2)
!8649 = !DILocation(line: 527, column: 2, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !726, file: !674, line: 527, column: 2)
!8651 = !DILocation(line: 581, column: 2, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !726, file: !674, line: 581, column: 2)
!8653 = !DILocation(line: 586, column: 2, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !726, file: !674, line: 586, column: 2)
!8655 = !DILocation(line: 591, column: 2, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !726, file: !674, line: 591, column: 2)
!8657 = !DILocation(line: 595, column: 2, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !726, file: !674, line: 595, column: 2)
!8659 = !DILocation(line: 607, column: 1, scope: !726)
!8660 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !674, file: !674, line: 112, type: !8546, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8661)
!8661 = !{!8662, !8663}
!8662 = !DILocalVariable(name: "line", arg: 1, scope: !8660, file: !674, line: 112, type: !103)
!8663 = !DILocalVariable(name: "irqnum", scope: !8660, file: !674, line: 114, type: !103)
!8664 = !DILocation(line: 0, scope: !8660)
!8665 = !DILocation(line: 121, column: 11, scope: !8660)
!8666 = !DILocation(line: 130, column: 26, scope: !8660)
!8667 = !DILocation(line: 130, column: 2, scope: !8660)
!8668 = !DILocation(line: 134, column: 2, scope: !8660)
!8669 = !DILocation(line: 135, column: 1, scope: !8660)
!8670 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8557, file: !8557, line: 268, type: !6995, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8671)
!8671 = !{!8672}
!8672 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8670, file: !8557, line: 268, type: !121)
!8673 = !DILocation(line: 0, scope: !8670)
!8674 = !DILocation(line: 270, column: 3, scope: !8670)
!8675 = !DILocation(line: 271, column: 1, scope: !8670)
!8676 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !674, file: !674, line: 137, type: !8546, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8677)
!8677 = !{!8678}
!8678 = !DILocalVariable(name: "line", arg: 1, scope: !8676, file: !674, line: 137, type: !103)
!8679 = !DILocation(line: 0, scope: !8676)
!8680 = !DILocation(line: 141, column: 11, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8676, file: !674, line: 141, column: 6)
!8682 = !DILocation(line: 141, column: 6, scope: !8676)
!8683 = !DILocation(line: 145, column: 28, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8681, file: !674, line: 141, column: 17)
!8685 = !DILocation(line: 145, column: 3, scope: !8684)
!8686 = !DILocation(line: 147, column: 2, scope: !8684)
!8687 = !DILocation(line: 151, column: 1, scope: !8676)
!8688 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8557, file: !8557, line: 309, type: !6995, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8689)
!8689 = !{!8690}
!8690 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8688, file: !8557, line: 309, type: !121)
!8691 = !DILocation(line: 0, scope: !8688)
!8692 = !DILocation(line: 311, column: 3, scope: !8688)
!8693 = !DILocation(line: 312, column: 1, scope: !8688)
!8694 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !674, file: !674, line: 202, type: !8695, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8697)
!8695 = !DISubroutineType(types: !8696)
!8696 = !{null, !103, !103}
!8697 = !{!8698, !8699}
!8698 = !DILocalVariable(name: "line", arg: 1, scope: !8694, file: !674, line: 202, type: !103)
!8699 = !DILocalVariable(name: "trigger", arg: 2, scope: !8694, file: !674, line: 202, type: !103)
!8700 = !DILocation(line: 0, scope: !8694)
!8701 = !DILocation(line: 211, column: 2, scope: !8694)
!8702 = !DILocation(line: 213, column: 36, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8694, file: !674, line: 211, column: 19)
!8704 = !DILocation(line: 213, column: 3, scope: !8703)
!8705 = !DILocation(line: 214, column: 3, scope: !8703)
!8706 = !DILocation(line: 215, column: 3, scope: !8703)
!8707 = !DILocation(line: 217, column: 35, scope: !8703)
!8708 = !DILocation(line: 217, column: 3, scope: !8703)
!8709 = !DILocation(line: 218, column: 3, scope: !8703)
!8710 = !DILocation(line: 219, column: 3, scope: !8703)
!8711 = !DILocation(line: 221, column: 36, scope: !8703)
!8712 = !DILocation(line: 221, column: 3, scope: !8703)
!8713 = !DILocation(line: 222, column: 3, scope: !8703)
!8714 = !DILocation(line: 223, column: 3, scope: !8703)
!8715 = !DILocation(line: 225, column: 35, scope: !8703)
!8716 = !DILocation(line: 225, column: 3, scope: !8703)
!8717 = !DILocation(line: 226, column: 3, scope: !8703)
!8718 = !DILocation(line: 227, column: 3, scope: !8703)
!8719 = !DILocation(line: 232, column: 1, scope: !8694)
!8720 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8557, file: !8557, line: 573, type: !6995, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8721)
!8721 = !{!8722}
!8722 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8720, file: !8557, line: 573, type: !121)
!8723 = !DILocation(line: 0, scope: !8720)
!8724 = !DILocation(line: 575, column: 3, scope: !8720)
!8725 = !DILocation(line: 577, column: 1, scope: !8720)
!8726 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8557, file: !8557, line: 703, type: !6995, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8727)
!8727 = !{!8728}
!8728 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8726, file: !8557, line: 703, type: !121)
!8729 = !DILocation(line: 0, scope: !8726)
!8730 = !DILocation(line: 705, column: 3, scope: !8726)
!8731 = !DILocation(line: 706, column: 1, scope: !8726)
!8732 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8557, file: !8557, line: 529, type: !6995, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8733)
!8733 = !{!8734}
!8734 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8732, file: !8557, line: 529, type: !121)
!8735 = !DILocation(line: 0, scope: !8732)
!8736 = !DILocation(line: 531, column: 3, scope: !8732)
!8737 = !DILocation(line: 533, column: 1, scope: !8732)
!8738 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8557, file: !8557, line: 661, type: !6995, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8739)
!8739 = !{!8740}
!8740 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8738, file: !8557, line: 661, type: !121)
!8741 = !DILocation(line: 0, scope: !8738)
!8742 = !DILocation(line: 663, column: 3, scope: !8738)
!8743 = !DILocation(line: 664, column: 1, scope: !8738)
!8744 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !674, file: !674, line: 433, type: !8745, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8747)
!8745 = !DISubroutineType(types: !8746)
!8746 = !{!103, !103, !714, !102}
!8747 = !{!8748, !8749, !8750, !8751, !8753}
!8748 = !DILocalVariable(name: "line", arg: 1, scope: !8744, file: !674, line: 433, type: !103)
!8749 = !DILocalVariable(name: "cb", arg: 2, scope: !8744, file: !674, line: 433, type: !714)
!8750 = !DILocalVariable(name: "arg", arg: 3, scope: !8744, file: !674, line: 433, type: !102)
!8751 = !DILocalVariable(name: "dev", scope: !8744, file: !674, line: 435, type: !8752)
!8752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !703)
!8753 = !DILocalVariable(name: "data", scope: !8744, file: !674, line: 436, type: !8511)
!8754 = !DILocation(line: 0, scope: !8744)
!8755 = !DILocation(line: 438, column: 21, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8744, file: !674, line: 438, column: 6)
!8757 = !DILocation(line: 438, column: 6, scope: !8756)
!8758 = !DILocation(line: 438, column: 6, scope: !8744)
!8759 = !DILocation(line: 442, column: 20, scope: !8744)
!8760 = !DILocation(line: 443, column: 17, scope: !8744)
!8761 = !DILocation(line: 443, column: 22, scope: !8744)
!8762 = !DILocation(line: 445, column: 2, scope: !8744)
!8763 = !DILocation(line: 446, column: 1, scope: !8744)
!8764 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !674, file: !674, line: 448, type: !8546, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8765)
!8765 = !{!8766, !8767, !8768}
!8766 = !DILocalVariable(name: "line", arg: 1, scope: !8764, file: !674, line: 448, type: !103)
!8767 = !DILocalVariable(name: "dev", scope: !8764, file: !674, line: 450, type: !8752)
!8768 = !DILocalVariable(name: "data", scope: !8764, file: !674, line: 451, type: !8511)
!8769 = !DILocation(line: 0, scope: !8764)
!8770 = !DILocation(line: 453, column: 17, scope: !8764)
!8771 = !DILocation(line: 453, column: 20, scope: !8764)
!8772 = !DILocation(line: 454, column: 17, scope: !8764)
!8773 = !DILocation(line: 454, column: 22, scope: !8764)
!8774 = !DILocation(line: 455, column: 1, scope: !8764)
!8775 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !865, file: !865, line: 183, type: !903, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8776)
!8776 = !{!8777, !8778, !8779, !8780, !8781}
!8777 = !DILocalVariable(name: "dev", arg: 1, scope: !8775, file: !865, line: 183, type: !894)
!8778 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8775, file: !865, line: 184, type: !905)
!8779 = !DILocalVariable(name: "pclken", scope: !8775, file: !865, line: 186, type: !855)
!8780 = !DILocalVariable(name: "reg", scope: !8775, file: !865, line: 187, type: !1613)
!8781 = !DILocalVariable(name: "reg_val", scope: !8775, file: !865, line: 188, type: !121)
!8782 = !DILocation(line: 0, scope: !8775)
!8783 = !DILocation(line: 192, column: 6, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8775, file: !865, line: 192, column: 6)
!8785 = !DILocation(line: 192, column: 6, scope: !8775)
!8786 = !DILocation(line: 197, column: 52, scope: !8775)
!8787 = !DILocation(line: 197, column: 8, scope: !8775)
!8788 = !DILocation(line: 198, column: 12, scope: !8775)
!8789 = !DILocation(line: 199, column: 21, scope: !8775)
!8790 = !DILocation(line: 199, column: 10, scope: !8775)
!8791 = !DILocation(line: 200, column: 7, scope: !8775)
!8792 = !DILocation(line: 202, column: 2, scope: !8775)
!8793 = !DILocation(line: 203, column: 1, scope: !8775)
!8794 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !865, file: !865, line: 205, type: !903, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8795)
!8795 = !{!8796, !8797, !8798, !8799, !8800}
!8796 = !DILocalVariable(name: "dev", arg: 1, scope: !8794, file: !865, line: 205, type: !894)
!8797 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8794, file: !865, line: 206, type: !905)
!8798 = !DILocalVariable(name: "pclken", scope: !8794, file: !865, line: 208, type: !855)
!8799 = !DILocalVariable(name: "reg", scope: !8794, file: !865, line: 209, type: !1613)
!8800 = !DILocalVariable(name: "reg_val", scope: !8794, file: !865, line: 210, type: !121)
!8801 = !DILocation(line: 0, scope: !8794)
!8802 = !DILocation(line: 214, column: 6, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8794, file: !865, line: 214, column: 6)
!8804 = !DILocation(line: 214, column: 6, scope: !8794)
!8805 = !DILocation(line: 219, column: 52, scope: !8794)
!8806 = !DILocation(line: 219, column: 8, scope: !8794)
!8807 = !DILocation(line: 220, column: 12, scope: !8794)
!8808 = !DILocation(line: 221, column: 22, scope: !8794)
!8809 = !DILocation(line: 221, column: 13, scope: !8794)
!8810 = !DILocation(line: 221, column: 10, scope: !8794)
!8811 = !DILocation(line: 222, column: 7, scope: !8794)
!8812 = !DILocation(line: 224, column: 2, scope: !8794)
!8813 = !DILocation(line: 225, column: 1, scope: !8794)
!8814 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !865, file: !865, line: 262, type: !919, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8815)
!8815 = !{!8816, !8817, !8818, !8819, !8820, !8821, !8822, !8823}
!8816 = !DILocalVariable(name: "clock", arg: 1, scope: !8814, file: !865, line: 262, type: !894)
!8817 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8814, file: !865, line: 263, type: !905)
!8818 = !DILocalVariable(name: "rate", arg: 3, scope: !8814, file: !865, line: 264, type: !861)
!8819 = !DILocalVariable(name: "pclken", scope: !8814, file: !865, line: 266, type: !855)
!8820 = !DILocalVariable(name: "ahb_clock", scope: !8814, file: !865, line: 273, type: !121)
!8821 = !DILocalVariable(name: "apb1_clock", scope: !8814, file: !865, line: 274, type: !121)
!8822 = !DILocalVariable(name: "apb2_clock", scope: !8814, file: !865, line: 276, type: !121)
!8823 = !DILocalVariable(name: "ahb3_clock", scope: !8814, file: !865, line: 286, type: !121)
!8824 = !DILocation(line: 0, scope: !8814)
!8825 = !DILocation(line: 273, column: 23, scope: !8814)
!8826 = !DILocation(line: 299, column: 18, scope: !8814)
!8827 = !DILocation(line: 299, column: 2, scope: !8814)
!8828 = !DILocation(line: 274, column: 24, scope: !8814)
!8829 = !DILocation(line: 319, column: 3, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8814, file: !865, line: 299, column: 23)
!8831 = !DILocation(line: 276, column: 24, scope: !8814)
!8832 = !DILocation(line: 323, column: 3, scope: !8830)
!8833 = !DILocation(line: 346, column: 33, scope: !8830)
!8834 = !DILocation(line: 346, column: 11, scope: !8830)
!8835 = !DILocation(line: 350, column: 3, scope: !8830)
!8836 = !DILocation(line: 354, column: 33, scope: !8830)
!8837 = !DILocation(line: 354, column: 11, scope: !8830)
!8838 = !DILocation(line: 358, column: 3, scope: !8830)
!8839 = !DILocation(line: 374, column: 3, scope: !8830)
!8840 = !DILocation(line: 379, column: 3, scope: !8830)
!8841 = !DILocation(line: 0, scope: !8830)
!8842 = !DILocation(line: 396, column: 1, scope: !8814)
!8843 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !865, file: !865, line: 227, type: !935, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8844)
!8844 = !{!8845, !8846, !8847, !8848, !8849, !8850, !8851, !8852}
!8845 = !DILocalVariable(name: "dev", arg: 1, scope: !8843, file: !865, line: 227, type: !894)
!8846 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8843, file: !865, line: 228, type: !905)
!8847 = !DILocalVariable(name: "data", arg: 3, scope: !8843, file: !865, line: 229, type: !102)
!8848 = !DILocalVariable(name: "pclken", scope: !8843, file: !865, line: 233, type: !855)
!8849 = !DILocalVariable(name: "reg", scope: !8843, file: !865, line: 234, type: !1613)
!8850 = !DILocalVariable(name: "reg_val", scope: !8843, file: !865, line: 235, type: !121)
!8851 = !DILocalVariable(name: "dt_val", scope: !8843, file: !865, line: 235, type: !121)
!8852 = !DILocalVariable(name: "err", scope: !8843, file: !865, line: 236, type: !103)
!8853 = !DILocation(line: 0, scope: !8843)
!8854 = !DILocation(line: 241, column: 30, scope: !8843)
!8855 = !DILocation(line: 241, column: 8, scope: !8843)
!8856 = !DILocation(line: 242, column: 10, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8843, file: !865, line: 242, column: 6)
!8858 = !DILocation(line: 242, column: 6, scope: !8843)
!8859 = !DILocation(line: 247, column: 11, scope: !8843)
!8860 = !DILocation(line: 248, column: 6, scope: !8843)
!8861 = !DILocation(line: 247, column: 44, scope: !8843)
!8862 = !DILocation(line: 250, column: 6, scope: !8843)
!8863 = !DILocation(line: 249, column: 52, scope: !8843)
!8864 = !DILocation(line: 249, column: 8, scope: !8843)
!8865 = !DILocation(line: 251, column: 12, scope: !8843)
!8866 = !DILocation(line: 252, column: 10, scope: !8843)
!8867 = !DILocation(line: 253, column: 7, scope: !8843)
!8868 = !DILocation(line: 255, column: 2, scope: !8843)
!8869 = !DILocation(line: 260, column: 1, scope: !8843)
!8870 = distinct !DISubprogram(name: "enabled_clock", scope: !865, file: !865, line: 100, type: !8871, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8873)
!8871 = !DISubroutineType(types: !8872)
!8872 = !{!103, !121}
!8873 = !{!8874, !8875}
!8874 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8870, file: !865, line: 100, type: !121)
!8875 = !DILocalVariable(name: "r", scope: !8870, file: !865, line: 102, type: !103)
!8876 = !DILocation(line: 0, scope: !8870)
!8877 = !DILocation(line: 104, column: 2, scope: !8870)
!8878 = !DILocation(line: 180, column: 2, scope: !8870)
!8879 = !DILocation(line: 181, column: 1, scope: !8870)
!8880 = distinct !DISubprogram(name: "get_bus_clock", scope: !865, file: !865, line: 79, type: !8881, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8883)
!8881 = !DISubroutineType(types: !8882)
!8882 = !{!121, !121, !121}
!8883 = !{!8884, !8885}
!8884 = !DILocalVariable(name: "clock", arg: 1, scope: !8880, file: !865, line: 79, type: !121)
!8885 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8880, file: !865, line: 79, type: !121)
!8886 = !DILocation(line: 0, scope: !8880)
!8887 = !DILocation(line: 81, column: 15, scope: !8880)
!8888 = !DILocation(line: 81, column: 2, scope: !8880)
!8889 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !865, file: !865, line: 68, type: !8890, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8892)
!8890 = !DISubroutineType(types: !8891)
!8891 = !{!121, !121, !103, !103, !103}
!8892 = !{!8893, !8894, !8895, !8896}
!8893 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8889, file: !865, line: 68, type: !121)
!8894 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8889, file: !865, line: 69, type: !103)
!8895 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8889, file: !865, line: 70, type: !103)
!8896 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8889, file: !865, line: 71, type: !103)
!8897 = !DILocation(line: 0, scope: !8889)
!8898 = !DILocation(line: 75, column: 22, scope: !8889)
!8899 = !DILocation(line: 76, column: 13, scope: !8889)
!8900 = !DILocation(line: 75, column: 34, scope: !8889)
!8901 = !DILocation(line: 75, column: 2, scope: !8889)
!8902 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !865, file: !865, line: 641, type: !892, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8903)
!8903 = !{!8904, !8905, !8906}
!8904 = !DILocalVariable(name: "dev", arg: 1, scope: !8902, file: !865, line: 641, type: !894)
!8905 = !DILocalVariable(name: "old_flash_freq", scope: !8902, file: !865, line: 664, type: !121)
!8906 = !DILocalVariable(name: "new_flash_freq", scope: !8902, file: !865, line: 665, type: !121)
!8907 = !DILocation(line: 0, scope: !8902)
!8908 = !DILocation(line: 646, column: 2, scope: !8902)
!8909 = !DILocation(line: 667, column: 19, scope: !8902)
!8910 = !DILocation(line: 674, column: 21, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8902, file: !865, line: 674, column: 6)
!8912 = !DILocation(line: 674, column: 6, scope: !8902)
!8913 = !DILocation(line: 675, column: 3, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8911, file: !865, line: 674, column: 59)
!8915 = !DILocation(line: 676, column: 2, scope: !8914)
!8916 = !DILocation(line: 680, column: 2, scope: !8902)
!8917 = !DILocation(line: 683, column: 2, scope: !8902)
!8918 = !DILocation(line: 690, column: 3, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8920, file: !865, line: 689, column: 9)
!8920 = distinct !DILexicalBlock(scope: !8902, file: !865, line: 685, column: 6)
!8921 = !DILocation(line: 695, column: 2, scope: !8902)
!8922 = !DILocation(line: 696, column: 2, scope: !8902)
!8923 = !DILocation(line: 696, column: 9, scope: !8902)
!8924 = !DILocation(line: 696, column: 34, scope: !8902)
!8925 = distinct !{!8925, !8922, !8926}
!8926 = !DILocation(line: 697, column: 2, scope: !8902)
!8927 = !DILocation(line: 720, column: 21, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8902, file: !865, line: 720, column: 6)
!8929 = !DILocation(line: 720, column: 6, scope: !8902)
!8930 = !DILocation(line: 721, column: 3, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8928, file: !865, line: 720, column: 60)
!8932 = !DILocation(line: 722, column: 2, scope: !8931)
!8933 = !DILocation(line: 725, column: 18, scope: !8902)
!8934 = !DILocation(line: 728, column: 2, scope: !8902)
!8935 = !DILocation(line: 730, column: 2, scope: !8902)
!8936 = !DILocation(line: 745, column: 2, scope: !8902)
!8937 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8938, file: !8938, line: 3275, type: !6985, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!8938 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8939 = !DILocation(line: 3277, column: 21, scope: !8937)
!8940 = !DILocation(line: 3277, column: 3, scope: !8937)
!8941 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !865, file: !865, line: 507, type: !3318, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!8942 = !DILocation(line: 516, column: 4, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8944, file: !865, line: 515, column: 10)
!8944 = distinct !DILexicalBlock(scope: !8945, file: !865, line: 513, column: 7)
!8945 = distinct !DILexicalBlock(scope: !8946, file: !865, line: 510, column: 37)
!8946 = distinct !DILexicalBlock(scope: !8941, file: !865, line: 510, column: 6)
!8947 = !DILocation(line: 526, column: 3, scope: !8945)
!8948 = !DILocation(line: 527, column: 3, scope: !8945)
!8949 = !DILocation(line: 527, column: 10, scope: !8945)
!8950 = !DILocation(line: 527, column: 31, scope: !8945)
!8951 = distinct !{!8951, !8948, !8952}
!8952 = !DILocation(line: 529, column: 3, scope: !8945)
!8953 = !DILocation(line: 583, column: 3, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8955, file: !865, line: 577, column: 37)
!8955 = distinct !DILexicalBlock(scope: !8941, file: !865, line: 577, column: 6)
!8956 = !DILocation(line: 584, column: 3, scope: !8954)
!8957 = !DILocation(line: 584, column: 10, scope: !8954)
!8958 = !DILocation(line: 584, column: 31, scope: !8954)
!8959 = distinct !{!8959, !8956, !8960}
!8960 = !DILocation(line: 585, column: 3, scope: !8954)
!8961 = !DILocation(line: 627, column: 1, scope: !8941)
!8962 = distinct !DISubprogram(name: "set_up_plls", scope: !865, file: !865, line: 448, type: !3318, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!8963 = !DILocation(line: 460, column: 6, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8962, file: !865, line: 460, column: 6)
!8965 = !DILocation(line: 460, column: 31, scope: !8964)
!8966 = !DILocation(line: 460, column: 6, scope: !8962)
!8967 = !DILocation(line: 461, column: 3, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8964, file: !865, line: 460, column: 67)
!8969 = !DILocation(line: 462, column: 3, scope: !8968)
!8970 = !DILocation(line: 463, column: 2, scope: !8968)
!8971 = !DILocation(line: 464, column: 2, scope: !8962)
!8972 = !DILocation(line: 488, column: 2, scope: !8962)
!8973 = !DILocation(line: 492, column: 2, scope: !8962)
!8974 = !DILocation(line: 496, column: 2, scope: !8962)
!8975 = !DILocation(line: 499, column: 2, scope: !8962)
!8976 = !DILocation(line: 500, column: 2, scope: !8962)
!8977 = !DILocation(line: 500, column: 9, scope: !8962)
!8978 = !DILocation(line: 500, column: 30, scope: !8962)
!8979 = distinct !{!8979, !8976, !8980}
!8980 = !DILocation(line: 502, column: 2, scope: !8962)
!8981 = !DILocation(line: 505, column: 1, scope: !8962)
!8982 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8938, file: !8938, line: 3224, type: !6995, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8983)
!8983 = !{!8984}
!8984 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8982, file: !8938, line: 3224, type: !121)
!8985 = !DILocation(line: 0, scope: !8982)
!8986 = !DILocation(line: 3226, column: 3, scope: !8982)
!8987 = !DILocation(line: 3227, column: 1, scope: !8982)
!8988 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8938, file: !8938, line: 3188, type: !6995, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8989)
!8989 = !{!8990}
!8990 = !DILocalVariable(name: "Source", arg: 1, scope: !8988, file: !8938, line: 3188, type: !121)
!8991 = !DILocation(line: 0, scope: !8988)
!8992 = !DILocation(line: 3190, column: 3, scope: !8988)
!8993 = !DILocation(line: 3191, column: 1, scope: !8988)
!8994 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8938, file: !8938, line: 3204, type: !6985, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!8995 = !DILocation(line: 3206, column: 21, scope: !8994)
!8996 = !DILocation(line: 3206, column: 3, scope: !8994)
!8997 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8938, file: !8938, line: 3240, type: !6995, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8998)
!8998 = !{!8999}
!8999 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8997, file: !8938, line: 3240, type: !121)
!9000 = !DILocation(line: 0, scope: !8997)
!9001 = !DILocation(line: 3242, column: 3, scope: !8997)
!9002 = !DILocation(line: 3243, column: 1, scope: !8997)
!9003 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8938, file: !8938, line: 3256, type: !6995, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !9004)
!9004 = !{!9005}
!9005 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9003, file: !8938, line: 3256, type: !121)
!9006 = !DILocation(line: 0, scope: !9003)
!9007 = !DILocation(line: 3258, column: 3, scope: !9003)
!9008 = !DILocation(line: 3259, column: 1, scope: !9003)
!9009 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !865, file: !865, line: 409, type: !3318, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!9010 = !DILocation(line: 412, column: 6, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9009, file: !865, line: 412, column: 6)
!9012 = !DILocation(line: 412, column: 27, scope: !9011)
!9013 = !DILocation(line: 412, column: 6, scope: !9009)
!9014 = !DILocation(line: 414, column: 3, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9011, file: !865, line: 412, column: 33)
!9016 = !DILocation(line: 415, column: 3, scope: !9015)
!9017 = !DILocation(line: 415, column: 10, scope: !9015)
!9018 = !DILocation(line: 415, column: 31, scope: !9015)
!9019 = distinct !{!9019, !9016, !9020}
!9020 = !DILocation(line: 417, column: 3, scope: !9015)
!9021 = !DILocation(line: 421, column: 2, scope: !9009)
!9022 = !DILocation(line: 422, column: 2, scope: !9009)
!9023 = !DILocation(line: 422, column: 9, scope: !9009)
!9024 = !DILocation(line: 422, column: 34, scope: !9009)
!9025 = distinct !{!9025, !9022, !9026}
!9026 = !DILocation(line: 423, column: 2, scope: !9009)
!9027 = !DILocation(line: 424, column: 1, scope: !9009)
!9028 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8938, file: !8938, line: 4195, type: !3318, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!9029 = !DILocation(line: 4197, column: 3, scope: !9028)
!9030 = !DILocation(line: 4198, column: 1, scope: !9028)
!9031 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8938, file: !8938, line: 4184, type: !3318, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!9032 = !DILocation(line: 4186, column: 3, scope: !9031)
!9033 = !DILocation(line: 4187, column: 1, scope: !9031)
!9034 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8938, file: !8938, line: 4205, type: !6985, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!9035 = !DILocation(line: 4207, column: 11, scope: !9034)
!9036 = !DILocation(line: 4207, column: 44, scope: !9034)
!9037 = !DILocation(line: 4207, column: 3, scope: !9034)
!9038 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8938, file: !8938, line: 3007, type: !6985, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!9039 = !DILocation(line: 3009, column: 11, scope: !9038)
!9040 = !DILocation(line: 3009, column: 44, scope: !9038)
!9041 = !DILocation(line: 3009, column: 3, scope: !9038)
!9042 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8938, file: !8938, line: 2987, type: !3318, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!9043 = !DILocation(line: 2989, column: 3, scope: !9042)
!9044 = !DILocation(line: 2990, column: 1, scope: !9042)
!9045 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8938, file: !8938, line: 2939, type: !3318, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!9046 = !DILocation(line: 2941, column: 3, scope: !9045)
!9047 = !DILocation(line: 2942, column: 1, scope: !9045)
!9048 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8938, file: !8938, line: 2949, type: !3318, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!9049 = !DILocation(line: 2951, column: 3, scope: !9048)
!9050 = !DILocation(line: 2952, column: 1, scope: !9048)
!9051 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8938, file: !8938, line: 2969, type: !6985, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!9052 = !DILocation(line: 2971, column: 11, scope: !9051)
!9053 = !DILocation(line: 2971, column: 44, scope: !9051)
!9054 = !DILocation(line: 2971, column: 3, scope: !9051)
!9055 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8938, file: !8938, line: 3143, type: !3318, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!9056 = !DILocation(line: 3145, column: 3, scope: !9055)
!9057 = !DILocation(line: 3146, column: 1, scope: !9055)
!9058 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8938, file: !8938, line: 3163, type: !6985, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !461)
!9059 = !DILocation(line: 3165, column: 11, scope: !9058)
!9060 = !DILocation(line: 3165, column: 46, scope: !9058)
!9061 = !DILocation(line: 3165, column: 3, scope: !9058)
!9062 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9063, file: !9063, line: 40, type: !6985, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !461)
!9063 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9064 = !DILocation(line: 45, column: 3, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9066, file: !9063, line: 44, column: 44)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !9063, line: 44, column: 13)
!9067 = distinct !DILexicalBlock(scope: !9062, file: !9063, line: 42, column: 6)
!9068 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9063, file: !9063, line: 56, type: !3318, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !461)
!9069 = !DILocation(line: 58, column: 2, scope: !9068)
!9070 = !DILocation(line: 62, column: 1, scope: !9068)
!9071 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8938, file: !8938, line: 4304, type: !9072, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !9074)
!9072 = !DISubroutineType(types: !9073)
!9073 = !{null, !121, !121, !121, !121}
!9074 = !{!9075, !9076, !9077, !9078}
!9075 = !DILocalVariable(name: "Source", arg: 1, scope: !9071, file: !8938, line: 4304, type: !121)
!9076 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9071, file: !8938, line: 4304, type: !121)
!9077 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9071, file: !8938, line: 4304, type: !121)
!9078 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9071, file: !8938, line: 4304, type: !121)
!9079 = !DILocation(line: 0, scope: !9071)
!9080 = !DILocation(line: 4306, column: 3, scope: !9071)
!9081 = !DILocation(line: 4308, column: 3, scope: !9071)
!9082 = !DILocation(line: 4310, column: 3, scope: !9071)
!9083 = !DILocation(line: 4312, column: 1, scope: !9071)
!9084 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9063, file: !9063, line: 69, type: !3318, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !461)
!9085 = !DILocation(line: 72, column: 2, scope: !9084)
!9086 = !DILocation(line: 73, column: 1, scope: !9084)
!9087 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9088, file: !9088, line: 1185, type: !6995, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !9089)
!9088 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9089 = !{!9090, !9091}
!9090 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9087, file: !9088, line: 1185, type: !121)
!9091 = !DILocalVariable(name: "tmpreg", scope: !9087, file: !9088, line: 1187, type: !120)
!9092 = !DILocation(line: 0, scope: !9087)
!9093 = !DILocation(line: 1187, column: 3, scope: !9087)
!9094 = !DILocation(line: 1187, column: 17, scope: !9087)
!9095 = !DILocation(line: 1188, column: 3, scope: !9087)
!9096 = !DILocation(line: 1190, column: 12, scope: !9087)
!9097 = !DILocation(line: 1190, column: 10, scope: !9087)
!9098 = !DILocation(line: 1191, column: 9, scope: !9087)
!9099 = !DILocation(line: 1192, column: 1, scope: !9087)
!9100 = distinct !DISubprogram(name: "uart_console_init", scope: !943, file: !943, line: 588, type: !980, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9101)
!9101 = !{!9102}
!9102 = !DILocalVariable(name: "arg", arg: 1, scope: !9100, file: !943, line: 588, type: !959)
!9103 = !DILocation(line: 0, scope: !9100)
!9104 = !DILocation(line: 593, column: 7, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9100, file: !943, line: 593, column: 6)
!9106 = !DILocation(line: 593, column: 6, scope: !9100)
!9107 = !DILocation(line: 597, column: 2, scope: !9100)
!9108 = !DILocation(line: 599, column: 2, scope: !9100)
!9109 = !DILocation(line: 600, column: 1, scope: !9100)
!9110 = distinct !DISubprogram(name: "device_is_ready", scope: !6745, file: !6745, line: 47, type: !9111, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9113)
!9111 = !DISubroutineType(types: !9112)
!9112 = !{!157, !959}
!9113 = !{!9114}
!9114 = !DILocalVariable(name: "dev", arg: 1, scope: !9110, file: !6745, line: 47, type: !959)
!9115 = !DILocation(line: 0, scope: !9110)
!9116 = !DILocation(line: 55, column: 2, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9110, file: !6745, line: 55, column: 2)
!9118 = !{i64 2155286606}
!9119 = !DILocation(line: 56, column: 9, scope: !9110)
!9120 = !DILocation(line: 56, column: 2, scope: !9110)
!9121 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !943, file: !943, line: 573, type: !3318, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !461)
!9122 = !DILocation(line: 576, column: 2, scope: !9121)
!9123 = !DILocation(line: 579, column: 2, scope: !9121)
!9124 = !DILocation(line: 581, column: 1, scope: !9121)
!9125 = distinct !DISubprogram(name: "console_out", scope: !943, file: !943, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9126)
!9126 = !{!9127, !9128}
!9127 = !DILocalVariable(name: "c", arg: 1, scope: !9125, file: !943, line: 77, type: !103)
!9128 = !DILocalVariable(name: "handled_by_debug_server", scope: !9125, file: !943, line: 81, type: !103)
!9129 = !DILocation(line: 0, scope: !9125)
!9130 = !DILocation(line: 81, column: 32, scope: !9125)
!9131 = !DILocation(line: 83, column: 6, scope: !9125)
!9132 = !DILocation(line: 89, column: 11, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9125, file: !943, line: 89, column: 6)
!9134 = !DILocation(line: 89, column: 6, scope: !9125)
!9135 = !DILocation(line: 90, column: 3, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9133, file: !943, line: 89, column: 17)
!9137 = !DILocation(line: 91, column: 2, scope: !9136)
!9138 = !DILocation(line: 92, column: 2, scope: !9125)
!9139 = !DILocation(line: 94, column: 2, scope: !9125)
!9140 = !DILocation(line: 95, column: 1, scope: !9125)
!9141 = distinct !DISubprogram(name: "uart_poll_out", scope: !6006, file: !6006, line: 95, type: !976, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9142)
!9142 = !{!9143, !9144}
!9143 = !DILocalVariable(name: "dev", arg: 1, scope: !9141, file: !6006, line: 95, type: !959)
!9144 = !DILocalVariable(name: "out_char", arg: 2, scope: !9141, file: !6006, line: 95, type: !155)
!9145 = !DILocation(line: 0, scope: !9141)
!9146 = !DILocation(line: 105, column: 2, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9141, file: !6006, line: 105, column: 2)
!9148 = !{i64 2155369851}
!9149 = !DILocation(line: 106, column: 2, scope: !9141)
!9150 = !DILocation(line: 107, column: 1, scope: !9141)
!9151 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !203, file: !203, line: 574, type: !976, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9152)
!9152 = !{!9153, !9154, !9155}
!9153 = !DILocalVariable(name: "dev", arg: 1, scope: !9151, file: !203, line: 574, type: !959)
!9154 = !DILocalVariable(name: "out_char", arg: 2, scope: !9151, file: !203, line: 575, type: !155)
!9155 = !DILocalVariable(name: "api", scope: !9151, file: !203, line: 577, type: !951)
!9156 = !DILocation(line: 0, scope: !9151)
!9157 = !DILocation(line: 578, column: 40, scope: !9151)
!9158 = !DILocation(line: 580, column: 7, scope: !9151)
!9159 = !DILocation(line: 580, column: 2, scope: !9151)
!9160 = !DILocation(line: 581, column: 1, scope: !9151)
!9161 = distinct !DISubprogram(name: "debug_hook_out_nop", scope: !943, file: !943, line: 49, type: !1093, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9162)
!9162 = !{!9163}
!9163 = !DILocalVariable(name: "c", arg: 1, scope: !9161, file: !943, line: 49, type: !146)
!9164 = !DILocation(line: 0, scope: !9161)
!9165 = !DILocation(line: 51, column: 2, scope: !9161)
!9166 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9111, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9167)
!9167 = !{!9168}
!9168 = !DILocalVariable(name: "dev", arg: 1, scope: !9166, file: !141, line: 730, type: !959)
!9169 = !DILocation(line: 0, scope: !9166)
!9170 = !DILocation(line: 732, column: 9, scope: !9166)
!9171 = !DILocation(line: 732, column: 2, scope: !9166)
!9172 = distinct !DISubprogram(name: "uart_console_in_debug_hook_install", scope: !943, file: !943, line: 44, type: !9173, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9175)
!9173 = !DISubroutineType(types: !9174)
!9174 = !{null, !1135}
!9175 = !{!9176}
!9176 = !DILocalVariable(name: "hook", arg: 1, scope: !9172, file: !943, line: 44, type: !1135)
!9177 = !DILocation(line: 0, scope: !9172)
!9178 = !DILocation(line: 46, column: 16, scope: !9172)
!9179 = !DILocation(line: 47, column: 1, scope: !9172)
!9180 = distinct !DISubprogram(name: "uart_console_out_debug_hook_install", scope: !943, file: !943, line: 55, type: !9181, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9183)
!9181 = !DISubroutineType(types: !9182)
!9182 = !{null, !1090}
!9183 = !{!9184}
!9184 = !DILocalVariable(name: "hook", arg: 1, scope: !9180, file: !943, line: 55, type: !1090)
!9185 = !DILocation(line: 0, scope: !9180)
!9186 = !DILocation(line: 57, column: 17, scope: !9180)
!9187 = !DILocation(line: 58, column: 1, scope: !9180)
!9188 = distinct !DISubprogram(name: "uart_register_input", scope: !943, file: !943, line: 549, type: !9189, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9191)
!9189 = !DISubroutineType(types: !9190)
!9190 = !{null, !1040, !1040, !1084}
!9191 = !{!9192, !9193, !9194}
!9192 = !DILocalVariable(name: "avail", arg: 1, scope: !9188, file: !943, line: 549, type: !1040)
!9193 = !DILocalVariable(name: "lines", arg: 2, scope: !9188, file: !943, line: 549, type: !1040)
!9194 = !DILocalVariable(name: "completion", arg: 3, scope: !9188, file: !943, line: 550, type: !1084)
!9195 = !DILocation(line: 0, scope: !9188)
!9196 = !DILocation(line: 552, column: 14, scope: !9188)
!9197 = !DILocation(line: 553, column: 14, scope: !9188)
!9198 = !DILocation(line: 554, column: 16, scope: !9188)
!9199 = !DILocation(line: 556, column: 2, scope: !9188)
!9200 = !DILocation(line: 557, column: 1, scope: !9188)
!9201 = distinct !DISubprogram(name: "console_input_init", scope: !943, file: !943, line: 532, type: !3318, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9202)
!9202 = !{!9203}
!9203 = !DILocalVariable(name: "c", scope: !9201, file: !943, line: 534, type: !154)
!9204 = !DILocation(line: 534, column: 2, scope: !9201)
!9205 = !DILocation(line: 536, column: 2, scope: !9201)
!9206 = !DILocation(line: 537, column: 2, scope: !9201)
!9207 = !DILocation(line: 539, column: 2, scope: !9201)
!9208 = !DILocation(line: 542, column: 9, scope: !9201)
!9209 = !DILocation(line: 542, column: 2, scope: !9201)
!9210 = !DILocation(line: 0, scope: !9201)
!9211 = !DILocation(line: 543, column: 3, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9201, file: !943, line: 542, column: 46)
!9213 = distinct !{!9213, !9209, !9214}
!9214 = !DILocation(line: 544, column: 2, scope: !9201)
!9215 = !DILocation(line: 546, column: 2, scope: !9201)
!9216 = !DILocation(line: 547, column: 1, scope: !9201)
!9217 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !6006, file: !6006, line: 265, type: !1010, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9218)
!9218 = !{!9219}
!9219 = !DILocalVariable(name: "dev", arg: 1, scope: !9217, file: !6006, line: 265, type: !959)
!9220 = !DILocation(line: 0, scope: !9217)
!9221 = !DILocation(line: 274, column: 2, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9217, file: !6006, line: 274, column: 2)
!9223 = !{i64 2155370327}
!9224 = !DILocation(line: 275, column: 2, scope: !9217)
!9225 = !DILocation(line: 276, column: 1, scope: !9217)
!9226 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !6006, file: !6006, line: 217, type: !1010, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9227)
!9227 = !{!9228}
!9228 = !DILocalVariable(name: "dev", arg: 1, scope: !9226, file: !6006, line: 217, type: !959)
!9229 = !DILocation(line: 0, scope: !9226)
!9230 = !DILocation(line: 226, column: 2, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9226, file: !6006, line: 226, column: 2)
!9232 = !{i64 2155370191}
!9233 = !DILocation(line: 227, column: 2, scope: !9226)
!9234 = !DILocation(line: 228, column: 1, scope: !9226)
!9235 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !203, file: !203, line: 1190, type: !9236, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9238)
!9236 = !DISubroutineType(types: !9237)
!9237 = !{null, !959, !1026}
!9238 = !{!9239, !9240}
!9239 = !DILocalVariable(name: "dev", arg: 1, scope: !9235, file: !203, line: 1190, type: !959)
!9240 = !DILocalVariable(name: "cb", arg: 2, scope: !9235, file: !203, line: 1191, type: !1026)
!9241 = !DILocation(line: 0, scope: !9235)
!9242 = !DILocation(line: 1193, column: 2, scope: !9235)
!9243 = !DILocation(line: 1194, column: 1, scope: !9235)
!9244 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !203, file: !203, line: 1024, type: !980, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9245)
!9245 = !{!9246, !9247}
!9246 = !DILocalVariable(name: "dev", arg: 1, scope: !9244, file: !203, line: 1024, type: !959)
!9247 = !DILocalVariable(name: "api", scope: !9244, file: !203, line: 1027, type: !951)
!9248 = !DILocation(line: 0, scope: !9244)
!9249 = !DILocation(line: 1028, column: 40, scope: !9244)
!9250 = !DILocation(line: 1030, column: 11, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9244, file: !203, line: 1030, column: 6)
!9252 = !DILocation(line: 1030, column: 24, scope: !9251)
!9253 = !DILocation(line: 1030, column: 6, scope: !9244)
!9254 = !DILocation(line: 1033, column: 9, scope: !9244)
!9255 = !DILocation(line: 1033, column: 2, scope: !9244)
!9256 = !DILocation(line: 1038, column: 1, scope: !9244)
!9257 = distinct !DISubprogram(name: "uart_fifo_read", scope: !203, file: !203, line: 785, type: !1006, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9258)
!9258 = !{!9259, !9260, !9261, !9262}
!9259 = !DILocalVariable(name: "dev", arg: 1, scope: !9257, file: !203, line: 785, type: !959)
!9260 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9257, file: !203, line: 785, type: !261)
!9261 = !DILocalVariable(name: "size", arg: 3, scope: !9257, file: !203, line: 786, type: !262)
!9262 = !DILocalVariable(name: "api", scope: !9257, file: !203, line: 789, type: !951)
!9263 = !DILocation(line: 0, scope: !9257)
!9264 = !DILocation(line: 790, column: 40, scope: !9257)
!9265 = !DILocation(line: 792, column: 11, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9257, file: !203, line: 792, column: 6)
!9267 = !DILocation(line: 792, column: 21, scope: !9266)
!9268 = !DILocation(line: 792, column: 6, scope: !9257)
!9269 = !DILocation(line: 796, column: 9, scope: !9257)
!9270 = !DILocation(line: 796, column: 2, scope: !9257)
!9271 = !DILocation(line: 803, column: 1, scope: !9257)
!9272 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !6006, file: !6006, line: 241, type: !1010, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9273)
!9273 = !{!9274}
!9274 = !DILocalVariable(name: "dev", arg: 1, scope: !9272, file: !6006, line: 241, type: !959)
!9275 = !DILocation(line: 0, scope: !9272)
!9276 = !DILocation(line: 250, column: 2, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9272, file: !6006, line: 250, column: 2)
!9278 = !{i64 2155370259}
!9279 = !DILocation(line: 251, column: 2, scope: !9272)
!9280 = !DILocation(line: 252, column: 1, scope: !9272)
!9281 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !203, file: !203, line: 934, type: !1010, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9282)
!9282 = !{!9283, !9284}
!9283 = !DILocalVariable(name: "dev", arg: 1, scope: !9281, file: !203, line: 934, type: !959)
!9284 = !DILocalVariable(name: "api", scope: !9281, file: !203, line: 937, type: !951)
!9285 = !DILocation(line: 0, scope: !9281)
!9286 = !DILocation(line: 938, column: 40, scope: !9281)
!9287 = !DILocation(line: 940, column: 11, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9281, file: !203, line: 940, column: 6)
!9289 = !DILocation(line: 940, column: 25, scope: !9288)
!9290 = !DILocation(line: 940, column: 6, scope: !9281)
!9291 = !DILocation(line: 941, column: 3, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9288, file: !203, line: 940, column: 34)
!9293 = !DILocation(line: 942, column: 2, scope: !9292)
!9294 = !DILocation(line: 946, column: 1, scope: !9281)
!9295 = !DILocation(line: 0, scope: !1100)
!9296 = !DILocation(line: 433, column: 9, scope: !1100)
!9297 = !DILocation(line: 433, column: 43, scope: !1100)
!9298 = !DILocation(line: 434, column: 9, scope: !1100)
!9299 = !DILocation(line: 433, column: 2, scope: !1100)
!9300 = !DILocation(line: 436, column: 3, scope: !1105)
!9301 = !DILocation(line: 439, column: 8, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !1105, file: !943, line: 439, column: 7)
!9303 = !DILocation(line: 439, column: 7, scope: !1105)
!9304 = distinct !{!9304, !9299, !9305}
!9305 = !DILocation(line: 529, column: 2, scope: !1100)
!9306 = !DILocation(line: 0, scope: !1105)
!9307 = !DILocation(line: 445, column: 8, scope: !1105)
!9308 = !DILocation(line: 446, column: 10, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !1105, file: !943, line: 446, column: 7)
!9310 = !DILocation(line: 446, column: 7, scope: !1105)
!9311 = !DILocation(line: 451, column: 7, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !1105, file: !943, line: 451, column: 7)
!9313 = !DILocation(line: 451, column: 21, scope: !9312)
!9314 = !DILocation(line: 451, column: 29, scope: !9312)
!9315 = !DILocation(line: 451, column: 46, scope: !9312)
!9316 = !DILocation(line: 451, column: 32, scope: !9312)
!9317 = !DILocation(line: 451, column: 52, scope: !9312)
!9318 = !DILocation(line: 451, column: 7, scope: !1105)
!9319 = !DILocation(line: 460, column: 8, scope: !1110)
!9320 = !DILocation(line: 460, column: 7, scope: !1105)
!9321 = !DILocation(line: 461, column: 10, scope: !1108)
!9322 = !DILocation(line: 0, scope: !1108)
!9323 = !DILocation(line: 461, column: 8, scope: !1109)
!9324 = !DILocation(line: 462, column: 9, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !1109, file: !943, line: 462, column: 8)
!9326 = !DILocation(line: 462, column: 8, scope: !1109)
!9327 = !DILocation(line: 477, column: 7, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !1105, file: !943, line: 477, column: 7)
!9329 = !DILocation(line: 477, column: 7, scope: !1105)
!9330 = !DILocation(line: 478, column: 16, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9328, file: !943, line: 477, column: 46)
!9332 = !DILocation(line: 478, column: 22, scope: !9331)
!9333 = !DILocation(line: 478, column: 4, scope: !9331)
!9334 = !DILocation(line: 479, column: 4, scope: !9331)
!9335 = !DILocation(line: 483, column: 7, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !1105, file: !943, line: 483, column: 7)
!9337 = !DILocation(line: 483, column: 7, scope: !1105)
!9338 = !DILocation(line: 484, column: 13, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9340, file: !943, line: 484, column: 8)
!9340 = distinct !DILexicalBlock(scope: !9336, file: !943, line: 483, column: 55)
!9341 = !DILocation(line: 484, column: 8, scope: !9340)
!9342 = !DILocation(line: 485, column: 5, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9339, file: !943, line: 484, column: 26)
!9344 = !DILocation(line: 486, column: 5, scope: !9343)
!9345 = !DILocation(line: 487, column: 4, scope: !9343)
!9346 = !DILocation(line: 493, column: 16, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !1105, file: !943, line: 493, column: 7)
!9348 = !DILocation(line: 493, column: 8, scope: !9347)
!9349 = !DILocation(line: 493, column: 7, scope: !1105)
!9350 = !DILocation(line: 494, column: 4, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9347, file: !943, line: 493, column: 23)
!9352 = !DILocation(line: 497, column: 9, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9354, file: !943, line: 497, column: 9)
!9354 = distinct !DILexicalBlock(scope: !9351, file: !943, line: 494, column: 18)
!9355 = !DILocation(line: 497, column: 13, scope: !9353)
!9356 = !DILocation(line: 497, column: 9, scope: !9354)
!9357 = !DILocation(line: 498, column: 16, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9353, file: !943, line: 497, column: 18)
!9359 = !DILocation(line: 498, column: 26, scope: !9358)
!9360 = !DILocation(line: 498, column: 34, scope: !9358)
!9361 = !DILocation(line: 498, column: 6, scope: !9358)
!9362 = !DILocation(line: 499, column: 5, scope: !9358)
!9363 = !DILocation(line: 502, column: 5, scope: !9354)
!9364 = !DILocation(line: 503, column: 5, scope: !9354)
!9365 = !DILocation(line: 505, column: 5, scope: !9354)
!9366 = !DILocation(line: 505, column: 15, scope: !9354)
!9367 = !DILocation(line: 505, column: 21, scope: !9354)
!9368 = !DILocation(line: 505, column: 19, scope: !9354)
!9369 = !DILocation(line: 505, column: 26, scope: !9354)
!9370 = !DILocation(line: 506, column: 5, scope: !9354)
!9371 = !DILocation(line: 507, column: 5, scope: !9354)
!9372 = !DILocation(line: 508, column: 9, scope: !9354)
!9373 = !DILocation(line: 509, column: 9, scope: !9354)
!9374 = !DILocation(line: 510, column: 5, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9354, file: !943, line: 510, column: 5)
!9376 = !DILocation(line: 511, column: 9, scope: !9354)
!9377 = !DILocation(line: 512, column: 5, scope: !9354)
!9378 = !DILocation(line: 514, column: 9, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9354, file: !943, line: 514, column: 9)
!9380 = !DILocation(line: 514, column: 23, scope: !9379)
!9381 = !DILocation(line: 515, column: 27, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9379, file: !943, line: 514, column: 32)
!9383 = !DILocation(line: 515, column: 38, scope: !9382)
!9384 = !DILocation(line: 515, column: 13, scope: !9382)
!9385 = !DILocation(line: 515, column: 10, scope: !9382)
!9386 = !DILocation(line: 516, column: 5, scope: !9382)
!9387 = !DILocation(line: 526, column: 7, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !1105, file: !943, line: 526, column: 7)
!9389 = !DILocation(line: 526, column: 13, scope: !9388)
!9390 = !DILocation(line: 526, column: 11, scope: !9388)
!9391 = !DILocation(line: 526, column: 17, scope: !9388)
!9392 = !DILocation(line: 526, column: 7, scope: !1105)
!9393 = !DILocation(line: 527, column: 17, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9388, file: !943, line: 526, column: 42)
!9395 = !DILocation(line: 527, column: 30, scope: !9394)
!9396 = !DILocation(line: 527, column: 4, scope: !9394)
!9397 = !DILocation(line: 528, column: 3, scope: !9394)
!9398 = !DILocation(line: 530, column: 1, scope: !1100)
!9399 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !203, file: !203, line: 1163, type: !1024, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9400)
!9400 = !{!9401, !9402, !9403, !9404}
!9401 = !DILocalVariable(name: "dev", arg: 1, scope: !9399, file: !203, line: 1163, type: !959)
!9402 = !DILocalVariable(name: "cb", arg: 2, scope: !9399, file: !203, line: 1164, type: !1026)
!9403 = !DILocalVariable(name: "user_data", arg: 3, scope: !9399, file: !203, line: 1165, type: !102)
!9404 = !DILocalVariable(name: "api", scope: !9399, file: !203, line: 1168, type: !951)
!9405 = !DILocation(line: 0, scope: !9399)
!9406 = !DILocation(line: 1169, column: 40, scope: !9399)
!9407 = !DILocation(line: 1171, column: 11, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9399, file: !203, line: 1171, column: 6)
!9409 = !DILocation(line: 1171, column: 20, scope: !9408)
!9410 = !DILocation(line: 1171, column: 29, scope: !9408)
!9411 = !DILocation(line: 1171, column: 46, scope: !9408)
!9412 = !DILocation(line: 1171, column: 6, scope: !9399)
!9413 = !DILocation(line: 1172, column: 3, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9408, file: !203, line: 1171, column: 56)
!9415 = !DILocation(line: 1173, column: 2, scope: !9414)
!9416 = !DILocation(line: 1179, column: 1, scope: !9399)
!9417 = distinct !DISubprogram(name: "uart_irq_update", scope: !6006, file: !6006, line: 360, type: !980, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9418)
!9418 = !{!9419}
!9419 = !DILocalVariable(name: "dev", arg: 1, scope: !9417, file: !6006, line: 360, type: !959)
!9420 = !DILocation(line: 0, scope: !9417)
!9421 = !DILocation(line: 368, column: 2, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9417, file: !6006, line: 368, column: 2)
!9423 = !{i64 2155370599}
!9424 = !DILocation(line: 369, column: 9, scope: !9417)
!9425 = !DILocation(line: 369, column: 2, scope: !9417)
!9426 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !6006, file: !6006, line: 337, type: !980, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9427)
!9427 = !{!9428}
!9428 = !DILocalVariable(name: "dev", arg: 1, scope: !9426, file: !6006, line: 337, type: !959)
!9429 = !DILocation(line: 0, scope: !9426)
!9430 = !DILocation(line: 345, column: 2, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9426, file: !6006, line: 345, column: 2)
!9432 = !{i64 2155370531}
!9433 = !DILocation(line: 346, column: 9, scope: !9426)
!9434 = !DILocation(line: 346, column: 2, scope: !9426)
!9435 = distinct !DISubprogram(name: "read_uart", scope: !943, file: !943, line: 127, type: !9436, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9438)
!9436 = !DISubroutineType(types: !9437)
!9437 = !{!103, !959, !261, !32}
!9438 = !{!9439, !9440, !9441, !9442}
!9439 = !DILocalVariable(name: "uart", arg: 1, scope: !9435, file: !943, line: 127, type: !959)
!9440 = !DILocalVariable(name: "buf", arg: 2, scope: !9435, file: !943, line: 127, type: !261)
!9441 = !DILocalVariable(name: "size", arg: 3, scope: !9435, file: !943, line: 128, type: !32)
!9442 = !DILocalVariable(name: "rx", scope: !9435, file: !943, line: 130, type: !103)
!9443 = !DILocation(line: 0, scope: !9435)
!9444 = !DILocation(line: 132, column: 7, scope: !9435)
!9445 = !DILocation(line: 133, column: 9, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9435, file: !943, line: 133, column: 6)
!9447 = !DILocation(line: 133, column: 6, scope: !9435)
!9448 = !DILocation(line: 135, column: 3, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9446, file: !943, line: 133, column: 14)
!9450 = !DILocation(line: 137, column: 3, scope: !9449)
!9451 = !DILocation(line: 141, column: 1, scope: !9435)
!9452 = distinct !DISubprogram(name: "k_queue_get", scope: !3751, file: !3751, line: 649, type: !9453, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9460)
!9453 = !DISubroutineType(types: !9454)
!9454 = !{!102, !9455, !9456}
!9455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!9456 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1790, line: 67, baseType: !9457)
!9457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1790, line: 65, size: 64, elements: !9458)
!9458 = !{!9459}
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9457, file: !1790, line: 66, baseType: !1789, size: 64)
!9460 = !{!9461, !9462}
!9461 = !DILocalVariable(name: "queue", arg: 1, scope: !9452, file: !3751, line: 649, type: !9455)
!9462 = !DILocalVariable(name: "timeout", arg: 2, scope: !9452, file: !3751, line: 649, type: !9456)
!9463 = !DILocation(line: 0, scope: !9452)
!9464 = !DILocation(line: 658, column: 2, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9452, file: !3751, line: 658, column: 2)
!9466 = !{i64 2155071283}
!9467 = !DILocation(line: 659, column: 9, scope: !9452)
!9468 = !DILocation(line: 659, column: 2, scope: !9452)
!9469 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1126, file: !1126, line: 131, type: !9470, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9474)
!9470 = !DISubroutineType(types: !9471)
!9471 = !{!157, !9472, !103}
!9472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9473, size: 32)
!9473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1125)
!9474 = !{!9475, !9476, !9477}
!9475 = !DILocalVariable(name: "target", arg: 1, scope: !9469, file: !1126, line: 131, type: !9472)
!9476 = !DILocalVariable(name: "bit", arg: 2, scope: !9469, file: !1126, line: 131, type: !103)
!9477 = !DILocalVariable(name: "val", scope: !9469, file: !1126, line: 133, type: !9478)
!9478 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1126, line: 23, baseType: !1125)
!9479 = !DILocation(line: 0, scope: !9469)
!9480 = !DILocation(line: 133, column: 21, scope: !9469)
!9481 = !DILocation(line: 135, column: 27, scope: !9469)
!9482 = !DILocation(line: 135, column: 50, scope: !9469)
!9483 = !DILocation(line: 135, column: 2, scope: !9469)
!9484 = distinct !DISubprogram(name: "handle_ansi", scope: !943, file: !943, line: 232, type: !9485, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9487)
!9485 = !DISubroutineType(types: !9486)
!9486 = !{null, !154, !1087}
!9487 = !{!9488, !9489, !9490}
!9488 = !DILocalVariable(name: "byte", arg: 1, scope: !9484, file: !943, line: 232, type: !154)
!9489 = !DILocalVariable(name: "line", arg: 2, scope: !9484, file: !943, line: 232, type: !1087)
!9490 = !DILabel(scope: !9484, name: "ansi_cmd", file: !943, line: 268)
!9491 = !DILocation(line: 0, scope: !9484)
!9492 = !DILocation(line: 234, column: 6, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9484, file: !943, line: 234, column: 6)
!9494 = !DILocation(line: 234, column: 6, scope: !9484)
!9495 = !DILocation(line: 235, column: 16, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !943, line: 235, column: 7)
!9497 = distinct !DILexicalBlock(scope: !9493, file: !943, line: 234, column: 61)
!9498 = !DILocation(line: 235, column: 8, scope: !9496)
!9499 = !DILocation(line: 235, column: 7, scope: !9497)
!9500 = !DILocation(line: 236, column: 13, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9496, file: !943, line: 235, column: 23)
!9502 = !DILocation(line: 237, column: 4, scope: !9501)
!9503 = !DILocation(line: 240, column: 3, scope: !9497)
!9504 = !DILocation(line: 241, column: 19, scope: !9497)
!9505 = !DILocation(line: 241, column: 12, scope: !9497)
!9506 = !DILocation(line: 242, column: 14, scope: !9497)
!9507 = !DILocation(line: 243, column: 3, scope: !9497)
!9508 = !DILocation(line: 246, column: 6, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9484, file: !943, line: 246, column: 6)
!9510 = !DILocation(line: 246, column: 6, scope: !9484)
!9511 = !DILocation(line: 247, column: 15, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9513, file: !943, line: 247, column: 7)
!9513 = distinct !DILexicalBlock(scope: !9509, file: !943, line: 246, column: 49)
!9514 = !DILocation(line: 247, column: 7, scope: !9512)
!9515 = !DILocation(line: 247, column: 7, scope: !9513)
!9516 = !DILocation(line: 248, column: 8, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9518, file: !943, line: 248, column: 8)
!9518 = distinct !DILexicalBlock(scope: !9512, file: !943, line: 247, column: 22)
!9519 = !DILocation(line: 248, column: 8, scope: !9518)
!9520 = !DILocation(line: 249, column: 16, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9517, file: !943, line: 248, column: 53)
!9522 = !DILocation(line: 250, column: 24, scope: !9521)
!9523 = !DILocation(line: 250, column: 16, scope: !9521)
!9524 = !DILocation(line: 251, column: 4, scope: !9521)
!9525 = !DILocation(line: 252, column: 14, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9517, file: !943, line: 251, column: 11)
!9527 = !DILocation(line: 253, column: 22, scope: !9526)
!9528 = !DILocation(line: 253, column: 14, scope: !9526)
!9529 = !DILocation(line: 259, column: 12, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9513, file: !943, line: 259, column: 7)
!9531 = !DILocation(line: 259, column: 19, scope: !9530)
!9532 = !DILocation(line: 260, column: 8, scope: !9530)
!9533 = !DILocation(line: 259, column: 7, scope: !9513)
!9534 = !DILocation(line: 264, column: 3, scope: !9513)
!9535 = !DILocation(line: 265, column: 3, scope: !9513)
!9536 = !DILocation(line: 266, column: 2, scope: !9513)
!9537 = !DILocation(line: 268, column: 1, scope: !9484)
!9538 = !DILocation(line: 269, column: 2, scope: !9484)
!9539 = !DILocation(line: 271, column: 7, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9541, file: !943, line: 271, column: 7)
!9541 = distinct !DILexicalBlock(scope: !9484, file: !943, line: 269, column: 16)
!9542 = !DILocation(line: 271, column: 18, scope: !9540)
!9543 = !DILocation(line: 271, column: 16, scope: !9540)
!9544 = !DILocation(line: 271, column: 7, scope: !9541)
!9545 = !DILocation(line: 275, column: 7, scope: !9541)
!9546 = !DILocation(line: 276, column: 7, scope: !9541)
!9547 = !DILocation(line: 277, column: 3, scope: !9541)
!9548 = !DILocation(line: 278, column: 3, scope: !9541)
!9549 = !DILocation(line: 280, column: 7, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9541, file: !943, line: 280, column: 7)
!9551 = !DILocation(line: 280, column: 18, scope: !9550)
!9552 = !DILocation(line: 280, column: 16, scope: !9550)
!9553 = !DILocation(line: 280, column: 7, scope: !9541)
!9554 = !DILocation(line: 284, column: 7, scope: !9541)
!9555 = !DILocation(line: 285, column: 7, scope: !9541)
!9556 = !DILocation(line: 286, column: 3, scope: !9541)
!9557 = !DILocation(line: 287, column: 3, scope: !9541)
!9558 = !DILocation(line: 289, column: 8, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9541, file: !943, line: 289, column: 7)
!9560 = !DILocation(line: 289, column: 7, scope: !9541)
!9561 = !DILocation(line: 293, column: 19, scope: !9541)
!9562 = !DILocation(line: 293, column: 3, scope: !9541)
!9563 = !DILocation(line: 294, column: 10, scope: !9541)
!9564 = !DILocation(line: 294, column: 7, scope: !9541)
!9565 = !DILocation(line: 295, column: 7, scope: !9541)
!9566 = !DILocation(line: 296, column: 3, scope: !9541)
!9567 = !DILocation(line: 298, column: 8, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9541, file: !943, line: 298, column: 7)
!9569 = !DILocation(line: 298, column: 7, scope: !9541)
!9570 = !DILocation(line: 302, column: 18, scope: !9541)
!9571 = !DILocation(line: 302, column: 3, scope: !9541)
!9572 = !DILocation(line: 303, column: 10, scope: !9541)
!9573 = !DILocation(line: 303, column: 7, scope: !9541)
!9574 = !DILocation(line: 304, column: 7, scope: !9541)
!9575 = !DILocation(line: 305, column: 3, scope: !9541)
!9576 = !DILocation(line: 307, column: 8, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9541, file: !943, line: 307, column: 7)
!9578 = !DILocation(line: 307, column: 7, scope: !9541)
!9579 = !DILocation(line: 311, column: 3, scope: !9541)
!9580 = !DILocation(line: 312, column: 18, scope: !9541)
!9581 = !DILocation(line: 312, column: 13, scope: !9541)
!9582 = !DILocation(line: 312, column: 24, scope: !9541)
!9583 = !DILocation(line: 312, column: 3, scope: !9541)
!9584 = !DILocation(line: 313, column: 3, scope: !9541)
!9585 = !DILocation(line: 318, column: 2, scope: !9484)
!9586 = !DILocation(line: 319, column: 1, scope: !9484)
!9587 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1126, file: !1126, line: 152, type: !9588, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9591)
!9588 = !DISubroutineType(types: !9589)
!9589 = !{!157, !9590, !103}
!9590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 32)
!9591 = !{!9592, !9593, !9594, !9595}
!9592 = !DILocalVariable(name: "target", arg: 1, scope: !9587, file: !1126, line: 152, type: !9590)
!9593 = !DILocalVariable(name: "bit", arg: 2, scope: !9587, file: !1126, line: 152, type: !103)
!9594 = !DILocalVariable(name: "mask", scope: !9587, file: !1126, line: 154, type: !9478)
!9595 = !DILocalVariable(name: "old", scope: !9587, file: !1126, line: 155, type: !9478)
!9596 = !DILocation(line: 0, scope: !9587)
!9597 = !DILocation(line: 154, column: 22, scope: !9587)
!9598 = !DILocation(line: 157, column: 45, scope: !9587)
!9599 = !DILocation(line: 157, column: 8, scope: !9587)
!9600 = !DILocation(line: 159, column: 14, scope: !9587)
!9601 = !DILocation(line: 159, column: 22, scope: !9587)
!9602 = !DILocation(line: 159, column: 2, scope: !9587)
!9603 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1126, file: !1126, line: 217, type: !9604, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9606)
!9604 = !DISubroutineType(types: !9605)
!9605 = !{null, !9590, !103}
!9606 = !{!9607, !9608, !9609}
!9607 = !DILocalVariable(name: "target", arg: 1, scope: !9603, file: !1126, line: 217, type: !9590)
!9608 = !DILocalVariable(name: "bit", arg: 2, scope: !9603, file: !1126, line: 217, type: !103)
!9609 = !DILocalVariable(name: "mask", scope: !9603, file: !1126, line: 219, type: !9478)
!9610 = !DILocation(line: 0, scope: !9603)
!9611 = !DILocation(line: 219, column: 22, scope: !9603)
!9612 = !DILocation(line: 221, column: 8, scope: !9603)
!9613 = !DILocation(line: 222, column: 1, scope: !9603)
!9614 = distinct !DISubprogram(name: "isprint", scope: !5068, file: !5068, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9615)
!9615 = !{!9616}
!9616 = !DILocalVariable(name: "c", arg: 1, scope: !9614, file: !5068, line: 37, type: !103)
!9617 = !DILocation(line: 0, scope: !9614)
!9618 = !DILocation(line: 39, column: 38, scope: !9614)
!9619 = !DILocation(line: 39, column: 2, scope: !9614)
!9620 = distinct !DISubprogram(name: "del_char", scope: !943, file: !943, line: 191, type: !9621, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9623)
!9621 = !DISubroutineType(types: !9622)
!9622 = !{null, !1087, !154}
!9623 = !{!9624, !9625}
!9624 = !DILocalVariable(name: "pos", arg: 1, scope: !9620, file: !943, line: 191, type: !1087)
!9625 = !DILocalVariable(name: "end", arg: 2, scope: !9620, file: !943, line: 191, type: !154)
!9626 = !DILocation(line: 0, scope: !9620)
!9627 = !DILocation(line: 193, column: 2, scope: !9620)
!9628 = !DILocation(line: 195, column: 10, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9620, file: !943, line: 195, column: 6)
!9630 = !DILocation(line: 195, column: 6, scope: !9620)
!9631 = !DILocation(line: 196, column: 3, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9629, file: !943, line: 195, column: 17)
!9633 = !DILocation(line: 197, column: 3, scope: !9632)
!9634 = !DILocation(line: 198, column: 3, scope: !9632)
!9635 = !DILocation(line: 201, column: 2, scope: !9620)
!9636 = !DILocation(line: 203, column: 2, scope: !9620)
!9637 = !DILocation(line: 203, column: 12, scope: !9620)
!9638 = !DILocation(line: 204, column: 16, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9620, file: !943, line: 203, column: 20)
!9640 = !DILocation(line: 204, column: 10, scope: !9639)
!9641 = !DILocation(line: 204, column: 8, scope: !9639)
!9642 = !DILocation(line: 205, column: 3, scope: !9639)
!9643 = !DILocation(line: 203, column: 15, scope: !9620)
!9644 = distinct !{!9644, !9636, !9645}
!9645 = !DILocation(line: 206, column: 2, scope: !9620)
!9646 = !DILocation(line: 208, column: 2, scope: !9620)
!9647 = !DILocation(line: 211, column: 2, scope: !9620)
!9648 = !DILocation(line: 212, column: 1, scope: !9620)
!9649 = !DISubprogram(name: "k_queue_append", scope: !300, file: !300, line: 1775, type: !9650, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!9650 = !DISubroutineType(types: !9651)
!9651 = !{null, !9455, !102}
!9652 = distinct !DISubprogram(name: "insert_char", scope: !943, file: !943, line: 163, type: !9653, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9655)
!9653 = !DISubroutineType(types: !9654)
!9654 = !{null, !1087, !146, !154}
!9655 = !{!9656, !9657, !9658, !9659}
!9656 = !DILocalVariable(name: "pos", arg: 1, scope: !9652, file: !943, line: 163, type: !1087)
!9657 = !DILocalVariable(name: "c", arg: 2, scope: !9652, file: !943, line: 163, type: !146)
!9658 = !DILocalVariable(name: "end", arg: 3, scope: !9652, file: !943, line: 163, type: !154)
!9659 = !DILocalVariable(name: "tmp", scope: !9652, file: !943, line: 165, type: !146)
!9660 = !DILocation(line: 0, scope: !9652)
!9661 = !DILocation(line: 168, column: 2, scope: !9652)
!9662 = !DILocation(line: 170, column: 10, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9652, file: !943, line: 170, column: 6)
!9664 = !DILocation(line: 170, column: 6, scope: !9652)
!9665 = !DILocation(line: 171, column: 8, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9663, file: !943, line: 170, column: 17)
!9667 = !DILocation(line: 172, column: 3, scope: !9666)
!9668 = !DILocation(line: 175, column: 8, scope: !9652)
!9669 = !DILocation(line: 176, column: 11, scope: !9652)
!9670 = !DILocation(line: 178, column: 2, scope: !9652)
!9671 = !DILocation(line: 180, column: 2, scope: !9652)
!9672 = !DILocation(line: 180, column: 12, scope: !9652)
!9673 = !DILocation(line: 181, column: 3, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9652, file: !943, line: 180, column: 20)
!9675 = !DILocation(line: 182, column: 7, scope: !9674)
!9676 = !DILocation(line: 183, column: 12, scope: !9674)
!9677 = !DILocation(line: 180, column: 15, scope: !9652)
!9678 = distinct !{!9678, !9671, !9679}
!9679 = !DILocation(line: 185, column: 2, scope: !9652)
!9680 = !DILocation(line: 188, column: 2, scope: !9652)
!9681 = !DILocation(line: 189, column: 1, scope: !9652)
!9682 = distinct !DISubprogram(name: "cursor_save", scope: !943, file: !943, line: 153, type: !3318, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !461)
!9683 = !DILocation(line: 155, column: 2, scope: !9682)
!9684 = !DILocation(line: 156, column: 1, scope: !9682)
!9685 = distinct !DISubprogram(name: "cursor_restore", scope: !943, file: !943, line: 158, type: !3318, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !461)
!9686 = !DILocation(line: 160, column: 2, scope: !9685)
!9687 = !DILocation(line: 161, column: 1, scope: !9685)
!9688 = distinct !DISubprogram(name: "atomic_or", scope: !9689, file: !9689, line: 279, type: !9690, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9692)
!9689 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9690 = !DISubroutineType(types: !9691)
!9691 = !{!9478, !9590, !9478}
!9692 = !{!9693, !9694}
!9693 = !DILocalVariable(name: "target", arg: 1, scope: !9688, file: !9689, line: 279, type: !9590)
!9694 = !DILocalVariable(name: "value", arg: 2, scope: !9688, file: !9689, line: 279, type: !9478)
!9695 = !DILocation(line: 0, scope: !9688)
!9696 = !DILocation(line: 281, column: 9, scope: !9688)
!9697 = !DILocation(line: 281, column: 2, scope: !9688)
!9698 = distinct !DISubprogram(name: "atomic_and", scope: !9689, file: !9689, line: 319, type: !9690, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9699)
!9699 = !{!9700, !9701}
!9700 = !DILocalVariable(name: "target", arg: 1, scope: !9698, file: !9689, line: 319, type: !9590)
!9701 = !DILocalVariable(name: "value", arg: 2, scope: !9698, file: !9689, line: 319, type: !9478)
!9702 = !DILocation(line: 0, scope: !9698)
!9703 = !DILocation(line: 321, column: 9, scope: !9698)
!9704 = !DILocation(line: 321, column: 2, scope: !9698)
!9705 = distinct !DISubprogram(name: "isdigit", scope: !5068, file: !5068, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9706)
!9706 = !{!9707}
!9707 = !DILocalVariable(name: "a", arg: 1, scope: !9705, file: !5068, line: 43, type: !103)
!9708 = !DILocation(line: 0, scope: !9705)
!9709 = !DILocation(line: 45, column: 29, scope: !9705)
!9710 = !DILocation(line: 45, column: 45, scope: !9705)
!9711 = !DILocation(line: 45, column: 2, scope: !9705)
!9712 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1126, file: !1126, line: 176, type: !9588, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9713)
!9713 = !{!9714, !9715, !9716, !9717}
!9714 = !DILocalVariable(name: "target", arg: 1, scope: !9712, file: !1126, line: 176, type: !9590)
!9715 = !DILocalVariable(name: "bit", arg: 2, scope: !9712, file: !1126, line: 176, type: !103)
!9716 = !DILocalVariable(name: "mask", scope: !9712, file: !1126, line: 178, type: !9478)
!9717 = !DILocalVariable(name: "old", scope: !9712, file: !1126, line: 179, type: !9478)
!9718 = !DILocation(line: 0, scope: !9712)
!9719 = !DILocation(line: 181, column: 8, scope: !9712)
!9720 = !DILocation(line: 183, column: 14, scope: !9712)
!9721 = !DILocation(line: 183, column: 22, scope: !9712)
!9722 = !DILocation(line: 183, column: 2, scope: !9712)
!9723 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1126, file: !1126, line: 198, type: !9604, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9724)
!9724 = !{!9725, !9726, !9727}
!9725 = !DILocalVariable(name: "target", arg: 1, scope: !9723, file: !1126, line: 198, type: !9590)
!9726 = !DILocalVariable(name: "bit", arg: 2, scope: !9723, file: !1126, line: 198, type: !103)
!9727 = !DILocalVariable(name: "mask", scope: !9723, file: !1126, line: 200, type: !9478)
!9728 = !DILocation(line: 0, scope: !9723)
!9729 = !DILocation(line: 200, column: 22, scope: !9723)
!9730 = !DILocation(line: 202, column: 45, scope: !9723)
!9731 = !DILocation(line: 202, column: 8, scope: !9723)
!9732 = !DILocation(line: 203, column: 1, scope: !9723)
!9733 = distinct !DISubprogram(name: "cursor_backward", scope: !943, file: !943, line: 148, type: !5895, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9734)
!9734 = !{!9735}
!9735 = !DILocalVariable(name: "count", arg: 1, scope: !9733, file: !943, line: 148, type: !32)
!9736 = !DILocation(line: 0, scope: !9733)
!9737 = !DILocation(line: 150, column: 2, scope: !9733)
!9738 = !DILocation(line: 151, column: 1, scope: !9733)
!9739 = distinct !DISubprogram(name: "cursor_forward", scope: !943, file: !943, line: 143, type: !5895, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9740)
!9740 = !{!9741}
!9741 = !DILocalVariable(name: "count", arg: 1, scope: !9739, file: !943, line: 143, type: !32)
!9742 = !DILocation(line: 0, scope: !9739)
!9743 = !DILocation(line: 145, column: 2, scope: !9739)
!9744 = !DILocation(line: 146, column: 1, scope: !9739)
!9745 = distinct !DISubprogram(name: "atomic_get", scope: !9689, file: !9689, line: 159, type: !9746, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9748)
!9746 = !DISubroutineType(types: !9747)
!9747 = !{!9478, !9472}
!9748 = !{!9749}
!9749 = !DILocalVariable(name: "target", arg: 1, scope: !9745, file: !9689, line: 159, type: !9472)
!9750 = !DILocation(line: 0, scope: !9745)
!9751 = !DILocation(line: 161, column: 9, scope: !9745)
!9752 = !DILocation(line: 161, column: 2, scope: !9745)
!9753 = !DISubprogram(name: "z_impl_k_queue_get", scope: !3751, file: !3751, line: 646, type: !9453, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!9754 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !203, file: !203, line: 1093, type: !980, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9755)
!9755 = !{!9756, !9757}
!9756 = !DILocalVariable(name: "dev", arg: 1, scope: !9754, file: !203, line: 1093, type: !959)
!9757 = !DILocalVariable(name: "api", scope: !9754, file: !203, line: 1096, type: !951)
!9758 = !DILocation(line: 0, scope: !9754)
!9759 = !DILocation(line: 1097, column: 40, scope: !9754)
!9760 = !DILocation(line: 1099, column: 11, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9754, file: !203, line: 1099, column: 6)
!9762 = !DILocation(line: 1099, column: 26, scope: !9761)
!9763 = !DILocation(line: 1099, column: 6, scope: !9754)
!9764 = !DILocation(line: 1102, column: 9, scope: !9754)
!9765 = !DILocation(line: 1102, column: 2, scope: !9754)
!9766 = !DILocation(line: 1107, column: 1, scope: !9754)
!9767 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !203, file: !203, line: 1136, type: !980, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9768)
!9768 = !{!9769, !9770}
!9769 = !DILocalVariable(name: "dev", arg: 1, scope: !9767, file: !203, line: 1136, type: !959)
!9770 = !DILocalVariable(name: "api", scope: !9767, file: !203, line: 1139, type: !951)
!9771 = !DILocation(line: 0, scope: !9767)
!9772 = !DILocation(line: 1140, column: 40, scope: !9767)
!9773 = !DILocation(line: 1142, column: 11, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9767, file: !203, line: 1142, column: 6)
!9775 = !DILocation(line: 1142, column: 22, scope: !9774)
!9776 = !DILocation(line: 1142, column: 6, scope: !9767)
!9777 = !DILocation(line: 1145, column: 9, scope: !9767)
!9778 = !DILocation(line: 1145, column: 2, scope: !9767)
!9779 = !DILocation(line: 1150, column: 1, scope: !9767)
!9780 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !203, file: !203, line: 878, type: !1010, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9781)
!9781 = !{!9782, !9783}
!9782 = !DILocalVariable(name: "dev", arg: 1, scope: !9780, file: !203, line: 878, type: !959)
!9783 = !DILocalVariable(name: "api", scope: !9780, file: !203, line: 881, type: !951)
!9784 = !DILocation(line: 0, scope: !9780)
!9785 = !DILocation(line: 882, column: 40, scope: !9780)
!9786 = !DILocation(line: 884, column: 11, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9780, file: !203, line: 884, column: 6)
!9788 = !DILocation(line: 884, column: 26, scope: !9787)
!9789 = !DILocation(line: 884, column: 6, scope: !9780)
!9790 = !DILocation(line: 885, column: 3, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9787, file: !203, line: 884, column: 35)
!9792 = !DILocation(line: 886, column: 2, scope: !9791)
!9793 = !DILocation(line: 890, column: 1, scope: !9780)
!9794 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !203, file: !203, line: 955, type: !1010, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9795)
!9795 = !{!9796, !9797}
!9796 = !DILocalVariable(name: "dev", arg: 1, scope: !9794, file: !203, line: 955, type: !959)
!9797 = !DILocalVariable(name: "api", scope: !9794, file: !203, line: 958, type: !951)
!9798 = !DILocation(line: 0, scope: !9794)
!9799 = !DILocation(line: 959, column: 40, scope: !9794)
!9800 = !DILocation(line: 961, column: 11, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9794, file: !203, line: 961, column: 6)
!9802 = !DILocation(line: 961, column: 26, scope: !9801)
!9803 = !DILocation(line: 961, column: 6, scope: !9794)
!9804 = !DILocation(line: 962, column: 3, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9801, file: !203, line: 961, column: 35)
!9806 = !DILocation(line: 963, column: 2, scope: !9805)
!9807 = !DILocation(line: 967, column: 1, scope: !9794)
!9808 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1312, file: !1312, line: 523, type: !1168, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !9809)
!9809 = !{!9810, !9811, !9812, !9813, !9814}
!9810 = !DILocalVariable(name: "dev", arg: 1, scope: !9808, file: !1312, line: 523, type: !1170)
!9811 = !DILocalVariable(name: "pin", arg: 2, scope: !9808, file: !1312, line: 524, type: !1185)
!9812 = !DILocalVariable(name: "flags", arg: 3, scope: !9808, file: !1312, line: 524, type: !1186)
!9813 = !DILocalVariable(name: "err", scope: !9808, file: !1312, line: 526, type: !103)
!9814 = !DILocalVariable(name: "pincfg", scope: !9808, file: !1312, line: 527, type: !103)
!9815 = !DILocation(line: 0, scope: !9808)
!9816 = !DILocation(line: 527, column: 2, scope: !9808)
!9817 = !DILocation(line: 532, column: 8, scope: !9808)
!9818 = !DILocation(line: 533, column: 10, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9808, file: !1312, line: 533, column: 6)
!9820 = !DILocation(line: 533, column: 6, scope: !9808)
!9821 = !DILocation(line: 543, column: 13, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9808, file: !1312, line: 543, column: 6)
!9823 = !DILocation(line: 543, column: 28, scope: !9822)
!9824 = !DILocation(line: 543, column: 6, scope: !9808)
!9825 = !DILocation(line: 544, column: 14, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9827, file: !1312, line: 544, column: 7)
!9827 = distinct !DILexicalBlock(scope: !9822, file: !1312, line: 543, column: 34)
!9828 = !DILocation(line: 544, column: 39, scope: !9826)
!9829 = !DILocation(line: 544, column: 7, scope: !9827)
!9830 = !DILocation(line: 545, column: 38, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9826, file: !1312, line: 544, column: 45)
!9832 = !DILocation(line: 545, column: 4, scope: !9831)
!9833 = !DILocation(line: 546, column: 3, scope: !9831)
!9834 = !DILocation(line: 546, column: 21, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9826, file: !1312, line: 546, column: 14)
!9836 = !DILocation(line: 546, column: 45, scope: !9835)
!9837 = !DILocation(line: 546, column: 14, scope: !9826)
!9838 = !DILocation(line: 547, column: 40, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9835, file: !1312, line: 546, column: 51)
!9840 = !DILocation(line: 547, column: 4, scope: !9839)
!9841 = !DILocation(line: 548, column: 3, scope: !9839)
!9842 = !DILocation(line: 551, column: 32, scope: !9808)
!9843 = !DILocation(line: 551, column: 37, scope: !9808)
!9844 = !DILocation(line: 551, column: 2, scope: !9808)
!9845 = !DILocation(line: 554, column: 6, scope: !9808)
!9846 = !DILocation(line: 562, column: 1, scope: !9808)
!9847 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1312, file: !1312, line: 410, type: !9848, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !9850)
!9848 = !DISubroutineType(types: !9849)
!9849 = !{!103, !1170, !861}
!9850 = !{!9851, !9852, !9853, !9855}
!9851 = !DILocalVariable(name: "dev", arg: 1, scope: !9847, file: !1312, line: 410, type: !1170)
!9852 = !DILocalVariable(name: "value", arg: 2, scope: !9847, file: !1312, line: 410, type: !861)
!9853 = !DILocalVariable(name: "cfg", scope: !9847, file: !1312, line: 412, type: !9854)
!9854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!9855 = !DILocalVariable(name: "gpio", scope: !9847, file: !1312, line: 413, type: !1243)
!9856 = !DILocation(line: 0, scope: !9847)
!9857 = !DILocation(line: 412, column: 45, scope: !9847)
!9858 = !DILocation(line: 413, column: 44, scope: !9847)
!9859 = !DILocation(line: 415, column: 11, scope: !9847)
!9860 = !DILocation(line: 415, column: 9, scope: !9847)
!9861 = !DILocation(line: 417, column: 2, scope: !9847)
!9862 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1312, file: !1312, line: 420, type: !1195, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !9863)
!9863 = !{!9864, !9865, !9866, !9867, !9868, !9869}
!9864 = !DILocalVariable(name: "dev", arg: 1, scope: !9862, file: !1312, line: 420, type: !1170)
!9865 = !DILocalVariable(name: "mask", arg: 2, scope: !9862, file: !1312, line: 421, type: !1197)
!9866 = !DILocalVariable(name: "value", arg: 3, scope: !9862, file: !1312, line: 422, type: !1192)
!9867 = !DILocalVariable(name: "cfg", scope: !9862, file: !1312, line: 424, type: !9854)
!9868 = !DILocalVariable(name: "gpio", scope: !9862, file: !1312, line: 425, type: !1243)
!9869 = !DILocalVariable(name: "port_value", scope: !9862, file: !1312, line: 426, type: !121)
!9870 = !DILocation(line: 0, scope: !9862)
!9871 = !DILocation(line: 424, column: 45, scope: !9862)
!9872 = !DILocation(line: 425, column: 44, scope: !9862)
!9873 = !DILocation(line: 430, column: 15, scope: !9862)
!9874 = !DILocation(line: 431, column: 46, scope: !9862)
!9875 = !DILocation(line: 431, column: 44, scope: !9862)
!9876 = !DILocation(line: 431, column: 61, scope: !9862)
!9877 = !DILocation(line: 431, column: 53, scope: !9862)
!9878 = !DILocation(line: 431, column: 2, scope: !9862)
!9879 = !DILocation(line: 435, column: 2, scope: !9862)
!9880 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1312, file: !1312, line: 438, type: !1200, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !9881)
!9881 = !{!9882, !9883, !9884, !9885}
!9882 = !DILocalVariable(name: "dev", arg: 1, scope: !9880, file: !1312, line: 438, type: !1170)
!9883 = !DILocalVariable(name: "pins", arg: 2, scope: !9880, file: !1312, line: 439, type: !1197)
!9884 = !DILocalVariable(name: "cfg", scope: !9880, file: !1312, line: 441, type: !9854)
!9885 = !DILocalVariable(name: "gpio", scope: !9880, file: !1312, line: 442, type: !1243)
!9886 = !DILocation(line: 0, scope: !9880)
!9887 = !DILocation(line: 441, column: 45, scope: !9880)
!9888 = !DILocation(line: 442, column: 44, scope: !9880)
!9889 = !DILocation(line: 448, column: 2, scope: !9880)
!9890 = !DILocation(line: 450, column: 2, scope: !9880)
!9891 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1312, file: !1312, line: 453, type: !1200, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !9892)
!9892 = !{!9893, !9894, !9895, !9896}
!9893 = !DILocalVariable(name: "dev", arg: 1, scope: !9891, file: !1312, line: 453, type: !1170)
!9894 = !DILocalVariable(name: "pins", arg: 2, scope: !9891, file: !1312, line: 454, type: !1197)
!9895 = !DILocalVariable(name: "cfg", scope: !9891, file: !1312, line: 456, type: !9854)
!9896 = !DILocalVariable(name: "gpio", scope: !9891, file: !1312, line: 457, type: !1243)
!9897 = !DILocation(line: 0, scope: !9891)
!9898 = !DILocation(line: 456, column: 45, scope: !9891)
!9899 = !DILocation(line: 457, column: 44, scope: !9891)
!9900 = !DILocation(line: 467, column: 2, scope: !9891)
!9901 = !DILocation(line: 470, column: 2, scope: !9891)
!9902 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1312, file: !1312, line: 473, type: !1200, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !9903)
!9903 = !{!9904, !9905, !9906, !9907}
!9904 = !DILocalVariable(name: "dev", arg: 1, scope: !9902, file: !1312, line: 473, type: !1170)
!9905 = !DILocalVariable(name: "pins", arg: 2, scope: !9902, file: !1312, line: 474, type: !1197)
!9906 = !DILocalVariable(name: "cfg", scope: !9902, file: !1312, line: 476, type: !9854)
!9907 = !DILocalVariable(name: "gpio", scope: !9902, file: !1312, line: 477, type: !1243)
!9908 = !DILocation(line: 0, scope: !9902)
!9909 = !DILocation(line: 476, column: 45, scope: !9902)
!9910 = !DILocation(line: 477, column: 44, scope: !9902)
!9911 = !DILocation(line: 484, column: 2, scope: !9902)
!9912 = !DILocation(line: 487, column: 2, scope: !9902)
!9913 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1312, file: !1312, line: 594, type: !1206, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !9914)
!9914 = !{!9915, !9916, !9917, !9918, !9919, !9920, !9922, !9923, !9924}
!9915 = !DILocalVariable(name: "dev", arg: 1, scope: !9913, file: !1312, line: 594, type: !1170)
!9916 = !DILocalVariable(name: "pin", arg: 2, scope: !9913, file: !1312, line: 595, type: !1185)
!9917 = !DILocalVariable(name: "mode", arg: 3, scope: !9913, file: !1312, line: 596, type: !1144)
!9918 = !DILocalVariable(name: "trig", arg: 4, scope: !9913, file: !1312, line: 597, type: !1150)
!9919 = !DILocalVariable(name: "cfg", scope: !9913, file: !1312, line: 599, type: !9854)
!9920 = !DILocalVariable(name: "data", scope: !9913, file: !1312, line: 600, type: !9921)
!9921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32)
!9922 = !DILocalVariable(name: "edge", scope: !9913, file: !1312, line: 601, type: !103)
!9923 = !DILocalVariable(name: "err", scope: !9913, file: !1312, line: 602, type: !103)
!9924 = !DILabel(scope: !9913, name: "exit", file: !1312, line: 643)
!9925 = !DILocation(line: 0, scope: !9913)
!9926 = !DILocation(line: 599, column: 45, scope: !9913)
!9927 = !DILocation(line: 604, column: 6, scope: !9913)
!9928 = !DILocation(line: 605, column: 34, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9930, file: !1312, line: 605, column: 7)
!9930 = distinct !DILexicalBlock(scope: !9931, file: !1312, line: 604, column: 38)
!9931 = distinct !DILexicalBlock(scope: !9913, file: !1312, line: 604, column: 6)
!9932 = !DILocation(line: 605, column: 7, scope: !9929)
!9933 = !DILocation(line: 605, column: 47, scope: !9929)
!9934 = !DILocation(line: 605, column: 39, scope: !9929)
!9935 = !DILocation(line: 605, column: 7, scope: !9930)
!9936 = !DILocation(line: 606, column: 4, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9929, file: !1312, line: 605, column: 53)
!9938 = !DILocation(line: 607, column: 4, scope: !9937)
!9939 = !DILocation(line: 608, column: 4, scope: !9937)
!9940 = !DILocation(line: 609, column: 3, scope: !9937)
!9941 = !DILocation(line: 600, column: 38, scope: !9913)
!9942 = !DILocation(line: 620, column: 30, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9913, file: !1312, line: 620, column: 6)
!9944 = !DILocation(line: 620, column: 6, scope: !9943)
!9945 = !DILocation(line: 620, column: 57, scope: !9943)
!9946 = !DILocation(line: 620, column: 6, scope: !9913)
!9947 = !DILocation(line: 625, column: 29, scope: !9913)
!9948 = !DILocation(line: 625, column: 2, scope: !9913)
!9949 = !DILocation(line: 627, column: 2, scope: !9913)
!9950 = !DILocation(line: 630, column: 3, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9913, file: !1312, line: 627, column: 16)
!9952 = !DILocation(line: 633, column: 3, scope: !9951)
!9953 = !DILocation(line: 636, column: 3, scope: !9951)
!9954 = !DILocation(line: 639, column: 2, scope: !9913)
!9955 = !DILocation(line: 641, column: 2, scope: !9913)
!9956 = !DILocation(line: 643, column: 1, scope: !9913)
!9957 = !DILocation(line: 644, column: 2, scope: !9913)
!9958 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1312, file: !1312, line: 647, type: !1210, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !9959)
!9959 = !{!9960, !9961, !9962, !9963}
!9960 = !DILocalVariable(name: "dev", arg: 1, scope: !9958, file: !1312, line: 647, type: !1170)
!9961 = !DILocalVariable(name: "callback", arg: 2, scope: !9958, file: !1312, line: 648, type: !1212)
!9962 = !DILocalVariable(name: "set", arg: 3, scope: !9958, file: !1312, line: 649, type: !157)
!9963 = !DILocalVariable(name: "data", scope: !9958, file: !1312, line: 651, type: !9921)
!9964 = !DILocation(line: 0, scope: !9958)
!9965 = !DILocation(line: 651, column: 38, scope: !9958)
!9966 = !DILocation(line: 653, column: 37, scope: !9958)
!9967 = !DILocation(line: 653, column: 9, scope: !9958)
!9968 = !DILocation(line: 653, column: 2, scope: !9958)
!9969 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9970, file: !9970, line: 38, type: !9971, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !9974)
!9970 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9971 = !DISubroutineType(types: !9972)
!9972 = !{!103, !9973, !1212, !157}
!9973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 32)
!9974 = !{!9975, !9976, !9977}
!9975 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9969, file: !9970, line: 38, type: !9973)
!9976 = !DILocalVariable(name: "callback", arg: 2, scope: !9969, file: !9970, line: 39, type: !1212)
!9977 = !DILocalVariable(name: "set", arg: 3, scope: !9969, file: !9970, line: 40, type: !157)
!9978 = !DILocation(line: 0, scope: !9969)
!9979 = !DILocation(line: 45, column: 7, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9969, file: !9970, line: 45, column: 6)
!9981 = !DILocation(line: 45, column: 6, scope: !9969)
!9982 = !DILocation(line: 46, column: 56, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9984, file: !9970, line: 46, column: 7)
!9984 = distinct !DILexicalBlock(scope: !9980, file: !9970, line: 45, column: 38)
!9985 = !DILocation(line: 46, column: 8, scope: !9983)
!9986 = !DILocation(line: 46, column: 7, scope: !9984)
!9987 = !DILocation(line: 51, column: 13, scope: !9980)
!9988 = !DILocation(line: 56, column: 43, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9990, file: !9970, line: 55, column: 11)
!9990 = distinct !DILexicalBlock(scope: !9969, file: !9970, line: 55, column: 6)
!9991 = !DILocation(line: 56, column: 3, scope: !9989)
!9992 = !DILocation(line: 57, column: 2, scope: !9989)
!9993 = !DILocation(line: 60, column: 1, scope: !9969)
!9994 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1217, file: !1217, line: 261, type: !9995, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !9997)
!9995 = !DISubroutineType(types: !9996)
!9996 = !{!157, !9973}
!9997 = !{!9998}
!9998 = !DILocalVariable(name: "list", arg: 1, scope: !9994, file: !1217, line: 261, type: !9973)
!9999 = !DILocation(line: 0, scope: !9994)
!10000 = !DILocation(line: 261, column: 1, scope: !9994)
!10001 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1217, file: !1217, line: 417, type: !10002, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10004)
!10002 = !DISubroutineType(types: !10003)
!10003 = !{!157, !9973, !1385}
!10004 = !{!10005, !10006, !10007, !10008}
!10005 = !DILocalVariable(name: "list", arg: 1, scope: !10001, file: !1217, line: 417, type: !9973)
!10006 = !DILocalVariable(name: "node", arg: 2, scope: !10001, file: !1217, line: 417, type: !1385)
!10007 = !DILocalVariable(name: "prev", scope: !10001, file: !1217, line: 417, type: !1385)
!10008 = !DILocalVariable(name: "test", scope: !10001, file: !1217, line: 417, type: !1385)
!10009 = !DILocation(line: 0, scope: !10001)
!10010 = !DILocation(line: 417, column: 1, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10001, file: !1217, line: 417, column: 1)
!10012 = !DILocation(line: 417, column: 1, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10011, file: !1217, line: 417, column: 1)
!10014 = !DILocation(line: 417, column: 1, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10016, file: !1217, line: 417, column: 1)
!10016 = distinct !DILexicalBlock(scope: !10013, file: !1217, line: 417, column: 1)
!10017 = !DILocation(line: 417, column: 1, scope: !10016)
!10018 = distinct !{!10018, !10010, !10010}
!10019 = !DILocation(line: 417, column: 1, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10015, file: !1217, line: 417, column: 1)
!10021 = !DILocation(line: 417, column: 1, scope: !10001)
!10022 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1217, file: !1217, line: 298, type: !10023, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10025)
!10023 = !DISubroutineType(types: !10024)
!10024 = !{null, !9973, !1385}
!10025 = !{!10026, !10027}
!10026 = !DILocalVariable(name: "list", arg: 1, scope: !10022, file: !1217, line: 298, type: !9973)
!10027 = !DILocalVariable(name: "node", arg: 2, scope: !10022, file: !1217, line: 298, type: !1385)
!10028 = !DILocation(line: 0, scope: !10022)
!10029 = !DILocation(line: 298, column: 1, scope: !10022)
!10030 = !DILocation(line: 298, column: 1, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10022, file: !1217, line: 298, column: 1)
!10032 = !DILocation(line: 298, column: 1, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10031, file: !1217, line: 298, column: 1)
!10034 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1217, file: !1217, line: 231, type: !10035, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10037)
!10035 = !DISubroutineType(types: !10036)
!10036 = !{!1385, !9973}
!10037 = !{!10038}
!10038 = !DILocalVariable(name: "list", arg: 1, scope: !10034, file: !1217, line: 231, type: !9973)
!10039 = !DILocation(line: 0, scope: !10034)
!10040 = !DILocation(line: 233, column: 15, scope: !10034)
!10041 = !DILocation(line: 233, column: 2, scope: !10034)
!10042 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1217, file: !1217, line: 209, type: !10043, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10045)
!10043 = !DISubroutineType(types: !10044)
!10044 = !{null, !1385, !1385}
!10045 = !{!10046, !10047}
!10046 = !DILocalVariable(name: "parent", arg: 1, scope: !10042, file: !1217, line: 209, type: !1385)
!10047 = !DILocalVariable(name: "child", arg: 2, scope: !10042, file: !1217, line: 209, type: !1385)
!10048 = !DILocation(line: 0, scope: !10042)
!10049 = !DILocation(line: 211, column: 10, scope: !10042)
!10050 = !DILocation(line: 211, column: 15, scope: !10042)
!10051 = !DILocation(line: 212, column: 1, scope: !10042)
!10052 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1217, file: !1217, line: 214, type: !10023, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10053)
!10053 = !{!10054, !10055}
!10054 = !DILocalVariable(name: "list", arg: 1, scope: !10052, file: !1217, line: 214, type: !9973)
!10055 = !DILocalVariable(name: "node", arg: 2, scope: !10052, file: !1217, line: 214, type: !1385)
!10056 = !DILocation(line: 0, scope: !10052)
!10057 = !DILocation(line: 216, column: 8, scope: !10052)
!10058 = !DILocation(line: 216, column: 13, scope: !10052)
!10059 = !DILocation(line: 217, column: 1, scope: !10052)
!10060 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1217, file: !1217, line: 243, type: !10035, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10061)
!10061 = !{!10062}
!10062 = !DILocalVariable(name: "list", arg: 1, scope: !10060, file: !1217, line: 243, type: !9973)
!10063 = !DILocation(line: 0, scope: !10060)
!10064 = !DILocation(line: 245, column: 15, scope: !10060)
!10065 = !DILocation(line: 245, column: 2, scope: !10060)
!10066 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1217, file: !1217, line: 219, type: !10023, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10067)
!10067 = !{!10068, !10069}
!10068 = !DILocalVariable(name: "list", arg: 1, scope: !10066, file: !1217, line: 219, type: !9973)
!10069 = !DILocalVariable(name: "node", arg: 2, scope: !10066, file: !1217, line: 219, type: !1385)
!10070 = !DILocation(line: 0, scope: !10066)
!10071 = !DILocation(line: 221, column: 8, scope: !10066)
!10072 = !DILocation(line: 221, column: 13, scope: !10066)
!10073 = !DILocation(line: 222, column: 1, scope: !10066)
!10074 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1217, file: !1217, line: 401, type: !10075, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10077)
!10075 = !DISubroutineType(types: !10076)
!10076 = !{null, !9973, !1385, !1385}
!10077 = !{!10078, !10079, !10080}
!10078 = !DILocalVariable(name: "list", arg: 1, scope: !10074, file: !1217, line: 401, type: !9973)
!10079 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10074, file: !1217, line: 401, type: !1385)
!10080 = !DILocalVariable(name: "node", arg: 3, scope: !10074, file: !1217, line: 401, type: !1385)
!10081 = !DILocation(line: 0, scope: !10074)
!10082 = !DILocation(line: 401, column: 1, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10074, file: !1217, line: 401, column: 1)
!10084 = !DILocation(line: 0, scope: !10083)
!10085 = !DILocation(line: 401, column: 1, scope: !10074)
!10086 = !DILocation(line: 401, column: 1, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10083, file: !1217, line: 401, column: 1)
!10088 = !DILocation(line: 401, column: 1, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10087, file: !1217, line: 401, column: 1)
!10090 = !DILocation(line: 401, column: 1, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10089, file: !1217, line: 401, column: 1)
!10092 = !DILocation(line: 401, column: 1, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10083, file: !1217, line: 401, column: 1)
!10094 = !DILocation(line: 401, column: 1, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10093, file: !1217, line: 401, column: 1)
!10096 = !DILocation(line: 401, column: 1, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10095, file: !1217, line: 401, column: 1)
!10098 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1217, file: !1217, line: 285, type: !10099, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10101)
!10099 = !DISubroutineType(types: !10100)
!10100 = !{!1385, !1385}
!10101 = !{!10102}
!10102 = !DILocalVariable(name: "node", arg: 1, scope: !10098, file: !1217, line: 285, type: !1385)
!10103 = !DILocation(line: 0, scope: !10098)
!10104 = !DILocation(line: 285, column: 1, scope: !10098)
!10105 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1217, file: !1217, line: 274, type: !10099, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10106)
!10106 = !{!10107}
!10107 = !DILocalVariable(name: "node", arg: 1, scope: !10105, file: !1217, line: 274, type: !1385)
!10108 = !DILocation(line: 0, scope: !10105)
!10109 = !DILocation(line: 274, column: 1, scope: !10105)
!10110 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1217, file: !1217, line: 204, type: !10099, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10111)
!10111 = !{!10112}
!10112 = !DILocalVariable(name: "node", arg: 1, scope: !10110, file: !1217, line: 204, type: !1385)
!10113 = !DILocation(line: 0, scope: !10110)
!10114 = !DILocation(line: 206, column: 15, scope: !10110)
!10115 = !DILocation(line: 206, column: 2, scope: !10110)
!10116 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1312, file: !1312, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10117)
!10117 = !{!10118, !10119, !10120}
!10118 = !DILocalVariable(name: "pin", arg: 1, scope: !10116, file: !1312, line: 342, type: !103)
!10119 = !DILocalVariable(name: "line", scope: !10116, file: !1312, line: 344, type: !121)
!10120 = !DILocalVariable(name: "port", scope: !10116, file: !1312, line: 345, type: !103)
!10121 = !DILocation(line: 0, scope: !10116)
!10122 = !DILocation(line: 344, column: 18, scope: !10116)
!10123 = !{i32 983040, i32 0}
!10124 = !DILocation(line: 356, column: 9, scope: !10116)
!10125 = !DILocation(line: 370, column: 2, scope: !10116)
!10126 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1312, file: !1312, line: 37, type: !717, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10127)
!10127 = !{!10128, !10129, !10130}
!10128 = !DILocalVariable(name: "line", arg: 1, scope: !10126, file: !1312, line: 37, type: !103)
!10129 = !DILocalVariable(name: "arg", arg: 2, scope: !10126, file: !1312, line: 37, type: !102)
!10130 = !DILocalVariable(name: "data", scope: !10126, file: !1312, line: 39, type: !9921)
!10131 = !DILocation(line: 0, scope: !10126)
!10132 = !DILocation(line: 41, column: 29, scope: !10126)
!10133 = !DILocation(line: 41, column: 39, scope: !10126)
!10134 = !DILocation(line: 41, column: 44, scope: !10126)
!10135 = !DILocation(line: 41, column: 2, scope: !10126)
!10136 = !DILocation(line: 42, column: 1, scope: !10126)
!10137 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1312, file: !1312, line: 376, type: !10138, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10140)
!10138 = !DISubroutineType(types: !10139)
!10139 = !{!103, !103, !103}
!10140 = !{!10141, !10142, !10143, !10145, !10146}
!10141 = !DILocalVariable(name: "port", arg: 1, scope: !10137, file: !1312, line: 376, type: !103)
!10142 = !DILocalVariable(name: "pin", arg: 2, scope: !10137, file: !1312, line: 376, type: !103)
!10143 = !DILocalVariable(name: "clk", scope: !10137, file: !1312, line: 386, type: !10144)
!10144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1170)
!10145 = !DILocalVariable(name: "pclken", scope: !10137, file: !1312, line: 387, type: !1428)
!10146 = !DILocalVariable(name: "ret", scope: !10137, file: !1312, line: 396, type: !103)
!10147 = !DILocation(line: 0, scope: !10137)
!10148 = !DILocation(line: 387, column: 2, scope: !10137)
!10149 = !DILocation(line: 387, column: 22, scope: !10137)
!10150 = !DILocation(line: 399, column: 8, scope: !10137)
!10151 = !DILocation(line: 400, column: 10, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10137, file: !1312, line: 400, column: 6)
!10153 = !DILocation(line: 400, column: 6, scope: !10137)
!10154 = !DILocation(line: 405, column: 2, scope: !10137)
!10155 = !DILocation(line: 407, column: 2, scope: !10137)
!10156 = !DILocation(line: 408, column: 1, scope: !10137)
!10157 = distinct !DISubprogram(name: "clock_control_on", scope: !809, file: !809, line: 123, type: !1277, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10158)
!10158 = !{!10159, !10160, !10161}
!10159 = !DILocalVariable(name: "dev", arg: 1, scope: !10157, file: !809, line: 123, type: !1170)
!10160 = !DILocalVariable(name: "sys", arg: 2, scope: !10157, file: !809, line: 124, type: !905)
!10161 = !DILocalVariable(name: "api", scope: !10157, file: !809, line: 126, type: !1270)
!10162 = !DILocation(line: 0, scope: !10157)
!10163 = !DILocation(line: 127, column: 49, scope: !10157)
!10164 = !DILocation(line: 129, column: 14, scope: !10157)
!10165 = !DILocation(line: 129, column: 9, scope: !10157)
!10166 = !DILocation(line: 129, column: 2, scope: !10157)
!10167 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1312, file: !1312, line: 311, type: !8695, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10168)
!10168 = !{!10169, !10170, !10171}
!10169 = !DILocalVariable(name: "port", arg: 1, scope: !10167, file: !1312, line: 311, type: !103)
!10170 = !DILocalVariable(name: "pin", arg: 2, scope: !10167, file: !1312, line: 311, type: !103)
!10171 = !DILocalVariable(name: "line", scope: !10167, file: !1312, line: 313, type: !121)
!10172 = !DILocation(line: 0, scope: !10167)
!10173 = !DILocation(line: 313, column: 18, scope: !10167)
!10174 = !DILocation(line: 337, column: 2, scope: !10167)
!10175 = !DILocation(line: 340, column: 1, scope: !10167)
!10176 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1312, file: !1312, line: 295, type: !10177, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10179)
!10177 = !DISubroutineType(types: !10178)
!10178 = !{!121, !103}
!10179 = !{!10180}
!10180 = !DILocalVariable(name: "pin", arg: 1, scope: !10176, file: !1312, line: 295, type: !103)
!10181 = !DILocation(line: 0, scope: !10176)
!10182 = !DILocation(line: 307, column: 46, scope: !10176)
!10183 = !DILocation(line: 307, column: 27, scope: !10176)
!10184 = !DILocation(line: 307, column: 32, scope: !10176)
!10185 = !DILocation(line: 307, column: 14, scope: !10176)
!10186 = !DILocation(line: 307, column: 39, scope: !10176)
!10187 = !DILocation(line: 307, column: 2, scope: !10176)
!10188 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5905, file: !5905, line: 671, type: !10189, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10191)
!10189 = !DISubroutineType(types: !10190)
!10190 = !{null, !121, !121}
!10191 = !{!10192, !10193}
!10192 = !DILocalVariable(name: "Port", arg: 1, scope: !10188, file: !5905, line: 671, type: !121)
!10193 = !DILocalVariable(name: "Line", arg: 2, scope: !10188, file: !5905, line: 671, type: !121)
!10194 = !DILocation(line: 0, scope: !10188)
!10195 = !DILocation(line: 673, column: 3, scope: !10188)
!10196 = !DILocalVariable(name: "value", arg: 1, scope: !10197, file: !6904, line: 373, type: !121)
!10197 = distinct !DISubprogram(name: "__RBIT", scope: !6904, file: !6904, line: 373, type: !7911, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10198)
!10198 = !{!10196, !10199}
!10199 = !DILocalVariable(name: "result", scope: !10197, file: !6904, line: 375, type: !121)
!10200 = !DILocation(line: 0, scope: !10197, inlinedAt: !10201)
!10201 = distinct !DILocation(line: 673, column: 3, scope: !10188)
!10202 = !DILocation(line: 380, column: 4, scope: !10197, inlinedAt: !10201)
!10203 = !{i64 3730688}
!10204 = !DILocalVariable(name: "value", arg: 1, scope: !10205, file: !6904, line: 403, type: !121)
!10205 = distinct !DISubprogram(name: "__CLZ", scope: !6904, file: !6904, line: 403, type: !10206, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10208)
!10206 = !DISubroutineType(types: !10207)
!10207 = !{!154, !121}
!10208 = !{!10204}
!10209 = !DILocation(line: 0, scope: !10205, inlinedAt: !10210)
!10210 = distinct !DILocation(line: 673, column: 3, scope: !10188)
!10211 = !DILocation(line: 414, column: 7, scope: !10205, inlinedAt: !10210)
!10212 = !DILocation(line: 674, column: 1, scope: !10188)
!10213 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9970, file: !9970, line: 69, type: !10214, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10216)
!10214 = !DISubroutineType(types: !10215)
!10215 = !{null, !9973, !1170, !121}
!10216 = !{!10217, !10218, !10219, !10220, !10221}
!10217 = !DILocalVariable(name: "list", arg: 1, scope: !10213, file: !9970, line: 69, type: !9973)
!10218 = !DILocalVariable(name: "port", arg: 2, scope: !10213, file: !9970, line: 70, type: !1170)
!10219 = !DILocalVariable(name: "pins", arg: 3, scope: !10213, file: !9970, line: 71, type: !121)
!10220 = !DILocalVariable(name: "cb", scope: !10213, file: !9970, line: 73, type: !1212)
!10221 = !DILocalVariable(name: "tmp", scope: !10213, file: !9970, line: 73, type: !1212)
!10222 = !DILocation(line: 0, scope: !10213)
!10223 = !DILocation(line: 75, column: 2, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10213, file: !9970, line: 75, column: 2)
!10225 = !DILocation(line: 0, scope: !10224)
!10226 = !DILocation(line: 76, column: 11, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10228, file: !9970, line: 76, column: 7)
!10228 = distinct !DILexicalBlock(scope: !10229, file: !9970, line: 75, column: 57)
!10229 = distinct !DILexicalBlock(scope: !10224, file: !9970, line: 75, column: 2)
!10230 = !DILocation(line: 76, column: 20, scope: !10227)
!10231 = !DILocation(line: 76, column: 7, scope: !10228)
!10232 = !DILocation(line: 78, column: 8, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10227, file: !9970, line: 76, column: 28)
!10234 = !DILocation(line: 78, column: 4, scope: !10233)
!10235 = !DILocation(line: 79, column: 3, scope: !10233)
!10236 = !DILocation(line: 75, column: 2, scope: !10229)
!10237 = !DILocation(line: 81, column: 1, scope: !10213)
!10238 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5905, file: !5905, line: 710, type: !7911, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10239)
!10239 = !{!10240}
!10240 = !DILocalVariable(name: "Line", arg: 1, scope: !10238, file: !5905, line: 710, type: !121)
!10241 = !DILocation(line: 0, scope: !10238)
!10242 = !DILocation(line: 712, column: 21, scope: !10238)
!10243 = !DILocation(line: 0, scope: !10197, inlinedAt: !10244)
!10244 = distinct !DILocation(line: 712, column: 76, scope: !10238)
!10245 = !DILocation(line: 380, column: 4, scope: !10197, inlinedAt: !10244)
!10246 = !DILocation(line: 0, scope: !10205, inlinedAt: !10247)
!10247 = distinct !DILocation(line: 712, column: 76, scope: !10238)
!10248 = !DILocation(line: 414, column: 7, scope: !10205, inlinedAt: !10247)
!10249 = !DILocation(line: 712, column: 73, scope: !10238)
!10250 = !DILocation(line: 712, column: 3, scope: !10238)
!10251 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10252, file: !10252, line: 910, type: !10253, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10255)
!10252 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10253 = !DISubroutineType(types: !10254)
!10254 = !{null, !1243, !121}
!10255 = !{!10256, !10257}
!10256 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10251, file: !10252, line: 910, type: !1243)
!10257 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10251, file: !10252, line: 910, type: !121)
!10258 = !DILocation(line: 0, scope: !10251)
!10259 = !DILocation(line: 912, column: 3, scope: !10251)
!10260 = !DILocation(line: 913, column: 1, scope: !10251)
!10261 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10252, file: !10252, line: 823, type: !10262, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10264)
!10262 = !DISubroutineType(types: !10263)
!10263 = !{!121, !1243}
!10264 = !{!10265}
!10265 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10261, file: !10252, line: 823, type: !1243)
!10266 = !DILocation(line: 0, scope: !10261)
!10267 = !DILocation(line: 825, column: 21, scope: !10261)
!10268 = !DILocation(line: 825, column: 3, scope: !10261)
!10269 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10252, file: !10252, line: 812, type: !10253, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10270)
!10270 = !{!10271, !10272}
!10271 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10269, file: !10252, line: 812, type: !1243)
!10272 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10269, file: !10252, line: 812, type: !121)
!10273 = !DILocation(line: 0, scope: !10269)
!10274 = !DILocation(line: 814, column: 3, scope: !10269)
!10275 = !DILocation(line: 815, column: 1, scope: !10269)
!10276 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10252, file: !10252, line: 771, type: !10262, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10277)
!10277 = !{!10278}
!10278 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10276, file: !10252, line: 771, type: !1243)
!10279 = !DILocation(line: 0, scope: !10276)
!10280 = !DILocation(line: 773, column: 21, scope: !10276)
!10281 = !DILocation(line: 773, column: 3, scope: !10276)
!10282 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1312, file: !1312, line: 47, type: !10283, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10285)
!10283 = !DISubroutineType(types: !10284)
!10284 = !{!103, !1186, !2705}
!10285 = !{!10286, !10287}
!10286 = !DILocalVariable(name: "flags", arg: 1, scope: !10282, file: !1312, line: 47, type: !1186)
!10287 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10282, file: !1312, line: 47, type: !2705)
!10288 = !DILocation(line: 0, scope: !10282)
!10289 = !DILocation(line: 50, column: 13, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10282, file: !1312, line: 50, column: 6)
!10291 = !DILocation(line: 50, column: 28, scope: !10290)
!10292 = !DILocation(line: 50, column: 6, scope: !10282)
!10293 = !DILocation(line: 53, column: 11, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10290, file: !1312, line: 50, column: 34)
!10295 = !DILocation(line: 55, column: 14, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10294, file: !1312, line: 55, column: 7)
!10297 = !DILocation(line: 55, column: 35, scope: !10296)
!10298 = !DILocation(line: 55, column: 7, scope: !10294)
!10299 = !DILocation(line: 56, column: 14, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10301, file: !1312, line: 56, column: 8)
!10301 = distinct !DILexicalBlock(scope: !10296, file: !1312, line: 55, column: 41)
!10302 = !DILocation(line: 56, column: 8, scope: !10301)
!10303 = !DILocation(line: 0, scope: !10296)
!10304 = !DILocation(line: 66, column: 14, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10294, file: !1312, line: 66, column: 7)
!10306 = !DILocation(line: 66, column: 30, scope: !10305)
!10307 = !DILocation(line: 66, column: 7, scope: !10294)
!10308 = !DILocation(line: 67, column: 12, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10305, file: !1312, line: 66, column: 36)
!10310 = !DILocation(line: 68, column: 3, scope: !10309)
!10311 = !DILocation(line: 68, column: 21, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10305, file: !1312, line: 68, column: 14)
!10313 = !DILocation(line: 68, column: 39, scope: !10312)
!10314 = !DILocation(line: 68, column: 14, scope: !10305)
!10315 = !DILocation(line: 69, column: 12, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10312, file: !1312, line: 68, column: 45)
!10317 = !DILocation(line: 70, column: 3, scope: !10316)
!10318 = !DILocation(line: 72, column: 21, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10290, file: !1312, line: 72, column: 14)
!10320 = !DILocation(line: 72, column: 35, scope: !10319)
!10321 = !DILocation(line: 72, column: 14, scope: !10290)
!10322 = !DILocation(line: 77, column: 14, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10324, file: !1312, line: 77, column: 7)
!10324 = distinct !DILexicalBlock(scope: !10319, file: !1312, line: 72, column: 41)
!10325 = !DILocation(line: 77, column: 30, scope: !10323)
!10326 = !DILocation(line: 77, column: 7, scope: !10324)
!10327 = !DILocation(line: 0, scope: !10290)
!10328 = !DILocation(line: 90, column: 1, scope: !10282)
!10329 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1312, file: !1312, line: 157, type: !10330, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10332)
!10330 = !DISubroutineType(types: !10331)
!10331 = !{null, !1170, !103, !103, !103}
!10332 = !{!10333, !10334, !10335, !10336, !10337, !10338, !10339, !10340, !10341, !10342, !10343}
!10333 = !DILocalVariable(name: "dev", arg: 1, scope: !10329, file: !1312, line: 157, type: !1170)
!10334 = !DILocalVariable(name: "pin", arg: 2, scope: !10329, file: !1312, line: 157, type: !103)
!10335 = !DILocalVariable(name: "conf", arg: 3, scope: !10329, file: !1312, line: 158, type: !103)
!10336 = !DILocalVariable(name: "func", arg: 4, scope: !10329, file: !1312, line: 158, type: !103)
!10337 = !DILocalVariable(name: "cfg", scope: !10329, file: !1312, line: 160, type: !9854)
!10338 = !DILocalVariable(name: "gpio", scope: !10329, file: !1312, line: 161, type: !1243)
!10339 = !DILocalVariable(name: "pin_ll", scope: !10329, file: !1312, line: 163, type: !103)
!10340 = !DILocalVariable(name: "mode", scope: !10329, file: !1312, line: 227, type: !32)
!10341 = !DILocalVariable(name: "otype", scope: !10329, file: !1312, line: 227, type: !32)
!10342 = !DILocalVariable(name: "ospeed", scope: !10329, file: !1312, line: 227, type: !32)
!10343 = !DILocalVariable(name: "pupd", scope: !10329, file: !1312, line: 227, type: !32)
!10344 = !DILocation(line: 0, scope: !10329)
!10345 = !DILocation(line: 160, column: 45, scope: !10329)
!10346 = !DILocation(line: 161, column: 44, scope: !10329)
!10347 = !DILocation(line: 163, column: 15, scope: !10329)
!10348 = !DILocation(line: 229, column: 14, scope: !10329)
!10349 = !DILocation(line: 246, column: 47, scope: !10329)
!10350 = !DILocation(line: 246, column: 2, scope: !10329)
!10351 = !DILocation(line: 248, column: 43, scope: !10329)
!10352 = !DILocation(line: 248, column: 2, scope: !10329)
!10353 = !DILocation(line: 250, column: 40, scope: !10329)
!10354 = !DILocation(line: 250, column: 2, scope: !10329)
!10355 = !DILocation(line: 252, column: 11, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10329, file: !1312, line: 252, column: 6)
!10357 = !DILocation(line: 252, column: 6, scope: !10329)
!10358 = !DILocation(line: 253, column: 11, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10360, file: !1312, line: 253, column: 7)
!10360 = distinct !DILexicalBlock(scope: !10356, file: !1312, line: 252, column: 36)
!10361 = !DILocation(line: 253, column: 7, scope: !10360)
!10362 = !DILocation(line: 254, column: 4, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10359, file: !1312, line: 253, column: 16)
!10364 = !DILocation(line: 255, column: 3, scope: !10363)
!10365 = !DILocation(line: 256, column: 4, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10359, file: !1312, line: 255, column: 10)
!10367 = !DILocation(line: 260, column: 40, scope: !10329)
!10368 = !DILocation(line: 260, column: 2, scope: !10329)
!10369 = !DILocation(line: 265, column: 1, scope: !10329)
!10370 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1312, file: !1312, line: 137, type: !10177, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10371)
!10371 = !{!10372, !10373}
!10372 = !DILocalVariable(name: "pin", arg: 1, scope: !10370, file: !1312, line: 137, type: !103)
!10373 = !DILocalVariable(name: "pinval", scope: !10370, file: !1312, line: 139, type: !121)
!10374 = !DILocation(line: 0, scope: !10370)
!10375 = !DILocation(line: 149, column: 13, scope: !10370)
!10376 = !DILocation(line: 151, column: 2, scope: !10370)
!10377 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10252, file: !10252, line: 342, type: !10378, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10380)
!10378 = !DISubroutineType(types: !10379)
!10379 = !{null, !1243, !121, !121}
!10380 = !{!10381, !10382, !10383}
!10381 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10377, file: !10252, line: 342, type: !1243)
!10382 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10377, file: !10252, line: 342, type: !121)
!10383 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10377, file: !10252, line: 342, type: !121)
!10384 = !DILocation(line: 0, scope: !10377)
!10385 = !DILocation(line: 344, column: 3, scope: !10377)
!10386 = !DILocation(line: 345, column: 1, scope: !10377)
!10387 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10252, file: !10252, line: 413, type: !10378, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10388)
!10388 = !{!10389, !10390, !10391}
!10389 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10387, file: !10252, line: 413, type: !1243)
!10390 = !DILocalVariable(name: "Pin", arg: 2, scope: !10387, file: !10252, line: 413, type: !121)
!10391 = !DILocalVariable(name: "Speed", arg: 3, scope: !10387, file: !10252, line: 413, type: !121)
!10392 = !DILocation(line: 0, scope: !10387)
!10393 = !DILocation(line: 415, column: 3, scope: !10387)
!10394 = !DILocation(line: 0, scope: !10197, inlinedAt: !10395)
!10395 = distinct !DILocation(line: 415, column: 3, scope: !10387)
!10396 = !DILocation(line: 380, column: 4, scope: !10197, inlinedAt: !10395)
!10397 = !DILocation(line: 0, scope: !10205, inlinedAt: !10398)
!10398 = distinct !DILocation(line: 415, column: 3, scope: !10387)
!10399 = !DILocation(line: 414, column: 7, scope: !10205, inlinedAt: !10398)
!10400 = !DILocation(line: 0, scope: !10197, inlinedAt: !10401)
!10401 = distinct !DILocation(line: 415, column: 3, scope: !10387)
!10402 = !DILocation(line: 0, scope: !10205, inlinedAt: !10403)
!10403 = distinct !DILocation(line: 415, column: 3, scope: !10387)
!10404 = !DILocation(line: 417, column: 1, scope: !10387)
!10405 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10252, file: !10252, line: 484, type: !10378, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10406)
!10406 = !{!10407, !10408, !10409}
!10407 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10405, file: !10252, line: 484, type: !1243)
!10408 = !DILocalVariable(name: "Pin", arg: 2, scope: !10405, file: !10252, line: 484, type: !121)
!10409 = !DILocalVariable(name: "Pull", arg: 3, scope: !10405, file: !10252, line: 484, type: !121)
!10410 = !DILocation(line: 0, scope: !10405)
!10411 = !DILocation(line: 486, column: 3, scope: !10405)
!10412 = !DILocation(line: 0, scope: !10197, inlinedAt: !10413)
!10413 = distinct !DILocation(line: 486, column: 3, scope: !10405)
!10414 = !DILocation(line: 380, column: 4, scope: !10197, inlinedAt: !10413)
!10415 = !DILocation(line: 0, scope: !10205, inlinedAt: !10416)
!10416 = distinct !DILocation(line: 486, column: 3, scope: !10405)
!10417 = !DILocation(line: 414, column: 7, scope: !10205, inlinedAt: !10416)
!10418 = !DILocation(line: 0, scope: !10197, inlinedAt: !10419)
!10419 = distinct !DILocation(line: 486, column: 3, scope: !10405)
!10420 = !DILocation(line: 0, scope: !10205, inlinedAt: !10421)
!10421 = distinct !DILocation(line: 486, column: 3, scope: !10405)
!10422 = !DILocation(line: 487, column: 1, scope: !10405)
!10423 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10252, file: !10252, line: 556, type: !10378, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10424)
!10424 = !{!10425, !10426, !10427}
!10425 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10423, file: !10252, line: 556, type: !1243)
!10426 = !DILocalVariable(name: "Pin", arg: 2, scope: !10423, file: !10252, line: 556, type: !121)
!10427 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10423, file: !10252, line: 556, type: !121)
!10428 = !DILocation(line: 0, scope: !10423)
!10429 = !DILocation(line: 558, column: 3, scope: !10423)
!10430 = !DILocation(line: 0, scope: !10197, inlinedAt: !10431)
!10431 = distinct !DILocation(line: 558, column: 3, scope: !10423)
!10432 = !DILocation(line: 380, column: 4, scope: !10197, inlinedAt: !10431)
!10433 = !DILocation(line: 0, scope: !10205, inlinedAt: !10434)
!10434 = distinct !DILocation(line: 558, column: 3, scope: !10423)
!10435 = !DILocation(line: 414, column: 7, scope: !10205, inlinedAt: !10434)
!10436 = !DILocation(line: 0, scope: !10197, inlinedAt: !10437)
!10437 = distinct !DILocation(line: 558, column: 3, scope: !10423)
!10438 = !DILocation(line: 0, scope: !10205, inlinedAt: !10439)
!10439 = distinct !DILocation(line: 558, column: 3, scope: !10423)
!10440 = !DILocation(line: 560, column: 1, scope: !10423)
!10441 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10252, file: !10252, line: 633, type: !10378, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10442)
!10442 = !{!10443, !10444, !10445}
!10443 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10441, file: !10252, line: 633, type: !1243)
!10444 = !DILocalVariable(name: "Pin", arg: 2, scope: !10441, file: !10252, line: 633, type: !121)
!10445 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10441, file: !10252, line: 633, type: !121)
!10446 = !DILocation(line: 0, scope: !10441)
!10447 = !DILocation(line: 635, column: 3, scope: !10441)
!10448 = !DILocation(line: 0, scope: !10197, inlinedAt: !10449)
!10449 = distinct !DILocation(line: 635, column: 3, scope: !10441)
!10450 = !DILocation(line: 380, column: 4, scope: !10197, inlinedAt: !10449)
!10451 = !DILocation(line: 0, scope: !10205, inlinedAt: !10452)
!10452 = distinct !DILocation(line: 635, column: 3, scope: !10441)
!10453 = !DILocation(line: 414, column: 7, scope: !10205, inlinedAt: !10452)
!10454 = !DILocation(line: 0, scope: !10197, inlinedAt: !10455)
!10455 = distinct !DILocation(line: 635, column: 3, scope: !10441)
!10456 = !DILocation(line: 0, scope: !10205, inlinedAt: !10457)
!10457 = distinct !DILocation(line: 635, column: 3, scope: !10441)
!10458 = !DILocation(line: 637, column: 1, scope: !10441)
!10459 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10252, file: !10252, line: 273, type: !10378, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10460)
!10460 = !{!10461, !10462, !10463}
!10461 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10459, file: !10252, line: 273, type: !1243)
!10462 = !DILocalVariable(name: "Pin", arg: 2, scope: !10459, file: !10252, line: 273, type: !121)
!10463 = !DILocalVariable(name: "Mode", arg: 3, scope: !10459, file: !10252, line: 273, type: !121)
!10464 = !DILocation(line: 0, scope: !10459)
!10465 = !DILocation(line: 275, column: 3, scope: !10459)
!10466 = !DILocation(line: 0, scope: !10197, inlinedAt: !10467)
!10467 = distinct !DILocation(line: 275, column: 3, scope: !10459)
!10468 = !DILocation(line: 380, column: 4, scope: !10197, inlinedAt: !10467)
!10469 = !DILocation(line: 0, scope: !10205, inlinedAt: !10470)
!10470 = distinct !DILocation(line: 275, column: 3, scope: !10459)
!10471 = !DILocation(line: 414, column: 7, scope: !10205, inlinedAt: !10470)
!10472 = !DILocation(line: 0, scope: !10197, inlinedAt: !10473)
!10473 = distinct !DILocation(line: 275, column: 3, scope: !10459)
!10474 = !DILocation(line: 0, scope: !10205, inlinedAt: !10475)
!10475 = distinct !DILocation(line: 275, column: 3, scope: !10459)
!10476 = !DILocation(line: 276, column: 1, scope: !10459)
!10477 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1312, file: !1312, line: 698, type: !1325, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10478)
!10478 = !{!10479, !10480, !10481}
!10479 = !DILocalVariable(name: "dev", arg: 1, scope: !10477, file: !1312, line: 698, type: !1170)
!10480 = !DILocalVariable(name: "data", scope: !10477, file: !1312, line: 700, type: !9921)
!10481 = !DILocalVariable(name: "ret", scope: !10477, file: !1312, line: 701, type: !103)
!10482 = !DILocation(line: 0, scope: !10477)
!10483 = !DILocation(line: 700, column: 38, scope: !10477)
!10484 = !DILocation(line: 703, column: 8, scope: !10477)
!10485 = !DILocation(line: 703, column: 12, scope: !10477)
!10486 = !DILocation(line: 705, column: 7, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10477, file: !1312, line: 705, column: 6)
!10488 = !DILocation(line: 705, column: 6, scope: !10477)
!10489 = !DILocation(line: 722, column: 8, scope: !10477)
!10490 = !DILocation(line: 723, column: 10, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10477, file: !1312, line: 723, column: 6)
!10492 = !DILocation(line: 723, column: 6, scope: !10477)
!10493 = !DILocation(line: 731, column: 1, scope: !10477)
!10494 = distinct !DISubprogram(name: "device_is_ready", scope: !6745, file: !6745, line: 47, type: !10495, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10497)
!10495 = !DISubroutineType(types: !10496)
!10496 = !{!157, !1170}
!10497 = !{!10498}
!10498 = !DILocalVariable(name: "dev", arg: 1, scope: !10494, file: !6745, line: 47, type: !1170)
!10499 = !DILocation(line: 0, scope: !10494)
!10500 = !DILocation(line: 55, column: 2, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10494, file: !6745, line: 55, column: 2)
!10502 = !{i64 2155277813}
!10503 = !DILocation(line: 56, column: 9, scope: !10494)
!10504 = !DILocation(line: 56, column: 2, scope: !10494)
!10505 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1312, file: !1312, line: 270, type: !10506, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10508)
!10506 = !DISubroutineType(types: !10507)
!10507 = !{!103, !1170, !157}
!10508 = !{!10509, !10510, !10511, !10512, !10513}
!10509 = !DILocalVariable(name: "dev", arg: 1, scope: !10505, file: !1312, line: 270, type: !1170)
!10510 = !DILocalVariable(name: "on", arg: 2, scope: !10505, file: !1312, line: 270, type: !157)
!10511 = !DILocalVariable(name: "cfg", scope: !10505, file: !1312, line: 272, type: !9854)
!10512 = !DILocalVariable(name: "ret", scope: !10505, file: !1312, line: 273, type: !103)
!10513 = !DILocalVariable(name: "clk", scope: !10505, file: !1312, line: 278, type: !10144)
!10514 = !DILocation(line: 0, scope: !10505)
!10515 = !DILocation(line: 272, column: 45, scope: !10505)
!10516 = !DILocation(line: 282, column: 38, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !1312, line: 280, column: 10)
!10518 = distinct !DILexicalBlock(scope: !10505, file: !1312, line: 280, column: 6)
!10519 = !DILocation(line: 282, column: 6, scope: !10517)
!10520 = !DILocation(line: 281, column: 9, scope: !10517)
!10521 = !DILocation(line: 293, column: 1, scope: !10505)
!10522 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !10495, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10523)
!10523 = !{!10524}
!10524 = !DILocalVariable(name: "dev", arg: 1, scope: !10522, file: !141, line: 730, type: !1170)
!10525 = !DILocation(line: 0, scope: !10522)
!10526 = !DILocation(line: 732, column: 9, scope: !10522)
!10527 = !DILocation(line: 732, column: 2, scope: !10522)
!10528 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1312, file: !1312, line: 496, type: !10529, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1141, retainedNodes: !10531)
!10529 = !DISubroutineType(types: !10530)
!10530 = !{!103, !1170, !103, !103, !103}
!10531 = !{!10532, !10533, !10534, !10535, !10536, !10537}
!10532 = !DILocalVariable(name: "dev", arg: 1, scope: !10528, file: !1312, line: 496, type: !1170)
!10533 = !DILocalVariable(name: "pin", arg: 2, scope: !10528, file: !1312, line: 496, type: !103)
!10534 = !DILocalVariable(name: "conf", arg: 3, scope: !10528, file: !1312, line: 496, type: !103)
!10535 = !DILocalVariable(name: "func", arg: 4, scope: !10528, file: !1312, line: 496, type: !103)
!10536 = !DILocalVariable(name: "ret", scope: !10528, file: !1312, line: 498, type: !103)
!10537 = !DILocalVariable(name: "gpio_out", scope: !10538, file: !1312, line: 508, type: !121)
!10538 = distinct !DILexicalBlock(scope: !10539, file: !1312, line: 507, column: 27)
!10539 = distinct !DILexicalBlock(scope: !10528, file: !1312, line: 507, column: 6)
!10540 = !DILocation(line: 0, scope: !10528)
!10541 = !DILocation(line: 505, column: 2, scope: !10528)
!10542 = !DILocation(line: 507, column: 11, scope: !10539)
!10543 = !DILocation(line: 507, column: 6, scope: !10528)
!10544 = !DILocation(line: 508, column: 28, scope: !10538)
!10545 = !DILocation(line: 0, scope: !10538)
!10546 = !DILocation(line: 510, column: 16, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10538, file: !1312, line: 510, column: 7)
!10548 = !DILocation(line: 0, scope: !10547)
!10549 = !DILocation(line: 510, column: 7, scope: !10538)
!10550 = !DILocation(line: 511, column: 4, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10547, file: !1312, line: 510, column: 32)
!10552 = !DILocation(line: 512, column: 3, scope: !10551)
!10553 = !DILocation(line: 513, column: 4, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10555, file: !1312, line: 512, column: 39)
!10555 = distinct !DILexicalBlock(scope: !10547, file: !1312, line: 512, column: 14)
!10556 = !DILocation(line: 514, column: 3, scope: !10554)
!10557 = !DILocation(line: 518, column: 1, scope: !10528)
!10558 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1617, file: !1617, line: 526, type: !1488, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10559)
!10559 = !{!10560, !10561, !10562}
!10560 = !DILocalVariable(name: "dev", arg: 1, scope: !10558, file: !1617, line: 526, type: !1490)
!10561 = !DILocalVariable(name: "c", arg: 2, scope: !10558, file: !1617, line: 526, type: !224)
!10562 = !DILocalVariable(name: "config", scope: !10558, file: !1617, line: 528, type: !10563)
!10563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!10564 = !DILocation(line: 0, scope: !10558)
!10565 = !DILocation(line: 528, column: 48, scope: !10558)
!10566 = !DILocation(line: 531, column: 40, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10558, file: !1617, line: 531, column: 6)
!10568 = !DILocation(line: 531, column: 6, scope: !10567)
!10569 = !DILocation(line: 531, column: 6, scope: !10558)
!10570 = !DILocation(line: 532, column: 34, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10567, file: !1617, line: 531, column: 48)
!10572 = !DILocation(line: 532, column: 3, scope: !10571)
!10573 = !DILocation(line: 533, column: 2, scope: !10571)
!10574 = !DILocation(line: 539, column: 42, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10558, file: !1617, line: 539, column: 6)
!10576 = !DILocation(line: 539, column: 7, scope: !10575)
!10577 = !DILocation(line: 539, column: 6, scope: !10558)
!10578 = !DILocation(line: 543, column: 52, scope: !10558)
!10579 = !DILocation(line: 543, column: 22, scope: !10558)
!10580 = !DILocation(line: 543, column: 5, scope: !10558)
!10581 = !DILocation(line: 545, column: 2, scope: !10558)
!10582 = !DILocation(line: 546, column: 1, scope: !10558)
!10583 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1617, file: !1617, line: 548, type: !1507, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10584)
!10584 = !{!10585, !10586, !10587, !10588}
!10585 = !DILocalVariable(name: "dev", arg: 1, scope: !10583, file: !1617, line: 548, type: !1490)
!10586 = !DILocalVariable(name: "c", arg: 2, scope: !10583, file: !1617, line: 549, type: !155)
!10587 = !DILocalVariable(name: "config", scope: !10583, file: !1617, line: 551, type: !10563)
!10588 = !DILocalVariable(name: "key", scope: !10583, file: !1617, line: 555, type: !32)
!10589 = !DILocation(line: 0, scope: !10583)
!10590 = !DILocation(line: 551, column: 48, scope: !10583)
!10591 = !DILocation(line: 562, column: 2, scope: !10583)
!10592 = !DILocation(line: 563, column: 41, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10594, file: !1617, line: 563, column: 7)
!10594 = distinct !DILexicalBlock(scope: !10583, file: !1617, line: 562, column: 12)
!10595 = !DILocation(line: 563, column: 7, scope: !10593)
!10596 = !DILocation(line: 563, column: 7, scope: !10594)
!10597 = !DILocation(line: 55, column: 2, scope: !10598, inlinedAt: !10602)
!10598 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10599)
!10599 = !{!10600, !10601}
!10600 = !DILocalVariable(name: "key", scope: !10598, file: !5884, line: 44, type: !32)
!10601 = !DILocalVariable(name: "tmp", scope: !10598, file: !5884, line: 53, type: !32)
!10602 = distinct !DILocation(line: 564, column: 10, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10593, file: !1617, line: 563, column: 49)
!10604 = !{i64 2327538}
!10605 = !DILocation(line: 0, scope: !10598, inlinedAt: !10602)
!10606 = !DILocation(line: 565, column: 42, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10603, file: !1617, line: 565, column: 8)
!10608 = !DILocation(line: 565, column: 8, scope: !10607)
!10609 = !DILocation(line: 565, column: 8, scope: !10603)
!10610 = !DILocalVariable(name: "key", arg: 1, scope: !10611, file: !5884, line: 84, type: !32)
!10611 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10612)
!10612 = !{!10610}
!10613 = !DILocation(line: 0, scope: !10611, inlinedAt: !10614)
!10614 = distinct !DILocation(line: 568, column: 4, scope: !10603)
!10615 = !DILocation(line: 95, column: 2, scope: !10611, inlinedAt: !10614)
!10616 = !{i64 2328355}
!10617 = !DILocation(line: 569, column: 3, scope: !10603)
!10618 = distinct !{!10618, !10591, !10619}
!10619 = !DILocation(line: 570, column: 2, scope: !10583)
!10620 = !DILocation(line: 592, column: 33, scope: !10583)
!10621 = !DILocation(line: 592, column: 2, scope: !10583)
!10622 = !DILocation(line: 0, scope: !10611, inlinedAt: !10623)
!10623 = distinct !DILocation(line: 593, column: 2, scope: !10583)
!10624 = !DILocation(line: 95, column: 2, scope: !10611, inlinedAt: !10623)
!10625 = !DILocation(line: 594, column: 1, scope: !10583)
!10626 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1617, file: !1617, line: 596, type: !1511, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10627)
!10627 = !{!10628, !10629, !10630}
!10628 = !DILocalVariable(name: "dev", arg: 1, scope: !10626, file: !1617, line: 596, type: !1490)
!10629 = !DILocalVariable(name: "config", scope: !10626, file: !1617, line: 598, type: !10563)
!10630 = !DILocalVariable(name: "err", scope: !10626, file: !1617, line: 599, type: !121)
!10631 = !DILocation(line: 0, scope: !10626)
!10632 = !DILocation(line: 598, column: 48, scope: !10626)
!10633 = !DILocation(line: 606, column: 40, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10626, file: !1617, line: 606, column: 6)
!10635 = !DILocation(line: 606, column: 6, scope: !10634)
!10636 = !DILocation(line: 606, column: 6, scope: !10626)
!10637 = !DILocation(line: 610, column: 39, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10626, file: !1617, line: 610, column: 6)
!10639 = !DILocation(line: 610, column: 6, scope: !10638)
!10640 = !DILocation(line: 610, column: 6, scope: !10626)
!10641 = !DILocation(line: 614, column: 39, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10626, file: !1617, line: 614, column: 6)
!10643 = !DILocation(line: 614, column: 6, scope: !10642)
!10644 = !DILocation(line: 614, column: 6, scope: !10626)
!10645 = !DILocation(line: 619, column: 40, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10626, file: !1617, line: 619, column: 6)
!10647 = !DILocation(line: 619, column: 6, scope: !10646)
!10648 = !DILocation(line: 619, column: 6, scope: !10626)
!10649 = !DILocation(line: 623, column: 10, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10626, file: !1617, line: 623, column: 6)
!10651 = !DILocation(line: 623, column: 6, scope: !10626)
!10652 = !DILocation(line: 624, column: 34, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10650, file: !1617, line: 623, column: 24)
!10654 = !DILocation(line: 624, column: 3, scope: !10653)
!10655 = !DILocation(line: 625, column: 2, scope: !10653)
!10656 = !DILocation(line: 632, column: 10, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10626, file: !1617, line: 632, column: 6)
!10658 = !DILocation(line: 632, column: 6, scope: !10626)
!10659 = !DILocation(line: 633, column: 34, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10657, file: !1617, line: 632, column: 32)
!10661 = !DILocation(line: 633, column: 3, scope: !10660)
!10662 = !DILocation(line: 634, column: 2, scope: !10660)
!10663 = !DILocation(line: 636, column: 10, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10626, file: !1617, line: 636, column: 6)
!10665 = !DILocation(line: 636, column: 6, scope: !10626)
!10666 = !DILocation(line: 637, column: 33, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10664, file: !1617, line: 636, column: 31)
!10668 = !DILocation(line: 637, column: 3, scope: !10667)
!10669 = !DILocation(line: 638, column: 2, scope: !10667)
!10670 = !DILocation(line: 640, column: 10, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10626, file: !1617, line: 640, column: 6)
!10672 = !DILocation(line: 640, column: 6, scope: !10626)
!10673 = !DILocation(line: 641, column: 33, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10671, file: !1617, line: 640, column: 32)
!10675 = !DILocation(line: 641, column: 3, scope: !10674)
!10676 = !DILocation(line: 642, column: 2, scope: !10674)
!10677 = !DILocation(line: 646, column: 32, scope: !10626)
!10678 = !DILocation(line: 646, column: 2, scope: !10626)
!10679 = !DILocation(line: 648, column: 2, scope: !10626)
!10680 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1617, file: !1617, line: 419, type: !1515, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10681)
!10681 = !{!10682, !10683, !10684, !10685, !10687, !10688, !10689, !10690}
!10682 = !DILocalVariable(name: "dev", arg: 1, scope: !10680, file: !1617, line: 419, type: !1490)
!10683 = !DILocalVariable(name: "cfg", arg: 2, scope: !10680, file: !1617, line: 420, type: !1517)
!10684 = !DILocalVariable(name: "config", scope: !10680, file: !1617, line: 422, type: !10563)
!10685 = !DILocalVariable(name: "data", scope: !10680, file: !1617, line: 423, type: !10686)
!10686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 32)
!10687 = !DILocalVariable(name: "parity", scope: !10680, file: !1617, line: 424, type: !7172)
!10688 = !DILocalVariable(name: "stopbits", scope: !10680, file: !1617, line: 425, type: !7172)
!10689 = !DILocalVariable(name: "databits", scope: !10680, file: !1617, line: 426, type: !7172)
!10690 = !DILocalVariable(name: "flowctrl", scope: !10680, file: !1617, line: 428, type: !7172)
!10691 = !DILocation(line: 0, scope: !10680)
!10692 = !DILocation(line: 422, column: 48, scope: !10680)
!10693 = !DILocation(line: 423, column: 38, scope: !10680)
!10694 = !DILocation(line: 424, column: 56, scope: !10680)
!10695 = !DILocation(line: 424, column: 51, scope: !10680)
!10696 = !DILocation(line: 424, column: 26, scope: !10680)
!10697 = !DILocation(line: 425, column: 60, scope: !10680)
!10698 = !DILocation(line: 425, column: 55, scope: !10680)
!10699 = !DILocation(line: 425, column: 28, scope: !10680)
!10700 = !DILocation(line: 426, column: 60, scope: !10680)
!10701 = !DILocation(line: 426, column: 55, scope: !10680)
!10702 = !DILocation(line: 426, column: 28, scope: !10680)
!10703 = !DILocation(line: 428, column: 58, scope: !10680)
!10704 = !DILocation(line: 428, column: 53, scope: !10680)
!10705 = !DILocation(line: 428, column: 28, scope: !10680)
!10706 = !DILocation(line: 431, column: 44, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10680, file: !1617, line: 431, column: 6)
!10708 = !DILocation(line: 438, column: 22, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10680, file: !1617, line: 437, column: 6)
!10710 = !DILocation(line: 437, column: 6, scope: !10680)
!10711 = !DILocation(line: 448, column: 6, scope: !10680)
!10712 = !DILocation(line: 465, column: 47, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10680, file: !1617, line: 465, column: 6)
!10714 = !DILocation(line: 475, column: 21, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10680, file: !1617, line: 475, column: 6)
!10716 = !DILocation(line: 475, column: 6, scope: !10680)
!10717 = !DILocation(line: 476, column: 8, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10719, file: !1617, line: 476, column: 7)
!10719 = distinct !DILexicalBlock(scope: !10715, file: !1617, line: 475, column: 49)
!10720 = !DILocation(line: 477, column: 34, scope: !10718)
!10721 = !DILocation(line: 476, column: 7, scope: !10719)
!10722 = !DILocation(line: 482, column: 27, scope: !10680)
!10723 = !DILocation(line: 482, column: 2, scope: !10680)
!10724 = !DILocation(line: 484, column: 16, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10680, file: !1617, line: 484, column: 6)
!10726 = !DILocation(line: 484, column: 13, scope: !10725)
!10727 = !DILocation(line: 484, column: 6, scope: !10680)
!10728 = !DILocation(line: 485, column: 3, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10725, file: !1617, line: 484, column: 44)
!10730 = !DILocation(line: 486, column: 2, scope: !10729)
!10731 = !DILocation(line: 488, column: 18, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10680, file: !1617, line: 488, column: 6)
!10733 = !DILocation(line: 488, column: 15, scope: !10732)
!10734 = !DILocation(line: 488, column: 6, scope: !10680)
!10735 = !DILocation(line: 489, column: 3, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10732, file: !1617, line: 488, column: 48)
!10737 = !DILocation(line: 490, column: 2, scope: !10736)
!10738 = !DILocation(line: 492, column: 18, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10680, file: !1617, line: 492, column: 6)
!10740 = !DILocation(line: 492, column: 15, scope: !10739)
!10741 = !DILocation(line: 492, column: 6, scope: !10680)
!10742 = !DILocation(line: 493, column: 3, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10739, file: !1617, line: 492, column: 48)
!10744 = !DILocation(line: 494, column: 2, scope: !10743)
!10745 = !DILocation(line: 496, column: 18, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10680, file: !1617, line: 496, column: 6)
!10747 = !DILocation(line: 496, column: 15, scope: !10746)
!10748 = !DILocation(line: 496, column: 6, scope: !10680)
!10749 = !DILocation(line: 497, column: 3, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10746, file: !1617, line: 496, column: 46)
!10751 = !DILocation(line: 498, column: 2, scope: !10750)
!10752 = !DILocation(line: 500, column: 11, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10680, file: !1617, line: 500, column: 6)
!10754 = !DILocation(line: 500, column: 29, scope: !10753)
!10755 = !DILocation(line: 500, column: 20, scope: !10753)
!10756 = !DILocation(line: 500, column: 6, scope: !10680)
!10757 = !DILocation(line: 501, column: 3, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10753, file: !1617, line: 500, column: 40)
!10759 = !DILocation(line: 502, column: 26, scope: !10758)
!10760 = !DILocation(line: 502, column: 19, scope: !10758)
!10761 = !DILocation(line: 503, column: 2, scope: !10758)
!10762 = !DILocation(line: 505, column: 26, scope: !10680)
!10763 = !DILocation(line: 505, column: 2, scope: !10680)
!10764 = !DILocation(line: 506, column: 2, scope: !10680)
!10765 = !DILocation(line: 507, column: 1, scope: !10680)
!10766 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1617, file: !1617, line: 509, type: !1528, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10767)
!10767 = !{!10768, !10769, !10770}
!10768 = !DILocalVariable(name: "dev", arg: 1, scope: !10766, file: !1617, line: 509, type: !1490)
!10769 = !DILocalVariable(name: "cfg", arg: 2, scope: !10766, file: !1617, line: 510, type: !1530)
!10770 = !DILocalVariable(name: "data", scope: !10766, file: !1617, line: 512, type: !10686)
!10771 = !DILocation(line: 0, scope: !10766)
!10772 = !DILocation(line: 512, column: 38, scope: !10766)
!10773 = !DILocation(line: 514, column: 24, scope: !10766)
!10774 = !DILocation(line: 514, column: 7, scope: !10766)
!10775 = !DILocation(line: 514, column: 16, scope: !10766)
!10776 = !DILocation(line: 515, column: 41, scope: !10766)
!10777 = !{i32 0, i32 1537}
!10778 = !DILocation(line: 515, column: 16, scope: !10766)
!10779 = !DILocation(line: 515, column: 7, scope: !10766)
!10780 = !DILocation(line: 515, column: 14, scope: !10766)
!10781 = !DILocation(line: 517, column: 3, scope: !10766)
!10782 = !{i32 0, i32 12289}
!10783 = !DILocation(line: 516, column: 19, scope: !10766)
!10784 = !DILocation(line: 516, column: 7, scope: !10766)
!10785 = !DILocation(line: 516, column: 17, scope: !10766)
!10786 = !DILocation(line: 519, column: 3, scope: !10766)
!10787 = !DILocation(line: 519, column: 33, scope: !10766)
!10788 = !DILocation(line: 518, column: 19, scope: !10766)
!10789 = !DILocation(line: 518, column: 7, scope: !10766)
!10790 = !DILocation(line: 518, column: 17, scope: !10766)
!10791 = !DILocation(line: 521, column: 3, scope: !10766)
!10792 = !{i32 0, i32 769}
!10793 = !DILocation(line: 520, column: 19, scope: !10766)
!10794 = !DILocation(line: 520, column: 7, scope: !10766)
!10795 = !DILocation(line: 520, column: 17, scope: !10766)
!10796 = !DILocation(line: 522, column: 2, scope: !10766)
!10797 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1617, file: !1617, line: 661, type: !1533, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10798)
!10798 = !{!10799, !10800, !10801, !10802, !10803, !10804}
!10799 = !DILocalVariable(name: "dev", arg: 1, scope: !10797, file: !1617, line: 661, type: !1490)
!10800 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10797, file: !1617, line: 662, type: !255)
!10801 = !DILocalVariable(name: "size", arg: 3, scope: !10797, file: !1617, line: 663, type: !103)
!10802 = !DILocalVariable(name: "config", scope: !10797, file: !1617, line: 665, type: !10563)
!10803 = !DILocalVariable(name: "num_tx", scope: !10797, file: !1617, line: 666, type: !154)
!10804 = !DILocalVariable(name: "key", scope: !10797, file: !1617, line: 667, type: !32)
!10805 = !DILocation(line: 0, scope: !10797)
!10806 = !DILocation(line: 665, column: 48, scope: !10797)
!10807 = !DILocation(line: 669, column: 41, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10797, file: !1617, line: 669, column: 6)
!10809 = !DILocation(line: 669, column: 7, scope: !10808)
!10810 = !DILocation(line: 669, column: 6, scope: !10797)
!10811 = !DILocation(line: 55, column: 2, scope: !10598, inlinedAt: !10812)
!10812 = distinct !DILocation(line: 674, column: 8, scope: !10797)
!10813 = !DILocation(line: 0, scope: !10598, inlinedAt: !10812)
!10814 = !DILocation(line: 676, column: 24, scope: !10797)
!10815 = !DILocation(line: 676, column: 29, scope: !10797)
!10816 = !DILocation(line: 677, column: 43, scope: !10797)
!10817 = !DILocation(line: 677, column: 9, scope: !10797)
!10818 = !DILocation(line: 676, column: 2, scope: !10797)
!10819 = !DILocation(line: 681, column: 34, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10797, file: !1617, line: 677, column: 51)
!10821 = !DILocation(line: 681, column: 55, scope: !10820)
!10822 = !DILocation(line: 681, column: 41, scope: !10820)
!10823 = !DILocation(line: 681, column: 3, scope: !10820)
!10824 = !DILocation(line: 676, column: 17, scope: !10797)
!10825 = distinct !{!10825, !10818, !10826}
!10826 = !DILocation(line: 682, column: 2, scope: !10797)
!10827 = !DILocation(line: 0, scope: !10611, inlinedAt: !10828)
!10828 = distinct !DILocation(line: 684, column: 2, scope: !10797)
!10829 = !DILocation(line: 95, column: 2, scope: !10611, inlinedAt: !10828)
!10830 = !DILocation(line: 686, column: 2, scope: !10797)
!10831 = !DILocation(line: 687, column: 1, scope: !10797)
!10832 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1617, file: !1617, line: 689, type: !1537, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10833)
!10833 = !{!10834, !10835, !10836, !10837, !10838}
!10834 = !DILocalVariable(name: "dev", arg: 1, scope: !10832, file: !1617, line: 689, type: !1490)
!10835 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10832, file: !1617, line: 689, type: !261)
!10836 = !DILocalVariable(name: "size", arg: 3, scope: !10832, file: !1617, line: 690, type: !262)
!10837 = !DILocalVariable(name: "config", scope: !10832, file: !1617, line: 692, type: !10563)
!10838 = !DILocalVariable(name: "num_rx", scope: !10832, file: !1617, line: 693, type: !154)
!10839 = !DILocation(line: 0, scope: !10832)
!10840 = !DILocation(line: 692, column: 48, scope: !10832)
!10841 = !DILocation(line: 696, column: 44, scope: !10832)
!10842 = !DILocation(line: 695, column: 24, scope: !10832)
!10843 = !DILocation(line: 695, column: 29, scope: !10832)
!10844 = !DILocation(line: 696, column: 9, scope: !10832)
!10845 = !DILocation(line: 695, column: 2, scope: !10832)
!10846 = !DILocation(line: 700, column: 53, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10832, file: !1617, line: 696, column: 52)
!10848 = !DILocation(line: 700, column: 23, scope: !10847)
!10849 = !DILocation(line: 700, column: 17, scope: !10847)
!10850 = !DILocation(line: 700, column: 3, scope: !10847)
!10851 = !DILocation(line: 700, column: 21, scope: !10847)
!10852 = !DILocation(line: 703, column: 41, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10847, file: !1617, line: 703, column: 7)
!10854 = !DILocation(line: 703, column: 7, scope: !10853)
!10855 = !DILocation(line: 703, column: 7, scope: !10847)
!10856 = !DILocation(line: 704, column: 35, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10853, file: !1617, line: 703, column: 49)
!10858 = !DILocation(line: 704, column: 4, scope: !10857)
!10859 = !DILocation(line: 709, column: 3, scope: !10857)
!10860 = !DILocation(line: 695, column: 17, scope: !10832)
!10861 = distinct !{!10861, !10845, !10862}
!10862 = !DILocation(line: 710, column: 2, scope: !10832)
!10863 = !DILocation(line: 712, column: 2, scope: !10832)
!10864 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1617, file: !1617, line: 715, type: !1541, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10865)
!10865 = !{!10866, !10867}
!10866 = !DILocalVariable(name: "dev", arg: 1, scope: !10864, file: !1617, line: 715, type: !1490)
!10867 = !DILocalVariable(name: "config", scope: !10864, file: !1617, line: 717, type: !10563)
!10868 = !DILocation(line: 0, scope: !10864)
!10869 = !DILocation(line: 717, column: 48, scope: !10864)
!10870 = !DILocation(line: 729, column: 31, scope: !10864)
!10871 = !DILocation(line: 729, column: 2, scope: !10864)
!10872 = !DILocation(line: 734, column: 1, scope: !10864)
!10873 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1617, file: !1617, line: 736, type: !1541, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10874)
!10874 = !{!10875, !10876}
!10875 = !DILocalVariable(name: "dev", arg: 1, scope: !10873, file: !1617, line: 736, type: !1490)
!10876 = !DILocalVariable(name: "config", scope: !10873, file: !1617, line: 738, type: !10563)
!10877 = !DILocation(line: 0, scope: !10873)
!10878 = !DILocation(line: 738, column: 48, scope: !10873)
!10879 = !DILocation(line: 746, column: 32, scope: !10873)
!10880 = !DILocation(line: 746, column: 2, scope: !10873)
!10881 = !DILocation(line: 756, column: 1, scope: !10873)
!10882 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1617, file: !1617, line: 758, type: !1511, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10883)
!10883 = !{!10884, !10885}
!10884 = !DILocalVariable(name: "dev", arg: 1, scope: !10882, file: !1617, line: 758, type: !1490)
!10885 = !DILocalVariable(name: "config", scope: !10882, file: !1617, line: 760, type: !10563)
!10886 = !DILocation(line: 0, scope: !10882)
!10887 = !DILocation(line: 760, column: 48, scope: !10882)
!10888 = !DILocation(line: 762, column: 43, scope: !10882)
!10889 = !DILocation(line: 762, column: 9, scope: !10882)
!10890 = !DILocation(line: 762, column: 50, scope: !10882)
!10891 = !DILocation(line: 763, column: 35, scope: !10882)
!10892 = !DILocation(line: 763, column: 3, scope: !10882)
!10893 = !DILocation(line: 762, column: 2, scope: !10882)
!10894 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1617, file: !1617, line: 773, type: !1541, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10895)
!10895 = !{!10896, !10897}
!10896 = !DILocalVariable(name: "dev", arg: 1, scope: !10894, file: !1617, line: 773, type: !1490)
!10897 = !DILocalVariable(name: "config", scope: !10894, file: !1617, line: 775, type: !10563)
!10898 = !DILocation(line: 0, scope: !10894)
!10899 = !DILocation(line: 775, column: 48, scope: !10894)
!10900 = !DILocation(line: 777, column: 33, scope: !10894)
!10901 = !DILocation(line: 777, column: 2, scope: !10894)
!10902 = !DILocation(line: 778, column: 1, scope: !10894)
!10903 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1617, file: !1617, line: 780, type: !1541, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10904)
!10904 = !{!10905, !10906}
!10905 = !DILocalVariable(name: "dev", arg: 1, scope: !10903, file: !1617, line: 780, type: !1490)
!10906 = !DILocalVariable(name: "config", scope: !10903, file: !1617, line: 782, type: !10563)
!10907 = !DILocation(line: 0, scope: !10903)
!10908 = !DILocation(line: 782, column: 48, scope: !10903)
!10909 = !DILocation(line: 784, column: 34, scope: !10903)
!10910 = !DILocation(line: 784, column: 2, scope: !10903)
!10911 = !DILocation(line: 785, column: 1, scope: !10903)
!10912 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1617, file: !1617, line: 766, type: !1511, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10913)
!10913 = !{!10914, !10915}
!10914 = !DILocalVariable(name: "dev", arg: 1, scope: !10912, file: !1617, line: 766, type: !1490)
!10915 = !DILocalVariable(name: "config", scope: !10912, file: !1617, line: 768, type: !10563)
!10916 = !DILocation(line: 0, scope: !10912)
!10917 = !DILocation(line: 768, column: 48, scope: !10912)
!10918 = !DILocation(line: 770, column: 42, scope: !10912)
!10919 = !DILocation(line: 770, column: 9, scope: !10912)
!10920 = !DILocation(line: 770, column: 2, scope: !10912)
!10921 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1617, file: !1617, line: 787, type: !1511, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10922)
!10922 = !{!10923, !10924}
!10923 = !DILocalVariable(name: "dev", arg: 1, scope: !10921, file: !1617, line: 787, type: !1490)
!10924 = !DILocalVariable(name: "config", scope: !10921, file: !1617, line: 789, type: !10563)
!10925 = !DILocation(line: 0, scope: !10921)
!10926 = !DILocation(line: 789, column: 48, scope: !10921)
!10927 = !DILocation(line: 794, column: 44, scope: !10921)
!10928 = !DILocation(line: 794, column: 9, scope: !10921)
!10929 = !DILocation(line: 794, column: 2, scope: !10921)
!10930 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1617, file: !1617, line: 797, type: !1541, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10931)
!10931 = !{!10932, !10933}
!10932 = !DILocalVariable(name: "dev", arg: 1, scope: !10930, file: !1617, line: 797, type: !1490)
!10933 = !DILocalVariable(name: "config", scope: !10930, file: !1617, line: 799, type: !10563)
!10934 = !DILocation(line: 0, scope: !10930)
!10935 = !DILocation(line: 799, column: 48, scope: !10930)
!10936 = !DILocation(line: 802, column: 34, scope: !10930)
!10937 = !DILocation(line: 802, column: 2, scope: !10930)
!10938 = !DILocation(line: 805, column: 6, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10930, file: !1617, line: 805, column: 6)
!10940 = !DILocation(line: 806, column: 3, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10939, file: !1617, line: 805, column: 43)
!10942 = !DILocation(line: 810, column: 31, scope: !10930)
!10943 = !DILocation(line: 807, column: 2, scope: !10941)
!10944 = !DILocation(line: 810, column: 2, scope: !10930)
!10945 = !DILocation(line: 811, column: 1, scope: !10930)
!10946 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1617, file: !1617, line: 813, type: !1541, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10947)
!10947 = !{!10948, !10949}
!10948 = !DILocalVariable(name: "dev", arg: 1, scope: !10946, file: !1617, line: 813, type: !1490)
!10949 = !DILocalVariable(name: "config", scope: !10946, file: !1617, line: 815, type: !10563)
!10950 = !DILocation(line: 0, scope: !10946)
!10951 = !DILocation(line: 815, column: 48, scope: !10946)
!10952 = !DILocation(line: 818, column: 35, scope: !10946)
!10953 = !DILocation(line: 818, column: 2, scope: !10946)
!10954 = !DILocation(line: 821, column: 6, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10946, file: !1617, line: 821, column: 6)
!10956 = !DILocation(line: 822, column: 3, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10955, file: !1617, line: 821, column: 43)
!10958 = !DILocation(line: 826, column: 32, scope: !10946)
!10959 = !DILocation(line: 823, column: 2, scope: !10957)
!10960 = !DILocation(line: 826, column: 2, scope: !10946)
!10961 = !DILocation(line: 827, column: 1, scope: !10946)
!10962 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1617, file: !1617, line: 829, type: !1511, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10963)
!10963 = !{!10964, !10965}
!10964 = !DILocalVariable(name: "dev", arg: 1, scope: !10962, file: !1617, line: 829, type: !1490)
!10965 = !DILocalVariable(name: "config", scope: !10962, file: !1617, line: 831, type: !10563)
!10966 = !DILocation(line: 0, scope: !10962)
!10967 = !DILocation(line: 831, column: 48, scope: !10962)
!10968 = !DILocation(line: 833, column: 46, scope: !10962)
!10969 = !DILocation(line: 833, column: 11, scope: !10962)
!10970 = !DILocation(line: 833, column: 53, scope: !10962)
!10971 = !DILocation(line: 834, column: 38, scope: !10962)
!10972 = !DILocation(line: 834, column: 4, scope: !10962)
!10973 = !DILocation(line: 834, column: 46, scope: !10962)
!10974 = !DILocation(line: 835, column: 37, scope: !10962)
!10975 = !DILocation(line: 835, column: 4, scope: !10962)
!10976 = !DILocation(line: 835, column: 44, scope: !10962)
!10977 = !DILocation(line: 836, column: 36, scope: !10962)
!10978 = !DILocation(line: 836, column: 4, scope: !10962)
!10979 = !DILocation(line: 833, column: 2, scope: !10962)
!10980 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1617, file: !1617, line: 839, type: !1511, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10981)
!10981 = !{!10982}
!10982 = !DILocalVariable(name: "dev", arg: 1, scope: !10980, file: !1617, line: 839, type: !1490)
!10983 = !DILocation(line: 0, scope: !10980)
!10984 = !DILocation(line: 841, column: 2, scope: !10980)
!10985 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1617, file: !1617, line: 844, type: !1555, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !10986)
!10986 = !{!10987, !10988, !10989, !10990}
!10987 = !DILocalVariable(name: "dev", arg: 1, scope: !10985, file: !1617, line: 844, type: !1490)
!10988 = !DILocalVariable(name: "cb", arg: 2, scope: !10985, file: !1617, line: 845, type: !1557)
!10989 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10985, file: !1617, line: 846, type: !102)
!10990 = !DILocalVariable(name: "data", scope: !10985, file: !1617, line: 848, type: !10686)
!10991 = !DILocation(line: 0, scope: !10985)
!10992 = !DILocation(line: 848, column: 38, scope: !10985)
!10993 = !DILocation(line: 850, column: 8, scope: !10985)
!10994 = !DILocation(line: 850, column: 16, scope: !10985)
!10995 = !DILocation(line: 851, column: 8, scope: !10985)
!10996 = !DILocation(line: 851, column: 18, scope: !10985)
!10997 = !DILocation(line: 852, column: 1, scope: !10985)
!10998 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10999, file: !10999, line: 1792, type: !11000, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11002)
!10999 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11000 = !DISubroutineType(types: !11001)
!11001 = !{!121, !1561}
!11002 = !{!11003}
!11003 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10998, file: !10999, line: 1792, type: !1561)
!11004 = !DILocation(line: 0, scope: !10998)
!11005 = !DILocation(line: 1794, column: 11, scope: !10998)
!11006 = !DILocation(line: 1794, column: 47, scope: !10998)
!11007 = !DILocation(line: 1794, column: 3, scope: !10998)
!11008 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10999, file: !10999, line: 2227, type: !11000, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11009)
!11009 = !{!11010}
!11010 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11008, file: !10999, line: 2227, type: !1561)
!11011 = !DILocation(line: 0, scope: !11008)
!11012 = !DILocation(line: 2229, column: 11, scope: !11008)
!11013 = !DILocation(line: 2229, column: 51, scope: !11008)
!11014 = !DILocation(line: 2229, column: 3, scope: !11008)
!11015 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10999, file: !10999, line: 1803, type: !11000, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11016)
!11016 = !{!11017}
!11017 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11015, file: !10999, line: 1803, type: !1561)
!11018 = !DILocation(line: 0, scope: !11015)
!11019 = !DILocation(line: 1805, column: 11, scope: !11015)
!11020 = !DILocation(line: 1805, column: 45, scope: !11015)
!11021 = !DILocation(line: 1805, column: 3, scope: !11015)
!11022 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10999, file: !10999, line: 2238, type: !11000, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11023)
!11023 = !{!11024}
!11024 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11022, file: !10999, line: 2238, type: !1561)
!11025 = !DILocation(line: 0, scope: !11022)
!11026 = !DILocation(line: 2240, column: 11, scope: !11022)
!11027 = !DILocation(line: 2240, column: 49, scope: !11022)
!11028 = !DILocation(line: 2240, column: 3, scope: !11022)
!11029 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10999, file: !10999, line: 2192, type: !11030, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11032)
!11030 = !DISubroutineType(types: !11031)
!11031 = !{null, !1561}
!11032 = !{!11033, !11034}
!11033 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11029, file: !10999, line: 2192, type: !1561)
!11034 = !DILocalVariable(name: "val", scope: !11035, file: !10999, line: 2194, type: !121)
!11035 = distinct !DILexicalBlock(scope: !11029, file: !10999, line: 2194, column: 3)
!11036 = !DILocation(line: 0, scope: !11029)
!11037 = !DILocation(line: 2194, column: 3, scope: !11035)
!11038 = !DILocalVariable(name: "addr", arg: 1, scope: !11039, file: !6904, line: 476, type: !1613)
!11039 = distinct !DISubprogram(name: "__LDREXW", scope: !6904, file: !6904, line: 476, type: !11040, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11042)
!11040 = !DISubroutineType(types: !11041)
!11041 = !{!121, !1613}
!11042 = !{!11038, !11043}
!11043 = !DILocalVariable(name: "result", scope: !11039, file: !6904, line: 478, type: !121)
!11044 = !DILocation(line: 0, scope: !11039, inlinedAt: !11045)
!11045 = distinct !DILocation(line: 2194, column: 3, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11035, file: !10999, line: 2194, column: 3)
!11047 = !DILocation(line: 480, column: 4, scope: !11039, inlinedAt: !11045)
!11048 = !{i64 3758295}
!11049 = !DILocation(line: 2194, column: 3, scope: !11046)
!11050 = !DILocation(line: 0, scope: !11035)
!11051 = !DILocalVariable(name: "value", arg: 1, scope: !11052, file: !6904, line: 527, type: !121)
!11052 = distinct !DISubprogram(name: "__STREXW", scope: !6904, file: !6904, line: 527, type: !11053, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11055)
!11053 = !DISubroutineType(types: !11054)
!11054 = !{!121, !121, !1613}
!11055 = !{!11051, !11056, !11057}
!11056 = !DILocalVariable(name: "addr", arg: 2, scope: !11052, file: !6904, line: 527, type: !1613)
!11057 = !DILocalVariable(name: "result", scope: !11052, file: !6904, line: 529, type: !121)
!11058 = !DILocation(line: 0, scope: !11052, inlinedAt: !11059)
!11059 = distinct !DILocation(line: 2194, column: 3, scope: !11035)
!11060 = !DILocation(line: 531, column: 4, scope: !11052, inlinedAt: !11059)
!11061 = !{i64 3759731}
!11062 = distinct !{!11062, !11037, !11037}
!11063 = !DILocation(line: 2195, column: 1, scope: !11029)
!11064 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10999, file: !10999, line: 2177, type: !11030, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11065)
!11065 = !{!11066}
!11066 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11064, file: !10999, line: 2177, type: !1561)
!11067 = !DILocation(line: 0, scope: !11064)
!11068 = !DILocation(line: 2179, column: 3, scope: !11064)
!11069 = !DILocation(line: 2180, column: 1, scope: !11064)
!11070 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10999, file: !10999, line: 2164, type: !11030, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11071)
!11071 = !{!11072, !11073}
!11072 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11070, file: !10999, line: 2164, type: !1561)
!11073 = !DILocalVariable(name: "val", scope: !11074, file: !10999, line: 2166, type: !121)
!11074 = distinct !DILexicalBlock(scope: !11070, file: !10999, line: 2166, column: 3)
!11075 = !DILocation(line: 0, scope: !11070)
!11076 = !DILocation(line: 2166, column: 3, scope: !11074)
!11077 = !DILocation(line: 0, scope: !11039, inlinedAt: !11078)
!11078 = distinct !DILocation(line: 2166, column: 3, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11074, file: !10999, line: 2166, column: 3)
!11080 = !DILocation(line: 480, column: 4, scope: !11039, inlinedAt: !11078)
!11081 = !DILocation(line: 2166, column: 3, scope: !11079)
!11082 = !DILocation(line: 0, scope: !11074)
!11083 = !DILocation(line: 0, scope: !11052, inlinedAt: !11084)
!11084 = distinct !DILocation(line: 2166, column: 3, scope: !11074)
!11085 = !DILocation(line: 531, column: 4, scope: !11052, inlinedAt: !11084)
!11086 = distinct !{!11086, !11076, !11076}
!11087 = !DILocation(line: 2167, column: 1, scope: !11070)
!11088 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10999, file: !10999, line: 2096, type: !11030, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11089)
!11089 = !{!11090, !11091}
!11090 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11088, file: !10999, line: 2096, type: !1561)
!11091 = !DILocalVariable(name: "val", scope: !11092, file: !10999, line: 2098, type: !121)
!11092 = distinct !DILexicalBlock(scope: !11088, file: !10999, line: 2098, column: 3)
!11093 = !DILocation(line: 0, scope: !11088)
!11094 = !DILocation(line: 2098, column: 3, scope: !11092)
!11095 = !DILocation(line: 0, scope: !11039, inlinedAt: !11096)
!11096 = distinct !DILocation(line: 2098, column: 3, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11092, file: !10999, line: 2098, column: 3)
!11098 = !DILocation(line: 480, column: 4, scope: !11039, inlinedAt: !11096)
!11099 = !DILocation(line: 2098, column: 3, scope: !11097)
!11100 = !DILocation(line: 0, scope: !11092)
!11101 = !DILocation(line: 0, scope: !11052, inlinedAt: !11102)
!11102 = distinct !DILocation(line: 2098, column: 3, scope: !11092)
!11103 = !DILocation(line: 531, column: 4, scope: !11052, inlinedAt: !11102)
!11104 = distinct !{!11104, !11094, !11094}
!11105 = !DILocation(line: 2099, column: 1, scope: !11088)
!11106 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10999, file: !10999, line: 2081, type: !11030, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11107)
!11107 = !{!11108}
!11108 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11106, file: !10999, line: 2081, type: !1561)
!11109 = !DILocation(line: 0, scope: !11106)
!11110 = !DILocation(line: 2083, column: 3, scope: !11106)
!11111 = !DILocation(line: 2084, column: 1, scope: !11106)
!11112 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10999, file: !10999, line: 2068, type: !11030, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11113)
!11113 = !{!11114, !11115}
!11114 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11112, file: !10999, line: 2068, type: !1561)
!11115 = !DILocalVariable(name: "val", scope: !11116, file: !10999, line: 2070, type: !121)
!11116 = distinct !DILexicalBlock(scope: !11112, file: !10999, line: 2070, column: 3)
!11117 = !DILocation(line: 0, scope: !11112)
!11118 = !DILocation(line: 2070, column: 3, scope: !11116)
!11119 = !DILocation(line: 0, scope: !11039, inlinedAt: !11120)
!11120 = distinct !DILocation(line: 2070, column: 3, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11116, file: !10999, line: 2070, column: 3)
!11122 = !DILocation(line: 480, column: 4, scope: !11039, inlinedAt: !11120)
!11123 = !DILocation(line: 2070, column: 3, scope: !11121)
!11124 = !DILocation(line: 0, scope: !11116)
!11125 = !DILocation(line: 0, scope: !11052, inlinedAt: !11126)
!11126 = distinct !DILocation(line: 2070, column: 3, scope: !11116)
!11127 = !DILocation(line: 531, column: 4, scope: !11052, inlinedAt: !11126)
!11128 = distinct !{!11128, !11118, !11118}
!11129 = !DILocation(line: 2071, column: 1, scope: !11112)
!11130 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10999, file: !10999, line: 2131, type: !11030, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11131)
!11131 = !{!11132, !11133}
!11132 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11130, file: !10999, line: 2131, type: !1561)
!11133 = !DILocalVariable(name: "val", scope: !11134, file: !10999, line: 2133, type: !121)
!11134 = distinct !DILexicalBlock(scope: !11130, file: !10999, line: 2133, column: 3)
!11135 = !DILocation(line: 0, scope: !11130)
!11136 = !DILocation(line: 2133, column: 3, scope: !11134)
!11137 = !DILocation(line: 0, scope: !11039, inlinedAt: !11138)
!11138 = distinct !DILocation(line: 2133, column: 3, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11134, file: !10999, line: 2133, column: 3)
!11140 = !DILocation(line: 480, column: 4, scope: !11039, inlinedAt: !11138)
!11141 = !DILocation(line: 2133, column: 3, scope: !11139)
!11142 = !DILocation(line: 0, scope: !11134)
!11143 = !DILocation(line: 0, scope: !11052, inlinedAt: !11144)
!11144 = distinct !DILocation(line: 2133, column: 3, scope: !11134)
!11145 = !DILocation(line: 531, column: 4, scope: !11052, inlinedAt: !11144)
!11146 = distinct !{!11146, !11136, !11136}
!11147 = !DILocation(line: 2134, column: 1, scope: !11130)
!11148 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10999, file: !10999, line: 2035, type: !11030, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11149)
!11149 = !{!11150, !11151}
!11150 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11148, file: !10999, line: 2035, type: !1561)
!11151 = !DILocalVariable(name: "val", scope: !11152, file: !10999, line: 2037, type: !121)
!11152 = distinct !DILexicalBlock(scope: !11148, file: !10999, line: 2037, column: 3)
!11153 = !DILocation(line: 0, scope: !11148)
!11154 = !DILocation(line: 2037, column: 3, scope: !11152)
!11155 = !DILocation(line: 0, scope: !11039, inlinedAt: !11156)
!11156 = distinct !DILocation(line: 2037, column: 3, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11152, file: !10999, line: 2037, column: 3)
!11158 = !DILocation(line: 480, column: 4, scope: !11039, inlinedAt: !11156)
!11159 = !DILocation(line: 2037, column: 3, scope: !11157)
!11160 = !DILocation(line: 0, scope: !11152)
!11161 = !DILocation(line: 0, scope: !11052, inlinedAt: !11162)
!11162 = distinct !DILocation(line: 2037, column: 3, scope: !11152)
!11163 = !DILocation(line: 531, column: 4, scope: !11052, inlinedAt: !11162)
!11164 = distinct !{!11164, !11154, !11154}
!11165 = !DILocation(line: 2038, column: 1, scope: !11148)
!11166 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10999, file: !10999, line: 1814, type: !11000, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11167)
!11167 = !{!11168}
!11168 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11166, file: !10999, line: 1814, type: !1561)
!11169 = !DILocation(line: 0, scope: !11166)
!11170 = !DILocation(line: 1816, column: 11, scope: !11166)
!11171 = !DILocation(line: 1816, column: 46, scope: !11166)
!11172 = !DILocation(line: 1816, column: 3, scope: !11166)
!11173 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10999, file: !10999, line: 2142, type: !11030, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11174)
!11174 = !{!11175, !11176}
!11175 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11173, file: !10999, line: 2142, type: !1561)
!11176 = !DILocalVariable(name: "val", scope: !11177, file: !10999, line: 2144, type: !121)
!11177 = distinct !DILexicalBlock(scope: !11173, file: !10999, line: 2144, column: 3)
!11178 = !DILocation(line: 0, scope: !11173)
!11179 = !DILocation(line: 2144, column: 3, scope: !11177)
!11180 = !DILocation(line: 0, scope: !11039, inlinedAt: !11181)
!11181 = distinct !DILocation(line: 2144, column: 3, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11177, file: !10999, line: 2144, column: 3)
!11183 = !DILocation(line: 480, column: 4, scope: !11039, inlinedAt: !11181)
!11184 = !DILocation(line: 2144, column: 3, scope: !11182)
!11185 = !DILocation(line: 0, scope: !11177)
!11186 = !DILocation(line: 0, scope: !11052, inlinedAt: !11187)
!11187 = distinct !DILocation(line: 2144, column: 3, scope: !11177)
!11188 = !DILocation(line: 531, column: 4, scope: !11052, inlinedAt: !11187)
!11189 = distinct !{!11189, !11179, !11179}
!11190 = !DILocation(line: 2145, column: 1, scope: !11173)
!11191 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10999, file: !10999, line: 2046, type: !11030, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11192)
!11192 = !{!11193, !11194}
!11193 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11191, file: !10999, line: 2046, type: !1561)
!11194 = !DILocalVariable(name: "val", scope: !11195, file: !10999, line: 2048, type: !121)
!11195 = distinct !DILexicalBlock(scope: !11191, file: !10999, line: 2048, column: 3)
!11196 = !DILocation(line: 0, scope: !11191)
!11197 = !DILocation(line: 2048, column: 3, scope: !11195)
!11198 = !DILocation(line: 0, scope: !11039, inlinedAt: !11199)
!11199 = distinct !DILocation(line: 2048, column: 3, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11195, file: !10999, line: 2048, column: 3)
!11201 = !DILocation(line: 480, column: 4, scope: !11039, inlinedAt: !11199)
!11202 = !DILocation(line: 2048, column: 3, scope: !11200)
!11203 = !DILocation(line: 0, scope: !11195)
!11204 = !DILocation(line: 0, scope: !11052, inlinedAt: !11205)
!11205 = distinct !DILocation(line: 2048, column: 3, scope: !11195)
!11206 = !DILocation(line: 531, column: 4, scope: !11052, inlinedAt: !11205)
!11207 = distinct !{!11207, !11197, !11197}
!11208 = !DILocation(line: 2049, column: 1, scope: !11191)
!11209 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10999, file: !10999, line: 2403, type: !11210, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11212)
!11210 = !DISubroutineType(types: !11211)
!11211 = !{!154, !1561}
!11212 = !{!11213}
!11213 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11209, file: !10999, line: 2403, type: !1561)
!11214 = !DILocation(line: 0, scope: !11209)
!11215 = !DILocation(line: 2405, column: 20, scope: !11209)
!11216 = !DILocation(line: 2405, column: 10, scope: !11209)
!11217 = !DILocation(line: 2405, column: 3, scope: !11209)
!11218 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10999, file: !10999, line: 1770, type: !11000, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11219)
!11219 = !{!11220}
!11220 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11218, file: !10999, line: 1770, type: !1561)
!11221 = !DILocation(line: 0, scope: !11218)
!11222 = !DILocation(line: 1772, column: 11, scope: !11218)
!11223 = !DILocation(line: 1772, column: 46, scope: !11218)
!11224 = !DILocation(line: 1772, column: 3, scope: !11218)
!11225 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10999, file: !10999, line: 1934, type: !11030, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11226)
!11226 = !{!11227, !11228}
!11227 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11225, file: !10999, line: 1934, type: !1561)
!11228 = !DILocalVariable(name: "tmpreg", scope: !11225, file: !10999, line: 1936, type: !120)
!11229 = !DILocation(line: 0, scope: !11225)
!11230 = !DILocation(line: 1936, column: 3, scope: !11225)
!11231 = !DILocation(line: 1936, column: 17, scope: !11225)
!11232 = !DILocation(line: 1937, column: 20, scope: !11225)
!11233 = !DILocation(line: 1937, column: 10, scope: !11225)
!11234 = !DILocation(line: 1938, column: 10, scope: !11225)
!11235 = !DILocation(line: 1939, column: 20, scope: !11225)
!11236 = !DILocation(line: 1939, column: 10, scope: !11225)
!11237 = !DILocation(line: 1940, column: 10, scope: !11225)
!11238 = !DILocation(line: 1941, column: 1, scope: !11225)
!11239 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10999, file: !10999, line: 2426, type: !11240, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11242)
!11240 = !DISubroutineType(types: !11241)
!11241 = !{null, !1561, !154}
!11242 = !{!11243, !11244}
!11243 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11239, file: !10999, line: 2426, type: !1561)
!11244 = !DILocalVariable(name: "Value", arg: 2, scope: !11239, file: !10999, line: 2426, type: !154)
!11245 = !DILocation(line: 0, scope: !11239)
!11246 = !DILocation(line: 2428, column: 16, scope: !11239)
!11247 = !DILocation(line: 2428, column: 11, scope: !11239)
!11248 = !DILocation(line: 2428, column: 14, scope: !11239)
!11249 = !DILocation(line: 2429, column: 1, scope: !11239)
!11250 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1617, file: !1617, line: 205, type: !11251, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11253)
!11251 = !DISubroutineType(types: !11252)
!11252 = !{!121, !1490}
!11253 = !{!11254, !11255}
!11254 = !DILocalVariable(name: "dev", arg: 1, scope: !11250, file: !1617, line: 205, type: !1490)
!11255 = !DILocalVariable(name: "config", scope: !11250, file: !1617, line: 207, type: !10563)
!11256 = !DILocation(line: 0, scope: !11250)
!11257 = !DILocation(line: 207, column: 48, scope: !11250)
!11258 = !DILocation(line: 209, column: 36, scope: !11250)
!11259 = !DILocation(line: 209, column: 9, scope: !11250)
!11260 = !DILocation(line: 209, column: 2, scope: !11250)
!11261 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1617, file: !1617, line: 270, type: !11262, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11264)
!11262 = !DISubroutineType(types: !11263)
!11263 = !{!1456, !121}
!11264 = !{!11265}
!11265 = !DILocalVariable(name: "parity", arg: 1, scope: !11261, file: !1617, line: 270, type: !121)
!11266 = !DILocation(line: 0, scope: !11261)
!11267 = !DILocation(line: 272, column: 2, scope: !11261)
!11268 = !DILocation(line: 281, column: 1, scope: !11261)
!11269 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1617, file: !1617, line: 220, type: !11251, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11270)
!11270 = !{!11271, !11272}
!11271 = !DILocalVariable(name: "dev", arg: 1, scope: !11269, file: !1617, line: 220, type: !1490)
!11272 = !DILocalVariable(name: "config", scope: !11269, file: !1617, line: 222, type: !10563)
!11273 = !DILocation(line: 0, scope: !11269)
!11274 = !DILocation(line: 222, column: 48, scope: !11269)
!11275 = !DILocation(line: 224, column: 44, scope: !11269)
!11276 = !DILocation(line: 224, column: 9, scope: !11269)
!11277 = !DILocation(line: 224, column: 2, scope: !11269)
!11278 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1617, file: !1617, line: 304, type: !11279, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11281)
!11279 = !DISubroutineType(types: !11280)
!11280 = !{!1470, !121}
!11281 = !{!11282}
!11282 = !DILocalVariable(name: "sb", arg: 1, scope: !11278, file: !1617, line: 304, type: !121)
!11283 = !DILocation(line: 0, scope: !11278)
!11284 = !DILocation(line: 306, column: 2, scope: !11278)
!11285 = !DILocation(line: 0, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11278, file: !1617, line: 306, column: 14)
!11287 = !DILocation(line: 323, column: 1, scope: !11278)
!11288 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1617, file: !1617, line: 235, type: !11251, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11289)
!11289 = !{!11290, !11291}
!11290 = !DILocalVariable(name: "dev", arg: 1, scope: !11288, file: !1617, line: 235, type: !1490)
!11291 = !DILocalVariable(name: "config", scope: !11288, file: !1617, line: 237, type: !10563)
!11292 = !DILocation(line: 0, scope: !11288)
!11293 = !DILocation(line: 237, column: 48, scope: !11288)
!11294 = !DILocation(line: 239, column: 39, scope: !11288)
!11295 = !DILocation(line: 239, column: 9, scope: !11288)
!11296 = !DILocation(line: 239, column: 2, scope: !11288)
!11297 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1617, file: !1617, line: 355, type: !11298, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11300)
!11298 = !DISubroutineType(types: !11299)
!11299 = !{!1463, !121, !121}
!11300 = !{!11301, !11302}
!11301 = !DILocalVariable(name: "db", arg: 1, scope: !11297, file: !1617, line: 355, type: !121)
!11302 = !DILocalVariable(name: "p", arg: 2, scope: !11297, file: !1617, line: 356, type: !121)
!11303 = !DILocation(line: 0, scope: !11297)
!11304 = !DILocation(line: 358, column: 2, scope: !11297)
!11305 = !DILocation(line: 384, column: 1, scope: !11297)
!11306 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1617, file: !1617, line: 250, type: !11251, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11307)
!11307 = !{!11308, !11309}
!11308 = !DILocalVariable(name: "dev", arg: 1, scope: !11306, file: !1617, line: 250, type: !1490)
!11309 = !DILocalVariable(name: "config", scope: !11306, file: !1617, line: 252, type: !10563)
!11310 = !DILocation(line: 0, scope: !11306)
!11311 = !DILocation(line: 252, column: 48, scope: !11306)
!11312 = !DILocation(line: 254, column: 40, scope: !11306)
!11313 = !DILocation(line: 254, column: 9, scope: !11306)
!11314 = !DILocation(line: 254, column: 2, scope: !11306)
!11315 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1617, file: !1617, line: 409, type: !11316, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11318)
!11316 = !DISubroutineType(types: !11317)
!11317 = !{!1476, !121}
!11318 = !{!11319}
!11319 = !DILocalVariable(name: "fc", arg: 1, scope: !11315, file: !1617, line: 409, type: !121)
!11320 = !DILocation(line: 0, scope: !11315)
!11321 = !DILocation(line: 411, column: 9, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11315, file: !1617, line: 411, column: 6)
!11323 = !DILocation(line: 416, column: 1, scope: !11315)
!11324 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10999, file: !10999, line: 967, type: !11000, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11325)
!11325 = !{!11326}
!11326 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11324, file: !10999, line: 967, type: !1561)
!11327 = !DILocation(line: 0, scope: !11324)
!11328 = !DILocation(line: 969, column: 21, scope: !11324)
!11329 = !DILocation(line: 969, column: 3, scope: !11324)
!11330 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10999, file: !10999, line: 601, type: !11000, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11331)
!11331 = !{!11332}
!11332 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11330, file: !10999, line: 601, type: !1561)
!11333 = !DILocation(line: 0, scope: !11330)
!11334 = !DILocation(line: 603, column: 21, scope: !11330)
!11335 = !DILocation(line: 603, column: 3, scope: !11330)
!11336 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10999, file: !10999, line: 820, type: !11000, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11337)
!11337 = !{!11338}
!11338 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11336, file: !10999, line: 820, type: !1561)
!11339 = !DILocation(line: 0, scope: !11336)
!11340 = !DILocation(line: 822, column: 21, scope: !11336)
!11341 = !DILocation(line: 822, column: 3, scope: !11336)
!11342 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10999, file: !10999, line: 547, type: !11000, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11343)
!11343 = !{!11344}
!11344 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11342, file: !10999, line: 547, type: !1561)
!11345 = !DILocation(line: 0, scope: !11342)
!11346 = !DILocation(line: 549, column: 21, scope: !11342)
!11347 = !DILocation(line: 549, column: 3, scope: !11342)
!11348 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1617, file: !1617, line: 257, type: !11349, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11351)
!11349 = !DISubroutineType(types: !11350)
!11350 = !{!121, !1456}
!11351 = !{!11352}
!11352 = !DILocalVariable(name: "parity", arg: 1, scope: !11348, file: !1617, line: 257, type: !1456)
!11353 = !DILocation(line: 0, scope: !11348)
!11354 = !DILocation(line: 259, column: 2, scope: !11348)
!11355 = !DILocation(line: 268, column: 1, scope: !11348)
!11356 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1617, file: !1617, line: 283, type: !11357, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11359)
!11357 = !DISubroutineType(types: !11358)
!11358 = !{!121, !1470}
!11359 = !{!11360}
!11360 = !DILocalVariable(name: "sb", arg: 1, scope: !11356, file: !1617, line: 283, type: !1470)
!11361 = !DILocation(line: 0, scope: !11356)
!11362 = !DILocation(line: 285, column: 2, scope: !11356)
!11363 = !DILocation(line: 0, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11356, file: !1617, line: 285, column: 14)
!11365 = !DILocation(line: 302, column: 1, scope: !11356)
!11366 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1617, file: !1617, line: 325, type: !11367, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11369)
!11367 = !DISubroutineType(types: !11368)
!11368 = !{!121, !1463, !1456}
!11369 = !{!11370, !11371}
!11370 = !DILocalVariable(name: "db", arg: 1, scope: !11366, file: !1617, line: 325, type: !1463)
!11371 = !DILocalVariable(name: "p", arg: 2, scope: !11366, file: !1617, line: 326, type: !1456)
!11372 = !DILocation(line: 0, scope: !11366)
!11373 = !DILocation(line: 328, column: 2, scope: !11366)
!11374 = !DILocation(line: 353, column: 1, scope: !11366)
!11375 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1617, file: !1617, line: 393, type: !11376, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11378)
!11376 = !DISubroutineType(types: !11377)
!11377 = !{!121, !1476}
!11378 = !{!11379}
!11379 = !DILocalVariable(name: "fc", arg: 1, scope: !11375, file: !1617, line: 393, type: !1476)
!11380 = !DILocation(line: 0, scope: !11375)
!11381 = !DILocation(line: 395, column: 9, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11375, file: !1617, line: 395, column: 6)
!11383 = !DILocation(line: 400, column: 1, scope: !11375)
!11384 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10999, file: !10999, line: 424, type: !11030, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11385)
!11385 = !{!11386}
!11386 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11384, file: !10999, line: 424, type: !1561)
!11387 = !DILocation(line: 0, scope: !11384)
!11388 = !DILocation(line: 426, column: 3, scope: !11384)
!11389 = !DILocation(line: 427, column: 1, scope: !11384)
!11390 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1617, file: !1617, line: 197, type: !11391, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11393)
!11391 = !DISubroutineType(types: !11392)
!11392 = !{null, !1490, !121}
!11393 = !{!11394, !11395, !11396}
!11394 = !DILocalVariable(name: "dev", arg: 1, scope: !11390, file: !1617, line: 197, type: !1490)
!11395 = !DILocalVariable(name: "parity", arg: 2, scope: !11390, file: !1617, line: 198, type: !121)
!11396 = !DILocalVariable(name: "config", scope: !11390, file: !1617, line: 200, type: !10563)
!11397 = !DILocation(line: 0, scope: !11390)
!11398 = !DILocation(line: 200, column: 48, scope: !11390)
!11399 = !DILocation(line: 202, column: 29, scope: !11390)
!11400 = !DILocation(line: 202, column: 2, scope: !11390)
!11401 = !DILocation(line: 203, column: 1, scope: !11390)
!11402 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1617, file: !1617, line: 212, type: !11391, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11403)
!11403 = !{!11404, !11405, !11406}
!11404 = !DILocalVariable(name: "dev", arg: 1, scope: !11402, file: !1617, line: 212, type: !1490)
!11405 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11402, file: !1617, line: 213, type: !121)
!11406 = !DILocalVariable(name: "config", scope: !11402, file: !1617, line: 215, type: !10563)
!11407 = !DILocation(line: 0, scope: !11402)
!11408 = !DILocation(line: 215, column: 48, scope: !11402)
!11409 = !DILocation(line: 217, column: 37, scope: !11402)
!11410 = !DILocation(line: 217, column: 2, scope: !11402)
!11411 = !DILocation(line: 218, column: 1, scope: !11402)
!11412 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1617, file: !1617, line: 227, type: !11391, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11413)
!11413 = !{!11414, !11415, !11416}
!11414 = !DILocalVariable(name: "dev", arg: 1, scope: !11412, file: !1617, line: 227, type: !1490)
!11415 = !DILocalVariable(name: "databits", arg: 2, scope: !11412, file: !1617, line: 228, type: !121)
!11416 = !DILocalVariable(name: "config", scope: !11412, file: !1617, line: 230, type: !10563)
!11417 = !DILocation(line: 0, scope: !11412)
!11418 = !DILocation(line: 230, column: 48, scope: !11412)
!11419 = !DILocation(line: 232, column: 32, scope: !11412)
!11420 = !DILocation(line: 232, column: 2, scope: !11412)
!11421 = !DILocation(line: 233, column: 1, scope: !11412)
!11422 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1617, file: !1617, line: 242, type: !11391, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11423)
!11423 = !{!11424, !11425, !11426}
!11424 = !DILocalVariable(name: "dev", arg: 1, scope: !11422, file: !1617, line: 242, type: !1490)
!11425 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11422, file: !1617, line: 243, type: !121)
!11426 = !DILocalVariable(name: "config", scope: !11422, file: !1617, line: 245, type: !10563)
!11427 = !DILocation(line: 0, scope: !11422)
!11428 = !DILocation(line: 245, column: 48, scope: !11422)
!11429 = !DILocation(line: 247, column: 33, scope: !11422)
!11430 = !DILocation(line: 247, column: 2, scope: !11422)
!11431 = !DILocation(line: 248, column: 1, scope: !11422)
!11432 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1617, file: !1617, line: 107, type: !11391, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11433)
!11433 = !{!11434, !11435, !11436, !11437, !11438}
!11434 = !DILocalVariable(name: "dev", arg: 1, scope: !11432, file: !1617, line: 107, type: !1490)
!11435 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11432, file: !1617, line: 107, type: !121)
!11436 = !DILocalVariable(name: "config", scope: !11432, file: !1617, line: 109, type: !10563)
!11437 = !DILocalVariable(name: "data", scope: !11432, file: !1617, line: 110, type: !10686)
!11438 = !DILocalVariable(name: "clock_rate", scope: !11432, file: !1617, line: 112, type: !121)
!11439 = !DILocation(line: 0, scope: !11432)
!11440 = !DILocation(line: 109, column: 48, scope: !11432)
!11441 = !DILocation(line: 110, column: 38, scope: !11432)
!11442 = !DILocation(line: 112, column: 2, scope: !11432)
!11443 = !DILocation(line: 123, column: 36, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11445, file: !1617, line: 123, column: 7)
!11445 = distinct !DILexicalBlock(scope: !11446, file: !1617, line: 122, column: 9)
!11446 = distinct !DILexicalBlock(scope: !11432, file: !1617, line: 115, column: 6)
!11447 = !DILocation(line: 124, column: 42, scope: !11444)
!11448 = !DILocation(line: 123, column: 7, scope: !11444)
!11449 = !DILocation(line: 125, column: 22, scope: !11444)
!11450 = !DILocation(line: 123, column: 7, scope: !11445)
!11451 = !DILocation(line: 176, column: 36, scope: !11432)
!11452 = !DILocation(line: 176, column: 3, scope: !11432)
!11453 = !DILocation(line: 179, column: 32, scope: !11432)
!11454 = !DILocation(line: 180, column: 10, scope: !11432)
!11455 = !DILocation(line: 179, column: 3, scope: !11432)
!11456 = !DILocation(line: 195, column: 1, scope: !11432)
!11457 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10999, file: !10999, line: 410, type: !11030, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11458)
!11458 = !{!11459}
!11459 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11457, file: !10999, line: 410, type: !1561)
!11460 = !DILocation(line: 0, scope: !11457)
!11461 = !DILocation(line: 412, column: 3, scope: !11457)
!11462 = !DILocation(line: 413, column: 1, scope: !11457)
!11463 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !809, file: !809, line: 216, type: !1594, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11464)
!11464 = !{!11465, !11466, !11467, !11468}
!11465 = !DILocalVariable(name: "dev", arg: 1, scope: !11463, file: !809, line: 216, type: !1490)
!11466 = !DILocalVariable(name: "sys", arg: 2, scope: !11463, file: !809, line: 217, type: !905)
!11467 = !DILocalVariable(name: "rate", arg: 3, scope: !11463, file: !809, line: 218, type: !861)
!11468 = !DILocalVariable(name: "api", scope: !11463, file: !809, line: 220, type: !1572)
!11469 = !DILocation(line: 0, scope: !11463)
!11470 = !DILocation(line: 221, column: 49, scope: !11463)
!11471 = !DILocation(line: 223, column: 11, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11463, file: !809, line: 223, column: 6)
!11473 = !DILocation(line: 223, column: 20, scope: !11472)
!11474 = !DILocation(line: 223, column: 6, scope: !11463)
!11475 = !DILocation(line: 227, column: 9, scope: !11463)
!11476 = !DILocation(line: 227, column: 2, scope: !11463)
!11477 = !DILocation(line: 228, column: 1, scope: !11463)
!11478 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10999, file: !10999, line: 615, type: !11479, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11481)
!11479 = !DISubroutineType(types: !11480)
!11480 = !{null, !1561, !121}
!11481 = !{!11482, !11483}
!11482 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11478, file: !10999, line: 615, type: !1561)
!11483 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11478, file: !10999, line: 615, type: !121)
!11484 = !DILocation(line: 0, scope: !11478)
!11485 = !DILocation(line: 617, column: 3, scope: !11478)
!11486 = !DILocation(line: 618, column: 1, scope: !11478)
!11487 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10999, file: !10999, line: 1020, type: !11488, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11490)
!11488 = !DISubroutineType(types: !11489)
!11489 = !{null, !1561, !121, !121, !121}
!11490 = !{!11491, !11492, !11493, !11494}
!11491 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11487, file: !10999, line: 1020, type: !1561)
!11492 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11487, file: !10999, line: 1020, type: !121)
!11493 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11487, file: !10999, line: 1020, type: !121)
!11494 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11487, file: !10999, line: 1021, type: !121)
!11495 = !DILocation(line: 0, scope: !11487)
!11496 = !DILocation(line: 1029, column: 30, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11498, file: !10999, line: 1028, column: 3)
!11498 = distinct !DILexicalBlock(scope: !11487, file: !10999, line: 1023, column: 7)
!11499 = !DILocation(line: 1029, column: 19, scope: !11497)
!11500 = !DILocation(line: 1029, column: 13, scope: !11497)
!11501 = !DILocation(line: 1029, column: 17, scope: !11497)
!11502 = !DILocation(line: 1031, column: 1, scope: !11487)
!11503 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10999, file: !10999, line: 949, type: !11479, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11504)
!11504 = !{!11505, !11506}
!11505 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11503, file: !10999, line: 949, type: !1561)
!11506 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11503, file: !10999, line: 949, type: !121)
!11507 = !DILocation(line: 0, scope: !11503)
!11508 = !DILocation(line: 951, column: 3, scope: !11503)
!11509 = !DILocation(line: 952, column: 1, scope: !11503)
!11510 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10999, file: !10999, line: 588, type: !11479, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11511)
!11511 = !{!11512, !11513}
!11512 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11510, file: !10999, line: 588, type: !1561)
!11513 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11510, file: !10999, line: 588, type: !121)
!11514 = !DILocation(line: 0, scope: !11510)
!11515 = !DILocation(line: 590, column: 3, scope: !11510)
!11516 = !DILocation(line: 591, column: 1, scope: !11510)
!11517 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10999, file: !10999, line: 805, type: !11479, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11518)
!11518 = !{!11519, !11520}
!11519 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11517, file: !10999, line: 805, type: !1561)
!11520 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11517, file: !10999, line: 805, type: !121)
!11521 = !DILocation(line: 0, scope: !11517)
!11522 = !DILocation(line: 807, column: 3, scope: !11517)
!11523 = !DILocation(line: 808, column: 1, scope: !11517)
!11524 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10999, file: !10999, line: 532, type: !11479, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11525)
!11525 = !{!11526, !11527}
!11526 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11524, file: !10999, line: 532, type: !1561)
!11527 = !DILocalVariable(name: "Parity", arg: 2, scope: !11524, file: !10999, line: 532, type: !121)
!11528 = !DILocation(line: 0, scope: !11524)
!11529 = !DILocation(line: 534, column: 3, scope: !11524)
!11530 = !DILocation(line: 535, column: 1, scope: !11524)
!11531 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10999, file: !10999, line: 1737, type: !11000, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11532)
!11532 = !{!11533}
!11533 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11531, file: !10999, line: 1737, type: !1561)
!11534 = !DILocation(line: 0, scope: !11531)
!11535 = !DILocation(line: 1739, column: 11, scope: !11531)
!11536 = !DILocation(line: 1739, column: 3, scope: !11531)
!11537 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10999, file: !10999, line: 1748, type: !11000, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11538)
!11538 = !{!11539}
!11539 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11537, file: !10999, line: 1748, type: !1561)
!11540 = !DILocation(line: 0, scope: !11537)
!11541 = !DILocation(line: 1750, column: 11, scope: !11537)
!11542 = !DILocation(line: 1750, column: 45, scope: !11537)
!11543 = !DILocation(line: 1750, column: 3, scope: !11537)
!11544 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10999, file: !10999, line: 1827, type: !11000, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11545)
!11545 = !{!11546}
!11546 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11544, file: !10999, line: 1827, type: !1561)
!11547 = !DILocation(line: 0, scope: !11544)
!11548 = !DILocation(line: 1829, column: 11, scope: !11544)
!11549 = !DILocation(line: 1829, column: 46, scope: !11544)
!11550 = !DILocation(line: 1829, column: 3, scope: !11544)
!11551 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10999, file: !10999, line: 1992, type: !11030, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11552)
!11552 = !{!11553}
!11553 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11551, file: !10999, line: 1992, type: !1561)
!11554 = !DILocation(line: 0, scope: !11551)
!11555 = !DILocation(line: 1994, column: 3, scope: !11551)
!11556 = !DILocation(line: 1995, column: 1, scope: !11551)
!11557 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10999, file: !10999, line: 1877, type: !11030, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11558)
!11558 = !{!11559, !11560}
!11559 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11557, file: !10999, line: 1877, type: !1561)
!11560 = !DILocalVariable(name: "tmpreg", scope: !11557, file: !10999, line: 1879, type: !120)
!11561 = !DILocation(line: 0, scope: !11557)
!11562 = !DILocation(line: 1879, column: 3, scope: !11557)
!11563 = !DILocation(line: 1879, column: 17, scope: !11557)
!11564 = !DILocation(line: 1880, column: 20, scope: !11557)
!11565 = !DILocation(line: 1880, column: 10, scope: !11557)
!11566 = !DILocation(line: 1881, column: 10, scope: !11557)
!11567 = !DILocation(line: 1882, column: 20, scope: !11557)
!11568 = !DILocation(line: 1882, column: 10, scope: !11557)
!11569 = !DILocation(line: 1883, column: 10, scope: !11557)
!11570 = !DILocation(line: 1884, column: 1, scope: !11557)
!11571 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10999, file: !10999, line: 1896, type: !11030, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11572)
!11572 = !{!11573, !11574}
!11573 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11571, file: !10999, line: 1896, type: !1561)
!11574 = !DILocalVariable(name: "tmpreg", scope: !11571, file: !10999, line: 1898, type: !120)
!11575 = !DILocation(line: 0, scope: !11571)
!11576 = !DILocation(line: 1898, column: 3, scope: !11571)
!11577 = !DILocation(line: 1898, column: 17, scope: !11571)
!11578 = !DILocation(line: 1899, column: 20, scope: !11571)
!11579 = !DILocation(line: 1899, column: 10, scope: !11571)
!11580 = !DILocation(line: 1900, column: 10, scope: !11571)
!11581 = !DILocation(line: 1901, column: 20, scope: !11571)
!11582 = !DILocation(line: 1901, column: 10, scope: !11571)
!11583 = !DILocation(line: 1902, column: 10, scope: !11571)
!11584 = !DILocation(line: 1903, column: 1, scope: !11571)
!11585 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10999, file: !10999, line: 1915, type: !11030, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11586)
!11586 = !{!11587, !11588}
!11587 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11585, file: !10999, line: 1915, type: !1561)
!11588 = !DILocalVariable(name: "tmpreg", scope: !11585, file: !10999, line: 1917, type: !120)
!11589 = !DILocation(line: 0, scope: !11585)
!11590 = !DILocation(line: 1917, column: 3, scope: !11585)
!11591 = !DILocation(line: 1917, column: 17, scope: !11585)
!11592 = !DILocation(line: 1918, column: 20, scope: !11585)
!11593 = !DILocation(line: 1918, column: 10, scope: !11585)
!11594 = !DILocation(line: 1919, column: 10, scope: !11585)
!11595 = !DILocation(line: 1920, column: 20, scope: !11585)
!11596 = !DILocation(line: 1920, column: 10, scope: !11585)
!11597 = !DILocation(line: 1921, column: 10, scope: !11585)
!11598 = !DILocation(line: 1922, column: 1, scope: !11585)
!11599 = !DILocation(line: 0, scope: !1695)
!11600 = !DILocation(line: 1914, column: 1, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !1695, file: !1617, line: 1914, column: 1)
!11602 = !DILocation(line: 1914, column: 1, scope: !1695)
!11603 = !DILocation(line: 0, scope: !1744)
!11604 = !DILocation(line: 1914, column: 1, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !1744, file: !1617, line: 1914, column: 1)
!11606 = !DILocation(line: 1914, column: 1, scope: !1744)
!11607 = !DILocation(line: 0, scope: !1761)
!11608 = !DILocation(line: 1914, column: 1, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !1761, file: !1617, line: 1914, column: 1)
!11610 = !DILocation(line: 1914, column: 1, scope: !1761)
!11611 = !DILocation(line: 0, scope: !1778)
!11612 = !DILocation(line: 1914, column: 1, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !1778, file: !1617, line: 1914, column: 1)
!11614 = !DILocation(line: 1914, column: 1, scope: !1778)
!11615 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1617, file: !1617, line: 987, type: !1541, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11616)
!11616 = !{!11617, !11618}
!11617 = !DILocalVariable(name: "dev", arg: 1, scope: !11615, file: !1617, line: 987, type: !1490)
!11618 = !DILocalVariable(name: "data", scope: !11615, file: !1617, line: 989, type: !10686)
!11619 = !DILocation(line: 0, scope: !11615)
!11620 = !DILocation(line: 989, column: 38, scope: !11615)
!11621 = !DILocation(line: 1014, column: 12, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11615, file: !1617, line: 1014, column: 6)
!11623 = !DILocation(line: 1014, column: 6, scope: !11622)
!11624 = !DILocation(line: 1014, column: 6, scope: !11615)
!11625 = !DILocation(line: 1015, column: 28, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11622, file: !1617, line: 1014, column: 21)
!11627 = !DILocation(line: 1015, column: 3, scope: !11626)
!11628 = !DILocation(line: 1016, column: 2, scope: !11626)
!11629 = !DILocation(line: 1059, column: 1, scope: !11615)
!11630 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1617, file: !1617, line: 1583, type: !1511, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11631)
!11631 = !{!11632, !11633, !11634, !11635, !11636, !11637}
!11632 = !DILocalVariable(name: "dev", arg: 1, scope: !11630, file: !1617, line: 1583, type: !1490)
!11633 = !DILocalVariable(name: "config", scope: !11630, file: !1617, line: 1585, type: !10563)
!11634 = !DILocalVariable(name: "data", scope: !11630, file: !1617, line: 1586, type: !10686)
!11635 = !DILocalVariable(name: "ll_parity", scope: !11630, file: !1617, line: 1587, type: !121)
!11636 = !DILocalVariable(name: "ll_datawidth", scope: !11630, file: !1617, line: 1588, type: !121)
!11637 = !DILocalVariable(name: "err", scope: !11630, file: !1617, line: 1589, type: !103)
!11638 = !DILocation(line: 0, scope: !11630)
!11639 = !DILocation(line: 1585, column: 48, scope: !11630)
!11640 = !DILocation(line: 1586, column: 38, scope: !11630)
!11641 = !DILocation(line: 1591, column: 2, scope: !11630)
!11642 = !DILocation(line: 1593, column: 29, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11630, file: !1617, line: 1593, column: 6)
!11644 = !DILocation(line: 1593, column: 7, scope: !11643)
!11645 = !DILocation(line: 1593, column: 6, scope: !11630)
!11646 = !DILocation(line: 1599, column: 31, scope: !11630)
!11647 = !DILocation(line: 1599, column: 71, scope: !11630)
!11648 = !DILocation(line: 1599, column: 8, scope: !11630)
!11649 = !DILocation(line: 1600, column: 10, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11630, file: !1617, line: 1600, column: 6)
!11651 = !DILocation(line: 1600, column: 6, scope: !11630)
!11652 = !DILocation(line: 1616, column: 36, scope: !11630)
!11653 = !DILocation(line: 1616, column: 8, scope: !11630)
!11654 = !DILocation(line: 1617, column: 10, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11630, file: !1617, line: 1617, column: 6)
!11656 = !DILocation(line: 1617, column: 6, scope: !11630)
!11657 = !DILocation(line: 1621, column: 27, scope: !11630)
!11658 = !DILocation(line: 1621, column: 2, scope: !11630)
!11659 = !DILocation(line: 1624, column: 40, scope: !11630)
!11660 = !DILocation(line: 1624, column: 2, scope: !11630)
!11661 = !DILocation(line: 1630, column: 14, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11630, file: !1617, line: 1630, column: 6)
!11663 = !DILocation(line: 1630, column: 6, scope: !11630)
!11664 = !DILocation(line: 1638, column: 2, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11666, file: !1617, line: 1634, column: 34)
!11666 = distinct !DILexicalBlock(scope: !11662, file: !1617, line: 1634, column: 13)
!11667 = !DILocation(line: 0, scope: !11662)
!11668 = !DILocation(line: 1649, column: 35, scope: !11630)
!11669 = !DILocation(line: 1649, column: 2, scope: !11630)
!11670 = !DILocation(line: 1654, column: 14, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11630, file: !1617, line: 1654, column: 6)
!11672 = !DILocation(line: 1654, column: 6, scope: !11630)
!11673 = !DILocation(line: 1655, column: 3, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11671, file: !1617, line: 1654, column: 31)
!11675 = !DILocation(line: 1656, column: 2, scope: !11674)
!11676 = !DILocation(line: 1659, column: 37, scope: !11630)
!11677 = !DILocation(line: 1659, column: 2, scope: !11630)
!11678 = !DILocation(line: 1662, column: 14, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11630, file: !1617, line: 1662, column: 6)
!11680 = !DILocation(line: 1662, column: 6, scope: !11630)
!11681 = !DILocation(line: 1663, column: 37, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11679, file: !1617, line: 1662, column: 27)
!11683 = !DILocation(line: 1663, column: 3, scope: !11682)
!11684 = !DILocation(line: 1664, column: 2, scope: !11682)
!11685 = !DILocation(line: 1684, column: 26, scope: !11630)
!11686 = !DILocation(line: 1684, column: 2, scope: !11630)
!11687 = !DILocation(line: 1701, column: 10, scope: !11630)
!11688 = !DILocation(line: 1701, column: 2, scope: !11630)
!11689 = !DILocation(line: 1722, column: 2, scope: !11630)
!11690 = !DILocation(line: 1724, column: 1, scope: !11630)
!11691 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1617, file: !1617, line: 651, type: !1541, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11692)
!11692 = !{!11693, !11694, !11695}
!11693 = !DILocalVariable(name: "dev", arg: 1, scope: !11691, file: !1617, line: 651, type: !1490)
!11694 = !DILocalVariable(name: "data", scope: !11691, file: !1617, line: 653, type: !10686)
!11695 = !DILocalVariable(name: "clk", scope: !11691, file: !1617, line: 654, type: !11696)
!11696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1490)
!11697 = !DILocation(line: 0, scope: !11691)
!11698 = !DILocation(line: 653, column: 38, scope: !11691)
!11699 = !DILocation(line: 656, column: 8, scope: !11691)
!11700 = !DILocation(line: 656, column: 14, scope: !11691)
!11701 = !DILocation(line: 657, column: 1, scope: !11691)
!11702 = distinct !DISubprogram(name: "device_is_ready", scope: !6745, file: !6745, line: 47, type: !11703, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11705)
!11703 = !DISubroutineType(types: !11704)
!11704 = !{!157, !1490}
!11705 = !{!11706}
!11706 = !DILocalVariable(name: "dev", arg: 1, scope: !11702, file: !6745, line: 47, type: !1490)
!11707 = !DILocation(line: 0, scope: !11702)
!11708 = !DILocation(line: 55, column: 2, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !11702, file: !6745, line: 55, column: 2)
!11710 = !{i64 2155368976}
!11711 = !DILocation(line: 56, column: 9, scope: !11702)
!11712 = !DILocation(line: 56, column: 2, scope: !11702)
!11713 = distinct !DISubprogram(name: "clock_control_on", scope: !809, file: !809, line: 123, type: !1579, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11714)
!11714 = !{!11715, !11716, !11717}
!11715 = !DILocalVariable(name: "dev", arg: 1, scope: !11713, file: !809, line: 123, type: !1490)
!11716 = !DILocalVariable(name: "sys", arg: 2, scope: !11713, file: !809, line: 124, type: !905)
!11717 = !DILocalVariable(name: "api", scope: !11713, file: !809, line: 126, type: !1572)
!11718 = !DILocation(line: 0, scope: !11713)
!11719 = !DILocation(line: 127, column: 49, scope: !11713)
!11720 = !DILocation(line: 129, column: 14, scope: !11713)
!11721 = !DILocation(line: 129, column: 9, scope: !11713)
!11722 = !DILocation(line: 129, column: 2, scope: !11713)
!11723 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1668, file: !1668, line: 342, type: !11724, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11726)
!11724 = !DISubroutineType(types: !11725)
!11725 = !{!103, !1731, !154}
!11726 = !{!11727, !11728, !11729, !11730}
!11727 = !DILocalVariable(name: "config", arg: 1, scope: !11723, file: !1668, line: 342, type: !1731)
!11728 = !DILocalVariable(name: "id", arg: 2, scope: !11723, file: !1668, line: 343, type: !154)
!11729 = !DILocalVariable(name: "ret", scope: !11723, file: !1668, line: 345, type: !103)
!11730 = !DILocalVariable(name: "state", scope: !11723, file: !1668, line: 346, type: !1671)
!11731 = !DILocation(line: 0, scope: !11723)
!11732 = !DILocation(line: 346, column: 2, scope: !11723)
!11733 = !DILocation(line: 348, column: 8, scope: !11723)
!11734 = !DILocation(line: 349, column: 10, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11723, file: !1668, line: 349, column: 6)
!11736 = !DILocation(line: 349, column: 6, scope: !11723)
!11737 = !DILocation(line: 353, column: 44, scope: !11723)
!11738 = !DILocation(line: 353, column: 9, scope: !11723)
!11739 = !DILocation(line: 353, column: 2, scope: !11723)
!11740 = !DILocation(line: 354, column: 1, scope: !11723)
!11741 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10999, file: !10999, line: 497, type: !11479, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11742)
!11742 = !{!11743, !11744, !11745}
!11743 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11741, file: !10999, line: 497, type: !1561)
!11744 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11741, file: !10999, line: 497, type: !121)
!11745 = !DILocalVariable(name: "val", scope: !11746, file: !10999, line: 499, type: !121)
!11746 = distinct !DILexicalBlock(scope: !11741, file: !10999, line: 499, column: 3)
!11747 = !DILocation(line: 0, scope: !11741)
!11748 = !DILocation(line: 499, column: 3, scope: !11746)
!11749 = !DILocation(line: 0, scope: !11039, inlinedAt: !11750)
!11750 = distinct !DILocation(line: 499, column: 3, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11746, file: !10999, line: 499, column: 3)
!11752 = !DILocation(line: 480, column: 4, scope: !11039, inlinedAt: !11750)
!11753 = !DILocation(line: 499, column: 3, scope: !11751)
!11754 = !DILocation(line: 0, scope: !11746)
!11755 = !DILocation(line: 0, scope: !11052, inlinedAt: !11756)
!11756 = distinct !DILocation(line: 499, column: 3, scope: !11746)
!11757 = !DILocation(line: 531, column: 4, scope: !11052, inlinedAt: !11756)
!11758 = distinct !{!11758, !11748, !11748}
!11759 = !DILocation(line: 500, column: 1, scope: !11741)
!11760 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10999, file: !10999, line: 850, type: !11488, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11761)
!11761 = !{!11762, !11763, !11764, !11765}
!11762 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11760, file: !10999, line: 850, type: !1561)
!11763 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11760, file: !10999, line: 850, type: !121)
!11764 = !DILocalVariable(name: "Parity", arg: 3, scope: !11760, file: !10999, line: 850, type: !121)
!11765 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11760, file: !10999, line: 851, type: !121)
!11766 = !DILocation(line: 0, scope: !11760)
!11767 = !DILocation(line: 853, column: 3, scope: !11760)
!11768 = !DILocation(line: 854, column: 3, scope: !11760)
!11769 = !DILocation(line: 855, column: 1, scope: !11760)
!11770 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10999, file: !10999, line: 1337, type: !11030, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11771)
!11771 = !{!11772}
!11772 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11770, file: !10999, line: 1337, type: !1561)
!11773 = !DILocation(line: 0, scope: !11770)
!11774 = !DILocation(line: 1339, column: 3, scope: !11770)
!11775 = !DILocation(line: 1340, column: 1, scope: !11770)
!11776 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1668, file: !1668, line: 316, type: !11777, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11779)
!11777 = !DISubroutineType(types: !11778)
!11778 = !{!103, !1731, !1671}
!11779 = !{!11780, !11781, !11782}
!11780 = !DILocalVariable(name: "config", arg: 1, scope: !11776, file: !1668, line: 317, type: !1731)
!11781 = !DILocalVariable(name: "state", arg: 2, scope: !11776, file: !1668, line: 318, type: !1671)
!11782 = !DILocalVariable(name: "reg", scope: !11776, file: !1668, line: 320, type: !22)
!11783 = !DILocation(line: 0, scope: !11776)
!11784 = !DILocation(line: 329, column: 39, scope: !11776)
!11785 = !DILocation(line: 329, column: 52, scope: !11776)
!11786 = !DILocation(line: 329, column: 9, scope: !11776)
!11787 = !DILocation(line: 329, column: 2, scope: !11776)
!11788 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !11703, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1446, retainedNodes: !11789)
!11789 = !{!11790}
!11790 = !DILocalVariable(name: "dev", arg: 1, scope: !11788, file: !141, line: 730, type: !1490)
!11791 = !DILocation(line: 0, scope: !11788)
!11792 = !DILocation(line: 732, column: 9, scope: !11788)
!11793 = !DILocation(line: 732, column: 2, scope: !11788)
!11794 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1865, file: !1865, line: 270, type: !1871, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11795)
!11795 = !{!11796}
!11796 = !DILocalVariable(name: "dev", arg: 1, scope: !11794, file: !1865, line: 270, type: !1873)
!11797 = !DILocation(line: 0, scope: !11794)
!11798 = !DILocation(line: 274, column: 2, scope: !11794)
!11799 = !DILocation(line: 275, column: 12, scope: !11794)
!11800 = !DILocation(line: 276, column: 15, scope: !11794)
!11801 = !DILocation(line: 277, column: 16, scope: !11794)
!11802 = !DILocation(line: 278, column: 15, scope: !11794)
!11803 = !DILocation(line: 279, column: 16, scope: !11794)
!11804 = !DILocation(line: 282, column: 2, scope: !11794)
!11805 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6938, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11806)
!11806 = !{!11807, !11808}
!11807 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11805, file: !495, line: 1814, type: !759)
!11808 = !DILocalVariable(name: "priority", arg: 2, scope: !11805, file: !495, line: 1814, type: !121)
!11809 = !DILocation(line: 0, scope: !11805)
!11810 = !DILocation(line: 1822, column: 46, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11812, file: !495, line: 1821, column: 3)
!11812 = distinct !DILexicalBlock(scope: !11805, file: !495, line: 1816, column: 7)
!11813 = !DILocation(line: 1824, column: 1, scope: !11805)
!11814 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1865, file: !1865, line: 118, type: !6841, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11815)
!11815 = !{!11816, !11817}
!11816 = !DILocalVariable(name: "arg", arg: 1, scope: !11814, file: !1865, line: 118, type: !102)
!11817 = !DILocalVariable(name: "dticks", scope: !11814, file: !1865, line: 121, type: !121)
!11818 = !DILocation(line: 0, scope: !11814)
!11819 = !DILocation(line: 124, column: 2, scope: !11814)
!11820 = !DILocation(line: 129, column: 17, scope: !11814)
!11821 = !DILocation(line: 129, column: 14, scope: !11814)
!11822 = !DILocation(line: 130, column: 15, scope: !11814)
!11823 = !DILocation(line: 145, column: 27, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11825, file: !1865, line: 132, column: 16)
!11825 = distinct !DILexicalBlock(scope: !11814, file: !1865, line: 132, column: 6)
!11826 = !DILocation(line: 145, column: 25, scope: !11824)
!11827 = !DILocation(line: 145, column: 45, scope: !11824)
!11828 = !DILocation(line: 146, column: 30, scope: !11824)
!11829 = !DILocation(line: 146, column: 20, scope: !11824)
!11830 = !DILocation(line: 147, column: 3, scope: !11824)
!11831 = !DILocation(line: 151, column: 2, scope: !11814)
!11832 = !DILocation(line: 152, column: 1, scope: !11814)
!11833 = distinct !DISubprogram(name: "elapsed", scope: !1865, file: !1865, line: 85, type: !6985, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11834)
!11834 = !{!11835, !11836, !11837}
!11835 = !DILocalVariable(name: "val1", scope: !11833, file: !1865, line: 87, type: !121)
!11836 = !DILocalVariable(name: "ctrl", scope: !11833, file: !1865, line: 88, type: !121)
!11837 = !DILocalVariable(name: "val2", scope: !11833, file: !1865, line: 89, type: !121)
!11838 = !DILocation(line: 87, column: 27, scope: !11833)
!11839 = !DILocation(line: 0, scope: !11833)
!11840 = !DILocation(line: 88, column: 27, scope: !11833)
!11841 = !DILocation(line: 89, column: 27, scope: !11833)
!11842 = !DILocation(line: 105, column: 12, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11833, file: !1865, line: 105, column: 6)
!11844 = !DILocation(line: 106, column: 6, scope: !11843)
!11845 = !DILocation(line: 107, column: 16, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11843, file: !1865, line: 106, column: 24)
!11847 = !DILocation(line: 111, column: 18, scope: !11846)
!11848 = !DILocation(line: 112, column: 2, scope: !11846)
!11849 = !DILocation(line: 114, column: 20, scope: !11833)
!11850 = !DILocation(line: 114, column: 30, scope: !11833)
!11851 = !DILocation(line: 114, column: 28, scope: !11833)
!11852 = !DILocation(line: 114, column: 2, scope: !11833)
!11853 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1865, file: !1865, line: 154, type: !11854, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11856)
!11854 = !DISubroutineType(types: !11855)
!11855 = !{null, !332, !157}
!11856 = !{!11857, !11858, !11859, !11860, !11861, !11862, !11863, !11868, !11869}
!11857 = !DILocalVariable(name: "ticks", arg: 1, scope: !11853, file: !1865, line: 154, type: !332)
!11858 = !DILocalVariable(name: "idle", arg: 2, scope: !11853, file: !1865, line: 154, type: !157)
!11859 = !DILocalVariable(name: "delay", scope: !11853, file: !1865, line: 169, type: !121)
!11860 = !DILocalVariable(name: "val1", scope: !11853, file: !1865, line: 170, type: !121)
!11861 = !DILocalVariable(name: "val2", scope: !11853, file: !1865, line: 170, type: !121)
!11862 = !DILocalVariable(name: "last_load_", scope: !11853, file: !1865, line: 171, type: !121)
!11863 = !DILocalVariable(name: "key", scope: !11853, file: !1865, line: 176, type: !11864)
!11864 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !11865)
!11865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !11866)
!11866 = !{!11867}
!11867 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11865, file: !460, line: 33, baseType: !103, size: 32)
!11868 = !DILocalVariable(name: "pending", scope: !11853, file: !1865, line: 178, type: !121)
!11869 = !DILocalVariable(name: "unannounced", scope: !11853, file: !1865, line: 185, type: !121)
!11870 = !DILocation(line: 0, scope: !11853)
!11871 = !DILocation(line: 162, column: 49, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11853, file: !1865, line: 162, column: 6)
!11873 = !DILocation(line: 163, column: 17, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11872, file: !1865, line: 162, column: 78)
!11875 = !DILocation(line: 164, column: 13, scope: !11874)
!11876 = !DILocation(line: 165, column: 3, scope: !11874)
!11877 = !DILocation(line: 171, column: 24, scope: !11853)
!11878 = !DILocation(line: 173, column: 10, scope: !11853)
!11879 = !DILocation(line: 174, column: 10, scope: !11853)
!11880 = !DILocalVariable(name: "l", arg: 1, scope: !11881, file: !460, line: 136, type: !11884)
!11881 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !11882, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11885)
!11882 = !DISubroutineType(types: !11883)
!11883 = !{!11864, !11884}
!11884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!11885 = !{!11880, !11886}
!11886 = !DILocalVariable(name: "k", scope: !11881, file: !460, line: 139, type: !11864)
!11887 = !DILocation(line: 0, scope: !11881, inlinedAt: !11888)
!11888 = distinct !DILocation(line: 176, column: 25, scope: !11853)
!11889 = !DILocation(line: 55, column: 2, scope: !11890, inlinedAt: !11894)
!11890 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11891)
!11891 = !{!11892, !11893}
!11892 = !DILocalVariable(name: "key", scope: !11890, file: !5884, line: 44, type: !32)
!11893 = !DILocalVariable(name: "tmp", scope: !11890, file: !5884, line: 53, type: !32)
!11894 = distinct !DILocation(line: 145, column: 10, scope: !11881, inlinedAt: !11888)
!11895 = !{i64 2279147}
!11896 = !DILocation(line: 0, scope: !11890, inlinedAt: !11894)
!11897 = !DILocation(line: 178, column: 21, scope: !11853)
!11898 = !DILocation(line: 180, column: 18, scope: !11853)
!11899 = !DILocation(line: 182, column: 14, scope: !11853)
!11900 = !DILocation(line: 183, column: 15, scope: !11853)
!11901 = !DILocation(line: 185, column: 39, scope: !11853)
!11902 = !DILocation(line: 185, column: 37, scope: !11853)
!11903 = !DILocation(line: 187, column: 27, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11853, file: !1865, line: 187, column: 6)
!11905 = !DILocation(line: 187, column: 6, scope: !11853)
!11906 = !DILocation(line: 202, column: 27, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11904, file: !1865, line: 195, column: 9)
!11908 = !DILocation(line: 202, column: 48, scope: !11907)
!11909 = !DILocation(line: 203, column: 9, scope: !11907)
!11910 = !DILocation(line: 204, column: 11, scope: !11907)
!11911 = !DILocation(line: 205, column: 13, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11907, file: !1865, line: 205, column: 7)
!11913 = !DILocation(line: 205, column: 7, scope: !11907)
!11914 = !DILocation(line: 0, scope: !11904)
!11915 = !DILocation(line: 212, column: 18, scope: !11853)
!11916 = !DILocation(line: 214, column: 28, scope: !11853)
!11917 = !DILocation(line: 214, column: 16, scope: !11853)
!11918 = !DILocation(line: 215, column: 15, scope: !11853)
!11919 = !DILocation(line: 227, column: 11, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11853, file: !1865, line: 227, column: 6)
!11921 = !DILocation(line: 227, column: 6, scope: !11853)
!11922 = !DILocation(line: 228, column: 15, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11920, file: !1865, line: 227, column: 19)
!11924 = !DILocation(line: 228, column: 38, scope: !11923)
!11925 = !DILocation(line: 228, column: 24, scope: !11923)
!11926 = !DILocation(line: 229, column: 2, scope: !11923)
!11927 = !DILocation(line: 230, column: 24, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11920, file: !1865, line: 229, column: 9)
!11929 = !DILocation(line: 230, column: 15, scope: !11928)
!11930 = !DILocation(line: 0, scope: !11920)
!11931 = !DILocalVariable(name: "key", arg: 2, scope: !11932, file: !460, line: 190, type: !11864)
!11932 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !11933, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11935)
!11933 = !DISubroutineType(types: !11934)
!11934 = !{null, !11884, !11864}
!11935 = !{!11936, !11931}
!11936 = !DILocalVariable(name: "l", arg: 1, scope: !11932, file: !460, line: 189, type: !11884)
!11937 = !DILocation(line: 0, scope: !11932, inlinedAt: !11938)
!11938 = distinct !DILocation(line: 232, column: 2, scope: !11853)
!11939 = !DILocalVariable(name: "key", arg: 1, scope: !11940, file: !5884, line: 84, type: !32)
!11940 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11941)
!11941 = !{!11939}
!11942 = !DILocation(line: 0, scope: !11940, inlinedAt: !11943)
!11943 = distinct !DILocation(line: 215, column: 2, scope: !11932, inlinedAt: !11938)
!11944 = !DILocation(line: 95, column: 2, scope: !11940, inlinedAt: !11943)
!11945 = !{i64 2279964}
!11946 = !DILocation(line: 234, column: 1, scope: !11853)
!11947 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1865, file: !1865, line: 236, type: !6985, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11948)
!11948 = !{!11949, !11950}
!11949 = !DILocalVariable(name: "key", scope: !11947, file: !1865, line: 242, type: !11864)
!11950 = !DILocalVariable(name: "cyc", scope: !11947, file: !1865, line: 243, type: !121)
!11951 = !DILocation(line: 0, scope: !11881, inlinedAt: !11952)
!11952 = distinct !DILocation(line: 242, column: 25, scope: !11947)
!11953 = !DILocation(line: 55, column: 2, scope: !11890, inlinedAt: !11954)
!11954 = distinct !DILocation(line: 145, column: 10, scope: !11881, inlinedAt: !11952)
!11955 = !DILocation(line: 0, scope: !11890, inlinedAt: !11954)
!11956 = !DILocation(line: 0, scope: !11947)
!11957 = !DILocation(line: 243, column: 17, scope: !11947)
!11958 = !DILocation(line: 243, column: 29, scope: !11947)
!11959 = !DILocation(line: 243, column: 27, scope: !11947)
!11960 = !DILocation(line: 243, column: 43, scope: !11947)
!11961 = !DILocation(line: 243, column: 41, scope: !11947)
!11962 = !DILocation(line: 0, scope: !11932, inlinedAt: !11963)
!11963 = distinct !DILocation(line: 245, column: 2, scope: !11947)
!11964 = !DILocation(line: 0, scope: !11940, inlinedAt: !11965)
!11965 = distinct !DILocation(line: 215, column: 2, scope: !11932, inlinedAt: !11963)
!11966 = !DILocation(line: 95, column: 2, scope: !11940, inlinedAt: !11965)
!11967 = !DILocation(line: 246, column: 13, scope: !11947)
!11968 = !DILocation(line: 246, column: 2, scope: !11947)
!11969 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1865, file: !1865, line: 249, type: !6985, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11970)
!11970 = !{!11971, !11972}
!11971 = !DILocalVariable(name: "key", scope: !11969, file: !1865, line: 251, type: !11864)
!11972 = !DILocalVariable(name: "ret", scope: !11969, file: !1865, line: 252, type: !121)
!11973 = !DILocation(line: 0, scope: !11881, inlinedAt: !11974)
!11974 = distinct !DILocation(line: 251, column: 25, scope: !11969)
!11975 = !DILocation(line: 55, column: 2, scope: !11890, inlinedAt: !11976)
!11976 = distinct !DILocation(line: 145, column: 10, scope: !11881, inlinedAt: !11974)
!11977 = !DILocation(line: 0, scope: !11890, inlinedAt: !11976)
!11978 = !DILocation(line: 0, scope: !11969)
!11979 = !DILocation(line: 252, column: 17, scope: !11969)
!11980 = !DILocation(line: 252, column: 29, scope: !11969)
!11981 = !DILocation(line: 252, column: 27, scope: !11969)
!11982 = !DILocation(line: 0, scope: !11932, inlinedAt: !11983)
!11983 = distinct !DILocation(line: 254, column: 2, scope: !11969)
!11984 = !DILocation(line: 0, scope: !11940, inlinedAt: !11985)
!11985 = distinct !DILocation(line: 215, column: 2, scope: !11932, inlinedAt: !11983)
!11986 = !DILocation(line: 95, column: 2, scope: !11940, inlinedAt: !11985)
!11987 = !DILocation(line: 255, column: 2, scope: !11969)
!11988 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1865, file: !1865, line: 258, type: !3318, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !461)
!11989 = !DILocation(line: 260, column: 6, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11988, file: !1865, line: 260, column: 6)
!11991 = !DILocation(line: 260, column: 16, scope: !11990)
!11992 = !DILocation(line: 260, column: 6, scope: !11988)
!11993 = !DILocation(line: 261, column: 17, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11990, file: !1865, line: 260, column: 34)
!11995 = !DILocation(line: 262, column: 2, scope: !11994)
!11996 = !DILocation(line: 263, column: 1, scope: !11988)
!11997 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1865, file: !1865, line: 265, type: !3318, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !461)
!11998 = !DILocation(line: 267, column: 16, scope: !11997)
!11999 = !DILocation(line: 268, column: 1, scope: !11997)
!12000 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12001, file: !12001, line: 9, type: !12002, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3146, retainedNodes: !12025)
!12001 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12002 = !DISubroutineType(types: !12003)
!12003 = !{!103, !12004, !154, !12024}
!12004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12005, size: 32)
!12005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12006)
!12006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1668, line: 60, size: 64, elements: !12007)
!12007 = !{!12008, !12023}
!12008 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12006, file: !1668, line: 69, baseType: !12009, size: 32)
!12009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12010, size: 32)
!12010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12011)
!12011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1668, line: 50, size: 64, elements: !12012)
!12012 = !{!12013, !12021, !12022}
!12013 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12011, file: !1668, line: 52, baseType: !12014, size: 32)
!12014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12015, size: 32)
!12015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12016)
!12016 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1679, line: 37, baseType: !12017)
!12017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1679, line: 32, size: 64, elements: !12018)
!12018 = !{!12019, !12020}
!12019 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12017, file: !1679, line: 34, baseType: !121, size: 32)
!12020 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12017, file: !1679, line: 36, baseType: !121, size: 32, offset: 32)
!12021 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12011, file: !1668, line: 54, baseType: !154, size: 8, offset: 32)
!12022 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12011, file: !1668, line: 56, baseType: !154, size: 8, offset: 40)
!12023 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12006, file: !1668, line: 71, baseType: !154, size: 8, offset: 32)
!12024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12009, size: 32)
!12025 = !{!12026, !12027, !12028}
!12026 = !DILocalVariable(name: "config", arg: 1, scope: !12000, file: !12001, line: 9, type: !12004)
!12027 = !DILocalVariable(name: "id", arg: 2, scope: !12000, file: !12001, line: 9, type: !154)
!12028 = !DILocalVariable(name: "state", arg: 3, scope: !12000, file: !12001, line: 10, type: !12024)
!12029 = !DILocation(line: 0, scope: !12000)
!12030 = !DILocation(line: 12, column: 20, scope: !12000)
!12031 = !DILocation(line: 13, column: 27, scope: !12000)
!12032 = !DILocation(line: 13, column: 42, scope: !12000)
!12033 = !DILocation(line: 13, column: 19, scope: !12000)
!12034 = !DILocation(line: 13, column: 16, scope: !12000)
!12035 = !DILocation(line: 13, column: 2, scope: !12000)
!12036 = distinct !{!12036, !12035, !12037}
!12037 = !DILocation(line: 19, column: 2, scope: !12000)
!12038 = !DILocation(line: 14, column: 23, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12040, file: !12001, line: 14, column: 7)
!12040 = distinct !DILexicalBlock(scope: !12000, file: !12001, line: 13, column: 54)
!12041 = !DILocation(line: 14, column: 10, scope: !12039)
!12042 = !DILocation(line: 18, column: 11, scope: !12040)
!12043 = !DILocation(line: 14, column: 7, scope: !12040)
!12044 = !DILocation(line: 22, column: 1, scope: !12000)
!12045 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1982, file: !1982, line: 193, type: !12046, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1900, retainedNodes: !12055)
!12046 = !DISubroutineType(types: !12047)
!12047 = !{!103, !12048, !154, !22}
!12048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12049, size: 32)
!12049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12050)
!12050 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1679, line: 37, baseType: !12051)
!12051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1679, line: 32, size: 64, elements: !12052)
!12052 = !{!12053, !12054}
!12053 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12051, file: !1679, line: 34, baseType: !121, size: 32)
!12054 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12051, file: !1679, line: 36, baseType: !121, size: 32, offset: 32)
!12055 = !{!12056, !12057, !12058, !12059, !12060, !12061, !12062, !12063, !12065}
!12056 = !DILocalVariable(name: "pins", arg: 1, scope: !12045, file: !1982, line: 193, type: !12048)
!12057 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12045, file: !1982, line: 193, type: !154)
!12058 = !DILocalVariable(name: "reg", arg: 3, scope: !12045, file: !1982, line: 194, type: !22)
!12059 = !DILocalVariable(name: "pin", scope: !12045, file: !1982, line: 196, type: !121)
!12060 = !DILocalVariable(name: "mux", scope: !12045, file: !1982, line: 196, type: !121)
!12061 = !DILocalVariable(name: "pin_cgf", scope: !12045, file: !1982, line: 197, type: !121)
!12062 = !DILocalVariable(name: "ret", scope: !12045, file: !1982, line: 198, type: !103)
!12063 = !DILocalVariable(name: "i", scope: !12064, file: !1982, line: 209, type: !154)
!12064 = distinct !DILexicalBlock(scope: !12045, file: !1982, line: 209, column: 2)
!12065 = !DILocalVariable(name: "gpio_out", scope: !12066, file: !1982, line: 239, type: !121)
!12066 = distinct !DILexicalBlock(scope: !12067, file: !1982, line: 238, column: 55)
!12067 = distinct !DILexicalBlock(scope: !12068, file: !1982, line: 238, column: 14)
!12068 = distinct !DILexicalBlock(scope: !12069, file: !1982, line: 236, column: 14)
!12069 = distinct !DILexicalBlock(scope: !12070, file: !1982, line: 234, column: 7)
!12070 = distinct !DILexicalBlock(scope: !12071, file: !1982, line: 209, column: 41)
!12071 = distinct !DILexicalBlock(scope: !12064, file: !1982, line: 209, column: 2)
!12072 = !DILocation(line: 0, scope: !12045)
!12073 = !DILocation(line: 0, scope: !12064)
!12074 = !DILocation(line: 209, column: 25, scope: !12071)
!12075 = !DILocation(line: 209, column: 2, scope: !12064)
!12076 = distinct !{!12076, !12075, !12077}
!12077 = !DILocation(line: 259, column: 2, scope: !12064)
!12078 = !DILocation(line: 210, column: 17, scope: !12070)
!12079 = !DILocation(line: 234, column: 7, scope: !12069)
!12080 = !DILocation(line: 234, column: 33, scope: !12069)
!12081 = !DILocation(line: 234, column: 7, scope: !12070)
!12082 = !DILocation(line: 235, column: 22, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12069, file: !1982, line: 234, column: 49)
!12084 = !DILocation(line: 235, column: 29, scope: !12083)
!12085 = !DILocation(line: 236, column: 3, scope: !12083)
!12086 = !DILocation(line: 236, column: 14, scope: !12069)
!12087 = !DILocation(line: 239, column: 32, scope: !12066)
!12088 = !DILocation(line: 0, scope: !12066)
!12089 = !DILocation(line: 241, column: 8, scope: !12066)
!12090 = !DILocation(line: 246, column: 3, scope: !12066)
!12091 = !DILocation(line: 252, column: 9, scope: !12070)
!12092 = !DILocation(line: 255, column: 9, scope: !12070)
!12093 = !DILocation(line: 256, column: 11, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12070, file: !1982, line: 256, column: 7)
!12095 = !DILocation(line: 209, column: 37, scope: !12071)
!12096 = !DILocation(line: 256, column: 7, scope: !12070)
!12097 = !DILocation(line: 262, column: 1, scope: !12045)
!12098 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1982, file: !1982, line: 176, type: !12099, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1900, retainedNodes: !12101)
!12099 = !DISubroutineType(types: !12100)
!12100 = !{!103, !121, !121, !121}
!12101 = !{!12102, !12103, !12104, !12105}
!12102 = !DILocalVariable(name: "pin", arg: 1, scope: !12098, file: !1982, line: 176, type: !121)
!12103 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12098, file: !1982, line: 176, type: !121)
!12104 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12098, file: !1982, line: 176, type: !121)
!12105 = !DILocalVariable(name: "port_device", scope: !12098, file: !1982, line: 178, type: !1912)
!12106 = !DILocation(line: 0, scope: !12098)
!12107 = !DILocation(line: 180, column: 22, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12098, file: !1982, line: 180, column: 6)
!12109 = !DILocation(line: 180, column: 6, scope: !12098)
!12110 = !DILocation(line: 180, column: 6, scope: !12108)
!12111 = !DILocation(line: 184, column: 16, scope: !12098)
!12112 = !DILocation(line: 186, column: 19, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12098, file: !1982, line: 186, column: 6)
!12114 = !DILocation(line: 186, column: 28, scope: !12113)
!12115 = !DILocation(line: 186, column: 33, scope: !12113)
!12116 = !DILocation(line: 186, column: 6, scope: !12098)
!12117 = !DILocation(line: 190, column: 43, scope: !12098)
!12118 = !DILocation(line: 190, column: 9, scope: !12098)
!12119 = !DILocation(line: 190, column: 2, scope: !12098)
!12120 = !DILocation(line: 191, column: 1, scope: !12098)
!12121 = distinct !DISubprogram(name: "device_is_ready", scope: !6745, file: !6745, line: 47, type: !12122, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1900, retainedNodes: !12124)
!12122 = !DISubroutineType(types: !12123)
!12123 = !{!157, !1912}
!12124 = !{!12125}
!12125 = !DILocalVariable(name: "dev", arg: 1, scope: !12121, file: !6745, line: 47, type: !1912)
!12126 = !DILocation(line: 0, scope: !12121)
!12127 = !DILocation(line: 55, column: 2, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12121, file: !6745, line: 55, column: 2)
!12129 = !{i64 2149513156}
!12130 = !DILocation(line: 56, column: 9, scope: !12121)
!12131 = !DILocation(line: 56, column: 2, scope: !12121)
!12132 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !12122, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1900, retainedNodes: !12133)
!12133 = !{!12134}
!12134 = !DILocalVariable(name: "dev", arg: 1, scope: !12132, file: !141, line: 730, type: !1912)
!12135 = !DILocation(line: 0, scope: !12132)
!12136 = !DILocation(line: 732, column: 9, scope: !12132)
!12137 = !DILocation(line: 732, column: 2, scope: !12132)
!12138 = distinct !DISubprogram(name: "SystemInit", scope: !2034, file: !2034, line: 167, type: !3318, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !461)
!12139 = !DILocation(line: 182, column: 1, scope: !12138)
!12140 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2034, file: !2034, line: 220, type: !3318, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !12141)
!12141 = !{!12142, !12143, !12144, !12145, !12146}
!12142 = !DILocalVariable(name: "tmp", scope: !12140, file: !2034, line: 222, type: !121)
!12143 = !DILocalVariable(name: "pllvco", scope: !12140, file: !2034, line: 222, type: !121)
!12144 = !DILocalVariable(name: "pllp", scope: !12140, file: !2034, line: 222, type: !121)
!12145 = !DILocalVariable(name: "pllsource", scope: !12140, file: !2034, line: 222, type: !121)
!12146 = !DILocalVariable(name: "pllm", scope: !12140, file: !2034, line: 222, type: !121)
!12147 = !DILocation(line: 0, scope: !12140)
!12148 = !DILocation(line: 225, column: 14, scope: !12140)
!12149 = !DILocation(line: 225, column: 19, scope: !12140)
!12150 = !DILocation(line: 227, column: 3, scope: !12140)
!12151 = !DILocation(line: 240, column: 25, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12140, file: !2034, line: 228, column: 3)
!12153 = !DILocation(line: 241, column: 19, scope: !12152)
!12154 = !DILocation(line: 241, column: 27, scope: !12152)
!12155 = !DILocation(line: 0, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12152, file: !2034, line: 243, column: 11)
!12157 = !DILocation(line: 254, column: 22, scope: !12152)
!12158 = !DILocation(line: 254, column: 62, scope: !12152)
!12159 = !DILocation(line: 255, column: 31, scope: !12152)
!12160 = !DILocation(line: 256, column: 7, scope: !12152)
!12161 = !DILocation(line: 0, scope: !12152)
!12162 = !DILocation(line: 263, column: 30, scope: !12140)
!12163 = !DILocation(line: 263, column: 52, scope: !12140)
!12164 = !DILocation(line: 263, column: 9, scope: !12140)
!12165 = !DILocation(line: 265, column: 19, scope: !12140)
!12166 = !DILocation(line: 266, column: 1, scope: !12140)
!12167 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !12168, file: !12168, line: 87, type: !12169, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3148, retainedNodes: !12208)
!12168 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12169 = !DISubroutineType(types: !12170)
!12170 = !{!12171, !12172}
!12171 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3152, line: 44, baseType: !3151)
!12172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12173, size: 32)
!12173 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !12174, line: 172, baseType: !12175)
!12174 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12174, line: 121, size: 736, elements: !12176)
!12176 = !{!12177, !12178, !12187, !12195, !12196, !12197, !12198, !12199, !12200, !12201, !12202, !12203, !12204, !12205, !12206, !12207}
!12177 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !12175, file: !12174, line: 123, baseType: !121, size: 32)
!12178 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !12175, file: !12174, line: 126, baseType: !12179, size: 160, offset: 32)
!12179 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !12174, line: 97, baseType: !12180)
!12180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12174, line: 79, size: 160, elements: !12181)
!12181 = !{!12182, !12183, !12184, !12185, !12186}
!12182 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !12180, file: !12174, line: 81, baseType: !121, size: 32)
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !12180, file: !12174, line: 84, baseType: !121, size: 32, offset: 32)
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !12180, file: !12174, line: 87, baseType: !121, size: 32, offset: 64)
!12185 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !12180, file: !12174, line: 90, baseType: !121, size: 32, offset: 96)
!12186 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !12180, file: !12174, line: 94, baseType: !121, size: 32, offset: 128)
!12187 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !12175, file: !12174, line: 129, baseType: !12188, size: 128, offset: 192)
!12188 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !12174, line: 116, baseType: !12189)
!12189 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12174, line: 102, size: 128, elements: !12190)
!12190 = !{!12191, !12192, !12193, !12194}
!12191 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !12189, file: !12174, line: 104, baseType: !121, size: 32)
!12192 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !12189, file: !12174, line: 107, baseType: !121, size: 32, offset: 32)
!12193 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !12189, file: !12174, line: 110, baseType: !121, size: 32, offset: 64)
!12194 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !12189, file: !12174, line: 113, baseType: !121, size: 32, offset: 96)
!12195 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !12175, file: !12174, line: 132, baseType: !121, size: 32, offset: 320)
!12196 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !12175, file: !12174, line: 136, baseType: !121, size: 32, offset: 352)
!12197 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !12175, file: !12174, line: 140, baseType: !121, size: 32, offset: 384)
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !12175, file: !12174, line: 143, baseType: !121, size: 32, offset: 416)
!12199 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !12175, file: !12174, line: 146, baseType: !121, size: 32, offset: 448)
!12200 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !12175, file: !12174, line: 149, baseType: !121, size: 32, offset: 480)
!12201 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !12175, file: !12174, line: 152, baseType: !121, size: 32, offset: 512)
!12202 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !12175, file: !12174, line: 155, baseType: !121, size: 32, offset: 544)
!12203 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !12175, file: !12174, line: 158, baseType: !121, size: 32, offset: 576)
!12204 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !12175, file: !12174, line: 161, baseType: !121, size: 32, offset: 608)
!12205 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !12175, file: !12174, line: 164, baseType: !121, size: 32, offset: 640)
!12206 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !12175, file: !12174, line: 167, baseType: !121, size: 32, offset: 672)
!12207 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !12175, file: !12174, line: 170, baseType: !154, size: 8, offset: 704)
!12208 = !{!12209, !12210, !12211, !12212, !12213, !12214, !12215, !12216, !12217, !12218, !12219}
!12209 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12167, file: !12168, line: 87, type: !12172)
!12210 = !DILocalVariable(name: "tickstart", scope: !12167, file: !12168, line: 89, type: !121)
!12211 = !DILocalVariable(name: "tmpreg1", scope: !12167, file: !12168, line: 90, type: !121)
!12212 = !DILocalVariable(name: "plli2sp", scope: !12167, file: !12168, line: 91, type: !121)
!12213 = !DILocalVariable(name: "plli2sq", scope: !12167, file: !12168, line: 92, type: !121)
!12214 = !DILocalVariable(name: "plli2sr", scope: !12167, file: !12168, line: 93, type: !121)
!12215 = !DILocalVariable(name: "pllsaip", scope: !12167, file: !12168, line: 94, type: !121)
!12216 = !DILocalVariable(name: "pllsaiq", scope: !12167, file: !12168, line: 95, type: !121)
!12217 = !DILocalVariable(name: "plli2sused", scope: !12167, file: !12168, line: 96, type: !121)
!12218 = !DILocalVariable(name: "pllsaiused", scope: !12167, file: !12168, line: 97, type: !121)
!12219 = !DILocalVariable(name: "tmpreg", scope: !12220, file: !12168, line: 184, type: !120)
!12220 = distinct !DILexicalBlock(scope: !12221, file: !12168, line: 184, column: 5)
!12221 = distinct !DILexicalBlock(scope: !12222, file: !12168, line: 179, column: 3)
!12222 = distinct !DILexicalBlock(scope: !12167, file: !12168, line: 178, column: 6)
!12223 = !DILocation(line: 0, scope: !12167)
!12224 = !DILocation(line: 103, column: 23, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12167, file: !12168, line: 103, column: 6)
!12226 = !DILocation(line: 103, column: 45, scope: !12225)
!12227 = !DILocation(line: 103, column: 71, scope: !12225)
!12228 = !DILocation(line: 103, column: 6, scope: !12167)
!12229 = !DILocation(line: 109, column: 5, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12225, file: !12168, line: 104, column: 3)
!12231 = !DILocation(line: 111, column: 23, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12230, file: !12168, line: 111, column: 8)
!12233 = !DILocation(line: 111, column: 45, scope: !12232)
!12234 = !DILocation(line: 111, column: 8, scope: !12230)
!12235 = !DILocation(line: 119, column: 23, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12167, file: !12168, line: 119, column: 6)
!12237 = !DILocation(line: 119, column: 45, scope: !12236)
!12238 = !DILocation(line: 119, column: 71, scope: !12236)
!12239 = !DILocation(line: 119, column: 6, scope: !12167)
!12240 = !DILocation(line: 125, column: 5, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12236, file: !12168, line: 120, column: 3)
!12242 = !DILocation(line: 127, column: 23, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12241, file: !12168, line: 127, column: 8)
!12244 = !DILocation(line: 127, column: 45, scope: !12243)
!12245 = !DILocation(line: 127, column: 8, scope: !12241)
!12246 = !DILocation(line: 135, column: 23, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12167, file: !12168, line: 135, column: 6)
!12248 = !DILocation(line: 135, column: 45, scope: !12247)
!12249 = !DILocation(line: 135, column: 67, scope: !12247)
!12250 = !DILocation(line: 135, column: 6, scope: !12167)
!12251 = !DILocation(line: 141, column: 5, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12247, file: !12168, line: 136, column: 3)
!12253 = !DILocation(line: 143, column: 23, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12252, file: !12168, line: 143, column: 8)
!12255 = !DILocation(line: 143, column: 42, scope: !12254)
!12256 = !DILocation(line: 143, column: 8, scope: !12252)
!12257 = !DILocation(line: 148, column: 42, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12252, file: !12168, line: 148, column: 8)
!12259 = !DILocation(line: 148, column: 8, scope: !12252)
!12260 = !DILocation(line: 156, column: 23, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12167, file: !12168, line: 156, column: 6)
!12262 = !DILocation(line: 156, column: 45, scope: !12261)
!12263 = !DILocation(line: 156, column: 67, scope: !12261)
!12264 = !DILocation(line: 156, column: 6, scope: !12167)
!12265 = !DILocation(line: 162, column: 5, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12261, file: !12168, line: 157, column: 3)
!12267 = !DILocation(line: 165, column: 23, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12266, file: !12168, line: 165, column: 8)
!12269 = !DILocation(line: 165, column: 42, scope: !12268)
!12270 = !DILocation(line: 165, column: 8, scope: !12266)
!12271 = !DILocation(line: 170, column: 42, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12266, file: !12168, line: 170, column: 8)
!12273 = !DILocation(line: 170, column: 8, scope: !12266)
!12274 = !DILocation(line: 178, column: 23, scope: !12222)
!12275 = !DILocation(line: 178, column: 45, scope: !12222)
!12276 = !DILocation(line: 178, column: 66, scope: !12222)
!12277 = !DILocation(line: 178, column: 6, scope: !12167)
!12278 = !DILocation(line: 184, column: 5, scope: !12220)
!12279 = !DILocation(line: 184, column: 5, scope: !12221)
!12280 = !DILocation(line: 187, column: 13, scope: !12221)
!12281 = !DILocation(line: 190, column: 17, scope: !12221)
!12282 = !DILocation(line: 192, column: 5, scope: !12221)
!12283 = !DILocation(line: 192, column: 17, scope: !12221)
!12284 = !DILocation(line: 192, column: 20, scope: !12221)
!12285 = !DILocation(line: 192, column: 34, scope: !12221)
!12286 = !DILocation(line: 194, column: 11, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12288, file: !12168, line: 194, column: 10)
!12288 = distinct !DILexicalBlock(scope: !12221, file: !12168, line: 193, column: 5)
!12289 = !DILocation(line: 194, column: 25, scope: !12287)
!12290 = !DILocation(line: 194, column: 39, scope: !12287)
!12291 = !DILocation(line: 194, column: 10, scope: !12288)
!12292 = distinct !{!12292, !12282, !12293}
!12293 = !DILocation(line: 198, column: 5, scope: !12221)
!12294 = !DILocation(line: 200, column: 21, scope: !12221)
!12295 = !DILocation(line: 200, column: 26, scope: !12221)
!12296 = !DILocation(line: 201, column: 17, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12221, file: !12168, line: 201, column: 8)
!12298 = !DILocation(line: 201, column: 33, scope: !12297)
!12299 = !DILocation(line: 201, column: 66, scope: !12297)
!12300 = !DILocation(line: 201, column: 84, scope: !12297)
!12301 = !DILocation(line: 201, column: 47, scope: !12297)
!12302 = !DILocation(line: 201, column: 8, scope: !12221)
!12303 = !DILocation(line: 204, column: 23, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12297, file: !12168, line: 202, column: 5)
!12305 = !DILocation(line: 204, column: 28, scope: !12304)
!12306 = !DILocation(line: 206, column: 7, scope: !12304)
!12307 = !DILocation(line: 207, column: 7, scope: !12304)
!12308 = !DILocation(line: 209, column: 17, scope: !12304)
!12309 = !DILocation(line: 212, column: 10, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12304, file: !12168, line: 212, column: 10)
!12311 = !DILocation(line: 212, column: 10, scope: !12304)
!12312 = !DILocation(line: 215, column: 21, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12310, file: !12168, line: 213, column: 7)
!12314 = !DILocation(line: 218, column: 9, scope: !12313)
!12315 = !DILocation(line: 218, column: 15, scope: !12313)
!12316 = !DILocation(line: 218, column: 51, scope: !12313)
!12317 = !DILocation(line: 220, column: 15, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12319, file: !12168, line: 220, column: 14)
!12319 = distinct !DILexicalBlock(scope: !12313, file: !12168, line: 219, column: 9)
!12320 = !DILocation(line: 220, column: 29, scope: !12318)
!12321 = !DILocation(line: 220, column: 43, scope: !12318)
!12322 = !DILocation(line: 220, column: 14, scope: !12319)
!12323 = distinct !{!12323, !12314, !12324}
!12324 = !DILocation(line: 224, column: 9, scope: !12313)
!12325 = !DILocation(line: 227, column: 5, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12221, file: !12168, line: 227, column: 5)
!12327 = !DILocation(line: 232, column: 23, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12167, file: !12168, line: 232, column: 6)
!12329 = !DILocation(line: 228, column: 3, scope: !12221)
!12330 = !DILocation(line: 232, column: 45, scope: !12328)
!12331 = !DILocation(line: 232, column: 66, scope: !12328)
!12332 = !DILocation(line: 232, column: 6, scope: !12167)
!12333 = !DILocation(line: 235, column: 5, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12328, file: !12168, line: 233, column: 3)
!12335 = !DILocation(line: 240, column: 23, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12167, file: !12168, line: 240, column: 6)
!12337 = !DILocation(line: 236, column: 3, scope: !12334)
!12338 = !DILocation(line: 240, column: 45, scope: !12336)
!12339 = !DILocation(line: 240, column: 70, scope: !12336)
!12340 = !DILocation(line: 240, column: 6, scope: !12167)
!12341 = !DILocation(line: 246, column: 5, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12336, file: !12168, line: 241, column: 3)
!12343 = !DILocation(line: 251, column: 23, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12167, file: !12168, line: 251, column: 6)
!12345 = !DILocation(line: 247, column: 3, scope: !12342)
!12346 = !DILocation(line: 251, column: 45, scope: !12344)
!12347 = !DILocation(line: 251, column: 66, scope: !12344)
!12348 = !DILocation(line: 251, column: 6, scope: !12167)
!12349 = !DILocation(line: 257, column: 5, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12344, file: !12168, line: 252, column: 3)
!12351 = !DILocation(line: 262, column: 23, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12167, file: !12168, line: 262, column: 6)
!12353 = !DILocation(line: 258, column: 3, scope: !12350)
!12354 = !DILocation(line: 262, column: 45, scope: !12352)
!12355 = !DILocation(line: 262, column: 68, scope: !12352)
!12356 = !DILocation(line: 262, column: 6, scope: !12167)
!12357 = !DILocation(line: 268, column: 5, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12352, file: !12168, line: 263, column: 3)
!12359 = !DILocation(line: 271, column: 23, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12358, file: !12168, line: 271, column: 8)
!12361 = !DILocation(line: 271, column: 43, scope: !12360)
!12362 = !DILocation(line: 271, column: 8, scope: !12358)
!12363 = !DILocation(line: 279, column: 23, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12167, file: !12168, line: 279, column: 6)
!12365 = !DILocation(line: 279, column: 45, scope: !12364)
!12366 = !DILocation(line: 279, column: 67, scope: !12364)
!12367 = !DILocation(line: 279, column: 6, scope: !12167)
!12368 = !DILocation(line: 285, column: 5, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12364, file: !12168, line: 280, column: 3)
!12370 = !DILocation(line: 290, column: 23, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12167, file: !12168, line: 290, column: 6)
!12372 = !DILocation(line: 286, column: 3, scope: !12369)
!12373 = !DILocation(line: 290, column: 45, scope: !12371)
!12374 = !DILocation(line: 290, column: 70, scope: !12371)
!12375 = !DILocation(line: 290, column: 6, scope: !12167)
!12376 = !DILocation(line: 296, column: 5, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12371, file: !12168, line: 291, column: 3)
!12378 = !DILocation(line: 298, column: 23, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12377, file: !12168, line: 298, column: 8)
!12380 = !DILocation(line: 298, column: 43, scope: !12379)
!12381 = !DILocation(line: 298, column: 8, scope: !12377)
!12382 = !DILocation(line: 308, column: 44, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12167, file: !12168, line: 308, column: 6)
!12384 = !DILocation(line: 308, column: 18, scope: !12383)
!12385 = !DILocation(line: 308, column: 25, scope: !12383)
!12386 = !DILocation(line: 308, column: 65, scope: !12383)
!12387 = !DILocation(line: 308, column: 6, scope: !12167)
!12388 = !DILocation(line: 311, column: 5, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12383, file: !12168, line: 309, column: 3)
!12390 = !DILocation(line: 313, column: 17, scope: !12389)
!12391 = !DILocation(line: 315, column: 5, scope: !12389)
!12392 = !DILocation(line: 315, column: 11, scope: !12389)
!12393 = !DILocation(line: 317, column: 11, scope: !12394)
!12394 = distinct !DILexicalBlock(scope: !12395, file: !12168, line: 317, column: 10)
!12395 = distinct !DILexicalBlock(scope: !12389, file: !12168, line: 316, column: 5)
!12396 = !DILocation(line: 317, column: 25, scope: !12394)
!12397 = !DILocation(line: 317, column: 39, scope: !12394)
!12398 = !DILocation(line: 317, column: 10, scope: !12395)
!12399 = distinct !{!12399, !12391, !12400}
!12400 = !DILocation(line: 322, column: 5, scope: !12389)
!12401 = !DILocation(line: 329, column: 27, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12389, file: !12168, line: 329, column: 8)
!12403 = !DILocation(line: 329, column: 49, scope: !12402)
!12404 = !DILocation(line: 329, column: 75, scope: !12402)
!12405 = !DILocation(line: 329, column: 102, scope: !12402)
!12406 = !DILocation(line: 329, column: 121, scope: !12402)
!12407 = !DILocation(line: 329, column: 143, scope: !12402)
!12408 = !DILocation(line: 329, column: 176, scope: !12402)
!12409 = !DILocation(line: 330, column: 49, scope: !12402)
!12410 = !DILocation(line: 330, column: 75, scope: !12402)
!12411 = !DILocation(line: 330, column: 102, scope: !12402)
!12412 = !DILocation(line: 330, column: 121, scope: !12402)
!12413 = !DILocation(line: 330, column: 143, scope: !12402)
!12414 = !DILocation(line: 329, column: 8, scope: !12389)
!12415 = !DILocation(line: 336, column: 26, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12402, file: !12168, line: 331, column: 5)
!12417 = !DILocation(line: 336, column: 100, scope: !12416)
!12418 = !DILocation(line: 337, column: 24, scope: !12416)
!12419 = !DILocation(line: 337, column: 61, scope: !12416)
!12420 = !DILocation(line: 341, column: 7, scope: !12416)
!12421 = !DILocation(line: 345, column: 27, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12389, file: !12168, line: 345, column: 8)
!12423 = !DILocation(line: 342, column: 5, scope: !12416)
!12424 = !DILocation(line: 345, column: 49, scope: !12422)
!12425 = !DILocation(line: 345, column: 71, scope: !12422)
!12426 = !DILocation(line: 345, column: 94, scope: !12422)
!12427 = !DILocation(line: 345, column: 113, scope: !12422)
!12428 = !DILocation(line: 345, column: 132, scope: !12422)
!12429 = !DILocation(line: 345, column: 162, scope: !12422)
!12430 = !DILocation(line: 346, column: 49, scope: !12422)
!12431 = !DILocation(line: 346, column: 71, scope: !12422)
!12432 = !DILocation(line: 346, column: 94, scope: !12422)
!12433 = !DILocation(line: 346, column: 113, scope: !12422)
!12434 = !DILocation(line: 346, column: 132, scope: !12422)
!12435 = !DILocation(line: 345, column: 8, scope: !12389)
!12436 = !DILocation(line: 354, column: 26, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12422, file: !12168, line: 347, column: 5)
!12438 = !DILocation(line: 354, column: 100, scope: !12437)
!12439 = !DILocation(line: 355, column: 24, scope: !12437)
!12440 = !DILocation(line: 355, column: 61, scope: !12437)
!12441 = !DILocation(line: 360, column: 7, scope: !12437)
!12442 = !DILocation(line: 363, column: 7, scope: !12437)
!12443 = !DILocation(line: 367, column: 26, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12389, file: !12168, line: 367, column: 8)
!12445 = !DILocation(line: 364, column: 5, scope: !12437)
!12446 = !DILocation(line: 367, column: 48, scope: !12444)
!12447 = !DILocation(line: 367, column: 73, scope: !12444)
!12448 = !DILocation(line: 367, column: 99, scope: !12444)
!12449 = !DILocation(line: 367, column: 118, scope: !12444)
!12450 = !DILocation(line: 367, column: 138, scope: !12444)
!12451 = !DILocation(line: 367, column: 8, scope: !12389)
!12452 = !DILocation(line: 372, column: 26, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12444, file: !12168, line: 368, column: 5)
!12454 = !DILocation(line: 373, column: 24, scope: !12453)
!12455 = !DILocation(line: 373, column: 61, scope: !12453)
!12456 = !DILocation(line: 377, column: 7, scope: !12453)
!12457 = !DILocation(line: 381, column: 24, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12389, file: !12168, line: 381, column: 8)
!12459 = !DILocation(line: 378, column: 5, scope: !12453)
!12460 = !DILocation(line: 381, column: 45, scope: !12458)
!12461 = !DILocation(line: 381, column: 69, scope: !12458)
!12462 = !DILocation(line: 381, column: 8, scope: !12389)
!12463 = !DILocation(line: 390, column: 7, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12458, file: !12168, line: 382, column: 5)
!12465 = !DILocation(line: 391, column: 5, scope: !12464)
!12466 = !DILocation(line: 394, column: 5, scope: !12389)
!12467 = !DILocation(line: 396, column: 17, scope: !12389)
!12468 = !DILocation(line: 398, column: 5, scope: !12389)
!12469 = !DILocation(line: 398, column: 11, scope: !12389)
!12470 = !DILocation(line: 398, column: 51, scope: !12389)
!12471 = !DILocation(line: 400, column: 11, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12473, file: !12168, line: 400, column: 10)
!12473 = distinct !DILexicalBlock(scope: !12389, file: !12168, line: 399, column: 5)
!12474 = !DILocation(line: 400, column: 25, scope: !12472)
!12475 = !DILocation(line: 400, column: 39, scope: !12472)
!12476 = !DILocation(line: 400, column: 10, scope: !12473)
!12477 = distinct !{!12477, !12468, !12478}
!12478 = !DILocation(line: 405, column: 5, scope: !12389)
!12479 = !DILocation(line: 411, column: 17, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12167, file: !12168, line: 411, column: 6)
!12481 = !DILocation(line: 411, column: 6, scope: !12167)
!12482 = !DILocation(line: 414, column: 5, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12480, file: !12168, line: 412, column: 3)
!12484 = !DILocation(line: 416, column: 17, scope: !12483)
!12485 = !DILocation(line: 418, column: 5, scope: !12483)
!12486 = !DILocation(line: 418, column: 11, scope: !12483)
!12487 = !DILocation(line: 420, column: 11, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12489, file: !12168, line: 420, column: 10)
!12489 = distinct !DILexicalBlock(scope: !12483, file: !12168, line: 419, column: 5)
!12490 = !DILocation(line: 420, column: 25, scope: !12488)
!12491 = !DILocation(line: 420, column: 39, scope: !12488)
!12492 = !DILocation(line: 420, column: 10, scope: !12489)
!12493 = distinct !{!12493, !12485, !12494}
!12494 = !DILocation(line: 425, column: 5, scope: !12483)
!12495 = !DILocation(line: 432, column: 27, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12483, file: !12168, line: 432, column: 8)
!12497 = !DILocation(line: 432, column: 49, scope: !12496)
!12498 = !DILocation(line: 432, column: 71, scope: !12496)
!12499 = !DILocation(line: 432, column: 94, scope: !12496)
!12500 = !DILocation(line: 432, column: 113, scope: !12496)
!12501 = !DILocation(line: 432, column: 132, scope: !12496)
!12502 = !DILocation(line: 432, column: 162, scope: !12496)
!12503 = !DILocation(line: 433, column: 49, scope: !12496)
!12504 = !DILocation(line: 433, column: 71, scope: !12496)
!12505 = !DILocation(line: 433, column: 94, scope: !12496)
!12506 = !DILocation(line: 433, column: 113, scope: !12496)
!12507 = !DILocation(line: 433, column: 132, scope: !12496)
!12508 = !DILocation(line: 432, column: 8, scope: !12483)
!12509 = !DILocation(line: 441, column: 26, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12496, file: !12168, line: 434, column: 5)
!12511 = !DILocation(line: 441, column: 100, scope: !12510)
!12512 = !DILocation(line: 445, column: 7, scope: !12510)
!12513 = !DILocation(line: 448, column: 7, scope: !12510)
!12514 = !DILocation(line: 453, column: 26, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12483, file: !12168, line: 453, column: 8)
!12516 = !DILocation(line: 449, column: 5, scope: !12510)
!12517 = !DILocation(line: 453, column: 48, scope: !12515)
!12518 = !DILocation(line: 453, column: 71, scope: !12515)
!12519 = !DILocation(line: 453, column: 95, scope: !12515)
!12520 = !DILocation(line: 453, column: 114, scope: !12515)
!12521 = !DILocation(line: 453, column: 134, scope: !12515)
!12522 = !DILocation(line: 453, column: 8, scope: !12483)
!12523 = !DILocation(line: 458, column: 24, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12515, file: !12168, line: 454, column: 5)
!12525 = !DILocation(line: 458, column: 61, scope: !12524)
!12526 = !DILocation(line: 462, column: 7, scope: !12524)
!12527 = !DILocation(line: 463, column: 5, scope: !12524)
!12528 = !DILocation(line: 466, column: 5, scope: !12483)
!12529 = !DILocation(line: 468, column: 17, scope: !12483)
!12530 = !DILocation(line: 470, column: 5, scope: !12483)
!12531 = !DILocation(line: 470, column: 11, scope: !12483)
!12532 = !DILocation(line: 470, column: 39, scope: !12483)
!12533 = !DILocation(line: 472, column: 11, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12535, file: !12168, line: 472, column: 10)
!12535 = distinct !DILexicalBlock(scope: !12483, file: !12168, line: 471, column: 5)
!12536 = !DILocation(line: 472, column: 25, scope: !12534)
!12537 = !DILocation(line: 472, column: 39, scope: !12534)
!12538 = !DILocation(line: 472, column: 10, scope: !12535)
!12539 = distinct !{!12539, !12530, !12540}
!12540 = !DILocation(line: 477, column: 5, scope: !12483)
!12541 = !DILocation(line: 480, column: 1, scope: !12167)
!12542 = !DISubprogram(name: "HAL_GetTick", scope: !12543, file: !12543, line: 234, type: !6985, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!12543 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12544 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !12168, file: !12168, line: 489, type: !12545, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3148, retainedNodes: !12547)
!12545 = !DISubroutineType(types: !12546)
!12546 = !{null, !12172}
!12547 = !{!12548, !12549}
!12548 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12544, file: !12168, line: 489, type: !12172)
!12549 = !DILocalVariable(name: "tempreg", scope: !12544, file: !12168, line: 491, type: !121)
!12550 = !DILocation(line: 0, scope: !12544)
!12551 = !DILocation(line: 494, column: 18, scope: !12544)
!12552 = !DILocation(line: 494, column: 39, scope: !12544)
!12553 = !DILocation(line: 502, column: 52, scope: !12544)
!12554 = !DILocation(line: 502, column: 63, scope: !12544)
!12555 = !DILocation(line: 502, column: 25, scope: !12544)
!12556 = !DILocation(line: 502, column: 33, scope: !12544)
!12557 = !DILocation(line: 503, column: 52, scope: !12544)
!12558 = !DILocation(line: 503, column: 89, scope: !12544)
!12559 = !DILocation(line: 503, column: 25, scope: !12544)
!12560 = !DILocation(line: 503, column: 33, scope: !12544)
!12561 = !DILocation(line: 504, column: 54, scope: !12544)
!12562 = !DILocation(line: 504, column: 128, scope: !12544)
!12563 = !DILocation(line: 504, column: 25, scope: !12544)
!12564 = !DILocation(line: 504, column: 33, scope: !12544)
!12565 = !DILocation(line: 505, column: 52, scope: !12544)
!12566 = !DILocation(line: 505, column: 89, scope: !12544)
!12567 = !DILocation(line: 505, column: 25, scope: !12544)
!12568 = !DILocation(line: 505, column: 33, scope: !12544)
!12569 = !DILocation(line: 506, column: 52, scope: !12544)
!12570 = !DILocation(line: 506, column: 89, scope: !12544)
!12571 = !DILocation(line: 506, column: 25, scope: !12544)
!12572 = !DILocation(line: 506, column: 33, scope: !12544)
!12573 = !DILocation(line: 508, column: 52, scope: !12544)
!12574 = !DILocation(line: 508, column: 63, scope: !12544)
!12575 = !DILocation(line: 508, column: 25, scope: !12544)
!12576 = !DILocation(line: 508, column: 33, scope: !12544)
!12577 = !DILocation(line: 509, column: 52, scope: !12544)
!12578 = !DILocation(line: 509, column: 89, scope: !12544)
!12579 = !DILocation(line: 509, column: 25, scope: !12544)
!12580 = !DILocation(line: 509, column: 33, scope: !12544)
!12581 = !DILocation(line: 510, column: 54, scope: !12544)
!12582 = !DILocation(line: 510, column: 128, scope: !12544)
!12583 = !DILocation(line: 510, column: 25, scope: !12544)
!12584 = !DILocation(line: 510, column: 33, scope: !12544)
!12585 = !DILocation(line: 511, column: 52, scope: !12544)
!12586 = !DILocation(line: 511, column: 89, scope: !12544)
!12587 = !DILocation(line: 511, column: 25, scope: !12544)
!12588 = !DILocation(line: 511, column: 33, scope: !12544)
!12589 = !DILocation(line: 513, column: 48, scope: !12544)
!12590 = !DILocation(line: 513, column: 56, scope: !12544)
!12591 = !DILocation(line: 513, column: 18, scope: !12544)
!12592 = !DILocation(line: 513, column: 29, scope: !12544)
!12593 = !DILocation(line: 514, column: 48, scope: !12544)
!12594 = !DILocation(line: 514, column: 82, scope: !12544)
!12595 = !DILocation(line: 514, column: 18, scope: !12544)
!12596 = !DILocation(line: 514, column: 29, scope: !12544)
!12597 = !DILocation(line: 517, column: 39, scope: !12544)
!12598 = !DILocation(line: 517, column: 18, scope: !12544)
!12599 = !DILocation(line: 517, column: 37, scope: !12544)
!12600 = !DILocation(line: 520, column: 39, scope: !12544)
!12601 = !DILocation(line: 520, column: 18, scope: !12544)
!12602 = !DILocation(line: 520, column: 37, scope: !12544)
!12603 = !DILocation(line: 523, column: 42, scope: !12544)
!12604 = !DILocation(line: 523, column: 18, scope: !12544)
!12605 = !DILocation(line: 523, column: 40, scope: !12544)
!12606 = !DILocation(line: 526, column: 42, scope: !12544)
!12607 = !DILocation(line: 526, column: 18, scope: !12544)
!12608 = !DILocation(line: 526, column: 40, scope: !12544)
!12609 = !DILocation(line: 529, column: 19, scope: !12544)
!12610 = !DILocation(line: 529, column: 24, scope: !12544)
!12611 = !DILocation(line: 530, column: 67, scope: !12544)
!12612 = !DILocation(line: 530, column: 72, scope: !12544)
!12613 = !DILocation(line: 530, column: 59, scope: !12544)
!12614 = !DILocation(line: 530, column: 18, scope: !12544)
!12615 = !DILocation(line: 530, column: 36, scope: !12544)
!12616 = !DILocation(line: 533, column: 38, scope: !12544)
!12617 = !DILocation(line: 533, column: 18, scope: !12544)
!12618 = !DILocation(line: 533, column: 36, scope: !12544)
!12619 = !DILocation(line: 536, column: 42, scope: !12544)
!12620 = !DILocation(line: 536, column: 18, scope: !12544)
!12621 = !DILocation(line: 536, column: 40, scope: !12544)
!12622 = !DILocation(line: 539, column: 40, scope: !12544)
!12623 = !DILocation(line: 539, column: 18, scope: !12544)
!12624 = !DILocation(line: 539, column: 38, scope: !12544)
!12625 = !DILocation(line: 542, column: 39, scope: !12544)
!12626 = !DILocation(line: 542, column: 18, scope: !12544)
!12627 = !DILocation(line: 542, column: 37, scope: !12544)
!12628 = !DILocation(line: 545, column: 40, scope: !12544)
!12629 = !DILocation(line: 545, column: 18, scope: !12544)
!12630 = !DILocation(line: 545, column: 38, scope: !12544)
!12631 = !DILocation(line: 548, column: 13, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12544, file: !12168, line: 548, column: 7)
!12633 = !DILocation(line: 548, column: 7, scope: !12544)
!12634 = !DILocation(line: 550, column: 20, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12632, file: !12168, line: 549, column: 3)
!12636 = !DILocation(line: 550, column: 37, scope: !12635)
!12637 = !DILocation(line: 556, column: 1, scope: !12544)
!12638 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !12168, file: !12168, line: 569, type: !7911, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3148, retainedNodes: !12639)
!12639 = !{!12640, !12641, !12642, !12643, !12644, !12645, !12646}
!12640 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !12638, file: !12168, line: 569, type: !121)
!12641 = !DILocalVariable(name: "tmpreg1", scope: !12638, file: !12168, line: 571, type: !121)
!12642 = !DILocalVariable(name: "frequency", scope: !12638, file: !12168, line: 573, type: !121)
!12643 = !DILocalVariable(name: "vcoinput", scope: !12638, file: !12168, line: 575, type: !121)
!12644 = !DILocalVariable(name: "saiclocksource", scope: !12638, file: !12168, line: 577, type: !121)
!12645 = !DILocalVariable(name: "srcclk", scope: !12638, file: !12168, line: 578, type: !121)
!12646 = !DILocalVariable(name: "vcooutput", scope: !12638, file: !12168, line: 580, type: !121)
!12647 = !DILocation(line: 0, scope: !12638)
!12648 = !DILocation(line: 581, column: 3, scope: !12638)
!12649 = !DILocation(line: 586, column: 29, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12651, file: !12168, line: 585, column: 5)
!12651 = distinct !DILexicalBlock(scope: !12638, file: !12168, line: 582, column: 3)
!12652 = !DILocation(line: 588, column: 7, scope: !12650)
!12653 = !DILocation(line: 594, column: 20, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12655, file: !12168, line: 594, column: 14)
!12655 = distinct !DILexicalBlock(scope: !12656, file: !12168, line: 591, column: 9)
!12656 = distinct !DILexicalBlock(scope: !12650, file: !12168, line: 589, column: 7)
!12657 = !DILocation(line: 0, scope: !12654)
!12658 = !DILocation(line: 606, column: 27, scope: !12655)
!12659 = !DILocation(line: 606, column: 64, scope: !12655)
!12660 = !DILocation(line: 607, column: 42, scope: !12655)
!12661 = !DILocation(line: 607, column: 79, scope: !12655)
!12662 = !DILocation(line: 607, column: 33, scope: !12655)
!12663 = !DILocation(line: 607, column: 86, scope: !12655)
!12664 = !DILocation(line: 610, column: 29, scope: !12655)
!12665 = !DILocation(line: 610, column: 63, scope: !12655)
!12666 = !DILocation(line: 610, column: 70, scope: !12655)
!12667 = !DILocation(line: 611, column: 32, scope: !12655)
!12668 = !DILocation(line: 612, column: 11, scope: !12655)
!12669 = !DILocation(line: 619, column: 20, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12671, file: !12168, line: 619, column: 14)
!12671 = distinct !DILexicalBlock(scope: !12656, file: !12168, line: 616, column: 9)
!12672 = !DILocation(line: 0, scope: !12670)
!12673 = !DILocation(line: 632, column: 27, scope: !12671)
!12674 = !DILocation(line: 632, column: 64, scope: !12671)
!12675 = !DILocation(line: 633, column: 42, scope: !12671)
!12676 = !DILocation(line: 633, column: 79, scope: !12671)
!12677 = !DILocation(line: 633, column: 33, scope: !12671)
!12678 = !DILocation(line: 633, column: 86, scope: !12671)
!12679 = !DILocation(line: 636, column: 28, scope: !12671)
!12680 = !DILocation(line: 636, column: 36, scope: !12671)
!12681 = !DILocation(line: 636, column: 62, scope: !12671)
!12682 = !DILocation(line: 637, column: 32, scope: !12671)
!12683 = !DILocation(line: 638, column: 11, scope: !12671)
!12684 = !DILocation(line: 645, column: 20, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12686, file: !12168, line: 645, column: 14)
!12686 = distinct !DILexicalBlock(scope: !12656, file: !12168, line: 642, column: 9)
!12687 = !DILocation(line: 0, scope: !12685)
!12688 = !DILocation(line: 658, column: 27, scope: !12686)
!12689 = !DILocation(line: 658, column: 55, scope: !12686)
!12690 = !DILocation(line: 659, column: 42, scope: !12686)
!12691 = !DILocation(line: 659, column: 70, scope: !12686)
!12692 = !DILocation(line: 659, column: 33, scope: !12686)
!12693 = !DILocation(line: 659, column: 77, scope: !12686)
!12694 = !DILocation(line: 660, column: 11, scope: !12686)
!12695 = !DILocation(line: 665, column: 11, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12656, file: !12168, line: 663, column: 9)
!12697 = !DILocation(line: 669, column: 20, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12699, file: !12168, line: 669, column: 14)
!12699 = distinct !DILexicalBlock(scope: !12656, file: !12168, line: 668, column: 9)
!12700 = !DILocation(line: 691, column: 16, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12651, file: !12168, line: 689, column: 5)
!12702 = !DILocation(line: 692, column: 7, scope: !12701)
!12703 = !DILocation(line: 706, column: 20, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12705, file: !12168, line: 706, column: 14)
!12705 = distinct !DILexicalBlock(scope: !12706, file: !12168, line: 703, column: 9)
!12706 = distinct !DILexicalBlock(scope: !12701, file: !12168, line: 693, column: 7)
!12707 = !DILocation(line: 0, scope: !12704)
!12708 = !DILocation(line: 718, column: 53, scope: !12705)
!12709 = !DILocation(line: 718, column: 90, scope: !12705)
!12710 = !DILocation(line: 718, column: 43, scope: !12705)
!12711 = !DILocation(line: 720, column: 53, scope: !12705)
!12712 = !DILocation(line: 720, column: 90, scope: !12705)
!12713 = !DILocation(line: 720, column: 44, scope: !12705)
!12714 = !DILocation(line: 721, column: 11, scope: !12705)
!12715 = !DILocation(line: 728, column: 20, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12717, file: !12168, line: 728, column: 14)
!12717 = distinct !DILexicalBlock(scope: !12706, file: !12168, line: 725, column: 9)
!12718 = !DILocation(line: 0, scope: !12716)
!12719 = !DILocation(line: 740, column: 53, scope: !12717)
!12720 = !DILocation(line: 740, column: 81, scope: !12717)
!12721 = !DILocation(line: 740, column: 43, scope: !12717)
!12722 = !DILocation(line: 742, column: 53, scope: !12717)
!12723 = !DILocation(line: 742, column: 81, scope: !12717)
!12724 = !DILocation(line: 742, column: 44, scope: !12717)
!12725 = !DILocation(line: 743, column: 11, scope: !12717)
!12726 = !DILocation(line: 748, column: 20, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12728, file: !12168, line: 748, column: 14)
!12728 = distinct !DILexicalBlock(scope: !12706, file: !12168, line: 747, column: 9)
!12729 = !DILocation(line: 770, column: 16, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12651, file: !12168, line: 768, column: 5)
!12731 = !DILocation(line: 771, column: 7, scope: !12730)
!12732 = !DILocation(line: 785, column: 20, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12734, file: !12168, line: 785, column: 14)
!12734 = distinct !DILexicalBlock(scope: !12735, file: !12168, line: 782, column: 9)
!12735 = distinct !DILexicalBlock(scope: !12730, file: !12168, line: 772, column: 7)
!12736 = !DILocation(line: 0, scope: !12733)
!12737 = !DILocation(line: 797, column: 53, scope: !12734)
!12738 = !DILocation(line: 797, column: 90, scope: !12734)
!12739 = !DILocation(line: 797, column: 43, scope: !12734)
!12740 = !DILocation(line: 799, column: 53, scope: !12734)
!12741 = !DILocation(line: 799, column: 90, scope: !12734)
!12742 = !DILocation(line: 799, column: 44, scope: !12734)
!12743 = !DILocation(line: 800, column: 11, scope: !12734)
!12744 = !DILocation(line: 807, column: 20, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12746, file: !12168, line: 807, column: 14)
!12746 = distinct !DILexicalBlock(scope: !12735, file: !12168, line: 804, column: 9)
!12747 = !DILocation(line: 0, scope: !12745)
!12748 = !DILocation(line: 819, column: 53, scope: !12746)
!12749 = !DILocation(line: 819, column: 81, scope: !12746)
!12750 = !DILocation(line: 819, column: 43, scope: !12746)
!12751 = !DILocation(line: 821, column: 53, scope: !12746)
!12752 = !DILocation(line: 821, column: 81, scope: !12746)
!12753 = !DILocation(line: 821, column: 44, scope: !12746)
!12754 = !DILocation(line: 822, column: 11, scope: !12746)
!12755 = !DILocation(line: 827, column: 20, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12757, file: !12168, line: 827, column: 14)
!12757 = distinct !DILexicalBlock(scope: !12735, file: !12168, line: 826, column: 9)
!12758 = !DILocation(line: 847, column: 3, scope: !12638)
!12759 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !12168, file: !12168, line: 2766, type: !12760, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3148, retainedNodes: !12762)
!12760 = !DISubroutineType(types: !12761)
!12761 = !{null, !154}
!12762 = !{!12763}
!12763 = !DILocalVariable(name: "Mode", arg: 1, scope: !12759, file: !12168, line: 2766, type: !154)
!12764 = !DILocation(line: 0, scope: !12759)
!12765 = !DILocation(line: 2770, column: 11, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12759, file: !12168, line: 2770, column: 6)
!12767 = !DILocation(line: 0, scope: !12766)
!12768 = !DILocation(line: 2770, column: 6, scope: !12759)
!12769 = !DILocation(line: 2778, column: 1, scope: !12759)
!12770 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !12168, file: !12168, line: 2803, type: !12771, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3148, retainedNodes: !12774)
!12771 = !DISubroutineType(types: !12772)
!12772 = !{!12171, !12773}
!12773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12179, size: 32)
!12774 = !{!12775, !12776}
!12775 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !12770, file: !12168, line: 2803, type: !12773)
!12776 = !DILocalVariable(name: "tickstart", scope: !12770, file: !12168, line: 2805, type: !121)
!12777 = !DILocation(line: 0, scope: !12770)
!12778 = !DILocation(line: 2821, column: 3, scope: !12770)
!12779 = !DILocation(line: 2824, column: 15, scope: !12770)
!12780 = !DILocation(line: 2825, column: 3, scope: !12770)
!12781 = !DILocation(line: 2825, column: 9, scope: !12770)
!12782 = !DILocation(line: 2827, column: 9, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12784, file: !12168, line: 2827, column: 8)
!12784 = distinct !DILexicalBlock(scope: !12770, file: !12168, line: 2826, column: 3)
!12785 = !DILocation(line: 2827, column: 23, scope: !12783)
!12786 = !DILocation(line: 2827, column: 37, scope: !12783)
!12787 = !DILocation(line: 2827, column: 8, scope: !12784)
!12788 = distinct !{!12788, !12780, !12789}
!12789 = !DILocation(line: 2832, column: 3, scope: !12770)
!12790 = !DILocation(line: 2840, column: 3, scope: !12770)
!12791 = !DILocation(line: 2866, column: 3, scope: !12770)
!12792 = !DILocation(line: 2869, column: 15, scope: !12770)
!12793 = !DILocation(line: 2870, column: 3, scope: !12770)
!12794 = !DILocation(line: 2870, column: 9, scope: !12770)
!12795 = !DILocation(line: 2870, column: 48, scope: !12770)
!12796 = !DILocation(line: 2872, column: 9, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12798, file: !12168, line: 2872, column: 8)
!12798 = distinct !DILexicalBlock(scope: !12770, file: !12168, line: 2871, column: 3)
!12799 = !DILocation(line: 2872, column: 23, scope: !12797)
!12800 = !DILocation(line: 2872, column: 37, scope: !12797)
!12801 = !DILocation(line: 2872, column: 8, scope: !12798)
!12802 = distinct !{!12802, !12793, !12803}
!12803 = !DILocation(line: 2877, column: 3, scope: !12770)
!12804 = !DILocation(line: 2880, column: 1, scope: !12770)
!12805 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !12168, file: !12168, line: 2886, type: !12806, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3148, retainedNodes: !12808)
!12806 = !DISubroutineType(types: !12807)
!12807 = !{!12171}
!12808 = !{!12809}
!12809 = !DILocalVariable(name: "tickstart", scope: !12805, file: !12168, line: 2888, type: !121)
!12810 = !DILocation(line: 2891, column: 3, scope: !12805)
!12811 = !DILocation(line: 2894, column: 15, scope: !12805)
!12812 = !DILocation(line: 0, scope: !12805)
!12813 = !DILocation(line: 2895, column: 3, scope: !12805)
!12814 = !DILocation(line: 2895, column: 9, scope: !12805)
!12815 = !DILocation(line: 2895, column: 45, scope: !12805)
!12816 = !DILocation(line: 2897, column: 9, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12818, file: !12168, line: 2897, column: 8)
!12818 = distinct !DILexicalBlock(scope: !12805, file: !12168, line: 2896, column: 3)
!12819 = !DILocation(line: 2897, column: 23, scope: !12817)
!12820 = !DILocation(line: 2897, column: 36, scope: !12817)
!12821 = !DILocation(line: 2897, column: 8, scope: !12818)
!12822 = distinct !{!12822, !12813, !12823}
!12823 = !DILocation(line: 2902, column: 3, scope: !12805)
!12824 = !DILocation(line: 2905, column: 1, scope: !12805)
!12825 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !12168, file: !12168, line: 2916, type: !12826, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3148, retainedNodes: !12829)
!12826 = !DISubroutineType(types: !12827)
!12827 = !{!12171, !12828}
!12828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12188, size: 32)
!12829 = !{!12830, !12831}
!12830 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !12825, file: !12168, line: 2916, type: !12828)
!12831 = !DILocalVariable(name: "tickstart", scope: !12825, file: !12168, line: 2918, type: !121)
!12832 = !DILocation(line: 0, scope: !12825)
!12833 = !DILocation(line: 2934, column: 3, scope: !12825)
!12834 = !DILocation(line: 2937, column: 15, scope: !12825)
!12835 = !DILocation(line: 2938, column: 3, scope: !12825)
!12836 = !DILocation(line: 2938, column: 9, scope: !12825)
!12837 = !DILocation(line: 2940, column: 9, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12839, file: !12168, line: 2940, column: 8)
!12839 = distinct !DILexicalBlock(scope: !12825, file: !12168, line: 2939, column: 3)
!12840 = !DILocation(line: 2940, column: 23, scope: !12838)
!12841 = !DILocation(line: 2940, column: 37, scope: !12838)
!12842 = !DILocation(line: 2940, column: 8, scope: !12839)
!12843 = distinct !{!12843, !12835, !12844}
!12844 = !DILocation(line: 2945, column: 3, scope: !12825)
!12845 = !DILocation(line: 2953, column: 3, scope: !12825)
!12846 = !DILocation(line: 2970, column: 3, scope: !12825)
!12847 = !DILocation(line: 2973, column: 15, scope: !12825)
!12848 = !DILocation(line: 2974, column: 3, scope: !12825)
!12849 = !DILocation(line: 2974, column: 9, scope: !12825)
!12850 = !DILocation(line: 2974, column: 37, scope: !12825)
!12851 = !DILocation(line: 2976, column: 9, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12853, file: !12168, line: 2976, column: 8)
!12853 = distinct !DILexicalBlock(scope: !12825, file: !12168, line: 2975, column: 3)
!12854 = !DILocation(line: 2976, column: 23, scope: !12852)
!12855 = !DILocation(line: 2976, column: 37, scope: !12852)
!12856 = !DILocation(line: 2976, column: 8, scope: !12853)
!12857 = distinct !{!12857, !12848, !12858}
!12858 = !DILocation(line: 2981, column: 3, scope: !12825)
!12859 = !DILocation(line: 2984, column: 1, scope: !12825)
!12860 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !12168, file: !12168, line: 2990, type: !12806, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3148, retainedNodes: !12861)
!12861 = !{!12862}
!12862 = !DILocalVariable(name: "tickstart", scope: !12860, file: !12168, line: 2992, type: !121)
!12863 = !DILocation(line: 2995, column: 3, scope: !12860)
!12864 = !DILocation(line: 2998, column: 15, scope: !12860)
!12865 = !DILocation(line: 0, scope: !12860)
!12866 = !DILocation(line: 2999, column: 3, scope: !12860)
!12867 = !DILocation(line: 2999, column: 9, scope: !12860)
!12868 = !DILocation(line: 3001, column: 9, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12870, file: !12168, line: 3001, column: 8)
!12870 = distinct !DILexicalBlock(scope: !12860, file: !12168, line: 3000, column: 3)
!12871 = !DILocation(line: 3001, column: 23, scope: !12869)
!12872 = !DILocation(line: 3001, column: 36, scope: !12869)
!12873 = !DILocation(line: 3001, column: 8, scope: !12870)
!12874 = distinct !{!12874, !12866, !12875}
!12875 = !DILocation(line: 3006, column: 3, scope: !12860)
!12876 = !DILocation(line: 3009, column: 1, scope: !12860)
!12877 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12168, file: !12168, line: 3051, type: !6985, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3148, retainedNodes: !12878)
!12878 = !{!12879, !12880, !12881, !12882, !12883}
!12879 = !DILocalVariable(name: "pllm", scope: !12877, file: !12168, line: 3053, type: !121)
!12880 = !DILocalVariable(name: "pllvco", scope: !12877, file: !12168, line: 3054, type: !121)
!12881 = !DILocalVariable(name: "pllp", scope: !12877, file: !12168, line: 3055, type: !121)
!12882 = !DILocalVariable(name: "pllr", scope: !12877, file: !12168, line: 3056, type: !121)
!12883 = !DILocalVariable(name: "sysclockfreq", scope: !12877, file: !12168, line: 3057, type: !121)
!12884 = !DILocation(line: 0, scope: !12877)
!12885 = !DILocation(line: 3060, column: 16, scope: !12877)
!12886 = !DILocation(line: 3060, column: 3, scope: !12877)
!12887 = !DILocation(line: 3076, column: 19, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12889, file: !12168, line: 3073, column: 5)
!12889 = distinct !DILexicalBlock(scope: !12877, file: !12168, line: 3061, column: 3)
!12890 = !DILocation(line: 3076, column: 27, scope: !12888)
!12891 = !DILocation(line: 3077, column: 10, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12888, file: !12168, line: 3077, column: 10)
!12893 = !DILocation(line: 0, scope: !12892)
!12894 = !DILocation(line: 3087, column: 23, scope: !12888)
!12895 = !DILocation(line: 3087, column: 82, scope: !12888)
!12896 = !DILocation(line: 3089, column: 28, scope: !12888)
!12897 = !DILocation(line: 3090, column: 7, scope: !12888)
!12898 = !DILocation(line: 3096, column: 19, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12889, file: !12168, line: 3093, column: 5)
!12900 = !DILocation(line: 3096, column: 27, scope: !12899)
!12901 = !DILocation(line: 3097, column: 10, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12899, file: !12168, line: 3097, column: 10)
!12903 = !DILocation(line: 0, scope: !12902)
!12904 = !DILocation(line: 3107, column: 21, scope: !12899)
!12905 = !DILocation(line: 3107, column: 49, scope: !12899)
!12906 = !DILocation(line: 3109, column: 28, scope: !12899)
!12907 = !DILocation(line: 3110, column: 7, scope: !12899)
!12908 = !DILocation(line: 0, scope: !12889)
!12909 = !DILocation(line: 3118, column: 3, scope: !12877)
!12910 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12168, file: !12168, line: 3143, type: !12806, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3148, retainedNodes: !12911)
!12911 = !{!12912}
!12912 = !DILocalVariable(name: "tickstart", scope: !12910, file: !12168, line: 3145, type: !121)
!12913 = !DILocation(line: 3148, column: 15, scope: !12910)
!12914 = !DILocation(line: 0, scope: !12910)
!12915 = !DILocation(line: 3151, column: 3, scope: !12910)
!12916 = !DILocation(line: 3154, column: 3, scope: !12910)
!12917 = !DILocation(line: 3154, column: 10, scope: !12910)
!12918 = !DILocation(line: 3154, column: 43, scope: !12910)
!12919 = !DILocation(line: 3156, column: 10, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12921, file: !12168, line: 3156, column: 9)
!12921 = distinct !DILexicalBlock(scope: !12910, file: !12168, line: 3155, column: 3)
!12922 = !DILocation(line: 3156, column: 24, scope: !12920)
!12923 = !DILocation(line: 3156, column: 37, scope: !12920)
!12924 = !DILocation(line: 3156, column: 9, scope: !12921)
!12925 = distinct !{!12925, !12916, !12926}
!12926 = !DILocation(line: 3160, column: 3, scope: !12910)
!12927 = !DILocation(line: 3163, column: 3, scope: !12910)
!12928 = !DILocation(line: 3166, column: 15, scope: !12910)
!12929 = !DILocation(line: 3169, column: 3, scope: !12910)
!12930 = !DILocation(line: 3172, column: 3, scope: !12910)
!12931 = !DILocation(line: 3172, column: 10, scope: !12910)
!12932 = !DILocation(line: 3172, column: 44, scope: !12910)
!12933 = !DILocation(line: 3174, column: 24, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12935, file: !12168, line: 3174, column: 9)
!12935 = distinct !DILexicalBlock(scope: !12910, file: !12168, line: 3173, column: 3)
!12936 = !DILocation(line: 3174, column: 37, scope: !12934)
!12937 = !DILocation(line: 3174, column: 9, scope: !12935)
!12938 = distinct !{!12938, !12930, !12939}
!12939 = !DILocation(line: 3178, column: 3, scope: !12910)
!12940 = !DILocation(line: 3184, column: 3, scope: !12910)
!12941 = !DILocation(line: 3187, column: 3, scope: !12910)
!12942 = !DILocation(line: 3187, column: 10, scope: !12910)
!12943 = !DILocation(line: 3187, column: 43, scope: !12910)
!12944 = !DILocation(line: 3189, column: 24, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12946, file: !12168, line: 3189, column: 9)
!12946 = distinct !DILexicalBlock(scope: !12910, file: !12168, line: 3188, column: 3)
!12947 = !DILocation(line: 3189, column: 37, scope: !12945)
!12948 = !DILocation(line: 3189, column: 9, scope: !12946)
!12949 = distinct !{!12949, !12941, !12950}
!12950 = !DILocation(line: 3193, column: 3, scope: !12910)
!12951 = !DILocation(line: 3199, column: 3, scope: !12910)
!12952 = !DILocation(line: 3202, column: 3, scope: !12910)
!12953 = !DILocation(line: 3202, column: 10, scope: !12910)
!12954 = !DILocation(line: 3202, column: 43, scope: !12910)
!12955 = !DILocation(line: 3204, column: 24, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12957, file: !12168, line: 3204, column: 9)
!12957 = distinct !DILexicalBlock(scope: !12910, file: !12168, line: 3203, column: 3)
!12958 = !DILocation(line: 3204, column: 37, scope: !12956)
!12959 = !DILocation(line: 3204, column: 9, scope: !12957)
!12960 = distinct !{!12960, !12952, !12961}
!12961 = !DILocation(line: 3208, column: 3, scope: !12910)
!12962 = !DILocation(line: 3215, column: 3, scope: !12910)
!12963 = !DILocation(line: 3218, column: 3, scope: !12910)
!12964 = !DILocation(line: 3218, column: 10, scope: !12910)
!12965 = !DILocation(line: 3218, column: 46, scope: !12910)
!12966 = !DILocation(line: 3220, column: 24, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12968, file: !12168, line: 3220, column: 9)
!12968 = distinct !DILexicalBlock(scope: !12910, file: !12168, line: 3219, column: 3)
!12969 = !DILocation(line: 3220, column: 37, scope: !12967)
!12970 = !DILocation(line: 3220, column: 9, scope: !12968)
!12971 = distinct !{!12971, !12963, !12972}
!12972 = !DILocation(line: 3224, column: 3, scope: !12910)
!12973 = !DILocation(line: 3232, column: 3, scope: !12910)
!12974 = !DILocation(line: 3235, column: 3, scope: !12910)
!12975 = !DILocation(line: 3235, column: 10, scope: !12910)
!12976 = !DILocation(line: 3235, column: 46, scope: !12910)
!12977 = !DILocation(line: 3237, column: 10, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12979, file: !12168, line: 3237, column: 9)
!12979 = distinct !DILexicalBlock(scope: !12910, file: !12168, line: 3236, column: 3)
!12980 = !DILocation(line: 3237, column: 24, scope: !12978)
!12981 = !DILocation(line: 3237, column: 37, scope: !12978)
!12982 = !DILocation(line: 3237, column: 9, scope: !12979)
!12983 = distinct !{!12983, !12974, !12984}
!12984 = !DILocation(line: 3241, column: 3, scope: !12910)
!12985 = !DILocation(line: 3247, column: 16, scope: !12910)
!12986 = !DILocation(line: 3257, column: 19, scope: !12910)
!12987 = !DILocation(line: 3270, column: 19, scope: !12910)
!12988 = !DILocation(line: 3274, column: 3, scope: !12910)
!12989 = !DILocation(line: 3277, column: 3, scope: !12910)
!12990 = !DILocation(line: 3281, column: 3, scope: !12910)
!12991 = !DILocation(line: 3285, column: 3, scope: !12910)
!12992 = !DILocation(line: 3288, column: 3, scope: !12910)
!12993 = !DILocation(line: 3292, column: 3, scope: !12910)
!12994 = !DILocation(line: 3296, column: 3, scope: !12910)
!12995 = !DILocation(line: 3299, column: 3, scope: !12910)
!12996 = !DILocation(line: 3302, column: 19, scope: !12910)
!12997 = !DILocation(line: 3305, column: 19, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12910, file: !12168, line: 3305, column: 6)
!12999 = !DILocation(line: 3305, column: 6, scope: !12998)
!13000 = !DILocation(line: 3305, column: 31, scope: !12998)
!13001 = !DILocation(line: 0, scope: !12998)
!13002 = !DILocation(line: 3313, column: 1, scope: !12910)
!13003 = !DISubprogram(name: "HAL_InitTick", scope: !12543, file: !12543, line: 223, type: !13004, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!13004 = !DISubroutineType(types: !13005)
!13005 = !{!12171, !121}
!13006 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12168, file: !12168, line: 3333, type: !13007, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3148, retainedNodes: !13031)
!13007 = !DISubroutineType(types: !13008)
!13008 = !{!12171, !13009}
!13009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13010, size: 32)
!13010 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13011, line: 70, baseType: !13012)
!13011 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13011, line: 49, size: 416, elements: !13013)
!13013 = !{!13014, !13015, !13016, !13017, !13018, !13019, !13020}
!13014 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13012, file: !13011, line: 51, baseType: !121, size: 32)
!13015 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13012, file: !13011, line: 54, baseType: !121, size: 32, offset: 32)
!13016 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13012, file: !13011, line: 57, baseType: !121, size: 32, offset: 64)
!13017 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13012, file: !13011, line: 60, baseType: !121, size: 32, offset: 96)
!13018 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13012, file: !13011, line: 63, baseType: !121, size: 32, offset: 128)
!13019 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13012, file: !13011, line: 66, baseType: !121, size: 32, offset: 160)
!13020 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13012, file: !13011, line: 69, baseType: !13021, size: 224, offset: 192)
!13021 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12174, line: 73, baseType: !13022)
!13022 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12174, line: 45, size: 224, elements: !13023)
!13023 = !{!13024, !13025, !13026, !13027, !13028, !13029, !13030}
!13024 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13022, file: !12174, line: 47, baseType: !121, size: 32)
!13025 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13022, file: !12174, line: 50, baseType: !121, size: 32, offset: 32)
!13026 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13022, file: !12174, line: 53, baseType: !121, size: 32, offset: 64)
!13027 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13022, file: !12174, line: 56, baseType: !121, size: 32, offset: 96)
!13028 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13022, file: !12174, line: 60, baseType: !121, size: 32, offset: 128)
!13029 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !13022, file: !12174, line: 63, baseType: !121, size: 32, offset: 160)
!13030 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !13022, file: !12174, line: 68, baseType: !121, size: 32, offset: 192)
!13031 = !{!13032, !13033, !13034, !13035, !13039}
!13032 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13006, file: !12168, line: 3333, type: !13009)
!13033 = !DILocalVariable(name: "tickstart", scope: !13006, file: !12168, line: 3335, type: !121)
!13034 = !DILocalVariable(name: "pll_config", scope: !13006, file: !12168, line: 3335, type: !121)
!13035 = !DILocalVariable(name: "pwrclkchanged", scope: !13036, file: !12168, line: 3517, type: !13038)
!13036 = distinct !DILexicalBlock(scope: !13037, file: !12168, line: 3516, column: 3)
!13037 = distinct !DILexicalBlock(scope: !13006, file: !12168, line: 3515, column: 6)
!13038 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !804, line: 188, baseType: !3158)
!13039 = !DILocalVariable(name: "tmpreg", scope: !13040, file: !12168, line: 3526, type: !120)
!13040 = distinct !DILexicalBlock(scope: !13041, file: !12168, line: 3526, column: 7)
!13041 = distinct !DILexicalBlock(scope: !13042, file: !12168, line: 3525, column: 5)
!13042 = distinct !DILexicalBlock(scope: !13036, file: !12168, line: 3524, column: 8)
!13043 = !DILocation(line: 0, scope: !13006)
!13044 = !DILocation(line: 3338, column: 24, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13006, file: !12168, line: 3338, column: 6)
!13046 = !DILocation(line: 3338, column: 6, scope: !13006)
!13047 = !DILocation(line: 3346, column: 27, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13006, file: !12168, line: 3346, column: 6)
!13049 = !DILocation(line: 3346, column: 43, scope: !13048)
!13050 = !DILocation(line: 3346, column: 69, scope: !13048)
!13051 = !DILocation(line: 3346, column: 6, scope: !13006)
!13052 = !DILocation(line: 3352, column: 9, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13054, file: !12168, line: 3352, column: 8)
!13054 = distinct !DILexicalBlock(scope: !13048, file: !12168, line: 3347, column: 3)
!13055 = !DILocation(line: 3352, column: 39, scope: !13053)
!13056 = !DILocation(line: 3352, column: 128, scope: !13053)
!13057 = !DILocation(line: 3353, column: 9, scope: !13053)
!13058 = !DILocation(line: 3353, column: 39, scope: !13053)
!13059 = !DILocation(line: 3353, column: 60, scope: !13053)
!13060 = !DILocation(line: 3353, column: 70, scope: !13053)
!13061 = !DILocation(line: 3353, column: 78, scope: !13053)
!13062 = !DILocation(line: 3353, column: 100, scope: !13053)
!13063 = !DILocation(line: 3353, column: 128, scope: !13053)
!13064 = !DILocation(line: 3354, column: 9, scope: !13053)
!13065 = !DILocation(line: 3354, column: 39, scope: !13053)
!13066 = !DILocation(line: 3354, column: 61, scope: !13053)
!13067 = !DILocation(line: 3354, column: 71, scope: !13053)
!13068 = !DILocation(line: 3354, column: 79, scope: !13053)
!13069 = !DILocation(line: 3354, column: 101, scope: !13053)
!13070 = !DILocation(line: 3352, column: 8, scope: !13054)
!13071 = !DILocation(line: 3360, column: 11, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13073, file: !12168, line: 3360, column: 10)
!13073 = distinct !DILexicalBlock(scope: !13053, file: !12168, line: 3359, column: 5)
!13074 = !DILocation(line: 3360, column: 57, scope: !13072)
!13075 = !DILocation(line: 3360, column: 80, scope: !13072)
!13076 = !DILocation(line: 3360, column: 89, scope: !13072)
!13077 = !DILocation(line: 3360, column: 10, scope: !13073)
!13078 = !DILocation(line: 3368, column: 7, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13080, file: !12168, line: 3368, column: 7)
!13080 = distinct !DILexicalBlock(scope: !13081, file: !12168, line: 3368, column: 7)
!13081 = distinct !DILexicalBlock(scope: !13053, file: !12168, line: 3366, column: 5)
!13082 = !DILocation(line: 3368, column: 7, scope: !13080)
!13083 = !DILocation(line: 3368, column: 7, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13079, file: !12168, line: 3368, column: 7)
!13085 = !DILocation(line: 3368, column: 7, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13087, file: !12168, line: 3368, column: 7)
!13087 = distinct !DILexicalBlock(scope: !13079, file: !12168, line: 3368, column: 7)
!13088 = !DILocation(line: 3368, column: 7, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13087, file: !12168, line: 3368, column: 7)
!13090 = !DILocation(line: 0, scope: !13079)
!13091 = !DILocation(line: 3371, column: 30, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13081, file: !12168, line: 3371, column: 10)
!13093 = !DILocation(line: 3371, column: 40, scope: !13092)
!13094 = !DILocation(line: 0, scope: !13092)
!13095 = !DILocation(line: 3371, column: 10, scope: !13081)
!13096 = !DILocation(line: 3377, column: 15, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13092, file: !12168, line: 3372, column: 7)
!13098 = !DILocation(line: 3377, column: 51, scope: !13097)
!13099 = !DILocation(line: 3377, column: 9, scope: !13097)
!13100 = !DILocation(line: 3379, column: 15, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13102, file: !12168, line: 3379, column: 14)
!13102 = distinct !DILexicalBlock(scope: !13097, file: !12168, line: 3378, column: 9)
!13103 = !DILocation(line: 3379, column: 29, scope: !13101)
!13104 = !DILocation(line: 3379, column: 43, scope: !13101)
!13105 = !DILocation(line: 3379, column: 14, scope: !13102)
!13106 = distinct !{!13106, !13099, !13107}
!13107 = !DILocation(line: 3383, column: 9, scope: !13097)
!13108 = !DILocation(line: 3391, column: 15, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13092, file: !12168, line: 3386, column: 7)
!13110 = !DILocation(line: 3391, column: 9, scope: !13109)
!13111 = !DILocation(line: 3393, column: 15, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13113, file: !12168, line: 3393, column: 14)
!13113 = distinct !DILexicalBlock(scope: !13109, file: !12168, line: 3392, column: 9)
!13114 = !DILocation(line: 3393, column: 29, scope: !13112)
!13115 = !DILocation(line: 3393, column: 43, scope: !13112)
!13116 = !DILocation(line: 3393, column: 14, scope: !13113)
!13117 = distinct !{!13117, !13110, !13118}
!13118 = !DILocation(line: 3397, column: 9, scope: !13109)
!13119 = !DILocation(line: 3402, column: 27, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13006, file: !12168, line: 3402, column: 6)
!13121 = !DILocation(line: 3402, column: 43, scope: !13120)
!13122 = !DILocation(line: 3402, column: 69, scope: !13120)
!13123 = !DILocation(line: 3402, column: 6, scope: !13006)
!13124 = !DILocation(line: 3410, column: 9, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13126, file: !12168, line: 3410, column: 8)
!13126 = distinct !DILexicalBlock(scope: !13120, file: !12168, line: 3403, column: 3)
!13127 = !DILocation(line: 3410, column: 39, scope: !13125)
!13128 = !DILocation(line: 3410, column: 128, scope: !13125)
!13129 = !DILocation(line: 3411, column: 9, scope: !13125)
!13130 = !DILocation(line: 3411, column: 39, scope: !13125)
!13131 = !DILocation(line: 3411, column: 60, scope: !13125)
!13132 = !DILocation(line: 3411, column: 70, scope: !13125)
!13133 = !DILocation(line: 3411, column: 78, scope: !13125)
!13134 = !DILocation(line: 3411, column: 100, scope: !13125)
!13135 = !DILocation(line: 3411, column: 128, scope: !13125)
!13136 = !DILocation(line: 3412, column: 9, scope: !13125)
!13137 = !DILocation(line: 3412, column: 39, scope: !13125)
!13138 = !DILocation(line: 3412, column: 61, scope: !13125)
!13139 = !DILocation(line: 3412, column: 71, scope: !13125)
!13140 = !DILocation(line: 3412, column: 79, scope: !13125)
!13141 = !DILocation(line: 3412, column: 101, scope: !13125)
!13142 = !DILocation(line: 3410, column: 8, scope: !13126)
!13143 = !DILocation(line: 3419, column: 11, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13145, file: !12168, line: 3419, column: 10)
!13145 = distinct !DILexicalBlock(scope: !13125, file: !12168, line: 3417, column: 5)
!13146 = !DILocation(line: 3419, column: 57, scope: !13144)
!13147 = !DILocation(line: 3419, column: 80, scope: !13144)
!13148 = !DILocation(line: 3419, column: 89, scope: !13144)
!13149 = !DILocation(line: 3419, column: 10, scope: !13145)
!13150 = !DILocation(line: 3433, column: 30, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13152, file: !12168, line: 3433, column: 10)
!13152 = distinct !DILexicalBlock(scope: !13125, file: !12168, line: 3431, column: 5)
!13153 = !DILocation(line: 3433, column: 39, scope: !13151)
!13154 = !DILocation(line: 3433, column: 10, scope: !13152)
!13155 = !DILocation(line: 3436, column: 9, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13151, file: !12168, line: 3434, column: 7)
!13157 = !DILocation(line: 3439, column: 21, scope: !13156)
!13158 = !DILocation(line: 3442, column: 9, scope: !13156)
!13159 = !DILocation(line: 3442, column: 15, scope: !13156)
!13160 = !DILocation(line: 3442, column: 51, scope: !13156)
!13161 = !DILocation(line: 3444, column: 15, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13163, file: !12168, line: 3444, column: 14)
!13163 = distinct !DILexicalBlock(scope: !13156, file: !12168, line: 3443, column: 9)
!13164 = !DILocation(line: 3444, column: 29, scope: !13162)
!13165 = !DILocation(line: 3444, column: 43, scope: !13162)
!13166 = !DILocation(line: 3444, column: 14, scope: !13163)
!13167 = distinct !{!13167, !13158, !13168}
!13168 = !DILocation(line: 3448, column: 9, scope: !13156)
!13169 = !DILocation(line: 3456, column: 9, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13151, file: !12168, line: 3454, column: 7)
!13171 = !DILocation(line: 3459, column: 21, scope: !13170)
!13172 = !DILocation(line: 3462, column: 9, scope: !13170)
!13173 = !DILocation(line: 3462, column: 15, scope: !13170)
!13174 = !DILocation(line: 3464, column: 15, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13176, file: !12168, line: 3464, column: 14)
!13176 = distinct !DILexicalBlock(scope: !13170, file: !12168, line: 3463, column: 9)
!13177 = !DILocation(line: 3464, column: 29, scope: !13175)
!13178 = !DILocation(line: 3464, column: 43, scope: !13175)
!13179 = !DILocation(line: 3464, column: 14, scope: !13176)
!13180 = distinct !{!13180, !13172, !13181}
!13181 = !DILocation(line: 3468, column: 9, scope: !13170)
!13182 = !DILocation(line: 0, scope: !13125)
!13183 = !DILocation(line: 3473, column: 27, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13006, file: !12168, line: 3473, column: 6)
!13185 = !DILocation(line: 3473, column: 43, scope: !13184)
!13186 = !DILocation(line: 3473, column: 69, scope: !13184)
!13187 = !DILocation(line: 3473, column: 6, scope: !13006)
!13188 = !DILocation(line: 3479, column: 28, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13190, file: !12168, line: 3479, column: 8)
!13190 = distinct !DILexicalBlock(scope: !13184, file: !12168, line: 3474, column: 3)
!13191 = !DILocation(line: 3479, column: 37, scope: !13189)
!13192 = !DILocation(line: 3479, column: 8, scope: !13190)
!13193 = !DILocation(line: 3482, column: 7, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13189, file: !12168, line: 3480, column: 5)
!13195 = !DILocation(line: 3485, column: 19, scope: !13194)
!13196 = !DILocation(line: 3488, column: 7, scope: !13194)
!13197 = !DILocation(line: 3488, column: 13, scope: !13194)
!13198 = !DILocation(line: 3488, column: 49, scope: !13194)
!13199 = !DILocation(line: 3490, column: 13, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13201, file: !12168, line: 3490, column: 12)
!13201 = distinct !DILexicalBlock(scope: !13194, file: !12168, line: 3489, column: 7)
!13202 = !DILocation(line: 3490, column: 27, scope: !13200)
!13203 = !DILocation(line: 3490, column: 41, scope: !13200)
!13204 = !DILocation(line: 3490, column: 12, scope: !13201)
!13205 = distinct !{!13205, !13196, !13206}
!13206 = !DILocation(line: 3494, column: 7, scope: !13194)
!13207 = !DILocation(line: 3499, column: 7, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13189, file: !12168, line: 3497, column: 5)
!13209 = !DILocation(line: 3502, column: 19, scope: !13208)
!13210 = !DILocation(line: 3505, column: 7, scope: !13208)
!13211 = !DILocation(line: 3505, column: 13, scope: !13208)
!13212 = !DILocation(line: 3507, column: 13, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13214, file: !12168, line: 3507, column: 12)
!13214 = distinct !DILexicalBlock(scope: !13208, file: !12168, line: 3506, column: 7)
!13215 = !DILocation(line: 3507, column: 27, scope: !13213)
!13216 = !DILocation(line: 3507, column: 41, scope: !13213)
!13217 = !DILocation(line: 3507, column: 12, scope: !13214)
!13218 = distinct !{!13218, !13210, !13219}
!13219 = !DILocation(line: 3511, column: 7, scope: !13208)
!13220 = !DILocation(line: 3515, column: 27, scope: !13037)
!13221 = !DILocation(line: 3515, column: 43, scope: !13037)
!13222 = !DILocation(line: 3515, column: 69, scope: !13037)
!13223 = !DILocation(line: 3515, column: 6, scope: !13006)
!13224 = !DILocation(line: 0, scope: !13036)
!13225 = !DILocation(line: 3524, column: 8, scope: !13042)
!13226 = !DILocation(line: 3524, column: 8, scope: !13036)
!13227 = !DILocation(line: 3526, column: 7, scope: !13040)
!13228 = !DILocation(line: 3526, column: 7, scope: !13041)
!13229 = !DILocation(line: 3528, column: 5, scope: !13041)
!13230 = !DILocation(line: 3530, column: 8, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13036, file: !12168, line: 3530, column: 8)
!13232 = !DILocation(line: 3530, column: 8, scope: !13036)
!13233 = !DILocation(line: 3533, column: 7, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13231, file: !12168, line: 3531, column: 5)
!13235 = !DILocation(line: 3536, column: 19, scope: !13234)
!13236 = !DILocation(line: 3538, column: 7, scope: !13234)
!13237 = !DILocation(line: 3538, column: 13, scope: !13234)
!13238 = !DILocation(line: 3540, column: 13, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13240, file: !12168, line: 3540, column: 12)
!13240 = distinct !DILexicalBlock(scope: !13234, file: !12168, line: 3539, column: 7)
!13241 = !DILocation(line: 3540, column: 27, scope: !13239)
!13242 = !DILocation(line: 3540, column: 40, scope: !13239)
!13243 = !DILocation(line: 3540, column: 12, scope: !13240)
!13244 = distinct !{!13244, !13236, !13245}
!13245 = !DILocation(line: 3544, column: 7, scope: !13234)
!13246 = !DILocation(line: 3548, column: 5, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13248, file: !12168, line: 3548, column: 5)
!13248 = distinct !DILexicalBlock(scope: !13036, file: !12168, line: 3548, column: 5)
!13249 = !DILocation(line: 3548, column: 5, scope: !13248)
!13250 = !DILocation(line: 3548, column: 5, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13247, file: !12168, line: 3548, column: 5)
!13252 = !DILocation(line: 3548, column: 5, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13254, file: !12168, line: 3548, column: 5)
!13254 = distinct !DILexicalBlock(scope: !13247, file: !12168, line: 3548, column: 5)
!13255 = !DILocation(line: 3548, column: 5, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13254, file: !12168, line: 3548, column: 5)
!13257 = !DILocation(line: 0, scope: !13247)
!13258 = !DILocation(line: 3550, column: 28, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13036, file: !12168, line: 3550, column: 8)
!13260 = !DILocation(line: 3550, column: 38, scope: !13259)
!13261 = !DILocation(line: 0, scope: !13259)
!13262 = !DILocation(line: 3550, column: 8, scope: !13036)
!13263 = !DILocation(line: 3556, column: 13, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !13259, file: !12168, line: 3551, column: 5)
!13265 = !DILocation(line: 3556, column: 49, scope: !13264)
!13266 = !DILocation(line: 3556, column: 7, scope: !13264)
!13267 = !DILocation(line: 3558, column: 13, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13269, file: !12168, line: 3558, column: 12)
!13269 = distinct !DILexicalBlock(scope: !13264, file: !12168, line: 3557, column: 7)
!13270 = !DILocation(line: 3558, column: 27, scope: !13268)
!13271 = !DILocation(line: 3558, column: 41, scope: !13268)
!13272 = !DILocation(line: 3558, column: 12, scope: !13269)
!13273 = distinct !{!13273, !13266, !13274}
!13274 = !DILocation(line: 3562, column: 7, scope: !13264)
!13275 = !DILocation(line: 3570, column: 13, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13259, file: !12168, line: 3565, column: 5)
!13277 = !DILocation(line: 3570, column: 7, scope: !13276)
!13278 = !DILocation(line: 3572, column: 13, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13280, file: !12168, line: 3572, column: 12)
!13280 = distinct !DILexicalBlock(scope: !13276, file: !12168, line: 3571, column: 7)
!13281 = !DILocation(line: 3572, column: 27, scope: !13279)
!13282 = !DILocation(line: 3572, column: 41, scope: !13279)
!13283 = !DILocation(line: 3572, column: 12, scope: !13280)
!13284 = distinct !{!13284, !13277, !13285}
!13285 = !DILocation(line: 3576, column: 7, scope: !13276)
!13286 = !DILocation(line: 3580, column: 8, scope: !13036)
!13287 = !DILocation(line: 3582, column: 7, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13289, file: !12168, line: 3581, column: 5)
!13289 = distinct !DILexicalBlock(scope: !13036, file: !12168, line: 3580, column: 8)
!13290 = !DILocation(line: 3583, column: 5, scope: !13288)
!13291 = !DILocation(line: 3588, column: 31, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13006, file: !12168, line: 3588, column: 7)
!13293 = !DILocation(line: 3588, column: 41, scope: !13292)
!13294 = !DILocation(line: 3588, column: 7, scope: !13006)
!13295 = !DILocation(line: 3591, column: 8, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13297, file: !12168, line: 3591, column: 8)
!13297 = distinct !DILexicalBlock(scope: !13292, file: !12168, line: 3589, column: 3)
!13298 = !DILocation(line: 3591, column: 38, scope: !13296)
!13299 = !DILocation(line: 3591, column: 8, scope: !13297)
!13300 = !DILocation(line: 3593, column: 44, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13302, file: !12168, line: 3593, column: 10)
!13302 = distinct !DILexicalBlock(scope: !13296, file: !12168, line: 3592, column: 5)
!13303 = !DILocation(line: 0, scope: !13301)
!13304 = !DILocation(line: 3593, column: 10, scope: !13302)
!13305 = !DILocation(line: 3610, column: 15, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13301, file: !12168, line: 3594, column: 7)
!13307 = !DILocation(line: 3610, column: 9, scope: !13306)
!13308 = !DILocation(line: 3612, column: 15, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13310, file: !12168, line: 3612, column: 14)
!13310 = distinct !DILexicalBlock(scope: !13306, file: !12168, line: 3611, column: 9)
!13311 = !DILocation(line: 3612, column: 29, scope: !13309)
!13312 = !DILocation(line: 3612, column: 43, scope: !13309)
!13313 = !DILocation(line: 3612, column: 14, scope: !13310)
!13314 = distinct !{!13314, !13307, !13315}
!13315 = !DILocation(line: 3616, column: 9, scope: !13306)
!13316 = !DILocation(line: 3619, column: 9, scope: !13306)
!13317 = !DILocation(line: 3626, column: 9, scope: !13306)
!13318 = !DILocation(line: 3629, column: 21, scope: !13306)
!13319 = !DILocation(line: 3632, column: 9, scope: !13306)
!13320 = !DILocation(line: 3632, column: 15, scope: !13306)
!13321 = !DILocation(line: 3632, column: 51, scope: !13306)
!13322 = !DILocation(line: 3634, column: 15, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13324, file: !12168, line: 3634, column: 14)
!13324 = distinct !DILexicalBlock(scope: !13306, file: !12168, line: 3633, column: 9)
!13325 = !DILocation(line: 3634, column: 29, scope: !13323)
!13326 = !DILocation(line: 3634, column: 43, scope: !13323)
!13327 = !DILocation(line: 3634, column: 14, scope: !13324)
!13328 = distinct !{!13328, !13319, !13329}
!13329 = !DILocation(line: 3638, column: 9, scope: !13306)
!13330 = !DILocation(line: 3649, column: 15, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13301, file: !12168, line: 3641, column: 7)
!13332 = !DILocation(line: 3649, column: 9, scope: !13331)
!13333 = !DILocation(line: 3651, column: 15, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13335, file: !12168, line: 3651, column: 14)
!13335 = distinct !DILexicalBlock(scope: !13331, file: !12168, line: 3650, column: 9)
!13336 = !DILocation(line: 3651, column: 29, scope: !13334)
!13337 = !DILocation(line: 3651, column: 43, scope: !13334)
!13338 = !DILocation(line: 3651, column: 14, scope: !13335)
!13339 = distinct !{!13339, !13332, !13340}
!13340 = !DILocation(line: 3655, column: 9, scope: !13331)
!13341 = !DILocation(line: 3661, column: 44, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13343, file: !12168, line: 3661, column: 10)
!13343 = distinct !DILexicalBlock(scope: !13296, file: !12168, line: 3659, column: 5)
!13344 = !DILocation(line: 3661, column: 10, scope: !13343)
!13345 = !DILocation(line: 3668, column: 27, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13342, file: !12168, line: 3666, column: 7)
!13347 = !DILocation(line: 3671, column: 14, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13346, file: !12168, line: 3670, column: 13)
!13349 = !DILocation(line: 3671, column: 81, scope: !13348)
!13350 = !DILocation(line: 3671, column: 55, scope: !13348)
!13351 = !DILocation(line: 3671, column: 92, scope: !13348)
!13352 = !DILocation(line: 3672, column: 14, scope: !13348)
!13353 = !DILocation(line: 3672, column: 80, scope: !13348)
!13354 = !DILocation(line: 3672, column: 53, scope: !13348)
!13355 = !DILocation(line: 3672, column: 111, scope: !13348)
!13356 = !DILocation(line: 3673, column: 14, scope: !13348)
!13357 = !DILocation(line: 3673, column: 80, scope: !13348)
!13358 = !DILocation(line: 3673, column: 86, scope: !13348)
!13359 = !DILocation(line: 3673, column: 53, scope: !13348)
!13360 = !DILocation(line: 3673, column: 111, scope: !13348)
!13361 = !DILocation(line: 3674, column: 14, scope: !13348)
!13362 = !DILocation(line: 3674, column: 82, scope: !13348)
!13363 = !DILocation(line: 3674, column: 101, scope: !13348)
!13364 = !DILocation(line: 3674, column: 53, scope: !13348)
!13365 = !DILocation(line: 3674, column: 126, scope: !13348)
!13366 = !DILocation(line: 3675, column: 14, scope: !13348)
!13367 = !DILocation(line: 3675, column: 80, scope: !13348)
!13368 = !DILocation(line: 3675, column: 85, scope: !13348)
!13369 = !DILocation(line: 3675, column: 53, scope: !13348)
!13370 = !DILocation(line: 3675, column: 111, scope: !13348)
!13371 = !DILocation(line: 3676, column: 14, scope: !13348)
!13372 = !DILocation(line: 3676, column: 80, scope: !13348)
!13373 = !DILocation(line: 3676, column: 85, scope: !13348)
!13374 = !DILocation(line: 3676, column: 53, scope: !13348)
!13375 = !DILocation(line: 3670, column: 13, scope: !13346)
!13376 = !DILocation(line: 3691, column: 3, scope: !13006)
!13377 = !DILocation(line: 3692, column: 1, scope: !13006)
!13378 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12168, file: !12168, line: 3703, type: !13379, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3148, retainedNodes: !13381)
!13379 = !DISubroutineType(types: !13380)
!13380 = !{null, !13009}
!13381 = !{!13382}
!13382 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13378, file: !12168, line: 3703, type: !13009)
!13383 = !DILocation(line: 0, scope: !13378)
!13384 = !DILocation(line: 3706, column: 22, scope: !13378)
!13385 = !DILocation(line: 3706, column: 37, scope: !13378)
!13386 = !DILocation(line: 3709, column: 12, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13378, file: !12168, line: 3709, column: 6)
!13388 = !DILocation(line: 3709, column: 15, scope: !13387)
!13389 = !DILocation(line: 3709, column: 31, scope: !13387)
!13390 = !DILocation(line: 3709, column: 6, scope: !13378)
!13391 = !DILocation(line: 3711, column: 24, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13387, file: !12168, line: 3710, column: 3)
!13393 = !DILocation(line: 3711, column: 33, scope: !13392)
!13394 = !DILocation(line: 3712, column: 3, scope: !13392)
!13395 = !DILocation(line: 3713, column: 17, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13387, file: !12168, line: 3713, column: 11)
!13397 = !DILocation(line: 3713, column: 20, scope: !13396)
!13398 = !DILocation(line: 3713, column: 35, scope: !13396)
!13399 = !DILocation(line: 0, scope: !13396)
!13400 = !DILocation(line: 3713, column: 11, scope: !13387)
!13401 = !DILocation(line: 3715, column: 33, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13396, file: !12168, line: 3714, column: 3)
!13403 = !DILocation(line: 3716, column: 3, scope: !13402)
!13404 = !DILocation(line: 3719, column: 33, scope: !13405)
!13405 = distinct !DILexicalBlock(scope: !13396, file: !12168, line: 3718, column: 3)
!13406 = !DILocation(line: 3723, column: 12, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13378, file: !12168, line: 3723, column: 6)
!13408 = !DILocation(line: 3723, column: 15, scope: !13407)
!13409 = !DILocation(line: 3729, column: 24, scope: !13410)
!13410 = distinct !DILexicalBlock(scope: !13407, file: !12168, line: 3728, column: 3)
!13411 = !DILocation(line: 3729, column: 33, scope: !13410)
!13412 = !DILocation(line: 3732, column: 61, scope: !13378)
!13413 = !DILocation(line: 3732, column: 81, scope: !13378)
!13414 = !DILocation(line: 3732, column: 22, scope: !13378)
!13415 = !DILocation(line: 3732, column: 42, scope: !13378)
!13416 = !DILocation(line: 3735, column: 12, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13378, file: !12168, line: 3735, column: 6)
!13418 = !DILocation(line: 3735, column: 17, scope: !13417)
!13419 = !DILocation(line: 3735, column: 35, scope: !13417)
!13420 = !DILocation(line: 3735, column: 6, scope: !13378)
!13421 = !DILocation(line: 3737, column: 24, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13417, file: !12168, line: 3736, column: 3)
!13423 = !DILocation(line: 3737, column: 33, scope: !13422)
!13424 = !DILocation(line: 3738, column: 3, scope: !13422)
!13425 = !DILocation(line: 3739, column: 17, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13417, file: !12168, line: 3739, column: 11)
!13427 = !DILocation(line: 3739, column: 22, scope: !13426)
!13428 = !DILocation(line: 3739, column: 39, scope: !13426)
!13429 = !DILocation(line: 0, scope: !13426)
!13430 = !DILocation(line: 3739, column: 11, scope: !13417)
!13431 = !DILocation(line: 3741, column: 33, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13426, file: !12168, line: 3740, column: 3)
!13433 = !DILocation(line: 3742, column: 3, scope: !13432)
!13434 = !DILocation(line: 3745, column: 33, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13426, file: !12168, line: 3744, column: 3)
!13436 = !DILocation(line: 3749, column: 12, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13378, file: !12168, line: 3749, column: 6)
!13438 = !DILocation(line: 3749, column: 16, scope: !13437)
!13439 = !DILocation(line: 3755, column: 24, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13437, file: !12168, line: 3754, column: 3)
!13441 = !DILocation(line: 3755, column: 33, scope: !13440)
!13442 = !DILocation(line: 3759, column: 12, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13378, file: !12168, line: 3759, column: 6)
!13444 = !DILocation(line: 3759, column: 15, scope: !13443)
!13445 = !DILocation(line: 3759, column: 30, scope: !13443)
!13446 = !DILocation(line: 3759, column: 6, scope: !13378)
!13447 = !DILocation(line: 3765, column: 28, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13443, file: !12168, line: 3764, column: 3)
!13449 = !DILocation(line: 3765, column: 37, scope: !13448)
!13450 = !DILocation(line: 3767, column: 54, scope: !13378)
!13451 = !DILocation(line: 3767, column: 62, scope: !13378)
!13452 = !DILocation(line: 3767, column: 26, scope: !13378)
!13453 = !DILocation(line: 3767, column: 36, scope: !13378)
!13454 = !DILocation(line: 3768, column: 49, scope: !13378)
!13455 = !DILocation(line: 3768, column: 57, scope: !13378)
!13456 = !DILocation(line: 3768, column: 26, scope: !13378)
!13457 = !DILocation(line: 3768, column: 31, scope: !13378)
!13458 = !DILocation(line: 3769, column: 50, scope: !13378)
!13459 = !DILocation(line: 3769, column: 78, scope: !13378)
!13460 = !DILocation(line: 3769, column: 26, scope: !13378)
!13461 = !DILocation(line: 3769, column: 31, scope: !13378)
!13462 = !DILocation(line: 3770, column: 52, scope: !13378)
!13463 = !DILocation(line: 3770, column: 102, scope: !13378)
!13464 = !DILocation(line: 3770, column: 109, scope: !13378)
!13465 = !DILocation(line: 3770, column: 26, scope: !13378)
!13466 = !DILocation(line: 3770, column: 31, scope: !13378)
!13467 = !DILocation(line: 3771, column: 50, scope: !13378)
!13468 = !DILocation(line: 3771, column: 78, scope: !13378)
!13469 = !DILocation(line: 3771, column: 26, scope: !13378)
!13470 = !DILocation(line: 3771, column: 31, scope: !13378)
!13471 = !DILocation(line: 3772, column: 50, scope: !13378)
!13472 = !DILocation(line: 3772, column: 78, scope: !13378)
!13473 = !DILocation(line: 3772, column: 26, scope: !13378)
!13474 = !DILocation(line: 3772, column: 31, scope: !13378)
!13475 = !DILocation(line: 3773, column: 1, scope: !13378)
!13476 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13477, file: !13477, line: 257, type: !6995, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13478)
!13477 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13478 = !{!13479}
!13479 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13476, file: !13477, line: 257, type: !121)
!13480 = !DILocation(line: 0, scope: !13476)
!13481 = !DILocation(line: 260, column: 3, scope: !13476)
!13482 = !DILocation(line: 261, column: 1, scope: !13476)
!13483 = distinct !DISubprogram(name: "LL_InitTick", scope: !13484, file: !13484, line: 260, type: !10189, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13485)
!13484 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13485 = !{!13486, !13487}
!13486 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13483, file: !13484, line: 260, type: !121)
!13487 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13483, file: !13484, line: 260, type: !121)
!13488 = !DILocation(line: 0, scope: !13483)
!13489 = !DILocation(line: 263, column: 46, scope: !13483)
!13490 = !DILocation(line: 263, column: 55, scope: !13483)
!13491 = !DILocation(line: 263, column: 18, scope: !13483)
!13492 = !DILocation(line: 264, column: 18, scope: !13483)
!13493 = !DILocation(line: 265, column: 18, scope: !13483)
!13494 = !DILocation(line: 267, column: 1, scope: !13483)
!13495 = distinct !DISubprogram(name: "LL_mDelay", scope: !13477, file: !13477, line: 273, type: !6995, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13496)
!13496 = !{!13497, !13498}
!13497 = !DILocalVariable(name: "Delay", arg: 1, scope: !13495, file: !13477, line: 273, type: !121)
!13498 = !DILocalVariable(name: "tmp", scope: !13495, file: !13477, line: 275, type: !120)
!13499 = !DILocation(line: 0, scope: !13495)
!13500 = !DILocation(line: 275, column: 3, scope: !13495)
!13501 = !DILocation(line: 275, column: 18, scope: !13495)
!13502 = !DILocation(line: 275, column: 33, scope: !13495)
!13503 = !DILocation(line: 277, column: 10, scope: !13495)
!13504 = !DILocation(line: 280, column: 12, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13495, file: !13477, line: 280, column: 6)
!13506 = !DILocation(line: 285, column: 3, scope: !13495)
!13507 = !DILocation(line: 287, column: 18, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13509, file: !13477, line: 287, column: 8)
!13509 = distinct !DILexicalBlock(scope: !13495, file: !13477, line: 286, column: 3)
!13510 = !DILocation(line: 292, column: 1, scope: !13495)
!13511 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13477, file: !13477, line: 323, type: !6995, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13512)
!13512 = !{!13513}
!13513 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13511, file: !13477, line: 323, type: !121)
!13514 = !DILocation(line: 0, scope: !13511)
!13515 = !DILocation(line: 326, column: 19, scope: !13511)
!13516 = !DILocation(line: 327, column: 1, scope: !13511)
!13517 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13477, file: !13477, line: 338, type: !13518, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13521)
!13518 = !DISubroutineType(types: !13519)
!13519 = !{!13520, !121}
!13520 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !804, line: 201, baseType: !803)
!13521 = !{!13522, !13523, !13524, !13525, !13526}
!13522 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13517, file: !13477, line: 338, type: !121)
!13523 = !DILocalVariable(name: "timeout", scope: !13517, file: !13477, line: 340, type: !121)
!13524 = !DILocalVariable(name: "getlatency", scope: !13517, file: !13477, line: 341, type: !121)
!13525 = !DILocalVariable(name: "latency", scope: !13517, file: !13477, line: 342, type: !121)
!13526 = !DILocalVariable(name: "status", scope: !13517, file: !13477, line: 343, type: !13520)
!13527 = !DILocation(line: 0, scope: !13517)
!13528 = !DILocation(line: 347, column: 21, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13517, file: !13477, line: 347, column: 6)
!13530 = !DILocation(line: 347, column: 6, scope: !13517)
!13531 = !DILocation(line: 353, column: 8, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13533, file: !13477, line: 353, column: 8)
!13533 = distinct !DILexicalBlock(scope: !13529, file: !13477, line: 352, column: 3)
!13534 = !DILocation(line: 353, column: 40, scope: !13532)
!13535 = !DILocation(line: 353, column: 8, scope: !13533)
!13536 = !DILocation(line: 356, column: 26, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13538, file: !13477, line: 356, column: 10)
!13538 = distinct !DILexicalBlock(scope: !13532, file: !13477, line: 354, column: 5)
!13539 = !DILocation(line: 356, column: 55, scope: !13537)
!13540 = !DILocation(line: 362, column: 55, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13538, file: !13477, line: 362, column: 10)
!13542 = !DILocation(line: 368, column: 55, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13538, file: !13477, line: 368, column: 10)
!13544 = !DILocation(line: 374, column: 26, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13538, file: !13477, line: 374, column: 10)
!13546 = !DILocation(line: 374, column: 55, scope: !13545)
!13547 = !DILocation(line: 380, column: 28, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13549, file: !13477, line: 380, column: 12)
!13549 = distinct !DILexicalBlock(scope: !13545, file: !13477, line: 379, column: 7)
!13550 = !DILocation(line: 380, column: 57, scope: !13548)
!13551 = !DILocation(line: 387, column: 8, scope: !13552)
!13552 = distinct !DILexicalBlock(scope: !13533, file: !13477, line: 387, column: 8)
!13553 = !DILocation(line: 387, column: 40, scope: !13552)
!13554 = !DILocation(line: 387, column: 8, scope: !13533)
!13555 = !DILocation(line: 390, column: 26, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13557, file: !13477, line: 390, column: 10)
!13557 = distinct !DILexicalBlock(scope: !13552, file: !13477, line: 388, column: 5)
!13558 = !DILocation(line: 390, column: 55, scope: !13556)
!13559 = !DILocation(line: 396, column: 26, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13557, file: !13477, line: 396, column: 10)
!13561 = !DILocation(line: 396, column: 55, scope: !13560)
!13562 = !DILocation(line: 402, column: 26, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13557, file: !13477, line: 402, column: 10)
!13564 = !DILocation(line: 402, column: 55, scope: !13563)
!13565 = !DILocation(line: 407, column: 26, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13557, file: !13477, line: 407, column: 10)
!13567 = !DILocation(line: 407, column: 55, scope: !13566)
!13568 = !DILocation(line: 413, column: 28, scope: !13569)
!13569 = distinct !DILexicalBlock(scope: !13570, file: !13477, line: 413, column: 12)
!13570 = distinct !DILexicalBlock(scope: !13566, file: !13477, line: 412, column: 7)
!13571 = !DILocation(line: 413, column: 57, scope: !13569)
!13572 = !DILocation(line: 0, scope: !13533)
!13573 = !DILocation(line: 420, column: 8, scope: !13574)
!13574 = distinct !DILexicalBlock(scope: !13533, file: !13477, line: 420, column: 8)
!13575 = !DILocation(line: 420, column: 40, scope: !13574)
!13576 = !DILocation(line: 420, column: 8, scope: !13533)
!13577 = !DILocation(line: 423, column: 26, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13579, file: !13477, line: 423, column: 10)
!13579 = distinct !DILexicalBlock(scope: !13574, file: !13477, line: 421, column: 5)
!13580 = !DILocation(line: 423, column: 55, scope: !13578)
!13581 = !DILocation(line: 429, column: 26, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13579, file: !13477, line: 429, column: 10)
!13583 = !DILocation(line: 429, column: 55, scope: !13582)
!13584 = !DILocation(line: 435, column: 28, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13586, file: !13477, line: 435, column: 12)
!13586 = distinct !DILexicalBlock(scope: !13582, file: !13477, line: 434, column: 7)
!13587 = !DILocation(line: 435, column: 57, scope: !13585)
!13588 = !DILocation(line: 444, column: 5, scope: !13533)
!13589 = !DILocation(line: 448, column: 5, scope: !13533)
!13590 = !DILocation(line: 451, column: 18, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13533, file: !13477, line: 449, column: 5)
!13592 = !DILocation(line: 452, column: 12, scope: !13591)
!13593 = !DILocation(line: 453, column: 26, scope: !13533)
!13594 = !DILocation(line: 453, column: 38, scope: !13533)
!13595 = !DILocation(line: 453, column: 5, scope: !13591)
!13596 = distinct !{!13596, !13589, !13597}
!13597 = !DILocation(line: 453, column: 54, scope: !13533)
!13598 = !DILocation(line: 0, scope: !13529)
!13599 = !DILocation(line: 464, column: 3, scope: !13517)
!13600 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13601, file: !13601, line: 519, type: !6985, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !461)
!13601 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13602 = !DILocation(line: 521, column: 21, scope: !13600)
!13603 = !DILocation(line: 521, column: 3, scope: !13600)
!13604 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5905, file: !5905, line: 1543, type: !6995, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13605)
!13605 = !{!13606}
!13606 = !DILocalVariable(name: "Latency", arg: 1, scope: !13604, file: !5905, line: 1543, type: !121)
!13607 = !DILocation(line: 0, scope: !13604)
!13608 = !DILocation(line: 1545, column: 3, scope: !13604)
!13609 = !DILocation(line: 1546, column: 1, scope: !13604)
!13610 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5905, file: !5905, line: 1569, type: !6985, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !461)
!13611 = !DILocation(line: 1571, column: 21, scope: !13610)
!13612 = !DILocation(line: 1571, column: 3, scope: !13610)
!13613 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13477, file: !13477, line: 483, type: !13614, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13630)
!13614 = !DISubroutineType(types: !13615)
!13615 = !{!13520, !13616, !13623}
!13616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13617, size: 32)
!13617 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13484, line: 114, baseType: !13618)
!13618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13484, line: 94, size: 96, elements: !13619)
!13619 = !{!13620, !13621, !13622}
!13620 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13618, file: !13484, line: 96, baseType: !121, size: 32)
!13621 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13618, file: !13484, line: 102, baseType: !121, size: 32, offset: 32)
!13622 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13618, file: !13484, line: 109, baseType: !121, size: 32, offset: 64)
!13623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13624, size: 32)
!13624 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13484, line: 139, baseType: !13625)
!13625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13484, line: 119, size: 96, elements: !13626)
!13626 = !{!13627, !13628, !13629}
!13627 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13625, file: !13484, line: 121, baseType: !121, size: 32)
!13628 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13625, file: !13484, line: 127, baseType: !121, size: 32, offset: 32)
!13629 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13625, file: !13484, line: 133, baseType: !121, size: 32, offset: 64)
!13630 = !{!13631, !13632, !13633, !13634}
!13631 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13613, file: !13477, line: 483, type: !13616)
!13632 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13613, file: !13477, line: 484, type: !13623)
!13633 = !DILocalVariable(name: "status", scope: !13613, file: !13477, line: 486, type: !13520)
!13634 = !DILocalVariable(name: "pllfreq", scope: !13613, file: !13477, line: 487, type: !121)
!13635 = !DILocation(line: 0, scope: !13613)
!13636 = !DILocation(line: 490, column: 6, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13613, file: !13477, line: 490, column: 6)
!13638 = !DILocation(line: 490, column: 25, scope: !13637)
!13639 = !DILocation(line: 490, column: 6, scope: !13613)
!13640 = !DILocation(line: 493, column: 15, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13637, file: !13477, line: 491, column: 3)
!13642 = !DILocation(line: 496, column: 8, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13641, file: !13477, line: 496, column: 8)
!13644 = !DILocation(line: 496, column: 29, scope: !13643)
!13645 = !DILocation(line: 496, column: 8, scope: !13641)
!13646 = !DILocation(line: 498, column: 7, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13643, file: !13477, line: 497, column: 5)
!13648 = !DILocation(line: 499, column: 7, scope: !13647)
!13649 = !DILocation(line: 499, column: 14, scope: !13647)
!13650 = !DILocation(line: 499, column: 35, scope: !13647)
!13651 = distinct !{!13651, !13648, !13652}
!13652 = !DILocation(line: 502, column: 7, scope: !13647)
!13653 = !DILocation(line: 506, column: 76, scope: !13641)
!13654 = !DILocation(line: 506, column: 103, scope: !13641)
!13655 = !DILocation(line: 507, column: 54, scope: !13641)
!13656 = !DILocation(line: 506, column: 5, scope: !13641)
!13657 = !DILocation(line: 510, column: 14, scope: !13641)
!13658 = !DILocation(line: 511, column: 3, scope: !13641)
!13659 = !DILocation(line: 0, scope: !13637)
!13660 = !DILocation(line: 518, column: 3, scope: !13613)
!13661 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13477, file: !13477, line: 642, type: !13662, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13664)
!13662 = !DISubroutineType(types: !13663)
!13663 = !{!13520}
!13664 = !{!13665}
!13665 = !DILocalVariable(name: "status", scope: !13661, file: !13477, line: 644, type: !13520)
!13666 = !DILocation(line: 0, scope: !13661)
!13667 = !DILocation(line: 647, column: 6, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13661, file: !13477, line: 647, column: 6)
!13669 = !DILocation(line: 647, column: 27, scope: !13668)
!13670 = !DILocation(line: 655, column: 6, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13661, file: !13477, line: 655, column: 6)
!13672 = !DILocation(line: 655, column: 30, scope: !13671)
!13673 = !DILocation(line: 663, column: 6, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13661, file: !13477, line: 663, column: 6)
!13675 = !DILocation(line: 663, column: 30, scope: !13674)
!13676 = !DILocation(line: 663, column: 6, scope: !13661)
!13677 = !DILocation(line: 669, column: 3, scope: !13661)
!13678 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13477, file: !13477, line: 611, type: !13679, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13681)
!13679 = !DISubroutineType(types: !13680)
!13680 = !{!121, !121, !13616}
!13681 = !{!13682, !13683, !13684}
!13682 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13678, file: !13477, line: 611, type: !121)
!13683 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13678, file: !13477, line: 611, type: !13616)
!13684 = !DILocalVariable(name: "pllfreq", scope: !13678, file: !13477, line: 613, type: !121)
!13685 = !DILocation(line: 0, scope: !13678)
!13686 = !DILocation(line: 622, column: 56, scope: !13678)
!13687 = !DILocation(line: 622, column: 61, scope: !13678)
!13688 = !DILocation(line: 622, column: 32, scope: !13678)
!13689 = !DILocation(line: 626, column: 45, scope: !13678)
!13690 = !DILocation(line: 626, column: 50, scope: !13678)
!13691 = !DILocation(line: 626, column: 21, scope: !13678)
!13692 = !DILocation(line: 630, column: 47, scope: !13678)
!13693 = !DILocation(line: 630, column: 82, scope: !13678)
!13694 = !DILocation(line: 630, column: 21, scope: !13678)
!13695 = !DILocation(line: 633, column: 3, scope: !13678)
!13696 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8938, file: !8938, line: 3007, type: !6985, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !461)
!13697 = !DILocation(line: 3009, column: 11, scope: !13696)
!13698 = !DILocation(line: 3009, column: 44, scope: !13696)
!13699 = !DILocation(line: 3009, column: 3, scope: !13696)
!13700 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8938, file: !8938, line: 2987, type: !3318, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !461)
!13701 = !DILocation(line: 2989, column: 3, scope: !13700)
!13702 = !DILocation(line: 2990, column: 1, scope: !13700)
!13703 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8938, file: !8938, line: 4304, type: !9072, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13704)
!13704 = !{!13705, !13706, !13707, !13708}
!13705 = !DILocalVariable(name: "Source", arg: 1, scope: !13703, file: !8938, line: 4304, type: !121)
!13706 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13703, file: !8938, line: 4304, type: !121)
!13707 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13703, file: !8938, line: 4304, type: !121)
!13708 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13703, file: !8938, line: 4304, type: !121)
!13709 = !DILocation(line: 0, scope: !13703)
!13710 = !DILocation(line: 4306, column: 3, scope: !13703)
!13711 = !DILocation(line: 4308, column: 3, scope: !13703)
!13712 = !DILocation(line: 4310, column: 3, scope: !13703)
!13713 = !DILocation(line: 4312, column: 1, scope: !13703)
!13714 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13477, file: !13477, line: 681, type: !13715, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13717)
!13715 = !DISubroutineType(types: !13716)
!13716 = !{!13520, !121, !13623}
!13717 = !{!13718, !13719, !13720, !13721}
!13718 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13714, file: !13477, line: 681, type: !121)
!13719 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13714, file: !13477, line: 681, type: !13623)
!13720 = !DILocalVariable(name: "status", scope: !13714, file: !13477, line: 683, type: !13520)
!13721 = !DILocalVariable(name: "hclk_frequency", scope: !13714, file: !13477, line: 684, type: !121)
!13722 = !DILocation(line: 0, scope: !13714)
!13723 = !DILocation(line: 691, column: 20, scope: !13714)
!13724 = !DILocation(line: 694, column: 6, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13714, file: !13477, line: 694, column: 6)
!13726 = !DILocation(line: 694, column: 22, scope: !13725)
!13727 = !DILocation(line: 694, column: 6, scope: !13714)
!13728 = !DILocation(line: 697, column: 14, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13725, file: !13477, line: 695, column: 3)
!13730 = !DILocation(line: 701, column: 13, scope: !13731)
!13731 = distinct !DILexicalBlock(scope: !13714, file: !13477, line: 701, column: 6)
!13732 = !DILocation(line: 701, column: 6, scope: !13714)
!13733 = !DILocation(line: 704, column: 5, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13731, file: !13477, line: 702, column: 3)
!13735 = !DILocation(line: 705, column: 5, scope: !13734)
!13736 = !DILocation(line: 705, column: 12, scope: !13734)
!13737 = !DILocation(line: 705, column: 33, scope: !13734)
!13738 = distinct !{!13738, !13735, !13739}
!13739 = !DILocation(line: 708, column: 5, scope: !13734)
!13740 = !DILocation(line: 711, column: 49, scope: !13734)
!13741 = !DILocation(line: 711, column: 5, scope: !13734)
!13742 = !DILocation(line: 712, column: 5, scope: !13734)
!13743 = !DILocation(line: 713, column: 5, scope: !13734)
!13744 = !DILocation(line: 713, column: 12, scope: !13734)
!13745 = !DILocation(line: 713, column: 37, scope: !13734)
!13746 = distinct !{!13746, !13743, !13747}
!13747 = !DILocation(line: 716, column: 5, scope: !13734)
!13748 = !DILocation(line: 719, column: 50, scope: !13734)
!13749 = !DILocation(line: 719, column: 5, scope: !13734)
!13750 = !DILocation(line: 720, column: 50, scope: !13734)
!13751 = !DILocation(line: 720, column: 5, scope: !13734)
!13752 = !DILocation(line: 721, column: 3, scope: !13734)
!13753 = !DILocation(line: 724, column: 6, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13714, file: !13477, line: 724, column: 6)
!13755 = !DILocation(line: 724, column: 22, scope: !13754)
!13756 = !DILocation(line: 724, column: 6, scope: !13714)
!13757 = !DILocation(line: 727, column: 14, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13754, file: !13477, line: 725, column: 3)
!13759 = !DILocation(line: 728, column: 3, scope: !13758)
!13760 = !DILocation(line: 731, column: 13, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13714, file: !13477, line: 731, column: 6)
!13762 = !DILocation(line: 731, column: 6, scope: !13714)
!13763 = !DILocation(line: 733, column: 5, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13761, file: !13477, line: 732, column: 3)
!13765 = !DILocation(line: 734, column: 3, scope: !13764)
!13766 = !DILocation(line: 736, column: 3, scope: !13714)
!13767 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8938, file: !8938, line: 4184, type: !3318, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !461)
!13768 = !DILocation(line: 4186, column: 3, scope: !13767)
!13769 = !DILocation(line: 4187, column: 1, scope: !13767)
!13770 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8938, file: !8938, line: 4205, type: !6985, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !461)
!13771 = !DILocation(line: 4207, column: 11, scope: !13770)
!13772 = !DILocation(line: 4207, column: 44, scope: !13770)
!13773 = !DILocation(line: 4207, column: 3, scope: !13770)
!13774 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8938, file: !8938, line: 3224, type: !6995, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13775)
!13775 = !{!13776}
!13776 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13774, file: !8938, line: 3224, type: !121)
!13777 = !DILocation(line: 0, scope: !13774)
!13778 = !DILocation(line: 3226, column: 3, scope: !13774)
!13779 = !DILocation(line: 3227, column: 1, scope: !13774)
!13780 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8938, file: !8938, line: 3188, type: !6995, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13781)
!13781 = !{!13782}
!13782 = !DILocalVariable(name: "Source", arg: 1, scope: !13780, file: !8938, line: 3188, type: !121)
!13783 = !DILocation(line: 0, scope: !13780)
!13784 = !DILocation(line: 3190, column: 3, scope: !13780)
!13785 = !DILocation(line: 3191, column: 1, scope: !13780)
!13786 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8938, file: !8938, line: 3204, type: !6985, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !461)
!13787 = !DILocation(line: 3206, column: 21, scope: !13786)
!13788 = !DILocation(line: 3206, column: 3, scope: !13786)
!13789 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8938, file: !8938, line: 3240, type: !6995, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13790)
!13790 = !{!13791}
!13791 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13789, file: !8938, line: 3240, type: !121)
!13792 = !DILocation(line: 0, scope: !13789)
!13793 = !DILocation(line: 3242, column: 3, scope: !13789)
!13794 = !DILocation(line: 3243, column: 1, scope: !13789)
!13795 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8938, file: !8938, line: 3256, type: !6995, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13796)
!13796 = !{!13797}
!13797 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13795, file: !8938, line: 3256, type: !121)
!13798 = !DILocation(line: 0, scope: !13795)
!13799 = !DILocation(line: 3258, column: 3, scope: !13795)
!13800 = !DILocation(line: 3259, column: 1, scope: !13795)
!13801 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8938, file: !8938, line: 5969, type: !6985, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !461)
!13802 = !DILocation(line: 5971, column: 11, scope: !13801)
!13803 = !DILocation(line: 5971, column: 47, scope: !13801)
!13804 = !DILocation(line: 5971, column: 3, scope: !13801)
!13805 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8938, file: !8938, line: 5153, type: !6985, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !461)
!13806 = !DILocation(line: 5155, column: 11, scope: !13805)
!13807 = !DILocation(line: 5155, column: 47, scope: !13805)
!13808 = !DILocation(line: 5155, column: 3, scope: !13805)
!13809 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13477, file: !13477, line: 540, type: !13810, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !13812)
!13810 = !DISubroutineType(types: !13811)
!13811 = !{!13520, !121, !121, !13616, !13623}
!13812 = !{!13813, !13814, !13815, !13816, !13817, !13818}
!13813 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13809, file: !13477, line: 540, type: !121)
!13814 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13809, file: !13477, line: 540, type: !121)
!13815 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13809, file: !13477, line: 541, type: !13616)
!13816 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13809, file: !13477, line: 541, type: !13623)
!13817 = !DILocalVariable(name: "status", scope: !13809, file: !13477, line: 543, type: !13520)
!13818 = !DILocalVariable(name: "pllfreq", scope: !13809, file: !13477, line: 544, type: !121)
!13819 = !DILocation(line: 0, scope: !13809)
!13820 = !DILocation(line: 551, column: 6, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13809, file: !13477, line: 551, column: 6)
!13822 = !DILocation(line: 551, column: 25, scope: !13821)
!13823 = !DILocation(line: 551, column: 6, scope: !13809)
!13824 = !DILocation(line: 554, column: 15, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13821, file: !13477, line: 552, column: 3)
!13826 = !DILocation(line: 557, column: 8, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13825, file: !13477, line: 557, column: 8)
!13828 = !DILocation(line: 557, column: 29, scope: !13827)
!13829 = !DILocation(line: 557, column: 8, scope: !13825)
!13830 = !DILocation(line: 560, column: 20, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13832, file: !13477, line: 560, column: 10)
!13832 = distinct !DILexicalBlock(scope: !13827, file: !13477, line: 558, column: 5)
!13833 = !DILocation(line: 560, column: 10, scope: !13832)
!13834 = !DILocation(line: 562, column: 9, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13831, file: !13477, line: 561, column: 7)
!13836 = !DILocation(line: 563, column: 7, scope: !13835)
!13837 = !DILocation(line: 566, column: 9, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13831, file: !13477, line: 565, column: 7)
!13839 = !DILocation(line: 570, column: 7, scope: !13832)
!13840 = !DILocation(line: 571, column: 7, scope: !13832)
!13841 = !DILocation(line: 571, column: 14, scope: !13832)
!13842 = !DILocation(line: 571, column: 35, scope: !13832)
!13843 = distinct !{!13843, !13840, !13844}
!13844 = !DILocation(line: 574, column: 7, scope: !13832)
!13845 = !DILocation(line: 578, column: 76, scope: !13825)
!13846 = !DILocation(line: 578, column: 103, scope: !13825)
!13847 = !DILocation(line: 579, column: 54, scope: !13825)
!13848 = !DILocation(line: 578, column: 5, scope: !13825)
!13849 = !DILocation(line: 582, column: 14, scope: !13825)
!13850 = !DILocation(line: 583, column: 3, scope: !13825)
!13851 = !DILocation(line: 0, scope: !13821)
!13852 = !DILocation(line: 590, column: 3, scope: !13809)
!13853 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8938, file: !8938, line: 2969, type: !6985, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !461)
!13854 = !DILocation(line: 2971, column: 11, scope: !13853)
!13855 = !DILocation(line: 2971, column: 44, scope: !13853)
!13856 = !DILocation(line: 2971, column: 3, scope: !13853)
!13857 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8938, file: !8938, line: 2929, type: !3318, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !461)
!13858 = !DILocation(line: 2931, column: 3, scope: !13857)
!13859 = !DILocation(line: 2932, column: 1, scope: !13857)
!13860 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8938, file: !8938, line: 2939, type: !3318, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !461)
!13861 = !DILocation(line: 2941, column: 3, scope: !13860)
!13862 = !DILocation(line: 2942, column: 1, scope: !13860)
!13863 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8938, file: !8938, line: 2949, type: !3318, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3211, retainedNodes: !461)
!13864 = !DILocation(line: 2951, column: 3, scope: !13863)
!13865 = !DILocation(line: 2952, column: 1, scope: !13863)
!13866 = distinct !DISubprogram(name: "z_device_state_init", scope: !13867, file: !13867, line: 23, type: !3318, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !13868)
!13867 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13868 = !{!13869}
!13869 = !DILocalVariable(name: "dev", scope: !13866, file: !13867, line: 25, type: !13870)
!13870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13871, size: 32)
!13871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13872)
!13872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !13873)
!13873 = !{!13874, !13875, !13876, !13877, !13883, !13884}
!13874 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13872, file: !141, line: 380, baseType: !144, size: 32)
!13875 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13872, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!13876 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13872, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!13877 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13872, file: !141, line: 386, baseType: !13878, size: 32, offset: 96)
!13878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13879, size: 32)
!13879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !13880)
!13880 = !{!13881, !13882}
!13881 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13879, file: !141, line: 359, baseType: !154, size: 8)
!13882 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13879, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13883 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13872, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!13884 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13872, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!13885 = !DILocation(line: 0, scope: !13866)
!13886 = !DILocation(line: 31, column: 1, scope: !13866)
!13887 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13867, file: !13867, line: 33, type: !13888, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !13890)
!13888 = !DISubroutineType(types: !13889)
!13889 = !{!13870, !144}
!13890 = !{!13891, !13892}
!13891 = !DILocalVariable(name: "name", arg: 1, scope: !13887, file: !13867, line: 33, type: !144)
!13892 = !DILocalVariable(name: "dev", scope: !13887, file: !13867, line: 35, type: !13870)
!13893 = !DILocation(line: 0, scope: !13887)
!13894 = !DILocation(line: 40, column: 12, scope: !13895)
!13895 = distinct !DILexicalBlock(scope: !13887, file: !13867, line: 40, column: 6)
!13896 = !DILocation(line: 40, column: 21, scope: !13895)
!13897 = !DILocation(line: 40, column: 25, scope: !13895)
!13898 = !DILocation(line: 40, column: 33, scope: !13895)
!13899 = !DILocation(line: 40, column: 6, scope: !13887)
!13900 = !DILocation(line: 55, column: 2, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13887, file: !13867, line: 55, column: 2)
!13902 = !DILocation(line: 50, column: 7, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13904, file: !13867, line: 50, column: 7)
!13904 = distinct !DILexicalBlock(scope: !13905, file: !13867, line: 49, column: 57)
!13905 = distinct !DILexicalBlock(scope: !13906, file: !13867, line: 49, column: 2)
!13906 = distinct !DILexicalBlock(scope: !13887, file: !13867, line: 49, column: 2)
!13907 = !DILocation(line: 50, column: 30, scope: !13903)
!13908 = !DILocation(line: 50, column: 39, scope: !13903)
!13909 = !DILocation(line: 50, column: 44, scope: !13903)
!13910 = !DILocation(line: 50, column: 7, scope: !13904)
!13911 = !DILocation(line: 49, column: 53, scope: !13905)
!13912 = !DILocation(line: 49, column: 33, scope: !13905)
!13913 = !DILocation(line: 49, column: 2, scope: !13906)
!13914 = distinct !{!13914, !13913, !13915}
!13915 = !DILocation(line: 53, column: 2, scope: !13906)
!13916 = !DILocation(line: 56, column: 7, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13918, file: !13867, line: 56, column: 7)
!13918 = distinct !DILexicalBlock(scope: !13919, file: !13867, line: 55, column: 57)
!13919 = distinct !DILexicalBlock(scope: !13901, file: !13867, line: 55, column: 2)
!13920 = !DILocation(line: 56, column: 30, scope: !13917)
!13921 = !DILocation(line: 56, column: 52, scope: !13917)
!13922 = !DILocation(line: 56, column: 34, scope: !13917)
!13923 = !DILocation(line: 56, column: 58, scope: !13917)
!13924 = !DILocation(line: 56, column: 7, scope: !13918)
!13925 = !DILocation(line: 55, column: 53, scope: !13919)
!13926 = !DILocation(line: 55, column: 33, scope: !13919)
!13927 = distinct !{!13927, !13900, !13928}
!13928 = !DILocation(line: 59, column: 2, scope: !13901)
!13929 = !DILocation(line: 62, column: 1, scope: !13887)
!13930 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13867, file: !13867, line: 93, type: !13931, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !13933)
!13931 = !DISubroutineType(types: !13932)
!13932 = !{!157, !13870}
!13933 = !{!13934}
!13934 = !DILocalVariable(name: "dev", arg: 1, scope: !13930, file: !13867, line: 93, type: !13870)
!13935 = !DILocation(line: 0, scope: !13930)
!13936 = !DILocation(line: 99, column: 10, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13930, file: !13867, line: 99, column: 6)
!13938 = !DILocation(line: 99, column: 6, scope: !13930)
!13939 = !DILocation(line: 103, column: 14, scope: !13930)
!13940 = !DILocation(line: 103, column: 21, scope: !13930)
!13941 = !DILocation(line: 103, column: 33, scope: !13930)
!13942 = !DILocation(line: 103, column: 49, scope: !13930)
!13943 = !DILocation(line: 103, column: 58, scope: !13930)
!13944 = !DILocation(line: 104, column: 1, scope: !13930)
!13945 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13867, file: !13867, line: 87, type: !13946, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !13949)
!13946 = !DISubroutineType(types: !13947)
!13947 = !{!344, !13948}
!13948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13870, size: 32)
!13949 = !{!13950}
!13950 = !DILocalVariable(name: "devices", arg: 1, scope: !13945, file: !13867, line: 87, type: !13948)
!13951 = !DILocation(line: 0, scope: !13945)
!13952 = !DILocation(line: 89, column: 11, scope: !13945)
!13953 = !DILocation(line: 90, column: 2, scope: !13945)
!13954 = distinct !DISubprogram(name: "device_required_foreach", scope: !13867, file: !13867, line: 125, type: !13955, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !13961)
!13955 = !DISubroutineType(types: !13956)
!13956 = !{!103, !13870, !13957, !102}
!13957 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !13958)
!13958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13959, size: 32)
!13959 = !DISubroutineType(types: !13960)
!13960 = !{!103, !13870, !102}
!13961 = !{!13962, !13963, !13964, !13965, !13966}
!13962 = !DILocalVariable(name: "dev", arg: 1, scope: !13954, file: !13867, line: 125, type: !13870)
!13963 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13954, file: !13867, line: 126, type: !13957)
!13964 = !DILocalVariable(name: "context", arg: 3, scope: !13954, file: !13867, line: 127, type: !102)
!13965 = !DILocalVariable(name: "handle_count", scope: !13954, file: !13867, line: 129, type: !344)
!13966 = !DILocalVariable(name: "handles", scope: !13954, file: !13867, line: 130, type: !160)
!13967 = !DILocation(line: 0, scope: !13954)
!13968 = !DILocation(line: 129, column: 2, scope: !13954)
!13969 = !DILocation(line: 129, column: 9, scope: !13954)
!13970 = !DILocation(line: 130, column: 35, scope: !13954)
!13971 = !DILocation(line: 132, column: 33, scope: !13954)
!13972 = !DILocation(line: 132, column: 9, scope: !13954)
!13973 = !DILocation(line: 133, column: 1, scope: !13954)
!13974 = !DILocation(line: 132, column: 2, scope: !13954)
!13975 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !13976, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !13978)
!13976 = !DISubroutineType(types: !13977)
!13977 = !{!160, !13870, !2711}
!13978 = !{!13979, !13980, !13981, !13982}
!13979 = !DILocalVariable(name: "dev", arg: 1, scope: !13975, file: !141, line: 493, type: !13870)
!13980 = !DILocalVariable(name: "count", arg: 2, scope: !13975, file: !141, line: 493, type: !2711)
!13981 = !DILocalVariable(name: "rv", scope: !13975, file: !141, line: 495, type: !160)
!13982 = !DILocalVariable(name: "i", scope: !13983, file: !141, line: 498, type: !344)
!13983 = distinct !DILexicalBlock(scope: !13984, file: !141, line: 497, column: 18)
!13984 = distinct !DILexicalBlock(scope: !13975, file: !141, line: 497, column: 6)
!13985 = !DILocation(line: 0, scope: !13975)
!13986 = !DILocation(line: 495, column: 35, scope: !13975)
!13987 = !DILocation(line: 497, column: 9, scope: !13984)
!13988 = !DILocation(line: 497, column: 6, scope: !13975)
!13989 = !DILocation(line: 0, scope: !13983)
!13990 = !DILocation(line: 500, column: 11, scope: !13983)
!13991 = !DILocation(line: 500, column: 40, scope: !13983)
!13992 = !DILocation(line: 502, column: 4, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13983, file: !141, line: 501, column: 40)
!13994 = distinct !{!13994, !13995, !13996}
!13995 = !DILocation(line: 500, column: 3, scope: !13983)
!13996 = !DILocation(line: 503, column: 3, scope: !13983)
!13997 = !DILocation(line: 504, column: 10, scope: !13983)
!13998 = !DILocation(line: 505, column: 2, scope: !13983)
!13999 = !DILocation(line: 507, column: 2, scope: !13975)
!14000 = distinct !DISubprogram(name: "device_visitor", scope: !13867, file: !13867, line: 106, type: !14001, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !14003)
!14001 = !DISubroutineType(types: !14002)
!14002 = !{!103, !160, !344, !13957, !102}
!14003 = !{!14004, !14005, !14006, !14007, !14008, !14010, !14013, !14014}
!14004 = !DILocalVariable(name: "handles", arg: 1, scope: !14000, file: !13867, line: 106, type: !160)
!14005 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14000, file: !13867, line: 107, type: !344)
!14006 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14000, file: !13867, line: 108, type: !13957)
!14007 = !DILocalVariable(name: "context", arg: 4, scope: !14000, file: !13867, line: 109, type: !102)
!14008 = !DILocalVariable(name: "i", scope: !14009, file: !13867, line: 112, type: !344)
!14009 = distinct !DILexicalBlock(scope: !14000, file: !13867, line: 112, column: 2)
!14010 = !DILocalVariable(name: "dh", scope: !14011, file: !13867, line: 113, type: !162)
!14011 = distinct !DILexicalBlock(scope: !14012, file: !13867, line: 112, column: 44)
!14012 = distinct !DILexicalBlock(scope: !14009, file: !13867, line: 112, column: 2)
!14013 = !DILocalVariable(name: "rdev", scope: !14011, file: !13867, line: 114, type: !13870)
!14014 = !DILocalVariable(name: "rc", scope: !14011, file: !13867, line: 115, type: !103)
!14015 = !DILocation(line: 0, scope: !14000)
!14016 = !DILocation(line: 0, scope: !14009)
!14017 = !DILocation(line: 112, column: 23, scope: !14012)
!14018 = !DILocation(line: 112, column: 2, scope: !14009)
!14019 = distinct !{!14019, !14018, !14020}
!14020 = !DILocation(line: 120, column: 2, scope: !14009)
!14021 = !DILocation(line: 113, column: 24, scope: !14011)
!14022 = !DILocation(line: 0, scope: !14011)
!14023 = !DILocation(line: 114, column: 31, scope: !14011)
!14024 = !DILocation(line: 115, column: 12, scope: !14011)
!14025 = !DILocation(line: 117, column: 10, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !14011, file: !13867, line: 117, column: 7)
!14027 = !DILocation(line: 112, column: 39, scope: !14012)
!14028 = !DILocation(line: 123, column: 1, scope: !14000)
!14029 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !14030, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !14032)
!14030 = !DISubroutineType(types: !14031)
!14031 = !{!13870, !162}
!14032 = !{!14033, !14034, !14035}
!14033 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14029, file: !141, line: 439, type: !162)
!14034 = !DILocalVariable(name: "dev", scope: !14029, file: !141, line: 443, type: !13870)
!14035 = !DILocalVariable(name: "numdev", scope: !14029, file: !141, line: 444, type: !344)
!14036 = !DILocation(line: 0, scope: !14029)
!14037 = !DILocation(line: 446, column: 7, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14029, file: !141, line: 446, column: 6)
!14039 = !DILocation(line: 446, column: 18, scope: !14038)
!14040 = !DILocation(line: 446, column: 23, scope: !14038)
!14041 = !DILocation(line: 450, column: 2, scope: !14029)
!14042 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13867, file: !13867, line: 135, type: !13955, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !14043)
!14043 = !{!14044, !14045, !14046, !14047, !14048}
!14044 = !DILocalVariable(name: "dev", arg: 1, scope: !14042, file: !13867, line: 135, type: !13870)
!14045 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14042, file: !13867, line: 136, type: !13957)
!14046 = !DILocalVariable(name: "context", arg: 3, scope: !14042, file: !13867, line: 137, type: !102)
!14047 = !DILocalVariable(name: "handle_count", scope: !14042, file: !13867, line: 139, type: !344)
!14048 = !DILocalVariable(name: "handles", scope: !14042, file: !13867, line: 140, type: !160)
!14049 = !DILocation(line: 0, scope: !14042)
!14050 = !DILocation(line: 139, column: 2, scope: !14042)
!14051 = !DILocation(line: 139, column: 9, scope: !14042)
!14052 = !DILocation(line: 140, column: 35, scope: !14042)
!14053 = !DILocation(line: 142, column: 33, scope: !14042)
!14054 = !DILocation(line: 142, column: 9, scope: !14042)
!14055 = !DILocation(line: 143, column: 1, scope: !14042)
!14056 = !DILocation(line: 142, column: 2, scope: !14042)
!14057 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !13976, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !14058)
!14058 = !{!14059, !14060, !14061, !14062, !14063}
!14059 = !DILocalVariable(name: "dev", arg: 1, scope: !14057, file: !141, line: 573, type: !13870)
!14060 = !DILocalVariable(name: "count", arg: 2, scope: !14057, file: !141, line: 573, type: !2711)
!14061 = !DILocalVariable(name: "rv", scope: !14057, file: !141, line: 575, type: !160)
!14062 = !DILocalVariable(name: "region", scope: !14057, file: !141, line: 576, type: !344)
!14063 = !DILocalVariable(name: "i", scope: !14057, file: !141, line: 577, type: !344)
!14064 = !DILocation(line: 0, scope: !14057)
!14065 = !DILocation(line: 575, column: 35, scope: !14057)
!14066 = !DILocation(line: 579, column: 9, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14057, file: !141, line: 579, column: 6)
!14068 = !DILocation(line: 579, column: 6, scope: !14057)
!14069 = !DILocation(line: 582, column: 8, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14071, file: !141, line: 582, column: 8)
!14071 = distinct !DILexicalBlock(scope: !14072, file: !141, line: 581, column: 23)
!14072 = distinct !DILexicalBlock(scope: !14067, file: !141, line: 579, column: 18)
!14073 = !DILocation(line: 582, column: 12, scope: !14070)
!14074 = !DILocation(line: 585, column: 6, scope: !14071)
!14075 = !DILocation(line: 0, scope: !14072)
!14076 = !DILocation(line: 581, column: 17, scope: !14072)
!14077 = !DILocation(line: 581, column: 3, scope: !14072)
!14078 = !DILocation(line: 588, column: 10, scope: !14072)
!14079 = !DILocation(line: 588, column: 16, scope: !14072)
!14080 = !DILocation(line: 589, column: 4, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14072, file: !141, line: 588, column: 39)
!14082 = !DILocation(line: 588, column: 3, scope: !14072)
!14083 = distinct !{!14083, !14082, !14084}
!14084 = !DILocation(line: 590, column: 3, scope: !14072)
!14085 = !DILocation(line: 591, column: 10, scope: !14072)
!14086 = !DILocation(line: 592, column: 2, scope: !14072)
!14087 = !DILocation(line: 575, column: 25, scope: !14057)
!14088 = !DILocation(line: 594, column: 2, scope: !14057)
!14089 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2044, file: !2044, line: 49, type: !6076, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !461)
!14090 = !DILocation(line: 51, column: 10, scope: !14089)
!14091 = !DILocation(line: 51, column: 20, scope: !14089)
!14092 = !DILocation(line: 51, column: 2, scope: !14089)
!14093 = distinct !DISubprogram(name: "coredump", scope: !3285, file: !3285, line: 209, type: !14094, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !14240)
!14094 = !DISubroutineType(types: !14095)
!14095 = !{null, !32, !14096, !14140}
!14096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14097, size: 32)
!14097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14098)
!14098 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2918, line: 141, baseType: !14099)
!14099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2918, line: 97, size: 256, elements: !14100)
!14100 = !{!14101}
!14101 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14099, file: !2918, line: 107, baseType: !14102, size: 256)
!14102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2918, line: 98, size: 256, elements: !14103)
!14103 = !{!14104, !14109, !14114, !14119, !14124, !14129, !14134, !14139}
!14104 = !DIDerivedType(tag: DW_TAG_member, scope: !14102, file: !2918, line: 99, baseType: !14105, size: 32)
!14105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14102, file: !2918, line: 99, size: 32, elements: !14106)
!14106 = !{!14107, !14108}
!14107 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14105, file: !2918, line: 99, baseType: !121, size: 32)
!14108 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14105, file: !2918, line: 99, baseType: !121, size: 32)
!14109 = !DIDerivedType(tag: DW_TAG_member, scope: !14102, file: !2918, line: 100, baseType: !14110, size: 32, offset: 32)
!14110 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14102, file: !2918, line: 100, size: 32, elements: !14111)
!14111 = !{!14112, !14113}
!14112 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14110, file: !2918, line: 100, baseType: !121, size: 32)
!14113 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14110, file: !2918, line: 100, baseType: !121, size: 32)
!14114 = !DIDerivedType(tag: DW_TAG_member, scope: !14102, file: !2918, line: 101, baseType: !14115, size: 32, offset: 64)
!14115 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14102, file: !2918, line: 101, size: 32, elements: !14116)
!14116 = !{!14117, !14118}
!14117 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14115, file: !2918, line: 101, baseType: !121, size: 32)
!14118 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14115, file: !2918, line: 101, baseType: !121, size: 32)
!14119 = !DIDerivedType(tag: DW_TAG_member, scope: !14102, file: !2918, line: 102, baseType: !14120, size: 32, offset: 96)
!14120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14102, file: !2918, line: 102, size: 32, elements: !14121)
!14121 = !{!14122, !14123}
!14122 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14120, file: !2918, line: 102, baseType: !121, size: 32)
!14123 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14120, file: !2918, line: 102, baseType: !121, size: 32)
!14124 = !DIDerivedType(tag: DW_TAG_member, scope: !14102, file: !2918, line: 103, baseType: !14125, size: 32, offset: 128)
!14125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14102, file: !2918, line: 103, size: 32, elements: !14126)
!14126 = !{!14127, !14128}
!14127 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14125, file: !2918, line: 103, baseType: !121, size: 32)
!14128 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14125, file: !2918, line: 103, baseType: !121, size: 32)
!14129 = !DIDerivedType(tag: DW_TAG_member, scope: !14102, file: !2918, line: 104, baseType: !14130, size: 32, offset: 160)
!14130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14102, file: !2918, line: 104, size: 32, elements: !14131)
!14131 = !{!14132, !14133}
!14132 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14130, file: !2918, line: 104, baseType: !121, size: 32)
!14133 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14130, file: !2918, line: 104, baseType: !121, size: 32)
!14134 = !DIDerivedType(tag: DW_TAG_member, scope: !14102, file: !2918, line: 105, baseType: !14135, size: 32, offset: 192)
!14135 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14102, file: !2918, line: 105, size: 32, elements: !14136)
!14136 = !{!14137, !14138}
!14137 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14135, file: !2918, line: 105, baseType: !121, size: 32)
!14138 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14135, file: !2918, line: 105, baseType: !121, size: 32)
!14139 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14102, file: !2918, line: 106, baseType: !121, size: 32, offset: 224)
!14140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14141, size: 32)
!14141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !14142)
!14142 = !{!14143, !14201, !14213, !14214, !14215, !14216, !14222, !14235}
!14143 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14141, file: !355, line: 247, baseType: !14144, size: 384)
!14144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !14145)
!14145 = !{!14146, !14170, !14177, !14178, !14179, !14188, !14189, !14190}
!14146 = !DIDerivedType(tag: DW_TAG_member, scope: !14144, file: !355, line: 60, baseType: !14147, size: 64)
!14147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14144, file: !355, line: 60, size: 64, elements: !14148)
!14148 = !{!14149, !14164}
!14149 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14147, file: !355, line: 61, baseType: !14150, size: 64)
!14150 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !14151)
!14151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !14152)
!14152 = !{!14153, !14159}
!14153 = !DIDerivedType(tag: DW_TAG_member, scope: !14151, file: !309, line: 38, baseType: !14154, size: 32)
!14154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14151, file: !309, line: 38, size: 32, elements: !14155)
!14155 = !{!14156, !14158}
!14156 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14154, file: !309, line: 39, baseType: !14157, size: 32)
!14157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14151, size: 32)
!14158 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14154, file: !309, line: 40, baseType: !14157, size: 32)
!14159 = !DIDerivedType(tag: DW_TAG_member, scope: !14151, file: !309, line: 42, baseType: !14160, size: 32, offset: 32)
!14160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14151, file: !309, line: 42, size: 32, elements: !14161)
!14161 = !{!14162, !14163}
!14162 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14160, file: !309, line: 43, baseType: !14157, size: 32)
!14163 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14160, file: !309, line: 44, baseType: !14157, size: 32)
!14164 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14147, file: !355, line: 62, baseType: !14165, size: 64)
!14165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !14166)
!14166 = !{!14167}
!14167 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14165, file: !380, line: 50, baseType: !14168, size: 64)
!14168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14169, size: 64, elements: !385)
!14169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14165, size: 32)
!14170 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14144, file: !355, line: 68, baseType: !14171, size: 32, offset: 64)
!14171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14172, size: 32)
!14172 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !14173)
!14173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !14174)
!14174 = !{!14175}
!14175 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14173, file: !304, line: 232, baseType: !14176, size: 64)
!14176 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !14151)
!14177 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14144, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!14178 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14144, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!14179 = !DIDerivedType(tag: DW_TAG_member, scope: !14144, file: !355, line: 90, baseType: !14180, size: 16, offset: 112)
!14180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14144, file: !355, line: 90, size: 16, elements: !14181)
!14181 = !{!14182, !14187}
!14182 = !DIDerivedType(tag: DW_TAG_member, scope: !14180, file: !355, line: 91, baseType: !14183, size: 16)
!14183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14180, file: !355, line: 91, size: 16, elements: !14184)
!14184 = !{!14185, !14186}
!14185 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14183, file: !355, line: 96, baseType: !403, size: 8)
!14186 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14183, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!14187 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14180, file: !355, line: 100, baseType: !328, size: 16)
!14188 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14144, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!14189 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14144, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!14190 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14144, file: !355, line: 131, baseType: !14191, size: 192, offset: 192)
!14191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !14192)
!14192 = !{!14193, !14194, !14200}
!14193 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14191, file: !304, line: 245, baseType: !14150, size: 64)
!14194 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14191, file: !304, line: 246, baseType: !14195, size: 32, offset: 64)
!14195 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !14196)
!14196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14197, size: 32)
!14197 = !DISubroutineType(types: !14198)
!14198 = !{null, !14199}
!14199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14191, size: 32)
!14200 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14191, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!14201 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14141, file: !355, line: 250, baseType: !14202, size: 288, offset: 384)
!14202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !14203)
!14203 = !{!14204, !14205, !14206, !14207, !14208, !14209, !14210, !14211, !14212}
!14204 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14202, file: !424, line: 26, baseType: !121, size: 32)
!14205 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14202, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!14206 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14202, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!14207 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14202, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!14208 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14202, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!14209 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14202, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!14210 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14202, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!14211 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14202, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!14212 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14202, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!14213 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14141, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!14214 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14141, file: !355, line: 256, baseType: !14172, size: 64, offset: 704)
!14215 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14141, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!14216 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14141, file: !355, line: 300, baseType: !14217, size: 96, offset: 800)
!14217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !14218)
!14218 = !{!14219, !14220, !14221}
!14219 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14217, file: !355, line: 153, baseType: !22, size: 32)
!14220 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14217, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!14221 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14217, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!14222 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14141, file: !355, line: 325, baseType: !14223, size: 32, offset: 896)
!14223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14224, size: 32)
!14224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !14225)
!14225 = !{!14226, !14232, !14233}
!14226 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14224, file: !300, line: 5074, baseType: !14227, size: 96)
!14227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !14228)
!14228 = !{!14229, !14230, !14231}
!14229 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14227, file: !450, line: 57, baseType: !453, size: 32)
!14230 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14227, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!14231 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14227, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!14232 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14224, file: !300, line: 5075, baseType: !14172, size: 64, offset: 96)
!14233 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14224, file: !300, line: 5076, baseType: !14234, offset: 160)
!14234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!14235 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14141, file: !355, line: 343, baseType: !14236, size: 64, offset: 928)
!14236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !14237)
!14237 = !{!14238, !14239}
!14238 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14236, file: !424, line: 63, baseType: !121, size: 32)
!14239 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14236, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!14240 = !{!14241, !14242, !14243}
!14241 = !DILocalVariable(name: "reason", arg: 1, scope: !14093, file: !3285, line: 209, type: !32)
!14242 = !DILocalVariable(name: "esf", arg: 2, scope: !14093, file: !3285, line: 209, type: !14096)
!14243 = !DILocalVariable(name: "thread", arg: 3, scope: !14093, file: !3285, line: 210, type: !14140)
!14244 = !DILocation(line: 0, scope: !14093)
!14245 = !DILocation(line: 212, column: 1, scope: !14093)
!14246 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3285, file: !3285, line: 214, type: !14247, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !14249)
!14247 = !DISubroutineType(types: !14248)
!14248 = !{null, !22, !22}
!14249 = !{!14250, !14251}
!14250 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14246, file: !3285, line: 214, type: !22)
!14251 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14246, file: !3285, line: 214, type: !22)
!14252 = !DILocation(line: 0, scope: !14246)
!14253 = !DILocation(line: 216, column: 1, scope: !14246)
!14254 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3285, file: !3285, line: 218, type: !14255, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !14257)
!14255 = !DISubroutineType(types: !14256)
!14256 = !{null, !261, !344}
!14257 = !{!14258, !14259}
!14258 = !DILocalVariable(name: "buf", arg: 1, scope: !14254, file: !3285, line: 218, type: !261)
!14259 = !DILocalVariable(name: "buflen", arg: 2, scope: !14254, file: !3285, line: 218, type: !344)
!14260 = !DILocation(line: 0, scope: !14254)
!14261 = !DILocation(line: 220, column: 1, scope: !14254)
!14262 = distinct !DISubprogram(name: "coredump_query", scope: !3285, file: !3285, line: 222, type: !14263, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !14265)
!14263 = !DISubroutineType(types: !14264)
!14264 = !{!103, !3284, !102}
!14265 = !{!14266, !14267}
!14266 = !DILocalVariable(name: "query_id", arg: 1, scope: !14262, file: !3285, line: 222, type: !3284)
!14267 = !DILocalVariable(name: "arg", arg: 2, scope: !14262, file: !3285, line: 222, type: !102)
!14268 = !DILocation(line: 0, scope: !14262)
!14269 = !DILocation(line: 224, column: 2, scope: !14262)
!14270 = distinct !DISubprogram(name: "coredump_cmd", scope: !3285, file: !3285, line: 227, type: !14271, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !14273)
!14271 = !DISubroutineType(types: !14272)
!14272 = !{!103, !3291, !102}
!14273 = !{!14274, !14275}
!14274 = !DILocalVariable(name: "query_id", arg: 1, scope: !14270, file: !3285, line: 227, type: !3291)
!14275 = !DILocalVariable(name: "arg", arg: 2, scope: !14270, file: !3285, line: 227, type: !102)
!14276 = !DILocation(line: 0, scope: !14270)
!14277 = !DILocation(line: 229, column: 2, scope: !14270)
!14278 = distinct !DISubprogram(name: "arch_system_halt", scope: !14279, file: !14279, line: 23, type: !5895, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !14280)
!14279 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14280 = !{!14281}
!14281 = !DILocalVariable(name: "reason", arg: 1, scope: !14278, file: !14279, line: 23, type: !32)
!14282 = !DILocation(line: 0, scope: !14278)
!14283 = !DILocation(line: 55, column: 2, scope: !14284, inlinedAt: !14288)
!14284 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !14285)
!14285 = !{!14286, !14287}
!14286 = !DILocalVariable(name: "key", scope: !14284, file: !5884, line: 44, type: !32)
!14287 = !DILocalVariable(name: "tmp", scope: !14284, file: !5884, line: 53, type: !32)
!14288 = distinct !DILocation(line: 31, column: 8, scope: !14278)
!14289 = !{i64 2280098}
!14290 = !DILocation(line: 0, scope: !14284, inlinedAt: !14288)
!14291 = !DILocation(line: 32, column: 2, scope: !14278)
!14292 = !DILocation(line: 32, column: 2, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14294, file: !14279, line: 32, column: 2)
!14294 = distinct !DILexicalBlock(scope: !14278, file: !14279, line: 32, column: 2)
!14295 = distinct !{!14295, !14296, !14297}
!14296 = !DILocation(line: 32, column: 2, scope: !14294)
!14297 = !DILocation(line: 34, column: 2, scope: !14294)
!14298 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14279, file: !14279, line: 39, type: !14299, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !14301)
!14299 = !DISubroutineType(types: !14300)
!14300 = !{null, !32, !14096}
!14301 = !{!14302, !14303}
!14302 = !DILocalVariable(name: "reason", arg: 1, scope: !14298, file: !14279, line: 39, type: !32)
!14303 = !DILocalVariable(name: "esf", arg: 2, scope: !14298, file: !14279, line: 40, type: !14096)
!14304 = !DILocation(line: 0, scope: !14298)
!14305 = !DILocation(line: 46, column: 2, scope: !14298)
!14306 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14279, file: !14279, line: 81, type: !5895, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !14307)
!14307 = !{!14308}
!14308 = !DILocalVariable(name: "reason", arg: 1, scope: !14306, file: !14279, line: 81, type: !32)
!14309 = !DILocation(line: 0, scope: !14306)
!14310 = !DILocation(line: 83, column: 2, scope: !14306)
!14311 = distinct !DISubprogram(name: "z_fatal_error", scope: !14279, file: !14279, line: 96, type: !14299, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !14312)
!14312 = !{!14313, !14314, !14315, !14316}
!14313 = !DILocalVariable(name: "reason", arg: 1, scope: !14311, file: !14279, line: 96, type: !32)
!14314 = !DILocalVariable(name: "esf", arg: 2, scope: !14311, file: !14279, line: 96, type: !14096)
!14315 = !DILocalVariable(name: "key", scope: !14311, file: !14279, line: 102, type: !32)
!14316 = !DILocalVariable(name: "thread", scope: !14311, file: !14279, line: 103, type: !14140)
!14317 = !DILocation(line: 0, scope: !14311)
!14318 = !DILocation(line: 55, column: 2, scope: !14284, inlinedAt: !14319)
!14319 = distinct !DILocation(line: 102, column: 21, scope: !14311)
!14320 = !DILocation(line: 0, scope: !14284, inlinedAt: !14319)
!14321 = !DILocation(line: 119, column: 11, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !14311, file: !14279, line: 119, column: 6)
!14323 = !DILocation(line: 119, column: 20, scope: !14322)
!14324 = !DILocation(line: 131, column: 2, scope: !14311)
!14325 = !DILocation(line: 151, column: 7, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14327, file: !14279, line: 146, column: 32)
!14327 = distinct !DILexicalBlock(scope: !14311, file: !14279, line: 146, column: 6)
!14328 = !DILocation(line: 151, column: 21, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !14326, file: !14279, line: 151, column: 7)
!14330 = !DILocation(line: 104, column: 4, scope: !14311)
!14331 = !DILocalVariable(name: "key", arg: 1, scope: !14332, file: !5884, line: 84, type: !32)
!14332 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !14333)
!14333 = !{!14331}
!14334 = !DILocation(line: 0, scope: !14332, inlinedAt: !14335)
!14335 = distinct !DILocation(line: 186, column: 2, scope: !14311)
!14336 = !DILocation(line: 95, column: 2, scope: !14332, inlinedAt: !14335)
!14337 = !{i64 2280915}
!14338 = !DILocation(line: 189, column: 3, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14340, file: !14279, line: 188, column: 41)
!14340 = distinct !DILexicalBlock(scope: !14311, file: !14279, line: 188, column: 6)
!14341 = !DILocation(line: 191, column: 1, scope: !14311)
!14342 = distinct !DISubprogram(name: "k_current_get", scope: !300, file: !300, line: 530, type: !14343, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !461)
!14343 = !DISubroutineType(types: !14344)
!14344 = !{!14345}
!14345 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !14140)
!14346 = !DILocation(line: 535, column: 9, scope: !14342)
!14347 = !DILocation(line: 535, column: 2, scope: !14342)
!14348 = distinct !DISubprogram(name: "k_thread_abort", scope: !3751, file: !3751, line: 188, type: !14349, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !14351)
!14349 = !DISubroutineType(types: !14350)
!14350 = !{null, !14345}
!14351 = !{!14352}
!14352 = !DILocalVariable(name: "thread", arg: 1, scope: !14348, file: !3751, line: 188, type: !14345)
!14353 = !DILocation(line: 0, scope: !14348)
!14354 = !DILocation(line: 197, column: 2, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14348, file: !3751, line: 197, column: 2)
!14356 = !{i64 2155061669}
!14357 = !DILocation(line: 198, column: 2, scope: !14348)
!14358 = !DILocation(line: 199, column: 1, scope: !14348)
!14359 = distinct !DISubprogram(name: "z_current_get", scope: !3751, file: !3751, line: 173, type: !14343, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !461)
!14360 = !DILocation(line: 180, column: 2, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14359, file: !3751, line: 180, column: 2)
!14362 = !{i64 2155061601}
!14363 = !DILocation(line: 181, column: 9, scope: !14359)
!14364 = !DILocation(line: 181, column: 2, scope: !14359)
!14365 = distinct !DISubprogram(name: "z_early_memset", scope: !2051, file: !2051, line: 108, type: !14366, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14368)
!14366 = !DISubroutineType(types: !14367)
!14367 = !{null, !102, !103, !344}
!14368 = !{!14369, !14370, !14371}
!14369 = !DILocalVariable(name: "dst", arg: 1, scope: !14365, file: !2051, line: 108, type: !102)
!14370 = !DILocalVariable(name: "c", arg: 2, scope: !14365, file: !2051, line: 108, type: !103)
!14371 = !DILocalVariable(name: "n", arg: 3, scope: !14365, file: !2051, line: 108, type: !344)
!14372 = !DILocation(line: 0, scope: !14365)
!14373 = !DILocation(line: 110, column: 9, scope: !14365)
!14374 = !DILocation(line: 111, column: 1, scope: !14365)
!14375 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2051, file: !2051, line: 121, type: !14376, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14378)
!14376 = !DISubroutineType(types: !14377)
!14377 = !{null, !102, !13, !344}
!14378 = !{!14379, !14380, !14381}
!14379 = !DILocalVariable(name: "dst", arg: 1, scope: !14375, file: !2051, line: 121, type: !102)
!14380 = !DILocalVariable(name: "src", arg: 2, scope: !14375, file: !2051, line: 121, type: !13)
!14381 = !DILocalVariable(name: "n", arg: 3, scope: !14375, file: !2051, line: 121, type: !344)
!14382 = !DILocation(line: 0, scope: !14375)
!14383 = !DILocation(line: 123, column: 9, scope: !14375)
!14384 = !DILocation(line: 124, column: 1, scope: !14375)
!14385 = distinct !DISubprogram(name: "z_bss_zero", scope: !2051, file: !2051, line: 132, type: !3318, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !461)
!14386 = !DILocation(line: 143, column: 2, scope: !14385)
!14387 = !DILocation(line: 168, column: 1, scope: !14385)
!14388 = distinct !DISubprogram(name: "z_init_cpu", scope: !2051, file: !2051, line: 372, type: !8546, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14389)
!14389 = !{!14390}
!14390 = !DILocalVariable(name: "id", arg: 1, scope: !14388, file: !2051, line: 372, type: !103)
!14391 = !DILocation(line: 0, scope: !14388)
!14392 = !DILocation(line: 374, column: 2, scope: !14388)
!14393 = !DILocation(line: 375, column: 34, scope: !14388)
!14394 = !DILocation(line: 375, column: 19, scope: !14388)
!14395 = !DILocation(line: 375, column: 31, scope: !14388)
!14396 = !DILocation(line: 376, column: 24, scope: !14388)
!14397 = !DILocation(line: 376, column: 19, scope: !14388)
!14398 = !DILocation(line: 376, column: 22, scope: !14388)
!14399 = !DILocation(line: 378, column: 26, scope: !14388)
!14400 = !DILocation(line: 378, column: 4, scope: !14388)
!14401 = !DILocation(line: 378, column: 50, scope: !14388)
!14402 = !DILocation(line: 377, column: 19, scope: !14388)
!14403 = !DILocation(line: 377, column: 29, scope: !14388)
!14404 = !DILocation(line: 384, column: 1, scope: !14388)
!14405 = distinct !DISubprogram(name: "init_idle_thread", scope: !2051, file: !2051, line: 343, type: !8546, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14406)
!14406 = !{!14407, !14408, !14409, !14412}
!14407 = !DILocalVariable(name: "i", arg: 1, scope: !14405, file: !2051, line: 343, type: !103)
!14408 = !DILocalVariable(name: "thread", scope: !14405, file: !2051, line: 345, type: !2143)
!14409 = !DILocalVariable(name: "stack", scope: !14405, file: !2051, line: 346, type: !14410)
!14410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14411, size: 32)
!14411 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3630, line: 44, baseType: !2257)
!14412 = !DILocalVariable(name: "tname", scope: !14405, file: !2051, line: 358, type: !1087)
!14413 = !DILocation(line: 0, scope: !14405)
!14414 = !DILocation(line: 345, column: 29, scope: !14405)
!14415 = !DILocation(line: 346, column: 28, scope: !14405)
!14416 = !DILocation(line: 362, column: 37, scope: !14405)
!14417 = !DILocation(line: 362, column: 36, scope: !14405)
!14418 = !DILocation(line: 361, column: 2, scope: !14405)
!14419 = !DILocation(line: 365, column: 2, scope: !14405)
!14420 = !DILocation(line: 370, column: 1, scope: !14405)
!14421 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2258, file: !2258, line: 331, type: !14422, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14424)
!14422 = !DISubroutineType(types: !14423)
!14423 = !{!1087, !14410}
!14424 = !{!14425}
!14425 = !DILocalVariable(name: "sym", arg: 1, scope: !14421, file: !2258, line: 331, type: !14410)
!14426 = !DILocation(line: 0, scope: !14421)
!14427 = !DILocation(line: 333, column: 21, scope: !14421)
!14428 = !DILocation(line: 333, column: 2, scope: !14421)
!14429 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14430, file: !14430, line: 155, type: !14431, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14433)
!14430 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14431 = !DISubroutineType(types: !14432)
!14432 = !{null, !2143}
!14433 = !{!14434}
!14434 = !DILocalVariable(name: "thread", arg: 1, scope: !14429, file: !14430, line: 155, type: !2143)
!14435 = !DILocation(line: 0, scope: !14429)
!14436 = !DILocation(line: 157, column: 15, scope: !14429)
!14437 = !DILocation(line: 157, column: 28, scope: !14429)
!14438 = !DILocation(line: 158, column: 1, scope: !14429)
!14439 = distinct !DISubprogram(name: "z_cstart", scope: !2051, file: !2051, line: 501, type: !3318, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14440)
!14440 = !{!14441}
!14441 = !DILocalVariable(name: "dummy_thread", scope: !14439, file: !2051, line: 518, type: !2144)
!14442 = !DILocation(line: 507, column: 2, scope: !14439)
!14443 = !DILocation(line: 43, column: 14, scope: !14444, inlinedAt: !14448)
!14444 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14445, file: !14445, line: 40, type: !3318, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14446)
!14445 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14446 = !{!14447}
!14447 = !DILocalVariable(name: "msp", scope: !14444, file: !14445, line: 42, type: !121)
!14448 = distinct !DILocation(line: 44, column: 2, scope: !14449, inlinedAt: !14451)
!14449 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14450, file: !14450, line: 42, type: !3318, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !461)
!14450 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14451 = distinct !DILocation(line: 510, column: 2, scope: !14439)
!14452 = !DILocation(line: 43, column: 3, scope: !14444, inlinedAt: !14448)
!14453 = !DILocation(line: 43, column: 60, scope: !14444, inlinedAt: !14448)
!14454 = !DILocation(line: 0, scope: !14444, inlinedAt: !14448)
!14455 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14456, file: !6904, line: 1153, type: !121)
!14456 = distinct !DISubprogram(name: "__set_MSP", scope: !6904, file: !6904, line: 1153, type: !6995, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14457)
!14457 = !{!14455}
!14458 = !DILocation(line: 0, scope: !14456, inlinedAt: !14459)
!14459 = distinct !DILocation(line: 46, column: 2, scope: !14444, inlinedAt: !14448)
!14460 = !DILocation(line: 1155, column: 3, scope: !14456, inlinedAt: !14459)
!14461 = !{i64 3746037}
!14462 = !DILocation(line: 62, column: 11, scope: !14444, inlinedAt: !14448)
!14463 = !DILocation(line: 102, column: 2, scope: !14464, inlinedAt: !14465)
!14464 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7698, file: !7698, line: 97, type: !3318, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !461)
!14465 = distinct !DILocation(line: 45, column: 2, scope: !14449, inlinedAt: !14451)
!14466 = !DILocation(line: 108, column: 2, scope: !14464, inlinedAt: !14465)
!14467 = !DILocation(line: 112, column: 2, scope: !14464, inlinedAt: !14465)
!14468 = !DILocation(line: 113, column: 2, scope: !14464, inlinedAt: !14465)
!14469 = !DILocation(line: 114, column: 2, scope: !14464, inlinedAt: !14465)
!14470 = !DILocation(line: 116, column: 2, scope: !14464, inlinedAt: !14465)
!14471 = !DILocation(line: 123, column: 13, scope: !14464, inlinedAt: !14465)
!14472 = !DILocation(line: 46, column: 2, scope: !14449, inlinedAt: !14451)
!14473 = !DILocation(line: 47, column: 2, scope: !14449, inlinedAt: !14451)
!14474 = !DILocation(line: 174, column: 12, scope: !14475, inlinedAt: !14476)
!14475 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7698, file: !7698, line: 169, type: !3318, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !461)
!14476 = distinct !DILocation(line: 48, column: 2, scope: !14449, inlinedAt: !14451)
!14477 = !DILocation(line: 179, column: 12, scope: !14475, inlinedAt: !14476)
!14478 = !DILocation(line: 50, column: 2, scope: !14449, inlinedAt: !14451)
!14479 = !DILocation(line: 57, column: 2, scope: !14449, inlinedAt: !14451)
!14480 = !DILocation(line: 518, column: 2, scope: !14439)
!14481 = !DILocation(line: 518, column: 18, scope: !14439)
!14482 = !DILocation(line: 520, column: 2, scope: !14439)
!14483 = !DILocation(line: 523, column: 2, scope: !14439)
!14484 = !DILocation(line: 526, column: 2, scope: !14439)
!14485 = !DILocation(line: 527, column: 2, scope: !14439)
!14486 = !DILocation(line: 543, column: 24, scope: !14439)
!14487 = !DILocation(line: 543, column: 2, scope: !14439)
!14488 = !DILocation(line: 0, scope: !2277)
!14489 = !DILocation(line: 246, column: 15, scope: !2295)
!14490 = !DILocation(line: 246, column: 36, scope: !2294)
!14491 = !DILocation(line: 246, column: 2, scope: !2295)
!14492 = !DILocation(line: 247, column: 37, scope: !2293)
!14493 = !DILocation(line: 0, scope: !2293)
!14494 = !DILocation(line: 248, column: 19, scope: !2293)
!14495 = !DILocation(line: 248, column: 12, scope: !2293)
!14496 = !DILocation(line: 250, column: 11, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !2293, file: !2051, line: 250, column: 7)
!14498 = !DILocation(line: 250, column: 7, scope: !2293)
!14499 = !DILocation(line: 254, column: 11, scope: !14500)
!14500 = distinct !DILexicalBlock(scope: !14501, file: !2051, line: 254, column: 8)
!14501 = distinct !DILexicalBlock(scope: !14497, file: !2051, line: 250, column: 20)
!14502 = !DILocation(line: 254, column: 8, scope: !14501)
!14503 = !DILocation(line: 255, column: 9, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14500, file: !2051, line: 254, column: 17)
!14505 = !DILocation(line: 258, column: 9, scope: !14504)
!14506 = !DILocation(line: 261, column: 28, scope: !14504)
!14507 = !DILocation(line: 261, column: 10, scope: !14504)
!14508 = !DILocation(line: 261, column: 17, scope: !14504)
!14509 = !DILocation(line: 261, column: 26, scope: !14504)
!14510 = !DILocation(line: 262, column: 4, scope: !14504)
!14511 = !DILocation(line: 263, column: 9, scope: !14501)
!14512 = !DILocation(line: 263, column: 16, scope: !14501)
!14513 = !DILocation(line: 263, column: 28, scope: !14501)
!14514 = !DILocation(line: 264, column: 3, scope: !14501)
!14515 = !DILocation(line: 246, column: 60, scope: !2294)
!14516 = distinct !{!14516, !14491, !14517}
!14517 = !DILocation(line: 265, column: 2, scope: !2295)
!14518 = !DILocation(line: 266, column: 1, scope: !2277)
!14519 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6938, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14520)
!14520 = !{!14521, !14522}
!14521 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14519, file: !495, line: 1814, type: !759)
!14522 = !DILocalVariable(name: "priority", arg: 2, scope: !14519, file: !495, line: 1814, type: !121)
!14523 = !DILocation(line: 0, scope: !14519)
!14524 = !DILocation(line: 1822, column: 48, scope: !14525)
!14525 = distinct !DILexicalBlock(scope: !14526, file: !495, line: 1821, column: 3)
!14526 = distinct !DILexicalBlock(scope: !14519, file: !495, line: 1816, column: 7)
!14527 = !DILocation(line: 1822, column: 32, scope: !14525)
!14528 = !DILocation(line: 1822, column: 40, scope: !14525)
!14529 = !DILocation(line: 1822, column: 5, scope: !14525)
!14530 = !DILocation(line: 1822, column: 46, scope: !14525)
!14531 = !DILocation(line: 1824, column: 1, scope: !14519)
!14532 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14450, file: !14450, line: 32, type: !3318, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!14533 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14534, file: !14534, line: 215, type: !14431, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14535)
!14534 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14535 = !{!14536}
!14536 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14533, file: !14534, line: 215, type: !2143)
!14537 = !DILocation(line: 0, scope: !14533)
!14538 = !DILocation(line: 217, column: 21, scope: !14533)
!14539 = !DILocation(line: 217, column: 34, scope: !14533)
!14540 = !DILocation(line: 221, column: 21, scope: !14533)
!14541 = !DILocation(line: 221, column: 34, scope: !14533)
!14542 = !DILocation(line: 223, column: 27, scope: !14533)
!14543 = !DILocation(line: 223, column: 33, scope: !14533)
!14544 = !DILocation(line: 224, column: 27, scope: !14533)
!14545 = !DILocation(line: 224, column: 32, scope: !14533)
!14546 = !DILocation(line: 232, column: 16, scope: !14533)
!14547 = !DILocation(line: 232, column: 30, scope: !14533)
!14548 = !DILocation(line: 239, column: 24, scope: !14533)
!14549 = !DILocation(line: 240, column: 1, scope: !14533)
!14550 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2051, file: !2051, line: 399, type: !14551, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14553)
!14551 = !DISubroutineType(types: !14552)
!14552 = !{!1087}
!14553 = !{!14554}
!14554 = !DILocalVariable(name: "stack_ptr", scope: !14550, file: !2051, line: 401, type: !1087)
!14555 = !DILocation(line: 404, column: 2, scope: !14550)
!14556 = !DILocation(line: 416, column: 24, scope: !14550)
!14557 = !DILocation(line: 418, column: 14, scope: !14550)
!14558 = !DILocation(line: 0, scope: !14550)
!14559 = !DILocation(line: 423, column: 2, scope: !14550)
!14560 = !DILocation(line: 424, column: 2, scope: !14550)
!14561 = !DILocation(line: 426, column: 2, scope: !14550)
!14562 = !DILocation(line: 428, column: 2, scope: !14550)
!14563 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2051, file: !2051, line: 432, type: !14564, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14566)
!14564 = !DISubroutineType(types: !14565)
!14565 = !{null, !1087}
!14566 = !{!14567}
!14567 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14563, file: !2051, line: 432, type: !1087)
!14568 = !DILocation(line: 0, scope: !14563)
!14569 = !DILocation(line: 435, column: 2, scope: !14563)
!14570 = !DILocation(line: 445, column: 2, scope: !14563)
!14571 = distinct !DISubprogram(name: "bg_thread_main", scope: !2051, file: !2051, line: 277, type: !3632, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !14572)
!14572 = !{!14573, !14574, !14575}
!14573 = !DILocalVariable(name: "unused1", arg: 1, scope: !14571, file: !2051, line: 277, type: !102)
!14574 = !DILocalVariable(name: "unused2", arg: 2, scope: !14571, file: !2051, line: 277, type: !102)
!14575 = !DILocalVariable(name: "unused3", arg: 3, scope: !14571, file: !2051, line: 277, type: !102)
!14576 = !DILocation(line: 0, scope: !14571)
!14577 = !DILocation(line: 291, column: 20, scope: !14571)
!14578 = !DILocation(line: 293, column: 2, scope: !14571)
!14579 = !DILocation(line: 297, column: 2, scope: !14571)
!14580 = !DILocation(line: 305, column: 2, scope: !14571)
!14581 = !DILocation(line: 307, column: 2, scope: !14571)
!14582 = !DILocation(line: 330, column: 8, scope: !14571)
!14583 = !DILocation(line: 333, column: 34, scope: !14571)
!14584 = !DILocation(line: 339, column: 1, scope: !14571)
!14585 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2306, file: !2306, line: 45, type: !14586, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14594)
!14586 = !DISubroutineType(types: !14587)
!14587 = !{null, !14588, !102}
!14588 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !300, line: 103, baseType: !14589)
!14589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14590, size: 32)
!14590 = !DISubroutineType(types: !14591)
!14591 = !{null, !14592, !102}
!14592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14593, size: 32)
!14593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2311)
!14594 = !{!14595, !14596}
!14595 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14585, file: !2306, line: 45, type: !14588)
!14596 = !DILocalVariable(name: "user_data", arg: 2, scope: !14585, file: !2306, line: 45, type: !102)
!14597 = !DILocation(line: 0, scope: !14585)
!14598 = !DILocation(line: 71, column: 1, scope: !14585)
!14599 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2306, file: !2306, line: 73, type: !14586, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14600)
!14600 = !{!14601, !14602}
!14601 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14599, file: !2306, line: 73, type: !14588)
!14602 = !DILocalVariable(name: "user_data", arg: 2, scope: !14599, file: !2306, line: 73, type: !102)
!14603 = !DILocation(line: 0, scope: !14599)
!14604 = !DILocation(line: 95, column: 1, scope: !14599)
!14605 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2306, file: !2306, line: 97, type: !7699, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !461)
!14606 = !DILocation(line: 1031, column: 3, scope: !14607, inlinedAt: !14610)
!14607 = distinct !DISubprogram(name: "__get_IPSR", scope: !6904, file: !6904, line: 1027, type: !6985, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14608)
!14608 = !{!14609}
!14609 = !DILocalVariable(name: "result", scope: !14607, file: !6904, line: 1029, type: !121)
!14610 = distinct !DILocation(line: 48, column: 10, scope: !14611, inlinedAt: !14612)
!14611 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7698, file: !7698, line: 46, type: !7699, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !461)
!14612 = distinct !DILocation(line: 99, column: 9, scope: !14605)
!14613 = !{i64 3751688}
!14614 = !DILocation(line: 0, scope: !14607, inlinedAt: !14610)
!14615 = !DILocation(line: 48, column: 9, scope: !14611, inlinedAt: !14612)
!14616 = !DILocation(line: 99, column: 2, scope: !14605)
!14617 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2306, file: !2306, line: 106, type: !3318, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !461)
!14618 = !DILocation(line: 108, column: 2, scope: !14617)
!14619 = !DILocation(line: 108, column: 17, scope: !14617)
!14620 = !DILocation(line: 108, column: 30, scope: !14617)
!14621 = !DILocation(line: 109, column: 1, scope: !14617)
!14622 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2306, file: !2306, line: 116, type: !3318, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !461)
!14623 = !DILocation(line: 118, column: 2, scope: !14622)
!14624 = !DILocation(line: 118, column: 17, scope: !14622)
!14625 = !DILocation(line: 118, column: 30, scope: !14622)
!14626 = !DILocation(line: 119, column: 1, scope: !14622)
!14627 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2306, file: !2306, line: 126, type: !7699, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !461)
!14628 = !DILocation(line: 128, column: 10, scope: !14627)
!14629 = !DILocation(line: 128, column: 25, scope: !14627)
!14630 = !DILocation(line: 128, column: 38, scope: !14627)
!14631 = !DILocation(line: 128, column: 53, scope: !14627)
!14632 = !DILocation(line: 128, column: 2, scope: !14627)
!14633 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2306, file: !2306, line: 187, type: !14634, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14636)
!14634 = !DISubroutineType(types: !14635)
!14635 = !{!103, !2310, !144}
!14636 = !{!14637, !14638}
!14637 = !DILocalVariable(name: "thread", arg: 1, scope: !14633, file: !2306, line: 187, type: !2310)
!14638 = !DILocalVariable(name: "value", arg: 2, scope: !14633, file: !2306, line: 187, type: !144)
!14639 = !DILocation(line: 0, scope: !14633)
!14640 = !DILocation(line: 206, column: 2, scope: !14633)
!14641 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2306, file: !2306, line: 238, type: !14642, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14644)
!14642 = !DISubroutineType(types: !14643)
!14643 = !{!144, !2310}
!14644 = !{!14645}
!14645 = !DILocalVariable(name: "thread", arg: 1, scope: !14641, file: !2306, line: 238, type: !2310)
!14646 = !DILocation(line: 0, scope: !14641)
!14647 = !DILocation(line: 244, column: 2, scope: !14641)
!14648 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2306, file: !2306, line: 248, type: !14649, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14651)
!14649 = !DISubroutineType(types: !14650)
!14650 = !{!103, !2309, !1087, !344}
!14651 = !{!14652, !14653, !14654}
!14652 = !DILocalVariable(name: "thread", arg: 1, scope: !14648, file: !2306, line: 248, type: !2309)
!14653 = !DILocalVariable(name: "buf", arg: 2, scope: !14648, file: !2306, line: 248, type: !1087)
!14654 = !DILocalVariable(name: "size", arg: 3, scope: !14648, file: !2306, line: 248, type: !344)
!14655 = !DILocation(line: 0, scope: !14648)
!14656 = !DILocation(line: 257, column: 2, scope: !14648)
!14657 = !DILocation(line: 0, scope: !2305)
!14658 = !DILocation(line: 281, column: 11, scope: !14659)
!14659 = distinct !DILexicalBlock(scope: !2305, file: !2306, line: 281, column: 6)
!14660 = !DILocation(line: 281, column: 20, scope: !14659)
!14661 = !DILocation(line: 275, column: 45, scope: !2305)
!14662 = !DILocation(line: 285, column: 10, scope: !2305)
!14663 = !DILocation(line: 0, scope: !2426)
!14664 = !DILocation(line: 293, column: 39, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !2426, file: !2306, line: 293, column: 2)
!14666 = !DILocation(line: 293, column: 2, scope: !2426)
!14667 = !DILocation(line: 273, column: 14, scope: !2305)
!14668 = !DILocation(line: 309, column: 2, scope: !2305)
!14669 = !DILocation(line: 309, column: 11, scope: !2305)
!14670 = !DILocation(line: 311, column: 2, scope: !2305)
!14671 = !DILocation(line: 293, column: 26, scope: !14665)
!14672 = !DILocation(line: 294, column: 9, scope: !14673)
!14673 = distinct !DILexicalBlock(scope: !14665, file: !2306, line: 293, column: 54)
!14674 = !DILocation(line: 295, column: 21, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14673, file: !2306, line: 295, column: 7)
!14676 = !DILocation(line: 295, column: 28, scope: !14675)
!14677 = !DILocation(line: 295, column: 7, scope: !14673)
!14678 = !DILocation(line: 299, column: 25, scope: !14673)
!14679 = !DILocation(line: 299, column: 41, scope: !14673)
!14680 = !DILocation(line: 300, column: 7, scope: !14673)
!14681 = !DILocation(line: 300, column: 26, scope: !14673)
!14682 = !DILocation(line: 299, column: 10, scope: !14673)
!14683 = !DILocation(line: 299, column: 7, scope: !14673)
!14684 = !DILocation(line: 302, column: 16, scope: !14673)
!14685 = !DILocation(line: 304, column: 20, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14673, file: !2306, line: 304, column: 7)
!14687 = !DILocation(line: 304, column: 7, scope: !14673)
!14688 = !DILocation(line: 305, column: 26, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14686, file: !2306, line: 304, column: 26)
!14690 = !DILocation(line: 305, column: 42, scope: !14689)
!14691 = !DILocation(line: 305, column: 11, scope: !14689)
!14692 = !DILocation(line: 305, column: 8, scope: !14689)
!14693 = !DILocation(line: 306, column: 3, scope: !14689)
!14694 = !DILocation(line: 293, column: 50, scope: !14665)
!14695 = !DILocation(line: 312, column: 1, scope: !2305)
!14696 = distinct !DISubprogram(name: "copy_bytes", scope: !2306, file: !2306, line: 261, type: !14697, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14699)
!14697 = !DISubroutineType(types: !14698)
!14698 = !{!344, !1087, !344, !144, !344}
!14699 = !{!14700, !14701, !14702, !14703, !14704}
!14700 = !DILocalVariable(name: "dest", arg: 1, scope: !14696, file: !2306, line: 261, type: !1087)
!14701 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14696, file: !2306, line: 261, type: !344)
!14702 = !DILocalVariable(name: "src", arg: 3, scope: !14696, file: !2306, line: 261, type: !144)
!14703 = !DILocalVariable(name: "src_size", arg: 4, scope: !14696, file: !2306, line: 261, type: !344)
!14704 = !DILocalVariable(name: "bytes_to_copy", scope: !14696, file: !2306, line: 263, type: !344)
!14705 = !DILocation(line: 0, scope: !14696)
!14706 = !DILocation(line: 265, column: 18, scope: !14696)
!14707 = !DILocation(line: 266, column: 2, scope: !14696)
!14708 = !DILocation(line: 268, column: 2, scope: !14696)
!14709 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2306, file: !2306, line: 383, type: !14710, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14712)
!14710 = !DISubroutineType(types: !14711)
!14711 = !{null, !2310}
!14712 = !{!14713}
!14713 = !DILocalVariable(name: "thread", arg: 1, scope: !14709, file: !2306, line: 383, type: !2310)
!14714 = !DILocation(line: 0, scope: !14709)
!14715 = !DILocation(line: 387, column: 2, scope: !14709)
!14716 = !DILocation(line: 388, column: 1, scope: !14709)
!14717 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2306, file: !2306, line: 528, type: !14718, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14725)
!14718 = !DISubroutineType(types: !14719)
!14719 = !{!1087, !2310, !14720, !344, !3629, !102, !102, !102, !103, !121, !144}
!14720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14721, size: 32)
!14721 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3630, line: 44, baseType: !14722)
!14722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2258, line: 47, size: 8, elements: !14723)
!14723 = !{!14724}
!14724 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14722, file: !2258, line: 48, baseType: !146, size: 8)
!14725 = !{!14726, !14727, !14728, !14729, !14730, !14731, !14732, !14733, !14734, !14735, !14736}
!14726 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14717, file: !2306, line: 528, type: !2310)
!14727 = !DILocalVariable(name: "stack", arg: 2, scope: !14717, file: !2306, line: 529, type: !14720)
!14728 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14717, file: !2306, line: 529, type: !344)
!14729 = !DILocalVariable(name: "entry", arg: 4, scope: !14717, file: !2306, line: 530, type: !3629)
!14730 = !DILocalVariable(name: "p1", arg: 5, scope: !14717, file: !2306, line: 531, type: !102)
!14731 = !DILocalVariable(name: "p2", arg: 6, scope: !14717, file: !2306, line: 531, type: !102)
!14732 = !DILocalVariable(name: "p3", arg: 7, scope: !14717, file: !2306, line: 531, type: !102)
!14733 = !DILocalVariable(name: "prio", arg: 8, scope: !14717, file: !2306, line: 532, type: !103)
!14734 = !DILocalVariable(name: "options", arg: 9, scope: !14717, file: !2306, line: 532, type: !121)
!14735 = !DILocalVariable(name: "name", arg: 10, scope: !14717, file: !2306, line: 532, type: !144)
!14736 = !DILocalVariable(name: "stack_ptr", scope: !14717, file: !2306, line: 534, type: !1087)
!14737 = !DILocation(line: 0, scope: !14717)
!14738 = !DILocation(line: 550, column: 28, scope: !14717)
!14739 = !DILocation(line: 550, column: 2, scope: !14717)
!14740 = !DILocation(line: 553, column: 34, scope: !14717)
!14741 = !DILocation(line: 553, column: 2, scope: !14717)
!14742 = !DILocation(line: 554, column: 14, scope: !14717)
!14743 = !DILocation(line: 564, column: 2, scope: !14717)
!14744 = !DILocation(line: 567, column: 14, scope: !14717)
!14745 = !DILocation(line: 567, column: 24, scope: !14717)
!14746 = !DILocation(line: 612, column: 7, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14717, file: !2306, line: 612, column: 6)
!14748 = !DILocation(line: 612, column: 6, scope: !14717)
!14749 = !DILocation(line: 627, column: 40, scope: !14717)
!14750 = !DILocation(line: 637, column: 2, scope: !14717)
!14751 = !DILocation(line: 613, column: 15, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14747, file: !2306, line: 612, column: 17)
!14753 = !DILocation(line: 613, column: 29, scope: !14752)
!14754 = !DILocation(line: 638, column: 1, scope: !14717)
!14755 = distinct !DISubprogram(name: "z_waitq_init", scope: !14756, file: !14756, line: 47, type: !14757, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14759)
!14756 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14757 = !DISubroutineType(types: !14758)
!14758 = !{null, !2341}
!14759 = !{!14760}
!14760 = !DILocalVariable(name: "w", arg: 1, scope: !14755, file: !14756, line: 47, type: !2341)
!14761 = !DILocation(line: 0, scope: !14755)
!14762 = !DILocation(line: 49, column: 21, scope: !14755)
!14763 = !DILocation(line: 49, column: 2, scope: !14755)
!14764 = !DILocation(line: 50, column: 1, scope: !14755)
!14765 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2306, file: !2306, line: 791, type: !14766, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14769)
!14766 = !DISubroutineType(types: !14767)
!14767 = !{null, !14768, !103, !121, !32}
!14768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 32)
!14769 = !{!14770, !14771, !14772, !14773}
!14770 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14765, file: !2306, line: 791, type: !14768)
!14771 = !DILocalVariable(name: "priority", arg: 2, scope: !14765, file: !2306, line: 791, type: !103)
!14772 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14765, file: !2306, line: 792, type: !121)
!14773 = !DILocalVariable(name: "options", arg: 4, scope: !14765, file: !2306, line: 792, type: !32)
!14774 = !DILocation(line: 0, scope: !14765)
!14775 = !DILocation(line: 795, column: 15, scope: !14765)
!14776 = !DILocation(line: 795, column: 25, scope: !14765)
!14777 = !DILocation(line: 796, column: 30, scope: !14765)
!14778 = !DILocation(line: 796, column: 15, scope: !14765)
!14779 = !DILocation(line: 796, column: 28, scope: !14765)
!14780 = !DILocation(line: 797, column: 30, scope: !14765)
!14781 = !DILocation(line: 797, column: 15, scope: !14765)
!14782 = !DILocation(line: 797, column: 28, scope: !14765)
!14783 = !DILocation(line: 799, column: 22, scope: !14765)
!14784 = !DILocation(line: 799, column: 15, scope: !14765)
!14785 = !DILocation(line: 799, column: 20, scope: !14765)
!14786 = !DILocation(line: 801, column: 15, scope: !14765)
!14787 = !DILocation(line: 801, column: 28, scope: !14765)
!14788 = !DILocation(line: 814, column: 2, scope: !14765)
!14789 = !DILocation(line: 815, column: 1, scope: !14765)
!14790 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2306, file: !2306, line: 449, type: !14791, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14793)
!14791 = !DISubroutineType(types: !14792)
!14792 = !{!1087, !2310, !14720, !344}
!14793 = !{!14794, !14795, !14796, !14797, !14798, !14799, !14800, !14801}
!14794 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14790, file: !2306, line: 449, type: !2310)
!14795 = !DILocalVariable(name: "stack", arg: 2, scope: !14790, file: !2306, line: 450, type: !14720)
!14796 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14790, file: !2306, line: 450, type: !344)
!14797 = !DILocalVariable(name: "stack_obj_size", scope: !14790, file: !2306, line: 452, type: !344)
!14798 = !DILocalVariable(name: "stack_buf_size", scope: !14790, file: !2306, line: 452, type: !344)
!14799 = !DILocalVariable(name: "stack_ptr", scope: !14790, file: !2306, line: 453, type: !1087)
!14800 = !DILocalVariable(name: "stack_buf_start", scope: !14790, file: !2306, line: 453, type: !1087)
!14801 = !DILocalVariable(name: "delta", scope: !14790, file: !2306, line: 454, type: !344)
!14802 = !DILocation(line: 0, scope: !14790)
!14803 = !DILocation(line: 465, column: 20, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14790, file: !2306, line: 463, column: 2)
!14805 = !DILocation(line: 466, column: 21, scope: !14804)
!14806 = !DILocation(line: 473, column: 28, scope: !14790)
!14807 = !DILocation(line: 514, column: 33, scope: !14790)
!14808 = !DILocation(line: 514, column: 25, scope: !14790)
!14809 = !DILocation(line: 514, column: 31, scope: !14790)
!14810 = !DILocation(line: 515, column: 25, scope: !14790)
!14811 = !DILocation(line: 515, column: 30, scope: !14790)
!14812 = !DILocation(line: 516, column: 25, scope: !14790)
!14813 = !DILocation(line: 516, column: 31, scope: !14790)
!14814 = !DILocation(line: 520, column: 2, scope: !14790)
!14815 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2258, file: !2258, line: 331, type: !14816, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14818)
!14816 = !DISubroutineType(types: !14817)
!14817 = !{!1087, !14720}
!14818 = !{!14819}
!14819 = !DILocalVariable(name: "sym", arg: 1, scope: !14815, file: !2258, line: 331, type: !14720)
!14820 = !DILocation(line: 0, scope: !14815)
!14821 = !DILocation(line: 333, column: 21, scope: !14815)
!14822 = !DILocation(line: 333, column: 2, scope: !14815)
!14823 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14824, file: !14824, line: 40, type: !14825, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14827)
!14824 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14825 = !DISubroutineType(types: !14826)
!14826 = !{null, !14768}
!14827 = !{!14828}
!14828 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14823, file: !14824, line: 40, type: !14768)
!14829 = !DILocation(line: 0, scope: !14823)
!14830 = !DILocation(line: 42, column: 31, scope: !14823)
!14831 = !DILocation(line: 42, column: 2, scope: !14823)
!14832 = !DILocation(line: 43, column: 1, scope: !14823)
!14833 = distinct !DISubprogram(name: "z_init_timeout", scope: !14824, file: !14824, line: 25, type: !2367, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14834)
!14834 = !{!14835}
!14835 = !DILocalVariable(name: "to", arg: 1, scope: !14833, file: !14824, line: 25, type: !2369)
!14836 = !DILocation(line: 0, scope: !14833)
!14837 = !DILocation(line: 27, column: 22, scope: !14833)
!14838 = !DILocation(line: 27, column: 2, scope: !14833)
!14839 = !DILocation(line: 28, column: 1, scope: !14833)
!14840 = distinct !DISubprogram(name: "sys_dnode_init", scope: !309, file: !309, line: 211, type: !14841, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14843)
!14841 = !DISubroutineType(types: !14842)
!14842 = !{null, !2413}
!14843 = !{!14844}
!14844 = !DILocalVariable(name: "node", arg: 1, scope: !14840, file: !309, line: 211, type: !2413)
!14845 = !DILocation(line: 0, scope: !14840)
!14846 = !DILocation(line: 213, column: 8, scope: !14840)
!14847 = !DILocation(line: 213, column: 13, scope: !14840)
!14848 = !DILocation(line: 214, column: 8, scope: !14840)
!14849 = !DILocation(line: 214, column: 13, scope: !14840)
!14850 = !DILocation(line: 215, column: 1, scope: !14840)
!14851 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !14852, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14855)
!14852 = !DISubroutineType(types: !14853)
!14853 = !{null, !14854}
!14854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 32)
!14855 = !{!14856}
!14856 = !DILocalVariable(name: "list", arg: 1, scope: !14851, file: !309, line: 197, type: !14854)
!14857 = !DILocation(line: 0, scope: !14851)
!14858 = !DILocation(line: 199, column: 8, scope: !14851)
!14859 = !DILocation(line: 199, column: 13, scope: !14851)
!14860 = !DILocation(line: 200, column: 8, scope: !14851)
!14861 = !DILocation(line: 200, column: 13, scope: !14851)
!14862 = !DILocation(line: 201, column: 1, scope: !14851)
!14863 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2306, file: !2306, line: 641, type: !14864, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14870)
!14864 = !DISubroutineType(types: !14865)
!14865 = !{!2309, !2310, !14720, !344, !3629, !102, !102, !102, !103, !121, !14866}
!14866 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1790, line: 67, baseType: !14867)
!14867 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1790, line: 65, size: 64, elements: !14868)
!14868 = !{!14869}
!14869 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14867, file: !1790, line: 66, baseType: !1789, size: 64)
!14870 = !{!14871, !14872, !14873, !14874, !14875, !14876, !14877, !14878, !14879, !14880}
!14871 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14863, file: !2306, line: 641, type: !2310)
!14872 = !DILocalVariable(name: "stack", arg: 2, scope: !14863, file: !2306, line: 642, type: !14720)
!14873 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14863, file: !2306, line: 643, type: !344)
!14874 = !DILocalVariable(name: "entry", arg: 4, scope: !14863, file: !2306, line: 643, type: !3629)
!14875 = !DILocalVariable(name: "p1", arg: 5, scope: !14863, file: !2306, line: 644, type: !102)
!14876 = !DILocalVariable(name: "p2", arg: 6, scope: !14863, file: !2306, line: 644, type: !102)
!14877 = !DILocalVariable(name: "p3", arg: 7, scope: !14863, file: !2306, line: 644, type: !102)
!14878 = !DILocalVariable(name: "prio", arg: 8, scope: !14863, file: !2306, line: 645, type: !103)
!14879 = !DILocalVariable(name: "options", arg: 9, scope: !14863, file: !2306, line: 645, type: !121)
!14880 = !DILocalVariable(name: "delay", arg: 10, scope: !14863, file: !2306, line: 645, type: !14866)
!14881 = !DILocation(line: 0, scope: !14863)
!14882 = !DILocation(line: 649, column: 2, scope: !14863)
!14883 = !DILocation(line: 652, column: 7, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14863, file: !2306, line: 652, column: 6)
!14885 = !DILocation(line: 652, column: 6, scope: !14863)
!14886 = !DILocation(line: 653, column: 3, scope: !14887)
!14887 = distinct !DILexicalBlock(scope: !14884, file: !2306, line: 652, column: 39)
!14888 = !DILocation(line: 654, column: 2, scope: !14887)
!14889 = !DILocation(line: 656, column: 2, scope: !14863)
!14890 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2306, file: !2306, line: 401, type: !14891, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14893)
!14891 = !DISubroutineType(types: !14892)
!14892 = !{null, !2310, !14866}
!14893 = !{!14894, !14895}
!14894 = !DILocalVariable(name: "thread", arg: 1, scope: !14890, file: !2306, line: 401, type: !2310)
!14895 = !DILocalVariable(name: "delay", arg: 2, scope: !14890, file: !2306, line: 401, type: !14866)
!14896 = !DILocation(line: 0, scope: !14890)
!14897 = !DILocation(line: 404, column: 6, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14890, file: !2306, line: 404, column: 6)
!14899 = !DILocation(line: 404, column: 6, scope: !14890)
!14900 = !DILocation(line: 405, column: 3, scope: !14901)
!14901 = distinct !DILexicalBlock(scope: !14898, file: !2306, line: 404, column: 38)
!14902 = !DILocation(line: 406, column: 2, scope: !14901)
!14903 = !DILocation(line: 407, column: 3, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14898, file: !2306, line: 406, column: 9)
!14905 = !DILocation(line: 413, column: 1, scope: !14890)
!14906 = distinct !DISubprogram(name: "k_thread_start", scope: !3751, file: !3751, line: 205, type: !14907, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14909)
!14907 = !DISubroutineType(types: !14908)
!14908 = !{null, !2309}
!14909 = !{!14910}
!14910 = !DILocalVariable(name: "thread", arg: 1, scope: !14906, file: !3751, line: 205, type: !2309)
!14911 = !DILocation(line: 0, scope: !14906)
!14912 = !DILocation(line: 214, column: 2, scope: !14913)
!14913 = distinct !DILexicalBlock(scope: !14906, file: !3751, line: 214, column: 2)
!14914 = !{i64 2155086893}
!14915 = !DILocation(line: 215, column: 2, scope: !14906)
!14916 = !DILocation(line: 216, column: 1, scope: !14906)
!14917 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14824, file: !14824, line: 47, type: !14891, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14918)
!14918 = !{!14919, !14920}
!14919 = !DILocalVariable(name: "thread", arg: 1, scope: !14917, file: !14824, line: 47, type: !2310)
!14920 = !DILocalVariable(name: "ticks", arg: 2, scope: !14917, file: !14824, line: 47, type: !14866)
!14921 = !DILocation(line: 0, scope: !14917)
!14922 = !DILocation(line: 49, column: 30, scope: !14917)
!14923 = !DILocation(line: 49, column: 2, scope: !14917)
!14924 = !DILocation(line: 50, column: 1, scope: !14917)
!14925 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2306, file: !2306, line: 748, type: !3318, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14926)
!14926 = !{!14927, !14945}
!14927 = !DILocalVariable(name: "thread_data", scope: !14928, file: !2306, line: 750, type: !14929)
!14928 = distinct !DILexicalBlock(scope: !14925, file: !2306, line: 750, column: 2)
!14929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14930, size: 32)
!14930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !300, line: 620, size: 384, elements: !14931)
!14931 = !{!14932, !14933, !14934, !14935, !14936, !14937, !14938, !14939, !14940, !14941, !14942, !14944}
!14932 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14930, file: !300, line: 621, baseType: !2310, size: 32)
!14933 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14930, file: !300, line: 622, baseType: !14720, size: 32, offset: 32)
!14934 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14930, file: !300, line: 623, baseType: !32, size: 32, offset: 64)
!14935 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14930, file: !300, line: 624, baseType: !3629, size: 32, offset: 96)
!14936 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14930, file: !300, line: 625, baseType: !102, size: 32, offset: 128)
!14937 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14930, file: !300, line: 626, baseType: !102, size: 32, offset: 160)
!14938 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14930, file: !300, line: 627, baseType: !102, size: 32, offset: 192)
!14939 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14930, file: !300, line: 628, baseType: !103, size: 32, offset: 224)
!14940 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14930, file: !300, line: 629, baseType: !121, size: 32, offset: 256)
!14941 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14930, file: !300, line: 630, baseType: !332, size: 32, offset: 288)
!14942 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14930, file: !300, line: 631, baseType: !14943, size: 32, offset: 320)
!14943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 32)
!14944 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14930, file: !300, line: 632, baseType: !144, size: 32, offset: 352)
!14945 = !DILocalVariable(name: "thread_data", scope: !14946, file: !2306, line: 781, type: !14929)
!14946 = distinct !DILexicalBlock(scope: !14925, file: !2306, line: 781, column: 2)
!14947 = !DILocation(line: 0, scope: !14928)
!14948 = !DILocation(line: 750, column: 2, scope: !14928)
!14949 = !DILocation(line: 780, column: 2, scope: !14925)
!14950 = !DILocation(line: 0, scope: !14946)
!14951 = !DILocation(line: 781, column: 2, scope: !14946)
!14952 = !DILocation(line: 752, column: 17, scope: !14953)
!14953 = distinct !DILexicalBlock(scope: !14954, file: !2306, line: 750, column: 38)
!14954 = distinct !DILexicalBlock(scope: !14928, file: !2306, line: 750, column: 2)
!14955 = !DILocation(line: 753, column: 17, scope: !14953)
!14956 = !DILocation(line: 754, column: 17, scope: !14953)
!14957 = !DILocation(line: 755, column: 17, scope: !14953)
!14958 = !DILocation(line: 756, column: 17, scope: !14953)
!14959 = !DILocation(line: 757, column: 17, scope: !14953)
!14960 = !DILocation(line: 758, column: 17, scope: !14953)
!14961 = !DILocation(line: 759, column: 17, scope: !14953)
!14962 = !DILocation(line: 760, column: 17, scope: !14953)
!14963 = !DILocation(line: 751, column: 3, scope: !14953)
!14964 = !DILocation(line: 763, column: 16, scope: !14953)
!14965 = !DILocation(line: 763, column: 29, scope: !14953)
!14966 = !DILocation(line: 763, column: 39, scope: !14953)
!14967 = !DILocation(line: 750, column: 2, scope: !14954)
!14968 = !DILocation(line: 750, column: 2, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14954, file: !2306, line: 750, column: 2)
!14970 = distinct !{!14970, !14948, !14971}
!14971 = !DILocation(line: 764, column: 2, scope: !14928)
!14972 = !DILocation(line: 787, column: 2, scope: !14925)
!14973 = !DILocation(line: 788, column: 1, scope: !14925)
!14974 = !DILocation(line: 782, column: 20, scope: !14975)
!14975 = distinct !DILexicalBlock(scope: !14976, file: !2306, line: 782, column: 7)
!14976 = distinct !DILexicalBlock(scope: !14977, file: !2306, line: 781, column: 38)
!14977 = distinct !DILexicalBlock(scope: !14946, file: !2306, line: 781, column: 2)
!14978 = !DILocation(line: 782, column: 31, scope: !14975)
!14979 = !DILocation(line: 782, column: 7, scope: !14976)
!14980 = !DILocation(line: 783, column: 37, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14975, file: !2306, line: 782, column: 51)
!14982 = !DILocation(line: 784, column: 10, scope: !14981)
!14983 = !DILocation(line: 783, column: 4, scope: !14981)
!14984 = !DILocation(line: 785, column: 3, scope: !14981)
!14985 = !DILocation(line: 781, column: 2, scope: !14977)
!14986 = !DILocation(line: 781, column: 2, scope: !14987)
!14987 = distinct !DILexicalBlock(scope: !14977, file: !2306, line: 781, column: 2)
!14988 = distinct !{!14988, !14951, !14989}
!14989 = !DILocation(line: 786, column: 2, scope: !14946)
!14990 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !6084, file: !6084, line: 403, type: !6085, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14991)
!14991 = !{!14992}
!14992 = !DILocalVariable(name: "t", arg: 1, scope: !14990, file: !6084, line: 403, type: !1611)
!14993 = !DILocation(line: 0, scope: !14990)
!14994 = !DILocalVariable(name: "t", arg: 1, scope: !14995, file: !6084, line: 102, type: !1611)
!14995 = distinct !DISubprogram(name: "z_tmcvt", scope: !6084, file: !6084, line: 102, type: !6092, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !14996)
!14996 = !{!14994, !14997, !14998, !14999, !15000, !15001, !15002, !15003, !15004, !15005, !15006}
!14997 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14995, file: !6084, line: 102, type: !121)
!14998 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14995, file: !6084, line: 103, type: !121)
!14999 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14995, file: !6084, line: 103, type: !157)
!15000 = !DILocalVariable(name: "result32", arg: 5, scope: !14995, file: !6084, line: 104, type: !157)
!15001 = !DILocalVariable(name: "round_up", arg: 6, scope: !14995, file: !6084, line: 104, type: !157)
!15002 = !DILocalVariable(name: "round_off", arg: 7, scope: !14995, file: !6084, line: 105, type: !157)
!15003 = !DILocalVariable(name: "mul_ratio", scope: !14995, file: !6084, line: 107, type: !157)
!15004 = !DILocalVariable(name: "div_ratio", scope: !14995, file: !6084, line: 109, type: !157)
!15005 = !DILocalVariable(name: "off", scope: !14995, file: !6084, line: 116, type: !1611)
!15006 = !DILocalVariable(name: "rdivisor", scope: !15007, file: !6084, line: 119, type: !121)
!15007 = distinct !DILexicalBlock(scope: !15008, file: !6084, line: 118, column: 18)
!15008 = distinct !DILexicalBlock(scope: !14995, file: !6084, line: 118, column: 6)
!15009 = !DILocation(line: 0, scope: !14995, inlinedAt: !15010)
!15010 = distinct !DILocation(line: 406, column: 9, scope: !14990)
!15011 = !DILocation(line: 145, column: 13, scope: !15012, inlinedAt: !15010)
!15012 = distinct !DILexicalBlock(scope: !15013, file: !6084, line: 144, column: 10)
!15013 = distinct !DILexicalBlock(scope: !15014, file: !6084, line: 142, column: 7)
!15014 = distinct !DILexicalBlock(scope: !15015, file: !6084, line: 141, column: 24)
!15015 = distinct !DILexicalBlock(scope: !15016, file: !6084, line: 141, column: 13)
!15016 = distinct !DILexicalBlock(scope: !14995, file: !6084, line: 134, column: 6)
!15017 = !DILocation(line: 406, column: 2, scope: !14990)
!15018 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2306, file: !2306, line: 817, type: !3627, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !15019)
!15019 = !{!15020, !15021, !15022, !15023}
!15020 = !DILocalVariable(name: "entry", arg: 1, scope: !15018, file: !2306, line: 817, type: !3629)
!15021 = !DILocalVariable(name: "p1", arg: 2, scope: !15018, file: !2306, line: 818, type: !102)
!15022 = !DILocalVariable(name: "p2", arg: 3, scope: !15018, file: !2306, line: 818, type: !102)
!15023 = !DILocalVariable(name: "p3", arg: 4, scope: !15018, file: !2306, line: 818, type: !102)
!15024 = !DILocation(line: 0, scope: !15018)
!15025 = !DILocation(line: 822, column: 2, scope: !15018)
!15026 = !DILocation(line: 822, column: 17, scope: !15018)
!15027 = !DILocation(line: 822, column: 30, scope: !15018)
!15028 = !DILocation(line: 823, column: 2, scope: !15018)
!15029 = !DILocation(line: 845, column: 2, scope: !15018)
!15030 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2306, file: !2306, line: 888, type: !15031, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !15033)
!15031 = !DISubroutineType(types: !15032)
!15032 = !{!103, !2310}
!15033 = !{!15034}
!15034 = !DILocalVariable(name: "thread", arg: 1, scope: !15030, file: !2306, line: 888, type: !2310)
!15035 = !DILocation(line: 0, scope: !15030)
!15036 = !DILocation(line: 893, column: 2, scope: !15030)
!15037 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2306, file: !2306, line: 897, type: !15038, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !15040)
!15038 = !DISubroutineType(types: !15039)
!15039 = !{!103, !2310, !32}
!15040 = !{!15041, !15042}
!15041 = !DILocalVariable(name: "thread", arg: 1, scope: !15037, file: !2306, line: 897, type: !2310)
!15042 = !DILocalVariable(name: "options", arg: 2, scope: !15037, file: !2306, line: 897, type: !32)
!15043 = !DILocation(line: 0, scope: !15037)
!15044 = !DILocation(line: 902, column: 2, scope: !15037)
!15045 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2306, file: !2306, line: 1072, type: !15046, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !15051)
!15046 = !DISubroutineType(types: !15047)
!15047 = !{!103, !2309, !15048}
!15048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15049, size: 32)
!15049 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !355, line: 234, baseType: !15050)
!15050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !355, line: 192, elements: !461)
!15051 = !{!15052, !15053}
!15052 = !DILocalVariable(name: "thread", arg: 1, scope: !15045, file: !2306, line: 1072, type: !2309)
!15053 = !DILocalVariable(name: "stats", arg: 2, scope: !15045, file: !2306, line: 1073, type: !15048)
!15054 = !DILocation(line: 0, scope: !15045)
!15055 = !DILocation(line: 1075, column: 14, scope: !15056)
!15056 = distinct !DILexicalBlock(scope: !15045, file: !2306, line: 1075, column: 6)
!15057 = !DILocation(line: 1075, column: 23, scope: !15056)
!15058 = !DILocation(line: 1086, column: 1, scope: !15045)
!15059 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2306, file: !2306, line: 1088, type: !15060, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !15062)
!15060 = !DISubroutineType(types: !15061)
!15061 = !{!103, !15048}
!15062 = !{!15063}
!15063 = !DILocalVariable(name: "stats", arg: 1, scope: !15059, file: !2306, line: 1088, type: !15048)
!15064 = !DILocation(line: 0, scope: !15059)
!15065 = !DILocation(line: 1094, column: 12, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !15059, file: !2306, line: 1094, column: 6)
!15067 = !DILocation(line: 1120, column: 1, scope: !15059)
!15068 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15069, file: !15069, line: 20, type: !3318, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3299, retainedNodes: !461)
!15069 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15070 = !DILocation(line: 30, column: 2, scope: !15068)
!15071 = !DILocation(line: 31, column: 1, scope: !15068)
!15072 = distinct !DISubprogram(name: "idle", scope: !15069, file: !15069, line: 33, type: !3632, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3299, retainedNodes: !15073)
!15073 = !{!15074, !15075, !15076}
!15074 = !DILocalVariable(name: "unused1", arg: 1, scope: !15072, file: !15069, line: 33, type: !102)
!15075 = !DILocalVariable(name: "unused2", arg: 2, scope: !15072, file: !15069, line: 33, type: !102)
!15076 = !DILocalVariable(name: "unused3", arg: 3, scope: !15072, file: !15069, line: 33, type: !102)
!15077 = !DILocation(line: 0, scope: !15072)
!15078 = !DILocation(line: 41, column: 2, scope: !15072)
!15079 = !DILocation(line: 55, column: 2, scope: !15080, inlinedAt: !15084)
!15080 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3299, retainedNodes: !15081)
!15081 = !{!15082, !15083}
!15082 = !DILocalVariable(name: "key", scope: !15080, file: !5884, line: 44, type: !32)
!15083 = !DILocalVariable(name: "tmp", scope: !15080, file: !5884, line: 53, type: !32)
!15084 = distinct !DILocation(line: 62, column: 10, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !15072, file: !15069, line: 41, column: 15)
!15086 = !{i64 2278440}
!15087 = !DILocation(line: 0, scope: !15080, inlinedAt: !15084)
!15088 = !DILocation(line: 86, column: 3, scope: !15085)
!15089 = distinct !{!15089, !15078, !15090}
!15090 = !DILocation(line: 105, column: 2, scope: !15072)
!15091 = distinct !DISubprogram(name: "k_cpu_idle", scope: !300, file: !300, line: 5627, type: !3318, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3299, retainedNodes: !461)
!15092 = !DILocation(line: 5629, column: 2, scope: !15091)
!15093 = !DILocation(line: 5630, column: 1, scope: !15091)
!15094 = !DISubprogram(name: "arch_cpu_idle", scope: !3630, file: !3630, line: 167, type: !3318, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!15095 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2449, file: !2449, line: 41, type: !15096, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15109)
!15096 = !DISubroutineType(types: !15097)
!15097 = !{!103, !15098, !32, !32}
!15098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15099, size: 32)
!15099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !300, line: 2909, size: 128, elements: !15100)
!15100 = !{!15101, !15107, !15108}
!15101 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15099, file: !300, line: 2910, baseType: !15102, size: 64)
!15102 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !15103)
!15103 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !15104)
!15104 = !{!15105}
!15105 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15103, file: !304, line: 232, baseType: !15106, size: 64)
!15106 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2435)
!15107 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !15099, file: !300, line: 2911, baseType: !32, size: 32, offset: 64)
!15108 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !15099, file: !300, line: 2912, baseType: !32, size: 32, offset: 96)
!15109 = !{!15110, !15111, !15112}
!15110 = !DILocalVariable(name: "sem", arg: 1, scope: !15095, file: !2449, line: 41, type: !15098)
!15111 = !DILocalVariable(name: "initial_count", arg: 2, scope: !15095, file: !2449, line: 41, type: !32)
!15112 = !DILocalVariable(name: "limit", arg: 3, scope: !15095, file: !2449, line: 42, type: !32)
!15113 = !DILocation(line: 0, scope: !15095)
!15114 = !DILocation(line: 47, column: 2, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15095, file: !2449, line: 47, column: 2)
!15116 = !DILocation(line: 53, column: 7, scope: !15095)
!15117 = !DILocation(line: 53, column: 13, scope: !15095)
!15118 = !DILocation(line: 54, column: 7, scope: !15095)
!15119 = !DILocation(line: 54, column: 13, scope: !15095)
!15120 = !DILocation(line: 58, column: 21, scope: !15095)
!15121 = !DILocation(line: 58, column: 2, scope: !15095)
!15122 = !DILocation(line: 64, column: 2, scope: !15095)
!15123 = !DILocation(line: 65, column: 1, scope: !15095)
!15124 = distinct !DISubprogram(name: "z_waitq_init", scope: !14756, file: !14756, line: 47, type: !15125, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15128)
!15125 = !DISubroutineType(types: !15126)
!15126 = !{null, !15127}
!15127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15102, size: 32)
!15128 = !{!15129}
!15129 = !DILocalVariable(name: "w", arg: 1, scope: !15124, file: !14756, line: 47, type: !15127)
!15130 = !DILocation(line: 0, scope: !15124)
!15131 = !DILocation(line: 49, column: 21, scope: !15124)
!15132 = !DILocation(line: 49, column: 2, scope: !15124)
!15133 = !DILocation(line: 50, column: 1, scope: !15124)
!15134 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !15135, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15138)
!15135 = !DISubroutineType(types: !15136)
!15136 = !{null, !15137}
!15137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15106, size: 32)
!15138 = !{!15139}
!15139 = !DILocalVariable(name: "list", arg: 1, scope: !15134, file: !309, line: 197, type: !15137)
!15140 = !DILocation(line: 0, scope: !15134)
!15141 = !DILocation(line: 199, column: 8, scope: !15134)
!15142 = !DILocation(line: 199, column: 13, scope: !15134)
!15143 = !DILocation(line: 200, column: 8, scope: !15134)
!15144 = !DILocation(line: 200, column: 13, scope: !15134)
!15145 = !DILocation(line: 201, column: 1, scope: !15134)
!15146 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2449, file: !2449, line: 86, type: !15147, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15149)
!15147 = !DISubroutineType(types: !15148)
!15148 = !{null, !15098}
!15149 = !{!15150, !15151, !15156}
!15150 = !DILocalVariable(name: "sem", arg: 1, scope: !15146, file: !2449, line: 86, type: !15098)
!15151 = !DILocalVariable(name: "key", scope: !15146, file: !2449, line: 88, type: !15152)
!15152 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !15153)
!15153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !15154)
!15154 = !{!15155}
!15155 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15153, file: !460, line: 33, baseType: !103, size: 32)
!15156 = !DILocalVariable(name: "thread", scope: !15146, file: !2449, line: 89, type: !15157)
!15157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15158, size: 32)
!15158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !15159)
!15159 = !{!15160, !15198, !15210, !15211, !15212, !15213, !15219, !15231}
!15160 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !15158, file: !355, line: 247, baseType: !15161, size: 384)
!15161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !15162)
!15162 = !{!15163, !15173, !15174, !15175, !15176, !15185, !15186, !15187}
!15163 = !DIDerivedType(tag: DW_TAG_member, scope: !15161, file: !355, line: 60, baseType: !15164, size: 64)
!15164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15161, file: !355, line: 60, size: 64, elements: !15165)
!15165 = !{!15166, !15167}
!15166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !15164, file: !355, line: 61, baseType: !2434, size: 64)
!15167 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !15164, file: !355, line: 62, baseType: !15168, size: 64)
!15168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !15169)
!15169 = !{!15170}
!15170 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !15168, file: !380, line: 50, baseType: !15171, size: 64)
!15171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15172, size: 64, elements: !385)
!15172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15168, size: 32)
!15173 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !15161, file: !355, line: 68, baseType: !15127, size: 32, offset: 64)
!15174 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !15161, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!15175 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !15161, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!15176 = !DIDerivedType(tag: DW_TAG_member, scope: !15161, file: !355, line: 90, baseType: !15177, size: 16, offset: 112)
!15177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15161, file: !355, line: 90, size: 16, elements: !15178)
!15178 = !{!15179, !15184}
!15179 = !DIDerivedType(tag: DW_TAG_member, scope: !15177, file: !355, line: 91, baseType: !15180, size: 16)
!15180 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15177, file: !355, line: 91, size: 16, elements: !15181)
!15181 = !{!15182, !15183}
!15182 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15180, file: !355, line: 96, baseType: !403, size: 8)
!15183 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !15180, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!15184 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !15177, file: !355, line: 100, baseType: !328, size: 16)
!15185 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !15161, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!15186 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !15161, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!15187 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15161, file: !355, line: 131, baseType: !15188, size: 192, offset: 192)
!15188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !15189)
!15189 = !{!15190, !15191, !15197}
!15190 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !15188, file: !304, line: 245, baseType: !2434, size: 64)
!15191 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !15188, file: !304, line: 246, baseType: !15192, size: 32, offset: 64)
!15192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !15193)
!15193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15194, size: 32)
!15194 = !DISubroutineType(types: !15195)
!15195 = !{null, !15196}
!15196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15188, size: 32)
!15197 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !15188, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!15198 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !15158, file: !355, line: 250, baseType: !15199, size: 288, offset: 384)
!15199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !15200)
!15200 = !{!15201, !15202, !15203, !15204, !15205, !15206, !15207, !15208, !15209}
!15201 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15199, file: !424, line: 26, baseType: !121, size: 32)
!15202 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15199, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!15203 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !15199, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!15204 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !15199, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!15205 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !15199, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!15206 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !15199, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!15207 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !15199, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!15208 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !15199, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!15209 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !15199, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!15210 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !15158, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!15211 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !15158, file: !355, line: 256, baseType: !15102, size: 64, offset: 704)
!15212 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !15158, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!15213 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !15158, file: !355, line: 300, baseType: !15214, size: 96, offset: 800)
!15214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !15215)
!15215 = !{!15216, !15217, !15218}
!15216 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !15214, file: !355, line: 153, baseType: !22, size: 32)
!15217 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15214, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!15218 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !15214, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!15219 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !15158, file: !355, line: 325, baseType: !15220, size: 32, offset: 896)
!15220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15221, size: 32)
!15221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !15222)
!15222 = !{!15223, !15229, !15230}
!15223 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15221, file: !300, line: 5074, baseType: !15224, size: 96)
!15224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !15225)
!15225 = !{!15226, !15227, !15228}
!15226 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15224, file: !450, line: 57, baseType: !453, size: 32)
!15227 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15224, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!15228 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15224, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!15229 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15221, file: !300, line: 5075, baseType: !15102, size: 64, offset: 96)
!15230 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15221, file: !300, line: 5076, baseType: !2450, offset: 160)
!15231 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !15158, file: !355, line: 343, baseType: !15232, size: 64, offset: 928)
!15232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !15233)
!15233 = !{!15234, !15235}
!15234 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !15232, file: !424, line: 63, baseType: !121, size: 32)
!15235 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !15232, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!15236 = !DILocation(line: 0, scope: !15146)
!15237 = !DILocalVariable(name: "l", arg: 1, scope: !15238, file: !460, line: 136, type: !15241)
!15238 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !15239, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15242)
!15239 = !DISubroutineType(types: !15240)
!15240 = !{!15152, !15241}
!15241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 32)
!15242 = !{!15237, !15243}
!15243 = !DILocalVariable(name: "k", scope: !15238, file: !460, line: 139, type: !15152)
!15244 = !DILocation(line: 0, scope: !15238, inlinedAt: !15245)
!15245 = distinct !DILocation(line: 88, column: 25, scope: !15146)
!15246 = !DILocation(line: 55, column: 2, scope: !15247, inlinedAt: !15251)
!15247 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15248)
!15248 = !{!15249, !15250}
!15249 = !DILocalVariable(name: "key", scope: !15247, file: !5884, line: 44, type: !32)
!15250 = !DILocalVariable(name: "tmp", scope: !15247, file: !5884, line: 53, type: !32)
!15251 = distinct !DILocation(line: 145, column: 10, scope: !15238, inlinedAt: !15245)
!15252 = !{i64 2280002}
!15253 = !DILocation(line: 0, scope: !15247, inlinedAt: !15251)
!15254 = !DILocation(line: 93, column: 39, scope: !15146)
!15255 = !DILocation(line: 93, column: 11, scope: !15146)
!15256 = !DILocation(line: 95, column: 13, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15146, file: !2449, line: 95, column: 6)
!15258 = !DILocation(line: 95, column: 6, scope: !15146)
!15259 = !DILocalVariable(name: "thread", arg: 1, scope: !15260, file: !14450, line: 65, type: !15157)
!15260 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14450, file: !14450, line: 65, type: !15261, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15263)
!15261 = !DISubroutineType(types: !15262)
!15262 = !{null, !15157, !32}
!15263 = !{!15259, !15264}
!15264 = !DILocalVariable(name: "value", arg: 2, scope: !15260, file: !14450, line: 65, type: !32)
!15265 = !DILocation(line: 0, scope: !15260, inlinedAt: !15266)
!15266 = distinct !DILocation(line: 96, column: 3, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15257, file: !2449, line: 95, column: 22)
!15268 = !DILocation(line: 67, column: 15, scope: !15260, inlinedAt: !15266)
!15269 = !DILocation(line: 67, column: 33, scope: !15260, inlinedAt: !15266)
!15270 = !DILocation(line: 97, column: 3, scope: !15267)
!15271 = !DILocation(line: 98, column: 2, scope: !15267)
!15272 = !DILocation(line: 99, column: 23, scope: !15273)
!15273 = distinct !DILexicalBlock(scope: !15257, file: !2449, line: 98, column: 9)
!15274 = !DILocation(line: 99, column: 37, scope: !15273)
!15275 = !DILocation(line: 99, column: 29, scope: !15273)
!15276 = !DILocation(line: 99, column: 17, scope: !15273)
!15277 = !DILocation(line: 99, column: 14, scope: !15273)
!15278 = !DILocation(line: 103, column: 2, scope: !15146)
!15279 = !DILocation(line: 106, column: 1, scope: !15146)
!15280 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2449, file: !2449, line: 117, type: !15281, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15287)
!15281 = !DISubroutineType(types: !15282)
!15282 = !{!103, !15098, !15283}
!15283 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1790, line: 67, baseType: !15284)
!15284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1790, line: 65, size: 64, elements: !15285)
!15285 = !{!15286}
!15286 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15284, file: !1790, line: 66, baseType: !1789, size: 64)
!15287 = !{!15288, !15289, !15290, !15291, !15292}
!15288 = !DILocalVariable(name: "sem", arg: 1, scope: !15280, file: !2449, line: 117, type: !15098)
!15289 = !DILocalVariable(name: "timeout", arg: 2, scope: !15280, file: !2449, line: 117, type: !15283)
!15290 = !DILocalVariable(name: "ret", scope: !15280, file: !2449, line: 119, type: !103)
!15291 = !DILocalVariable(name: "key", scope: !15280, file: !2449, line: 124, type: !15152)
!15292 = !DILabel(scope: !15280, name: "out", file: !2449, line: 145)
!15293 = !DILocation(line: 0, scope: !15280)
!15294 = !DILocation(line: 0, scope: !15238, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 124, column: 25, scope: !15280)
!15296 = !DILocation(line: 55, column: 2, scope: !15247, inlinedAt: !15297)
!15297 = distinct !DILocation(line: 145, column: 10, scope: !15238, inlinedAt: !15295)
!15298 = !DILocation(line: 0, scope: !15247, inlinedAt: !15297)
!15299 = !DILocation(line: 128, column: 6, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15280, file: !2449, line: 128, column: 6)
!15301 = !DILocation(line: 128, column: 6, scope: !15280)
!15302 = !{!"branch_weights", i32 1, i32 2000}
!15303 = !DILocation(line: 129, column: 13, scope: !15304)
!15304 = distinct !DILexicalBlock(scope: !15300, file: !2449, line: 128, column: 31)
!15305 = !DILocalVariable(name: "key", arg: 2, scope: !15306, file: !460, line: 190, type: !15152)
!15306 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !15307, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15309)
!15307 = !DISubroutineType(types: !15308)
!15308 = !{null, !15241, !15152}
!15309 = !{!15310, !15305}
!15310 = !DILocalVariable(name: "l", arg: 1, scope: !15306, file: !460, line: 189, type: !15241)
!15311 = !DILocation(line: 0, scope: !15306, inlinedAt: !15312)
!15312 = distinct !DILocation(line: 130, column: 3, scope: !15304)
!15313 = !DILocalVariable(name: "key", arg: 1, scope: !15314, file: !5884, line: 84, type: !32)
!15314 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15315)
!15315 = !{!15313}
!15316 = !DILocation(line: 0, scope: !15314, inlinedAt: !15317)
!15317 = distinct !DILocation(line: 215, column: 2, scope: !15306, inlinedAt: !15312)
!15318 = !DILocation(line: 95, column: 2, scope: !15314, inlinedAt: !15317)
!15319 = !{i64 2280819}
!15320 = !DILocation(line: 132, column: 3, scope: !15304)
!15321 = !DILocation(line: 135, column: 6, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15280, file: !2449, line: 135, column: 6)
!15323 = !DILocation(line: 135, column: 6, scope: !15280)
!15324 = !DILocation(line: 0, scope: !15306, inlinedAt: !15325)
!15325 = distinct !DILocation(line: 136, column: 3, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15322, file: !2449, line: 135, column: 40)
!15327 = !DILocation(line: 0, scope: !15314, inlinedAt: !15328)
!15328 = distinct !DILocation(line: 215, column: 2, scope: !15306, inlinedAt: !15325)
!15329 = !DILocation(line: 95, column: 2, scope: !15314, inlinedAt: !15328)
!15330 = !DILocation(line: 138, column: 3, scope: !15326)
!15331 = !DILocation(line: 143, column: 38, scope: !15280)
!15332 = !DILocation(line: 143, column: 8, scope: !15280)
!15333 = !DILocation(line: 143, column: 2, scope: !15280)
!15334 = !DILocation(line: 145, column: 1, scope: !15280)
!15335 = !DILocation(line: 148, column: 2, scope: !15280)
!15336 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2449, file: !2449, line: 151, type: !15147, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !15337)
!15337 = !{!15338, !15339, !15340}
!15338 = !DILocalVariable(name: "sem", arg: 1, scope: !15336, file: !2449, line: 151, type: !15098)
!15339 = !DILocalVariable(name: "thread", scope: !15336, file: !2449, line: 153, type: !15157)
!15340 = !DILocalVariable(name: "key", scope: !15336, file: !2449, line: 154, type: !15152)
!15341 = !DILocation(line: 0, scope: !15336)
!15342 = !DILocation(line: 0, scope: !15238, inlinedAt: !15343)
!15343 = distinct !DILocation(line: 154, column: 25, scope: !15336)
!15344 = !DILocation(line: 55, column: 2, scope: !15247, inlinedAt: !15345)
!15345 = distinct !DILocation(line: 145, column: 10, scope: !15238, inlinedAt: !15343)
!15346 = !DILocation(line: 0, scope: !15247, inlinedAt: !15345)
!15347 = !DILocation(line: 157, column: 12, scope: !15348)
!15348 = distinct !DILexicalBlock(scope: !15336, file: !2449, line: 156, column: 15)
!15349 = !DILocation(line: 158, column: 14, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15348, file: !2449, line: 158, column: 7)
!15351 = !DILocation(line: 158, column: 7, scope: !15348)
!15352 = !DILocation(line: 0, scope: !15260, inlinedAt: !15353)
!15353 = distinct !DILocation(line: 161, column: 3, scope: !15348)
!15354 = !DILocation(line: 67, column: 15, scope: !15260, inlinedAt: !15353)
!15355 = !DILocation(line: 67, column: 33, scope: !15260, inlinedAt: !15353)
!15356 = !DILocation(line: 162, column: 3, scope: !15348)
!15357 = distinct !{!15357, !15358, !15359}
!15358 = !DILocation(line: 156, column: 2, scope: !15336)
!15359 = !DILocation(line: 163, column: 2, scope: !15336)
!15360 = !DILocation(line: 164, column: 7, scope: !15336)
!15361 = !DILocation(line: 164, column: 13, scope: !15336)
!15362 = !DILocation(line: 170, column: 2, scope: !15336)
!15363 = !DILocation(line: 171, column: 1, scope: !15336)
!15364 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2561, file: !2561, line: 93, type: !15365, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15367)
!15365 = !DISubroutineType(types: !15366)
!15366 = !{!332, !2456, !2456}
!15367 = !{!15368, !15369, !15370, !15371}
!15368 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15364, file: !2561, line: 93, type: !2456)
!15369 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15364, file: !2561, line: 94, type: !2456)
!15370 = !DILocalVariable(name: "b1", scope: !15364, file: !2561, line: 97, type: !332)
!15371 = !DILocalVariable(name: "b2", scope: !15364, file: !2561, line: 98, type: !332)
!15372 = !DILocation(line: 0, scope: !15364)
!15373 = !DILocation(line: 97, column: 30, scope: !15364)
!15374 = !DILocation(line: 98, column: 30, scope: !15364)
!15375 = !DILocation(line: 100, column: 9, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15364, file: !2561, line: 100, column: 6)
!15377 = !DILocation(line: 100, column: 6, scope: !15364)
!15378 = !DILocation(line: 125, column: 1, scope: !15364)
!15379 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2561, file: !2561, line: 428, type: !15380, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15382)
!15380 = !DISubroutineType(types: !15381)
!15381 = !{null, !2456}
!15382 = !{!15383}
!15383 = !DILocalVariable(name: "curr", arg: 1, scope: !15379, file: !2561, line: 428, type: !2456)
!15384 = !DILocation(line: 0, scope: !15379)
!15385 = !DILocation(line: 434, column: 6, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15379, file: !2561, line: 434, column: 6)
!15387 = !DILocation(line: 434, column: 23, scope: !15386)
!15388 = !DILocation(line: 434, column: 6, scope: !15379)
!15389 = !DILocation(line: 435, column: 50, scope: !15390)
!15390 = distinct !DILexicalBlock(scope: !15386, file: !2561, line: 434, column: 29)
!15391 = !DILocation(line: 435, column: 48, scope: !15390)
!15392 = !DILocation(line: 435, column: 29, scope: !15390)
!15393 = !DILocation(line: 436, column: 24, scope: !15390)
!15394 = !DILocation(line: 436, column: 3, scope: !15390)
!15395 = !DILocation(line: 437, column: 2, scope: !15390)
!15396 = !DILocation(line: 438, column: 1, scope: !15379)
!15397 = distinct !DISubprogram(name: "slice_time", scope: !2561, file: !2561, line: 407, type: !15398, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15400)
!15398 = !DISubroutineType(types: !15399)
!15399 = !{!103, !2456}
!15400 = !{!15401, !15402}
!15401 = !DILocalVariable(name: "curr", arg: 1, scope: !15397, file: !2561, line: 407, type: !2456)
!15402 = !DILocalVariable(name: "ret", scope: !15397, file: !2561, line: 409, type: !103)
!15403 = !DILocation(line: 0, scope: !15397)
!15404 = !DILocation(line: 409, column: 12, scope: !15397)
!15405 = !DILocation(line: 416, column: 2, scope: !15397)
!15406 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2561, file: !2561, line: 440, type: !15407, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15409)
!15407 = !DISubroutineType(types: !15408)
!15408 = !{null, !332, !103}
!15409 = !{!15410, !15411, !15412, !15418}
!15410 = !DILocalVariable(name: "slice", arg: 1, scope: !15406, file: !2561, line: 440, type: !332)
!15411 = !DILocalVariable(name: "prio", arg: 2, scope: !15406, file: !2561, line: 440, type: !103)
!15412 = !DILocalVariable(name: "__i", scope: !15413, file: !2561, line: 442, type: !15414)
!15413 = distinct !DILexicalBlock(scope: !15406, file: !2561, line: 442, column: 2)
!15414 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !15415)
!15415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !15416)
!15416 = !{!15417}
!15417 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15415, file: !460, line: 33, baseType: !103, size: 32)
!15418 = !DILocalVariable(name: "__key", scope: !15413, file: !2561, line: 442, type: !15414)
!15419 = !DILocation(line: 0, scope: !15406)
!15420 = !DILocation(line: 0, scope: !15413)
!15421 = !DILocalVariable(name: "l", arg: 1, scope: !15422, file: !460, line: 136, type: !15425)
!15422 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !15423, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15426)
!15423 = !DISubroutineType(types: !15424)
!15424 = !{!15414, !15425}
!15425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!15426 = !{!15421, !15427}
!15427 = !DILocalVariable(name: "k", scope: !15422, file: !460, line: 139, type: !15414)
!15428 = !DILocation(line: 0, scope: !15422, inlinedAt: !15429)
!15429 = distinct !DILocation(line: 442, column: 2, scope: !15413)
!15430 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !15435)
!15431 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15432)
!15432 = !{!15433, !15434}
!15433 = !DILocalVariable(name: "key", scope: !15431, file: !5884, line: 44, type: !32)
!15434 = !DILocalVariable(name: "tmp", scope: !15431, file: !5884, line: 53, type: !32)
!15435 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !15429)
!15436 = !{i64 2322411}
!15437 = !DILocation(line: 0, scope: !15431, inlinedAt: !15435)
!15438 = !DILocation(line: 443, column: 29, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15440, file: !2561, line: 442, column: 26)
!15440 = distinct !DILexicalBlock(scope: !15413, file: !2561, line: 442, column: 2)
!15441 = !DILocation(line: 444, column: 17, scope: !15439)
!15442 = !DILocation(line: 445, column: 51, scope: !15443)
!15443 = distinct !DILexicalBlock(scope: !15439, file: !2561, line: 445, column: 7)
!15444 = !DILocation(line: 445, column: 7, scope: !15439)
!15445 = !DILocation(line: 0, scope: !15439)
!15446 = !DILocation(line: 451, column: 18, scope: !15439)
!15447 = !DILocation(line: 452, column: 3, scope: !15439)
!15448 = !DILocalVariable(name: "key", arg: 2, scope: !15449, file: !460, line: 190, type: !15414)
!15449 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !15450, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15452)
!15450 = !DISubroutineType(types: !15451)
!15451 = !{null, !15425, !15414}
!15452 = !{!15453, !15448}
!15453 = !DILocalVariable(name: "l", arg: 1, scope: !15449, file: !460, line: 189, type: !15425)
!15454 = !DILocation(line: 0, scope: !15449, inlinedAt: !15455)
!15455 = distinct !DILocation(line: 442, column: 2, scope: !15440)
!15456 = !DILocalVariable(name: "key", arg: 1, scope: !15457, file: !5884, line: 84, type: !32)
!15457 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15458)
!15458 = !{!15456}
!15459 = !DILocation(line: 0, scope: !15457, inlinedAt: !15460)
!15460 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !15455)
!15461 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !15460)
!15462 = !{i64 2323228}
!15463 = !DILocation(line: 454, column: 1, scope: !15406)
!15464 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !6084, file: !6084, line: 389, type: !7911, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15465)
!15465 = !{!15466}
!15466 = !DILocalVariable(name: "t", arg: 1, scope: !15464, file: !6084, line: 389, type: !121)
!15467 = !DILocation(line: 0, scope: !15464)
!15468 = !DILocalVariable(name: "t", arg: 1, scope: !15469, file: !6084, line: 102, type: !1611)
!15469 = distinct !DISubprogram(name: "z_tmcvt", scope: !6084, file: !6084, line: 102, type: !6092, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15470)
!15470 = !{!15468, !15471, !15472, !15473, !15474, !15475, !15476, !15477, !15478, !15479, !15480}
!15471 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15469, file: !6084, line: 102, type: !121)
!15472 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15469, file: !6084, line: 103, type: !121)
!15473 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15469, file: !6084, line: 103, type: !157)
!15474 = !DILocalVariable(name: "result32", arg: 5, scope: !15469, file: !6084, line: 104, type: !157)
!15475 = !DILocalVariable(name: "round_up", arg: 6, scope: !15469, file: !6084, line: 104, type: !157)
!15476 = !DILocalVariable(name: "round_off", arg: 7, scope: !15469, file: !6084, line: 105, type: !157)
!15477 = !DILocalVariable(name: "mul_ratio", scope: !15469, file: !6084, line: 107, type: !157)
!15478 = !DILocalVariable(name: "div_ratio", scope: !15469, file: !6084, line: 109, type: !157)
!15479 = !DILocalVariable(name: "off", scope: !15469, file: !6084, line: 116, type: !1611)
!15480 = !DILocalVariable(name: "rdivisor", scope: !15481, file: !6084, line: 119, type: !121)
!15481 = distinct !DILexicalBlock(scope: !15482, file: !6084, line: 118, column: 18)
!15482 = distinct !DILexicalBlock(scope: !15469, file: !6084, line: 118, column: 6)
!15483 = !DILocation(line: 0, scope: !15469, inlinedAt: !15484)
!15484 = distinct !DILocation(line: 392, column: 9, scope: !15464)
!15485 = !DILocation(line: 143, column: 25, scope: !15486, inlinedAt: !15484)
!15486 = distinct !DILexicalBlock(scope: !15487, file: !6084, line: 142, column: 17)
!15487 = distinct !DILexicalBlock(scope: !15488, file: !6084, line: 142, column: 7)
!15488 = distinct !DILexicalBlock(scope: !15489, file: !6084, line: 141, column: 24)
!15489 = distinct !DILexicalBlock(scope: !15490, file: !6084, line: 141, column: 13)
!15490 = distinct !DILexicalBlock(scope: !15469, file: !6084, line: 134, column: 6)
!15491 = !DILocation(line: 392, column: 2, scope: !15464)
!15492 = distinct !DISubprogram(name: "z_time_slice", scope: !2561, file: !2561, line: 502, type: !8546, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15493)
!15493 = !{!15494, !15495}
!15494 = !DILocalVariable(name: "ticks", arg: 1, scope: !15492, file: !2561, line: 502, type: !103)
!15495 = !DILocalVariable(name: "key", scope: !15492, file: !2561, line: 511, type: !15414)
!15496 = !DILocation(line: 0, scope: !15492)
!15497 = !DILocation(line: 0, scope: !15422, inlinedAt: !15498)
!15498 = distinct !DILocation(line: 511, column: 25, scope: !15492)
!15499 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !15500)
!15500 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !15498)
!15501 = !DILocation(line: 0, scope: !15431, inlinedAt: !15500)
!15502 = !DILocation(line: 514, column: 6, scope: !15503)
!15503 = distinct !DILexicalBlock(scope: !15492, file: !2561, line: 514, column: 6)
!15504 = !DILocation(line: 514, column: 25, scope: !15503)
!15505 = !DILocation(line: 514, column: 22, scope: !15503)
!15506 = !DILocation(line: 514, column: 6, scope: !15492)
!15507 = !DILocation(line: 515, column: 3, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15503, file: !2561, line: 514, column: 35)
!15509 = !DILocation(line: 0, scope: !15449, inlinedAt: !15510)
!15510 = distinct !DILocation(line: 516, column: 3, scope: !15508)
!15511 = !DILocation(line: 0, scope: !15457, inlinedAt: !15512)
!15512 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !15510)
!15513 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !15512)
!15514 = !DILocation(line: 517, column: 3, scope: !15508)
!15515 = !DILocation(line: 519, column: 18, scope: !15492)
!15516 = !DILocation(line: 522, column: 6, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15492, file: !2561, line: 522, column: 6)
!15518 = !DILocation(line: 522, column: 27, scope: !15517)
!15519 = !DILocation(line: 522, column: 30, scope: !15517)
!15520 = !DILocation(line: 522, column: 6, scope: !15492)
!15521 = !DILocation(line: 523, column: 30, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15523, file: !2561, line: 523, column: 7)
!15523 = distinct !DILexicalBlock(scope: !15517, file: !2561, line: 522, column: 51)
!15524 = !DILocation(line: 523, column: 13, scope: !15522)
!15525 = !DILocation(line: 523, column: 7, scope: !15523)
!15526 = !DILocation(line: 530, column: 10, scope: !15527)
!15527 = distinct !DILexicalBlock(scope: !15522, file: !2561, line: 523, column: 43)
!15528 = !DILocation(line: 531, column: 3, scope: !15527)
!15529 = !DILocation(line: 532, column: 30, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15522, file: !2561, line: 531, column: 10)
!15531 = !DILocation(line: 535, column: 29, scope: !15532)
!15532 = distinct !DILexicalBlock(scope: !15517, file: !2561, line: 534, column: 9)
!15533 = !DILocation(line: 0, scope: !15449, inlinedAt: !15534)
!15534 = distinct !DILocation(line: 537, column: 2, scope: !15492)
!15535 = !DILocation(line: 0, scope: !15457, inlinedAt: !15536)
!15536 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !15534)
!15537 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !15536)
!15538 = !DILocation(line: 538, column: 1, scope: !15492)
!15539 = distinct !DISubprogram(name: "sliceable", scope: !2561, file: !2561, line: 468, type: !15540, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15542)
!15540 = !DISubroutineType(types: !15541)
!15541 = !{!157, !2456}
!15542 = !{!15543, !15544}
!15543 = !DILocalVariable(name: "thread", arg: 1, scope: !15539, file: !2561, line: 468, type: !2456)
!15544 = !DILocalVariable(name: "ret", scope: !15539, file: !2561, line: 470, type: !157)
!15545 = !DILocation(line: 0, scope: !15539)
!15546 = !DILocation(line: 470, column: 13, scope: !15539)
!15547 = !DILocation(line: 471, column: 3, scope: !15539)
!15548 = !DILocation(line: 471, column: 7, scope: !15539)
!15549 = !DILocation(line: 472, column: 3, scope: !15539)
!15550 = !DILocation(line: 472, column: 37, scope: !15539)
!15551 = !DILocation(line: 472, column: 24, scope: !15539)
!15552 = !DILocation(line: 472, column: 43, scope: !15539)
!15553 = !DILocation(line: 472, column: 7, scope: !15539)
!15554 = !DILocation(line: 473, column: 3, scope: !15539)
!15555 = !DILocation(line: 473, column: 7, scope: !15539)
!15556 = !DILocation(line: 473, column: 6, scope: !15539)
!15557 = !DILocation(line: 479, column: 2, scope: !15539)
!15558 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2561, file: !2561, line: 482, type: !15559, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15561)
!15559 = !DISubroutineType(types: !15560)
!15560 = !{!15414, !15414}
!15561 = !{!15562, !15563}
!15562 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15558, file: !2561, line: 482, type: !15414)
!15563 = !DILocalVariable(name: "curr", scope: !15558, file: !2561, line: 484, type: !2456)
!15564 = !DILocation(line: 0, scope: !15558)
!15565 = !DILocation(line: 484, column: 26, scope: !15558)
!15566 = !DILocation(line: 493, column: 7, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15558, file: !2561, line: 493, column: 6)
!15568 = !DILocation(line: 493, column: 6, scope: !15558)
!15569 = !DILocation(line: 494, column: 3, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15567, file: !2561, line: 493, column: 49)
!15571 = !DILocation(line: 495, column: 2, scope: !15570)
!15572 = !DILocation(line: 496, column: 2, scope: !15558)
!15573 = !DILocation(line: 499, column: 1, scope: !15558)
!15574 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14430, file: !14430, line: 106, type: !15540, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15575)
!15575 = !{!15576, !15577}
!15576 = !DILocalVariable(name: "thread", arg: 1, scope: !15574, file: !14430, line: 106, type: !2456)
!15577 = !DILocalVariable(name: "state", scope: !15574, file: !14430, line: 108, type: !154)
!15578 = !DILocation(line: 0, scope: !15574)
!15579 = !DILocation(line: 108, column: 31, scope: !15574)
!15580 = !DILocation(line: 110, column: 16, scope: !15574)
!15581 = !DILocation(line: 111, column: 41, scope: !15574)
!15582 = !DILocation(line: 110, column: 2, scope: !15574)
!15583 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2561, file: !2561, line: 393, type: !15380, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15584)
!15584 = !{!15585}
!15585 = !DILocalVariable(name: "thread", arg: 1, scope: !15583, file: !2561, line: 393, type: !2456)
!15586 = !DILocation(line: 0, scope: !15583)
!15587 = !DILocation(line: 395, column: 6, scope: !15588)
!15588 = distinct !DILexicalBlock(scope: !15583, file: !2561, line: 395, column: 6)
!15589 = !DILocation(line: 395, column: 6, scope: !15583)
!15590 = !DILocalVariable(name: "thread", arg: 1, scope: !15591, file: !2561, line: 264, type: !2456)
!15591 = distinct !DISubprogram(name: "dequeue_thread", scope: !2561, file: !2561, line: 264, type: !15380, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15592)
!15592 = !{!15590}
!15593 = !DILocation(line: 0, scope: !15591, inlinedAt: !15594)
!15594 = distinct !DILocation(line: 396, column: 3, scope: !15595)
!15595 = distinct !DILexicalBlock(scope: !15588, file: !2561, line: 395, column: 34)
!15596 = !DILocation(line: 266, column: 15, scope: !15591, inlinedAt: !15594)
!15597 = !DILocation(line: 266, column: 28, scope: !15591, inlinedAt: !15594)
!15598 = !DILocalVariable(name: "thread", arg: 1, scope: !15599, file: !2561, line: 232, type: !2456)
!15599 = distinct !DISubprogram(name: "runq_remove", scope: !2561, file: !2561, line: 232, type: !15380, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15600)
!15600 = !{!15598}
!15601 = !DILocation(line: 0, scope: !15599, inlinedAt: !15602)
!15602 = distinct !DILocation(line: 268, column: 3, scope: !15603, inlinedAt: !15594)
!15603 = distinct !DILexicalBlock(scope: !15604, file: !2561, line: 267, column: 35)
!15604 = distinct !DILexicalBlock(scope: !15591, file: !2561, line: 267, column: 6)
!15605 = !DILocation(line: 234, column: 2, scope: !15599, inlinedAt: !15602)
!15606 = !DILocation(line: 397, column: 2, scope: !15595)
!15607 = !DILocalVariable(name: "thread", arg: 1, scope: !15608, file: !2561, line: 250, type: !2456)
!15608 = distinct !DISubprogram(name: "queue_thread", scope: !2561, file: !2561, line: 250, type: !15380, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15609)
!15609 = !{!15607}
!15610 = !DILocation(line: 0, scope: !15608, inlinedAt: !15611)
!15611 = distinct !DILocation(line: 398, column: 2, scope: !15583)
!15612 = !DILocation(line: 252, column: 15, scope: !15608, inlinedAt: !15611)
!15613 = !DILocation(line: 252, column: 28, scope: !15608, inlinedAt: !15611)
!15614 = !DILocalVariable(name: "thread", arg: 1, scope: !15615, file: !2561, line: 227, type: !2456)
!15615 = distinct !DISubprogram(name: "runq_add", scope: !2561, file: !2561, line: 227, type: !15380, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15616)
!15616 = !{!15614}
!15617 = !DILocation(line: 0, scope: !15615, inlinedAt: !15618)
!15618 = distinct !DILocation(line: 254, column: 3, scope: !15619, inlinedAt: !15611)
!15619 = distinct !DILexicalBlock(scope: !15620, file: !2561, line: 253, column: 35)
!15620 = distinct !DILexicalBlock(scope: !15608, file: !2561, line: 253, column: 6)
!15621 = !DILocalVariable(name: "pq", arg: 1, scope: !15622, file: !2561, line: 181, type: !15625)
!15622 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2561, file: !2561, line: 181, type: !15623, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15626)
!15623 = !DISubroutineType(types: !15624)
!15624 = !{null, !15625, !2456}
!15625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 32)
!15626 = !{!15621, !15627, !15628}
!15627 = !DILocalVariable(name: "thread", arg: 2, scope: !15622, file: !2561, line: 182, type: !2456)
!15628 = !DILocalVariable(name: "t", scope: !15622, file: !2561, line: 184, type: !2456)
!15629 = !DILocation(line: 0, scope: !15622, inlinedAt: !15630)
!15630 = distinct !DILocation(line: 229, column: 2, scope: !15615, inlinedAt: !15618)
!15631 = !DILocation(line: 188, column: 2, scope: !15632, inlinedAt: !15630)
!15632 = distinct !DILexicalBlock(scope: !15622, file: !2561, line: 188, column: 2)
!15633 = !DILocation(line: 188, column: 2, scope: !15634, inlinedAt: !15630)
!15634 = distinct !DILexicalBlock(scope: !15632, file: !2561, line: 188, column: 2)
!15635 = !DILocation(line: 0, scope: !15632, inlinedAt: !15630)
!15636 = !DILocation(line: 189, column: 7, scope: !15637, inlinedAt: !15630)
!15637 = distinct !DILexicalBlock(scope: !15638, file: !2561, line: 189, column: 7)
!15638 = distinct !DILexicalBlock(scope: !15634, file: !2561, line: 188, column: 56)
!15639 = !DILocation(line: 189, column: 35, scope: !15637, inlinedAt: !15630)
!15640 = !DILocation(line: 189, column: 7, scope: !15638, inlinedAt: !15630)
!15641 = !DILocation(line: 191, column: 21, scope: !15642, inlinedAt: !15630)
!15642 = distinct !DILexicalBlock(scope: !15637, file: !2561, line: 189, column: 40)
!15643 = !DILocation(line: 190, column: 4, scope: !15642, inlinedAt: !15630)
!15644 = !DILocation(line: 192, column: 4, scope: !15642, inlinedAt: !15630)
!15645 = distinct !{!15645, !15631, !15646}
!15646 = !DILocation(line: 194, column: 2, scope: !15632, inlinedAt: !15630)
!15647 = !DILocation(line: 196, column: 37, scope: !15622, inlinedAt: !15630)
!15648 = !DILocation(line: 196, column: 2, scope: !15622, inlinedAt: !15630)
!15649 = !DILocation(line: 197, column: 1, scope: !15622, inlinedAt: !15630)
!15650 = !DILocation(line: 399, column: 25, scope: !15583)
!15651 = !DILocation(line: 399, column: 22, scope: !15583)
!15652 = !DILocation(line: 399, column: 2, scope: !15583)
!15653 = !DILocation(line: 400, column: 1, scope: !15583)
!15654 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14430, file: !14430, line: 136, type: !15540, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15655)
!15655 = !{!15656}
!15656 = !DILocalVariable(name: "thread", arg: 1, scope: !15654, file: !14430, line: 136, type: !2456)
!15657 = !DILocation(line: 0, scope: !15654)
!15658 = !DILocation(line: 138, column: 9, scope: !15654)
!15659 = !DILocation(line: 138, column: 2, scope: !15654)
!15660 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2561, file: !2561, line: 1137, type: !15623, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15661)
!15661 = !{!15662, !15663}
!15662 = !DILocalVariable(name: "pq", arg: 1, scope: !15660, file: !2561, line: 1137, type: !15625)
!15663 = !DILocalVariable(name: "thread", arg: 2, scope: !15660, file: !2561, line: 1137, type: !2456)
!15664 = !DILocation(line: 0, scope: !15660)
!15665 = !DILocation(line: 1141, column: 33, scope: !15660)
!15666 = !DILocation(line: 1141, column: 2, scope: !15660)
!15667 = !DILocation(line: 1142, column: 1, scope: !15660)
!15668 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !309, file: !309, line: 294, type: !15669, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15671)
!15669 = !DISubroutineType(types: !15670)
!15670 = !{!2557, !15625}
!15671 = !{!15672}
!15672 = !DILocalVariable(name: "list", arg: 1, scope: !15668, file: !309, line: 294, type: !15625)
!15673 = !DILocation(line: 0, scope: !15668)
!15674 = !DILocation(line: 296, column: 9, scope: !15668)
!15675 = !DILocation(line: 296, column: 49, scope: !15668)
!15676 = !DILocation(line: 296, column: 2, scope: !15668)
!15677 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !309, file: !309, line: 443, type: !15678, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15680)
!15678 = !DISubroutineType(types: !15679)
!15679 = !{null, !2557, !2557}
!15680 = !{!15681, !15682, !15683}
!15681 = !DILocalVariable(name: "successor", arg: 1, scope: !15677, file: !309, line: 443, type: !2557)
!15682 = !DILocalVariable(name: "node", arg: 2, scope: !15677, file: !309, line: 443, type: !2557)
!15683 = !DILocalVariable(name: "prev", scope: !15677, file: !309, line: 445, type: !15684)
!15684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2557)
!15685 = !DILocation(line: 0, scope: !15677)
!15686 = !DILocation(line: 445, column: 39, scope: !15677)
!15687 = !DILocation(line: 447, column: 8, scope: !15677)
!15688 = !DILocation(line: 447, column: 13, scope: !15677)
!15689 = !DILocation(line: 448, column: 8, scope: !15677)
!15690 = !DILocation(line: 448, column: 13, scope: !15677)
!15691 = !DILocation(line: 449, column: 8, scope: !15677)
!15692 = !DILocation(line: 449, column: 13, scope: !15677)
!15693 = !DILocation(line: 450, column: 18, scope: !15677)
!15694 = !DILocation(line: 451, column: 1, scope: !15677)
!15695 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !309, file: !309, line: 341, type: !15696, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15698)
!15696 = !DISubroutineType(types: !15697)
!15697 = !{!2557, !15625, !2557}
!15698 = !{!15699, !15700}
!15699 = !DILocalVariable(name: "list", arg: 1, scope: !15695, file: !309, line: 341, type: !15625)
!15700 = !DILocalVariable(name: "node", arg: 2, scope: !15695, file: !309, line: 342, type: !2557)
!15701 = !DILocation(line: 0, scope: !15695)
!15702 = !DILocation(line: 344, column: 15, scope: !15695)
!15703 = !DILocation(line: 344, column: 9, scope: !15695)
!15704 = !DILocation(line: 344, column: 26, scope: !15695)
!15705 = !DILocation(line: 344, column: 2, scope: !15695)
!15706 = distinct !DISubprogram(name: "sys_dlist_append", scope: !309, file: !309, line: 404, type: !15707, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15709)
!15707 = !DISubroutineType(types: !15708)
!15708 = !{null, !15625, !2557}
!15709 = !{!15710, !15711, !15712}
!15710 = !DILocalVariable(name: "list", arg: 1, scope: !15706, file: !309, line: 404, type: !15625)
!15711 = !DILocalVariable(name: "node", arg: 2, scope: !15706, file: !309, line: 404, type: !2557)
!15712 = !DILocalVariable(name: "tail", scope: !15706, file: !309, line: 406, type: !15684)
!15713 = !DILocation(line: 0, scope: !15706)
!15714 = !DILocation(line: 406, column: 34, scope: !15706)
!15715 = !DILocation(line: 408, column: 8, scope: !15706)
!15716 = !DILocation(line: 408, column: 13, scope: !15706)
!15717 = !DILocation(line: 409, column: 8, scope: !15706)
!15718 = !DILocation(line: 409, column: 13, scope: !15706)
!15719 = !DILocation(line: 411, column: 8, scope: !15706)
!15720 = !DILocation(line: 411, column: 13, scope: !15706)
!15721 = !DILocation(line: 412, column: 13, scope: !15706)
!15722 = !DILocation(line: 413, column: 1, scope: !15706)
!15723 = distinct !DISubprogram(name: "update_cache", scope: !2561, file: !2561, line: 559, type: !8546, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15724)
!15724 = !{!15725, !15726}
!15725 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15723, file: !2561, line: 559, type: !103)
!15726 = !DILocalVariable(name: "thread", scope: !15723, file: !2561, line: 562, type: !2456)
!15727 = !DILocation(line: 0, scope: !15723)
!15728 = !DILocation(line: 239, column: 9, scope: !15729, inlinedAt: !15732)
!15729 = distinct !DISubprogram(name: "runq_best", scope: !2561, file: !2561, line: 237, type: !15730, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !461)
!15730 = !DISubroutineType(types: !15731)
!15731 = !{!2456}
!15732 = distinct !DILocation(line: 314, column: 28, scope: !15733, inlinedAt: !15736)
!15733 = distinct !DISubprogram(name: "next_up", scope: !2561, file: !2561, line: 312, type: !15730, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15734)
!15734 = !{!15735}
!15735 = !DILocalVariable(name: "thread", scope: !15733, file: !2561, line: 314, type: !2456)
!15736 = distinct !DILocation(line: 562, column: 28, scope: !15723)
!15737 = !DILocation(line: 0, scope: !15733, inlinedAt: !15736)
!15738 = !DILocation(line: 340, column: 17, scope: !15733, inlinedAt: !15736)
!15739 = !DILocation(line: 340, column: 9, scope: !15733, inlinedAt: !15736)
!15740 = !DILocalVariable(name: "thread", arg: 1, scope: !15741, file: !2561, line: 127, type: !2456)
!15741 = distinct !DISubprogram(name: "should_preempt", scope: !2561, file: !2561, line: 127, type: !15742, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15744)
!15742 = !DISubroutineType(types: !15743)
!15743 = !{!157, !2456, !103}
!15744 = !{!15740, !15745}
!15745 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15741, file: !2561, line: 128, type: !103)
!15746 = !DILocation(line: 0, scope: !15741, inlinedAt: !15747)
!15747 = distinct !DILocation(line: 564, column: 6, scope: !15748)
!15748 = distinct !DILexicalBlock(scope: !15723, file: !2561, line: 564, column: 6)
!15749 = !DILocation(line: 133, column: 17, scope: !15750, inlinedAt: !15747)
!15750 = distinct !DILexicalBlock(scope: !15741, file: !2561, line: 133, column: 6)
!15751 = !DILocation(line: 0, scope: !15748)
!15752 = !DILocation(line: 133, column: 6, scope: !15741, inlinedAt: !15747)
!15753 = !DILocation(line: 140, column: 6, scope: !15754, inlinedAt: !15747)
!15754 = distinct !DILexicalBlock(scope: !15741, file: !2561, line: 140, column: 6)
!15755 = !DILocation(line: 140, column: 6, scope: !15741, inlinedAt: !15747)
!15756 = !DILocation(line: 150, column: 9, scope: !15757, inlinedAt: !15747)
!15757 = distinct !DILexicalBlock(scope: !15741, file: !2561, line: 149, column: 6)
!15758 = !DILocation(line: 149, column: 6, scope: !15741, inlinedAt: !15747)
!15759 = !DILocation(line: 157, column: 6, scope: !15760, inlinedAt: !15747)
!15760 = distinct !DILexicalBlock(scope: !15741, file: !2561, line: 157, column: 6)
!15761 = !DILocation(line: 564, column: 6, scope: !15723)
!15762 = !DILocation(line: 566, column: 14, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15764, file: !2561, line: 566, column: 7)
!15764 = distinct !DILexicalBlock(scope: !15748, file: !2561, line: 564, column: 42)
!15765 = !DILocation(line: 566, column: 7, scope: !15764)
!15766 = !DILocation(line: 567, column: 4, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15763, file: !2561, line: 566, column: 27)
!15768 = !DILocation(line: 568, column: 3, scope: !15767)
!15769 = !DILocation(line: 585, column: 1, scope: !15723)
!15770 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2561, file: !2561, line: 1144, type: !15771, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15773)
!15771 = !DISubroutineType(types: !15772)
!15772 = !{!2456, !15625}
!15773 = !{!15774, !15775, !15776}
!15774 = !DILocalVariable(name: "pq", arg: 1, scope: !15770, file: !2561, line: 1144, type: !15625)
!15775 = !DILocalVariable(name: "thread", scope: !15770, file: !2561, line: 1146, type: !2456)
!15776 = !DILocalVariable(name: "n", scope: !15770, file: !2561, line: 1147, type: !2557)
!15777 = !DILocation(line: 0, scope: !15770)
!15778 = !DILocation(line: 1147, column: 19, scope: !15770)
!15779 = !DILocation(line: 1152, column: 2, scope: !15770)
!15780 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14430, file: !14430, line: 115, type: !15540, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15781)
!15781 = !{!15782}
!15782 = !DILocalVariable(name: "thread", arg: 1, scope: !15780, file: !14430, line: 115, type: !2456)
!15783 = !DILocation(line: 0, scope: !15780)
!15784 = !DILocation(line: 117, column: 46, scope: !15780)
!15785 = !DILocation(line: 117, column: 10, scope: !15780)
!15786 = !DILocation(line: 117, column: 9, scope: !15780)
!15787 = !DILocation(line: 117, column: 2, scope: !15780)
!15788 = distinct !DISubprogram(name: "is_preempt", scope: !2561, file: !2561, line: 62, type: !15398, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15789)
!15789 = !{!15790}
!15790 = !DILocalVariable(name: "thread", arg: 1, scope: !15788, file: !2561, line: 62, type: !2456)
!15791 = !DILocation(line: 0, scope: !15788)
!15792 = !DILocation(line: 65, column: 22, scope: !15788)
!15793 = !DILocation(line: 65, column: 30, scope: !15788)
!15794 = !DILocation(line: 65, column: 2, scope: !15788)
!15795 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14824, file: !14824, line: 35, type: !15796, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15800)
!15796 = !DISubroutineType(types: !15797)
!15797 = !{!157, !15798}
!15798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15799, size: 32)
!15799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2507)
!15800 = !{!15801}
!15801 = !DILocalVariable(name: "to", arg: 1, scope: !15795, file: !14824, line: 35, type: !15798)
!15802 = !DILocation(line: 0, scope: !15795)
!15803 = !DILocation(line: 37, column: 35, scope: !15795)
!15804 = !DILocation(line: 37, column: 10, scope: !15795)
!15805 = !DILocation(line: 37, column: 9, scope: !15795)
!15806 = !DILocation(line: 37, column: 2, scope: !15795)
!15807 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !309, file: !309, line: 225, type: !15808, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15812)
!15808 = !DISubroutineType(types: !15809)
!15809 = !{!157, !15810}
!15810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15811, size: 32)
!15811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2466)
!15812 = !{!15813}
!15813 = !DILocalVariable(name: "node", arg: 1, scope: !15807, file: !309, line: 225, type: !15810)
!15814 = !DILocation(line: 0, scope: !15807)
!15815 = !DILocation(line: 227, column: 15, scope: !15807)
!15816 = !DILocation(line: 227, column: 20, scope: !15807)
!15817 = !DILocation(line: 227, column: 2, scope: !15807)
!15818 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !309, file: !309, line: 325, type: !15696, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15819)
!15819 = !{!15820, !15821}
!15820 = !DILocalVariable(name: "list", arg: 1, scope: !15818, file: !309, line: 325, type: !15625)
!15821 = !DILocalVariable(name: "node", arg: 2, scope: !15818, file: !309, line: 326, type: !2557)
!15822 = !DILocation(line: 0, scope: !15818)
!15823 = !DILocation(line: 328, column: 24, scope: !15818)
!15824 = !DILocation(line: 328, column: 15, scope: !15818)
!15825 = !DILocation(line: 328, column: 9, scope: !15818)
!15826 = !DILocation(line: 328, column: 45, scope: !15818)
!15827 = !DILocation(line: 328, column: 2, scope: !15818)
!15828 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !309, file: !309, line: 266, type: !15829, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15831)
!15829 = !DISubroutineType(types: !15830)
!15830 = !{!157, !15625}
!15831 = !{!15832}
!15832 = !DILocalVariable(name: "list", arg: 1, scope: !15828, file: !309, line: 266, type: !15625)
!15833 = !DILocation(line: 0, scope: !15828)
!15834 = !DILocation(line: 268, column: 15, scope: !15828)
!15835 = !DILocation(line: 268, column: 20, scope: !15828)
!15836 = !DILocation(line: 268, column: 2, scope: !15828)
!15837 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !309, file: !309, line: 496, type: !15838, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15840)
!15838 = !DISubroutineType(types: !15839)
!15839 = !{null, !2557}
!15840 = !{!15841, !15842, !15843}
!15841 = !DILocalVariable(name: "node", arg: 1, scope: !15837, file: !309, line: 496, type: !2557)
!15842 = !DILocalVariable(name: "prev", scope: !15837, file: !309, line: 498, type: !15684)
!15843 = !DILocalVariable(name: "next", scope: !15837, file: !309, line: 499, type: !15684)
!15844 = !DILocation(line: 0, scope: !15837)
!15845 = !DILocation(line: 498, column: 34, scope: !15837)
!15846 = !DILocation(line: 499, column: 34, scope: !15837)
!15847 = !DILocation(line: 501, column: 8, scope: !15837)
!15848 = !DILocation(line: 501, column: 13, scope: !15837)
!15849 = !DILocation(line: 502, column: 8, scope: !15837)
!15850 = !DILocation(line: 502, column: 13, scope: !15837)
!15851 = !DILocation(line: 503, column: 2, scope: !15837)
!15852 = !DILocation(line: 504, column: 1, scope: !15837)
!15853 = distinct !DISubprogram(name: "sys_dnode_init", scope: !309, file: !309, line: 211, type: !15838, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15854)
!15854 = !{!15855}
!15855 = !DILocalVariable(name: "node", arg: 1, scope: !15853, file: !309, line: 211, type: !2557)
!15856 = !DILocation(line: 0, scope: !15853)
!15857 = !DILocation(line: 213, column: 8, scope: !15853)
!15858 = !DILocation(line: 213, column: 13, scope: !15853)
!15859 = !DILocation(line: 214, column: 8, scope: !15853)
!15860 = !DILocation(line: 214, column: 13, scope: !15853)
!15861 = !DILocation(line: 215, column: 1, scope: !15853)
!15862 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14430, file: !14430, line: 131, type: !15863, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15865)
!15863 = !DISubroutineType(types: !15864)
!15864 = !{!157, !2456, !121}
!15865 = !{!15866, !15867}
!15866 = !DILocalVariable(name: "thread", arg: 1, scope: !15862, file: !14430, line: 131, type: !2456)
!15867 = !DILocalVariable(name: "state", arg: 2, scope: !15862, file: !14430, line: 131, type: !121)
!15868 = !DILocation(line: 0, scope: !15862)
!15869 = !DILocation(line: 133, column: 23, scope: !15862)
!15870 = !DILocation(line: 133, column: 45, scope: !15862)
!15871 = !DILocation(line: 133, column: 2, scope: !15862)
!15872 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14430, file: !14430, line: 211, type: !15873, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15875)
!15873 = !DISubroutineType(types: !15874)
!15874 = !{!157, !103, !103}
!15875 = !{!15876, !15877}
!15876 = !DILocalVariable(name: "prio", arg: 1, scope: !15872, file: !14430, line: 211, type: !103)
!15877 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15872, file: !14430, line: 211, type: !103)
!15878 = !DILocation(line: 0, scope: !15872)
!15879 = !DILocation(line: 213, column: 9, scope: !15872)
!15880 = !DILocation(line: 213, column: 2, scope: !15872)
!15881 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14430, file: !14430, line: 83, type: !15540, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15882)
!15882 = !{!15883}
!15883 = !DILocalVariable(name: "thread", arg: 1, scope: !15881, file: !14430, line: 83, type: !2456)
!15884 = !DILocation(line: 0, scope: !15881)
!15885 = !DILocation(line: 89, column: 16, scope: !15881)
!15886 = !DILocation(line: 89, column: 2, scope: !15881)
!15887 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14430, file: !14430, line: 206, type: !15873, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15888)
!15888 = !{!15889, !15890}
!15889 = !DILocalVariable(name: "prio1", arg: 1, scope: !15887, file: !14430, line: 206, type: !103)
!15890 = !DILocalVariable(name: "prio2", arg: 2, scope: !15887, file: !14430, line: 206, type: !103)
!15891 = !DILocation(line: 0, scope: !15887)
!15892 = !DILocation(line: 208, column: 15, scope: !15887)
!15893 = !DILocation(line: 208, column: 2, scope: !15887)
!15894 = distinct !DISubprogram(name: "z_ready_thread", scope: !2561, file: !2561, line: 635, type: !15380, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15895)
!15895 = !{!15896, !15897, !15899}
!15896 = !DILocalVariable(name: "thread", arg: 1, scope: !15894, file: !2561, line: 635, type: !2456)
!15897 = !DILocalVariable(name: "__i", scope: !15898, file: !2561, line: 637, type: !15414)
!15898 = distinct !DILexicalBlock(scope: !15894, file: !2561, line: 637, column: 2)
!15899 = !DILocalVariable(name: "__key", scope: !15898, file: !2561, line: 637, type: !15414)
!15900 = !DILocation(line: 0, scope: !15894)
!15901 = !DILocation(line: 0, scope: !15898)
!15902 = !DILocation(line: 0, scope: !15422, inlinedAt: !15903)
!15903 = distinct !DILocation(line: 637, column: 2, scope: !15898)
!15904 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !15903)
!15906 = !DILocation(line: 0, scope: !15431, inlinedAt: !15905)
!15907 = !DILocation(line: 639, column: 4, scope: !15908)
!15908 = distinct !DILexicalBlock(scope: !15909, file: !2561, line: 638, column: 41)
!15909 = distinct !DILexicalBlock(scope: !15910, file: !2561, line: 638, column: 7)
!15910 = distinct !DILexicalBlock(scope: !15911, file: !2561, line: 637, column: 26)
!15911 = distinct !DILexicalBlock(scope: !15898, file: !2561, line: 637, column: 2)
!15912 = !DILocation(line: 0, scope: !15449, inlinedAt: !15913)
!15913 = distinct !DILocation(line: 637, column: 2, scope: !15911)
!15914 = !DILocation(line: 0, scope: !15457, inlinedAt: !15915)
!15915 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !15913)
!15916 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !15915)
!15917 = !DILocation(line: 642, column: 1, scope: !15894)
!15918 = distinct !DISubprogram(name: "ready_thread", scope: !2561, file: !2561, line: 617, type: !15380, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15919)
!15919 = !{!15920}
!15920 = !DILocalVariable(name: "thread", arg: 1, scope: !15918, file: !2561, line: 617, type: !2456)
!15921 = !DILocation(line: 0, scope: !15918)
!15922 = !DILocation(line: 626, column: 7, scope: !15923)
!15923 = distinct !DILexicalBlock(scope: !15918, file: !2561, line: 626, column: 6)
!15924 = !DILocation(line: 626, column: 34, scope: !15923)
!15925 = !DILocation(line: 626, column: 37, scope: !15923)
!15926 = !DILocation(line: 626, column: 6, scope: !15918)
!15927 = !DILocation(line: 0, scope: !15608, inlinedAt: !15928)
!15928 = distinct !DILocation(line: 629, column: 3, scope: !15929)
!15929 = distinct !DILexicalBlock(scope: !15923, file: !2561, line: 626, column: 64)
!15930 = !DILocation(line: 252, column: 15, scope: !15608, inlinedAt: !15928)
!15931 = !DILocation(line: 252, column: 28, scope: !15608, inlinedAt: !15928)
!15932 = !DILocation(line: 0, scope: !15615, inlinedAt: !15933)
!15933 = distinct !DILocation(line: 254, column: 3, scope: !15619, inlinedAt: !15928)
!15934 = !DILocation(line: 0, scope: !15622, inlinedAt: !15935)
!15935 = distinct !DILocation(line: 229, column: 2, scope: !15615, inlinedAt: !15933)
!15936 = !DILocation(line: 188, column: 2, scope: !15632, inlinedAt: !15935)
!15937 = !DILocation(line: 188, column: 2, scope: !15634, inlinedAt: !15935)
!15938 = !DILocation(line: 0, scope: !15632, inlinedAt: !15935)
!15939 = !DILocation(line: 189, column: 7, scope: !15637, inlinedAt: !15935)
!15940 = !DILocation(line: 189, column: 35, scope: !15637, inlinedAt: !15935)
!15941 = !DILocation(line: 189, column: 7, scope: !15638, inlinedAt: !15935)
!15942 = !DILocation(line: 191, column: 21, scope: !15642, inlinedAt: !15935)
!15943 = !DILocation(line: 190, column: 4, scope: !15642, inlinedAt: !15935)
!15944 = !DILocation(line: 192, column: 4, scope: !15642, inlinedAt: !15935)
!15945 = distinct !{!15945, !15936, !15946}
!15946 = !DILocation(line: 194, column: 2, scope: !15632, inlinedAt: !15935)
!15947 = !DILocation(line: 196, column: 37, scope: !15622, inlinedAt: !15935)
!15948 = !DILocation(line: 196, column: 2, scope: !15622, inlinedAt: !15935)
!15949 = !DILocation(line: 197, column: 1, scope: !15622, inlinedAt: !15935)
!15950 = !DILocation(line: 630, column: 3, scope: !15929)
!15951 = !DILocation(line: 632, column: 2, scope: !15929)
!15952 = !DILocation(line: 633, column: 1, scope: !15918)
!15953 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14430, file: !14430, line: 120, type: !15540, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15954)
!15954 = !{!15955}
!15955 = !DILocalVariable(name: "thread", arg: 1, scope: !15953, file: !14430, line: 120, type: !2456)
!15956 = !DILocation(line: 0, scope: !15953)
!15957 = !DILocation(line: 122, column: 12, scope: !15953)
!15958 = !DILocation(line: 122, column: 62, scope: !15953)
!15959 = !DILocation(line: 123, column: 4, scope: !15953)
!15960 = !DILocation(line: 122, column: 2, scope: !15953)
!15961 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2561, file: !2561, line: 644, type: !15380, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15962)
!15962 = !{!15963, !15964, !15966}
!15963 = !DILocalVariable(name: "thread", arg: 1, scope: !15961, file: !2561, line: 644, type: !2456)
!15964 = !DILocalVariable(name: "__i", scope: !15965, file: !2561, line: 646, type: !15414)
!15965 = distinct !DILexicalBlock(scope: !15961, file: !2561, line: 646, column: 2)
!15966 = !DILocalVariable(name: "__key", scope: !15965, file: !2561, line: 646, type: !15414)
!15967 = !DILocation(line: 0, scope: !15961)
!15968 = !DILocation(line: 0, scope: !15965)
!15969 = !DILocation(line: 0, scope: !15422, inlinedAt: !15970)
!15970 = distinct !DILocation(line: 646, column: 2, scope: !15965)
!15971 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !15972)
!15972 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !15970)
!15973 = !DILocation(line: 0, scope: !15431, inlinedAt: !15972)
!15974 = !DILocation(line: 647, column: 3, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15976, file: !2561, line: 646, column: 26)
!15976 = distinct !DILexicalBlock(scope: !15965, file: !2561, line: 646, column: 2)
!15977 = !DILocation(line: 0, scope: !15449, inlinedAt: !15978)
!15978 = distinct !DILocation(line: 646, column: 2, scope: !15976)
!15979 = !DILocation(line: 0, scope: !15457, inlinedAt: !15980)
!15980 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !15978)
!15981 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !15980)
!15982 = !DILocation(line: 649, column: 1, scope: !15961)
!15983 = distinct !DISubprogram(name: "z_sched_start", scope: !2561, file: !2561, line: 651, type: !15380, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !15984)
!15984 = !{!15985, !15986}
!15985 = !DILocalVariable(name: "thread", arg: 1, scope: !15983, file: !2561, line: 651, type: !2456)
!15986 = !DILocalVariable(name: "key", scope: !15983, file: !2561, line: 653, type: !15414)
!15987 = !DILocation(line: 0, scope: !15983)
!15988 = !DILocation(line: 0, scope: !15422, inlinedAt: !15989)
!15989 = distinct !DILocation(line: 653, column: 25, scope: !15983)
!15990 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !15991)
!15991 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !15989)
!15992 = !DILocation(line: 0, scope: !15431, inlinedAt: !15991)
!15993 = !DILocation(line: 655, column: 6, scope: !15994)
!15994 = distinct !DILexicalBlock(scope: !15983, file: !2561, line: 655, column: 6)
!15995 = !DILocation(line: 655, column: 6, scope: !15983)
!15996 = !DILocation(line: 0, scope: !15449, inlinedAt: !15997)
!15997 = distinct !DILocation(line: 656, column: 3, scope: !15998)
!15998 = distinct !DILexicalBlock(scope: !15994, file: !2561, line: 655, column: 36)
!15999 = !DILocation(line: 0, scope: !15457, inlinedAt: !16000)
!16000 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !15997)
!16001 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16000)
!16002 = !DILocation(line: 657, column: 3, scope: !15998)
!16003 = !DILocation(line: 660, column: 2, scope: !15983)
!16004 = !DILocation(line: 661, column: 2, scope: !15983)
!16005 = !DILocation(line: 662, column: 2, scope: !15983)
!16006 = !DILocation(line: 663, column: 1, scope: !15983)
!16007 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14430, file: !14430, line: 126, type: !15540, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16008)
!16008 = !{!16009}
!16009 = !DILocalVariable(name: "thread", arg: 1, scope: !16007, file: !14430, line: 126, type: !2456)
!16010 = !DILocation(line: 0, scope: !16007)
!16011 = !DILocation(line: 128, column: 23, scope: !16007)
!16012 = !DILocation(line: 128, column: 36, scope: !16007)
!16013 = !DILocation(line: 128, column: 56, scope: !16007)
!16014 = !DILocation(line: 128, column: 2, scope: !16007)
!16015 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14430, file: !14430, line: 155, type: !15380, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16016)
!16016 = !{!16017}
!16017 = !DILocalVariable(name: "thread", arg: 1, scope: !16015, file: !14430, line: 155, type: !2456)
!16018 = !DILocation(line: 0, scope: !16015)
!16019 = !DILocation(line: 157, column: 15, scope: !16015)
!16020 = !DILocation(line: 157, column: 28, scope: !16015)
!16021 = !DILocation(line: 158, column: 1, scope: !16015)
!16022 = distinct !DISubprogram(name: "z_reschedule", scope: !2561, file: !2561, line: 967, type: !15450, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16023)
!16023 = !{!16024, !16025}
!16024 = !DILocalVariable(name: "lock", arg: 1, scope: !16022, file: !2561, line: 967, type: !15425)
!16025 = !DILocalVariable(name: "key", arg: 2, scope: !16022, file: !2561, line: 967, type: !15414)
!16026 = !DILocation(line: 0, scope: !16022)
!16027 = !DILocation(line: 969, column: 6, scope: !16028)
!16028 = distinct !DILexicalBlock(scope: !16022, file: !2561, line: 969, column: 6)
!16029 = !DILocation(line: 969, column: 23, scope: !16028)
!16030 = !DILocation(line: 969, column: 26, scope: !16028)
!16031 = !DILocation(line: 969, column: 6, scope: !16022)
!16032 = !DILocalVariable(name: "key", arg: 2, scope: !16033, file: !14534, line: 193, type: !15414)
!16033 = distinct !DISubprogram(name: "z_swap", scope: !14534, file: !14534, line: 193, type: !16034, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16036)
!16034 = !DISubroutineType(types: !16035)
!16035 = !{!103, !15425, !15414}
!16036 = !{!16037, !16032}
!16037 = !DILocalVariable(name: "lock", arg: 1, scope: !16033, file: !14534, line: 193, type: !15425)
!16038 = !DILocation(line: 0, scope: !16033, inlinedAt: !16039)
!16039 = distinct !DILocation(line: 970, column: 3, scope: !16040)
!16040 = distinct !DILexicalBlock(scope: !16028, file: !2561, line: 969, column: 39)
!16041 = !DILocation(line: 196, column: 9, scope: !16033, inlinedAt: !16039)
!16042 = !DILocation(line: 971, column: 2, scope: !16040)
!16043 = !DILocation(line: 0, scope: !15449, inlinedAt: !16044)
!16044 = distinct !DILocation(line: 972, column: 3, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !16028, file: !2561, line: 971, column: 9)
!16046 = !DILocation(line: 0, scope: !15457, inlinedAt: !16047)
!16047 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !16044)
!16048 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16047)
!16049 = !DILocation(line: 975, column: 1, scope: !16022)
!16050 = distinct !DISubprogram(name: "resched", scope: !2561, file: !2561, line: 940, type: !16051, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16053)
!16051 = !DISubroutineType(types: !16052)
!16052 = !{!157, !121}
!16053 = !{!16054}
!16054 = !DILocalVariable(name: "key", arg: 1, scope: !16050, file: !2561, line: 940, type: !121)
!16055 = !DILocation(line: 0, scope: !16050)
!16056 = !DILocalVariable(name: "key", arg: 1, scope: !16057, file: !5884, line: 112, type: !32)
!16057 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5884, file: !5884, line: 112, type: !16058, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16060)
!16058 = !DISubroutineType(types: !16059)
!16059 = !{!157, !32}
!16060 = !{!16056}
!16061 = !DILocation(line: 0, scope: !16057, inlinedAt: !16062)
!16062 = distinct !DILocation(line: 946, column: 9, scope: !16050)
!16063 = !DILocation(line: 115, column: 13, scope: !16057, inlinedAt: !16062)
!16064 = !DILocation(line: 946, column: 32, scope: !16050)
!16065 = !DILocation(line: 1031, column: 3, scope: !16066, inlinedAt: !16069)
!16066 = distinct !DISubprogram(name: "__get_IPSR", scope: !6904, file: !6904, line: 1027, type: !6985, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16067)
!16067 = !{!16068}
!16068 = !DILocalVariable(name: "result", scope: !16066, file: !6904, line: 1029, type: !121)
!16069 = distinct !DILocation(line: 48, column: 10, scope: !16070, inlinedAt: !16071)
!16070 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7698, file: !7698, line: 46, type: !7699, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !461)
!16071 = distinct !DILocation(line: 946, column: 36, scope: !16050)
!16072 = !{i64 3768845}
!16073 = !DILocation(line: 0, scope: !16066, inlinedAt: !16069)
!16074 = !DILocation(line: 48, column: 9, scope: !16070, inlinedAt: !16071)
!16075 = !DILocation(line: 946, column: 2, scope: !16050)
!16076 = distinct !DISubprogram(name: "need_swap", scope: !2561, file: !2561, line: 953, type: !7699, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16077)
!16077 = !{!16078}
!16078 = !DILocalVariable(name: "new_thread", scope: !16076, file: !2561, line: 959, type: !2456)
!16079 = !DILocation(line: 962, column: 31, scope: !16076)
!16080 = !DILocation(line: 0, scope: !16076)
!16081 = !DILocation(line: 963, column: 23, scope: !16076)
!16082 = !DILocation(line: 963, column: 20, scope: !16076)
!16083 = !DILocation(line: 963, column: 2, scope: !16076)
!16084 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14534, file: !14534, line: 181, type: !6914, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16085)
!16085 = !{!16086, !16087}
!16086 = !DILocalVariable(name: "key", arg: 1, scope: !16084, file: !14534, line: 181, type: !32)
!16087 = !DILocalVariable(name: "ret", scope: !16084, file: !14534, line: 183, type: !103)
!16088 = !DILocation(line: 0, scope: !16084)
!16089 = !DILocation(line: 185, column: 8, scope: !16084)
!16090 = !DILocation(line: 186, column: 2, scope: !16084)
!16091 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2561, file: !2561, line: 665, type: !15380, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16092)
!16092 = !{!16093, !16094, !16096}
!16093 = !DILocalVariable(name: "thread", arg: 1, scope: !16091, file: !2561, line: 665, type: !2456)
!16094 = !DILocalVariable(name: "__i", scope: !16095, file: !2561, line: 671, type: !15414)
!16095 = distinct !DILexicalBlock(scope: !16091, file: !2561, line: 671, column: 2)
!16096 = !DILocalVariable(name: "__key", scope: !16095, file: !2561, line: 671, type: !15414)
!16097 = !DILocation(line: 0, scope: !16091)
!16098 = !DILocation(line: 669, column: 8, scope: !16091)
!16099 = !DILocation(line: 0, scope: !16095)
!16100 = !DILocation(line: 0, scope: !15422, inlinedAt: !16101)
!16101 = distinct !DILocation(line: 671, column: 2, scope: !16095)
!16102 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16103)
!16103 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16101)
!16104 = !DILocation(line: 0, scope: !15431, inlinedAt: !16103)
!16105 = !DILocation(line: 672, column: 7, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16107, file: !2561, line: 672, column: 7)
!16107 = distinct !DILexicalBlock(scope: !16108, file: !2561, line: 671, column: 26)
!16108 = distinct !DILexicalBlock(scope: !16095, file: !2561, line: 671, column: 2)
!16109 = !DILocation(line: 672, column: 7, scope: !16107)
!16110 = !DILocation(line: 0, scope: !15591, inlinedAt: !16111)
!16111 = distinct !DILocation(line: 673, column: 4, scope: !16112)
!16112 = distinct !DILexicalBlock(scope: !16106, file: !2561, line: 672, column: 35)
!16113 = !DILocation(line: 266, column: 15, scope: !15591, inlinedAt: !16111)
!16114 = !DILocation(line: 266, column: 28, scope: !15591, inlinedAt: !16111)
!16115 = !DILocation(line: 0, scope: !15599, inlinedAt: !16116)
!16116 = distinct !DILocation(line: 268, column: 3, scope: !15603, inlinedAt: !16111)
!16117 = !DILocation(line: 234, column: 2, scope: !15599, inlinedAt: !16116)
!16118 = !DILocation(line: 674, column: 3, scope: !16112)
!16119 = !DILocation(line: 675, column: 3, scope: !16107)
!16120 = !DILocation(line: 676, column: 26, scope: !16107)
!16121 = !DILocation(line: 676, column: 23, scope: !16107)
!16122 = !DILocation(line: 676, column: 3, scope: !16107)
!16123 = !DILocation(line: 0, scope: !15449, inlinedAt: !16124)
!16124 = distinct !DILocation(line: 671, column: 2, scope: !16108)
!16125 = !DILocation(line: 0, scope: !15457, inlinedAt: !16126)
!16126 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !16124)
!16127 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16126)
!16128 = !DILocation(line: 679, column: 16, scope: !16129)
!16129 = distinct !DILexicalBlock(scope: !16091, file: !2561, line: 679, column: 6)
!16130 = !DILocation(line: 679, column: 13, scope: !16129)
!16131 = !DILocation(line: 679, column: 6, scope: !16091)
!16132 = !DILocation(line: 680, column: 3, scope: !16133)
!16133 = distinct !DILexicalBlock(scope: !16129, file: !2561, line: 679, column: 26)
!16134 = !DILocation(line: 681, column: 2, scope: !16133)
!16135 = !DILocation(line: 684, column: 1, scope: !16091)
!16136 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14824, file: !14824, line: 52, type: !15398, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16137)
!16137 = !{!16138}
!16138 = !DILocalVariable(name: "thread", arg: 1, scope: !16136, file: !14824, line: 52, type: !2456)
!16139 = !DILocation(line: 0, scope: !16136)
!16140 = !DILocation(line: 54, column: 39, scope: !16136)
!16141 = !DILocation(line: 54, column: 9, scope: !16136)
!16142 = !DILocation(line: 54, column: 2, scope: !16136)
!16143 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14430, file: !14430, line: 141, type: !15380, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16144)
!16144 = !{!16145}
!16145 = !DILocalVariable(name: "thread", arg: 1, scope: !16143, file: !14430, line: 141, type: !2456)
!16146 = !DILocation(line: 0, scope: !16143)
!16147 = !DILocation(line: 143, column: 15, scope: !16143)
!16148 = !DILocation(line: 143, column: 28, scope: !16143)
!16149 = !DILocation(line: 146, column: 1, scope: !16143)
!16150 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14430, file: !14430, line: 73, type: !3318, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !461)
!16151 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16152)
!16152 = distinct !DILocation(line: 75, column: 30, scope: !16150)
!16153 = !DILocation(line: 0, scope: !15431, inlinedAt: !16152)
!16154 = !DILocation(line: 75, column: 9, scope: !16150)
!16155 = !DILocation(line: 76, column: 1, scope: !16150)
!16156 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2561, file: !2561, line: 977, type: !6995, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16157)
!16157 = !{!16158}
!16158 = !DILocalVariable(name: "key", arg: 1, scope: !16156, file: !2561, line: 977, type: !121)
!16159 = !DILocation(line: 0, scope: !16156)
!16160 = !DILocation(line: 979, column: 6, scope: !16161)
!16161 = distinct !DILexicalBlock(scope: !16156, file: !2561, line: 979, column: 6)
!16162 = !DILocation(line: 979, column: 6, scope: !16156)
!16163 = !DILocation(line: 980, column: 3, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16161, file: !2561, line: 979, column: 20)
!16165 = !DILocation(line: 981, column: 2, scope: !16164)
!16166 = !DILocation(line: 0, scope: !15457, inlinedAt: !16167)
!16167 = distinct !DILocation(line: 982, column: 3, scope: !16168)
!16168 = distinct !DILexicalBlock(scope: !16161, file: !2561, line: 981, column: 9)
!16169 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16167)
!16170 = !DILocation(line: 985, column: 1, scope: !16156)
!16171 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2561, file: !2561, line: 695, type: !15380, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16172)
!16172 = !{!16173, !16174}
!16173 = !DILocalVariable(name: "thread", arg: 1, scope: !16171, file: !2561, line: 695, type: !2456)
!16174 = !DILocalVariable(name: "key", scope: !16171, file: !2561, line: 699, type: !15414)
!16175 = !DILocation(line: 0, scope: !16171)
!16176 = !DILocation(line: 0, scope: !15422, inlinedAt: !16177)
!16177 = distinct !DILocation(line: 699, column: 25, scope: !16171)
!16178 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16179)
!16179 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16177)
!16180 = !DILocation(line: 0, scope: !15431, inlinedAt: !16179)
!16181 = !DILocation(line: 702, column: 7, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !16171, file: !2561, line: 702, column: 6)
!16183 = !DILocation(line: 702, column: 6, scope: !16171)
!16184 = !DILocation(line: 0, scope: !15449, inlinedAt: !16185)
!16185 = distinct !DILocation(line: 703, column: 3, scope: !16186)
!16186 = distinct !DILexicalBlock(scope: !16182, file: !2561, line: 702, column: 38)
!16187 = !DILocation(line: 0, scope: !15457, inlinedAt: !16188)
!16188 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !16185)
!16189 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16188)
!16190 = !DILocation(line: 704, column: 3, scope: !16186)
!16191 = !DILocation(line: 707, column: 2, scope: !16171)
!16192 = !DILocation(line: 708, column: 2, scope: !16171)
!16193 = !DILocation(line: 710, column: 2, scope: !16171)
!16194 = !DILocation(line: 713, column: 1, scope: !16171)
!16195 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14430, file: !14430, line: 96, type: !15540, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16196)
!16196 = !{!16197}
!16197 = !DILocalVariable(name: "thread", arg: 1, scope: !16195, file: !14430, line: 96, type: !2456)
!16198 = !DILocation(line: 0, scope: !16195)
!16199 = !DILocation(line: 98, column: 23, scope: !16195)
!16200 = !DILocation(line: 98, column: 36, scope: !16195)
!16201 = !DILocation(line: 98, column: 57, scope: !16195)
!16202 = !DILocation(line: 98, column: 2, scope: !16195)
!16203 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14430, file: !14430, line: 148, type: !15380, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16204)
!16204 = !{!16205}
!16205 = !DILocalVariable(name: "thread", arg: 1, scope: !16203, file: !14430, line: 148, type: !2456)
!16206 = !DILocation(line: 0, scope: !16203)
!16207 = !DILocation(line: 150, column: 15, scope: !16203)
!16208 = !DILocation(line: 150, column: 28, scope: !16203)
!16209 = !DILocation(line: 153, column: 1, scope: !16203)
!16210 = distinct !DISubprogram(name: "z_pend_thread", scope: !2561, file: !2561, line: 770, type: !16211, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16217)
!16211 = !DISubroutineType(types: !16212)
!16212 = !{null, !2456, !2487, !16213}
!16213 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1790, line: 67, baseType: !16214)
!16214 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1790, line: 65, size: 64, elements: !16215)
!16215 = !{!16216}
!16216 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16214, file: !1790, line: 66, baseType: !1789, size: 64)
!16217 = !{!16218, !16219, !16220, !16221, !16223}
!16218 = !DILocalVariable(name: "thread", arg: 1, scope: !16210, file: !2561, line: 770, type: !2456)
!16219 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16210, file: !2561, line: 770, type: !2487)
!16220 = !DILocalVariable(name: "timeout", arg: 3, scope: !16210, file: !2561, line: 771, type: !16213)
!16221 = !DILocalVariable(name: "__i", scope: !16222, file: !2561, line: 774, type: !15414)
!16222 = distinct !DILexicalBlock(scope: !16210, file: !2561, line: 774, column: 2)
!16223 = !DILocalVariable(name: "__key", scope: !16222, file: !2561, line: 774, type: !15414)
!16224 = !DILocation(line: 0, scope: !16210)
!16225 = !DILocation(line: 0, scope: !16222)
!16226 = !DILocation(line: 0, scope: !15422, inlinedAt: !16227)
!16227 = distinct !DILocation(line: 774, column: 2, scope: !16222)
!16228 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16229)
!16229 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16227)
!16230 = !DILocation(line: 0, scope: !15431, inlinedAt: !16229)
!16231 = !DILocation(line: 775, column: 3, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16233, file: !2561, line: 774, column: 26)
!16233 = distinct !DILexicalBlock(scope: !16222, file: !2561, line: 774, column: 2)
!16234 = !DILocation(line: 0, scope: !15449, inlinedAt: !16235)
!16235 = distinct !DILocation(line: 774, column: 2, scope: !16233)
!16236 = !DILocation(line: 0, scope: !15457, inlinedAt: !16237)
!16237 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !16235)
!16238 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16237)
!16239 = !DILocation(line: 777, column: 1, scope: !16210)
!16240 = distinct !DISubprogram(name: "pend_locked", scope: !2561, file: !2561, line: 760, type: !16211, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16241)
!16241 = !{!16242, !16243, !16244}
!16242 = !DILocalVariable(name: "thread", arg: 1, scope: !16240, file: !2561, line: 760, type: !2456)
!16243 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16240, file: !2561, line: 760, type: !2487)
!16244 = !DILocalVariable(name: "timeout", arg: 3, scope: !16240, file: !2561, line: 761, type: !16213)
!16245 = !DILocation(line: 0, scope: !16240)
!16246 = !DILocation(line: 766, column: 2, scope: !16240)
!16247 = !DILocation(line: 767, column: 2, scope: !16240)
!16248 = !DILocation(line: 768, column: 1, scope: !16240)
!16249 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2561, file: !2561, line: 740, type: !16250, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16252)
!16250 = !DISubroutineType(types: !16251)
!16251 = !{null, !2456, !2487}
!16252 = !{!16253, !16254}
!16253 = !DILocalVariable(name: "thread", arg: 1, scope: !16249, file: !2561, line: 740, type: !2456)
!16254 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16249, file: !2561, line: 740, type: !2487)
!16255 = !DILocation(line: 0, scope: !16249)
!16256 = !DILocation(line: 742, column: 2, scope: !16249)
!16257 = !DILocation(line: 743, column: 2, scope: !16249)
!16258 = !DILocation(line: 747, column: 13, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16249, file: !2561, line: 747, column: 6)
!16260 = !DILocation(line: 747, column: 6, scope: !16249)
!16261 = !DILocation(line: 748, column: 16, scope: !16262)
!16262 = distinct !DILexicalBlock(scope: !16259, file: !2561, line: 747, column: 22)
!16263 = !DILocation(line: 748, column: 26, scope: !16262)
!16264 = !DILocation(line: 749, column: 28, scope: !16262)
!16265 = !DILocation(line: 0, scope: !15622, inlinedAt: !16266)
!16266 = distinct !DILocation(line: 749, column: 3, scope: !16262)
!16267 = !DILocation(line: 188, column: 2, scope: !15632, inlinedAt: !16266)
!16268 = !DILocation(line: 188, column: 2, scope: !15634, inlinedAt: !16266)
!16269 = !DILocation(line: 0, scope: !15632, inlinedAt: !16266)
!16270 = !DILocation(line: 189, column: 7, scope: !15637, inlinedAt: !16266)
!16271 = !DILocation(line: 189, column: 35, scope: !15637, inlinedAt: !16266)
!16272 = !DILocation(line: 189, column: 7, scope: !15638, inlinedAt: !16266)
!16273 = !DILocation(line: 191, column: 21, scope: !15642, inlinedAt: !16266)
!16274 = !DILocation(line: 190, column: 4, scope: !15642, inlinedAt: !16266)
!16275 = !DILocation(line: 192, column: 4, scope: !15642, inlinedAt: !16266)
!16276 = distinct !{!16276, !16267, !16277}
!16277 = !DILocation(line: 194, column: 2, scope: !15632, inlinedAt: !16266)
!16278 = !DILocation(line: 196, column: 37, scope: !15622, inlinedAt: !16266)
!16279 = !DILocation(line: 196, column: 2, scope: !15622, inlinedAt: !16266)
!16280 = !DILocation(line: 197, column: 1, scope: !15622, inlinedAt: !16266)
!16281 = !DILocation(line: 751, column: 1, scope: !16249)
!16282 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2561, file: !2561, line: 753, type: !16283, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16285)
!16283 = !DISubroutineType(types: !16284)
!16284 = !{null, !2456, !16213}
!16285 = !{!16286, !16287}
!16286 = !DILocalVariable(name: "thread", arg: 1, scope: !16282, file: !2561, line: 753, type: !2456)
!16287 = !DILocalVariable(name: "timeout", arg: 2, scope: !16282, file: !2561, line: 753, type: !16213)
!16288 = !DILocation(line: 0, scope: !16282)
!16289 = !DILocation(line: 755, column: 7, scope: !16290)
!16290 = distinct !DILexicalBlock(scope: !16282, file: !2561, line: 755, column: 6)
!16291 = !DILocation(line: 755, column: 6, scope: !16282)
!16292 = !DILocation(line: 756, column: 3, scope: !16293)
!16293 = distinct !DILexicalBlock(scope: !16290, file: !2561, line: 755, column: 41)
!16294 = !DILocation(line: 757, column: 2, scope: !16293)
!16295 = !DILocation(line: 758, column: 1, scope: !16282)
!16296 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14824, file: !14824, line: 47, type: !16283, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16297)
!16297 = !{!16298, !16299}
!16298 = !DILocalVariable(name: "thread", arg: 1, scope: !16296, file: !14824, line: 47, type: !2456)
!16299 = !DILocalVariable(name: "ticks", arg: 2, scope: !16296, file: !14824, line: 47, type: !16213)
!16300 = !DILocation(line: 0, scope: !16296)
!16301 = !DILocation(line: 49, column: 30, scope: !16296)
!16302 = !DILocation(line: 49, column: 2, scope: !16296)
!16303 = !DILocation(line: 50, column: 1, scope: !16296)
!16304 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2561, file: !2561, line: 795, type: !2513, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16305)
!16305 = !{!16306, !16307, !16308, !16310, !16311}
!16306 = !DILocalVariable(name: "timeout", arg: 1, scope: !16304, file: !2561, line: 795, type: !2515)
!16307 = !DILocalVariable(name: "thread", scope: !16304, file: !2561, line: 797, type: !2456)
!16308 = !DILocalVariable(name: "__i", scope: !16309, file: !2561, line: 800, type: !15414)
!16309 = distinct !DILexicalBlock(scope: !16304, file: !2561, line: 800, column: 2)
!16310 = !DILocalVariable(name: "__key", scope: !16309, file: !2561, line: 800, type: !15414)
!16311 = !DILocalVariable(name: "killed", scope: !16312, file: !2561, line: 801, type: !157)
!16312 = distinct !DILexicalBlock(scope: !16313, file: !2561, line: 800, column: 26)
!16313 = distinct !DILexicalBlock(scope: !16309, file: !2561, line: 800, column: 2)
!16314 = !DILocation(line: 0, scope: !16304)
!16315 = !DILocation(line: 797, column: 28, scope: !16304)
!16316 = !DILocation(line: 0, scope: !16309)
!16317 = !DILocation(line: 0, scope: !15422, inlinedAt: !16318)
!16318 = distinct !DILocation(line: 800, column: 2, scope: !16309)
!16319 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16320)
!16320 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16318)
!16321 = !DILocation(line: 0, scope: !15431, inlinedAt: !16320)
!16322 = !DILocation(line: 801, column: 27, scope: !16312)
!16323 = !DILocation(line: 801, column: 32, scope: !16312)
!16324 = !DILocation(line: 801, column: 61, scope: !16312)
!16325 = !DILocation(line: 0, scope: !16312)
!16326 = !DILocation(line: 804, column: 7, scope: !16312)
!16327 = !DILocation(line: 805, column: 21, scope: !16328)
!16328 = distinct !DILexicalBlock(scope: !16329, file: !2561, line: 805, column: 8)
!16329 = distinct !DILexicalBlock(scope: !16330, file: !2561, line: 804, column: 16)
!16330 = distinct !DILexicalBlock(scope: !16312, file: !2561, line: 804, column: 7)
!16331 = !DILocation(line: 805, column: 31, scope: !16328)
!16332 = !DILocation(line: 805, column: 8, scope: !16329)
!16333 = !DILocation(line: 806, column: 5, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16328, file: !2561, line: 805, column: 40)
!16335 = !DILocation(line: 807, column: 4, scope: !16334)
!16336 = !DILocation(line: 808, column: 4, scope: !16329)
!16337 = !DILocation(line: 809, column: 4, scope: !16329)
!16338 = !DILocation(line: 810, column: 4, scope: !16329)
!16339 = !DILocation(line: 811, column: 3, scope: !16329)
!16340 = !DILocation(line: 0, scope: !15449, inlinedAt: !16341)
!16341 = distinct !DILocation(line: 800, column: 2, scope: !16313)
!16342 = !DILocation(line: 0, scope: !15457, inlinedAt: !16343)
!16343 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !16341)
!16344 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16343)
!16345 = !DILocation(line: 813, column: 1, scope: !16304)
!16346 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2561, file: !2561, line: 779, type: !15380, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16347)
!16347 = !{!16348}
!16348 = !DILocalVariable(name: "thread", arg: 1, scope: !16346, file: !2561, line: 779, type: !2456)
!16349 = !DILocation(line: 0, scope: !16346)
!16350 = !DILocation(line: 781, column: 2, scope: !16346)
!16351 = !DILocation(line: 782, column: 2, scope: !16346)
!16352 = !DILocation(line: 783, column: 15, scope: !16346)
!16353 = !DILocation(line: 783, column: 25, scope: !16346)
!16354 = !DILocation(line: 784, column: 1, scope: !16346)
!16355 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14430, file: !14430, line: 165, type: !15380, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16356)
!16356 = !{!16357}
!16357 = !DILocalVariable(name: "thread", arg: 1, scope: !16355, file: !14430, line: 165, type: !2456)
!16358 = !DILocation(line: 0, scope: !16355)
!16359 = !DILocation(line: 167, column: 15, scope: !16355)
!16360 = !DILocation(line: 167, column: 28, scope: !16355)
!16361 = !DILocation(line: 168, column: 1, scope: !16355)
!16362 = distinct !DISubprogram(name: "unready_thread", scope: !2561, file: !2561, line: 731, type: !15380, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16363)
!16363 = !{!16364}
!16364 = !DILocalVariable(name: "thread", arg: 1, scope: !16362, file: !2561, line: 731, type: !2456)
!16365 = !DILocation(line: 0, scope: !16362)
!16366 = !DILocation(line: 733, column: 6, scope: !16367)
!16367 = distinct !DILexicalBlock(scope: !16362, file: !2561, line: 733, column: 6)
!16368 = !DILocation(line: 733, column: 6, scope: !16362)
!16369 = !DILocation(line: 0, scope: !15591, inlinedAt: !16370)
!16370 = distinct !DILocation(line: 734, column: 3, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16367, file: !2561, line: 733, column: 34)
!16372 = !DILocation(line: 266, column: 15, scope: !15591, inlinedAt: !16370)
!16373 = !DILocation(line: 266, column: 28, scope: !15591, inlinedAt: !16370)
!16374 = !DILocation(line: 0, scope: !15599, inlinedAt: !16375)
!16375 = distinct !DILocation(line: 268, column: 3, scope: !15603, inlinedAt: !16370)
!16376 = !DILocation(line: 234, column: 2, scope: !15599, inlinedAt: !16375)
!16377 = !DILocation(line: 735, column: 2, scope: !16371)
!16378 = !DILocation(line: 736, column: 25, scope: !16362)
!16379 = !DILocation(line: 736, column: 22, scope: !16362)
!16380 = !DILocation(line: 736, column: 2, scope: !16362)
!16381 = !DILocation(line: 737, column: 1, scope: !16362)
!16382 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14430, file: !14430, line: 160, type: !15380, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16383)
!16383 = !{!16384}
!16384 = !DILocalVariable(name: "thread", arg: 1, scope: !16382, file: !14430, line: 160, type: !2456)
!16385 = !DILocation(line: 0, scope: !16382)
!16386 = !DILocation(line: 162, column: 15, scope: !16382)
!16387 = !DILocation(line: 162, column: 28, scope: !16382)
!16388 = !DILocation(line: 163, column: 1, scope: !16382)
!16389 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2561, file: !2561, line: 786, type: !15380, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16390)
!16390 = !{!16391, !16392, !16394}
!16391 = !DILocalVariable(name: "thread", arg: 1, scope: !16389, file: !2561, line: 786, type: !2456)
!16392 = !DILocalVariable(name: "__i", scope: !16393, file: !2561, line: 788, type: !15414)
!16393 = distinct !DILexicalBlock(scope: !16389, file: !2561, line: 788, column: 2)
!16394 = !DILocalVariable(name: "__key", scope: !16393, file: !2561, line: 788, type: !15414)
!16395 = !DILocation(line: 0, scope: !16389)
!16396 = !DILocation(line: 0, scope: !16393)
!16397 = !DILocation(line: 0, scope: !15422, inlinedAt: !16398)
!16398 = distinct !DILocation(line: 788, column: 2, scope: !16393)
!16399 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16400)
!16400 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16398)
!16401 = !DILocation(line: 0, scope: !15431, inlinedAt: !16400)
!16402 = !DILocation(line: 789, column: 3, scope: !16403)
!16403 = distinct !DILexicalBlock(scope: !16404, file: !2561, line: 788, column: 26)
!16404 = distinct !DILexicalBlock(scope: !16393, file: !2561, line: 788, column: 2)
!16405 = !DILocation(line: 0, scope: !15449, inlinedAt: !16406)
!16406 = distinct !DILocation(line: 788, column: 2, scope: !16404)
!16407 = !DILocation(line: 0, scope: !15457, inlinedAt: !16408)
!16408 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !16406)
!16409 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16408)
!16410 = !DILocation(line: 791, column: 1, scope: !16389)
!16411 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2561, file: !2561, line: 816, type: !16412, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16414)
!16412 = !DISubroutineType(types: !16413)
!16413 = !{!103, !121, !2487, !16213}
!16414 = !{!16415, !16416, !16417, !16418, !16419, !16421}
!16415 = !DILocalVariable(name: "key", arg: 1, scope: !16411, file: !2561, line: 816, type: !121)
!16416 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16411, file: !2561, line: 816, type: !2487)
!16417 = !DILocalVariable(name: "timeout", arg: 3, scope: !16411, file: !2561, line: 816, type: !16213)
!16418 = !DILocalVariable(name: "ret", scope: !16411, file: !2561, line: 828, type: !103)
!16419 = !DILocalVariable(name: "__i", scope: !16420, file: !2561, line: 829, type: !15414)
!16420 = distinct !DILexicalBlock(scope: !16411, file: !2561, line: 829, column: 2)
!16421 = !DILocalVariable(name: "__key", scope: !16420, file: !2561, line: 829, type: !15414)
!16422 = !DILocation(line: 0, scope: !16411)
!16423 = !DILocation(line: 823, column: 14, scope: !16411)
!16424 = !DILocation(line: 823, column: 2, scope: !16411)
!16425 = !DILocation(line: 826, column: 20, scope: !16411)
!16426 = !DILocation(line: 826, column: 18, scope: !16411)
!16427 = !DILocation(line: 828, column: 12, scope: !16411)
!16428 = !DILocation(line: 0, scope: !16420)
!16429 = !DILocation(line: 0, scope: !15422, inlinedAt: !16430)
!16430 = distinct !DILocation(line: 829, column: 2, scope: !16420)
!16431 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16432)
!16432 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16430)
!16433 = !DILocation(line: 0, scope: !15431, inlinedAt: !16432)
!16434 = !DILocation(line: 830, column: 7, scope: !16435)
!16435 = distinct !DILexicalBlock(scope: !16436, file: !2561, line: 830, column: 7)
!16436 = distinct !DILexicalBlock(scope: !16437, file: !2561, line: 829, column: 26)
!16437 = distinct !DILexicalBlock(scope: !16420, file: !2561, line: 829, column: 2)
!16438 = !DILocation(line: 830, column: 26, scope: !16435)
!16439 = !DILocation(line: 830, column: 23, scope: !16435)
!16440 = !DILocation(line: 830, column: 7, scope: !16436)
!16441 = !DILocation(line: 831, column: 20, scope: !16442)
!16442 = distinct !DILexicalBlock(scope: !16435, file: !2561, line: 830, column: 36)
!16443 = !DILocation(line: 832, column: 3, scope: !16442)
!16444 = !DILocation(line: 0, scope: !15449, inlinedAt: !16445)
!16445 = distinct !DILocation(line: 829, column: 2, scope: !16437)
!16446 = !DILocation(line: 0, scope: !15457, inlinedAt: !16447)
!16447 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !16445)
!16448 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16447)
!16449 = !DILocation(line: 834, column: 2, scope: !16411)
!16450 = distinct !DISubprogram(name: "z_pend_curr", scope: !2561, file: !2561, line: 840, type: !16451, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16453)
!16451 = !DISubroutineType(types: !16452)
!16452 = !{!103, !15425, !15414, !2487, !16213}
!16453 = !{!16454, !16455, !16456, !16457}
!16454 = !DILocalVariable(name: "lock", arg: 1, scope: !16450, file: !2561, line: 840, type: !15425)
!16455 = !DILocalVariable(name: "key", arg: 2, scope: !16450, file: !2561, line: 840, type: !15414)
!16456 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16450, file: !2561, line: 841, type: !2487)
!16457 = !DILocalVariable(name: "timeout", arg: 4, scope: !16450, file: !2561, line: 841, type: !16213)
!16458 = !DILocation(line: 0, scope: !16450)
!16459 = !DILocation(line: 844, column: 20, scope: !16450)
!16460 = !DILocation(line: 844, column: 18, scope: !16450)
!16461 = !DILocation(line: 0, scope: !15422, inlinedAt: !16462)
!16462 = distinct !DILocation(line: 856, column: 9, scope: !16450)
!16463 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16464)
!16464 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16462)
!16465 = !DILocation(line: 0, scope: !15431, inlinedAt: !16464)
!16466 = !DILocation(line: 857, column: 14, scope: !16450)
!16467 = !DILocation(line: 857, column: 2, scope: !16450)
!16468 = !DILocation(line: 0, scope: !16033, inlinedAt: !16469)
!16469 = distinct !DILocation(line: 859, column: 9, scope: !16450)
!16470 = !DILocation(line: 196, column: 9, scope: !16033, inlinedAt: !16469)
!16471 = !DILocation(line: 859, column: 2, scope: !16450)
!16472 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2561, file: !2561, line: 862, type: !16473, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16475)
!16473 = !DISubroutineType(types: !16474)
!16474 = !{!2456, !2487}
!16475 = !{!16476, !16477, !16478, !16480}
!16476 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16472, file: !2561, line: 862, type: !2487)
!16477 = !DILocalVariable(name: "thread", scope: !16472, file: !2561, line: 864, type: !2456)
!16478 = !DILocalVariable(name: "__i", scope: !16479, file: !2561, line: 866, type: !15414)
!16479 = distinct !DILexicalBlock(scope: !16472, file: !2561, line: 866, column: 2)
!16480 = !DILocalVariable(name: "__key", scope: !16479, file: !2561, line: 866, type: !15414)
!16481 = !DILocation(line: 0, scope: !16472)
!16482 = !DILocation(line: 0, scope: !16479)
!16483 = !DILocation(line: 0, scope: !15422, inlinedAt: !16484)
!16484 = distinct !DILocation(line: 866, column: 2, scope: !16479)
!16485 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16486)
!16486 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16484)
!16487 = !DILocation(line: 0, scope: !15431, inlinedAt: !16486)
!16488 = !DILocation(line: 867, column: 12, scope: !16489)
!16489 = distinct !DILexicalBlock(scope: !16490, file: !2561, line: 866, column: 26)
!16490 = distinct !DILexicalBlock(scope: !16479, file: !2561, line: 866, column: 2)
!16491 = !DILocation(line: 869, column: 14, scope: !16492)
!16492 = distinct !DILexicalBlock(scope: !16489, file: !2561, line: 869, column: 7)
!16493 = !DILocation(line: 869, column: 7, scope: !16489)
!16494 = !DILocation(line: 870, column: 4, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16492, file: !2561, line: 869, column: 23)
!16496 = !DILocation(line: 871, column: 3, scope: !16495)
!16497 = !DILocation(line: 0, scope: !15449, inlinedAt: !16498)
!16498 = distinct !DILocation(line: 866, column: 2, scope: !16490)
!16499 = !DILocation(line: 0, scope: !15457, inlinedAt: !16500)
!16500 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !16498)
!16501 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16500)
!16502 = !DILocation(line: 874, column: 2, scope: !16472)
!16503 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2561, file: !2561, line: 877, type: !16473, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16504)
!16504 = !{!16505, !16506, !16507, !16509}
!16505 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16503, file: !2561, line: 877, type: !2487)
!16506 = !DILocalVariable(name: "thread", scope: !16503, file: !2561, line: 879, type: !2456)
!16507 = !DILocalVariable(name: "__i", scope: !16508, file: !2561, line: 881, type: !15414)
!16508 = distinct !DILexicalBlock(scope: !16503, file: !2561, line: 881, column: 2)
!16509 = !DILocalVariable(name: "__key", scope: !16508, file: !2561, line: 881, type: !15414)
!16510 = !DILocation(line: 0, scope: !16503)
!16511 = !DILocation(line: 0, scope: !16508)
!16512 = !DILocation(line: 0, scope: !15422, inlinedAt: !16513)
!16513 = distinct !DILocation(line: 881, column: 2, scope: !16508)
!16514 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16515)
!16515 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16513)
!16516 = !DILocation(line: 0, scope: !15431, inlinedAt: !16515)
!16517 = !DILocation(line: 882, column: 12, scope: !16518)
!16518 = distinct !DILexicalBlock(scope: !16519, file: !2561, line: 881, column: 26)
!16519 = distinct !DILexicalBlock(scope: !16508, file: !2561, line: 881, column: 2)
!16520 = !DILocation(line: 884, column: 14, scope: !16521)
!16521 = distinct !DILexicalBlock(scope: !16518, file: !2561, line: 884, column: 7)
!16522 = !DILocation(line: 884, column: 7, scope: !16518)
!16523 = !DILocation(line: 885, column: 4, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16521, file: !2561, line: 884, column: 23)
!16525 = !DILocation(line: 886, column: 10, scope: !16524)
!16526 = !DILocation(line: 887, column: 3, scope: !16524)
!16527 = !DILocation(line: 0, scope: !15449, inlinedAt: !16528)
!16528 = distinct !DILocation(line: 881, column: 2, scope: !16519)
!16529 = !DILocation(line: 0, scope: !15457, inlinedAt: !16530)
!16530 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !16528)
!16531 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16530)
!16532 = !DILocation(line: 890, column: 2, scope: !16503)
!16533 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2561, file: !2561, line: 893, type: !15380, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16534)
!16534 = !{!16535}
!16535 = !DILocalVariable(name: "thread", arg: 1, scope: !16533, file: !2561, line: 893, type: !2456)
!16536 = !DILocation(line: 0, scope: !16533)
!16537 = !DILocation(line: 0, scope: !16389, inlinedAt: !16538)
!16538 = distinct !DILocation(line: 895, column: 2, scope: !16533)
!16539 = !DILocation(line: 0, scope: !16393, inlinedAt: !16538)
!16540 = !DILocation(line: 0, scope: !15422, inlinedAt: !16541)
!16541 = distinct !DILocation(line: 788, column: 2, scope: !16393, inlinedAt: !16538)
!16542 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16543)
!16543 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16541)
!16544 = !DILocation(line: 0, scope: !15431, inlinedAt: !16543)
!16545 = !DILocation(line: 789, column: 3, scope: !16403, inlinedAt: !16538)
!16546 = !DILocation(line: 0, scope: !15449, inlinedAt: !16547)
!16547 = distinct !DILocation(line: 788, column: 2, scope: !16404, inlinedAt: !16538)
!16548 = !DILocation(line: 0, scope: !15457, inlinedAt: !16549)
!16549 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !16547)
!16550 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16549)
!16551 = !DILocation(line: 896, column: 8, scope: !16533)
!16552 = !DILocation(line: 897, column: 1, scope: !16533)
!16553 = distinct !DISubprogram(name: "z_set_prio", scope: !2561, file: !2561, line: 902, type: !15742, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16554)
!16554 = !{!16555, !16556, !16557, !16558, !16560}
!16555 = !DILocalVariable(name: "thread", arg: 1, scope: !16553, file: !2561, line: 902, type: !2456)
!16556 = !DILocalVariable(name: "prio", arg: 2, scope: !16553, file: !2561, line: 902, type: !103)
!16557 = !DILocalVariable(name: "need_sched", scope: !16553, file: !2561, line: 904, type: !157)
!16558 = !DILocalVariable(name: "__i", scope: !16559, file: !2561, line: 906, type: !15414)
!16559 = distinct !DILexicalBlock(scope: !16553, file: !2561, line: 906, column: 2)
!16560 = !DILocalVariable(name: "__key", scope: !16559, file: !2561, line: 906, type: !15414)
!16561 = !DILocation(line: 0, scope: !16553)
!16562 = !DILocation(line: 0, scope: !16559)
!16563 = !DILocation(line: 0, scope: !15422, inlinedAt: !16564)
!16564 = distinct !DILocation(line: 906, column: 2, scope: !16559)
!16565 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16566)
!16566 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16564)
!16567 = !DILocation(line: 0, scope: !15431, inlinedAt: !16566)
!16568 = !DILocation(line: 907, column: 16, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16570, file: !2561, line: 906, column: 26)
!16570 = distinct !DILexicalBlock(scope: !16559, file: !2561, line: 906, column: 2)
!16571 = !DILocation(line: 909, column: 7, scope: !16569)
!16572 = !DILocation(line: 0, scope: !15591, inlinedAt: !16573)
!16573 = distinct !DILocation(line: 912, column: 5, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16575, file: !2561, line: 911, column: 63)
!16575 = distinct !DILexicalBlock(scope: !16576, file: !2561, line: 911, column: 8)
!16576 = distinct !DILexicalBlock(scope: !16577, file: !2561, line: 909, column: 19)
!16577 = distinct !DILexicalBlock(scope: !16569, file: !2561, line: 909, column: 7)
!16578 = !DILocation(line: 266, column: 28, scope: !15591, inlinedAt: !16573)
!16579 = !DILocation(line: 0, scope: !15599, inlinedAt: !16580)
!16580 = distinct !DILocation(line: 268, column: 3, scope: !15603, inlinedAt: !16573)
!16581 = !DILocation(line: 234, column: 2, scope: !15599, inlinedAt: !16580)
!16582 = !DILocation(line: 913, column: 23, scope: !16574)
!16583 = !DILocation(line: 0, scope: !15608, inlinedAt: !16584)
!16584 = distinct !DILocation(line: 914, column: 5, scope: !16574)
!16585 = !DILocation(line: 252, column: 28, scope: !15608, inlinedAt: !16584)
!16586 = !DILocation(line: 0, scope: !15615, inlinedAt: !16587)
!16587 = distinct !DILocation(line: 254, column: 3, scope: !15619, inlinedAt: !16584)
!16588 = !DILocation(line: 0, scope: !15622, inlinedAt: !16589)
!16589 = distinct !DILocation(line: 229, column: 2, scope: !15615, inlinedAt: !16587)
!16590 = !DILocation(line: 188, column: 2, scope: !15632, inlinedAt: !16589)
!16591 = !DILocation(line: 188, column: 2, scope: !15634, inlinedAt: !16589)
!16592 = !DILocation(line: 0, scope: !15632, inlinedAt: !16589)
!16593 = !DILocation(line: 189, column: 7, scope: !15637, inlinedAt: !16589)
!16594 = !DILocation(line: 189, column: 35, scope: !15637, inlinedAt: !16589)
!16595 = !DILocation(line: 189, column: 7, scope: !15638, inlinedAt: !16589)
!16596 = !DILocation(line: 190, column: 4, scope: !15642, inlinedAt: !16589)
!16597 = !DILocation(line: 192, column: 4, scope: !15642, inlinedAt: !16589)
!16598 = distinct !{!16598, !16590, !16599}
!16599 = !DILocation(line: 194, column: 2, scope: !15632, inlinedAt: !16589)
!16600 = !DILocation(line: 196, column: 2, scope: !15622, inlinedAt: !16589)
!16601 = !DILocation(line: 197, column: 1, scope: !15622, inlinedAt: !16589)
!16602 = !DILocation(line: 918, column: 4, scope: !16576)
!16603 = !DILocation(line: 919, column: 3, scope: !16576)
!16604 = !DILocation(line: 920, column: 22, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16577, file: !2561, line: 919, column: 10)
!16606 = !DILocation(line: 0, scope: !15449, inlinedAt: !16607)
!16607 = distinct !DILocation(line: 906, column: 2, scope: !16570)
!16608 = !DILocation(line: 0, scope: !15457, inlinedAt: !16609)
!16609 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !16607)
!16610 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16609)
!16611 = !DILocation(line: 926, column: 2, scope: !16553)
!16612 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2561, file: !2561, line: 929, type: !16613, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16615)
!16613 = !DISubroutineType(types: !16614)
!16614 = !{null, !2456, !103}
!16615 = !{!16616, !16617, !16618}
!16616 = !DILocalVariable(name: "thread", arg: 1, scope: !16612, file: !2561, line: 929, type: !2456)
!16617 = !DILocalVariable(name: "prio", arg: 2, scope: !16612, file: !2561, line: 929, type: !103)
!16618 = !DILocalVariable(name: "need_sched", scope: !16612, file: !2561, line: 931, type: !157)
!16619 = !DILocation(line: 0, scope: !16612)
!16620 = !DILocation(line: 931, column: 20, scope: !16612)
!16621 = !DILocation(line: 935, column: 17, scope: !16622)
!16622 = distinct !DILexicalBlock(scope: !16612, file: !2561, line: 935, column: 6)
!16623 = !DILocation(line: 935, column: 20, scope: !16622)
!16624 = !DILocation(line: 935, column: 35, scope: !16622)
!16625 = !DILocation(line: 935, column: 48, scope: !16622)
!16626 = !DILocation(line: 935, column: 6, scope: !16612)
!16627 = !DILocation(line: 936, column: 3, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16622, file: !2561, line: 935, column: 55)
!16629 = !DILocation(line: 937, column: 2, scope: !16628)
!16630 = !DILocation(line: 938, column: 1, scope: !16612)
!16631 = distinct !DISubprogram(name: "k_sched_lock", scope: !2561, file: !2561, line: 987, type: !3318, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16632)
!16632 = !{!16633, !16635}
!16633 = !DILocalVariable(name: "__i", scope: !16634, file: !2561, line: 989, type: !15414)
!16634 = distinct !DILexicalBlock(scope: !16631, file: !2561, line: 989, column: 2)
!16635 = !DILocalVariable(name: "__key", scope: !16634, file: !2561, line: 989, type: !15414)
!16636 = !DILocation(line: 0, scope: !16634)
!16637 = !DILocation(line: 0, scope: !15422, inlinedAt: !16638)
!16638 = distinct !DILocation(line: 989, column: 2, scope: !16634)
!16639 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16640)
!16640 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16638)
!16641 = !DILocation(line: 0, scope: !15431, inlinedAt: !16640)
!16642 = !DILocation(line: 992, column: 3, scope: !16643)
!16643 = distinct !DILexicalBlock(scope: !16644, file: !2561, line: 989, column: 26)
!16644 = distinct !DILexicalBlock(scope: !16634, file: !2561, line: 989, column: 2)
!16645 = !DILocation(line: 0, scope: !15449, inlinedAt: !16646)
!16646 = distinct !DILocation(line: 989, column: 2, scope: !16644)
!16647 = !DILocation(line: 0, scope: !15457, inlinedAt: !16648)
!16648 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !16646)
!16649 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16648)
!16650 = !DILocation(line: 994, column: 1, scope: !16631)
!16651 = distinct !DISubprogram(name: "z_sched_lock", scope: !14430, file: !14430, line: 251, type: !3318, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !461)
!16652 = !DILocation(line: 256, column: 4, scope: !16651)
!16653 = !DILocation(line: 256, column: 19, scope: !16651)
!16654 = !DILocation(line: 256, column: 2, scope: !16651)
!16655 = !DILocation(line: 258, column: 2, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16651, file: !14430, line: 258, column: 2)
!16657 = !{i64 2155186069}
!16658 = !DILocation(line: 259, column: 1, scope: !16651)
!16659 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2561, file: !2561, line: 996, type: !3318, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16660)
!16660 = !{!16661, !16663}
!16661 = !DILocalVariable(name: "__i", scope: !16662, file: !2561, line: 998, type: !15414)
!16662 = distinct !DILexicalBlock(scope: !16659, file: !2561, line: 998, column: 2)
!16663 = !DILocalVariable(name: "__key", scope: !16662, file: !2561, line: 998, type: !15414)
!16664 = !DILocation(line: 0, scope: !16662)
!16665 = !DILocation(line: 0, scope: !15422, inlinedAt: !16666)
!16666 = distinct !DILocation(line: 998, column: 2, scope: !16662)
!16667 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16668)
!16668 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16666)
!16669 = !DILocation(line: 0, scope: !15431, inlinedAt: !16668)
!16670 = !DILocation(line: 1002, column: 5, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16672, file: !2561, line: 998, column: 26)
!16672 = distinct !DILexicalBlock(scope: !16662, file: !2561, line: 998, column: 2)
!16673 = !DILocation(line: 1002, column: 20, scope: !16671)
!16674 = !DILocation(line: 1002, column: 3, scope: !16671)
!16675 = !DILocation(line: 1003, column: 3, scope: !16671)
!16676 = !DILocation(line: 0, scope: !15449, inlinedAt: !16677)
!16677 = distinct !DILocation(line: 998, column: 2, scope: !16672)
!16678 = !DILocation(line: 0, scope: !15457, inlinedAt: !16679)
!16679 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !16677)
!16680 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !16679)
!16681 = !DILocation(line: 1011, column: 2, scope: !16659)
!16682 = !DILocation(line: 1012, column: 1, scope: !16659)
!16683 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2561, file: !2561, line: 1014, type: !15730, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !461)
!16684 = !DILocation(line: 1028, column: 25, scope: !16683)
!16685 = !DILocation(line: 1028, column: 2, scope: !16683)
!16686 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2561, file: !2561, line: 1155, type: !16687, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16689)
!16687 = !DISubroutineType(types: !16688)
!16688 = !{!157, !2485, !2485}
!16689 = !{!16690, !16691, !16692, !16693, !16694}
!16690 = !DILocalVariable(name: "a", arg: 1, scope: !16686, file: !2561, line: 1155, type: !2485)
!16691 = !DILocalVariable(name: "b", arg: 2, scope: !16686, file: !2561, line: 1155, type: !2485)
!16692 = !DILocalVariable(name: "thread_a", scope: !16686, file: !2561, line: 1157, type: !2456)
!16693 = !DILocalVariable(name: "thread_b", scope: !16686, file: !2561, line: 1157, type: !2456)
!16694 = !DILocalVariable(name: "cmp", scope: !16686, file: !2561, line: 1158, type: !332)
!16695 = !DILocation(line: 0, scope: !16686)
!16696 = !DILocation(line: 1160, column: 13, scope: !16686)
!16697 = !DILocation(line: 1161, column: 13, scope: !16686)
!16698 = !DILocation(line: 1163, column: 8, scope: !16686)
!16699 = !DILocation(line: 1165, column: 10, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16686, file: !2561, line: 1165, column: 6)
!16701 = !DILocation(line: 1165, column: 6, scope: !16686)
!16702 = !DILocation(line: 1167, column: 17, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16700, file: !2561, line: 1167, column: 13)
!16704 = !DILocation(line: 1167, column: 13, scope: !16700)
!16705 = !DILocation(line: 1170, column: 25, scope: !16706)
!16706 = distinct !DILexicalBlock(scope: !16703, file: !2561, line: 1169, column: 9)
!16707 = !DILocation(line: 1170, column: 52, scope: !16706)
!16708 = !DILocation(line: 1170, column: 35, scope: !16706)
!16709 = !DILocation(line: 1170, column: 3, scope: !16706)
!16710 = !DILocation(line: 0, scope: !16700)
!16711 = !DILocation(line: 1173, column: 1, scope: !16686)
!16712 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2561, file: !2561, line: 1175, type: !16713, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16728)
!16713 = !DISubroutineType(types: !16714)
!16714 = !{null, !16715, !2456}
!16715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16716, size: 32)
!16716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16717, line: 37, size: 128, elements: !16718)
!16717 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16718 = !{!16719, !16727}
!16719 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16716, file: !16717, line: 38, baseType: !16720, size: 96)
!16720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !380, line: 83, size: 96, elements: !16721)
!16721 = !{!16722, !16723, !16726}
!16722 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16720, file: !380, line: 84, baseType: !2485, size: 32)
!16723 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16720, file: !380, line: 85, baseType: !16724, size: 32, offset: 32)
!16724 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !380, line: 81, baseType: !16725)
!16725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16687, size: 32)
!16726 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16720, file: !380, line: 86, baseType: !103, size: 32, offset: 64)
!16727 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16716, file: !16717, line: 39, baseType: !103, size: 32, offset: 96)
!16728 = !{!16729, !16730, !16731, !16732, !16741}
!16729 = !DILocalVariable(name: "pq", arg: 1, scope: !16712, file: !2561, line: 1175, type: !16715)
!16730 = !DILocalVariable(name: "thread", arg: 2, scope: !16712, file: !2561, line: 1175, type: !2456)
!16731 = !DILocalVariable(name: "t", scope: !16712, file: !2561, line: 1177, type: !2456)
!16732 = !DILocalVariable(name: "__f", scope: !16733, file: !2561, line: 1190, type: !16736)
!16733 = distinct !DILexicalBlock(scope: !16734, file: !2561, line: 1190, column: 3)
!16734 = distinct !DILexicalBlock(scope: !16735, file: !2561, line: 1189, column: 27)
!16735 = distinct !DILexicalBlock(scope: !16712, file: !2561, line: 1189, column: 6)
!16736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !380, line: 155, size: 96, elements: !16737)
!16737 = !{!16738, !16739, !16740}
!16738 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16736, file: !380, line: 156, baseType: !2556, size: 32)
!16739 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16736, file: !380, line: 157, baseType: !261, size: 32, offset: 32)
!16740 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16736, file: !380, line: 158, baseType: !332, size: 32, offset: 64)
!16741 = !DILocalVariable(name: "n", scope: !16742, file: !2561, line: 1190, type: !2485)
!16742 = distinct !DILexicalBlock(scope: !16743, file: !2561, line: 1190, column: 3)
!16743 = distinct !DILexicalBlock(scope: !16733, file: !2561, line: 1190, column: 3)
!16744 = !DILocation(line: 0, scope: !16712)
!16745 = !DILocation(line: 1181, column: 31, scope: !16712)
!16746 = !DILocation(line: 1181, column: 45, scope: !16712)
!16747 = !DILocation(line: 1181, column: 15, scope: !16712)
!16748 = !DILocation(line: 1181, column: 25, scope: !16712)
!16749 = !DILocation(line: 1189, column: 11, scope: !16735)
!16750 = !DILocation(line: 1189, column: 7, scope: !16735)
!16751 = !DILocation(line: 1189, column: 6, scope: !16712)
!16752 = !DILocation(line: 1190, column: 3, scope: !16733)
!16753 = !DILocation(line: 1190, column: 3, scope: !16742)
!16754 = !DILocation(line: 0, scope: !16742)
!16755 = !DILocation(line: 1190, column: 3, scope: !16743)
!16756 = !DILocation(line: 1193, column: 2, scope: !16734)
!16757 = !DILocation(line: 1191, column: 42, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !16743, file: !2561, line: 1190, column: 54)
!16759 = !DILocation(line: 1191, column: 12, scope: !16758)
!16760 = !DILocation(line: 1191, column: 22, scope: !16758)
!16761 = distinct !{!16761, !16752, !16762}
!16762 = !DILocation(line: 1192, column: 3, scope: !16733)
!16763 = !DILocation(line: 1195, column: 17, scope: !16712)
!16764 = !DILocation(line: 1195, column: 37, scope: !16712)
!16765 = !DILocation(line: 1195, column: 2, scope: !16712)
!16766 = !DILocation(line: 1196, column: 1, scope: !16712)
!16767 = !DISubprogram(name: "z_rb_foreach_next", scope: !380, file: !380, line: 176, type: !16768, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16768 = !DISubroutineType(types: !16769)
!16769 = !{!2485, !16770, !16771}
!16770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16720, size: 32)
!16771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16736, size: 32)
!16772 = !DISubprogram(name: "rb_insert", scope: !380, file: !380, line: 105, type: !16773, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16773 = !DISubroutineType(types: !16774)
!16774 = !{null, !16770, !2485}
!16775 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2561, file: !2561, line: 1198, type: !16713, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16776)
!16776 = !{!16777, !16778}
!16777 = !DILocalVariable(name: "pq", arg: 1, scope: !16775, file: !2561, line: 1198, type: !16715)
!16778 = !DILocalVariable(name: "thread", arg: 2, scope: !16775, file: !2561, line: 1198, type: !2456)
!16779 = !DILocation(line: 0, scope: !16775)
!16780 = !DILocation(line: 1202, column: 17, scope: !16775)
!16781 = !DILocation(line: 1202, column: 37, scope: !16775)
!16782 = !DILocation(line: 1202, column: 2, scope: !16775)
!16783 = !DILocation(line: 1204, column: 16, scope: !16784)
!16784 = distinct !DILexicalBlock(scope: !16775, file: !2561, line: 1204, column: 6)
!16785 = !DILocation(line: 1204, column: 7, scope: !16784)
!16786 = !DILocation(line: 1204, column: 6, scope: !16775)
!16787 = !DILocation(line: 1205, column: 7, scope: !16788)
!16788 = distinct !DILexicalBlock(scope: !16784, file: !2561, line: 1204, column: 22)
!16789 = !DILocation(line: 1205, column: 22, scope: !16788)
!16790 = !DILocation(line: 1206, column: 2, scope: !16788)
!16791 = !DILocation(line: 1207, column: 1, scope: !16775)
!16792 = !DISubprogram(name: "rb_remove", scope: !380, file: !380, line: 110, type: !16773, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16793 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2561, file: !2561, line: 1209, type: !16794, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16796)
!16794 = !DISubroutineType(types: !16795)
!16795 = !{!2456, !16715}
!16796 = !{!16797, !16798, !16799}
!16797 = !DILocalVariable(name: "pq", arg: 1, scope: !16793, file: !2561, line: 1209, type: !16715)
!16798 = !DILocalVariable(name: "thread", scope: !16793, file: !2561, line: 1211, type: !2456)
!16799 = !DILocalVariable(name: "n", scope: !16793, file: !2561, line: 1212, type: !2485)
!16800 = !DILocation(line: 0, scope: !16793)
!16801 = !DILocation(line: 1212, column: 37, scope: !16793)
!16802 = !DILocation(line: 1212, column: 21, scope: !16793)
!16803 = !DILocation(line: 1217, column: 2, scope: !16793)
!16804 = distinct !DISubprogram(name: "rb_get_min", scope: !380, file: !380, line: 115, type: !16805, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16807)
!16805 = !DISubroutineType(types: !16806)
!16806 = !{!2485, !16770}
!16807 = !{!16808}
!16808 = !DILocalVariable(name: "tree", arg: 1, scope: !16804, file: !380, line: 115, type: !16770)
!16809 = !DILocation(line: 0, scope: !16804)
!16810 = !DILocation(line: 117, column: 9, scope: !16804)
!16811 = !DILocation(line: 117, column: 2, scope: !16804)
!16812 = !DISubprogram(name: "z_rb_get_minmax", scope: !380, file: !380, line: 100, type: !16813, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16813 = !DISubroutineType(types: !16814)
!16814 = !{!2485, !16770, !154}
!16815 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2561, file: !2561, line: 1246, type: !16816, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16826)
!16816 = !DISubroutineType(types: !16817)
!16817 = !{!2456, !16818}
!16818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16819, size: 32)
!16819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16717, line: 53, size: 2080, elements: !16820)
!16820 = !{!16821, !16825}
!16821 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16819, file: !16717, line: 54, baseType: !16822, size: 2048)
!16822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2492, size: 2048, elements: !16823)
!16823 = !{!16824}
!16824 = !DISubrange(count: 32)
!16825 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16819, file: !16717, line: 55, baseType: !32, size: 32, offset: 2048)
!16826 = !{!16827, !16828, !16829, !16830}
!16827 = !DILocalVariable(name: "pq", arg: 1, scope: !16815, file: !2561, line: 1246, type: !16818)
!16828 = !DILocalVariable(name: "thread", scope: !16815, file: !2561, line: 1252, type: !2456)
!16829 = !DILocalVariable(name: "l", scope: !16815, file: !2561, line: 1253, type: !15625)
!16830 = !DILocalVariable(name: "n", scope: !16815, file: !2561, line: 1254, type: !2557)
!16831 = !DILocation(line: 0, scope: !16815)
!16832 = !DILocation(line: 1248, column: 11, scope: !16833)
!16833 = distinct !DILexicalBlock(scope: !16815, file: !2561, line: 1248, column: 6)
!16834 = !DILocation(line: 1248, column: 7, scope: !16833)
!16835 = !DILocation(line: 1248, column: 6, scope: !16815)
!16836 = !DILocation(line: 1253, column: 31, scope: !16815)
!16837 = !DILocation(line: 1253, column: 20, scope: !16815)
!16838 = !DILocation(line: 1254, column: 19, scope: !16815)
!16839 = !DILocation(line: 1260, column: 1, scope: !16815)
!16840 = distinct !DISubprogram(name: "z_unpend_all", scope: !2561, file: !2561, line: 1262, type: !16841, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16843)
!16841 = !DISubroutineType(types: !16842)
!16842 = !{!103, !2487}
!16843 = !{!16844, !16845, !16846}
!16844 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16840, file: !2561, line: 1262, type: !2487)
!16845 = !DILocalVariable(name: "need_sched", scope: !16840, file: !2561, line: 1264, type: !103)
!16846 = !DILocalVariable(name: "thread", scope: !16840, file: !2561, line: 1265, type: !2456)
!16847 = !DILocation(line: 0, scope: !16840)
!16848 = !DILocation(line: 1267, column: 19, scope: !16840)
!16849 = !DILocation(line: 1267, column: 41, scope: !16840)
!16850 = !DILocation(line: 1267, column: 2, scope: !16840)
!16851 = !DILocation(line: 1268, column: 3, scope: !16852)
!16852 = distinct !DILexicalBlock(scope: !16840, file: !2561, line: 1267, column: 50)
!16853 = !DILocation(line: 1269, column: 3, scope: !16852)
!16854 = distinct !{!16854, !16850, !16855}
!16855 = !DILocation(line: 1271, column: 2, scope: !16840)
!16856 = !DILocation(line: 1273, column: 2, scope: !16840)
!16857 = distinct !DISubprogram(name: "z_waitq_head", scope: !14756, file: !14756, line: 52, type: !16473, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16858)
!16858 = !{!16859}
!16859 = !DILocalVariable(name: "w", arg: 1, scope: !16857, file: !14756, line: 52, type: !2487)
!16860 = !DILocation(line: 0, scope: !16857)
!16861 = !DILocation(line: 54, column: 52, scope: !16857)
!16862 = !DILocation(line: 54, column: 28, scope: !16857)
!16863 = !DILocation(line: 54, column: 9, scope: !16857)
!16864 = !DILocation(line: 54, column: 2, scope: !16857)
!16865 = distinct !DISubprogram(name: "init_ready_q", scope: !2561, file: !2561, line: 1276, type: !16866, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16873)
!16866 = !DISubroutineType(types: !16867)
!16867 = !{null, !16868}
!16868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16869, size: 32)
!16869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !304, line: 83, size: 96, elements: !16870)
!16870 = !{!16871, !16872}
!16871 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16869, file: !304, line: 86, baseType: !2456, size: 32)
!16872 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16869, file: !304, line: 90, baseType: !2492, size: 64, offset: 32)
!16873 = !{!16874}
!16874 = !DILocalVariable(name: "rq", arg: 1, scope: !16865, file: !2561, line: 1276, type: !16868)
!16875 = !DILocation(line: 0, scope: !16865)
!16876 = !DILocation(line: 1289, column: 22, scope: !16865)
!16877 = !DILocation(line: 1289, column: 2, scope: !16865)
!16878 = !DILocation(line: 1291, column: 1, scope: !16865)
!16879 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !16880, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16882)
!16880 = !DISubroutineType(types: !16881)
!16881 = !{null, !15625}
!16882 = !{!16883}
!16883 = !DILocalVariable(name: "list", arg: 1, scope: !16879, file: !309, line: 197, type: !15625)
!16884 = !DILocation(line: 0, scope: !16879)
!16885 = !DILocation(line: 199, column: 8, scope: !16879)
!16886 = !DILocation(line: 199, column: 13, scope: !16879)
!16887 = !DILocation(line: 200, column: 8, scope: !16879)
!16888 = !DILocation(line: 200, column: 13, scope: !16879)
!16889 = !DILocation(line: 201, column: 1, scope: !16879)
!16890 = distinct !DISubprogram(name: "z_sched_init", scope: !2561, file: !2561, line: 1293, type: !3318, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !461)
!16891 = !DILocation(line: 1302, column: 2, scope: !16890)
!16892 = !DILocation(line: 1306, column: 2, scope: !16890)
!16893 = !DILocation(line: 1309, column: 1, scope: !16890)
!16894 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2561, file: !2561, line: 1311, type: !16895, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16898)
!16895 = !DISubroutineType(types: !16896)
!16896 = !{!103, !16897}
!16897 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !2456)
!16898 = !{!16899}
!16899 = !DILocalVariable(name: "thread", arg: 1, scope: !16894, file: !2561, line: 1311, type: !16897)
!16900 = !DILocation(line: 0, scope: !16894)
!16901 = !DILocation(line: 1313, column: 22, scope: !16894)
!16902 = !DILocation(line: 1313, column: 9, scope: !16894)
!16903 = !DILocation(line: 1313, column: 2, scope: !16894)
!16904 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2561, file: !2561, line: 1325, type: !16905, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16907)
!16905 = !DISubroutineType(types: !16906)
!16906 = !{null, !16897, !103}
!16907 = !{!16908, !16909, !16910}
!16908 = !DILocalVariable(name: "thread", arg: 1, scope: !16904, file: !2561, line: 1325, type: !16897)
!16909 = !DILocalVariable(name: "prio", arg: 2, scope: !16904, file: !2561, line: 1325, type: !103)
!16910 = !DILocalVariable(name: "th", scope: !16904, file: !2561, line: 1334, type: !2456)
!16911 = !DILocation(line: 0, scope: !16904)
!16912 = !DILocation(line: 1336, column: 2, scope: !16904)
!16913 = !DILocation(line: 1337, column: 1, scope: !16904)
!16914 = distinct !DISubprogram(name: "k_can_yield", scope: !2561, file: !2561, line: 1384, type: !7699, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !461)
!16915 = !DILocation(line: 1386, column: 11, scope: !16914)
!16916 = !DILocation(line: 1386, column: 29, scope: !16914)
!16917 = !DILocation(line: 1386, column: 32, scope: !16914)
!16918 = !DILocation(line: 1386, column: 46, scope: !16914)
!16919 = !DILocation(line: 1387, column: 28, scope: !16914)
!16920 = !DILocation(line: 1387, column: 4, scope: !16914)
!16921 = !DILocation(line: 1386, column: 2, scope: !16914)
!16922 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !300, file: !300, line: 989, type: !7699, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !461)
!16923 = !DILocation(line: 993, column: 10, scope: !16922)
!16924 = !DILocation(line: 993, column: 2, scope: !16922)
!16925 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2561, file: !2561, line: 1390, type: !3318, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16926)
!16926 = !{!16927}
!16927 = !DILocalVariable(name: "key", scope: !16925, file: !2561, line: 1396, type: !15414)
!16928 = !DILocation(line: 0, scope: !15422, inlinedAt: !16929)
!16929 = distinct !DILocation(line: 1396, column: 25, scope: !16925)
!16930 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !16931)
!16931 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !16929)
!16932 = !DILocation(line: 0, scope: !15431, inlinedAt: !16931)
!16933 = !DILocation(line: 0, scope: !16925)
!16934 = !DILocation(line: 1400, column: 18, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16936, file: !2561, line: 1399, column: 36)
!16936 = distinct !DILexicalBlock(scope: !16925, file: !2561, line: 1398, column: 6)
!16937 = !DILocation(line: 0, scope: !15591, inlinedAt: !16938)
!16938 = distinct !DILocation(line: 1400, column: 3, scope: !16935)
!16939 = !DILocation(line: 266, column: 15, scope: !15591, inlinedAt: !16938)
!16940 = !DILocation(line: 266, column: 28, scope: !15591, inlinedAt: !16938)
!16941 = !DILocation(line: 0, scope: !15599, inlinedAt: !16942)
!16942 = distinct !DILocation(line: 268, column: 3, scope: !15603, inlinedAt: !16938)
!16943 = !DILocation(line: 234, column: 2, scope: !15599, inlinedAt: !16942)
!16944 = !DILocation(line: 1402, column: 15, scope: !16925)
!16945 = !DILocation(line: 0, scope: !15608, inlinedAt: !16946)
!16946 = distinct !DILocation(line: 1402, column: 2, scope: !16925)
!16947 = !DILocation(line: 252, column: 15, scope: !15608, inlinedAt: !16946)
!16948 = !DILocation(line: 252, column: 28, scope: !15608, inlinedAt: !16946)
!16949 = !DILocation(line: 0, scope: !15615, inlinedAt: !16950)
!16950 = distinct !DILocation(line: 254, column: 3, scope: !15619, inlinedAt: !16946)
!16951 = !DILocation(line: 0, scope: !15622, inlinedAt: !16952)
!16952 = distinct !DILocation(line: 229, column: 2, scope: !15615, inlinedAt: !16950)
!16953 = !DILocation(line: 188, column: 2, scope: !15632, inlinedAt: !16952)
!16954 = !DILocation(line: 188, column: 2, scope: !15634, inlinedAt: !16952)
!16955 = !DILocation(line: 0, scope: !15632, inlinedAt: !16952)
!16956 = !DILocation(line: 189, column: 7, scope: !15637, inlinedAt: !16952)
!16957 = !DILocation(line: 189, column: 35, scope: !15637, inlinedAt: !16952)
!16958 = !DILocation(line: 189, column: 7, scope: !15638, inlinedAt: !16952)
!16959 = !DILocation(line: 191, column: 21, scope: !15642, inlinedAt: !16952)
!16960 = !DILocation(line: 190, column: 4, scope: !15642, inlinedAt: !16952)
!16961 = !DILocation(line: 192, column: 4, scope: !15642, inlinedAt: !16952)
!16962 = distinct !{!16962, !16953, !16963}
!16963 = !DILocation(line: 194, column: 2, scope: !15632, inlinedAt: !16952)
!16964 = !DILocation(line: 196, column: 37, scope: !15622, inlinedAt: !16952)
!16965 = !DILocation(line: 196, column: 2, scope: !15622, inlinedAt: !16952)
!16966 = !DILocation(line: 197, column: 1, scope: !15622, inlinedAt: !16952)
!16967 = !DILocation(line: 1403, column: 2, scope: !16925)
!16968 = !DILocation(line: 0, scope: !16033, inlinedAt: !16969)
!16969 = distinct !DILocation(line: 1404, column: 2, scope: !16925)
!16970 = !DILocation(line: 196, column: 9, scope: !16033, inlinedAt: !16969)
!16971 = !DILocation(line: 1405, column: 1, scope: !16925)
!16972 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2561, file: !2561, line: 1459, type: !16973, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16975)
!16973 = !DISubroutineType(types: !16974)
!16974 = !{!332, !16213}
!16975 = !{!16976, !16977, !16978}
!16976 = !DILocalVariable(name: "timeout", arg: 1, scope: !16972, file: !2561, line: 1459, type: !16213)
!16977 = !DILocalVariable(name: "ticks", scope: !16972, file: !2561, line: 1461, type: !1789)
!16978 = !DILocalVariable(name: "ret", scope: !16972, file: !2561, line: 1480, type: !332)
!16979 = !DILocation(line: 0, scope: !16972)
!16980 = !DILocation(line: 1468, column: 6, scope: !16981)
!16981 = distinct !DILexicalBlock(scope: !16972, file: !2561, line: 1468, column: 6)
!16982 = !DILocation(line: 1468, column: 6, scope: !16972)
!16983 = !DILocation(line: 1469, column: 20, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16981, file: !2561, line: 1468, column: 40)
!16985 = !DILocation(line: 1469, column: 3, scope: !16984)
!16986 = !DILocation(line: 1473, column: 3, scope: !16984)
!16987 = !DILocation(line: 1478, column: 10, scope: !16972)
!16988 = !DILocation(line: 1480, column: 16, scope: !16972)
!16989 = !DILocation(line: 1485, column: 1, scope: !16972)
!16990 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3751, file: !3751, line: 310, type: !16991, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16993)
!16991 = !DISubroutineType(types: !16992)
!16992 = !{null, !16897}
!16993 = !{!16994}
!16994 = !DILocalVariable(name: "thread", arg: 1, scope: !16990, file: !3751, line: 310, type: !16897)
!16995 = !DILocation(line: 0, scope: !16990)
!16996 = !DILocation(line: 319, column: 2, scope: !16997)
!16997 = distinct !DILexicalBlock(scope: !16990, file: !3751, line: 319, column: 2)
!16998 = !{i64 2155104458}
!16999 = !DILocation(line: 320, column: 2, scope: !16990)
!17000 = !DILocation(line: 321, column: 1, scope: !16990)
!17001 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2561, file: !2561, line: 1415, type: !17002, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17004)
!17002 = !DISubroutineType(types: !17003)
!17003 = !{!332, !1789}
!17004 = !{!17005, !17006, !17007, !17008}
!17005 = !DILocalVariable(name: "ticks", arg: 1, scope: !17001, file: !2561, line: 1415, type: !1789)
!17006 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17001, file: !2561, line: 1418, type: !121)
!17007 = !DILocalVariable(name: "timeout", scope: !17001, file: !2561, line: 1430, type: !16213)
!17008 = !DILocalVariable(name: "key", scope: !17001, file: !2561, line: 1437, type: !15414)
!17009 = !DILocation(line: 0, scope: !17001)
!17010 = !DILocation(line: 1425, column: 12, scope: !17011)
!17011 = distinct !DILexicalBlock(scope: !17001, file: !2561, line: 1425, column: 6)
!17012 = !DILocation(line: 1425, column: 6, scope: !17001)
!17013 = !DILocation(line: 1426, column: 3, scope: !17014)
!17014 = distinct !DILexicalBlock(scope: !17011, file: !2561, line: 1425, column: 18)
!17015 = !DILocation(line: 1427, column: 3, scope: !17014)
!17016 = !DILocation(line: 1431, column: 24, scope: !17017)
!17017 = distinct !DILexicalBlock(scope: !17001, file: !2561, line: 1431, column: 6)
!17018 = !DILocation(line: 1431, column: 6, scope: !17001)
!17019 = !DILocation(line: 1432, column: 35, scope: !17020)
!17020 = distinct !DILexicalBlock(scope: !17017, file: !2561, line: 1431, column: 30)
!17021 = !DILocation(line: 1432, column: 27, scope: !17020)
!17022 = !DILocation(line: 1433, column: 2, scope: !17020)
!17023 = !DILocation(line: 1434, column: 27, scope: !17024)
!17024 = distinct !DILexicalBlock(scope: !17017, file: !2561, line: 1433, column: 9)
!17025 = !DILocation(line: 0, scope: !17017)
!17026 = !DILocation(line: 0, scope: !15422, inlinedAt: !17027)
!17027 = distinct !DILocation(line: 1437, column: 25, scope: !17001)
!17028 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !17029)
!17029 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !17027)
!17030 = !DILocation(line: 0, scope: !15431, inlinedAt: !17029)
!17031 = !DILocation(line: 1440, column: 20, scope: !17001)
!17032 = !DILocation(line: 1440, column: 18, scope: !17001)
!17033 = !DILocation(line: 1442, column: 2, scope: !17001)
!17034 = !DILocation(line: 1443, column: 23, scope: !17001)
!17035 = !DILocation(line: 1443, column: 2, scope: !17001)
!17036 = !DILocation(line: 1444, column: 29, scope: !17001)
!17037 = !DILocation(line: 1444, column: 2, scope: !17001)
!17038 = !DILocation(line: 0, scope: !16033, inlinedAt: !17039)
!17039 = distinct !DILocation(line: 1446, column: 8, scope: !17001)
!17040 = !DILocation(line: 196, column: 9, scope: !16033, inlinedAt: !17039)
!17041 = !DILocation(line: 1450, column: 10, scope: !17001)
!17042 = !DILocation(line: 1450, column: 45, scope: !17001)
!17043 = !DILocation(line: 1450, column: 43, scope: !17001)
!17044 = !DILocation(line: 1451, column: 6, scope: !17001)
!17045 = !DILocation(line: 1457, column: 1, scope: !17001)
!17046 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !6084, file: !6084, line: 1103, type: !6085, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17047)
!17047 = !{!17048}
!17048 = !DILocalVariable(name: "t", arg: 1, scope: !17046, file: !6084, line: 1103, type: !1611)
!17049 = !DILocation(line: 0, scope: !17046)
!17050 = !DILocation(line: 0, scope: !15469, inlinedAt: !17051)
!17051 = distinct !DILocation(line: 1106, column: 9, scope: !17046)
!17052 = !DILocation(line: 139, column: 13, scope: !17053, inlinedAt: !17051)
!17053 = distinct !DILexicalBlock(scope: !17054, file: !6084, line: 138, column: 10)
!17054 = distinct !DILexicalBlock(scope: !17055, file: !6084, line: 136, column: 7)
!17055 = distinct !DILexicalBlock(scope: !15490, file: !6084, line: 134, column: 17)
!17056 = !DILocation(line: 1106, column: 2, scope: !17046)
!17057 = distinct !DISubprogram(name: "k_yield", scope: !3751, file: !3751, line: 140, type: !3318, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !461)
!17058 = !DILocation(line: 148, column: 2, scope: !17059)
!17059 = distinct !DILexicalBlock(scope: !17057, file: !3751, line: 148, column: 2)
!17060 = !{i64 2155103778}
!17061 = !DILocation(line: 149, column: 2, scope: !17057)
!17062 = !DILocation(line: 150, column: 1, scope: !17057)
!17063 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2561, file: !2561, line: 1495, type: !17064, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17066)
!17064 = !DISubroutineType(types: !17065)
!17065 = !{!332, !103}
!17066 = !{!17067, !17068}
!17067 = !DILocalVariable(name: "us", arg: 1, scope: !17063, file: !2561, line: 1495, type: !103)
!17068 = !DILocalVariable(name: "ticks", scope: !17063, file: !2561, line: 1497, type: !332)
!17069 = !DILocation(line: 0, scope: !17063)
!17070 = !DILocation(line: 1501, column: 31, scope: !17063)
!17071 = !DILocation(line: 1501, column: 10, scope: !17063)
!17072 = !DILocation(line: 1502, column: 23, scope: !17063)
!17073 = !DILocation(line: 1502, column: 10, scope: !17063)
!17074 = !DILocation(line: 1506, column: 31, scope: !17063)
!17075 = !DILocation(line: 1506, column: 9, scope: !17063)
!17076 = !DILocation(line: 1506, column: 2, scope: !17063)
!17077 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !6084, file: !6084, line: 571, type: !6085, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17078)
!17078 = !{!17079}
!17079 = !DILocalVariable(name: "t", arg: 1, scope: !17077, file: !6084, line: 571, type: !1611)
!17080 = !DILocation(line: 0, scope: !17077)
!17081 = !DILocation(line: 0, scope: !15469, inlinedAt: !17082)
!17082 = distinct !DILocation(line: 574, column: 9, scope: !17077)
!17083 = !DILocation(line: 135, column: 5, scope: !17055, inlinedAt: !17082)
!17084 = !DILocation(line: 139, column: 13, scope: !17053, inlinedAt: !17082)
!17085 = !DILocation(line: 574, column: 2, scope: !17077)
!17086 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !6084, file: !6084, line: 1187, type: !6085, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17087)
!17087 = !{!17088}
!17088 = !DILocalVariable(name: "t", arg: 1, scope: !17086, file: !6084, line: 1187, type: !1611)
!17089 = !DILocation(line: 0, scope: !17086)
!17090 = !DILocation(line: 0, scope: !15469, inlinedAt: !17091)
!17091 = distinct !DILocation(line: 1190, column: 9, scope: !17086)
!17092 = !DILocation(line: 145, column: 13, scope: !17093, inlinedAt: !17091)
!17093 = distinct !DILexicalBlock(scope: !15487, file: !6084, line: 144, column: 10)
!17094 = !DILocation(line: 1190, column: 2, scope: !17086)
!17095 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2561, file: !2561, line: 1517, type: !16991, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17096)
!17096 = !{!17097}
!17097 = !DILocalVariable(name: "thread", arg: 1, scope: !17095, file: !2561, line: 1517, type: !16897)
!17098 = !DILocation(line: 0, scope: !17095)
!17099 = !DILocation(line: 1521, column: 6, scope: !17100)
!17100 = distinct !DILexicalBlock(scope: !17095, file: !2561, line: 1521, column: 6)
!17101 = !DILocation(line: 1521, column: 6, scope: !17095)
!17102 = !DILocation(line: 1525, column: 6, scope: !17103)
!17103 = distinct !DILexicalBlock(scope: !17095, file: !2561, line: 1525, column: 6)
!17104 = !DILocation(line: 1525, column: 37, scope: !17103)
!17105 = !DILocation(line: 1525, column: 6, scope: !17095)
!17106 = !DILocation(line: 1527, column: 20, scope: !17107)
!17107 = distinct !DILexicalBlock(scope: !17108, file: !2561, line: 1527, column: 7)
!17108 = distinct !DILexicalBlock(scope: !17103, file: !2561, line: 1525, column: 42)
!17109 = !DILocation(line: 1527, column: 33, scope: !17107)
!17110 = !DILocation(line: 1527, column: 7, scope: !17108)
!17111 = !DILocation(line: 1532, column: 2, scope: !17095)
!17112 = !DILocation(line: 1533, column: 2, scope: !17095)
!17113 = !DILocation(line: 1031, column: 3, scope: !16066, inlinedAt: !17114)
!17114 = distinct !DILocation(line: 48, column: 10, scope: !16070, inlinedAt: !17115)
!17115 = distinct !DILocation(line: 1537, column: 7, scope: !17116)
!17116 = distinct !DILexicalBlock(scope: !17095, file: !2561, line: 1537, column: 6)
!17117 = !DILocation(line: 0, scope: !16066, inlinedAt: !17114)
!17118 = !DILocation(line: 48, column: 9, scope: !16070, inlinedAt: !17115)
!17119 = !DILocation(line: 1537, column: 6, scope: !17095)
!17120 = !DILocation(line: 1538, column: 3, scope: !17121)
!17121 = distinct !DILexicalBlock(scope: !17116, file: !2561, line: 1537, column: 25)
!17122 = !DILocation(line: 1539, column: 2, scope: !17121)
!17123 = !DILocation(line: 1540, column: 1, scope: !17095)
!17124 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14430, file: !14430, line: 101, type: !15540, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17125)
!17125 = !{!17126}
!17126 = !DILocalVariable(name: "thread", arg: 1, scope: !17124, file: !14430, line: 101, type: !2456)
!17127 = !DILocation(line: 0, scope: !17124)
!17128 = !DILocation(line: 103, column: 23, scope: !17124)
!17129 = !DILocation(line: 103, column: 36, scope: !17124)
!17130 = !DILocation(line: 103, column: 55, scope: !17124)
!17131 = !DILocation(line: 103, column: 2, scope: !17124)
!17132 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2561, file: !2561, line: 1567, type: !17133, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17135)
!17133 = !DISubroutineType(types: !17134)
!17134 = !{!16897}
!17135 = !{!17136}
!17136 = !DILocalVariable(name: "ret", scope: !17132, file: !2561, line: 1577, type: !16897)
!17137 = !DILocation(line: 1577, column: 30, scope: !17132)
!17138 = !DILocation(line: 0, scope: !17132)
!17139 = !DILocation(line: 1582, column: 2, scope: !17132)
!17140 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2561, file: !2561, line: 1593, type: !6708, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !461)
!17141 = !DILocation(line: 1031, column: 3, scope: !16066, inlinedAt: !17142)
!17142 = distinct !DILocation(line: 48, column: 10, scope: !16070, inlinedAt: !17143)
!17143 = distinct !DILocation(line: 1595, column: 10, scope: !17140)
!17144 = !DILocation(line: 0, scope: !16066, inlinedAt: !17142)
!17145 = !DILocation(line: 48, column: 9, scope: !16070, inlinedAt: !17143)
!17146 = !DILocation(line: 1595, column: 27, scope: !17140)
!17147 = !DILocation(line: 1595, column: 41, scope: !17140)
!17148 = !DILocation(line: 1595, column: 30, scope: !17140)
!17149 = !DILocation(line: 1595, column: 2, scope: !17140)
!17150 = distinct !DISubprogram(name: "z_thread_abort", scope: !2561, file: !2561, line: 1725, type: !15380, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17151)
!17151 = !{!17152, !17153}
!17152 = !DILocalVariable(name: "thread", arg: 1, scope: !17150, file: !2561, line: 1725, type: !2456)
!17153 = !DILocalVariable(name: "key", scope: !17150, file: !2561, line: 1727, type: !15414)
!17154 = !DILocation(line: 0, scope: !17150)
!17155 = !DILocation(line: 0, scope: !15422, inlinedAt: !17156)
!17156 = distinct !DILocation(line: 1727, column: 25, scope: !17150)
!17157 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !17158)
!17158 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !17156)
!17159 = !DILocation(line: 0, scope: !15431, inlinedAt: !17158)
!17160 = !DILocation(line: 1729, column: 20, scope: !17161)
!17161 = distinct !DILexicalBlock(scope: !17150, file: !2561, line: 1729, column: 6)
!17162 = !DILocation(line: 1729, column: 33, scope: !17161)
!17163 = !DILocation(line: 1729, column: 48, scope: !17161)
!17164 = !DILocation(line: 1729, column: 6, scope: !17150)
!17165 = !DILocation(line: 0, scope: !15449, inlinedAt: !17166)
!17166 = distinct !DILocation(line: 1730, column: 3, scope: !17167)
!17167 = distinct !DILexicalBlock(scope: !17161, file: !2561, line: 1729, column: 54)
!17168 = !DILocation(line: 0, scope: !15457, inlinedAt: !17169)
!17169 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !17166)
!17170 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !17169)
!17171 = !DILocation(line: 1732, column: 3, scope: !17172)
!17172 = distinct !DILexicalBlock(scope: !17167, file: !2561, line: 1732, column: 3)
!17173 = !{i64 2155841188, i64 2155841204, i64 2155841230, i64 2155841258, i64 2155841278}
!17174 = !DILocation(line: 1733, column: 3, scope: !17167)
!17175 = !DILocation(line: 1736, column: 20, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !17150, file: !2561, line: 1736, column: 6)
!17177 = !DILocation(line: 1736, column: 33, scope: !17176)
!17178 = !DILocation(line: 1736, column: 49, scope: !17176)
!17179 = !DILocation(line: 1736, column: 6, scope: !17150)
!17180 = !DILocation(line: 0, scope: !15449, inlinedAt: !17181)
!17181 = distinct !DILocation(line: 1737, column: 3, scope: !17182)
!17182 = distinct !DILexicalBlock(scope: !17176, file: !2561, line: 1736, column: 56)
!17183 = !DILocation(line: 0, scope: !15457, inlinedAt: !17184)
!17184 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !17181)
!17185 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !17184)
!17186 = !DILocation(line: 1738, column: 3, scope: !17182)
!17187 = !DILocation(line: 1775, column: 2, scope: !17150)
!17188 = !DILocation(line: 1776, column: 16, scope: !17189)
!17189 = distinct !DILexicalBlock(scope: !17150, file: !2561, line: 1776, column: 6)
!17190 = !DILocation(line: 1776, column: 13, scope: !17189)
!17191 = !DILocation(line: 1776, column: 25, scope: !17189)
!17192 = !DILocation(line: 1031, column: 3, scope: !16066, inlinedAt: !17193)
!17193 = distinct !DILocation(line: 48, column: 10, scope: !16070, inlinedAt: !17194)
!17194 = distinct !DILocation(line: 1776, column: 29, scope: !17189)
!17195 = !DILocation(line: 0, scope: !16066, inlinedAt: !17193)
!17196 = !DILocation(line: 48, column: 9, scope: !16070, inlinedAt: !17194)
!17197 = !DILocation(line: 1776, column: 6, scope: !17150)
!17198 = !DILocation(line: 0, scope: !16033, inlinedAt: !17199)
!17199 = distinct !DILocation(line: 1777, column: 3, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17189, file: !2561, line: 1776, column: 47)
!17201 = !DILocation(line: 196, column: 9, scope: !16033, inlinedAt: !17199)
!17202 = !DILocation(line: 1779, column: 2, scope: !17200)
!17203 = !DILocation(line: 0, scope: !15449, inlinedAt: !17204)
!17204 = distinct !DILocation(line: 1780, column: 2, scope: !17150)
!17205 = !DILocation(line: 0, scope: !15457, inlinedAt: !17206)
!17206 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !17204)
!17207 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !17206)
!17208 = !DILocation(line: 1781, column: 1, scope: !17150)
!17209 = distinct !DISubprogram(name: "end_thread", scope: !2561, file: !2561, line: 1690, type: !15380, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17210)
!17210 = !{!17211}
!17211 = !DILocalVariable(name: "thread", arg: 1, scope: !17209, file: !2561, line: 1690, type: !2456)
!17212 = !DILocation(line: 0, scope: !17209)
!17213 = !DILocation(line: 1695, column: 20, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17209, file: !2561, line: 1695, column: 6)
!17215 = !DILocation(line: 1695, column: 33, scope: !17214)
!17216 = !DILocation(line: 1695, column: 49, scope: !17214)
!17217 = !DILocation(line: 1695, column: 6, scope: !17209)
!17218 = !DILocation(line: 1697, column: 29, scope: !17219)
!17219 = distinct !DILexicalBlock(scope: !17214, file: !2561, line: 1695, column: 56)
!17220 = !DILocation(line: 1698, column: 7, scope: !17221)
!17221 = distinct !DILexicalBlock(scope: !17219, file: !2561, line: 1698, column: 7)
!17222 = !DILocation(line: 1698, column: 7, scope: !17219)
!17223 = !DILocation(line: 0, scope: !15591, inlinedAt: !17224)
!17224 = distinct !DILocation(line: 1699, column: 4, scope: !17225)
!17225 = distinct !DILexicalBlock(scope: !17221, file: !2561, line: 1698, column: 35)
!17226 = !DILocation(line: 266, column: 28, scope: !15591, inlinedAt: !17224)
!17227 = !DILocation(line: 0, scope: !15599, inlinedAt: !17228)
!17228 = distinct !DILocation(line: 268, column: 3, scope: !15603, inlinedAt: !17224)
!17229 = !DILocation(line: 234, column: 2, scope: !15599, inlinedAt: !17228)
!17230 = !DILocation(line: 1700, column: 3, scope: !17225)
!17231 = !DILocation(line: 1701, column: 20, scope: !17232)
!17232 = distinct !DILexicalBlock(scope: !17219, file: !2561, line: 1701, column: 7)
!17233 = !DILocation(line: 1701, column: 30, scope: !17232)
!17234 = !DILocation(line: 1701, column: 7, scope: !17219)
!17235 = !DILocation(line: 1702, column: 4, scope: !17236)
!17236 = distinct !DILexicalBlock(scope: !17232, file: !2561, line: 1701, column: 39)
!17237 = !DILocation(line: 1703, column: 3, scope: !17236)
!17238 = !DILocation(line: 1704, column: 9, scope: !17219)
!17239 = !DILocation(line: 1705, column: 23, scope: !17219)
!17240 = !DILocation(line: 1705, column: 3, scope: !17219)
!17241 = !DILocation(line: 1706, column: 3, scope: !17219)
!17242 = !DILocation(line: 1722, column: 2, scope: !17219)
!17243 = !DILocation(line: 1723, column: 1, scope: !17209)
!17244 = distinct !DISubprogram(name: "unpend_all", scope: !2561, file: !2561, line: 1674, type: !17245, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17247)
!17245 = !DISubroutineType(types: !17246)
!17246 = !{null, !2487}
!17247 = !{!17248, !17249}
!17248 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17244, file: !2561, line: 1674, type: !2487)
!17249 = !DILocalVariable(name: "thread", scope: !17244, file: !2561, line: 1676, type: !2456)
!17250 = !DILocation(line: 0, scope: !17244)
!17251 = !DILocation(line: 1678, column: 19, scope: !17244)
!17252 = !DILocation(line: 1678, column: 41, scope: !17244)
!17253 = !DILocation(line: 1678, column: 2, scope: !17244)
!17254 = !DILocation(line: 1679, column: 3, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17244, file: !2561, line: 1678, column: 50)
!17256 = !DILocation(line: 1680, column: 9, scope: !17255)
!17257 = !DILocalVariable(name: "thread", arg: 1, scope: !17258, file: !14450, line: 65, type: !2456)
!17258 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14450, file: !14450, line: 65, type: !17259, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17261)
!17259 = !DISubroutineType(types: !17260)
!17260 = !{null, !2456, !32}
!17261 = !{!17257, !17262}
!17262 = !DILocalVariable(name: "value", arg: 2, scope: !17258, file: !14450, line: 65, type: !32)
!17263 = !DILocation(line: 0, scope: !17258, inlinedAt: !17264)
!17264 = distinct !DILocation(line: 1681, column: 3, scope: !17255)
!17265 = !DILocation(line: 67, column: 15, scope: !17258, inlinedAt: !17264)
!17266 = !DILocation(line: 67, column: 33, scope: !17258, inlinedAt: !17264)
!17267 = !DILocation(line: 1682, column: 3, scope: !17255)
!17268 = distinct !{!17268, !17253, !17269}
!17269 = !DILocation(line: 1683, column: 2, scope: !17244)
!17270 = !DILocation(line: 1684, column: 1, scope: !17244)
!17271 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2561, file: !2561, line: 1794, type: !17272, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17274)
!17272 = !DISubroutineType(types: !17273)
!17273 = !{!103, !2456, !16213}
!17274 = !{!17275, !17276, !17277, !17278}
!17275 = !DILocalVariable(name: "thread", arg: 1, scope: !17271, file: !2561, line: 1794, type: !2456)
!17276 = !DILocalVariable(name: "timeout", arg: 2, scope: !17271, file: !2561, line: 1794, type: !16213)
!17277 = !DILocalVariable(name: "key", scope: !17271, file: !2561, line: 1796, type: !15414)
!17278 = !DILocalVariable(name: "ret", scope: !17271, file: !2561, line: 1797, type: !103)
!17279 = !DILocation(line: 0, scope: !17271)
!17280 = !DILocation(line: 0, scope: !15422, inlinedAt: !17281)
!17281 = distinct !DILocation(line: 1796, column: 25, scope: !17271)
!17282 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !17283)
!17283 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !17281)
!17284 = !DILocation(line: 0, scope: !15431, inlinedAt: !17283)
!17285 = !DILocation(line: 1801, column: 20, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17271, file: !2561, line: 1801, column: 6)
!17287 = !DILocation(line: 1801, column: 33, scope: !17286)
!17288 = !DILocation(line: 1801, column: 49, scope: !17286)
!17289 = !DILocation(line: 1801, column: 6, scope: !17271)
!17290 = !DILocation(line: 1803, column: 13, scope: !17291)
!17291 = distinct !DILexicalBlock(scope: !17286, file: !2561, line: 1803, column: 13)
!17292 = !DILocation(line: 1803, column: 13, scope: !17286)
!17293 = !DILocation(line: 1805, column: 24, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17291, file: !2561, line: 1805, column: 13)
!17295 = !DILocation(line: 1805, column: 21, scope: !17294)
!17296 = !DILocation(line: 1805, column: 34, scope: !17294)
!17297 = !DILocation(line: 1806, column: 20, scope: !17294)
!17298 = !DILocation(line: 1806, column: 44, scope: !17294)
!17299 = !DILocation(line: 1806, column: 30, scope: !17294)
!17300 = !DILocation(line: 1805, column: 13, scope: !17291)
!17301 = !DILocation(line: 1810, column: 42, scope: !17302)
!17302 = distinct !DILexicalBlock(scope: !17294, file: !2561, line: 1808, column: 9)
!17303 = !DILocation(line: 1810, column: 3, scope: !17302)
!17304 = !DILocation(line: 1811, column: 22, scope: !17302)
!17305 = !DILocation(line: 1811, column: 3, scope: !17302)
!17306 = !DILocation(line: 0, scope: !16033, inlinedAt: !17307)
!17307 = distinct !DILocation(line: 1814, column: 9, scope: !17302)
!17308 = !DILocation(line: 196, column: 9, scope: !16033, inlinedAt: !17307)
!17309 = !DILocation(line: 1817, column: 3, scope: !17302)
!17310 = !DILocation(line: 0, scope: !17286)
!17311 = !DILocation(line: 0, scope: !15449, inlinedAt: !17312)
!17312 = distinct !DILocation(line: 1822, column: 2, scope: !17271)
!17313 = !DILocation(line: 0, scope: !15457, inlinedAt: !17314)
!17314 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !17312)
!17315 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !17314)
!17316 = !DILocation(line: 1823, column: 2, scope: !17271)
!17317 = !DILocation(line: 1824, column: 1, scope: !17271)
!17318 = distinct !DISubprogram(name: "z_sched_wake", scope: !2561, file: !2561, line: 1882, type: !17319, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17321)
!17319 = !DISubroutineType(types: !17320)
!17320 = !{!157, !2487, !103, !102}
!17321 = !{!17322, !17323, !17324, !17325, !17326, !17327, !17329}
!17322 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17318, file: !2561, line: 1882, type: !2487)
!17323 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17318, file: !2561, line: 1882, type: !103)
!17324 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17318, file: !2561, line: 1882, type: !102)
!17325 = !DILocalVariable(name: "thread", scope: !17318, file: !2561, line: 1884, type: !2456)
!17326 = !DILocalVariable(name: "ret", scope: !17318, file: !2561, line: 1885, type: !157)
!17327 = !DILocalVariable(name: "__i", scope: !17328, file: !2561, line: 1887, type: !15414)
!17328 = distinct !DILexicalBlock(scope: !17318, file: !2561, line: 1887, column: 2)
!17329 = !DILocalVariable(name: "__key", scope: !17328, file: !2561, line: 1887, type: !15414)
!17330 = !DILocation(line: 0, scope: !17318)
!17331 = !DILocation(line: 0, scope: !17328)
!17332 = !DILocation(line: 0, scope: !15422, inlinedAt: !17333)
!17333 = distinct !DILocation(line: 1887, column: 2, scope: !17328)
!17334 = !DILocation(line: 55, column: 2, scope: !15431, inlinedAt: !17335)
!17335 = distinct !DILocation(line: 145, column: 10, scope: !15422, inlinedAt: !17333)
!17336 = !DILocation(line: 0, scope: !15431, inlinedAt: !17335)
!17337 = !DILocation(line: 1888, column: 12, scope: !17338)
!17338 = distinct !DILexicalBlock(scope: !17339, file: !2561, line: 1887, column: 26)
!17339 = distinct !DILexicalBlock(scope: !17328, file: !2561, line: 1887, column: 2)
!17340 = !DILocation(line: 1890, column: 14, scope: !17341)
!17341 = distinct !DILexicalBlock(scope: !17338, file: !2561, line: 1890, column: 7)
!17342 = !DILocation(line: 1890, column: 7, scope: !17338)
!17343 = !DILocalVariable(name: "thread", arg: 1, scope: !17344, file: !17345, line: 134, type: !2456)
!17344 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !17345, file: !17345, line: 134, type: !17346, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17348)
!17345 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17346 = !DISubroutineType(types: !17347)
!17347 = !{null, !2456, !32, !102}
!17348 = !{!17343, !17349, !17350}
!17349 = !DILocalVariable(name: "value", arg: 2, scope: !17344, file: !17345, line: 135, type: !32)
!17350 = !DILocalVariable(name: "data", arg: 3, scope: !17344, file: !17345, line: 136, type: !102)
!17351 = !DILocation(line: 0, scope: !17344, inlinedAt: !17352)
!17352 = distinct !DILocation(line: 1891, column: 4, scope: !17353)
!17353 = distinct !DILexicalBlock(scope: !17341, file: !2561, line: 1890, column: 23)
!17354 = !DILocation(line: 0, scope: !17258, inlinedAt: !17355)
!17355 = distinct !DILocation(line: 138, column: 2, scope: !17344, inlinedAt: !17352)
!17356 = !DILocation(line: 67, column: 15, scope: !17258, inlinedAt: !17355)
!17357 = !DILocation(line: 67, column: 33, scope: !17258, inlinedAt: !17355)
!17358 = !DILocation(line: 139, column: 15, scope: !17344, inlinedAt: !17352)
!17359 = !DILocation(line: 139, column: 25, scope: !17344, inlinedAt: !17352)
!17360 = !DILocation(line: 1894, column: 4, scope: !17353)
!17361 = !DILocation(line: 1895, column: 10, scope: !17353)
!17362 = !DILocation(line: 1896, column: 4, scope: !17353)
!17363 = !DILocation(line: 1898, column: 3, scope: !17353)
!17364 = !DILocation(line: 0, scope: !15449, inlinedAt: !17365)
!17365 = distinct !DILocation(line: 1887, column: 2, scope: !17339)
!17366 = !DILocation(line: 0, scope: !15457, inlinedAt: !17367)
!17367 = distinct !DILocation(line: 215, column: 2, scope: !15449, inlinedAt: !17365)
!17368 = !DILocation(line: 95, column: 2, scope: !15457, inlinedAt: !17367)
!17369 = !DILocation(line: 1901, column: 2, scope: !17318)
!17370 = distinct !DISubprogram(name: "z_sched_wait", scope: !2561, file: !2561, line: 1904, type: !17371, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !17374)
!17371 = !DISubroutineType(types: !17372)
!17372 = !{!103, !15425, !15414, !2487, !16213, !17373}
!17373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!17374 = !{!17375, !17376, !17377, !17378, !17379, !17380}
!17375 = !DILocalVariable(name: "lock", arg: 1, scope: !17370, file: !2561, line: 1904, type: !15425)
!17376 = !DILocalVariable(name: "key", arg: 2, scope: !17370, file: !2561, line: 1904, type: !15414)
!17377 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17370, file: !2561, line: 1905, type: !2487)
!17378 = !DILocalVariable(name: "timeout", arg: 4, scope: !17370, file: !2561, line: 1905, type: !16213)
!17379 = !DILocalVariable(name: "data", arg: 5, scope: !17370, file: !2561, line: 1905, type: !17373)
!17380 = !DILocalVariable(name: "ret", scope: !17370, file: !2561, line: 1907, type: !103)
!17381 = !DILocation(line: 0, scope: !17370)
!17382 = !DILocation(line: 1907, column: 12, scope: !17370)
!17383 = !DILocation(line: 1909, column: 11, scope: !17384)
!17384 = distinct !DILexicalBlock(scope: !17370, file: !2561, line: 1909, column: 6)
!17385 = !DILocation(line: 1909, column: 6, scope: !17370)
!17386 = !DILocation(line: 1910, column: 11, scope: !17387)
!17387 = distinct !DILexicalBlock(scope: !17384, file: !2561, line: 1909, column: 20)
!17388 = !DILocation(line: 1910, column: 26, scope: !17387)
!17389 = !DILocation(line: 1910, column: 9, scope: !17387)
!17390 = !DILocation(line: 1911, column: 2, scope: !17387)
!17391 = !DILocation(line: 1912, column: 2, scope: !17370)
!17392 = distinct !DISubprogram(name: "z_data_copy", scope: !17393, file: !17393, line: 22, type: !3318, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3301, retainedNodes: !461)
!17393 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17394 = !DILocation(line: 24, column: 2, scope: !17392)
!17395 = !DILocation(line: 27, column: 2, scope: !17392)
!17396 = !DILocation(line: 71, column: 1, scope: !17392)
!17397 = distinct !DISubprogram(name: "z_add_timeout", scope: !2598, file: !2598, line: 88, type: !17398, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17404)
!17398 = !DISubroutineType(types: !17399)
!17399 = !{null, !2571, !2590, !17400}
!17400 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1790, line: 67, baseType: !17401)
!17401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1790, line: 65, size: 64, elements: !17402)
!17402 = !{!17403}
!17403 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17401, file: !1790, line: 66, baseType: !1789, size: 64)
!17404 = !{!17405, !17406, !17407, !17408, !17414, !17415, !17418, !17421}
!17405 = !DILocalVariable(name: "to", arg: 1, scope: !17397, file: !2598, line: 88, type: !2571)
!17406 = !DILocalVariable(name: "fn", arg: 2, scope: !17397, file: !2598, line: 88, type: !2590)
!17407 = !DILocalVariable(name: "timeout", arg: 3, scope: !17397, file: !2598, line: 89, type: !17400)
!17408 = !DILocalVariable(name: "__i", scope: !17409, file: !2598, line: 102, type: !17410)
!17409 = distinct !DILexicalBlock(scope: !17397, file: !2598, line: 102, column: 2)
!17410 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !17411)
!17411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !17412)
!17412 = !{!17413}
!17413 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17411, file: !460, line: 33, baseType: !103, size: 32)
!17414 = !DILocalVariable(name: "__key", scope: !17409, file: !2598, line: 102, type: !17410)
!17415 = !DILocalVariable(name: "t", scope: !17416, file: !2598, line: 103, type: !2571)
!17416 = distinct !DILexicalBlock(scope: !17417, file: !2598, line: 102, column: 24)
!17417 = distinct !DILexicalBlock(scope: !17409, file: !2598, line: 102, column: 2)
!17418 = !DILocalVariable(name: "ticks", scope: !17419, file: !2598, line: 107, type: !1789)
!17419 = distinct !DILexicalBlock(scope: !17420, file: !2598, line: 106, column: 39)
!17420 = distinct !DILexicalBlock(scope: !17416, file: !2598, line: 105, column: 7)
!17421 = !DILocalVariable(name: "next_time", scope: !17422, file: !2598, line: 137, type: !332)
!17422 = distinct !DILexicalBlock(scope: !17423, file: !2598, line: 127, column: 22)
!17423 = distinct !DILexicalBlock(scope: !17416, file: !2598, line: 127, column: 7)
!17424 = !DILocation(line: 0, scope: !17397)
!17425 = !DILocation(line: 91, column: 6, scope: !17426)
!17426 = distinct !DILexicalBlock(scope: !17397, file: !2598, line: 91, column: 6)
!17427 = !DILocation(line: 91, column: 6, scope: !17397)
!17428 = !DILocation(line: 100, column: 6, scope: !17397)
!17429 = !DILocation(line: 100, column: 9, scope: !17397)
!17430 = !DILocation(line: 0, scope: !17409)
!17431 = !DILocalVariable(name: "l", arg: 1, scope: !17432, file: !460, line: 136, type: !17435)
!17432 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !17433, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17436)
!17433 = !DISubroutineType(types: !17434)
!17434 = !{!17410, !17435}
!17435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 32)
!17436 = !{!17431, !17437}
!17437 = !DILocalVariable(name: "k", scope: !17432, file: !460, line: 139, type: !17410)
!17438 = !DILocation(line: 0, scope: !17432, inlinedAt: !17439)
!17439 = distinct !DILocation(line: 102, column: 2, scope: !17409)
!17440 = !DILocation(line: 55, column: 2, scope: !17441, inlinedAt: !17445)
!17441 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17442)
!17442 = !{!17443, !17444}
!17443 = !DILocalVariable(name: "key", scope: !17441, file: !5884, line: 44, type: !32)
!17444 = !DILocalVariable(name: "tmp", scope: !17441, file: !5884, line: 53, type: !32)
!17445 = distinct !DILocation(line: 145, column: 10, scope: !17432, inlinedAt: !17439)
!17446 = !{i64 2283953}
!17447 = !DILocation(line: 0, scope: !17441, inlinedAt: !17445)
!17448 = !DILocation(line: 106, column: 33, scope: !17420)
!17449 = !DILocation(line: 105, column: 7, scope: !17416)
!17450 = !DILocation(line: 107, column: 50, scope: !17419)
!17451 = !DILocation(line: 107, column: 48, scope: !17419)
!17452 = !DILocation(line: 0, scope: !17419)
!17453 = !DILocation(line: 109, column: 17, scope: !17419)
!17454 = !DILocation(line: 110, column: 3, scope: !17419)
!17455 = !DILocation(line: 111, column: 31, scope: !17456)
!17456 = distinct !DILexicalBlock(scope: !17420, file: !2598, line: 110, column: 10)
!17457 = !DILocation(line: 111, column: 37, scope: !17456)
!17458 = !DILocation(line: 111, column: 35, scope: !17456)
!17459 = !DILocation(line: 0, scope: !17420)
!17460 = !DILocation(line: 109, column: 8, scope: !17419)
!17461 = !DILocation(line: 109, column: 15, scope: !17419)
!17462 = !DILocation(line: 114, column: 12, scope: !17463)
!17463 = distinct !DILexicalBlock(scope: !17416, file: !2598, line: 114, column: 3)
!17464 = !DILocation(line: 0, scope: !17416)
!17465 = !DILocation(line: 114, column: 3, scope: !17463)
!17466 = !DILocation(line: 115, column: 24, scope: !17467)
!17467 = distinct !DILexicalBlock(scope: !17468, file: !2598, line: 115, column: 8)
!17468 = distinct !DILexicalBlock(scope: !17469, file: !2598, line: 114, column: 45)
!17469 = distinct !DILexicalBlock(scope: !17463, file: !2598, line: 114, column: 3)
!17470 = !DILocation(line: 115, column: 11, scope: !17467)
!17471 = !DILocation(line: 115, column: 18, scope: !17467)
!17472 = !DILocation(line: 115, column: 8, scope: !17468)
!17473 = !DILocation(line: 116, column: 15, scope: !17474)
!17474 = distinct !DILexicalBlock(scope: !17467, file: !2598, line: 115, column: 32)
!17475 = !DILocation(line: 117, column: 26, scope: !17474)
!17476 = !DILocation(line: 117, column: 37, scope: !17474)
!17477 = !DILocation(line: 117, column: 5, scope: !17474)
!17478 = !DILocation(line: 123, column: 7, scope: !17416)
!17479 = !DILocation(line: 120, column: 15, scope: !17468)
!17480 = !DILocation(line: 114, column: 36, scope: !17469)
!17481 = distinct !{!17481, !17465, !17482}
!17482 = !DILocation(line: 121, column: 3, scope: !17463)
!17483 = !DILocation(line: 124, column: 41, scope: !17484)
!17484 = distinct !DILexicalBlock(scope: !17485, file: !2598, line: 123, column: 18)
!17485 = distinct !DILexicalBlock(scope: !17416, file: !2598, line: 123, column: 7)
!17486 = !DILocation(line: 124, column: 4, scope: !17484)
!17487 = !DILocation(line: 125, column: 3, scope: !17484)
!17488 = !DILocation(line: 127, column: 13, scope: !17423)
!17489 = !DILocation(line: 127, column: 10, scope: !17423)
!17490 = !DILocation(line: 127, column: 7, scope: !17416)
!17491 = !DILocation(line: 137, column: 24, scope: !17422)
!17492 = !DILocation(line: 0, scope: !17422)
!17493 = !DILocation(line: 139, column: 18, scope: !17494)
!17494 = distinct !DILexicalBlock(scope: !17422, file: !2598, line: 139, column: 8)
!17495 = !DILocation(line: 139, column: 23, scope: !17494)
!17496 = !DILocation(line: 141, column: 5, scope: !17497)
!17497 = distinct !DILexicalBlock(scope: !17494, file: !2598, line: 140, column: 48)
!17498 = !DILocation(line: 142, column: 4, scope: !17497)
!17499 = !DILocalVariable(name: "key", arg: 2, scope: !17500, file: !460, line: 190, type: !17410)
!17500 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !17501, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17503)
!17501 = !DISubroutineType(types: !17502)
!17502 = !{null, !17435, !17410}
!17503 = !{!17504, !17499}
!17504 = !DILocalVariable(name: "l", arg: 1, scope: !17500, file: !460, line: 189, type: !17435)
!17505 = !DILocation(line: 0, scope: !17500, inlinedAt: !17506)
!17506 = distinct !DILocation(line: 102, column: 2, scope: !17417)
!17507 = !DILocalVariable(name: "key", arg: 1, scope: !17508, file: !5884, line: 84, type: !32)
!17508 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17509)
!17509 = !{!17507}
!17510 = !DILocation(line: 0, scope: !17508, inlinedAt: !17511)
!17511 = distinct !DILocation(line: 215, column: 2, scope: !17500, inlinedAt: !17506)
!17512 = !DILocation(line: 95, column: 2, scope: !17508, inlinedAt: !17511)
!17513 = !{i64 2284770}
!17514 = !DILocation(line: 148, column: 1, scope: !17397)
!17515 = distinct !DISubprogram(name: "elapsed", scope: !2598, file: !2598, line: 62, type: !17516, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !461)
!17516 = !DISubroutineType(types: !17517)
!17517 = !{!332}
!17518 = !DILocation(line: 64, column: 9, scope: !17515)
!17519 = !DILocation(line: 64, column: 28, scope: !17515)
!17520 = !DILocation(line: 64, column: 35, scope: !17515)
!17521 = !DILocation(line: 64, column: 2, scope: !17515)
!17522 = distinct !DISubprogram(name: "first", scope: !2598, file: !2598, line: 39, type: !17523, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17525)
!17523 = !DISubroutineType(types: !17524)
!17524 = !{!2571}
!17525 = !{!17526}
!17526 = !DILocalVariable(name: "t", scope: !17522, file: !2598, line: 41, type: !17527)
!17527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 32)
!17528 = !DILocation(line: 41, column: 19, scope: !17522)
!17529 = !DILocation(line: 0, scope: !17522)
!17530 = !DILocation(line: 43, column: 9, scope: !17522)
!17531 = !DILocation(line: 43, column: 2, scope: !17522)
!17532 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !309, file: !309, line: 443, type: !17533, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17535)
!17533 = !DISubroutineType(types: !17534)
!17534 = !{null, !17527, !17527}
!17535 = !{!17536, !17537, !17538}
!17536 = !DILocalVariable(name: "successor", arg: 1, scope: !17532, file: !309, line: 443, type: !17527)
!17537 = !DILocalVariable(name: "node", arg: 2, scope: !17532, file: !309, line: 443, type: !17527)
!17538 = !DILocalVariable(name: "prev", scope: !17532, file: !309, line: 445, type: !17539)
!17539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17527)
!17540 = !DILocation(line: 0, scope: !17532)
!17541 = !DILocation(line: 445, column: 39, scope: !17532)
!17542 = !DILocation(line: 447, column: 8, scope: !17532)
!17543 = !DILocation(line: 447, column: 13, scope: !17532)
!17544 = !DILocation(line: 448, column: 8, scope: !17532)
!17545 = !DILocation(line: 448, column: 13, scope: !17532)
!17546 = !DILocation(line: 449, column: 8, scope: !17532)
!17547 = !DILocation(line: 449, column: 13, scope: !17532)
!17548 = !DILocation(line: 450, column: 18, scope: !17532)
!17549 = !DILocation(line: 451, column: 1, scope: !17532)
!17550 = distinct !DISubprogram(name: "next", scope: !2598, file: !2598, line: 46, type: !17551, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17553)
!17551 = !DISubroutineType(types: !17552)
!17552 = !{!2571, !2571}
!17553 = !{!17554, !17555}
!17554 = !DILocalVariable(name: "t", arg: 1, scope: !17550, file: !2598, line: 46, type: !2571)
!17555 = !DILocalVariable(name: "n", scope: !17550, file: !2598, line: 48, type: !17527)
!17556 = !DILocation(line: 0, scope: !17550)
!17557 = !DILocation(line: 48, column: 58, scope: !17550)
!17558 = !DILocation(line: 48, column: 19, scope: !17550)
!17559 = !DILocation(line: 50, column: 9, scope: !17550)
!17560 = !DILocation(line: 50, column: 2, scope: !17550)
!17561 = distinct !DISubprogram(name: "sys_dlist_append", scope: !309, file: !309, line: 404, type: !17562, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17565)
!17562 = !DISubroutineType(types: !17563)
!17563 = !{null, !17564, !17527}
!17564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 32)
!17565 = !{!17566, !17567, !17568}
!17566 = !DILocalVariable(name: "list", arg: 1, scope: !17561, file: !309, line: 404, type: !17564)
!17567 = !DILocalVariable(name: "node", arg: 2, scope: !17561, file: !309, line: 404, type: !17527)
!17568 = !DILocalVariable(name: "tail", scope: !17561, file: !309, line: 406, type: !17539)
!17569 = !DILocation(line: 0, scope: !17561)
!17570 = !DILocation(line: 406, column: 34, scope: !17561)
!17571 = !DILocation(line: 408, column: 8, scope: !17561)
!17572 = !DILocation(line: 408, column: 13, scope: !17561)
!17573 = !DILocation(line: 409, column: 8, scope: !17561)
!17574 = !DILocation(line: 409, column: 13, scope: !17561)
!17575 = !DILocation(line: 411, column: 8, scope: !17561)
!17576 = !DILocation(line: 411, column: 13, scope: !17561)
!17577 = !DILocation(line: 412, column: 13, scope: !17561)
!17578 = !DILocation(line: 413, column: 1, scope: !17561)
!17579 = distinct !DISubprogram(name: "next_timeout", scope: !2598, file: !2598, line: 67, type: !17516, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17580)
!17580 = !{!17581, !17582, !17583}
!17581 = !DILocalVariable(name: "to", scope: !17579, file: !2598, line: 69, type: !2571)
!17582 = !DILocalVariable(name: "ticks_elapsed", scope: !17579, file: !2598, line: 70, type: !332)
!17583 = !DILocalVariable(name: "ret", scope: !17579, file: !2598, line: 71, type: !332)
!17584 = !DILocation(line: 69, column: 24, scope: !17579)
!17585 = !DILocation(line: 0, scope: !17579)
!17586 = !DILocation(line: 70, column: 26, scope: !17579)
!17587 = !DILocation(line: 73, column: 10, scope: !17588)
!17588 = distinct !DILexicalBlock(scope: !17579, file: !2598, line: 73, column: 6)
!17589 = !DILocation(line: 73, column: 19, scope: !17588)
!17590 = !DILocation(line: 74, column: 21, scope: !17588)
!17591 = !DILocation(line: 74, column: 30, scope: !17588)
!17592 = !DILocation(line: 74, column: 28, scope: !17588)
!17593 = !DILocation(line: 74, column: 45, scope: !17588)
!17594 = !DILocation(line: 73, column: 6, scope: !17579)
!17595 = !DILocation(line: 77, column: 9, scope: !17596)
!17596 = distinct !DILexicalBlock(scope: !17588, file: !2598, line: 76, column: 9)
!17597 = !DILocation(line: 0, scope: !17588)
!17598 = !DILocation(line: 81, column: 20, scope: !17599)
!17599 = distinct !DILexicalBlock(scope: !17579, file: !2598, line: 81, column: 6)
!17600 = !DILocation(line: 81, column: 6, scope: !17599)
!17601 = !DILocation(line: 81, column: 32, scope: !17599)
!17602 = !DILocation(line: 85, column: 2, scope: !17579)
!17603 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !309, file: !309, line: 341, type: !17604, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17606)
!17604 = !DISubroutineType(types: !17605)
!17605 = !{!17527, !17564, !17527}
!17606 = !{!17607, !17608}
!17607 = !DILocalVariable(name: "list", arg: 1, scope: !17603, file: !309, line: 341, type: !17564)
!17608 = !DILocalVariable(name: "node", arg: 2, scope: !17603, file: !309, line: 342, type: !17527)
!17609 = !DILocation(line: 0, scope: !17603)
!17610 = !DILocation(line: 344, column: 15, scope: !17603)
!17611 = !DILocation(line: 344, column: 9, scope: !17603)
!17612 = !DILocation(line: 344, column: 26, scope: !17603)
!17613 = !DILocation(line: 344, column: 2, scope: !17603)
!17614 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !309, file: !309, line: 325, type: !17604, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17615)
!17615 = !{!17616, !17617}
!17616 = !DILocalVariable(name: "list", arg: 1, scope: !17614, file: !309, line: 325, type: !17564)
!17617 = !DILocalVariable(name: "node", arg: 2, scope: !17614, file: !309, line: 326, type: !17527)
!17618 = !DILocation(line: 0, scope: !17614)
!17619 = !DILocation(line: 328, column: 24, scope: !17614)
!17620 = !DILocation(line: 328, column: 15, scope: !17614)
!17621 = !DILocation(line: 328, column: 9, scope: !17614)
!17622 = !DILocation(line: 328, column: 45, scope: !17614)
!17623 = !DILocation(line: 328, column: 2, scope: !17614)
!17624 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !309, file: !309, line: 294, type: !17625, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17627)
!17625 = !DISubroutineType(types: !17626)
!17626 = !{!17527, !17564}
!17627 = !{!17628}
!17628 = !DILocalVariable(name: "list", arg: 1, scope: !17624, file: !309, line: 294, type: !17564)
!17629 = !DILocation(line: 0, scope: !17624)
!17630 = !DILocation(line: 296, column: 9, scope: !17624)
!17631 = !DILocation(line: 296, column: 2, scope: !17624)
!17632 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !309, file: !309, line: 266, type: !17633, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17635)
!17633 = !DISubroutineType(types: !17634)
!17634 = !{!157, !17564}
!17635 = !{!17636}
!17636 = !DILocalVariable(name: "list", arg: 1, scope: !17632, file: !309, line: 266, type: !17564)
!17637 = !DILocation(line: 0, scope: !17632)
!17638 = !DILocation(line: 268, column: 15, scope: !17632)
!17639 = !DILocation(line: 268, column: 20, scope: !17632)
!17640 = !DILocation(line: 268, column: 2, scope: !17632)
!17641 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2598, file: !2598, line: 150, type: !17642, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17644)
!17642 = !DISubroutineType(types: !17643)
!17643 = !{!103, !2571}
!17644 = !{!17645, !17646, !17647, !17649}
!17645 = !DILocalVariable(name: "to", arg: 1, scope: !17641, file: !2598, line: 150, type: !2571)
!17646 = !DILocalVariable(name: "ret", scope: !17641, file: !2598, line: 152, type: !103)
!17647 = !DILocalVariable(name: "__i", scope: !17648, file: !2598, line: 154, type: !17410)
!17648 = distinct !DILexicalBlock(scope: !17641, file: !2598, line: 154, column: 2)
!17649 = !DILocalVariable(name: "__key", scope: !17648, file: !2598, line: 154, type: !17410)
!17650 = !DILocation(line: 0, scope: !17641)
!17651 = !DILocation(line: 0, scope: !17648)
!17652 = !DILocation(line: 0, scope: !17432, inlinedAt: !17653)
!17653 = distinct !DILocation(line: 154, column: 2, scope: !17648)
!17654 = !DILocation(line: 55, column: 2, scope: !17441, inlinedAt: !17655)
!17655 = distinct !DILocation(line: 145, column: 10, scope: !17432, inlinedAt: !17653)
!17656 = !DILocation(line: 0, scope: !17441, inlinedAt: !17655)
!17657 = !DILocation(line: 155, column: 7, scope: !17658)
!17658 = distinct !DILexicalBlock(scope: !17659, file: !2598, line: 155, column: 7)
!17659 = distinct !DILexicalBlock(scope: !17660, file: !2598, line: 154, column: 24)
!17660 = distinct !DILexicalBlock(scope: !17648, file: !2598, line: 154, column: 2)
!17661 = !DILocation(line: 155, column: 7, scope: !17659)
!17662 = !DILocation(line: 156, column: 4, scope: !17663)
!17663 = distinct !DILexicalBlock(scope: !17658, file: !2598, line: 155, column: 39)
!17664 = !DILocation(line: 158, column: 3, scope: !17663)
!17665 = !DILocation(line: 0, scope: !17500, inlinedAt: !17666)
!17666 = distinct !DILocation(line: 154, column: 2, scope: !17660)
!17667 = !DILocation(line: 0, scope: !17508, inlinedAt: !17668)
!17668 = distinct !DILocation(line: 215, column: 2, scope: !17500, inlinedAt: !17666)
!17669 = !DILocation(line: 95, column: 2, scope: !17508, inlinedAt: !17668)
!17670 = !DILocation(line: 161, column: 2, scope: !17641)
!17671 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !309, file: !309, line: 225, type: !17672, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17676)
!17672 = !DISubroutineType(types: !17673)
!17673 = !{!157, !17674}
!17674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17675, size: 32)
!17675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2575)
!17676 = !{!17677}
!17677 = !DILocalVariable(name: "node", arg: 1, scope: !17671, file: !309, line: 225, type: !17674)
!17678 = !DILocation(line: 0, scope: !17671)
!17679 = !DILocation(line: 227, column: 15, scope: !17671)
!17680 = !DILocation(line: 227, column: 20, scope: !17671)
!17681 = !DILocation(line: 227, column: 2, scope: !17671)
!17682 = distinct !DISubprogram(name: "remove_timeout", scope: !2598, file: !2598, line: 53, type: !2592, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17683)
!17683 = !{!17684}
!17684 = !DILocalVariable(name: "t", arg: 1, scope: !17682, file: !2598, line: 53, type: !2571)
!17685 = !DILocation(line: 0, scope: !17682)
!17686 = !DILocation(line: 55, column: 6, scope: !17687)
!17687 = distinct !DILexicalBlock(scope: !17682, file: !2598, line: 55, column: 6)
!17688 = !DILocation(line: 55, column: 14, scope: !17687)
!17689 = !DILocation(line: 55, column: 6, scope: !17682)
!17690 = !DILocation(line: 56, column: 25, scope: !17691)
!17691 = distinct !DILexicalBlock(scope: !17687, file: !2598, line: 55, column: 23)
!17692 = !DILocation(line: 56, column: 12, scope: !17691)
!17693 = !DILocation(line: 56, column: 19, scope: !17691)
!17694 = !DILocation(line: 57, column: 2, scope: !17691)
!17695 = !DILocation(line: 59, column: 23, scope: !17682)
!17696 = !DILocation(line: 59, column: 2, scope: !17682)
!17697 = !DILocation(line: 60, column: 1, scope: !17682)
!17698 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !309, file: !309, line: 496, type: !17699, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17701)
!17699 = !DISubroutineType(types: !17700)
!17700 = !{null, !17527}
!17701 = !{!17702, !17703, !17704}
!17702 = !DILocalVariable(name: "node", arg: 1, scope: !17698, file: !309, line: 496, type: !17527)
!17703 = !DILocalVariable(name: "prev", scope: !17698, file: !309, line: 498, type: !17539)
!17704 = !DILocalVariable(name: "next", scope: !17698, file: !309, line: 499, type: !17539)
!17705 = !DILocation(line: 0, scope: !17698)
!17706 = !DILocation(line: 498, column: 34, scope: !17698)
!17707 = !DILocation(line: 499, column: 34, scope: !17698)
!17708 = !DILocation(line: 501, column: 8, scope: !17698)
!17709 = !DILocation(line: 501, column: 13, scope: !17698)
!17710 = !DILocation(line: 502, column: 8, scope: !17698)
!17711 = !DILocation(line: 502, column: 13, scope: !17698)
!17712 = !DILocation(line: 503, column: 2, scope: !17698)
!17713 = !DILocation(line: 504, column: 1, scope: !17698)
!17714 = distinct !DISubprogram(name: "sys_dnode_init", scope: !309, file: !309, line: 211, type: !17699, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17715)
!17715 = !{!17716}
!17716 = !DILocalVariable(name: "node", arg: 1, scope: !17714, file: !309, line: 211, type: !17527)
!17717 = !DILocation(line: 0, scope: !17714)
!17718 = !DILocation(line: 213, column: 8, scope: !17714)
!17719 = !DILocation(line: 213, column: 13, scope: !17714)
!17720 = !DILocation(line: 214, column: 8, scope: !17714)
!17721 = !DILocation(line: 214, column: 13, scope: !17714)
!17722 = !DILocation(line: 215, column: 1, scope: !17714)
!17723 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2598, file: !2598, line: 183, type: !17724, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17728)
!17724 = !DISubroutineType(types: !17725)
!17725 = !{!1789, !17726}
!17726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17727, size: 32)
!17727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2572)
!17728 = !{!17729, !17730, !17731, !17733}
!17729 = !DILocalVariable(name: "timeout", arg: 1, scope: !17723, file: !2598, line: 183, type: !17726)
!17730 = !DILocalVariable(name: "ticks", scope: !17723, file: !2598, line: 185, type: !1789)
!17731 = !DILocalVariable(name: "__i", scope: !17732, file: !2598, line: 187, type: !17410)
!17732 = distinct !DILexicalBlock(scope: !17723, file: !2598, line: 187, column: 2)
!17733 = !DILocalVariable(name: "__key", scope: !17732, file: !2598, line: 187, type: !17410)
!17734 = !DILocation(line: 0, scope: !17723)
!17735 = !DILocation(line: 0, scope: !17732)
!17736 = !DILocation(line: 0, scope: !17432, inlinedAt: !17737)
!17737 = distinct !DILocation(line: 187, column: 2, scope: !17732)
!17738 = !DILocation(line: 55, column: 2, scope: !17441, inlinedAt: !17739)
!17739 = distinct !DILocation(line: 145, column: 10, scope: !17432, inlinedAt: !17737)
!17740 = !DILocation(line: 0, scope: !17441, inlinedAt: !17739)
!17741 = !DILocation(line: 188, column: 11, scope: !17742)
!17742 = distinct !DILexicalBlock(scope: !17743, file: !2598, line: 187, column: 24)
!17743 = distinct !DILexicalBlock(scope: !17732, file: !2598, line: 187, column: 2)
!17744 = !DILocation(line: 0, scope: !17500, inlinedAt: !17745)
!17745 = distinct !DILocation(line: 187, column: 2, scope: !17743)
!17746 = !DILocation(line: 0, scope: !17508, inlinedAt: !17747)
!17747 = distinct !DILocation(line: 215, column: 2, scope: !17500, inlinedAt: !17745)
!17748 = !DILocation(line: 95, column: 2, scope: !17508, inlinedAt: !17747)
!17749 = !DILocation(line: 191, column: 2, scope: !17723)
!17750 = distinct !DISubprogram(name: "timeout_rem", scope: !2598, file: !2598, line: 165, type: !17724, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17751)
!17751 = !{!17752, !17753, !17754}
!17752 = !DILocalVariable(name: "timeout", arg: 1, scope: !17750, file: !2598, line: 165, type: !17726)
!17753 = !DILocalVariable(name: "ticks", scope: !17750, file: !2598, line: 167, type: !1789)
!17754 = !DILocalVariable(name: "t", scope: !17755, file: !2598, line: 173, type: !2571)
!17755 = distinct !DILexicalBlock(scope: !17750, file: !2598, line: 173, column: 2)
!17756 = !DILocation(line: 0, scope: !17750)
!17757 = !DILocation(line: 169, column: 6, scope: !17758)
!17758 = distinct !DILexicalBlock(scope: !17750, file: !2598, line: 169, column: 6)
!17759 = !DILocation(line: 169, column: 6, scope: !17750)
!17760 = !DILocation(line: 173, column: 28, scope: !17755)
!17761 = !DILocation(line: 0, scope: !17755)
!17762 = !DILocation(line: 173, column: 39, scope: !17763)
!17763 = distinct !DILexicalBlock(scope: !17755, file: !2598, line: 173, column: 2)
!17764 = !DILocation(line: 173, column: 2, scope: !17755)
!17765 = !DILocation(line: 174, column: 15, scope: !17766)
!17766 = distinct !DILexicalBlock(scope: !17763, file: !2598, line: 173, column: 61)
!17767 = !DILocation(line: 174, column: 9, scope: !17766)
!17768 = !DILocation(line: 175, column: 15, scope: !17769)
!17769 = distinct !DILexicalBlock(scope: !17766, file: !2598, line: 175, column: 7)
!17770 = !DILocation(line: 175, column: 7, scope: !17766)
!17771 = !DILocation(line: 173, column: 52, scope: !17763)
!17772 = distinct !{!17772, !17764, !17773}
!17773 = !DILocation(line: 178, column: 2, scope: !17755)
!17774 = !DILocation(line: 180, column: 17, scope: !17750)
!17775 = !DILocation(line: 180, column: 15, scope: !17750)
!17776 = !DILocation(line: 180, column: 2, scope: !17750)
!17777 = !DILocation(line: 181, column: 1, scope: !17750)
!17778 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14824, file: !14824, line: 35, type: !17779, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17781)
!17779 = !DISubroutineType(types: !17780)
!17780 = !{!157, !17726}
!17781 = !{!17782}
!17782 = !DILocalVariable(name: "to", arg: 1, scope: !17778, file: !14824, line: 35, type: !17726)
!17783 = !DILocation(line: 0, scope: !17778)
!17784 = !DILocation(line: 37, column: 35, scope: !17778)
!17785 = !DILocation(line: 37, column: 10, scope: !17778)
!17786 = !DILocation(line: 37, column: 9, scope: !17778)
!17787 = !DILocation(line: 37, column: 2, scope: !17778)
!17788 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2598, file: !2598, line: 194, type: !17724, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17789)
!17789 = !{!17790, !17791, !17792, !17794}
!17790 = !DILocalVariable(name: "timeout", arg: 1, scope: !17788, file: !2598, line: 194, type: !17726)
!17791 = !DILocalVariable(name: "ticks", scope: !17788, file: !2598, line: 196, type: !1789)
!17792 = !DILocalVariable(name: "__i", scope: !17793, file: !2598, line: 198, type: !17410)
!17793 = distinct !DILexicalBlock(scope: !17788, file: !2598, line: 198, column: 2)
!17794 = !DILocalVariable(name: "__key", scope: !17793, file: !2598, line: 198, type: !17410)
!17795 = !DILocation(line: 0, scope: !17788)
!17796 = !DILocation(line: 0, scope: !17793)
!17797 = !DILocation(line: 0, scope: !17432, inlinedAt: !17798)
!17798 = distinct !DILocation(line: 198, column: 2, scope: !17793)
!17799 = !DILocation(line: 55, column: 2, scope: !17441, inlinedAt: !17800)
!17800 = distinct !DILocation(line: 145, column: 10, scope: !17432, inlinedAt: !17798)
!17801 = !DILocation(line: 0, scope: !17441, inlinedAt: !17800)
!17802 = !DILocation(line: 199, column: 11, scope: !17803)
!17803 = distinct !DILexicalBlock(scope: !17804, file: !2598, line: 198, column: 24)
!17804 = distinct !DILexicalBlock(scope: !17793, file: !2598, line: 198, column: 2)
!17805 = !DILocation(line: 199, column: 23, scope: !17803)
!17806 = !DILocation(line: 0, scope: !17500, inlinedAt: !17807)
!17807 = distinct !DILocation(line: 198, column: 2, scope: !17804)
!17808 = !DILocation(line: 0, scope: !17508, inlinedAt: !17809)
!17809 = distinct !DILocation(line: 215, column: 2, scope: !17500, inlinedAt: !17807)
!17810 = !DILocation(line: 95, column: 2, scope: !17508, inlinedAt: !17809)
!17811 = !DILocation(line: 199, column: 21, scope: !17803)
!17812 = !DILocation(line: 202, column: 2, scope: !17788)
!17813 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2598, file: !2598, line: 205, type: !17516, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17814)
!17814 = !{!17815, !17816, !17818}
!17815 = !DILocalVariable(name: "ret", scope: !17813, file: !2598, line: 207, type: !332)
!17816 = !DILocalVariable(name: "__i", scope: !17817, file: !2598, line: 209, type: !17410)
!17817 = distinct !DILexicalBlock(scope: !17813, file: !2598, line: 209, column: 2)
!17818 = !DILocalVariable(name: "__key", scope: !17817, file: !2598, line: 209, type: !17410)
!17819 = !DILocation(line: 0, scope: !17813)
!17820 = !DILocation(line: 0, scope: !17817)
!17821 = !DILocation(line: 0, scope: !17432, inlinedAt: !17822)
!17822 = distinct !DILocation(line: 209, column: 2, scope: !17817)
!17823 = !DILocation(line: 55, column: 2, scope: !17441, inlinedAt: !17824)
!17824 = distinct !DILocation(line: 145, column: 10, scope: !17432, inlinedAt: !17822)
!17825 = !DILocation(line: 0, scope: !17441, inlinedAt: !17824)
!17826 = !DILocation(line: 210, column: 9, scope: !17827)
!17827 = distinct !DILexicalBlock(scope: !17828, file: !2598, line: 209, column: 24)
!17828 = distinct !DILexicalBlock(scope: !17817, file: !2598, line: 209, column: 2)
!17829 = !DILocation(line: 0, scope: !17500, inlinedAt: !17830)
!17830 = distinct !DILocation(line: 209, column: 2, scope: !17828)
!17831 = !DILocation(line: 0, scope: !17508, inlinedAt: !17832)
!17832 = distinct !DILocation(line: 215, column: 2, scope: !17500, inlinedAt: !17830)
!17833 = !DILocation(line: 95, column: 2, scope: !17508, inlinedAt: !17832)
!17834 = !DILocation(line: 212, column: 2, scope: !17813)
!17835 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2598, file: !2598, line: 215, type: !11854, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17836)
!17836 = !{!17837, !17838, !17839, !17841, !17842, !17845, !17846}
!17837 = !DILocalVariable(name: "ticks", arg: 1, scope: !17835, file: !2598, line: 215, type: !332)
!17838 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17835, file: !2598, line: 215, type: !157)
!17839 = !DILocalVariable(name: "__i", scope: !17840, file: !2598, line: 217, type: !17410)
!17840 = distinct !DILexicalBlock(scope: !17835, file: !2598, line: 217, column: 2)
!17841 = !DILocalVariable(name: "__key", scope: !17840, file: !2598, line: 217, type: !17410)
!17842 = !DILocalVariable(name: "next_to", scope: !17843, file: !2598, line: 218, type: !103)
!17843 = distinct !DILexicalBlock(scope: !17844, file: !2598, line: 217, column: 24)
!17844 = distinct !DILexicalBlock(scope: !17840, file: !2598, line: 217, column: 2)
!17845 = !DILocalVariable(name: "sooner", scope: !17843, file: !2598, line: 219, type: !157)
!17846 = !DILocalVariable(name: "imminent", scope: !17843, file: !2598, line: 221, type: !157)
!17847 = !DILocation(line: 0, scope: !17835)
!17848 = !DILocation(line: 0, scope: !17840)
!17849 = !DILocation(line: 0, scope: !17432, inlinedAt: !17850)
!17850 = distinct !DILocation(line: 217, column: 2, scope: !17840)
!17851 = !DILocation(line: 55, column: 2, scope: !17441, inlinedAt: !17852)
!17852 = distinct !DILocation(line: 145, column: 10, scope: !17432, inlinedAt: !17850)
!17853 = !DILocation(line: 0, scope: !17441, inlinedAt: !17852)
!17854 = !DILocation(line: 218, column: 17, scope: !17843)
!17855 = !DILocation(line: 0, scope: !17843)
!17856 = !DILocation(line: 221, column: 27, scope: !17843)
!17857 = !DILocation(line: 233, column: 17, scope: !17858)
!17858 = distinct !DILexicalBlock(scope: !17843, file: !2598, line: 233, column: 7)
!17859 = !DILocation(line: 234, column: 26, scope: !17860)
!17860 = distinct !DILexicalBlock(scope: !17858, file: !2598, line: 233, column: 56)
!17861 = !DILocation(line: 234, column: 4, scope: !17860)
!17862 = !DILocation(line: 235, column: 3, scope: !17860)
!17863 = !DILocation(line: 0, scope: !17500, inlinedAt: !17864)
!17864 = distinct !DILocation(line: 217, column: 2, scope: !17844)
!17865 = !DILocation(line: 0, scope: !17508, inlinedAt: !17866)
!17866 = distinct !DILocation(line: 215, column: 2, scope: !17500, inlinedAt: !17864)
!17867 = !DILocation(line: 95, column: 2, scope: !17508, inlinedAt: !17866)
!17868 = !DILocation(line: 237, column: 1, scope: !17835)
!17869 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2598, file: !2598, line: 239, type: !17870, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17872)
!17870 = !DISubroutineType(types: !17871)
!17871 = !{null, !332}
!17872 = !{!17873, !17874, !17875, !17877}
!17873 = !DILocalVariable(name: "ticks", arg: 1, scope: !17869, file: !2598, line: 239, type: !332)
!17874 = !DILocalVariable(name: "key", scope: !17869, file: !2598, line: 245, type: !17410)
!17875 = !DILocalVariable(name: "t", scope: !17876, file: !2598, line: 262, type: !2571)
!17876 = distinct !DILexicalBlock(scope: !17869, file: !2598, line: 261, column: 67)
!17877 = !DILocalVariable(name: "dt", scope: !17876, file: !2598, line: 263, type: !103)
!17878 = !DILocation(line: 0, scope: !17869)
!17879 = !DILocation(line: 242, column: 2, scope: !17869)
!17880 = !DILocation(line: 0, scope: !17432, inlinedAt: !17881)
!17881 = distinct !DILocation(line: 245, column: 25, scope: !17869)
!17882 = !DILocation(line: 55, column: 2, scope: !17441, inlinedAt: !17883)
!17883 = distinct !DILocation(line: 145, column: 10, scope: !17432, inlinedAt: !17881)
!17884 = !DILocation(line: 0, scope: !17441, inlinedAt: !17883)
!17885 = !DILocation(line: 261, column: 9, scope: !17869)
!17886 = !DILocation(line: 261, column: 17, scope: !17869)
!17887 = !DILocation(line: 261, column: 25, scope: !17869)
!17888 = !DILocation(line: 261, column: 37, scope: !17869)
!17889 = !DILocation(line: 261, column: 47, scope: !17869)
!17890 = !DILocation(line: 261, column: 44, scope: !17869)
!17891 = !DILocation(line: 261, column: 2, scope: !17869)
!17892 = !DILocation(line: 0, scope: !17876)
!17893 = !DILocation(line: 263, column: 12, scope: !17876)
!17894 = !DILocation(line: 265, column: 16, scope: !17876)
!17895 = !DILocation(line: 265, column: 13, scope: !17876)
!17896 = !DILocation(line: 266, column: 13, scope: !17876)
!17897 = !DILocation(line: 267, column: 3, scope: !17876)
!17898 = !DILocation(line: 0, scope: !17500, inlinedAt: !17899)
!17899 = distinct !DILocation(line: 269, column: 3, scope: !17876)
!17900 = !DILocation(line: 0, scope: !17508, inlinedAt: !17901)
!17901 = distinct !DILocation(line: 215, column: 2, scope: !17500, inlinedAt: !17899)
!17902 = !DILocation(line: 95, column: 2, scope: !17508, inlinedAt: !17901)
!17903 = !DILocation(line: 270, column: 6, scope: !17876)
!17904 = !DILocation(line: 270, column: 3, scope: !17876)
!17905 = !DILocation(line: 0, scope: !17432, inlinedAt: !17906)
!17906 = distinct !DILocation(line: 271, column: 9, scope: !17876)
!17907 = !DILocation(line: 55, column: 2, scope: !17441, inlinedAt: !17908)
!17908 = distinct !DILocation(line: 145, column: 10, scope: !17432, inlinedAt: !17906)
!17909 = !DILocation(line: 0, scope: !17441, inlinedAt: !17908)
!17910 = !DILocation(line: 272, column: 22, scope: !17876)
!17911 = distinct !{!17911, !17891, !17912}
!17912 = !DILocation(line: 273, column: 2, scope: !17869)
!17913 = !DILocation(line: 276, column: 19, scope: !17914)
!17914 = distinct !DILexicalBlock(scope: !17915, file: !2598, line: 275, column: 23)
!17915 = distinct !DILexicalBlock(scope: !17869, file: !2598, line: 275, column: 6)
!17916 = !DILocation(line: 277, column: 2, scope: !17914)
!17917 = !DILocation(line: 279, column: 15, scope: !17869)
!17918 = !DILocation(line: 279, column: 12, scope: !17869)
!17919 = !DILocation(line: 280, column: 21, scope: !17869)
!17920 = !DILocation(line: 282, column: 24, scope: !17869)
!17921 = !DILocation(line: 282, column: 2, scope: !17869)
!17922 = !DILocation(line: 0, scope: !17500, inlinedAt: !17923)
!17923 = distinct !DILocation(line: 284, column: 2, scope: !17869)
!17924 = !DILocation(line: 0, scope: !17508, inlinedAt: !17925)
!17925 = distinct !DILocation(line: 215, column: 2, scope: !17500, inlinedAt: !17923)
!17926 = !DILocation(line: 95, column: 2, scope: !17508, inlinedAt: !17925)
!17927 = !DILocation(line: 285, column: 1, scope: !17869)
!17928 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2598, file: !2598, line: 287, type: !17929, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17931)
!17929 = !DISubroutineType(types: !17930)
!17930 = !{!420}
!17931 = !{!17932, !17933, !17935}
!17932 = !DILocalVariable(name: "t", scope: !17928, file: !2598, line: 289, type: !1611)
!17933 = !DILocalVariable(name: "__i", scope: !17934, file: !2598, line: 291, type: !17410)
!17934 = distinct !DILexicalBlock(scope: !17928, file: !2598, line: 291, column: 2)
!17935 = !DILocalVariable(name: "__key", scope: !17934, file: !2598, line: 291, type: !17410)
!17936 = !DILocation(line: 0, scope: !17928)
!17937 = !DILocation(line: 0, scope: !17934)
!17938 = !DILocation(line: 0, scope: !17432, inlinedAt: !17939)
!17939 = distinct !DILocation(line: 291, column: 2, scope: !17934)
!17940 = !DILocation(line: 55, column: 2, scope: !17441, inlinedAt: !17941)
!17941 = distinct !DILocation(line: 145, column: 10, scope: !17432, inlinedAt: !17939)
!17942 = !DILocation(line: 0, scope: !17441, inlinedAt: !17941)
!17943 = !DILocation(line: 292, column: 7, scope: !17944)
!17944 = distinct !DILexicalBlock(scope: !17945, file: !2598, line: 291, column: 24)
!17945 = distinct !DILexicalBlock(scope: !17934, file: !2598, line: 291, column: 2)
!17946 = !DILocation(line: 292, column: 19, scope: !17944)
!17947 = !DILocation(line: 0, scope: !17500, inlinedAt: !17948)
!17948 = distinct !DILocation(line: 291, column: 2, scope: !17945)
!17949 = !DILocation(line: 0, scope: !17508, inlinedAt: !17950)
!17950 = distinct !DILocation(line: 215, column: 2, scope: !17500, inlinedAt: !17948)
!17951 = !DILocation(line: 95, column: 2, scope: !17508, inlinedAt: !17950)
!17952 = !DILocation(line: 292, column: 17, scope: !17944)
!17953 = !DILocation(line: 294, column: 2, scope: !17928)
!17954 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2598, file: !2598, line: 297, type: !6985, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !461)
!17955 = !DILocation(line: 300, column: 19, scope: !17954)
!17956 = !DILocation(line: 300, column: 9, scope: !17954)
!17957 = !DILocation(line: 300, column: 2, scope: !17954)
!17958 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2598, file: !2598, line: 306, type: !17929, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !461)
!17959 = !DILocation(line: 308, column: 9, scope: !17958)
!17960 = !DILocation(line: 308, column: 2, scope: !17958)
!17961 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2598, file: !2598, line: 319, type: !6995, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17962)
!17962 = !{!17963, !17964, !17965, !17966}
!17963 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17961, file: !2598, line: 319, type: !121)
!17964 = !DILocalVariable(name: "start_cycles", scope: !17961, file: !2598, line: 328, type: !121)
!17965 = !DILocalVariable(name: "cycles_to_wait", scope: !17961, file: !2598, line: 331, type: !121)
!17966 = !DILocalVariable(name: "current_cycles", scope: !17967, file: !2598, line: 338, type: !121)
!17967 = distinct !DILexicalBlock(scope: !17968, file: !2598, line: 337, column: 11)
!17968 = distinct !DILexicalBlock(scope: !17969, file: !2598, line: 337, column: 2)
!17969 = distinct !DILexicalBlock(scope: !17961, file: !2598, line: 337, column: 2)
!17970 = !DILocation(line: 0, scope: !17961)
!17971 = !DILocation(line: 322, column: 19, scope: !17972)
!17972 = distinct !DILexicalBlock(scope: !17961, file: !2598, line: 322, column: 6)
!17973 = !DILocation(line: 322, column: 6, scope: !17961)
!17974 = !DILocation(line: 328, column: 26, scope: !17961)
!17975 = !DILocation(line: 333, column: 43, scope: !17961)
!17976 = !DILocation(line: 337, column: 2, scope: !17961)
!17977 = !DILocation(line: 338, column: 29, scope: !17967)
!17978 = !DILocation(line: 0, scope: !17967)
!17979 = !DILocation(line: 341, column: 23, scope: !17980)
!17980 = distinct !DILexicalBlock(scope: !17967, file: !2598, line: 341, column: 7)
!17981 = !DILocation(line: 341, column: 39, scope: !17980)
!17982 = !DILocation(line: 349, column: 1, scope: !17961)
!17983 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !300, file: !300, line: 1675, type: !6985, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !461)
!17984 = !DILocation(line: 1677, column: 9, scope: !17983)
!17985 = !DILocation(line: 1677, column: 2, scope: !17983)
!17986 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17987, file: !17987, line: 24, type: !6985, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !461)
!17987 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17988 = !DILocation(line: 26, column: 9, scope: !17986)
!17989 = !DILocation(line: 26, column: 2, scope: !17986)
!17990 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2598, file: !2598, line: 364, type: !17991, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !17993)
!17991 = !DISubroutineType(types: !17992)
!17992 = !{!1611, !17400}
!17993 = !{!17994, !17995}
!17994 = !DILocalVariable(name: "timeout", arg: 1, scope: !17990, file: !2598, line: 364, type: !17400)
!17995 = !DILocalVariable(name: "dt", scope: !17990, file: !2598, line: 366, type: !1789)
!17996 = !DILocation(line: 0, scope: !17990)
!17997 = !DILocation(line: 368, column: 6, scope: !17990)
!17998 = !DILocation(line: 371, column: 10, scope: !17999)
!17999 = distinct !DILexicalBlock(scope: !18000, file: !2598, line: 370, column: 47)
!18000 = distinct !DILexicalBlock(scope: !18001, file: !2598, line: 370, column: 13)
!18001 = distinct !DILexicalBlock(scope: !17990, file: !2598, line: 368, column: 6)
!18002 = !DILocation(line: 371, column: 3, scope: !17999)
!18003 = !DILocation(line: 376, column: 58, scope: !18004)
!18004 = distinct !DILexicalBlock(scope: !18005, file: !2598, line: 376, column: 7)
!18005 = distinct !DILexicalBlock(scope: !18000, file: !2598, line: 372, column: 9)
!18006 = !DILocation(line: 376, column: 7, scope: !18005)
!18007 = !DILocation(line: 376, column: 43, scope: !18004)
!18008 = !DILocation(line: 377, column: 4, scope: !18009)
!18009 = distinct !DILexicalBlock(scope: !18004, file: !2598, line: 376, column: 64)
!18010 = !DILocation(line: 379, column: 10, scope: !18005)
!18011 = !DILocation(line: 379, column: 33, scope: !18005)
!18012 = !DILocation(line: 379, column: 31, scope: !18005)
!18013 = !DILocation(line: 379, column: 3, scope: !18005)
!18014 = !DILocation(line: 0, scope: !18001)
!18015 = !DILocation(line: 381, column: 1, scope: !17990)
!18016 = distinct !DISubprogram(name: "boot_banner", scope: !18017, file: !18017, line: 26, type: !3318, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3304, retainedNodes: !461)
!18017 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18018 = !DILocation(line: 34, column: 2, scope: !18016)
!18019 = !DILocation(line: 36, column: 1, scope: !18016)
!18020 = distinct !DISubprogram(name: "statics_init", scope: !2626, file: !2626, line: 21, type: !2632, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18021)
!18021 = !{!18022, !18023}
!18022 = !DILocalVariable(name: "unused", arg: 1, scope: !18020, file: !2626, line: 21, type: !2634)
!18023 = !DILocalVariable(name: "h", scope: !18024, file: !2626, line: 24, type: !18025)
!18024 = distinct !DILexicalBlock(scope: !18020, file: !2626, line: 24, column: 2)
!18025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18026, size: 32)
!18026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !18027)
!18027 = !{!18028, !18034, !18040}
!18028 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18026, file: !300, line: 5074, baseType: !18029, size: 96)
!18029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !18030)
!18030 = !{!18031, !18032, !18033}
!18031 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18029, file: !450, line: 57, baseType: !453, size: 32)
!18032 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18029, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!18033 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18029, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!18034 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18026, file: !300, line: 5075, baseType: !18035, size: 64, offset: 96)
!18035 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !18036)
!18036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !18037)
!18037 = !{!18038}
!18038 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18036, file: !304, line: 232, baseType: !18039, size: 64)
!18039 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2612)
!18040 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18026, file: !300, line: 5076, baseType: !18041, offset: 160)
!18041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!18042 = !DILocation(line: 0, scope: !18020)
!18043 = !DILocation(line: 0, scope: !18024)
!18044 = !DILocation(line: 24, column: 2, scope: !18024)
!18045 = !DILocation(line: 52, column: 2, scope: !18020)
!18046 = !DILocation(line: 49, column: 27, scope: !18047)
!18047 = distinct !DILexicalBlock(scope: !18048, file: !2626, line: 48, column: 3)
!18048 = distinct !DILexicalBlock(scope: !18049, file: !2626, line: 24, column: 36)
!18049 = distinct !DILexicalBlock(scope: !18024, file: !2626, line: 24, column: 2)
!18050 = !DILocation(line: 49, column: 45, scope: !18047)
!18051 = !DILocation(line: 49, column: 4, scope: !18047)
!18052 = !DILocation(line: 24, column: 2, scope: !18049)
!18053 = !DILocation(line: 24, column: 2, scope: !18054)
!18054 = distinct !DILexicalBlock(scope: !18049, file: !2626, line: 24, column: 2)
!18055 = distinct !{!18055, !18044, !18056}
!18056 = !DILocation(line: 51, column: 2, scope: !18024)
!18057 = distinct !DISubprogram(name: "k_heap_init", scope: !2626, file: !2626, line: 13, type: !18058, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18060)
!18058 = !DISubroutineType(types: !18059)
!18059 = !{null, !18025, !102, !344}
!18060 = !{!18061, !18062, !18063}
!18061 = !DILocalVariable(name: "h", arg: 1, scope: !18057, file: !2626, line: 13, type: !18025)
!18062 = !DILocalVariable(name: "mem", arg: 2, scope: !18057, file: !2626, line: 13, type: !102)
!18063 = !DILocalVariable(name: "bytes", arg: 3, scope: !18057, file: !2626, line: 13, type: !344)
!18064 = !DILocation(line: 0, scope: !18057)
!18065 = !DILocation(line: 15, column: 19, scope: !18057)
!18066 = !DILocation(line: 15, column: 2, scope: !18057)
!18067 = !DILocation(line: 16, column: 20, scope: !18057)
!18068 = !DILocation(line: 16, column: 2, scope: !18057)
!18069 = !DILocation(line: 19, column: 1, scope: !18057)
!18070 = distinct !DISubprogram(name: "z_waitq_init", scope: !14756, file: !14756, line: 47, type: !18071, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18074)
!18071 = !DISubroutineType(types: !18072)
!18072 = !{null, !18073}
!18073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18035, size: 32)
!18074 = !{!18075}
!18075 = !DILocalVariable(name: "w", arg: 1, scope: !18070, file: !14756, line: 47, type: !18073)
!18076 = !DILocation(line: 0, scope: !18070)
!18077 = !DILocation(line: 49, column: 21, scope: !18070)
!18078 = !DILocation(line: 49, column: 2, scope: !18070)
!18079 = !DILocation(line: 50, column: 1, scope: !18070)
!18080 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !18081, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18084)
!18081 = !DISubroutineType(types: !18082)
!18082 = !{null, !18083}
!18083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18039, size: 32)
!18084 = !{!18085}
!18085 = !DILocalVariable(name: "list", arg: 1, scope: !18080, file: !309, line: 197, type: !18083)
!18086 = !DILocation(line: 0, scope: !18080)
!18087 = !DILocation(line: 199, column: 8, scope: !18080)
!18088 = !DILocation(line: 199, column: 13, scope: !18080)
!18089 = !DILocation(line: 200, column: 8, scope: !18080)
!18090 = !DILocation(line: 200, column: 13, scope: !18080)
!18091 = !DILocation(line: 201, column: 1, scope: !18080)
!18092 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2626, file: !2626, line: 64, type: !18093, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18099)
!18093 = !DISubroutineType(types: !18094)
!18094 = !{!102, !18025, !344, !344, !18095}
!18095 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1790, line: 67, baseType: !18096)
!18096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1790, line: 65, size: 64, elements: !18097)
!18097 = !{!18098}
!18098 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18096, file: !1790, line: 66, baseType: !1789, size: 64)
!18099 = !{!18100, !18101, !18102, !18103, !18104, !18105, !18106, !18107, !18112}
!18100 = !DILocalVariable(name: "h", arg: 1, scope: !18092, file: !2626, line: 64, type: !18025)
!18101 = !DILocalVariable(name: "align", arg: 2, scope: !18092, file: !2626, line: 64, type: !344)
!18102 = !DILocalVariable(name: "bytes", arg: 3, scope: !18092, file: !2626, line: 64, type: !344)
!18103 = !DILocalVariable(name: "timeout", arg: 4, scope: !18092, file: !2626, line: 65, type: !18095)
!18104 = !DILocalVariable(name: "now", scope: !18092, file: !2626, line: 67, type: !420)
!18105 = !DILocalVariable(name: "end", scope: !18092, file: !2626, line: 67, type: !420)
!18106 = !DILocalVariable(name: "ret", scope: !18092, file: !2626, line: 68, type: !102)
!18107 = !DILocalVariable(name: "key", scope: !18092, file: !2626, line: 72, type: !18108)
!18108 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !18109)
!18109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !18110)
!18110 = !{!18111}
!18111 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18109, file: !460, line: 33, baseType: !103, size: 32)
!18112 = !DILocalVariable(name: "blocked_alloc", scope: !18092, file: !2626, line: 78, type: !157)
!18113 = !DILocation(line: 0, scope: !18092)
!18114 = !DILocation(line: 67, column: 21, scope: !18092)
!18115 = !DILocation(line: 70, column: 8, scope: !18092)
!18116 = !DILocation(line: 72, column: 41, scope: !18092)
!18117 = !DILocalVariable(name: "l", arg: 1, scope: !18118, file: !460, line: 136, type: !18121)
!18118 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !18119, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18122)
!18119 = !DISubroutineType(types: !18120)
!18120 = !{!18108, !18121}
!18121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18041, size: 32)
!18122 = !{!18117, !18123}
!18123 = !DILocalVariable(name: "k", scope: !18118, file: !460, line: 139, type: !18108)
!18124 = !DILocation(line: 0, scope: !18118, inlinedAt: !18125)
!18125 = distinct !DILocation(line: 72, column: 25, scope: !18092)
!18126 = !DILocation(line: 55, column: 2, scope: !18127, inlinedAt: !18131)
!18127 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5884, file: !5884, line: 42, type: !5885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18128)
!18128 = !{!18129, !18130}
!18129 = !DILocalVariable(name: "key", scope: !18127, file: !5884, line: 44, type: !32)
!18130 = !DILocalVariable(name: "tmp", scope: !18127, file: !5884, line: 53, type: !32)
!18131 = distinct !DILocation(line: 145, column: 10, scope: !18118, inlinedAt: !18125)
!18132 = !{i64 2279007}
!18133 = !DILocation(line: 0, scope: !18127, inlinedAt: !18131)
!18134 = !DILocation(line: 81, column: 9, scope: !18135)
!18135 = distinct !DILexicalBlock(scope: !18092, file: !2626, line: 80, column: 22)
!18136 = !DILocation(line: 83, column: 9, scope: !18135)
!18137 = !DILocation(line: 85, column: 12, scope: !18138)
!18138 = distinct !DILexicalBlock(scope: !18135, file: !2626, line: 84, column: 7)
!18139 = !DILocation(line: 85, column: 21, scope: !18138)
!18140 = !DILocation(line: 85, column: 30, scope: !18138)
!18141 = !DILocation(line: 85, column: 37, scope: !18138)
!18142 = !DILocation(line: 84, column: 7, scope: !18135)
!18143 = !DILocation(line: 99, column: 10, scope: !18135)
!18144 = !DILocation(line: 0, scope: !18118, inlinedAt: !18145)
!18145 = distinct !DILocation(line: 101, column: 9, scope: !18135)
!18146 = !DILocation(line: 55, column: 2, scope: !18127, inlinedAt: !18147)
!18147 = distinct !DILocation(line: 145, column: 10, scope: !18118, inlinedAt: !18145)
!18148 = !DILocation(line: 0, scope: !18127, inlinedAt: !18147)
!18149 = distinct !{!18149, !18150, !18151}
!18150 = !DILocation(line: 80, column: 2, scope: !18092)
!18151 = !DILocation(line: 102, column: 2, scope: !18092)
!18152 = !DILocalVariable(name: "key", arg: 2, scope: !18153, file: !460, line: 190, type: !18108)
!18153 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !18154, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18156)
!18154 = !DISubroutineType(types: !18155)
!18155 = !{null, !18121, !18108}
!18156 = !{!18157, !18152}
!18157 = !DILocalVariable(name: "l", arg: 1, scope: !18153, file: !460, line: 189, type: !18121)
!18158 = !DILocation(line: 0, scope: !18153, inlinedAt: !18159)
!18159 = distinct !DILocation(line: 106, column: 2, scope: !18092)
!18160 = !DILocalVariable(name: "key", arg: 1, scope: !18161, file: !5884, line: 84, type: !32)
!18161 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5884, file: !5884, line: 84, type: !5895, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18162)
!18162 = !{!18160}
!18163 = !DILocation(line: 0, scope: !18161, inlinedAt: !18164)
!18164 = distinct !DILocation(line: 215, column: 2, scope: !18153, inlinedAt: !18159)
!18165 = !DILocation(line: 95, column: 2, scope: !18161, inlinedAt: !18164)
!18166 = !{i64 2279824}
!18167 = !DILocation(line: 107, column: 2, scope: !18092)
!18168 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2626, file: !2626, line: 110, type: !18169, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18171)
!18169 = !DISubroutineType(types: !18170)
!18170 = !{!102, !18025, !344, !18095}
!18171 = !{!18172, !18173, !18174, !18175}
!18172 = !DILocalVariable(name: "h", arg: 1, scope: !18168, file: !2626, line: 110, type: !18025)
!18173 = !DILocalVariable(name: "bytes", arg: 2, scope: !18168, file: !2626, line: 110, type: !344)
!18174 = !DILocalVariable(name: "timeout", arg: 3, scope: !18168, file: !2626, line: 110, type: !18095)
!18175 = !DILocalVariable(name: "ret", scope: !18168, file: !2626, line: 114, type: !102)
!18176 = !DILocation(line: 0, scope: !18168)
!18177 = !DILocation(line: 114, column: 14, scope: !18168)
!18178 = !DILocation(line: 118, column: 2, scope: !18168)
!18179 = distinct !DISubprogram(name: "k_heap_free", scope: !2626, file: !2626, line: 121, type: !18180, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18182)
!18180 = !DISubroutineType(types: !18181)
!18181 = !{null, !18025, !102}
!18182 = !{!18183, !18184, !18185}
!18183 = !DILocalVariable(name: "h", arg: 1, scope: !18179, file: !2626, line: 121, type: !18025)
!18184 = !DILocalVariable(name: "mem", arg: 2, scope: !18179, file: !2626, line: 121, type: !102)
!18185 = !DILocalVariable(name: "key", scope: !18179, file: !2626, line: 123, type: !18108)
!18186 = !DILocation(line: 0, scope: !18179)
!18187 = !DILocation(line: 0, scope: !18118, inlinedAt: !18188)
!18188 = distinct !DILocation(line: 123, column: 25, scope: !18179)
!18189 = !DILocation(line: 55, column: 2, scope: !18127, inlinedAt: !18190)
!18190 = distinct !DILocation(line: 145, column: 10, scope: !18118, inlinedAt: !18188)
!18191 = !DILocation(line: 0, scope: !18127, inlinedAt: !18190)
!18192 = !DILocation(line: 125, column: 20, scope: !18179)
!18193 = !DILocation(line: 125, column: 2, scope: !18179)
!18194 = !DILocation(line: 128, column: 60, scope: !18195)
!18195 = distinct !DILexicalBlock(scope: !18179, file: !2626, line: 128, column: 6)
!18196 = !DILocation(line: 128, column: 43, scope: !18195)
!18197 = !DILocation(line: 128, column: 68, scope: !18195)
!18198 = !DILocation(line: 128, column: 6, scope: !18179)
!18199 = !DILocation(line: 123, column: 41, scope: !18179)
!18200 = !DILocation(line: 129, column: 3, scope: !18201)
!18201 = distinct !DILexicalBlock(scope: !18195, file: !2626, line: 128, column: 74)
!18202 = !DILocation(line: 130, column: 2, scope: !18201)
!18203 = !DILocation(line: 0, scope: !18153, inlinedAt: !18204)
!18204 = distinct !DILocation(line: 131, column: 3, scope: !18205)
!18205 = distinct !DILexicalBlock(scope: !18195, file: !2626, line: 130, column: 9)
!18206 = !DILocation(line: 0, scope: !18161, inlinedAt: !18207)
!18207 = distinct !DILocation(line: 215, column: 2, scope: !18153, inlinedAt: !18204)
!18208 = !DILocation(line: 95, column: 2, scope: !18161, inlinedAt: !18207)
!18209 = !DILocation(line: 133, column: 1, scope: !18179)
