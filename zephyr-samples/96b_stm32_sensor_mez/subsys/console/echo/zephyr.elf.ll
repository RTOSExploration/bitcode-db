; ModuleID = 'build/96b_stm32_sensor_mez/subsys/console/echo/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.tty_serial = type { %struct.device*, %struct.k_sem, i8*, i32, i16, i16, i32, %struct.k_sem, i8*, i32, i16, i16, i32 }
%struct.k_sem = type { %union.anon, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.k_spinlock = type {}
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233040 to i8*), void (i8*)* inttoptr (i32 134230535 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233040 to i8*), void (i8*)* inttoptr (i32 134230515 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233040 to i8*), void (i8*)* inttoptr (i32 134230505 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233040 to i8*), void (i8*)* inttoptr (i32 134230605 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233040 to i8*), void (i8*)* inttoptr (i32 134230595 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233040 to i8*), void (i8*)* inttoptr (i32 134230585 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233040 to i8*), void (i8*)* inttoptr (i32 134230575 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233040 to i8*), void (i8*)* inttoptr (i32 134230565 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233040 to i8*), void (i8*)* inttoptr (i32 134230555 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233328 to i8*), void (i8*)* inttoptr (i32 134231885 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233304 to i8*), void (i8*)* inttoptr (i32 134231885 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233280 to i8*), void (i8*)* inttoptr (i32 134231885 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233040 to i8*), void (i8*)* inttoptr (i32 134230545 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233040 to i8*), void (i8*)* inttoptr (i32 134230525 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233256 to i8*), void (i8*)* inttoptr (i32 134231885 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [62 x i8] c"You should see another line with instructions below. If not,\0A\00", align 1
@.str.1 = private unnamed_addr constant [65 x i8] c"the (interrupt-driven) console device doesn't work as expected:\0A\00", align 1
@prompt = internal constant [50 x i8] c"Start typing characters to see them echoed back\0D\0A\00", align 1, !dbg !25
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !111
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [48 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_3.__isr_uart_stm32_isr_irq_3 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !120
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !175
@console_serial = internal global %struct.tty_serial zeroinitializer, align 4, !dbg !204
@console_txbuf = internal global [512 x i8] zeroinitializer, align 1, !dbg !301
@console_rxbuf = internal global [64 x i8] zeroinitializer, align 1, !dbg !295
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !351
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !359
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !500
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !536
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.37, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !546
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !551
@.str.36 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.37 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !571
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !772
@.str.38 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !734
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !717
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !690
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !706
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !736
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !749
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !751
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !753
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !755
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !757
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !759
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !761
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !763
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !765
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !767
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !777
@.str.40 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !810
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !906
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !895
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@debug_hook_in = internal unnamed_addr global i32 (i8)* null, align 4, !dbg !947
@debug_hook_out = internal unnamed_addr global i32 (i8)* @debug_hook_out_nop, align 4, !dbg !1098
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1048
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1090
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1092
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1041
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1108
@esc_state = internal global i32 0, align 4, !dbg !1133
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1141
@end = internal unnamed_addr global i8 0, align 1, !dbg !1143
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1137
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1139
@.str.63 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.62 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !797
@.str.67 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1149
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1427
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1397
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1383
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1328
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !795
@.str.1.68 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1429
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1401
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1399
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1342
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !793
@.str.2.69 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1442
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1405
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1403
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1348
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !791
@.str.3.70 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1444
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1409
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1407
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1357
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !789
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1446
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1413
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1411
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1363
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !787
@.str.5.71 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1448
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1417
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1415
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1369
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !785
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1450
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1421
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1419
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1375
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !783
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1452
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1425
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1423
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1381
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !805
@.str.75 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1454
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1714
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1658
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1716
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1631
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1633
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !803
@.str.1.76 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42, void (%struct.device*)* @uart_stm32_irq_config_func_1 }, align 4, !dbg !1725
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1660
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1757
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.76, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1642
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1644
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !801
@.str.2.77 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45, void (%struct.device*)* @uart_stm32_irq_config_func_2 }, align 4, !dbg !1759
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1662
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1774
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.77, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1648
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1650
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !799
@.str.3.80 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48, void (%struct.device*)* @uart_stm32_irq_config_func_3 }, align 4, !dbg !1776
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1664
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1791
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.80, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1654
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1656
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1666
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1674
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1697
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1700
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*) }, section ".intList", align 4, !dbg !1703
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !879
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1744
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1746
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1748
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1750
@uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 = internal global %struct._isr_list { i32 38, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1752
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1761
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1763
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1765
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1767
@uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 = internal global %struct._isr_list { i32 39, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1769
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1778
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1780
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1782
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1784
@uart_stm32_irq_config_func_3.__isr_uart_stm32_isr_irq_3 = internal global %struct._isr_list { i32 52, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*) }, section ".intList", align 4, !dbg !1786
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1793
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1904
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1906
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1902
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1873
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1908
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1326
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.68, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1340
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.69, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1346
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.70, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1355
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1361
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.71, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1367
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1373
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1379
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1998
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2042
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2045
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2051
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2057
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2266
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2275
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2282
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2287
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.132 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.137, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.138, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.139, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.140, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.141, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.135, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.142, i32 0, i32 0)], align 4, !dbg !2315
@.str.136 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.137 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.138 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.139 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.140 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.141 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.135 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.142 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2427
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2440
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2463
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2571
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2574
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2576
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2280
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2277
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2578
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2614
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2144
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2612
@.str.212 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2617
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3326 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !3364, !srcloc !3365
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3366, !srcloc !3367
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !3368, !srcloc !3369
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !3370, !srcloc !3371
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3372, !srcloc !3373
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !3374, !srcloc !3375
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3376, !srcloc !3377
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !3378, !srcloc !3379
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !3380, !srcloc !3381
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !3382, !srcloc !3383
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !3384, !srcloc !3387
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !3388, !srcloc !3389
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3390, !srcloc !3391
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3392, !srcloc !3393
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3394, !srcloc !3395
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3396, !srcloc !3397
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !3398, !srcloc !3399
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !3400, !srcloc !3401
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !3402, !srcloc !3403
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !3404, !srcloc !3405
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3406, !srcloc !3407
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3408, !srcloc !3409
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3410, !srcloc !3411
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3412, !srcloc !3413
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3414, !srcloc !3415
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3416, !srcloc !3417
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !3418, !srcloc !3419
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !3420, !srcloc !3421
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !3422, !srcloc !3423
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !3424, !srcloc !3425
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !3426, !srcloc !3427
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !3428, !srcloc !3429
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3430, !srcloc !3431
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !3432, !srcloc !3433
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3434, !srcloc !3435
  ret void, !dbg !3436
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3439 {
  %1 = tail call i32 @console_init() #25, !dbg !3443
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i32 0, i32 0)) #25, !dbg !3444
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3445
  %2 = tail call i32 @console_write(i8* noundef null, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @prompt, i32 0, i32 0), i32 noundef 49) #25, !dbg !3446
  br label %3, !dbg !3447

3:                                                ; preds = %11, %0
  %4 = tail call i32 @console_getchar() #25, !dbg !3448
  %5 = trunc i32 %4 to i8, !dbg !3448
  call void @llvm.dbg.value(metadata i8 %5, metadata !3441, metadata !DIExpression()), !dbg !3449
  %6 = tail call i32 @console_putchar(i8 noundef zeroext %5) #25, !dbg !3450
  %7 = and i32 %4, 255, !dbg !3451
  %8 = icmp eq i32 %7, 13, !dbg !3453
  br i1 %8, label %9, label %11, !dbg !3454

9:                                                ; preds = %3
  %10 = tail call i32 @console_putchar(i8 noundef zeroext 10) #25, !dbg !3455
  br label %11, !dbg !3457

11:                                               ; preds = %9, %3
  br label %3, !dbg !3448, !llvm.loop !3458
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3460 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3462, metadata !DIExpression()), !dbg !3463
  ret i32 0, !dbg !3464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3465 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3469, metadata !DIExpression()), !dbg !3470
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3471
  ret void, !dbg !3472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3473 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3476
  ret i8* %1, !dbg !3477
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3478 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3490, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.value(metadata i8* %0, metadata !3489, metadata !DIExpression()), !dbg !3499
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3500
  ret void, !dbg !3502
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3507, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i8* %1, metadata !3508, metadata !DIExpression()), !dbg !3509
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3510
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3510
  ret i32 %4, !dbg !3511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3512 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3524, metadata !DIExpression()), !dbg !3525
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3521, metadata !DIExpression()), !dbg !3525
  call void @llvm.dbg.value(metadata i8* %1, metadata !3522, metadata !DIExpression()), !dbg !3525
  call void @llvm.dbg.value(metadata i8* %2, metadata !3523, metadata !DIExpression()), !dbg !3525
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3526
  ret void, !dbg !3527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3528 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3532, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i32 %1, metadata !3533, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i32 0, metadata !3534, metadata !DIExpression()), !dbg !3535
  %3 = icmp eq i32 %1, 0, !dbg !3536
  br i1 %3, label %13, label %4, !dbg !3539

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3534, metadata !DIExpression()), !dbg !3535
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3540
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3542
  %8 = load i8, i8* %7, align 1, !dbg !3542
  %9 = zext i8 %8 to i32, !dbg !3542
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3540
  %11 = add nuw i32 %5, 1, !dbg !3543
  call void @llvm.dbg.value(metadata i32 %11, metadata !3534, metadata !DIExpression()), !dbg !3535
  %12 = icmp eq i32 %11, %1, !dbg !3536
  br i1 %12, label %13, label %4, !dbg !3539, !llvm.loop !3544

13:                                               ; preds = %4, %2
  ret void, !dbg !3546
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3547 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3551, metadata !DIExpression()), !dbg !3553
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3554
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3554
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3552, metadata !DIExpression()), !dbg !3555
  call void @llvm.va_start(i8* nonnull %3), !dbg !3556
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3557
  %5 = load i32, i32* %4, align 4, !dbg !3557
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3557
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3557
  call void @llvm.va_end(i8* nonnull %3), !dbg !3558
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3559
  ret void, !dbg !3559
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3560 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3564, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i32 %1, metadata !3565, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i8* %2, metadata !3566, metadata !DIExpression()), !dbg !3569
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3570
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3570
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3567, metadata !DIExpression()), !dbg !3571
  call void @llvm.va_start(i8* nonnull %5), !dbg !3572
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3573
  %7 = load i32, i32* %6, align 4, !dbg !3573
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3573
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3573
  call void @llvm.dbg.value(metadata i32 %9, metadata !3568, metadata !DIExpression()), !dbg !3569
  call void @llvm.va_end(i8* nonnull %5), !dbg !3574
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3575
  ret i32 %9, !dbg !3576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3577 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3584, metadata !DIExpression()), !dbg !3591
  call void @llvm.dbg.value(metadata i8* %0, metadata !3581, metadata !DIExpression()), !dbg !3591
  call void @llvm.dbg.value(metadata i32 %1, metadata !3582, metadata !DIExpression()), !dbg !3591
  call void @llvm.dbg.value(metadata i8* %2, metadata !3583, metadata !DIExpression()), !dbg !3591
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3592
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3592
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3585, metadata !DIExpression()), !dbg !3593
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3594
  store i8* %0, i8** %7, align 4, !dbg !3594
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3594
  store i32 %1, i32* %8, align 4, !dbg !3594
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3594
  store i32 0, i32* %9, align 4, !dbg !3594
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3595
  %10 = load i32, i32* %9, align 4, !dbg !3596
  %11 = load i32, i32* %8, align 4, !dbg !3598
  %12 = icmp slt i32 %10, %11, !dbg !3599
  br i1 %12, label %13, label %15, !dbg !3600

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3601
  store i8 0, i8* %14, align 1, !dbg !3603
  br label %15, !dbg !3604

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3605
  ret i32 %10, !dbg !3606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3612, metadata !DIExpression()), !dbg !3614
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3613, metadata !DIExpression()), !dbg !3614
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3615
  %4 = load i8*, i8** %3, align 4, !dbg !3615
  %5 = icmp eq i8* %4, null, !dbg !3617
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3618
  br i1 %5, label %12, label %8, !dbg !3619

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3620
  %10 = load i32, i32* %9, align 4, !dbg !3620
  %11 = icmp slt i32 %7, %10, !dbg !3621
  br i1 %11, label %15, label %12, !dbg !3622

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3623
  %14 = add nsw i32 %7, 1, !dbg !3625
  store i32 %14, i32* %13, align 4, !dbg !3625
  br label %25, !dbg !3626

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3627
  %17 = icmp eq i32 %7, %16, !dbg !3629
  br i1 %17, label %18, label %21, !dbg !3630

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3631
  store i32 %19, i32* %6, align 4, !dbg !3631
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3633
  store i8 0, i8* %20, align 1, !dbg !3634
  br label %25, !dbg !3635

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3636
  %23 = add nsw i32 %7, 1, !dbg !3638
  store i32 %23, i32* %6, align 4, !dbg !3638
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3639
  store i8 %22, i8* %24, align 1, !dbg !3640
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3641
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3642 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3652, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.value(metadata i8* %1, metadata !3653, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.value(metadata i8* %2, metadata !3654, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.value(metadata i8* %3, metadata !3655, metadata !DIExpression()), !dbg !3656
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3657
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3658
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3659
  unreachable, !dbg !3660
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3661 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3765
  ret %struct.k_thread* %1, !dbg !3766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3767 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3772, metadata !DIExpression()), !dbg !3773
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3774, !srcloc !3776
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3777
  ret void, !dbg !3778
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3779 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3780, !srcloc !3782
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3783
  ret %struct.k_thread* %1, !dbg !3784
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3785 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3796, metadata !DIExpression()), !dbg !3800
  call void @llvm.dbg.value(metadata i8* %1, metadata !3797, metadata !DIExpression()), !dbg !3800
  %3 = icmp eq i8* %1, null, !dbg !3801
  br i1 %3, label %8, label %4, !dbg !3803

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3804
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3804
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3798, metadata !DIExpression()), !dbg !3800
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3805, !range !3806
  call void @llvm.dbg.value(metadata i32 %7, metadata !3799, metadata !DIExpression()), !dbg !3800
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3807
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3808
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3810 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3814, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i8* %1, metadata !3815, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i8* %1, metadata !3816, metadata !DIExpression()), !dbg !3818
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3819
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3817, metadata !DIExpression()), !dbg !3818
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3820
  %5 = ptrtoint i8* %4 to i32, !dbg !3821
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3821
  %7 = sub i32 %5, %6, !dbg !3821
  %8 = lshr i32 %7, 3, !dbg !3822
  ret i32 %8, !dbg !3823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3824 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3828, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.value(metadata i32 %1, metadata !3829, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.value(metadata i1 %2, metadata !3830, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3833
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3834
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3831, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3832, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3833
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3835
  %6 = bitcast i8* %5 to i16*, !dbg !3835
  %7 = load i16, i16* %6, align 2, !dbg !3835
  %8 = and i16 %7, -2, !dbg !3839
  %9 = zext i1 %2 to i16, !dbg !3839
  %10 = or i16 %8, %9, !dbg !3839
  store i16 %10, i16* %6, align 2, !dbg !3835
  ret void, !dbg !3840
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3841 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3845, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i32 %1, metadata !3846, metadata !DIExpression()), !dbg !3847
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3848
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3850
  br i1 %4, label %7, label %5, !dbg !3851

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3852
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3854
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3855
  br label %7, !dbg !3856

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3857, !range !3859
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3860
  br i1 %9, label %13, label %10, !dbg !3861

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3862
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3864, !range !3859
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3865
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %12, metadata !3846, metadata !DIExpression()), !dbg !3847
  br label %13, !dbg !3867

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3846, metadata !DIExpression()), !dbg !3847
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3868
  ret void, !dbg !3869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3870 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3874, metadata !DIExpression()), !dbg !3876
  call void @llvm.dbg.value(metadata i32 %1, metadata !3875, metadata !DIExpression()), !dbg !3876
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3877
  %4 = add i32 %3, %1, !dbg !3878
  ret i32 %4, !dbg !3879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3880 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3884, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.value(metadata i32 %1, metadata !3885, metadata !DIExpression()), !dbg !3886
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3887
  %4 = and i32 %3, 1, !dbg !3888
  %5 = icmp ne i32 %4, 0, !dbg !3887
  ret i1 %5, !dbg !3889
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3890 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3892, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %1, metadata !3893, metadata !DIExpression()), !dbg !3897
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3898, !range !3899
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3900
  call void @llvm.dbg.value(metadata i32 %4, metadata !3894, metadata !DIExpression()), !dbg !3901
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3902
  ret void, !dbg !3903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3904 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3908, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata i32 %1, metadata !3909, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata i32 %2, metadata !3910, metadata !DIExpression()), !dbg !3913
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3914
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3915
  %6 = add i32 %5, %4, !dbg !3916
  call void @llvm.dbg.value(metadata i32 %6, metadata !3911, metadata !DIExpression()), !dbg !3913
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3917
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3918
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3919
  ret void, !dbg !3920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3921 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3923, metadata !DIExpression()), !dbg !3925
  call void @llvm.dbg.value(metadata i32 %1, metadata !3924, metadata !DIExpression()), !dbg !3925
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3926
  %4 = sub i32 %1, %3, !dbg !3927
  ret i32 %4, !dbg !3928
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3929 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3931, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %1, metadata !3932, metadata !DIExpression()), !dbg !3936
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3937, !range !3899
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3938
  call void @llvm.dbg.value(metadata i32 %4, metadata !3933, metadata !DIExpression()), !dbg !3939
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3940
  ret void, !dbg !3941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3942 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3946, metadata !DIExpression()), !dbg !3948
  call void @llvm.dbg.value(metadata i32 %1, metadata !3947, metadata !DIExpression()), !dbg !3948
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3949
  %4 = lshr i32 %3, 1, !dbg !3950
  ret i32 %4, !dbg !3951
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3952 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3956, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata i32 %1, metadata !3957, metadata !DIExpression()), !dbg !3959
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3960
  %4 = add i32 %1, 1, !dbg !3961
  %5 = sub i32 %4, %3, !dbg !3962
  call void @llvm.dbg.value(metadata i32 %5, metadata !3958, metadata !DIExpression()), !dbg !3959
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3963, !range !3964
  %7 = sub nsw i32 31, %6, !dbg !3965
  ret i32 %7, !dbg !3966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3967 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3971, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i32 %1, metadata !3972, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i32 %2, metadata !3973, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3974, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3980
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3981
  %5 = load i32, i32* %4, align 4, !dbg !3981
  %6 = icmp eq i32 %5, 0, !dbg !3982
  br i1 %6, label %7, label %12, !dbg !3983

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3984
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3986
  %10 = load i32, i32* %9, align 4, !dbg !3987
  %11 = or i32 %10, %8, !dbg !3987
  store i32 %11, i32* %9, align 4, !dbg !3987
  store i32 %1, i32* %4, align 4, !dbg !3988
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3989
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3990
  br label %14, !dbg !3991

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3976, metadata !DIExpression()), !dbg !3992
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3993, !range !3994
  call void @llvm.dbg.value(metadata i32 %13, metadata !3979, metadata !DIExpression()), !dbg !3992
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3995
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3996
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3997
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3998
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4000 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4002, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i32 %1, metadata !4003, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i32 %2, metadata !4004, metadata !DIExpression()), !dbg !4005
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !4006
  ret void, !dbg !4007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4008 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4010, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i32 %1, metadata !4011, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i32 %2, metadata !4012, metadata !DIExpression()), !dbg !4013
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !4014
  ret void, !dbg !4015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4016 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4018, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata i32 %1, metadata !4019, metadata !DIExpression()), !dbg !4020
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4021
  ret i32 %3, !dbg !4022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4023 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4027, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32 %1, metadata !4028, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32 %2, metadata !4029, metadata !DIExpression()), !dbg !4032
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4033
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4030, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4032
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4032
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4034
  call void @llvm.dbg.value(metadata i8* %5, metadata !4031, metadata !DIExpression()), !dbg !4032
  %6 = bitcast i8* %5 to i16*, !dbg !4035
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4038
  %8 = load i16, i16* %7, align 2, !dbg !4038
  %9 = zext i16 %8 to i32, !dbg !4038
  ret i32 %9, !dbg !4039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4040 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4044, metadata !DIExpression()), !dbg !4045
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4046
  ret %struct.chunk_unit_t* %2, !dbg !4047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !4048 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4052, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata i32 %1, metadata !4053, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata i32 %2, metadata !4054, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata i32 %3, metadata !4055, metadata !DIExpression()), !dbg !4058
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4059
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4056, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4057, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4058
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4060
  call void @llvm.dbg.value(metadata i8* %6, metadata !4057, metadata !DIExpression()), !dbg !4058
  %7 = trunc i32 %3 to i16, !dbg !4061
  %8 = bitcast i8* %6 to i16*, !dbg !4064
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4065
  store i16 %7, i16* %9, align 2, !dbg !4066
  ret void, !dbg !4067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !4068 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4072, metadata !DIExpression()), !dbg !4073
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4074
  ret i32 %2, !dbg !4075
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4076 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4080, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata i32 %1, metadata !4081, metadata !DIExpression()), !dbg !4082
  %3 = add i32 %1, 4, !dbg !4083
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4084
  ret i32 %4, !dbg !4085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !4086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4090, metadata !DIExpression()), !dbg !4091
  %2 = add i32 %0, 7, !dbg !4092
  %3 = lshr i32 %2, 3, !dbg !4093
  ret i32 %3, !dbg !4094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4095 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4099, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.value(metadata i32 %1, metadata !4100, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.value(metadata i32 %2, metadata !4101, metadata !DIExpression()), !dbg !4102
  %4 = shl i32 %2, 1, !dbg !4103
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4104
  ret void, !dbg !4105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4106 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4108, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i32 %1, metadata !4109, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i32 %2, metadata !4110, metadata !DIExpression()), !dbg !4111
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4112
  ret void, !dbg !4113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4114 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4116, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.value(metadata i32 %1, metadata !4117, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.value(metadata i32 %2, metadata !4118, metadata !DIExpression()), !dbg !4124
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4125
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4119, metadata !DIExpression()), !dbg !4124
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4126
  %6 = icmp eq i32 %5, %1, !dbg !4127
  br i1 %6, label %7, label %14, !dbg !4128

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4129
  %9 = xor i32 %8, -1, !dbg !4131
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4132
  %11 = load i32, i32* %10, align 4, !dbg !4133
  %12 = and i32 %11, %9, !dbg !4133
  store i32 %12, i32* %10, align 4, !dbg !4133
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4134
  store i32 0, i32* %13, align 4, !dbg !4135
  br label %17, !dbg !4136

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4137
  call void @llvm.dbg.value(metadata i32 %15, metadata !4120, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata i32 %5, metadata !4123, metadata !DIExpression()), !dbg !4138
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4139
  store i32 %5, i32* %16, align 4, !dbg !4140
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4141
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4142
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4144 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4146, metadata !DIExpression()), !dbg !4148
  call void @llvm.dbg.value(metadata i32 %1, metadata !4147, metadata !DIExpression()), !dbg !4148
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4149
  ret i32 %3, !dbg !4150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4151 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4155, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i8* %1, metadata !4156, metadata !DIExpression()), !dbg !4162
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4163
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4163
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4157, metadata !DIExpression()), !dbg !4162
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %5, metadata !4158, metadata !DIExpression()), !dbg !4162
  %6 = ptrtoint i8* %1 to i32, !dbg !4165
  call void @llvm.dbg.value(metadata i32 %6, metadata !4159, metadata !DIExpression()), !dbg !4162
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4166
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4166
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4167
  call void @llvm.dbg.value(metadata i32 %9, metadata !4160, metadata !DIExpression()), !dbg !4162
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4168
  %11 = shl i32 %10, 3, !dbg !4169
  call void @llvm.dbg.value(metadata i32 %11, metadata !4161, metadata !DIExpression()), !dbg !4162
  %12 = sub i32 %9, %6, !dbg !4170
  %13 = add i32 %12, %11, !dbg !4171
  ret i32 %13, !dbg !4172
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4173 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4177, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.value(metadata i32 %1, metadata !4178, metadata !DIExpression()), !dbg !4183
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4184
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4184
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4179, metadata !DIExpression()), !dbg !4183
  %5 = icmp eq i32 %1, 0, !dbg !4185
  br i1 %5, label %19, label %6, !dbg !4187

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4188
  br i1 %7, label %19, label %8, !dbg !4189

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4190, !range !3806
  call void @llvm.dbg.value(metadata i32 %9, metadata !4181, metadata !DIExpression()), !dbg !4183
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4191
  call void @llvm.dbg.value(metadata i32 %10, metadata !4182, metadata !DIExpression()), !dbg !4183
  %11 = icmp eq i32 %10, 0, !dbg !4192
  br i1 %11, label %19, label %12, !dbg !4194

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4195
  %14 = icmp ugt i32 %13, %9, !dbg !4197
  br i1 %14, label %15, label %17, !dbg !4198

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4199
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4201
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4202
  br label %17, !dbg !4203

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4204
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4205
  call void @llvm.dbg.value(metadata i8* %18, metadata !4180, metadata !DIExpression()), !dbg !4183
  br label %19, !dbg !4206

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4183
  ret i8* %20, !dbg !4207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4208 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4212, metadata !DIExpression()), !dbg !4214
  call void @llvm.dbg.value(metadata i32 %1, metadata !4213, metadata !DIExpression()), !dbg !4214
  %3 = lshr i32 %1, 3, !dbg !4215
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4216
  %5 = load i32, i32* %4, align 4, !dbg !4216
  %6 = icmp uge i32 %3, %5, !dbg !4217
  ret i1 %6, !dbg !4218
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4219 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4223, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i32 %1, metadata !4224, metadata !DIExpression()), !dbg !4238
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4239
  call void @llvm.dbg.value(metadata i32 %3, metadata !4225, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4226, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4238
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4240
  %5 = load i32, i32* %4, align 4, !dbg !4240
  %6 = icmp eq i32 %5, 0, !dbg !4241
  br i1 %6, label %19, label %7, !dbg !4242

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4243
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4244
  call void @llvm.dbg.value(metadata i32 %9, metadata !4230, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %8, metadata !4231, metadata !DIExpression()), !dbg !4245
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4246
  %11 = icmp ult i32 %10, %1, !dbg !4248
  br i1 %11, label %13, label %12, !dbg !4249

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4250
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4252
  store i32 %14, i32* %4, align 4, !dbg !4253
  %15 = add nsw i32 %9, -1, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %15, metadata !4230, metadata !DIExpression()), !dbg !4244
  %16 = icmp eq i32 %15, 0, !dbg !4254
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4255
  br i1 %18, label %19, label %7, !dbg !4255, !llvm.loop !4256

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4259
  %21 = load i32, i32* %20, align 4, !dbg !4259
  %22 = add nsw i32 %3, 1, !dbg !4260
  %23 = shl nsw i32 -1, %22, !dbg !4260
  %24 = and i32 %21, %23, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %24, metadata !4233, metadata !DIExpression()), !dbg !4238
  %25 = icmp eq i32 %24, 0, !dbg !4262
  br i1 %25, label %30, label %26, !dbg !4263

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4264, !range !3964
  call void @llvm.dbg.value(metadata i32 %27, metadata !4234, metadata !DIExpression()), !dbg !4265
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4266
  %29 = load i32, i32* %28, align 4, !dbg !4266
  call void @llvm.dbg.value(metadata i32 %29, metadata !4237, metadata !DIExpression()), !dbg !4265
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4267
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4238
  ret i32 %31, !dbg !4268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4269 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4271, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.value(metadata i32 %1, metadata !4272, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.value(metadata i32 %2, metadata !4273, metadata !DIExpression()), !dbg !4277
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4278
  call void @llvm.dbg.value(metadata i32 %4, metadata !4274, metadata !DIExpression()), !dbg !4277
  %5 = sub i32 %2, %1, !dbg !4279
  call void @llvm.dbg.value(metadata i32 %5, metadata !4275, metadata !DIExpression()), !dbg !4277
  %6 = sub i32 %4, %5, !dbg !4280
  call void @llvm.dbg.value(metadata i32 %6, metadata !4276, metadata !DIExpression()), !dbg !4277
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4281
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4282
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4283
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4284
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4285
  ret void, !dbg !4286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4287 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4291, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.value(metadata i32 %1, metadata !4292, metadata !DIExpression()), !dbg !4295
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4296
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4293, metadata !DIExpression()), !dbg !4295
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4297
  call void @llvm.dbg.value(metadata i8* %4, metadata !4294, metadata !DIExpression()), !dbg !4295
  ret i8* %4, !dbg !4298
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4299 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4303, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i32 %1, metadata !4304, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i32 %2, metadata !4305, metadata !DIExpression()), !dbg !4315
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4316
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4316
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4306, metadata !DIExpression()), !dbg !4315
  %6 = sub i32 0, %1, !dbg !4317
  %7 = and i32 %6, %1, !dbg !4318
  call void @llvm.dbg.value(metadata i32 %7, metadata !4308, metadata !DIExpression()), !dbg !4315
  %8 = icmp eq i32 %7, %1, !dbg !4319
  br i1 %8, label %13, label %9, !dbg !4321

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4322
  call void @llvm.dbg.value(metadata i32 %10, metadata !4304, metadata !DIExpression()), !dbg !4315
  %11 = icmp ult i32 %7, 4, !dbg !4324
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4324
  br label %17, !dbg !4324

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4325
  br i1 %14, label %15, label %17, !dbg !4328

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4329
  br label %57, !dbg !4331

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4315
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4332
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4304, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i32 %19, metadata !4307, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i32 %18, metadata !4308, metadata !DIExpression()), !dbg !4315
  %21 = icmp eq i32 %2, 0, !dbg !4333
  br i1 %21, label %57, label %22, !dbg !4335

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4336
  br i1 %23, label %57, label %24, !dbg !4337

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4338
  %26 = add i32 %25, %20, !dbg !4339
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4340, !range !3806
  call void @llvm.dbg.value(metadata i32 %27, metadata !4309, metadata !DIExpression()), !dbg !4315
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4341
  call void @llvm.dbg.value(metadata i32 %28, metadata !4310, metadata !DIExpression()), !dbg !4315
  %29 = icmp eq i32 %28, 0, !dbg !4342
  br i1 %29, label %57, label %30, !dbg !4344

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4345
  call void @llvm.dbg.value(metadata i8* %31, metadata !4311, metadata !DIExpression()), !dbg !4315
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4346
  %33 = ptrtoint i8* %32 to i32, !dbg !4346
  %34 = add i32 %20, -1, !dbg !4346
  %35 = add i32 %34, %33, !dbg !4346
  %36 = sub i32 0, %20, !dbg !4346
  %37 = and i32 %35, %36, !dbg !4346
  %38 = inttoptr i32 %37 to i8*, !dbg !4347
  %39 = sub i32 0, %18, !dbg !4348
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4348
  call void @llvm.dbg.value(metadata i8* %40, metadata !4311, metadata !DIExpression()), !dbg !4315
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4349
  %42 = ptrtoint i8* %41 to i32, !dbg !4349
  %43 = add i32 %42, 7, !dbg !4349
  %44 = and i32 %43, -8, !dbg !4349
  call void @llvm.dbg.value(metadata i32 %44, metadata !4312, metadata !DIExpression()), !dbg !4315
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4350
  call void @llvm.dbg.value(metadata i32 %45, metadata !4313, metadata !DIExpression()), !dbg !4315
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4351
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4352
  %48 = sub i32 %44, %47, !dbg !4352
  %49 = ashr exact i32 %48, 3, !dbg !4352
  call void @llvm.dbg.value(metadata i32 %49, metadata !4314, metadata !DIExpression()), !dbg !4315
  %50 = icmp ugt i32 %45, %28, !dbg !4353
  br i1 %50, label %51, label %52, !dbg !4355

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4356
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4358
  br label %52, !dbg !4359

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4360
  %54 = icmp ugt i32 %53, %49, !dbg !4362
  br i1 %54, label %55, label %56, !dbg !4363

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4364
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4366
  br label %56, !dbg !4367

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4368
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4315
  ret i8* %58, !dbg !4369
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4370 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4374, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i8* %1, metadata !4375, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 %2, metadata !4376, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 %3, metadata !4377, metadata !DIExpression()), !dbg !4393
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4394
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4394
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4378, metadata !DIExpression()), !dbg !4393
  %7 = icmp eq i8* %1, null, !dbg !4395
  br i1 %7, label %8, label %10, !dbg !4397

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4398
  br label %59, !dbg !4400

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4401
  br i1 %11, label %12, label %13, !dbg !4403

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4404
  br label %59, !dbg !4406

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4407
  br i1 %14, label %59, label %15, !dbg !4409

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4410, !range !3806
  call void @llvm.dbg.value(metadata i32 %16, metadata !4379, metadata !DIExpression()), !dbg !4393
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4411
  call void @llvm.dbg.value(metadata i32 %17, metadata !4380, metadata !DIExpression()), !dbg !4393
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4412
  %19 = ptrtoint i8* %1 to i32, !dbg !4413
  %20 = ptrtoint i8* %18 to i32, !dbg !4413
  %21 = sub i32 %19, %20, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %21, metadata !4381, metadata !DIExpression()), !dbg !4393
  %22 = add i32 %21, %3, !dbg !4414
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4415
  call void @llvm.dbg.value(metadata i32 %23, metadata !4382, metadata !DIExpression()), !dbg !4393
  %24 = icmp eq i32 %2, 0, !dbg !4416
  br i1 %24, label %29, label %25, !dbg !4417

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4418
  %27 = and i32 %26, %19, !dbg !4419
  %28 = icmp eq i32 %27, 0, !dbg !4419
  br i1 %28, label %29, label %49, !dbg !4420

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4421
  %31 = icmp eq i32 %23, %30, !dbg !4422
  br i1 %31, label %59, label %32, !dbg !4423

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4424
  br i1 %33, label %34, label %36, !dbg !4425

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4426
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4428
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4429
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4430
  br label %59, !dbg !4431

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4432
  br i1 %37, label %49, label %38, !dbg !4433

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4434
  %40 = add i32 %39, %30, !dbg !4435
  %41 = icmp ult i32 %40, %23, !dbg !4436
  br i1 %41, label %49, label %42, !dbg !4437

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4438
  call void @llvm.dbg.value(metadata i32 %43, metadata !4383, metadata !DIExpression()), !dbg !4439
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4440
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4441
  %45 = icmp ult i32 %43, %44, !dbg !4443
  br i1 %45, label %46, label %48, !dbg !4444

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4445
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4447
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4448
  br label %48, !dbg !4449

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4450
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4451
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4452
  call void @llvm.dbg.value(metadata i8* %50, metadata !4389, metadata !DIExpression()), !dbg !4393
  %51 = icmp eq i8* %50, null, !dbg !4453
  br i1 %51, label %59, label %52, !dbg !4454

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4455, !range !3899
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4456
  %55 = sub i32 %54, %21, !dbg !4457
  call void @llvm.dbg.value(metadata i32 %55, metadata !4390, metadata !DIExpression()), !dbg !4458
  %56 = icmp ult i32 %55, %3, !dbg !4459
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4459
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #25, !dbg !4460
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4461
  br label %59, !dbg !4462

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4393
  ret i8* %60, !dbg !4463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4464 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4468, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.value(metadata i32 %1, metadata !4469, metadata !DIExpression()), !dbg !4470
  %3 = shl i32 %1, 3, !dbg !4471
  %4 = add i32 %3, -4, !dbg !4472
  ret i32 %4, !dbg !4473
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4474 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4478, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.value(metadata i8* %1, metadata !4479, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.value(metadata i32 %2, metadata !4480, metadata !DIExpression()), !dbg !4489
  %4 = add i32 %2, -4, !dbg !4490
  call void @llvm.dbg.value(metadata i32 %4, metadata !4480, metadata !DIExpression()), !dbg !4489
  %5 = ptrtoint i8* %1 to i32, !dbg !4491
  %6 = add i32 %5, 7, !dbg !4491
  %7 = and i32 %6, -8, !dbg !4491
  call void @llvm.dbg.value(metadata i32 %7, metadata !4481, metadata !DIExpression()), !dbg !4489
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4492
  %9 = ptrtoint i8* %8 to i32, !dbg !4492
  %10 = and i32 %9, -8, !dbg !4492
  call void @llvm.dbg.value(metadata i32 %10, metadata !4482, metadata !DIExpression()), !dbg !4489
  %11 = sub i32 %10, %7, !dbg !4493
  %12 = lshr exact i32 %11, 3, !dbg !4494
  call void @llvm.dbg.value(metadata i32 %12, metadata !4483, metadata !DIExpression()), !dbg !4489
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4495
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4484, metadata !DIExpression()), !dbg !4489
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4496
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4497
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4498
  store i32 %12, i32* %15, align 8, !dbg !4499
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4500
  store i32 0, i32* %16, align 4, !dbg !4501
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4502
  call void @llvm.dbg.value(metadata i32 %17, metadata !4485, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4489
  %18 = shl i32 %17, 2, !dbg !4503
  %19 = add i32 %18, 20, !dbg !4504
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4505
  call void @llvm.dbg.value(metadata i32 %20, metadata !4486, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.value(metadata i32 0, metadata !4487, metadata !DIExpression()), !dbg !4506
  %21 = icmp slt i32 %17, 0, !dbg !4507
  br i1 %21, label %22, label %24, !dbg !4509

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4510
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4511
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4512
  %23 = sub i32 %12, %20, !dbg !4513
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4514
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4515
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4516
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4517
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4518
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4519
  ret void, !dbg !4520

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4487, metadata !DIExpression()), !dbg !4506
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4521
  store i32 0, i32* %26, align 4, !dbg !4523
  %27 = add nuw i32 %25, 1, !dbg !4524
  call void @llvm.dbg.value(metadata i32 %27, metadata !4487, metadata !DIExpression()), !dbg !4506
  %28 = icmp eq i32 %25, %17, !dbg !4507
  br i1 %28, label %22, label %24, !dbg !4509, !llvm.loop !4525
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4527 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4540, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4537, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8* %1, metadata !4538, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8* %2, metadata !4539, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %4, metadata !4541, metadata !DIExpression()), !dbg !4668
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4669
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4669
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4542, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 0, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i1 undef, metadata !4548, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4668
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4671

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4671

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4672
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4540, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8* %30, metadata !4539, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %29, metadata !4546, metadata !DIExpression()), !dbg !4668
  %31 = load i8, i8* %30, align 1, !dbg !4673
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4671

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4673
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4674
  call void @llvm.dbg.value(metadata i8* %34, metadata !4539, metadata !DIExpression()), !dbg !4668
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4674
  call void @llvm.dbg.value(metadata i32 %35, metadata !4550, metadata !DIExpression()), !dbg !4675
  %36 = icmp slt i32 %35, 0, !dbg !4676
  %37 = add i32 %29, 1, !dbg !4674
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %36, label %365, label %28, !llvm.loop !4678

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4680
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4555, metadata !DIExpression()), !dbg !4681
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4681
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4600, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4603, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* %30, metadata !4606, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 -1, metadata !4607, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 -1, metadata !4608, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* null, metadata !4609, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* %14, metadata !4610, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8 0, metadata !4611, metadata !DIExpression()), !dbg !4682
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4683
  call void @llvm.dbg.value(metadata i8* %39, metadata !4539, metadata !DIExpression()), !dbg !4668
  %40 = load i24, i24* %15, align 8, !dbg !4684
  %41 = and i24 %40, 256, !dbg !4684
  %42 = icmp eq i24 %41, 0, !dbg !4684
  br i1 %42, label %51, label %43, !dbg !4686

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4687
  call void @llvm.dbg.value(metadata i8* %44, metadata !4540, metadata !DIExpression()), !dbg !4668
  %45 = bitcast i8* %27 to i32*, !dbg !4687
  %46 = load i32, i32* %45, align 4, !dbg !4687
  call void @llvm.dbg.value(metadata i32 %46, metadata !4607, metadata !DIExpression()), !dbg !4682
  %47 = icmp slt i32 %46, 0, !dbg !4689
  br i1 %47, label %48, label %56, !dbg !4691

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4692
  store i24 %49, i24* %15, align 8, !dbg !4692
  %50 = sub nsw i32 0, %46, !dbg !4694
  call void @llvm.dbg.value(metadata i32 %50, metadata !4607, metadata !DIExpression()), !dbg !4682
  br label %56, !dbg !4695

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4696
  %53 = icmp eq i24 %52, 0, !dbg !4696
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4698
  br label %56, !dbg !4698

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4699
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4682
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4540, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %58, metadata !4607, metadata !DIExpression()), !dbg !4682
  %60 = and i24 %57, 1024, !dbg !4699
  %61 = icmp eq i24 %60, 0, !dbg !4699
  br i1 %61, label %69, label %62, !dbg !4700

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4701
  call void @llvm.dbg.value(metadata i8* %63, metadata !4540, metadata !DIExpression()), !dbg !4668
  %64 = bitcast i8* %59 to i32*, !dbg !4701
  %65 = load i32, i32* %64, align 4, !dbg !4701
  call void @llvm.dbg.value(metadata i32 %65, metadata !4612, metadata !DIExpression()), !dbg !4702
  %66 = icmp slt i32 %65, 0, !dbg !4703
  br i1 %66, label %67, label %74, !dbg !4705

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4706
  store i24 %68, i24* %15, align 8, !dbg !4706
  br label %74, !dbg !4708

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4709
  %71 = icmp eq i24 %70, 0, !dbg !4709
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4711
  br label %74, !dbg !4711

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4712
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4682
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4682
  call void @llvm.dbg.value(metadata i8* %77, metadata !4540, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %76, metadata !4608, metadata !DIExpression()), !dbg !4682
  store i32 0, i32* %16, align 4, !dbg !4713
  store i32 0, i32* %17, align 8, !dbg !4714
  %78 = lshr i24 %75, 16, !dbg !4712
  call void @llvm.dbg.value(metadata i24 %78, metadata !4615, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4682
  %79 = lshr i24 %75, 11, !dbg !4715
  %80 = and i24 %79, 15, !dbg !4715
  %81 = zext i24 %80 to i32, !dbg !4715
  call void @llvm.dbg.value(metadata i32 %81, metadata !4616, metadata !DIExpression()), !dbg !4682
  %82 = trunc i24 %78 to i3, !dbg !4716
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4716

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4717

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4720
  call void @llvm.dbg.value(metadata i8* %85, metadata !4540, metadata !DIExpression()), !dbg !4668
  %86 = bitcast i8* %77 to i32*, !dbg !4720
  %87 = load i32, i32* %86, align 4, !dbg !4720
  %88 = sext i32 %87 to i64, !dbg !4720
  store i64 %88, i64* %20, align 8, !dbg !4722
  br label %115, !dbg !4723

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4724
  call void @llvm.dbg.value(metadata i8* %90, metadata !4540, metadata !DIExpression()), !dbg !4668
  %91 = bitcast i8* %77 to i32*, !dbg !4724
  %92 = load i32, i32* %91, align 4, !dbg !4724
  %93 = sext i32 %92 to i64, !dbg !4724
  store i64 %93, i64* %20, align 8, !dbg !4727
  br label %115, !dbg !4728

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4729
  %96 = add i32 %95, 7, !dbg !4729
  %97 = and i32 %96, -8, !dbg !4729
  %98 = inttoptr i32 %97 to i8*, !dbg !4729
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4729
  call void @llvm.dbg.value(metadata i8* %99, metadata !4540, metadata !DIExpression()), !dbg !4668
  %100 = inttoptr i32 %97 to i64*, !dbg !4729
  %101 = load i64, i64* %100, align 8, !dbg !4729
  store i64 %101, i64* %20, align 8, !dbg !4730
  br label %115, !dbg !4731

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4732
  %104 = add i32 %103, 7, !dbg !4732
  %105 = and i32 %104, -8, !dbg !4732
  %106 = inttoptr i32 %105 to i8*, !dbg !4732
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4732
  call void @llvm.dbg.value(metadata i8* %107, metadata !4540, metadata !DIExpression()), !dbg !4668
  %108 = inttoptr i32 %105 to i64*, !dbg !4732
  %109 = load i64, i64* %108, align 8, !dbg !4732
  store i64 %109, i64* %20, align 8, !dbg !4733
  br label %115, !dbg !4734

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4735
  call void @llvm.dbg.value(metadata i8* %111, metadata !4540, metadata !DIExpression()), !dbg !4668
  %112 = bitcast i8* %77 to i32*, !dbg !4735
  %113 = load i32, i32* %112, align 4, !dbg !4735
  %114 = sext i32 %113 to i64, !dbg !4736
  store i64 %114, i64* %20, align 8, !dbg !4737
  br label %115, !dbg !4738

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4739
  call void @llvm.dbg.value(metadata i8* %117, metadata !4540, metadata !DIExpression()), !dbg !4668
  %118 = trunc i24 %79 to i4, !dbg !4740
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4740

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4741
  %121 = ashr exact i64 %120, 56, !dbg !4741
  store i64 %121, i64* %20, align 8, !dbg !4744
  br label %177, !dbg !4745

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4746
  %124 = ashr exact i64 %123, 48, !dbg !4746
  store i64 %124, i64* %20, align 8, !dbg !4749
  br label %177, !dbg !4750

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4751

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4754
  call void @llvm.dbg.value(metadata i8* %127, metadata !4540, metadata !DIExpression()), !dbg !4668
  %128 = bitcast i8* %77 to i32*, !dbg !4754
  %129 = load i32, i32* %128, align 4, !dbg !4754
  %130 = zext i32 %129 to i64, !dbg !4754
  store i64 %130, i64* %20, align 8, !dbg !4756
  br label %157, !dbg !4757

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4758
  call void @llvm.dbg.value(metadata i8* %132, metadata !4540, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8* %132, metadata !4540, metadata !DIExpression()), !dbg !4668
  %133 = bitcast i8* %77 to i32*, !dbg !4758
  %134 = load i32, i32* %133, align 4, !dbg !4758
  %135 = zext i32 %134 to i64, !dbg !4758
  store i64 %135, i64* %20, align 8, !dbg !4758
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4760
  %138 = add i32 %137, 7, !dbg !4760
  %139 = and i32 %138, -8, !dbg !4760
  %140 = inttoptr i32 %139 to i8*, !dbg !4760
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4760
  call void @llvm.dbg.value(metadata i8* %141, metadata !4540, metadata !DIExpression()), !dbg !4668
  %142 = inttoptr i32 %139 to i64*, !dbg !4760
  %143 = load i64, i64* %142, align 8, !dbg !4760
  store i64 %143, i64* %20, align 8, !dbg !4761
  br label %157, !dbg !4762

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4763
  %146 = add i32 %145, 7, !dbg !4763
  %147 = and i32 %146, -8, !dbg !4763
  %148 = inttoptr i32 %147 to i8*, !dbg !4763
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4763
  call void @llvm.dbg.value(metadata i8* %149, metadata !4540, metadata !DIExpression()), !dbg !4668
  %150 = inttoptr i32 %147 to i64*, !dbg !4763
  %151 = load i64, i64* %150, align 8, !dbg !4763
  store i64 %151, i64* %20, align 8, !dbg !4764
  br label %157, !dbg !4765

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4766
  call void @llvm.dbg.value(metadata i8* %153, metadata !4540, metadata !DIExpression()), !dbg !4668
  %154 = bitcast i8* %77 to i32*, !dbg !4766
  %155 = load i32, i32* %154, align 4, !dbg !4766
  %156 = zext i32 %155 to i64, !dbg !4767
  store i64 %156, i64* %20, align 8, !dbg !4768
  br label %157, !dbg !4769

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4770
  call void @llvm.dbg.value(metadata i8* %159, metadata !4540, metadata !DIExpression()), !dbg !4668
  %160 = trunc i24 %79 to i4, !dbg !4771
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4771

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4772
  store i64 %162, i64* %20, align 8, !dbg !4775
  br label %177, !dbg !4776

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4777
  store i64 %164, i64* %20, align 8, !dbg !4780
  br label %177, !dbg !4781

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4782
  %167 = add i32 %166, 7, !dbg !4782
  %168 = and i32 %167, -8, !dbg !4782
  %169 = inttoptr i32 %168 to i8*, !dbg !4782
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4782
  call void @llvm.dbg.value(metadata i8* %170, metadata !4540, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8* %170, metadata !4540, metadata !DIExpression()), !dbg !4668
  %171 = inttoptr i32 %168 to double*, !dbg !4782
  %172 = load double, double* %171, align 8, !dbg !4782
  store double %172, double* %19, align 8, !dbg !4782
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4786
  call void @llvm.dbg.value(metadata i8* %174, metadata !4540, metadata !DIExpression()), !dbg !4668
  %175 = bitcast i8* %77 to i8**, !dbg !4786
  %176 = load i8*, i8** %175, align 4, !dbg !4786
  store i8* %176, i8** %18, align 8, !dbg !4789
  br label %177, !dbg !4790

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4682
  call void @llvm.dbg.value(metadata i8* %178, metadata !4540, metadata !DIExpression()), !dbg !4668
  %179 = and i24 %75, 3, !dbg !4791
  %180 = icmp eq i24 %179, 0, !dbg !4791
  br i1 %180, label %185, label %181, !dbg !4791

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4792
  call void @llvm.dbg.value(metadata i32 %182, metadata !4617, metadata !DIExpression()), !dbg !4793
  %183 = icmp slt i32 %182, 0, !dbg !4794
  %184 = add i32 %182, %29, !dbg !4792
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4796
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4797

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %188, metadata !4621, metadata !DIExpression()), !dbg !4799
  %189 = icmp slt i32 %188, 0, !dbg !4800
  %190 = add i32 %29, 1, !dbg !4798
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4802
  call void @llvm.dbg.value(metadata i8* %192, metadata !4609, metadata !DIExpression()), !dbg !4682
  %193 = icmp sgt i32 %76, -1, !dbg !4803
  br i1 %193, label %194, label %196, !dbg !4805

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4806
  call void @llvm.dbg.value(metadata i32 %195, metadata !4624, metadata !DIExpression()), !dbg !4808
  br label %241, !dbg !4809

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %197, metadata !4624, metadata !DIExpression()), !dbg !4808
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4609, metadata !DIExpression()), !dbg !4682
  %199 = load i64, i64* %20, align 8, !dbg !4812
  %200 = trunc i64 %199 to i8, !dbg !4813
  store i8 %200, i8* %10, align 1, !dbg !4814
  call void @llvm.dbg.value(metadata i8* %23, metadata !4610, metadata !DIExpression()), !dbg !4682
  br label %245, !dbg !4815

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4816
  %203 = icmp eq i24 %202, 0, !dbg !4816
  %204 = trunc i24 %75 to i8, !dbg !4818
  %205 = shl i8 %204, 1, !dbg !4818
  %206 = and i8 %205, 32, !dbg !4818
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4818
  call void @llvm.dbg.value(metadata i8 %207, metadata !4611, metadata !DIExpression()), !dbg !4682
  %208 = load i64, i64* %20, align 8, !dbg !4819
  call void @llvm.dbg.value(metadata i64 %208, metadata !4547, metadata !DIExpression()), !dbg !4668
  %209 = icmp slt i64 %208, 0, !dbg !4820
  br i1 %209, label %210, label %212, !dbg !4822

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4611, metadata !DIExpression()), !dbg !4682
  %211 = sub nsw i64 0, %208, !dbg !4823
  store i64 %211, i64* %20, align 8, !dbg !4825
  br label %212, !dbg !4826

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4682
  call void @llvm.dbg.value(metadata i8 %213, metadata !4611, metadata !DIExpression()), !dbg !4682
  %214 = load i64, i64* %20, align 8, !dbg !4827
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4828
  call void @llvm.dbg.value(metadata i8* %215, metadata !4609, metadata !DIExpression()), !dbg !4682
  br label %216, !dbg !4829

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4830
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4831
  call void @llvm.dbg.value(metadata i8* %218, metadata !4609, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8 %217, metadata !4611, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.label(metadata !4667), !dbg !4832
  %219 = icmp sgt i32 %76, -1, !dbg !4833
  br i1 %219, label %222, label %220, !dbg !4834

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4835
  br label %245, !dbg !4834

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4837
  %224 = sub i32 %22, %223, !dbg !4837
  call void @llvm.dbg.value(metadata i32 %224, metadata !4626, metadata !DIExpression()), !dbg !4838
  %225 = load i24, i24* %15, align 8, !dbg !4839
  %226 = and i24 %225, -65, !dbg !4839
  store i24 %226, i24* %15, align 8, !dbg !4839
  %227 = icmp ugt i32 %76, %224, !dbg !4840
  br i1 %227, label %228, label %245, !dbg !4842

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4843
  store i32 %229, i32* %16, align 4, !dbg !4845
  br label %245, !dbg !4846

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4847
  %232 = icmp eq i8* %231, null, !dbg !4849
  br i1 %232, label %245, label %233, !dbg !4850

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4851
  %235 = zext i32 %234 to i64, !dbg !4851
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4853
  call void @llvm.dbg.value(metadata i8* %236, metadata !4609, metadata !DIExpression()), !dbg !4682
  %237 = load i24, i24* %15, align 8, !dbg !4854
  %238 = or i24 %237, 1048576, !dbg !4854
  store i24 %238, i24* %15, align 8, !dbg !4854
  store i8 120, i8* %21, align 1, !dbg !4855
  br label %216, !dbg !4856

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4857
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4860
  br label %363, !dbg !4861

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4862
  call void @llvm.dbg.value(metadata i32 %242, metadata !4624, metadata !DIExpression()), !dbg !4808
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4863
  call void @llvm.dbg.value(metadata i32 -1, metadata !4608, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %29, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8* %192, metadata !4609, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* %243, metadata !4610, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8 0, metadata !4611, metadata !DIExpression()), !dbg !4682
  %244 = icmp eq i8* %192, null, !dbg !4864
  br i1 %244, label %363, label %245, !dbg !4866, !llvm.loop !4678

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4835
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4682
  call void @llvm.dbg.value(metadata i32 0, metadata !4630, metadata !DIExpression()), !dbg !4682
  %250 = zext i8 %249 to i32, !dbg !4867
  %251 = icmp eq i8 %249, 0, !dbg !4869
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  call void @llvm.dbg.value(metadata i32 undef, metadata !4629, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  call void @llvm.dbg.value(metadata i32 undef, metadata !4629, metadata !DIExpression()), !dbg !4682
  %252 = icmp sgt i32 %58, 0, !dbg !4870
  br i1 %252, label %253, label %302, !dbg !4871

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4835
  %255 = icmp eq i24 %254, 0, !dbg !4835
  %256 = ptrtoint i8* %248 to i32, !dbg !4872
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  %257 = ptrtoint i8* %247 to i32, !dbg !4872
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  %258 = xor i1 %251, true, !dbg !4873
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  %259 = sext i1 %258 to i32, !dbg !4873
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  %260 = lshr i24 %246, 19, !dbg !4874
  %261 = and i24 %260, 1, !dbg !4874
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4874
  %263 = zext i24 %262 to i32, !dbg !4874
  %264 = add i32 %257, %259, !dbg !4874
  %265 = add i32 %256, %263, !dbg !4874
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  %266 = and i24 %246, 4194304, !dbg !4875
  %267 = icmp eq i24 %266, 0, !dbg !4875
  %268 = load i32, i32* %16, align 4, !dbg !4877
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  call void @llvm.dbg.value(metadata i32 undef, metadata !4629, metadata !DIExpression()), !dbg !4682
  %269 = load i32, i32* %17, align 8, !dbg !4878
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4878
  call void @llvm.dbg.value(metadata i32 undef, metadata !4629, metadata !DIExpression()), !dbg !4682
  %271 = add i32 %264, %58, !dbg !4878
  %272 = add i32 %265, %268, !dbg !4878
  %273 = add i32 %272, %270, !dbg !4879
  %274 = sub i32 %271, %273, !dbg !4879
  call void @llvm.dbg.value(metadata i32 %274, metadata !4607, metadata !DIExpression()), !dbg !4682
  %275 = and i24 %246, 4, !dbg !4880
  %276 = icmp eq i24 %275, 0, !dbg !4880
  br i1 %276, label %277, label %302, !dbg !4881

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4631, metadata !DIExpression()), !dbg !4882
  %278 = and i24 %246, 64, !dbg !4883
  %279 = icmp eq i24 %278, 0, !dbg !4883
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4884
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4884
  %282 = select i1 %279, i32 32, i32 48, !dbg !4884
  br i1 %280, label %287, label %283, !dbg !4884

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4885
  call void @llvm.dbg.value(metadata i32 %284, metadata !4636, metadata !DIExpression()), !dbg !4886
  %285 = icmp slt i32 %284, 0, !dbg !4887
  %286 = add i32 %29, 1, !dbg !4885
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4682
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %290, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8 undef, metadata !4631, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.value(metadata i8 %288, metadata !4611, metadata !DIExpression()), !dbg !4682
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4889
  %292 = add i32 %291, -1, !dbg !4889
  br label %293, !dbg !4889

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4890
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %295, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %294, metadata !4607, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %294, metadata !4607, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4682
  %296 = icmp sgt i32 %294, 0, !dbg !4891
  br i1 %296, label %297, label %302, !dbg !4889

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4892
  call void @llvm.dbg.value(metadata i32 %298, metadata !4607, metadata !DIExpression()), !dbg !4682
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4893
  call void @llvm.dbg.value(metadata i32 %299, metadata !4642, metadata !DIExpression()), !dbg !4894
  %300 = icmp slt i32 %299, 0, !dbg !4895
  %301 = add i32 %295, 1, !dbg !4893
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %300, label %361, label %293, !llvm.loop !4897

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4682
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4682
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %305, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %304, metadata !4607, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8 %303, metadata !4611, metadata !DIExpression()), !dbg !4682
  %306 = icmp eq i8 %303, 0, !dbg !4899
  br i1 %306, label %312, label %307, !dbg !4900

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4901
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %309, metadata !4645, metadata !DIExpression()), !dbg !4903
  %310 = icmp slt i32 %309, 0, !dbg !4904
  %311 = add i32 %305, 1, !dbg !4902
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %313, metadata !4546, metadata !DIExpression()), !dbg !4668
  %314 = lshr i24 %246, 20, !dbg !4906
  %315 = lshr i24 %246, 19, !dbg !4907
  %316 = or i24 %314, %315, !dbg !4908
  %317 = and i24 %316, 1, !dbg !4908
  %318 = icmp eq i24 %317, 0, !dbg !4908
  br i1 %318, label %323, label %319, !dbg !4909

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4910
  call void @llvm.dbg.value(metadata i32 %320, metadata !4649, metadata !DIExpression()), !dbg !4911
  %321 = icmp slt i32 %320, 0, !dbg !4912
  %322 = add i32 %313, 1, !dbg !4910
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %324, metadata !4546, metadata !DIExpression()), !dbg !4668
  %325 = and i24 %246, 1048576, !dbg !4914
  %326 = icmp eq i24 %325, 0, !dbg !4914
  br i1 %326, label %333, label %327, !dbg !4915

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4916
  %329 = zext i8 %328 to i32, !dbg !4916
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4916
  call void @llvm.dbg.value(metadata i32 %330, metadata !4655, metadata !DIExpression()), !dbg !4917
  %331 = icmp slt i32 %330, 0, !dbg !4918
  %332 = add i32 %324, 1, !dbg !4916
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %334, metadata !4546, metadata !DIExpression()), !dbg !4668
  %335 = load i32, i32* %16, align 4, !dbg !4920
  call void @llvm.dbg.value(metadata i32 %335, metadata !4630, metadata !DIExpression()), !dbg !4682
  br label %336, !dbg !4921

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4922
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %338, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %337, metadata !4630, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4682
  %339 = icmp sgt i32 %337, 0, !dbg !4923
  br i1 %339, label %340, label %345, !dbg !4921

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4924
  call void @llvm.dbg.value(metadata i32 %341, metadata !4630, metadata !DIExpression()), !dbg !4682
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %342, metadata !4659, metadata !DIExpression()), !dbg !4926
  %343 = icmp slt i32 %342, 0, !dbg !4927
  %344 = add i32 %338, 1, !dbg !4925
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %343, label %361, label %336, !llvm.loop !4929

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4931
  call void @llvm.dbg.value(metadata i32 %346, metadata !4662, metadata !DIExpression()), !dbg !4932
  %347 = icmp slt i32 %346, 0, !dbg !4933
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4931
  call void @llvm.dbg.value(metadata i32 %349, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %304, metadata !4607, metadata !DIExpression()), !dbg !4682
  %350 = icmp sgt i32 %304, 0, !dbg !4935
  br i1 %350, label %351, label %363, !dbg !4936

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4936
  %353 = add i32 %352, %338, !dbg !4936
  br label %354, !dbg !4936

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %355, metadata !4607, metadata !DIExpression()), !dbg !4682
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4937
  call void @llvm.dbg.value(metadata i32 %356, metadata !4664, metadata !DIExpression()), !dbg !4938
  %357 = icmp slt i32 %356, 0, !dbg !4939
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4941
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %359, metadata !4607, metadata !DIExpression()), !dbg !4682
  %360 = icmp sgt i32 %355, 1, !dbg !4935
  br i1 %360, label %354, label %363, !dbg !4936, !llvm.loop !4942

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4679
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %364, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4679
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4668
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4944
  ret i32 %366, !dbg !4944
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4945 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4949, metadata !DIExpression()), !dbg !4951
  call void @llvm.dbg.value(metadata i8* %1, metadata !4950, metadata !DIExpression()), !dbg !4951
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4952
  store i24 0, i24* %3, align 4, !dbg !4952
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4952
  store i8 0, i8* %4, align 1, !dbg !4952
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4952
  store i32 0, i32* %5, align 4, !dbg !4952
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4952
  store i32 0, i32* %6, align 4, !dbg !4952
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4953
  call void @llvm.dbg.value(metadata i8* %7, metadata !4950, metadata !DIExpression()), !dbg !4951
  %8 = load i8, i8* %7, align 1, !dbg !4954
  %9 = icmp eq i8 %8, 37, !dbg !4956
  br i1 %9, label %10, label %12, !dbg !4957

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4958
  call void @llvm.dbg.value(metadata i8* %11, metadata !4950, metadata !DIExpression()), !dbg !4951
  store i8 37, i8* %4, align 1, !dbg !4960
  br label %18, !dbg !4961

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4962
  call void @llvm.dbg.value(metadata i8* %13, metadata !4950, metadata !DIExpression()), !dbg !4951
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4963
  call void @llvm.dbg.value(metadata i8* %14, metadata !4950, metadata !DIExpression()), !dbg !4951
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4964
  call void @llvm.dbg.value(metadata i8* %15, metadata !4950, metadata !DIExpression()), !dbg !4951
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4965
  call void @llvm.dbg.value(metadata i8* %16, metadata !4950, metadata !DIExpression()), !dbg !4951
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4966
  call void @llvm.dbg.value(metadata i8* %17, metadata !4950, metadata !DIExpression()), !dbg !4951
  br label %18, !dbg !4967

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4951
  ret i8* %19, !dbg !4968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4969 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4973, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %1, metadata !4974, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %2, metadata !4975, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %3, metadata !4976, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i32 0, metadata !4977, metadata !DIExpression()), !dbg !4980
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4981

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4982
  call void @llvm.dbg.value(metadata i32 %9, metadata !4977, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %8, metadata !4975, metadata !DIExpression()), !dbg !4980
  %10 = icmp ult i8* %8, %3, !dbg !4983
  br i1 %10, label %11, label %13, !dbg !4984

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4985
  br label %17, !dbg !4984

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4986

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4987
  %16 = icmp eq i8 %15, 0, !dbg !4986
  br i1 %16, label %24, label %17, !dbg !4981

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4985
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4988
  call void @llvm.dbg.value(metadata i8* %19, metadata !4975, metadata !DIExpression()), !dbg !4980
  %20 = zext i8 %18 to i32, !dbg !4989
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4990
  call void @llvm.dbg.value(metadata i32 %21, metadata !4978, metadata !DIExpression()), !dbg !4991
  %22 = icmp slt i32 %21, 0, !dbg !4992
  %23 = add i32 %9, 1, !dbg !4994
  call void @llvm.dbg.value(metadata i32 undef, metadata !4977, metadata !DIExpression()), !dbg !4980
  br i1 %22, label %24, label %7, !llvm.loop !4995

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4980
  ret i32 %25, !dbg !4997
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4998 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5002, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5003, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata i8* %2, metadata !5004, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata i8* %3, metadata !5005, metadata !DIExpression()), !dbg !5012
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5013
  %6 = load i8, i8* %5, align 1, !dbg !5013
  %7 = zext i8 %6 to i32, !dbg !5014
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5015
  %9 = icmp eq i32 %8, 0, !dbg !5015
  call void @llvm.dbg.value(metadata i1 %9, metadata !5006, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5012
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5016
  call void @llvm.dbg.value(metadata i32 %10, metadata !5007, metadata !DIExpression()), !dbg !5012
  %11 = ptrtoint i8* %3 to i32, !dbg !5017
  %12 = ptrtoint i8* %2 to i32, !dbg !5017
  %13 = sub i32 %11, %12, !dbg !5017
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5018
  call void @llvm.dbg.value(metadata i8* %14, metadata !5009, metadata !DIExpression()), !dbg !5012
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5019

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5012
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5002, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata i8* %18, metadata !5009, metadata !DIExpression()), !dbg !5012
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5020
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5021
  call void @llvm.dbg.value(metadata i32 %25, metadata !5010, metadata !DIExpression()), !dbg !5022
  %26 = icmp ult i32 %25, 10, !dbg !5023
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5024
  %28 = add i32 %27, %25, !dbg !5022
  %29 = trunc i32 %28 to i8, !dbg !5024
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5025
  call void @llvm.dbg.value(metadata i8* %30, metadata !5009, metadata !DIExpression()), !dbg !5012
  store i8 %29, i8* %30, align 1, !dbg !5026
  call void @llvm.dbg.value(metadata i64 %22, metadata !5002, metadata !DIExpression()), !dbg !5012
  %31 = icmp uge i64 %19, %15, !dbg !5027
  %32 = icmp ugt i8* %30, %2, !dbg !5028
  %33 = and i1 %31, %32, !dbg !5028
  br i1 %33, label %17, label %34, !dbg !5029, !llvm.loop !5030

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5032
  %36 = load i24, i24* %35, align 4, !dbg !5032
  %37 = and i24 %36, 32, !dbg !5032
  %38 = icmp eq i24 %37, 0, !dbg !5032
  br i1 %38, label %44, label %39, !dbg !5034

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5035

40:                                               ; preds = %39
  br label %41, !dbg !5037

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5041
  store i24 %43, i24* %35, align 4, !dbg !5041
  br label %44, !dbg !5042

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5042
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !5043 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5049, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata i8* %1, metadata !5050, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata i32 %2, metadata !5051, metadata !DIExpression()), !dbg !5052
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5053
  %5 = load i24, i24* %4, align 4, !dbg !5053
  %6 = lshr i24 %5, 11, !dbg !5053
  %7 = and i24 %6, 15, !dbg !5053
  %8 = zext i24 %7 to i32, !dbg !5053
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5054

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5055
  store i32 %2, i32* %10, align 4, !dbg !5057
  br label %28, !dbg !5058

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5059
  store i8 %12, i8* %1, align 1, !dbg !5060
  br label %28, !dbg !5061

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5062
  %15 = bitcast i8* %1 to i16*, !dbg !5063
  store i16 %14, i16* %15, align 2, !dbg !5064
  br label %28, !dbg !5065

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5066
  store i32 %2, i32* %17, align 4, !dbg !5067
  br label %28, !dbg !5068

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5069
  %20 = bitcast i8* %1 to i64*, !dbg !5070
  store i64 %19, i64* %20, align 8, !dbg !5071
  br label %28, !dbg !5072

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5073
  %23 = bitcast i8* %1 to i64*, !dbg !5074
  store i64 %22, i64* %23, align 8, !dbg !5075
  br label %28, !dbg !5076

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5077
  store i32 %2, i32* %25, align 4, !dbg !5078
  br label %28, !dbg !5079

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5080
  store i32 %2, i32* %27, align 4, !dbg !5081
  br label %28, !dbg !5082

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5083
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5087, metadata !DIExpression()), !dbg !5088
  %2 = add i32 %0, -65, !dbg !5089
  %3 = icmp ult i32 %2, 26, !dbg !5090
  %4 = zext i1 %3 to i32, !dbg !5090
  ret i32 %4, !dbg !5091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5092 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5096, metadata !DIExpression()), !dbg !5097
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5098

2:                                                ; preds = %1
  br label %4, !dbg !5099

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5101

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5102
  ret i32 %5, !dbg !5103
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5104 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5106, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.value(metadata i8* %1, metadata !5107, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.value(metadata i8 1, metadata !5108, metadata !DIExpression()), !dbg !5109
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5110

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5108, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.value(metadata i8* %5, metadata !5107, metadata !DIExpression()), !dbg !5109
  %6 = load i8, i8* %5, align 1, !dbg !5111
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5113

7:                                                ; preds = %4
  br label %11, !dbg !5114

8:                                                ; preds = %4
  br label %11, !dbg !5116

9:                                                ; preds = %4
  br label %11, !dbg !5117

10:                                               ; preds = %4
  br label %11, !dbg !5118

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5119
  %14 = or i24 %13, %12, !dbg !5119
  store i24 %14, i24* %3, align 4, !dbg !5119
  call void @llvm.dbg.value(metadata i8 poison, metadata !5108, metadata !DIExpression()), !dbg !5109
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5107, metadata !DIExpression()), !dbg !5109
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5108, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.value(metadata i8* %15, metadata !5107, metadata !DIExpression()), !dbg !5109
  %17 = load i24, i24* %3, align 4, !dbg !5120
  %18 = and i24 %17, 68, !dbg !5122
  %19 = icmp eq i24 %18, 68, !dbg !5122
  br i1 %19, label %20, label %22, !dbg !5122

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5123
  store i24 %21, i24* %3, align 4, !dbg !5123
  br label %22, !dbg !5125

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5126
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5127 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5129, metadata !DIExpression()), !dbg !5133
  call void @llvm.dbg.value(metadata i8* %1, metadata !5130, metadata !DIExpression()), !dbg !5133
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5134
  %5 = load i24, i24* %4, align 4, !dbg !5135
  %6 = or i24 %5, 128, !dbg !5135
  store i24 %6, i24* %4, align 4, !dbg !5135
  call void @llvm.dbg.value(metadata i8* %1, metadata !5130, metadata !DIExpression()), !dbg !5133
  %7 = load i8, i8* %1, align 1, !dbg !5136
  %8 = icmp eq i8 %7, 42, !dbg !5138
  br i1 %8, label %9, label %12, !dbg !5139

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5140
  store i24 %10, i24* %4, align 4, !dbg !5140
  call void @llvm.dbg.value(metadata i8* %1, metadata !5130, metadata !DIExpression()), !dbg !5133
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5142
  call void @llvm.dbg.value(metadata i8* %11, metadata !5130, metadata !DIExpression()), !dbg !5133
  store i8* %11, i8** %3, align 4, !dbg !5142
  br label %29, !dbg !5143

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5131, metadata !DIExpression()), !dbg !5133
  call void @llvm.dbg.value(metadata i8** %3, metadata !5130, metadata !DIExpression(DW_OP_deref)), !dbg !5133
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5144
  call void @llvm.dbg.value(metadata i32 %13, metadata !5132, metadata !DIExpression()), !dbg !5133
  %14 = load i8*, i8** %3, align 4, !dbg !5145
  call void @llvm.dbg.value(metadata i8* %14, metadata !5130, metadata !DIExpression()), !dbg !5133
  %15 = icmp eq i8* %14, %1, !dbg !5147
  br i1 %15, label %29, label %16, !dbg !5148

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5149
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5151
  store i32 %13, i32* %18, align 4, !dbg !5152
  %19 = lshr i32 %13, 31, !dbg !5153
  %20 = lshr i24 %17, 1, !dbg !5154
  %21 = and i24 %20, 1, !dbg !5154
  %22 = zext i24 %21 to i32, !dbg !5154
  %23 = or i32 %19, %22, !dbg !5154
  %24 = trunc i32 %23 to i24, !dbg !5154
  %25 = shl nuw nsw i24 %24, 1, !dbg !5154
  %26 = and i24 %17, -131, !dbg !5154
  %27 = or i24 %26, 128, !dbg !5154
  %28 = or i24 %25, %27, !dbg !5154
  store i24 %28, i24* %4, align 4, !dbg !5154
  br label %29, !dbg !5155

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5133
  ret i8* %30, !dbg !5156
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5157 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5159, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata i8* %1, metadata !5160, metadata !DIExpression()), !dbg !5162
  %4 = load i8, i8* %1, align 1, !dbg !5163
  %5 = icmp eq i8 %4, 46, !dbg !5164
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5165
  %7 = load i24, i24* %6, align 4, !dbg !5166
  %8 = select i1 %5, i24 512, i24 0, !dbg !5166
  %9 = and i24 %7, -513, !dbg !5166
  %10 = or i24 %9, %8, !dbg !5166
  store i24 %10, i24* %6, align 4, !dbg !5166
  br i1 %5, label %11, label %32, !dbg !5167

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5160, metadata !DIExpression()), !dbg !5162
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5168
  call void @llvm.dbg.value(metadata i8* %12, metadata !5160, metadata !DIExpression()), !dbg !5162
  store i8* %12, i8** %3, align 4, !dbg !5168
  %13 = load i8, i8* %12, align 1, !dbg !5169
  %14 = icmp eq i8 %13, 42, !dbg !5171
  br i1 %14, label %15, label %18, !dbg !5172

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5173
  store i24 %16, i24* %6, align 4, !dbg !5173
  call void @llvm.dbg.value(metadata i8* %12, metadata !5160, metadata !DIExpression()), !dbg !5162
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5175
  call void @llvm.dbg.value(metadata i8* %17, metadata !5160, metadata !DIExpression()), !dbg !5162
  store i8* %17, i8** %3, align 4, !dbg !5175
  br label %32, !dbg !5176

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5160, metadata !DIExpression(DW_OP_deref)), !dbg !5162
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5177
  call void @llvm.dbg.value(metadata i32 %19, metadata !5161, metadata !DIExpression()), !dbg !5162
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5178
  store i32 %19, i32* %20, align 4, !dbg !5179
  %21 = lshr i32 %19, 31, !dbg !5180
  %22 = load i24, i24* %6, align 4, !dbg !5181
  %23 = lshr i24 %22, 1, !dbg !5181
  %24 = and i24 %23, 1, !dbg !5181
  %25 = zext i24 %24 to i32, !dbg !5181
  %26 = or i32 %21, %25, !dbg !5181
  %27 = trunc i32 %26 to i24, !dbg !5181
  %28 = shl nuw nsw i24 %27, 1, !dbg !5181
  %29 = and i24 %22, -3, !dbg !5181
  %30 = or i24 %28, %29, !dbg !5181
  store i24 %30, i24* %6, align 4, !dbg !5181
  %31 = load i8*, i8** %3, align 4, !dbg !5182
  call void @llvm.dbg.value(metadata i8* %31, metadata !5160, metadata !DIExpression()), !dbg !5162
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5162
  ret i8* %33, !dbg !5183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5184 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5186, metadata !DIExpression()), !dbg !5188
  call void @llvm.dbg.value(metadata i8* %1, metadata !5187, metadata !DIExpression()), !dbg !5188
  %3 = load i8, i8* %1, align 1, !dbg !5189
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5190

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5191
  call void @llvm.dbg.value(metadata i8* %5, metadata !5187, metadata !DIExpression()), !dbg !5188
  %6 = load i8, i8* %5, align 1, !dbg !5194
  %7 = icmp eq i8 %6, 104, !dbg !5195
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5196
  %9 = load i24, i24* %8, align 4, !dbg !5196
  %10 = and i24 %9, -30721, !dbg !5196
  br i1 %7, label %11, label %14, !dbg !5197

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5198
  store i24 %12, i24* %8, align 4, !dbg !5198
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5200
  call void @llvm.dbg.value(metadata i8* %13, metadata !5187, metadata !DIExpression()), !dbg !5188
  br label %56, !dbg !5201

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5202
  store i24 %15, i24* %8, align 4, !dbg !5202
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5204
  call void @llvm.dbg.value(metadata i8* %17, metadata !5187, metadata !DIExpression()), !dbg !5188
  %18 = load i8, i8* %17, align 1, !dbg !5206
  %19 = icmp eq i8 %18, 108, !dbg !5207
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5208
  %21 = load i24, i24* %20, align 4, !dbg !5208
  %22 = and i24 %21, -30721, !dbg !5208
  br i1 %19, label %23, label %26, !dbg !5209

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5210
  store i24 %24, i24* %20, align 4, !dbg !5210
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5212
  call void @llvm.dbg.value(metadata i8* %25, metadata !5187, metadata !DIExpression()), !dbg !5188
  br label %56, !dbg !5213

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5214
  store i24 %27, i24* %20, align 4, !dbg !5214
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5216
  %30 = load i24, i24* %29, align 4, !dbg !5217
  %31 = and i24 %30, -30721, !dbg !5217
  %32 = or i24 %31, 10240, !dbg !5217
  store i24 %32, i24* %29, align 4, !dbg !5217
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5218
  call void @llvm.dbg.value(metadata i8* %33, metadata !5187, metadata !DIExpression()), !dbg !5188
  br label %56, !dbg !5219

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5220
  %36 = load i24, i24* %35, align 4, !dbg !5221
  %37 = and i24 %36, -30721, !dbg !5221
  %38 = or i24 %37, 12288, !dbg !5221
  store i24 %38, i24* %35, align 4, !dbg !5221
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5222
  call void @llvm.dbg.value(metadata i8* %39, metadata !5187, metadata !DIExpression()), !dbg !5188
  br label %56, !dbg !5223

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5224
  %42 = load i24, i24* %41, align 4, !dbg !5225
  %43 = and i24 %42, -30721, !dbg !5225
  %44 = or i24 %43, 14336, !dbg !5225
  store i24 %44, i24* %41, align 4, !dbg !5225
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5226
  call void @llvm.dbg.value(metadata i8* %45, metadata !5187, metadata !DIExpression()), !dbg !5188
  br label %56, !dbg !5227

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5228
  %48 = load i24, i24* %47, align 4, !dbg !5229
  %49 = and i24 %48, -30723, !dbg !5229
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5230
  call void @llvm.dbg.value(metadata i8* %50, metadata !5187, metadata !DIExpression()), !dbg !5188
  %51 = or i24 %49, 16386, !dbg !5231
  store i24 %51, i24* %47, align 4, !dbg !5231
  br label %56, !dbg !5232

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5233
  %54 = load i24, i24* %53, align 4, !dbg !5234
  %55 = and i24 %54, -30721, !dbg !5234
  store i24 %55, i24* %53, align 4, !dbg !5234
  br label %56, !dbg !5235

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5187, metadata !DIExpression()), !dbg !5188
  ret i8* %57, !dbg !5236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5237 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5239, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i8* %1, metadata !5240, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i8 0, metadata !5241, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i8* %1, metadata !5240, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5244
  %3 = load i8, i8* %1, align 1, !dbg !5245
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5246
  store i8 %3, i8* %4, align 1, !dbg !5247
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5248

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5249

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5250
  %9 = load i24, i24* %8, align 4, !dbg !5250
  %10 = and i24 %9, -458753, !dbg !5250
  %11 = or i24 %10, %7, !dbg !5250
  call void @llvm.dbg.label(metadata !5242), !dbg !5251
  %12 = and i24 %9, 30720, !dbg !5252
  %13 = icmp eq i24 %12, 16384, !dbg !5252
  %14 = zext i1 %13 to i24, !dbg !5254
  %15 = or i24 %11, %14, !dbg !5254
  %16 = icmp eq i8 %3, 99, !dbg !5255
  br i1 %16, label %17, label %43, !dbg !5257

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5258
  %19 = icmp ne i24 %18, 0, !dbg !5258
  call void @llvm.dbg.value(metadata i1 %19, metadata !5241, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5244
  br label %43, !dbg !5260

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5261
  %22 = load i24, i24* %21, align 4, !dbg !5262
  %23 = and i24 %22, -458753, !dbg !5262
  %24 = or i24 %23, 262144, !dbg !5262
  call void @llvm.dbg.value(metadata i8 1, metadata !5241, metadata !DIExpression()), !dbg !5244
  br label %43, !dbg !5263

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5266
  %27 = load i24, i24* %26, align 4, !dbg !5267
  %28 = and i24 %27, -458753, !dbg !5267
  %29 = or i24 %28, 196608, !dbg !5267
  %30 = and i24 %27, 30720, !dbg !5268
  %31 = icmp eq i24 %30, 16384, !dbg !5268
  br label %43, !dbg !5270

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5271
  %34 = load i24, i24* %33, align 4, !dbg !5272
  %35 = and i24 %34, -458753, !dbg !5272
  %36 = or i24 %35, 196608, !dbg !5272
  %37 = and i24 %34, 30720, !dbg !5273
  %38 = icmp ne i24 %37, 0, !dbg !5273
  br label %43, !dbg !5275

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5276
  %41 = load i24, i24* %40, align 4, !dbg !5277
  %42 = or i24 %41, 1, !dbg !5277
  br label %43, !dbg !5278

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5279
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5280
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5281
  call void @llvm.dbg.value(metadata i8* %48, metadata !5240, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i8 poison, metadata !5241, metadata !DIExpression()), !dbg !5244
  %49 = lshr i24 %44, 1, !dbg !5279
  %50 = and i24 %49, 1, !dbg !5279
  %51 = zext i24 %50 to i32, !dbg !5279
  %52 = or i32 %51, %47, !dbg !5279
  %53 = trunc i32 %52 to i24, !dbg !5279
  %54 = shl nuw nsw i24 %53, 1, !dbg !5279
  %55 = and i24 %44, -3, !dbg !5279
  %56 = or i24 %54, %55, !dbg !5279
  store i24 %56, i24* %46, align 4, !dbg !5279
  ret i8* %48, !dbg !5282
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5283 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5288, metadata !DIExpression()), !dbg !5291
  %2 = load i8*, i8** %0, align 4, !dbg !5292
  call void @llvm.dbg.value(metadata i8* %2, metadata !5289, metadata !DIExpression()), !dbg !5291
  call void @llvm.dbg.value(metadata i32 0, metadata !5290, metadata !DIExpression()), !dbg !5291
  %3 = load i8, i8* %2, align 1, !dbg !5293
  %4 = zext i8 %3 to i32, !dbg !5294
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5295
  %6 = icmp eq i32 %5, 0, !dbg !5296
  br i1 %6, label %19, label %7, !dbg !5296

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5290, metadata !DIExpression()), !dbg !5291
  call void @llvm.dbg.value(metadata i8* %10, metadata !5289, metadata !DIExpression()), !dbg !5291
  %11 = mul i32 %9, 10, !dbg !5297
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5299
  call void @llvm.dbg.value(metadata i8* %12, metadata !5289, metadata !DIExpression()), !dbg !5291
  %13 = add i32 %11, -48, !dbg !5300
  %14 = add i32 %13, %8, !dbg !5301
  call void @llvm.dbg.value(metadata i32 %14, metadata !5290, metadata !DIExpression()), !dbg !5291
  %15 = load i8, i8* %12, align 1, !dbg !5293
  %16 = zext i8 %15 to i32, !dbg !5294
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5295
  %18 = icmp eq i32 %17, 0, !dbg !5296
  br i1 %18, label %19, label %7, !dbg !5296, !llvm.loop !5302

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5291
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5291
  store i8* %20, i8** %0, align 4, !dbg !5304
  ret i32 %21, !dbg !5305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5308, metadata !DIExpression()), !dbg !5309
  %2 = add i32 %0, -48, !dbg !5310
  %3 = icmp ult i32 %2, 10, !dbg !5311
  %4 = zext i1 %3 to i32, !dbg !5311
  ret i32 %4, !dbg !5312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5313 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #24, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #24, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #24, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #24, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #24, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #24, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #24, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #24, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #24, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #24, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #24, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #24, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #24, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS\0A\09.equ\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,1\0A\09.type\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,%object", ""() #24, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #24, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #24, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR\0A\09.equ\09CONFIG_CONSOLE_GETCHAR,1\0A\09.type\09CONFIG_CONSOLE_GETCHAR,%object", ""() #24, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,64\0A\09.type\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,%object", ""() #24, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,512\0A\09.type\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,%object", ""() #24, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !5889, !srcloc !5890
  ret void, !dbg !5891
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5892 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5894, metadata !DIExpression()), !dbg !5896
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !5897
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !5898
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5899, !srcloc !5908
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5899
  call void @llvm.dbg.value(metadata i32 %3, metadata !5905, metadata !DIExpression()) #24, !dbg !5909
  call void @llvm.dbg.value(metadata i32 undef, metadata !5906, metadata !DIExpression()) #24, !dbg !5909
  call void @llvm.dbg.value(metadata i32 %3, metadata !5895, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata i32 %3, metadata !5910, metadata !DIExpression()) #24, !dbg !5915
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !5917, !srcloc !5918
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5919
  ret i32 0, !dbg !5920
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5921 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5923
  %2 = or i32 %1, 512, !dbg !5923
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5923
  ret void, !dbg !5924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5925 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5926
  %2 = or i32 %1, 1024, !dbg !5926
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5926
  ret void, !dbg !5927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5928 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5930, metadata !DIExpression()), !dbg !5931
  ret i32 0, !dbg !5932
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_write(%struct.tty_serial* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5933 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5979, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i8* %1, metadata !5980, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i32 %2, metadata !5981, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i8* %1, metadata !5982, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i32 0, metadata !5983, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i32 0, metadata !5984, metadata !DIExpression()), !dbg !5985
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5986
  %5 = load i32, i32* %4, align 4, !dbg !5986
  %6 = icmp eq i32 %5, 0, !dbg !5988
  %7 = icmp eq i32 %2, 0, !dbg !5985
  br i1 %6, label %9, label %8, !dbg !5989

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !5983, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i8* %1, metadata !5982, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i32 %2, metadata !5981, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i32 %2, metadata !5981, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5985
  br i1 %7, label %37, label %20, !dbg !5990

9:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !5982, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i32 %2, metadata !5981, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i32 %2, metadata !5981, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5985
  br i1 %7, label %37, label %10, !dbg !5991

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %12, !dbg !5991

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %1, %10 ], [ %17, %12 ]
  %14 = phi i32 [ %2, %10 ], [ %15, %12 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !5982, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i32 %14, metadata !5981, metadata !DIExpression()), !dbg !5985
  %15 = add i32 %14, -1, !dbg !5993
  call void @llvm.dbg.value(metadata i32 %15, metadata !5981, metadata !DIExpression()), !dbg !5985
  %16 = load %struct.device*, %struct.device** %11, align 4, !dbg !5994
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5996
  call void @llvm.dbg.value(metadata i8* %17, metadata !5982, metadata !DIExpression()), !dbg !5985
  %18 = load i8, i8* %13, align 1, !dbg !5997
  tail call fastcc void @uart_poll_out(%struct.device* noundef %16, i8 noundef zeroext %18) #26, !dbg !5998
  call void @llvm.dbg.value(metadata i32 %15, metadata !5981, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5985
  %19 = icmp eq i32 %15, 0, !dbg !5991
  br i1 %19, label %37, label %12, !dbg !5991, !llvm.loop !5999

20:                                               ; preds = %8, %33
  %21 = phi i32 [ %24, %33 ], [ %2, %8 ]
  %22 = phi i32 [ %35, %33 ], [ 0, %8 ]
  %23 = phi i8* [ %34, %33 ], [ %1, %8 ]
  %24 = add i32 %21, -1, !dbg !6001
  call void @llvm.dbg.value(metadata i32 %22, metadata !5983, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i8* %23, metadata !5982, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i8* %23, metadata !5982, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5985
  %25 = load i8, i8* %23, align 1, !dbg !6002
  %26 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %25) #26, !dbg !6004
  call void @llvm.dbg.value(metadata i32 %26, metadata !5984, metadata !DIExpression()), !dbg !5985
  %27 = icmp slt i32 %26, 0, !dbg !6005
  br i1 %27, label %28, label %33, !dbg !6007

28:                                               ; preds = %20
  %29 = icmp eq i32 %22, 0, !dbg !6008
  br i1 %29, label %30, label %37, !dbg !6011

30:                                               ; preds = %28
  %31 = sub nsw i32 0, %26, !dbg !6012
  %32 = tail call fastcc i32* @z_errno() #26, !dbg !6014
  store i32 %31, i32* %32, align 4, !dbg !6015
  br label %37, !dbg !6016

33:                                               ; preds = %20
  %34 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6017
  call void @llvm.dbg.value(metadata i8* %34, metadata !5982, metadata !DIExpression()), !dbg !5985
  %35 = add nuw i32 %22, 1, !dbg !6018
  call void @llvm.dbg.value(metadata i32 %35, metadata !5983, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i32 %24, metadata !5981, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i32 %24, metadata !5981, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5985
  %36 = icmp eq i32 %24, 0, !dbg !5990
  br i1 %36, label %37, label %20, !dbg !5990, !llvm.loop !6019

37:                                               ; preds = %33, %12, %8, %9, %28, %30
  %38 = phi i32 [ %26, %30 ], [ %22, %28 ], [ 0, %9 ], [ 0, %8 ], [ %2, %12 ], [ %2, %33 ], !dbg !5985
  ret i32 %38, !dbg !6021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6022 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6025, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i8 %1, metadata !6026, metadata !DIExpression()), !dbg !6027
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6028, !srcloc !6030
  tail call fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) #26, !dbg !6031
  ret void, !dbg !6032
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6033 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6037, metadata !DIExpression()), !dbg !6042
  call void @llvm.dbg.value(metadata i8 %1, metadata !6038, metadata !DIExpression()), !dbg !6042
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !6043
  %4 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !6044
  br i1 %4, label %14, label %5, !dbg !6044

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !6045
  %7 = load i32, i32* %6, align 4, !dbg !6045
  %8 = icmp eq i32 %7, -1, !dbg !6045
  br i1 %8, label %14, label %9, !dbg !6045

9:                                                ; preds = %5
  %10 = icmp sgt i32 %7, 0, !dbg !6045
  %11 = select i1 %10, i32 %7, i32 0, !dbg !6045
  %12 = zext i32 %11 to i64, !dbg !6045
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %12) #26, !dbg !6045
  br label %14, !dbg !6045

14:                                               ; preds = %5, %2, %9
  %15 = phi i64 [ %13, %9 ], [ 0, %2 ], [ -1, %5 ], !dbg !6042
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !6046
  %17 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %3, [1 x i64] %16) #26, !dbg !6046
  call void @llvm.dbg.value(metadata i32 %17, metadata !6041, metadata !DIExpression()), !dbg !6042
  %18 = icmp slt i32 %17, 0, !dbg !6047
  br i1 %18, label %42, label %19, !dbg !6049

19:                                               ; preds = %14
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6050, !srcloc !6056
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !6050
  call void @llvm.dbg.value(metadata i32 %21, metadata !6053, metadata !DIExpression()) #24, !dbg !6057
  call void @llvm.dbg.value(metadata i32 undef, metadata !6054, metadata !DIExpression()) #24, !dbg !6057
  call void @llvm.dbg.value(metadata i32 %21, metadata !6039, metadata !DIExpression()), !dbg !6042
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !6058
  %23 = load i16, i16* %22, align 2, !dbg !6058
  %24 = zext i16 %23 to i32, !dbg !6059
  %25 = add nuw nsw i32 %24, 1, !dbg !6060
  call void @llvm.dbg.value(metadata i32 %25, metadata !6040, metadata !DIExpression()), !dbg !6042
  %26 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6061
  %27 = load i32, i32* %26, align 4, !dbg !6061
  %28 = icmp ult i32 %25, %27, !dbg !6063
  %29 = select i1 %28, i32 %25, i32 0, !dbg !6064
  call void @llvm.dbg.value(metadata i32 %29, metadata !6040, metadata !DIExpression()), !dbg !6042
  %30 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !6065
  %31 = load i16, i16* %30, align 4, !dbg !6065
  %32 = zext i16 %31 to i32, !dbg !6067
  %33 = icmp eq i32 %29, %32, !dbg !6068
  br i1 %33, label %34, label %35, !dbg !6069

34:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 %21, metadata !6070, metadata !DIExpression()) #24, !dbg !6073
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !6076, !srcloc !6077
  br label %42, !dbg !6078

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6079
  %37 = load i8*, i8** %36, align 4, !dbg !6079
  %38 = getelementptr inbounds i8, i8* %37, i32 %24, !dbg !6080
  store i8 %1, i8* %38, align 1, !dbg !6081
  %39 = trunc i32 %29 to i16, !dbg !6082
  store i16 %39, i16* %22, align 2, !dbg !6083
  call void @llvm.dbg.value(metadata i32 %21, metadata !6070, metadata !DIExpression()) #24, !dbg !6084
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !6086, !srcloc !6077
  %40 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6087
  %41 = load %struct.device*, %struct.device** %40, align 4, !dbg !6087
  tail call fastcc void @uart_irq_tx_enable(%struct.device* noundef %41) #26, !dbg !6088
  br label %42, !dbg !6089

42:                                               ; preds = %14, %35, %34
  %43 = phi i32 [ -28, %34 ], [ 0, %35 ], [ %17, %14 ], !dbg !6042
  ret i32 %43, !dbg !6090
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32* @z_errno() unnamed_addr #1 !dbg !6091 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6095, !srcloc !6097
  %1 = tail call i32* @z_impl_z_errno() #25, !dbg !6098
  ret i32* %1, !dbg !6099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !6100 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6105, metadata !DIExpression()), !dbg !6106
  call void @llvm.dbg.value(metadata i64 %0, metadata !6107, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i32 1000, metadata !6112, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i32 10000, metadata !6113, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i8 1, metadata !6114, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i8 0, metadata !6115, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i8 1, metadata !6116, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i8 0, metadata !6117, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i8 1, metadata !6118, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i8 0, metadata !6119, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i64 0, metadata !6120, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i64 0, metadata !6120, metadata !DIExpression()), !dbg !6124
  %2 = mul i64 %0, 10, !dbg !6126
  ret i64 %2, !dbg !6132
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !6133 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6143, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6142, metadata !DIExpression()), !dbg !6144
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6145, !srcloc !6147
  %3 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) #25, !dbg !6148
  ret i32 %3, !dbg !6149
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6150 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6152, metadata !DIExpression()), !dbg !6153
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6154, !srcloc !6156
  tail call fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) #26, !dbg !6157
  ret void, !dbg !6158
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6159 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6161, metadata !DIExpression()), !dbg !6163
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6164
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6164
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6164
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6162, metadata !DIExpression()), !dbg !6163
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 7, !dbg !6165
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6165
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6167
  br i1 %7, label %9, label %8, !dbg !6168

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6169
  br label %9, !dbg !6171

9:                                                ; preds = %8, %1
  ret void, !dbg !6172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6173 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6175, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i8 %1, metadata !6176, metadata !DIExpression()), !dbg !6178
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6179
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6179
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6179
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6177, metadata !DIExpression()), !dbg !6178
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 1, !dbg !6180
  %7 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %6, align 4, !dbg !6180
  tail call void %7(%struct.device* noundef %0, i8 noundef zeroext %1) #25, !dbg !6181
  ret void, !dbg !6182
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_read(%struct.tty_serial* noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6183 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6187, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i8* %1, metadata !6188, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i32 %2, metadata !6189, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i8* %1, metadata !6190, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i32 0, metadata !6191, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i32 0, metadata !6192, metadata !DIExpression()), !dbg !6193
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6194
  %5 = load i32, i32* %4, align 4, !dbg !6194
  %6 = icmp eq i32 %5, 0, !dbg !6196
  br i1 %6, label %9, label %7, !dbg !6197

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !6191, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i8* %1, metadata !6190, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i32 %2, metadata !6189, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i32 %2, metadata !6189, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6193
  %8 = icmp eq i32 %2, 0, !dbg !6198
  br i1 %8, label %28, label %11, !dbg !6198

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @tty_read_unbuf(%struct.tty_serial* noundef nonnull %0, i8* noundef %1, i32 noundef %2) #26, !dbg !6199
  br label %28, !dbg !6201

11:                                               ; preds = %7, %23
  %12 = phi i32 [ %15, %23 ], [ %2, %7 ]
  %13 = phi i32 [ %26, %23 ], [ 0, %7 ]
  %14 = phi i8* [ %25, %23 ], [ %1, %7 ]
  %15 = add i32 %12, -1, !dbg !6202
  call void @llvm.dbg.value(metadata i32 %13, metadata !6191, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i8* %14, metadata !6190, metadata !DIExpression()), !dbg !6193
  %16 = tail call fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) #26, !dbg !6203
  call void @llvm.dbg.value(metadata i32 %16, metadata !6192, metadata !DIExpression()), !dbg !6193
  %17 = icmp slt i32 %16, 0, !dbg !6205
  br i1 %17, label %18, label %23, !dbg !6207

18:                                               ; preds = %11
  %19 = icmp eq i32 %13, 0, !dbg !6208
  br i1 %19, label %20, label %28, !dbg !6211

20:                                               ; preds = %18
  %21 = sub nsw i32 0, %16, !dbg !6212
  %22 = tail call fastcc i32* @z_errno() #26, !dbg !6214
  store i32 %21, i32* %22, align 4, !dbg !6215
  br label %28, !dbg !6216

23:                                               ; preds = %11
  %24 = trunc i32 %16 to i8, !dbg !6217
  %25 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6218
  call void @llvm.dbg.value(metadata i8* %25, metadata !6190, metadata !DIExpression()), !dbg !6193
  store i8 %24, i8* %14, align 1, !dbg !6219
  %26 = add nuw i32 %13, 1, !dbg !6220
  call void @llvm.dbg.value(metadata i32 %26, metadata !6191, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i32 %15, metadata !6189, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i32 %15, metadata !6189, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6193
  %27 = icmp eq i32 %15, 0, !dbg !6198
  br i1 %27, label %28, label %11, !dbg !6198, !llvm.loop !6221

28:                                               ; preds = %23, %7, %18, %20, %9
  %29 = phi i32 [ %10, %9 ], [ %16, %20 ], [ %13, %18 ], [ 0, %7 ], [ %2, %23 ], !dbg !6193
  ret i32 %29, !dbg !6223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_read_unbuf(%struct.tty_serial* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #1 !dbg !6224 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6226, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i8* %1, metadata !6227, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 %2, metadata !6228, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i8* %1, metadata !6229, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 0, metadata !6230, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 0, metadata !6231, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 undef, metadata !6232, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 0, metadata !6230, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i8* %1, metadata !6229, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 %2, metadata !6228, metadata !DIExpression()), !dbg !6235
  %5 = icmp eq i32 %2, 0, !dbg !6236
  br i1 %5, label %48, label %6, !dbg !6236

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6237
  %8 = load i32, i32* %7, align 4, !dbg !6237
  call void @llvm.dbg.value(metadata i32 %8, metadata !6232, metadata !DIExpression()), !dbg !6235
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %10, !dbg !6236

10:                                               ; preds = %6, %46
  %11 = phi i32 [ %8, %6 ], [ %39, %46 ]
  %12 = phi i32 [ 0, %6 ], [ %31, %46 ]
  %13 = phi i8* [ %1, %6 ], [ %32, %46 ]
  %14 = phi i32 [ %2, %6 ], [ %33, %46 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6232, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 %12, metadata !6230, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i8* %13, metadata !6229, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 %14, metadata !6228, metadata !DIExpression()), !dbg !6235
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6238
  %15 = load %struct.device*, %struct.device** %9, align 4, !dbg !6239
  call void @llvm.dbg.value(metadata i8* %4, metadata !6233, metadata !DIExpression(DW_OP_deref)), !dbg !6240
  %16 = call fastcc i32 @uart_poll_in(%struct.device* noundef %15, i8* noundef nonnull %4) #26, !dbg !6241
  call void @llvm.dbg.value(metadata i32 %16, metadata !6231, metadata !DIExpression()), !dbg !6235
  %17 = icmp slt i32 %16, -1, !dbg !6242
  br i1 %17, label %18, label %22, !dbg !6244

18:                                               ; preds = %10
  %19 = icmp eq i32 %12, 0, !dbg !6245
  br i1 %19, label %20, label %44, !dbg !6248

20:                                               ; preds = %18
  %21 = call fastcc i32* @z_errno() #26, !dbg !6249
  store i32 %16, i32* %21, align 4, !dbg !6251
  call void @llvm.dbg.value(metadata i32 %39, metadata !6232, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 undef, metadata !6230, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i8* %32, metadata !6229, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 %33, metadata !6228, metadata !DIExpression()), !dbg !6235
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6252
  br label %48

22:                                               ; preds = %10
  %23 = icmp eq i32 %16, 0, !dbg !6253
  br i1 %23, label %24, label %30, !dbg !6255

24:                                               ; preds = %22
  %25 = load i8, i8* %4, align 1, !dbg !6256
  call void @llvm.dbg.value(metadata i8 %25, metadata !6233, metadata !DIExpression()), !dbg !6240
  %26 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6258
  call void @llvm.dbg.value(metadata i8* %26, metadata !6229, metadata !DIExpression()), !dbg !6235
  store i8 %25, i8* %13, align 1, !dbg !6259
  %27 = add i32 %12, 1, !dbg !6260
  call void @llvm.dbg.value(metadata i32 %27, metadata !6230, metadata !DIExpression()), !dbg !6235
  %28 = add i32 %14, -1, !dbg !6261
  call void @llvm.dbg.value(metadata i32 %28, metadata !6228, metadata !DIExpression()), !dbg !6235
  %29 = icmp eq i32 %28, 0, !dbg !6262
  br i1 %29, label %44, label %30, !dbg !6264

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %27, %24 ], [ %12, %22 ]
  %32 = phi i8* [ %26, %24 ], [ %13, %22 ]
  %33 = phi i32 [ %28, %24 ], [ %14, %22 ]
  %34 = icmp eq i32 %11, -1, !dbg !6265
  br i1 %34, label %38, label %35, !dbg !6266

35:                                               ; preds = %30
  %36 = add i32 %11, -1, !dbg !6267
  call void @llvm.dbg.value(metadata i32 %36, metadata !6232, metadata !DIExpression()), !dbg !6235
  %37 = icmp eq i32 %11, 0, !dbg !6268
  br i1 %37, label %44, label %38, !dbg !6269

38:                                               ; preds = %35, %30
  %39 = phi i32 [ %36, %35 ], [ -1, %30 ], !dbg !6235
  call void @llvm.dbg.value(metadata i32 %39, metadata !6232, metadata !DIExpression()), !dbg !6235
  %40 = icmp eq i32 %16, -1, !dbg !6270
  br i1 %40, label %41, label %46, !dbg !6272

41:                                               ; preds = %38
  %42 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1) #26, !dbg !6273
  %43 = insertvalue [1 x i64] poison, i64 %42, 0, !dbg !6275
  call fastcc void @k_sleep([1 x i64] %43) #26, !dbg !6275
  br label %46, !dbg !6276

44:                                               ; preds = %35, %24, %18
  %45 = phi i32 [ %12, %18 ], [ %31, %35 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !6232, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 undef, metadata !6230, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i8* %32, metadata !6229, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 %33, metadata !6228, metadata !DIExpression()), !dbg !6235
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6252
  br label %48

46:                                               ; preds = %38, %41
  call void @llvm.dbg.value(metadata i32 %39, metadata !6232, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 %31, metadata !6230, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i8* %32, metadata !6229, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 %33, metadata !6228, metadata !DIExpression()), !dbg !6235
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6252
  %47 = icmp eq i32 %33, 0, !dbg !6236
  br i1 %47, label %48, label %10, !dbg !6236

48:                                               ; preds = %46, %3, %44, %20
  %49 = phi i32 [ -1, %20 ], [ %45, %44 ], [ 0, %3 ], [ %31, %46 ], !dbg !6235
  ret i32 %49, !dbg !6277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) unnamed_addr #1 !dbg !6278 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6282, metadata !DIExpression()), !dbg !6286
  %2 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6287
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6288
  %4 = load i32, i32* %3, align 4, !dbg !6288
  %5 = icmp eq i32 %4, -1, !dbg !6288
  br i1 %5, label %11, label %6, !dbg !6288

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0, !dbg !6288
  %8 = select i1 %7, i32 %4, i32 0, !dbg !6288
  %9 = zext i32 %8 to i64, !dbg !6288
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %9) #26, !dbg !6288
  br label %11, !dbg !6288

11:                                               ; preds = %1, %6
  %12 = phi i64 [ %10, %6 ], [ -1, %1 ], !dbg !6288
  %13 = insertvalue [1 x i64] poison, i64 %12, 0, !dbg !6289
  %14 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %2, [1 x i64] %13) #26, !dbg !6289
  call void @llvm.dbg.value(metadata i32 %14, metadata !6285, metadata !DIExpression()), !dbg !6286
  %15 = icmp slt i32 %14, 0, !dbg !6290
  br i1 %15, label %33, label %16, !dbg !6292

16:                                               ; preds = %11
  %17 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6293, !srcloc !6056
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !6293
  call void @llvm.dbg.value(metadata i32 %18, metadata !6053, metadata !DIExpression()) #24, !dbg !6295
  call void @llvm.dbg.value(metadata i32 undef, metadata !6054, metadata !DIExpression()) #24, !dbg !6295
  call void @llvm.dbg.value(metadata i32 %18, metadata !6283, metadata !DIExpression()), !dbg !6286
  %19 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6296
  %20 = load i8*, i8** %19, align 4, !dbg !6296
  %21 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6297
  %22 = load i16, i16* %21, align 4, !dbg !6298
  %23 = add i16 %22, 1, !dbg !6298
  store i16 %23, i16* %21, align 4, !dbg !6298
  %24 = zext i16 %22 to i32, !dbg !6299
  %25 = getelementptr inbounds i8, i8* %20, i32 %24, !dbg !6299
  %26 = load i8, i8* %25, align 1, !dbg !6299
  call void @llvm.dbg.value(metadata i8 %26, metadata !6284, metadata !DIExpression()), !dbg !6286
  %27 = zext i16 %23 to i32, !dbg !6300
  %28 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6302
  %29 = load i32, i32* %28, align 4, !dbg !6302
  %30 = icmp ugt i32 %29, %27, !dbg !6303
  %31 = select i1 %30, i16 %23, i16 0, !dbg !6304
  store i16 %31, i16* %21, align 4, !dbg !6286
  call void @llvm.dbg.value(metadata i32 %18, metadata !6070, metadata !DIExpression()) #24, !dbg !6305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !6307, !srcloc !6077
  %32 = zext i8 %26 to i32, !dbg !6308
  br label %33, !dbg !6309

33:                                               ; preds = %11, %16
  %34 = phi i32 [ %32, %16 ], [ %14, %11 ], !dbg !6286
  ret i32 %34, !dbg !6310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6311 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6313, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata i8* %1, metadata !6314, metadata !DIExpression()), !dbg !6315
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6316, !srcloc !6318
  %3 = tail call fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !6319
  ret i32 %3, !dbg !6320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !6321 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6325, metadata !DIExpression()), !dbg !6326
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6327, !srcloc !6329
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !6330
  ret void, !dbg !6331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6332 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6334, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i8* %1, metadata !6335, metadata !DIExpression()), !dbg !6337
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6338
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6338
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6338
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6336, metadata !DIExpression()), !dbg !6337
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 0, !dbg !6339
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !6339
  %8 = icmp eq i32 (%struct.device*, i8*)* %7, null, !dbg !6341
  br i1 %8, label %11, label %9, !dbg !6342

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1) #25, !dbg !6343
  br label %11, !dbg !6344

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6337
  ret i32 %12, !dbg !6345
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_init(%struct.tty_serial* noundef %0, %struct.device* noundef %1) local_unnamed_addr #1 !dbg !6346 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6350, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !6351, metadata !DIExpression()), !dbg !6352
  %3 = icmp eq %struct.device* %1, null, !dbg !6353
  br i1 %3, label %17, label %4, !dbg !6355

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6356
  store %struct.device* %1, %struct.device** %5, align 4, !dbg !6357
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6358
  store i8* null, i8** %6, align 4, !dbg !6359
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6360
  store i32 0, i32* %7, align 4, !dbg !6361
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6362
  store i8* null, i8** %8, align 4, !dbg !6363
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6364
  store i32 0, i32* %9, align 4, !dbg !6365
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !6366
  store i16 0, i16* %10, align 2, !dbg !6367
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !6368
  store i16 0, i16* %11, align 4, !dbg !6369
  %12 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6370
  store i16 0, i16* %12, align 2, !dbg !6371
  %13 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6372
  store i16 0, i16* %13, align 4, !dbg !6373
  %14 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6374
  store i32 -1, i32* %14, align 4, !dbg !6375
  %15 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !6376
  store i32 -1, i32* %15, align 4, !dbg !6377
  %16 = bitcast %struct.tty_serial* %0 to i8*, !dbg !6378
  tail call fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef nonnull %1, i8* noundef %16) #26, !dbg !6379
  br label %17, !dbg !6380

17:                                               ; preds = %2, %4
  %18 = phi i32 [ 0, %4 ], [ -19, %2 ], !dbg !6352
  ret i32 %18, !dbg !6381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6382 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6384, metadata !DIExpression()), !dbg !6388
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @tty_uart_isr, metadata !6385, metadata !DIExpression()), !dbg !6388
  call void @llvm.dbg.value(metadata i8* %1, metadata !6386, metadata !DIExpression()), !dbg !6388
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6389
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6389
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6389
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6387, metadata !DIExpression()), !dbg !6388
  %6 = icmp eq %struct.uart_driver_api* %5, null, !dbg !6390
  br i1 %6, label %12, label %7, !dbg !6392

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 18, !dbg !6393
  %9 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %8, align 4, !dbg !6393
  %10 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %9, null, !dbg !6394
  br i1 %10, label %12, label %11, !dbg !6395

11:                                               ; preds = %7
  tail call void %9(%struct.device* noundef nonnull %0, void (%struct.device*, i8*)* noundef nonnull @tty_uart_isr, i8* noundef %1) #25, !dbg !6396
  br label %12, !dbg !6398

12:                                               ; preds = %11, %7, %2
  ret void, !dbg !6399
}

; Function Attrs: noinline nounwind optsize
define internal void @tty_uart_isr(%struct.device* noundef %0, i8* noundef %1) #1 !dbg !6400 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6402, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i8* %1, metadata !6403, metadata !DIExpression()), !dbg !6408
  %4 = bitcast i8* %1 to %struct.tty_serial*, !dbg !6409
  call void @llvm.dbg.value(metadata %struct.tty_serial* %4, metadata !6404, metadata !DIExpression()), !dbg !6408
  tail call fastcc void @uart_irq_update(%struct.device* noundef %0) #26, !dbg !6410
  %5 = tail call fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) #26, !dbg !6411
  %6 = icmp eq i32 %5, 0, !dbg !6411
  br i1 %6, label %15, label %7, !dbg !6412

7:                                                ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6413
  call void @llvm.dbg.value(metadata i8* %3, metadata !6405, metadata !DIExpression(DW_OP_deref)), !dbg !6414
  %8 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6415
  %9 = icmp eq i32 %8, 0, !dbg !6418
  br i1 %9, label %14, label %10, !dbg !6419

10:                                               ; preds = %7, %10
  %11 = load i8, i8* %3, align 1, !dbg !6420
  call void @llvm.dbg.value(metadata i8 %11, metadata !6405, metadata !DIExpression()), !dbg !6414
  call fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %4, i8 noundef zeroext %11) #26, !dbg !6421
  call void @llvm.dbg.value(metadata i8* %3, metadata !6405, metadata !DIExpression(DW_OP_deref)), !dbg !6414
  %12 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6415
  %13 = icmp eq i32 %12, 0, !dbg !6418
  br i1 %13, label %14, label %10, !dbg !6419, !llvm.loop !6422

14:                                               ; preds = %10, %7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6425
  br label %15, !dbg !6426

15:                                               ; preds = %14, %2
  %16 = call fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) #26, !dbg !6427
  %17 = icmp eq i32 %16, 0, !dbg !6427
  br i1 %17, label %44, label %18, !dbg !6429

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %1, i32 60, !dbg !6430
  %20 = bitcast i8* %19 to i16*, !dbg !6430
  %21 = load i16, i16* %20, align 4, !dbg !6430
  %22 = getelementptr inbounds i8, i8* %1, i32 62, !dbg !6433
  %23 = bitcast i8* %22 to i16*, !dbg !6433
  %24 = load i16, i16* %23, align 2, !dbg !6433
  %25 = icmp eq i16 %21, %24, !dbg !6434
  br i1 %25, label %26, label %27, !dbg !6435

26:                                               ; preds = %18
  call fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6436
  br label %44, !dbg !6438

27:                                               ; preds = %18
  %28 = zext i16 %21 to i32, !dbg !6439
  %29 = getelementptr inbounds i8, i8* %1, i32 52, !dbg !6440
  %30 = bitcast i8* %29 to i8**, !dbg !6440
  %31 = load i8*, i8** %30, align 4, !dbg !6440
  %32 = add i16 %21, 1, !dbg !6442
  store i16 %32, i16* %20, align 4, !dbg !6442
  %33 = getelementptr inbounds i8, i8* %31, i32 %28, !dbg !6443
  call fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %33) #26, !dbg !6444
  %34 = load i16, i16* %20, align 4, !dbg !6445
  %35 = zext i16 %34 to i32, !dbg !6447
  %36 = getelementptr inbounds i8, i8* %1, i32 56, !dbg !6448
  %37 = bitcast i8* %36 to i32*, !dbg !6448
  %38 = load i32, i32* %37, align 4, !dbg !6448
  %39 = icmp ugt i32 %38, %35, !dbg !6449
  br i1 %39, label %41, label %40, !dbg !6450

40:                                               ; preds = %27
  store i16 0, i16* %20, align 4, !dbg !6451
  br label %41, !dbg !6453

41:                                               ; preds = %40, %27
  %42 = getelementptr inbounds i8, i8* %1, i32 36, !dbg !6454
  %43 = bitcast i8* %42 to %struct.k_sem*, !dbg !6454
  call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %43) #26, !dbg !6455
  br label %44

44:                                               ; preds = %26, %41, %15
  ret void, !dbg !6456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6457 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6459, metadata !DIExpression()), !dbg !6460
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6461, !srcloc !6463
  tail call fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) #26, !dbg !6464
  ret void, !dbg !6465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6466 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6468, metadata !DIExpression()), !dbg !6470
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6471
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6471
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6471
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6469, metadata !DIExpression()), !dbg !6470
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 13, !dbg !6472
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6472
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6474
  br i1 %7, label %10, label %8, !dbg !6475

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6476
  br label %10, !dbg !6477

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6470
  ret i32 %11, !dbg !6478
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6479 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6481, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.value(metadata i8* %1, metadata !6482, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.value(metadata i32 1, metadata !6483, metadata !DIExpression()), !dbg !6485
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6486
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6486
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6486
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6484, metadata !DIExpression()), !dbg !6485
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 6, !dbg !6487
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6487
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6489
  br i1 %8, label %11, label %9, !dbg !6490

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6491
  br label %11, !dbg !6492

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6485
  ret i32 %12, !dbg !6493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6494 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6496, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i8 %1, metadata !6497, metadata !DIExpression()), !dbg !6499
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6500
  %4 = load i16, i16* %3, align 2, !dbg !6500
  %5 = zext i16 %4 to i32, !dbg !6501
  %6 = add nuw nsw i32 %5, 1, !dbg !6502
  call void @llvm.dbg.value(metadata i32 %6, metadata !6498, metadata !DIExpression()), !dbg !6499
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6503
  %8 = load i32, i32* %7, align 4, !dbg !6503
  %9 = icmp ult i32 %6, %8, !dbg !6505
  %10 = select i1 %9, i32 %6, i32 0, !dbg !6506
  call void @llvm.dbg.value(metadata i32 %10, metadata !6498, metadata !DIExpression()), !dbg !6499
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6507
  %12 = load i16, i16* %11, align 4, !dbg !6507
  %13 = zext i16 %12 to i32, !dbg !6509
  %14 = icmp eq i32 %10, %13, !dbg !6510
  br i1 %14, label %15, label %17, !dbg !6511

15:                                               ; preds = %2
  %16 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef nonnull %0, i8 noundef zeroext 126) #26, !dbg !6512
  br label %23, !dbg !6514

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6515
  %19 = load i8*, i8** %18, align 4, !dbg !6515
  %20 = getelementptr inbounds i8, i8* %19, i32 %5, !dbg !6516
  store i8 %1, i8* %20, align 1, !dbg !6517
  %21 = trunc i32 %10 to i16, !dbg !6518
  store i16 %21, i16* %3, align 2, !dbg !6519
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6520
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %22) #26, !dbg !6521
  br label %23, !dbg !6522

23:                                               ; preds = %17, %15
  ret void, !dbg !6523
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6524 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6526, metadata !DIExpression()), !dbg !6528
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6529
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6529
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6529
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6527, metadata !DIExpression()), !dbg !6528
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 9, !dbg !6530
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6530
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6532
  br i1 %7, label %10, label %8, !dbg !6533

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6534
  br label %10, !dbg !6535

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6528
  ret i32 %11, !dbg !6536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6537 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6539, metadata !DIExpression()), !dbg !6540
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6541, !srcloc !6543
  tail call fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6544
  ret void, !dbg !6545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6546 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6548, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata i8* %1, metadata !6549, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata i32 1, metadata !6550, metadata !DIExpression()), !dbg !6552
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6553
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6553
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6553
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6551, metadata !DIExpression()), !dbg !6552
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 5, !dbg !6554
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6554
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6556
  br i1 %8, label %11, label %9, !dbg !6557

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6558
  br label %11, !dbg !6559

11:                                               ; preds = %2, %9
  ret void, !dbg !6560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_give(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !6561 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6565, metadata !DIExpression()), !dbg !6566
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6567, !srcloc !6569
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #25, !dbg !6570
  ret void, !dbg !6571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6572 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6574, metadata !DIExpression()), !dbg !6576
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6577
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6577
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6577
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6575, metadata !DIExpression()), !dbg !6576
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 8, !dbg !6578
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6578
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6580
  br i1 %7, label %9, label %8, !dbg !6581

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6582
  br label %9, !dbg !6584

9:                                                ; preds = %8, %1
  ret void, !dbg !6585
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6586 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6588, metadata !DIExpression()), !dbg !6590
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6591
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6591
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6591
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6589, metadata !DIExpression()), !dbg !6590
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 17, !dbg !6592
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6592
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6594
  br i1 %7, label %10, label %8, !dbg !6595

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6596
  br label %10, !dbg !6597

10:                                               ; preds = %1, %8
  ret void, !dbg !6598
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_rx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6599 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6603, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.value(metadata i8* %1, metadata !6604, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.value(metadata i32 %2, metadata !6605, metadata !DIExpression()), !dbg !6606
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6607
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6607
  tail call fastcc void @uart_irq_rx_disable(%struct.device* noundef %5) #26, !dbg !6608
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6609
  store i8* %1, i8** %6, align 4, !dbg !6610
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6611
  store i32 %2, i32* %7, align 4, !dbg !6612
  %8 = icmp eq i32 %2, 0, !dbg !6613
  br i1 %8, label %12, label %9, !dbg !6615

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6616
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %10, i32 noundef 0) #26, !dbg !6618
  %11 = load %struct.device*, %struct.device** %4, align 4, !dbg !6619
  tail call fastcc void @uart_irq_rx_enable(%struct.device* noundef %11) #26, !dbg !6620
  br label %12, !dbg !6621

12:                                               ; preds = %9, %3
  ret i32 0, !dbg !6622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6623 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6625, metadata !DIExpression()), !dbg !6626
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6627, !srcloc !6629
  tail call fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) #26, !dbg !6630
  ret void, !dbg !6631
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !6632 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6636, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.value(metadata i32 %1, metadata !6637, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.value(metadata i32 -1, metadata !6638, metadata !DIExpression()), !dbg !6639
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6640, !srcloc !6642
  %3 = tail call i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef -1) #25, !dbg !6643
  ret void, !dbg !6644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6645 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6647, metadata !DIExpression()), !dbg !6648
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6649, !srcloc !6651
  tail call fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) #26, !dbg !6652
  ret void, !dbg !6653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6654 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6656, metadata !DIExpression()), !dbg !6658
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6659
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6659
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6659
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6657, metadata !DIExpression()), !dbg !6658
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 10, !dbg !6660
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6660
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6662
  br i1 %7, label %9, label %8, !dbg !6663

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6664
  br label %9, !dbg !6666

9:                                                ; preds = %8, %1
  ret void, !dbg !6667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6668 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6670, metadata !DIExpression()), !dbg !6672
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6673
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6673
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6673
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6671, metadata !DIExpression()), !dbg !6672
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 11, !dbg !6674
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6674
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6676
  br i1 %7, label %9, label %8, !dbg !6677

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6678
  br label %9, !dbg !6680

9:                                                ; preds = %8, %1
  ret void, !dbg !6681
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_tx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6682 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6684, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.value(metadata i8* %1, metadata !6685, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.value(metadata i32 %2, metadata !6686, metadata !DIExpression()), !dbg !6687
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6688
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6688
  tail call fastcc void @uart_irq_tx_disable(%struct.device* noundef %5) #26, !dbg !6689
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6690
  store i8* %1, i8** %6, align 4, !dbg !6691
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6692
  store i32 %2, i32* %7, align 4, !dbg !6693
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !6694
  %9 = add i32 %2, -1, !dbg !6695
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %8, i32 noundef %9) #26, !dbg !6696
  ret i32 0, !dbg !6697
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_write(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6698 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6702, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata i8* %1, metadata !6703, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata i32 %2, metadata !6704, metadata !DIExpression()), !dbg !6705
  %4 = tail call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6706
  ret i32 %4, !dbg !6707
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_read(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6708 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6712, metadata !DIExpression()), !dbg !6715
  call void @llvm.dbg.value(metadata i8* %1, metadata !6713, metadata !DIExpression()), !dbg !6715
  call void @llvm.dbg.value(metadata i32 %2, metadata !6714, metadata !DIExpression()), !dbg !6715
  %4 = tail call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6716
  ret i32 %4, !dbg !6717
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_putchar(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !6718 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !6720, metadata !DIExpression()), !dbg !6721
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.value(metadata i8* %2, metadata !6720, metadata !DIExpression(DW_OP_deref)), !dbg !6721
  %3 = call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %2, i32 noundef 1) #25, !dbg !6722
  ret i32 %3, !dbg !6723
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_getchar() local_unnamed_addr #1 !dbg !6724 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6730
  call void @llvm.dbg.value(metadata i8* %1, metadata !6728, metadata !DIExpression(DW_OP_deref)), !dbg !6731
  %2 = call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %1, i32 noundef 1) #25, !dbg !6732
  call void @llvm.dbg.value(metadata i32 %2, metadata !6729, metadata !DIExpression()), !dbg !6731
  %3 = icmp slt i32 %2, 0, !dbg !6733
  %4 = load i8, i8* %1, align 1, !dbg !6735
  %5 = zext i8 %4 to i32, !dbg !6735
  %6 = select i1 %3, i32 %2, i32 %5, !dbg !6735
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6736
  ret i32 %6, !dbg !6736
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_init() local_unnamed_addr #1 !dbg !6737 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !6739, metadata !DIExpression()), !dbg !6744
  %1 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !6745
  br i1 %1, label %2, label %13, !dbg !6747

2:                                                ; preds = %0
  %3 = tail call i32 @tty_init(%struct.tty_serial* noundef nonnull @console_serial, %struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !6748
  call void @llvm.dbg.value(metadata i32 %3, metadata !6740, metadata !DIExpression()), !dbg !6744
  %4 = icmp eq i32 %3, 0, !dbg !6749
  br i1 %4, label %5, label %13, !dbg !6751

5:                                                ; preds = %2
  %6 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6752
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %6, metadata !6741, metadata !DIExpression()), !dbg !6753
  %7 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %6, i32 0, i32 18, !dbg !6754
  %8 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %7, align 4, !dbg !6754
  %9 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %8, null, !dbg !6756
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @tty_set_tx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([512 x i8], [512 x i8]* @console_txbuf, i32 0, i32 0), i32 noundef 512) #25, !dbg !6757
  %12 = tail call i32 @tty_set_rx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @console_rxbuf, i32 0, i32 0), i32 noundef 64) #25, !dbg !6758
  br label %13, !dbg !6759

13:                                               ; preds = %2, %0, %5, %10
  %14 = phi i32 [ 0, %10 ], [ -134, %5 ], [ -19, %0 ], [ %3, %2 ]
  ret i32 %14, !dbg !6760
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !6761 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !6766, metadata !DIExpression()), !dbg !6767
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6768, !srcloc !6770
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !6771
  ret i1 %1, !dbg !6772
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !6773 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !6775, metadata !DIExpression()), !dbg !6776
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !6777
  ret i1 %1, !dbg !6778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6828, metadata !DIExpression()), !dbg !6830
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6829, metadata !DIExpression()), !dbg !6830
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6831
  ret void, !dbg !6832
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6833 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6850, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6851, metadata !DIExpression()), !dbg !6853
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6854
  %4 = load i32, i32* %3, align 4, !dbg !6854
  call void @llvm.dbg.value(metadata i32 %4, metadata !6852, metadata !DIExpression()), !dbg !6853
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6855
  ret void, !dbg !6856
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6857 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6861, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.value(metadata i8* %0, metadata !6862, metadata !DIExpression()), !dbg !6864
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6865
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6865
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6863, metadata !DIExpression()), !dbg !6866
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6866
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6867
  %5 = bitcast i8* %4 to i32*, !dbg !6867
  %6 = load i32, i32* %5, align 4, !dbg !6867
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6868
  store i32 %6, i32* %7, align 4, !dbg !6869
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6870
  unreachable, !dbg !6871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6875, metadata !DIExpression()), !dbg !6876
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6877
  ret void, !dbg !6878
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6883, metadata !DIExpression()), !dbg !6884
  %2 = icmp sgt i32 %0, -1, !dbg !6885
  br i1 %2, label %3, label %8, !dbg !6887

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6888, !srcloc !6890
  %4 = and i32 %0, 31, !dbg !6891
  %5 = shl nuw i32 1, %4, !dbg !6892
  %6 = lshr i32 %0, 5, !dbg !6893
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6894
  store volatile i32 %5, i32* %7, align 4, !dbg !6895
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6896, !srcloc !6897
  br label %8, !dbg !6898

8:                                                ; preds = %3, %1
  ret void, !dbg !6899
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6902, metadata !DIExpression()), !dbg !6903
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6904
  ret void, !dbg !6905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6908, metadata !DIExpression()), !dbg !6909
  %2 = icmp sgt i32 %0, -1, !dbg !6910
  br i1 %2, label %3, label %8, !dbg !6912

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6913
  %5 = shl nuw i32 1, %4, !dbg !6915
  %6 = lshr i32 %0, 5, !dbg !6916
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6917
  store volatile i32 %5, i32* %7, align 4, !dbg !6918
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6919, !srcloc !6923
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6924, !srcloc !6927
  br label %8, !dbg !6928

8:                                                ; preds = %3, %1
  ret void, !dbg !6929
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6934, metadata !DIExpression()), !dbg !6935
  %2 = lshr i32 %0, 5, !dbg !6936
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6937
  %4 = load volatile i32, i32* %3, align 4, !dbg !6937
  %5 = and i32 %0, 31, !dbg !6938
  %6 = shl nuw i32 1, %5, !dbg !6938
  %7 = and i32 %4, %6, !dbg !6939
  ret i32 %7, !dbg !6940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6945, metadata !DIExpression()), !dbg !6948
  call void @llvm.dbg.value(metadata i32 %1, metadata !6946, metadata !DIExpression()), !dbg !6948
  call void @llvm.dbg.value(metadata i32 %2, metadata !6947, metadata !DIExpression()), !dbg !6948
  %4 = add i32 %1, 1, !dbg !6949
  call void @llvm.dbg.value(metadata i32 %4, metadata !6946, metadata !DIExpression()), !dbg !6948
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6952
  ret void, !dbg !6953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6958, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.value(metadata i32 %1, metadata !6959, metadata !DIExpression()), !dbg !6960
  %3 = trunc i32 %1 to i8, !dbg !6961
  %4 = shl i8 %3, 4, !dbg !6961
  %5 = and i32 %0, 15, !dbg !6963
  %6 = add nsw i32 %5, -4, !dbg !6963
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6963
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6963
  %9 = icmp slt i32 %0, 0, !dbg !6963
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6963
  store volatile i8 %4, i8* %10, align 1, !dbg !6961
  ret void, !dbg !6964
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6965 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6967, metadata !DIExpression()), !dbg !6968
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6969
  ret void, !dbg !6970
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6971 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6973
  tail call void @z_arm_int_exit() #25, !dbg !6974
  ret void, !dbg !6975
}

; Function Attrs: optsize
declare !dbg !6976 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6977 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6979 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6981
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6982
  tail call void @z_bss_zero() #25, !dbg !6983
  tail call void @z_data_copy() #25, !dbg !6984
  tail call void @z_arm_interrupt_init() #25, !dbg !6985
  tail call void @z_cstart() #28, !dbg !6986
  unreachable, !dbg !6986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6987 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6988
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6989, !srcloc !6992
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6993, !srcloc !6996
  ret void, !dbg !6997
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6998 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6999
  %2 = and i32 %1, -15728641, !dbg !6999
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6999
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !7000, !srcloc !7007
  call void @llvm.dbg.value(metadata i32 %3, metadata !7005, metadata !DIExpression()) #24, !dbg !7008
  %4 = and i32 %3, -5, !dbg !7009
  call void @llvm.dbg.value(metadata i32 %4, metadata !7010, metadata !DIExpression()) #24, !dbg !7015
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !7017, !srcloc !7018
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7019, !srcloc !6996
  ret void, !dbg !7021
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7025, metadata !DIExpression()), !dbg !7026
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7027
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7028
  store i32 %0, i32* %3, align 4, !dbg !7029
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7030
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7031
  store i32 %4, i32* %5, align 4, !dbg !7032
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7033
  %7 = or i32 %6, 268435456, !dbg !7033
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7033
  call void @llvm.dbg.value(metadata i32 0, metadata !7034, metadata !DIExpression()) #24, !dbg !7037
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7039, !srcloc !7040
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7041
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7042
  %10 = load i32, i32* %9, align 4, !dbg !7042
  ret i32 %10, !dbg !7043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !7044 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7154, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7155, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata i8* %2, metadata !7156, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7157, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata i8* %4, metadata !7158, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata i8* %5, metadata !7159, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata i8* %6, metadata !7160, metadata !DIExpression()), !dbg !7162
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7163
  call void @llvm.dbg.value(metadata i8* %8, metadata !7161, metadata !DIExpression()), !dbg !7162
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7164
  %10 = bitcast i8* %9 to i32*, !dbg !7164
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7165
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7166
  %12 = bitcast i8* %8 to i32*, !dbg !7167
  store i32 %11, i32* %12, align 4, !dbg !7168
  %13 = ptrtoint i8* %4 to i32, !dbg !7169
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7170
  %15 = bitcast i8* %14 to i32*, !dbg !7170
  store i32 %13, i32* %15, align 4, !dbg !7171
  %16 = ptrtoint i8* %5 to i32, !dbg !7172
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7173
  %18 = bitcast i8* %17 to i32*, !dbg !7173
  store i32 %16, i32* %18, align 4, !dbg !7174
  %19 = ptrtoint i8* %6 to i32, !dbg !7175
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7176
  %21 = bitcast i8* %20 to i32*, !dbg !7176
  store i32 %19, i32* %21, align 4, !dbg !7177
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7178
  %23 = bitcast i8* %22 to i32*, !dbg !7178
  store i32 16777216, i32* %23, align 4, !dbg !7179
  %24 = ptrtoint i8* %8 to i32, !dbg !7180
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7181
  store i32 %24, i32* %25, align 8, !dbg !7182
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7183
  store i32 0, i32* %26, align 4, !dbg !7184
  ret void, !dbg !7185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !7186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7191, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.value(metadata i32 %1, metadata !7192, metadata !DIExpression()), !dbg !7197
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7198
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7193, metadata !DIExpression()), !dbg !7197
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7199
  br i1 %4, label %19, label %5, !dbg !7201

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7196, metadata !DIExpression()), !dbg !7197
  %6 = icmp eq i32 %0, -22, !dbg !7202
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7202
  %8 = load i32, i32* %7, align 4, !dbg !7202
  br i1 %6, label %16, label %9, !dbg !7204

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7202
  %11 = icmp ule i32 %10, %0, !dbg !7202
  %12 = icmp ugt i32 %8, %0, !dbg !7202
  %13 = and i1 %12, %11, !dbg !7202
  %14 = icmp ugt i32 %8, %1, !dbg !7202
  %15 = and i1 %14, %13, !dbg !7202
  br i1 %15, label %18, label %19, !dbg !7202

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7202
  br i1 %17, label %18, label %19, !dbg !7204

18:                                               ; preds = %9, %16
  br label %19, !dbg !7205

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7197
  ret i32 %20, !dbg !7207
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7212, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.value(metadata i8* %1, metadata !7213, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7214, metadata !DIExpression()), !dbg !7215
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7216
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7217
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !7218, !srcloc !7219
  unreachable, !dbg !7220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7221 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7239, metadata !DIExpression()), !dbg !7249
  call void @llvm.dbg.value(metadata i32 %1, metadata !7240, metadata !DIExpression()), !dbg !7249
  call void @llvm.dbg.value(metadata i32 %2, metadata !7241, metadata !DIExpression()), !dbg !7249
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7242, metadata !DIExpression()), !dbg !7249
  call void @llvm.dbg.value(metadata i32 0, metadata !7243, metadata !DIExpression()), !dbg !7249
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7250
  %9 = and i32 %8, 511, !dbg !7251
  call void @llvm.dbg.value(metadata i32 %9, metadata !7244, metadata !DIExpression()), !dbg !7249
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7252
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7252
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7253
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7253
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7248, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i32 0, metadata !7255, metadata !DIExpression()) #24, !dbg !7258
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7260, !srcloc !7261
  call void @llvm.dbg.value(metadata i8* %6, metadata !7246, metadata !DIExpression(DW_OP_deref)), !dbg !7249
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7262
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7247, metadata !DIExpression()), !dbg !7249
  call void @llvm.dbg.value(metadata i8* %5, metadata !7245, metadata !DIExpression(DW_OP_deref)), !dbg !7249
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7263
  call void @llvm.dbg.value(metadata i32 %12, metadata !7243, metadata !DIExpression()), !dbg !7249
  %13 = load i8, i8* %5, align 1, !dbg !7264, !range !7266
  call void @llvm.dbg.value(metadata i8 %13, metadata !7245, metadata !DIExpression()), !dbg !7249
  %14 = icmp eq i8 %13, 0, !dbg !7264
  br i1 %14, label %15, label %32, !dbg !7267

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7268
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7269
  %18 = load i8, i8* %6, align 1, !dbg !7270, !range !7266
  call void @llvm.dbg.value(metadata i8 %18, metadata !7246, metadata !DIExpression()), !dbg !7249
  %19 = icmp eq i8 %18, 0, !dbg !7270
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7272
  %21 = load i32, i32* %20, align 4, !dbg !7272
  br i1 %19, label %27, label %22, !dbg !7273

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7274
  %24 = icmp eq i32 %23, 0, !dbg !7277
  br i1 %24, label %25, label %31, !dbg !7278

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7279
  br label %29, !dbg !7281

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7282
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7272
  br label %31, !dbg !7284

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7284
  br label %32, !dbg !7285

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7285
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7285
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7285
  ret void, !dbg !7285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !7286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7291, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata i32 %1, metadata !7292, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata i32 %2, metadata !7293, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata i8* %3, metadata !7294, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata i8 0, metadata !7295, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7296, metadata !DIExpression()), !dbg !7297
  store i8 0, i8* %3, align 1, !dbg !7298
  %5 = icmp ult i32 %2, -16777216, !dbg !7299
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !7301
  br i1 %8, label %16, label %9, !dbg !7301

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !7302
  %11 = icmp eq i32 %10, 0, !dbg !7302
  br i1 %11, label %12, label %13, !dbg !7304

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !7296, metadata !DIExpression()), !dbg !7297
  store i8 1, i8* %3, align 1, !dbg !7307
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !7297
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !7296, metadata !DIExpression()), !dbg !7297
  br label %16, !dbg !7310

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !7297
  ret %struct.__esf* %17, !dbg !7311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7312 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7316, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i32 %1, metadata !7317, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i8* %2, metadata !7318, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i32 0, metadata !7319, metadata !DIExpression()), !dbg !7320
  store i8 0, i8* %2, align 1, !dbg !7321
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7322

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7323
  call void @llvm.dbg.value(metadata i32 %5, metadata !7319, metadata !DIExpression()), !dbg !7320
  br label %11, !dbg !7325

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7326
  call void @llvm.dbg.value(metadata i32 %7, metadata !7319, metadata !DIExpression()), !dbg !7320
  br label %11, !dbg !7327

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7328
  call void @llvm.dbg.value(metadata i32 0, metadata !7319, metadata !DIExpression()), !dbg !7320
  br label %11, !dbg !7329

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7330
  call void @llvm.dbg.value(metadata i32 0, metadata !7319, metadata !DIExpression()), !dbg !7320
  br label %11, !dbg !7331

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7332
  br label %11, !dbg !7333

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !7334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7335 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7339, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i8* %1, metadata !7340, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i32 0, metadata !7341, metadata !DIExpression()), !dbg !7342
  store i8 0, i8* %1, align 1, !dbg !7343
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7344
  %4 = and i32 %3, 2, !dbg !7346
  %5 = icmp eq i32 %4, 0, !dbg !7347
  br i1 %5, label %6, label %33, !dbg !7348

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7349
  %8 = icmp sgt i32 %7, -1, !dbg !7351
  br i1 %8, label %9, label %33, !dbg !7352

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7353
  %11 = and i32 %10, 1073741824, !dbg !7355
  %12 = icmp eq i32 %11, 0, !dbg !7356
  br i1 %12, label %33, label %13, !dbg !7357

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7358
  br i1 %14, label %15, label %18, !dbg !7361

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7362
  %17 = load i32, i32* %16, align 4, !dbg !7362
  call void @llvm.dbg.value(metadata i32 %17, metadata !7341, metadata !DIExpression()), !dbg !7342
  br label %33, !dbg !7364

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7365
  %20 = and i32 %19, 255, !dbg !7367
  %21 = icmp eq i32 %20, 0, !dbg !7368
  br i1 %21, label %24, label %22, !dbg !7369

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7370
  call void @llvm.dbg.value(metadata i32 %23, metadata !7341, metadata !DIExpression()), !dbg !7342
  br label %33, !dbg !7372

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7373
  %26 = and i32 %25, 65280, !dbg !7375
  %27 = icmp eq i32 %26, 0, !dbg !7376
  br i1 %27, label %29, label %28, !dbg !7377

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7378
  call void @llvm.dbg.value(metadata i32 0, metadata !7341, metadata !DIExpression()), !dbg !7342
  br label %33, !dbg !7380

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7381
  %31 = icmp ult i32 %30, 65536, !dbg !7383
  br i1 %31, label %33, label %32, !dbg !7384

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !7385
  call void @llvm.dbg.value(metadata i32 0, metadata !7341, metadata !DIExpression()), !dbg !7342
  br label %33, !dbg !7387

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !7342
  call void @llvm.dbg.value(metadata i32 %34, metadata !7341, metadata !DIExpression()), !dbg !7342
  ret i32 %34, !dbg !7388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7389 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7391, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 %1, metadata !7392, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i8* %2, metadata !7393, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 0, metadata !7394, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 -22, metadata !7395, metadata !DIExpression()), !dbg !7404
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7405
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7407
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7409
  %7 = and i32 %6, 2, !dbg !7410
  %8 = icmp eq i32 %7, 0, !dbg !7411
  br i1 %8, label %19, label %9, !dbg !7412

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7413
  call void @llvm.dbg.value(metadata i32 %10, metadata !7396, metadata !DIExpression()), !dbg !7414
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7415
  %12 = and i32 %11, 128, !dbg !7417
  %13 = icmp eq i32 %12, 0, !dbg !7418
  br i1 %13, label %19, label %14, !dbg !7419

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !7395, metadata !DIExpression()), !dbg !7404
  %15 = icmp eq i32 %1, 0, !dbg !7420
  br i1 %15, label %19, label %16, !dbg !7423

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7424
  %18 = and i32 %17, -129, !dbg !7424
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7424
  br label %19, !dbg !7426

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !7404
  call void @llvm.dbg.value(metadata i32 %20, metadata !7395, metadata !DIExpression()), !dbg !7404
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7427
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7429
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7431
  %24 = and i32 %23, 16, !dbg !7432
  %25 = icmp eq i32 %24, 0, !dbg !7432
  br i1 %25, label %26, label %30, !dbg !7433

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7434
  %28 = and i32 %27, 2, !dbg !7435
  %29 = icmp eq i32 %28, 0, !dbg !7435
  br i1 %29, label %39, label %30, !dbg !7436

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7437
  %32 = and i32 %31, 2048, !dbg !7438
  %33 = icmp eq i32 %32, 0, !dbg !7438
  br i1 %33, label %39, label %34, !dbg !7439

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !7440
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !7441
  call void @llvm.dbg.value(metadata i32 %36, metadata !7399, metadata !DIExpression()), !dbg !7442
  %37 = icmp eq i32 %36, 0, !dbg !7443
  br i1 %37, label %39, label %38, !dbg !7445

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !7446, metadata !DIExpression()) #24, !dbg !7449
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !7452, !srcloc !7453
  call void @llvm.dbg.value(metadata i32 2, metadata !7394, metadata !DIExpression()), !dbg !7404
  br label %39, !dbg !7454

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !7404
  call void @llvm.dbg.value(metadata i32 %40, metadata !7394, metadata !DIExpression()), !dbg !7404
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7455
  %42 = and i32 %41, 32, !dbg !7457
  %43 = icmp eq i32 %42, 0, !dbg !7458
  br i1 %43, label %47, label %44, !dbg !7459

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7460
  %46 = and i32 %45, -8193, !dbg !7460
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7460
  br label %47, !dbg !7462

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7463
  %49 = or i32 %48, 255, !dbg !7463
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7463
  store i8 0, i8* %2, align 1, !dbg !7464
  ret i32 %40, !dbg !7465
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !7466 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7470, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.value(metadata i32 %0, metadata !7471, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.value(metadata i8* %1, metadata !7472, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.value(metadata i32 0, metadata !7473, metadata !DIExpression()), !dbg !7477
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7478
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7480
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7482
  %6 = and i32 %5, 512, !dbg !7483
  %7 = icmp eq i32 %6, 0, !dbg !7483
  br i1 %7, label %18, label %8, !dbg !7484

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7485
  call void @llvm.dbg.value(metadata i32 %9, metadata !7474, metadata !DIExpression()), !dbg !7486
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7487
  %11 = and i32 %10, 32768, !dbg !7489
  %12 = icmp ne i32 %11, 0, !dbg !7490
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7491
  br i1 %14, label %15, label %18, !dbg !7491

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7492
  %17 = and i32 %16, -32769, !dbg !7492
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7492
  br label %18, !dbg !7496

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7497
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7499
  %21 = and i32 %20, 256, !dbg !7501
  %22 = icmp eq i32 %21, 0, !dbg !7502
  br i1 %22, label %23, label %25, !dbg !7503

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7504
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7506
  %27 = or i32 %26, 65280, !dbg !7506
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7506
  store i8 0, i8* %1, align 1, !dbg !7507
  ret void, !dbg !7508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !7509 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7515, metadata !DIExpression()), !dbg !7517
  call void @llvm.dbg.value(metadata i32 0, metadata !7516, metadata !DIExpression()), !dbg !7517
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7518
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7520
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7522
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7524
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7526
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7528
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7530
  %8 = or i32 %7, -65536, !dbg !7530
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7530
  ret void, !dbg !7531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !7532 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7536, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i8* %0, metadata !7537, metadata !DIExpression()), !dbg !7538
  store i8 0, i8* %0, align 1, !dbg !7539
  ret void, !dbg !7540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7541 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7545, metadata !DIExpression()), !dbg !7548
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7549
  %3 = load i32, i32* %2, align 4, !dbg !7549
  %4 = inttoptr i32 %3 to i16*, !dbg !7550
  call void @llvm.dbg.value(metadata i16* %4, metadata !7546, metadata !DIExpression()), !dbg !7548
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7551
  %6 = or i32 %5, 256, !dbg !7551
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7551
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7552, !srcloc !7555
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7556, !srcloc !7559
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7560
  %8 = load i16, i16* %7, align 2, !dbg !7561
  call void @llvm.dbg.value(metadata i16 %8, metadata !7547, metadata !DIExpression()), !dbg !7548
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7562
  %10 = and i32 %9, -257, !dbg !7562
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7562
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7563, !srcloc !7555
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7565, !srcloc !7559
  %11 = icmp eq i16 %8, -8446, !dbg !7567
  ret i1 %11, !dbg !7569
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7570 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7571
  %2 = or i32 %1, 16, !dbg !7571
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7571
  ret void, !dbg !7572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7573 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7576, metadata !DIExpression()), !dbg !7577
  br label %1, !dbg !7578

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7576, metadata !DIExpression()), !dbg !7577
  tail call fastcc void @__NVIC_SetPriority.19(i32 noundef %2) #26, !dbg !7580
  %3 = add nuw nsw i32 %2, 1, !dbg !7583
  call void @llvm.dbg.value(metadata i32 %3, metadata !7576, metadata !DIExpression()), !dbg !7577
  %4 = icmp eq i32 %3, 97, !dbg !7584
  br i1 %4, label %5, label %1, !dbg !7578, !llvm.loop !7585

5:                                                ; preds = %1
  ret void, !dbg !7587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.19(i32 noundef %0) unnamed_addr #15 !dbg !7588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7590, metadata !DIExpression()), !dbg !7592
  call void @llvm.dbg.value(metadata i32 1, metadata !7591, metadata !DIExpression()), !dbg !7592
  %2 = and i32 %0, 15, !dbg !7593
  %3 = add nsw i32 %2, -4, !dbg !7593
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7593
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7593
  %6 = icmp slt i32 %0, 0, !dbg !7593
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7593
  store volatile i8 16, i8* %7, align 1, !dbg !7594
  ret void, !dbg !7596
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7597 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7703, metadata !DIExpression()), !dbg !7704
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7705
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7707
  br i1 %3, label %4, label %12, !dbg !7708

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7709, !srcloc !7721
  call void @llvm.dbg.value(metadata i32 %5, metadata !7712, metadata !DIExpression()) #24, !dbg !7722
  %6 = icmp eq i32 %5, 0, !dbg !7723
  br i1 %6, label %12, label %7, !dbg !7724

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7725
  %9 = or i32 %8, 268435456, !dbg !7725
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7725
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7727
  %11 = and i32 %10, -32769, !dbg !7727
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7727
  br label %12, !dbg !7728

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7729
  ret void, !dbg !7730
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7731 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7732
  ret void, !dbg !7733
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !361 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !480, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8 0, metadata !481, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 64, metadata !483, metadata !DIExpression()), !dbg !7734
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7735
  %3 = load i32, i32* %2, align 4, !dbg !7735
  %4 = add i32 %3, -64, !dbg !7737
  call void @llvm.dbg.value(metadata i32 %4, metadata !482, metadata !DIExpression()), !dbg !7734
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7738
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7739
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7740
  call void @llvm.dbg.value(metadata i8 1, metadata !481, metadata !DIExpression()), !dbg !7734
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7741
  ret void, !dbg !7742
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7743 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7744
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7745, !srcloc !7748
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7749, !srcloc !7752
  ret void, !dbg !7753
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7754 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7755, !srcloc !7758
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7759
  ret void, !dbg !7760
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7761 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7776, metadata !DIExpression()), !dbg !7780
  call void @llvm.dbg.value(metadata i8 %1, metadata !7777, metadata !DIExpression()), !dbg !7780
  call void @llvm.dbg.value(metadata i32 %2, metadata !7778, metadata !DIExpression()), !dbg !7780
  call void @llvm.dbg.value(metadata i32 %3, metadata !7779, metadata !DIExpression()), !dbg !7780
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7781
  ret void, !dbg !7783
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7784 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7789, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i8 %1, metadata !7790, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i32 undef, metadata !7791, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i32 undef, metadata !7792, metadata !DIExpression()), !dbg !7794
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7795
  call void @llvm.dbg.value(metadata i8 %3, metadata !7793, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7794
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7796
  call void @llvm.dbg.value(metadata i32 %4, metadata !7793, metadata !DIExpression()), !dbg !7794
  %5 = trunc i32 %4 to i8, !dbg !7797
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7798
  ret void, !dbg !7799
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7800 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7804, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.value(metadata i8 %1, metadata !7805, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.value(metadata i8 %2, metadata !7806, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.value(metadata i1 %3, metadata !7807, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7810
  %5 = zext i8 %2 to i32, !dbg !7811
  call void @llvm.dbg.value(metadata i32 %5, metadata !7809, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.value(metadata i32 0, metadata !7808, metadata !DIExpression()), !dbg !7810
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7809, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.value(metadata i32 0, metadata !7808, metadata !DIExpression()), !dbg !7810
  %7 = icmp eq i8 %1, 0, !dbg !7812
  br i1 %7, label %29, label %8, !dbg !7815

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7809, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.value(metadata i32 %10, metadata !7808, metadata !DIExpression()), !dbg !7810
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7816
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7819
  %13 = load i32, i32* %12, align 4, !dbg !7819
  %14 = icmp eq i32 %13, 0, !dbg !7820
  br i1 %14, label %25, label %15, !dbg !7821

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7822

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7824
  %18 = icmp eq i32 %17, 0, !dbg !7824
  br i1 %18, label %29, label %19, !dbg !7825

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7826
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7827
  call void @llvm.dbg.value(metadata i32 %21, metadata !7809, metadata !DIExpression()), !dbg !7810
  %22 = icmp eq i32 %21, -22, !dbg !7828
  br i1 %22, label %29, label %23, !dbg !7830

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7831
  call void @llvm.dbg.value(metadata i32 %24, metadata !7809, metadata !DIExpression()), !dbg !7810
  br label %25, !dbg !7832

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7810
  call void @llvm.dbg.value(metadata i32 %26, metadata !7809, metadata !DIExpression()), !dbg !7810
  %27 = add nuw nsw i32 %10, 1, !dbg !7833
  call void @llvm.dbg.value(metadata i32 %27, metadata !7808, metadata !DIExpression()), !dbg !7810
  %28 = icmp eq i32 %27, %6, !dbg !7812
  br i1 %28, label %29, label %8, !dbg !7815, !llvm.loop !7834

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7810
  ret i32 %30, !dbg !7836
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7837 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7841, metadata !DIExpression()), !dbg !7843
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7844
  %3 = load i32, i32* %2, align 4, !dbg !7844
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7845, !range !3964
  %5 = icmp ult i32 %4, 2, !dbg !7845
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7846
  br i1 %7, label %8, label %15, !dbg !7846

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7847
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7848
  %11 = load i32, i32* %10, align 4, !dbg !7848
  %12 = and i32 %11, %9, !dbg !7849
  %13 = icmp eq i32 %12, 0, !dbg !7850
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7842, metadata !DIExpression()), !dbg !7843
  ret i32 %16, !dbg !7851
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7852 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7856, metadata !DIExpression()), !dbg !7859
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7857, metadata !DIExpression()), !dbg !7859
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7860
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7860
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7858, metadata !DIExpression()), !dbg !7861
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7862
  %6 = load i32, i32* %5, align 4, !dbg !7862
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7863
  store i32 %6, i32* %7, align 4, !dbg !7864
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7865
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7866
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7867
  %11 = load i32, i32* %10, align 4, !dbg !7867
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7868
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7869
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7870
  ret i32 %12, !dbg !7871
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7872 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7879, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7880, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i32 undef, metadata !7881, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i32 %2, metadata !7882, metadata !DIExpression()), !dbg !7883
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7884
  %5 = load i32, i32* %4, align 4, !dbg !7884
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7885
  %7 = or i32 %6, %5, !dbg !7886
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7887
  store i32 %7, i32* %8, align 4, !dbg !7888
  ret void, !dbg !7889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7890 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7894, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7895, metadata !DIExpression()), !dbg !7896
  %3 = zext i8 %0 to i32, !dbg !7897
  %4 = icmp ugt i8 %0, 7, !dbg !7899
  br i1 %4, label %6, label %5, !dbg !7900

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7901
  br label %6, !dbg !7902

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7896
  ret i32 %7, !dbg !7903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7908, metadata !DIExpression()), !dbg !7910
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7909, metadata !DIExpression()), !dbg !7910
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7911
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7912
  %4 = load i32, i32* %3, align 4, !dbg !7912
  %5 = and i32 %4, -32, !dbg !7913
  %6 = or i32 %5, %0, !dbg !7914
  %7 = or i32 %6, 16, !dbg !7914
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7915
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7916
  %9 = load i32, i32* %8, align 4, !dbg !7916
  %10 = or i32 %9, 1, !dbg !7917
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7918
  ret void, !dbg !7919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7923, metadata !DIExpression()), !dbg !7924
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7925
  ret void, !dbg !7926
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7931, metadata !DIExpression()), !dbg !7932
  %2 = icmp ult i32 %0, 33, !dbg !7933
  br i1 %2, label %11, label %3, !dbg !7935

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7936
  br i1 %4, label %11, label %5, !dbg !7938

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7939
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7940, !range !3964
  %8 = mul nsw i32 %7, -2, !dbg !7941
  %9 = add nsw i32 %8, 62, !dbg !7941
  %10 = and i32 %9, 62, !dbg !7942
  br label %11, !dbg !7943

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7932
  ret i32 %12, !dbg !7944
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7945 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7949, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.value(metadata i8 %1, metadata !7950, metadata !DIExpression()), !dbg !7951
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7952
  ret void, !dbg !7954
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7955 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7959, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.value(metadata i8 %1, metadata !7960, metadata !DIExpression()), !dbg !7966
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7967
  call void @llvm.dbg.value(metadata i8 %3, metadata !7961, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7966
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7968
  call void @llvm.dbg.value(metadata i32 %4, metadata !7961, metadata !DIExpression()), !dbg !7966
  %5 = icmp ne i32 %4, -22, !dbg !7969
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7970
  call void @llvm.dbg.value(metadata i32 %4, metadata !7962, metadata !DIExpression()), !dbg !7971
  br i1 %7, label %8, label %12, !dbg !7970

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7962, metadata !DIExpression()), !dbg !7971
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7972
  %10 = add i32 %9, 1, !dbg !7975
  call void @llvm.dbg.value(metadata i32 %10, metadata !7962, metadata !DIExpression()), !dbg !7971
  %11 = icmp eq i32 %10, 8, !dbg !7976
  br i1 %11, label %12, label %8, !dbg !7977, !llvm.loop !7978

12:                                               ; preds = %8, %2
  ret void, !dbg !7980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7984, metadata !DIExpression()), !dbg !7985
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7986
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7987
  ret void, !dbg !7988
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7989 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7992
  %2 = icmp ugt i32 %1, 8, !dbg !7994
  br i1 %2, label %14, label %3, !dbg !7995

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7996
  call void @llvm.dbg.value(metadata i32 0, metadata !7991, metadata !DIExpression()), !dbg !7997
  %4 = icmp eq i32 %1, 0, !dbg !7998
  br i1 %4, label %12, label %5, !dbg !8001

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8001

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7991, metadata !DIExpression()), !dbg !7997
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8002
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !8004
  %10 = add nuw i32 %8, 1, !dbg !8005
  call void @llvm.dbg.value(metadata i32 %10, metadata !7991, metadata !DIExpression()), !dbg !7997
  %11 = icmp eq i32 %10, %1, !dbg !7998
  br i1 %11, label %12, label %7, !dbg !8001, !llvm.loop !8006

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8008
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8009
  tail call void @arm_core_mpu_enable() #26, !dbg !8010
  br label %14, !dbg !8011

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7997
  ret i32 %15, !dbg !8012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8013 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8020, metadata !DIExpression()), !dbg !8023
  call void @llvm.dbg.value(metadata i8* %1, metadata !8021, metadata !DIExpression()), !dbg !8023
  call void @llvm.dbg.value(metadata i8* %0, metadata !8022, metadata !DIExpression()), !dbg !8023
  %3 = load i8, i8* %1, align 1, !dbg !8024
  %4 = icmp eq i8 %3, 0, !dbg !8025
  br i1 %4, label %13, label %5, !dbg !8026

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8020, metadata !DIExpression()), !dbg !8023
  call void @llvm.dbg.value(metadata i8* %8, metadata !8021, metadata !DIExpression()), !dbg !8023
  store i8 %6, i8* %7, align 1, !dbg !8027
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8029
  call void @llvm.dbg.value(metadata i8* %9, metadata !8020, metadata !DIExpression()), !dbg !8023
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8030
  call void @llvm.dbg.value(metadata i8* %10, metadata !8021, metadata !DIExpression()), !dbg !8023
  %11 = load i8, i8* %10, align 1, !dbg !8024
  %12 = icmp eq i8 %11, 0, !dbg !8025
  br i1 %12, label %13, label %5, !dbg !8026, !llvm.loop !8031

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8033
  ret i8* %0, !dbg !8034
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8035 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8039, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i8* %1, metadata !8040, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i32 %2, metadata !8041, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i8* %0, metadata !8042, metadata !DIExpression()), !dbg !8043
  %4 = icmp eq i32 %2, 0, !dbg !8044
  br i1 %4, label %22, label %5, !dbg !8045

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8039, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i32 %7, metadata !8041, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i8* %8, metadata !8040, metadata !DIExpression()), !dbg !8043
  %9 = load i8, i8* %8, align 1, !dbg !8046
  %10 = icmp eq i8 %9, 0, !dbg !8047
  br i1 %10, label %16, label %11, !dbg !8048

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8049
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8051
  call void @llvm.dbg.value(metadata i8* %12, metadata !8040, metadata !DIExpression()), !dbg !8043
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8052
  call void @llvm.dbg.value(metadata i8* %13, metadata !8039, metadata !DIExpression()), !dbg !8043
  %14 = add i32 %7, -1, !dbg !8053
  call void @llvm.dbg.value(metadata i32 %14, metadata !8041, metadata !DIExpression()), !dbg !8043
  %15 = icmp eq i32 %14, 0, !dbg !8044
  br i1 %15, label %22, label %5, !dbg !8045, !llvm.loop !8054

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8039, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i32 %18, metadata !8041, metadata !DIExpression()), !dbg !8043
  store i8 0, i8* %17, align 1, !dbg !8056
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8058
  call void @llvm.dbg.value(metadata i8* %19, metadata !8039, metadata !DIExpression()), !dbg !8043
  %20 = add i32 %18, -1, !dbg !8059
  call void @llvm.dbg.value(metadata i32 %20, metadata !8041, metadata !DIExpression()), !dbg !8043
  %21 = icmp eq i32 %20, 0, !dbg !8060
  br i1 %21, label %22, label %16, !dbg !8061, !llvm.loop !8062

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8064
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8065 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8069, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i32 %1, metadata !8070, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i32 %1, metadata !8071, metadata !DIExpression()), !dbg !8072
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8073

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8069, metadata !DIExpression()), !dbg !8072
  %6 = load i8, i8* %5, align 1, !dbg !8074
  %7 = icmp eq i8 %6, %3, !dbg !8075
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8076
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8077
  call void @llvm.dbg.value(metadata i8* %10, metadata !8069, metadata !DIExpression()), !dbg !8072
  br i1 %9, label %11, label %4, !dbg !8076, !llvm.loop !8079

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8081
  ret i8* %12, !dbg !8082
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8083 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8085, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i32 %1, metadata !8086, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i8* null, metadata !8087, metadata !DIExpression()), !dbg !8088
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8089

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8088
  call void @llvm.dbg.value(metadata i8* %6, metadata !8087, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i8* %5, metadata !8085, metadata !DIExpression()), !dbg !8088
  %7 = load i8, i8* %5, align 1, !dbg !8090
  %8 = icmp eq i8 %7, %3, !dbg !8093
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8094
  call void @llvm.dbg.value(metadata i8* %9, metadata !8087, metadata !DIExpression()), !dbg !8088
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8095
  call void @llvm.dbg.value(metadata i8* %10, metadata !8085, metadata !DIExpression()), !dbg !8088
  %11 = icmp eq i8 %7, 0, !dbg !8096
  br i1 %11, label %12, label %4, !dbg !8096, !llvm.loop !8097

12:                                               ; preds = %4
  ret i8* %9, !dbg !8099
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !8100 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8104, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.value(metadata i32 0, metadata !8105, metadata !DIExpression()), !dbg !8106
  %2 = load i8, i8* %0, align 1, !dbg !8107
  %3 = icmp eq i8 %2, 0, !dbg !8108
  br i1 %3, label %11, label %4, !dbg !8109

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8105, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.value(metadata i8* %6, metadata !8104, metadata !DIExpression()), !dbg !8106
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8110
  call void @llvm.dbg.value(metadata i8* %7, metadata !8104, metadata !DIExpression()), !dbg !8106
  %8 = add i32 %5, 1, !dbg !8112
  call void @llvm.dbg.value(metadata i32 %8, metadata !8105, metadata !DIExpression()), !dbg !8106
  %9 = load i8, i8* %7, align 1, !dbg !8107
  %10 = icmp eq i8 %9, 0, !dbg !8108
  br i1 %10, label %11, label %4, !dbg !8109, !llvm.loop !8113

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8106
  ret i32 %12, !dbg !8115
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8116 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8120, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i32 %1, metadata !8121, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i32 0, metadata !8122, metadata !DIExpression()), !dbg !8123
  %3 = load i8, i8* %0, align 1, !dbg !8124
  %4 = icmp ne i8 %3, 0, !dbg !8125
  %5 = icmp ne i32 %1, 0, !dbg !8126
  %6 = and i1 %4, %5, !dbg !8126
  br i1 %6, label %7, label %16, !dbg !8127

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8122, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i8* %9, metadata !8120, metadata !DIExpression()), !dbg !8123
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8128
  call void @llvm.dbg.value(metadata i8* %10, metadata !8120, metadata !DIExpression()), !dbg !8123
  %11 = add nuw i32 %8, 1, !dbg !8130
  call void @llvm.dbg.value(metadata i32 %11, metadata !8122, metadata !DIExpression()), !dbg !8123
  %12 = load i8, i8* %10, align 1, !dbg !8124
  %13 = icmp ne i8 %12, 0, !dbg !8125
  %14 = icmp ult i32 %11, %1, !dbg !8126
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8126
  br i1 %15, label %7, label %16, !dbg !8127, !llvm.loop !8131

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8123
  ret i32 %17, !dbg !8133
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !8134 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8138, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i8* %1, metadata !8139, metadata !DIExpression()), !dbg !8140
  %3 = load i8, i8* %0, align 1, !dbg !8141
  %4 = load i8, i8* %1, align 1, !dbg !8142
  %5 = icmp ne i8 %3, %4, !dbg !8143
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8144
  br i1 %7, label %18, label %8, !dbg !8144

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8139, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i8* %10, metadata !8138, metadata !DIExpression()), !dbg !8140
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8145
  call void @llvm.dbg.value(metadata i8* %11, metadata !8138, metadata !DIExpression()), !dbg !8140
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8147
  call void @llvm.dbg.value(metadata i8* %12, metadata !8139, metadata !DIExpression()), !dbg !8140
  %13 = load i8, i8* %11, align 1, !dbg !8141
  %14 = load i8, i8* %12, align 1, !dbg !8142
  %15 = icmp ne i8 %13, %14, !dbg !8143
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8144
  br i1 %17, label %18, label %8, !dbg !8144, !llvm.loop !8148

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8141
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8142
  %21 = zext i8 %19 to i32, !dbg !8151
  %22 = zext i8 %20 to i32, !dbg !8152
  %23 = sub nsw i32 %21, %22, !dbg !8153
  ret i32 %23, !dbg !8154
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8155 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8159, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i8* %1, metadata !8160, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i32 %2, metadata !8161, metadata !DIExpression()), !dbg !8162
  %4 = icmp eq i32 %2, 0, !dbg !8163
  br i1 %4, label %23, label %5, !dbg !8163

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8161, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i8* %7, metadata !8160, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i8* %8, metadata !8159, metadata !DIExpression()), !dbg !8162
  %9 = load i8, i8* %8, align 1, !dbg !8164
  %10 = load i8, i8* %7, align 1, !dbg !8165
  %11 = icmp ne i8 %9, %10, !dbg !8166
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8167
  br i1 %13, label %19, label %14, !dbg !8167

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8168
  call void @llvm.dbg.value(metadata i8* %15, metadata !8159, metadata !DIExpression()), !dbg !8162
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8170
  call void @llvm.dbg.value(metadata i8* %16, metadata !8160, metadata !DIExpression()), !dbg !8162
  %17 = add i32 %6, -1, !dbg !8171
  call void @llvm.dbg.value(metadata i32 %17, metadata !8161, metadata !DIExpression()), !dbg !8162
  %18 = icmp eq i32 %17, 0, !dbg !8163
  br i1 %18, label %23, label %5, !dbg !8163, !llvm.loop !8172

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8175
  %21 = zext i8 %10 to i32, !dbg !8176
  %22 = sub nsw i32 %20, %21, !dbg !8177
  br label %23, !dbg !8178

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8178
  ret i32 %24, !dbg !8179
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8180 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8185, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata i8* %1, metadata !8186, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata i8** %2, metadata !8187, metadata !DIExpression()), !dbg !8190
  %4 = icmp eq i8* %0, null, !dbg !8191
  br i1 %4, label %5, label %7, !dbg !8191

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8192
  br label %7, !dbg !8191

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8191
  call void @llvm.dbg.value(metadata i8* %8, metadata !8188, metadata !DIExpression()), !dbg !8190
  %9 = load i8, i8* %8, align 1, !dbg !8193
  %10 = icmp eq i8 %9, 0, !dbg !8193
  br i1 %10, label %33, label %11, !dbg !8194

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8188, metadata !DIExpression()), !dbg !8190
  %14 = zext i8 %12 to i32, !dbg !8193
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8195
  %16 = icmp eq i8* %15, null, !dbg !8194
  br i1 %16, label %21, label %17, !dbg !8196

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8197
  call void @llvm.dbg.value(metadata i8* %18, metadata !8188, metadata !DIExpression()), !dbg !8190
  %19 = load i8, i8* %18, align 1, !dbg !8193
  %20 = icmp eq i8 %19, 0, !dbg !8193
  br i1 %20, label %33, label %11, !dbg !8194, !llvm.loop !8199

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8189, metadata !DIExpression()), !dbg !8190
  %24 = zext i8 %22 to i32, !dbg !8201
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8202
  %26 = icmp eq i8* %25, null, !dbg !8203
  br i1 %26, label %27, label %31, !dbg !8204

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8205
  call void @llvm.dbg.value(metadata i8* %28, metadata !8189, metadata !DIExpression()), !dbg !8190
  %29 = load i8, i8* %28, align 1, !dbg !8201
  %30 = icmp eq i8 %29, 0, !dbg !8201
  br i1 %30, label %33, label %21, !dbg !8207, !llvm.loop !8208

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8210
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8213
  br label %33, !dbg !8214

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8190
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8190
  store i8* %34, i8** %2, align 4, !dbg !8190
  ret i8* %35, !dbg !8215
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8216 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8218, metadata !DIExpression()), !dbg !8220
  call void @llvm.dbg.value(metadata i8* %1, metadata !8219, metadata !DIExpression()), !dbg !8220
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8221
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8222
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8223
  ret i8* %0, !dbg !8224
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8225 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8227, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata i8* %1, metadata !8228, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata i32 %2, metadata !8229, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata i8* %0, metadata !8230, metadata !DIExpression()), !dbg !8232
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8233
  call void @llvm.dbg.value(metadata i32 %4, metadata !8231, metadata !DIExpression()), !dbg !8232
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8234
  call void @llvm.dbg.value(metadata i8* %5, metadata !8227, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata i8* %1, metadata !8228, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata i32 %2, metadata !8229, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata i32 %2, metadata !8229, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8232
  %6 = icmp eq i32 %2, 0, !dbg !8235
  br i1 %6, label %18, label %7, !dbg !8236

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8237
  call void @llvm.dbg.value(metadata i8* %9, metadata !8227, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata i8* %10, metadata !8228, metadata !DIExpression()), !dbg !8232
  %12 = load i8, i8* %10, align 1, !dbg !8238
  %13 = icmp eq i8 %12, 0, !dbg !8239
  br i1 %13, label %18, label %14, !dbg !8240

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8241
  call void @llvm.dbg.value(metadata i8* %15, metadata !8228, metadata !DIExpression()), !dbg !8232
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8243
  call void @llvm.dbg.value(metadata i8* %16, metadata !8227, metadata !DIExpression()), !dbg !8232
  store i8 %12, i8* %9, align 1, !dbg !8244
  call void @llvm.dbg.value(metadata i32 %11, metadata !8229, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata i32 %11, metadata !8229, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8232
  %17 = icmp eq i32 %11, 0, !dbg !8235
  br i1 %17, label %18, label %7, !dbg !8236, !llvm.loop !8245

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8232
  store i8 0, i8* %19, align 1, !dbg !8247
  ret i8* %0, !dbg !8248
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8249 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8253, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i8* %1, metadata !8254, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i32 %2, metadata !8255, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i8* %0, metadata !8256, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i8* %1, metadata !8257, metadata !DIExpression()), !dbg !8258
  %4 = icmp eq i32 %2, 0, !dbg !8259
  br i1 %4, label %31, label %5, !dbg !8261

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8257, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i8* %0, metadata !8256, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i32 %2, metadata !8255, metadata !DIExpression()), !dbg !8258
  %6 = add i32 %2, -1, !dbg !8262
  call void @llvm.dbg.value(metadata i32 %6, metadata !8255, metadata !DIExpression()), !dbg !8258
  %7 = icmp eq i32 %6, 0, !dbg !8263
  br i1 %7, label %23, label %8, !dbg !8264

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8265
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8265
  br label %11, !dbg !8265

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8257, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i8* %14, metadata !8256, metadata !DIExpression()), !dbg !8258
  %15 = load i8, i8* %14, align 1, !dbg !8266
  %16 = load i8, i8* %13, align 1, !dbg !8267
  %17 = icmp eq i8 %15, %16, !dbg !8268
  br i1 %17, label %18, label %23, !dbg !8265

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8269
  call void @llvm.dbg.value(metadata i8* %19, metadata !8256, metadata !DIExpression()), !dbg !8258
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8271
  call void @llvm.dbg.value(metadata i8* %20, metadata !8257, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i32 %12, metadata !8255, metadata !DIExpression()), !dbg !8258
  %21 = add i32 %12, -1, !dbg !8262
  call void @llvm.dbg.value(metadata i32 %21, metadata !8255, metadata !DIExpression()), !dbg !8258
  %22 = icmp eq i32 %21, 0, !dbg !8263
  br i1 %22, label %23, label %11, !dbg !8264, !llvm.loop !8272

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8258
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8258
  %26 = load i8, i8* %24, align 1, !dbg !8274
  %27 = zext i8 %26 to i32, !dbg !8274
  %28 = load i8, i8* %25, align 1, !dbg !8275
  %29 = zext i8 %28 to i32, !dbg !8275
  %30 = sub nsw i32 %27, %29, !dbg !8276
  br label %31, !dbg !8277

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8258
  ret i32 %32, !dbg !8278
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8279 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8283, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.value(metadata i8* %1, metadata !8284, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.value(metadata i32 %2, metadata !8285, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.value(metadata i8* %0, metadata !8286, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.value(metadata i8* %1, metadata !8287, metadata !DIExpression()), !dbg !8288
  %4 = ptrtoint i8* %0 to i32, !dbg !8289
  %5 = ptrtoint i8* %1 to i32, !dbg !8289
  %6 = sub i32 %4, %5, !dbg !8289
  %7 = icmp ult i32 %6, %2, !dbg !8291
  br i1 %7, label %10, label %8, !dbg !8292

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8287, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.value(metadata i8* %0, metadata !8286, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.value(metadata i32 %2, metadata !8285, metadata !DIExpression()), !dbg !8288
  %9 = icmp eq i32 %2, 0, !dbg !8293
  br i1 %9, label %26, label %17, !dbg !8295

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8285, metadata !DIExpression()), !dbg !8288
  %12 = add i32 %11, -1, !dbg !8296
  call void @llvm.dbg.value(metadata i32 %12, metadata !8285, metadata !DIExpression()), !dbg !8288
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8299
  %14 = load i8, i8* %13, align 1, !dbg !8299
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8300
  store i8 %14, i8* %15, align 1, !dbg !8301
  %16 = icmp eq i32 %12, 0, !dbg !8302
  br i1 %16, label %26, label %10, !dbg !8303, !llvm.loop !8304

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8287, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.value(metadata i8* %19, metadata !8286, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.value(metadata i32 %20, metadata !8285, metadata !DIExpression()), !dbg !8288
  %21 = load i8, i8* %18, align 1, !dbg !8306
  store i8 %21, i8* %19, align 1, !dbg !8308
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8309
  call void @llvm.dbg.value(metadata i8* %22, metadata !8286, metadata !DIExpression()), !dbg !8288
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8310
  call void @llvm.dbg.value(metadata i8* %23, metadata !8287, metadata !DIExpression()), !dbg !8288
  %24 = add i32 %20, -1, !dbg !8311
  call void @llvm.dbg.value(metadata i32 %24, metadata !8285, metadata !DIExpression()), !dbg !8288
  %25 = icmp eq i32 %24, 0, !dbg !8293
  br i1 %25, label %26, label %17, !dbg !8295, !llvm.loop !8312

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8314
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8315 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8321, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata i8* %1, metadata !8322, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata i32 %2, metadata !8323, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata i8* %0, metadata !8324, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata i8* %1, metadata !8325, metadata !DIExpression()), !dbg !8326
  %4 = icmp eq i32 %2, 0, !dbg !8327
  br i1 %4, label %14, label %5, !dbg !8328

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8325, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata i8* %7, metadata !8324, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata i32 %8, metadata !8323, metadata !DIExpression()), !dbg !8326
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8329
  call void @llvm.dbg.value(metadata i8* %9, metadata !8325, metadata !DIExpression()), !dbg !8326
  %10 = load i8, i8* %6, align 1, !dbg !8331
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8332
  call void @llvm.dbg.value(metadata i8* %11, metadata !8324, metadata !DIExpression()), !dbg !8326
  store i8 %10, i8* %7, align 1, !dbg !8333
  %12 = add i32 %8, -1, !dbg !8334
  call void @llvm.dbg.value(metadata i32 %12, metadata !8323, metadata !DIExpression()), !dbg !8326
  %13 = icmp eq i32 %12, 0, !dbg !8327
  br i1 %13, label %14, label %5, !dbg !8328, !llvm.loop !8335

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8337
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8338 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8342, metadata !DIExpression()), !dbg !8347
  call void @llvm.dbg.value(metadata i32 %1, metadata !8343, metadata !DIExpression()), !dbg !8347
  call void @llvm.dbg.value(metadata i32 %2, metadata !8344, metadata !DIExpression()), !dbg !8347
  call void @llvm.dbg.value(metadata i8* %0, metadata !8345, metadata !DIExpression()), !dbg !8347
  %4 = trunc i32 %1 to i8, !dbg !8348
  call void @llvm.dbg.value(metadata i8 %4, metadata !8346, metadata !DIExpression()), !dbg !8347
  call void @llvm.dbg.value(metadata i32 %2, metadata !8344, metadata !DIExpression()), !dbg !8347
  call void @llvm.dbg.value(metadata i8* %0, metadata !8345, metadata !DIExpression()), !dbg !8347
  %5 = icmp eq i32 %2, 0, !dbg !8349
  br i1 %5, label %12, label %6, !dbg !8350

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8344, metadata !DIExpression()), !dbg !8347
  call void @llvm.dbg.value(metadata i8* %8, metadata !8345, metadata !DIExpression()), !dbg !8347
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8351
  call void @llvm.dbg.value(metadata i8* %9, metadata !8345, metadata !DIExpression()), !dbg !8347
  store i8 %4, i8* %8, align 1, !dbg !8353
  %10 = add i32 %7, -1, !dbg !8354
  call void @llvm.dbg.value(metadata i32 %10, metadata !8344, metadata !DIExpression()), !dbg !8347
  %11 = icmp eq i32 %10, 0, !dbg !8349
  br i1 %11, label %12, label %6, !dbg !8350, !llvm.loop !8355

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8357
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8358 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8362, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.value(metadata i32 %1, metadata !8363, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.value(metadata i32 %2, metadata !8364, metadata !DIExpression()), !dbg !8368
  %4 = icmp eq i32 %2, 0, !dbg !8369
  br i1 %4, label %17, label %5, !dbg !8370

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8371

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8372
  call void @llvm.dbg.value(metadata i8* %9, metadata !8365, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i32 %8, metadata !8364, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.value(metadata i8* %9, metadata !8365, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8372
  %10 = load i8, i8* %9, align 1, !dbg !8373
  %11 = icmp eq i8 %10, %6, !dbg !8376
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8377
  call void @llvm.dbg.value(metadata i8* %12, metadata !8365, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i32 %13, metadata !8364, metadata !DIExpression()), !dbg !8368
  br i1 %15, label %16, label %7, !dbg !8377, !llvm.loop !8378

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8380

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8368
  ret i8* %19, !dbg !8381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !8382 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8384, metadata !DIExpression()), !dbg !8385
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8386
  ret void, !dbg !8387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !8388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8390, metadata !DIExpression()), !dbg !8391
  ret i32 -1, !dbg !8392
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8397, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32* %1, metadata !8398, metadata !DIExpression()), !dbg !8399
  %3 = ptrtoint i32* %1 to i32, !dbg !8400
  %4 = and i32 %3, -2, !dbg !8400
  %5 = icmp eq i32 %4, 2, !dbg !8400
  br i1 %5, label %6, label %9, !dbg !8400

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8401
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8401
  br label %9, !dbg !8402

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8402
  ret i32 %10, !dbg !8403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8406, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.value(metadata i32* %1, metadata !8407, metadata !DIExpression()), !dbg !8408
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8409
  ret i32 %3, !dbg !8410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8414, metadata !DIExpression()), !dbg !8416
  call void @llvm.dbg.value(metadata i32* %1, metadata !8415, metadata !DIExpression()), !dbg !8416
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8417, !srcloc !8419
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8420
  ret i32 %3, !dbg !8421
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8422 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8427, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i32* %1, metadata !8428, metadata !DIExpression()), !dbg !8431
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8432
  call void @llvm.dbg.value(metadata i32 %3, metadata !8429, metadata !DIExpression()), !dbg !8431
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !8433
  call void @llvm.dbg.value(metadata i32 %4, metadata !8430, metadata !DIExpression()), !dbg !8431
  %5 = icmp ne i32 %3, %4, !dbg !8434
  %6 = sext i1 %5 to i32, !dbg !8435
  ret i32 %6, !dbg !8436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8437 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8441, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32 %1, metadata !8442, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32 %2, metadata !8443, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32* %3, metadata !8444, metadata !DIExpression()), !dbg !8445
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8446
  ret i32 %5, !dbg !8447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8448 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8450, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i32 %1, metadata !8451, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i32 %2, metadata !8452, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i32* %3, metadata !8453, metadata !DIExpression()), !dbg !8454
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8455, !srcloc !8457
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8458
  ret i32 %5, !dbg !8459
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8460 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8462, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.value(metadata i32 %1, metadata !8463, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.value(metadata i32 %2, metadata !8464, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.value(metadata i32* %3, metadata !8465, metadata !DIExpression()), !dbg !8470
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8471
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8473
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8473
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8473
  br i1 %11, label %33, label %12, !dbg !8473

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8470
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8470
  call void @llvm.dbg.value(metadata i8* %14, metadata !8468, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.value(metadata i32 %13, metadata !8466, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.value(metadata i32 %1, metadata !8467, metadata !DIExpression()), !dbg !8470
  br label %15, !dbg !8474

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8476
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8470
  call void @llvm.dbg.value(metadata i8* %17, metadata !8468, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.value(metadata i32 %16, metadata !8467, metadata !DIExpression()), !dbg !8470
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8477
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8480
  call void @llvm.dbg.value(metadata i8* %19, metadata !8468, metadata !DIExpression()), !dbg !8470
  %20 = load i8, i8* %17, align 1, !dbg !8481
  %21 = zext i8 %20 to i32, !dbg !8482
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8477
  %23 = icmp eq i32 %22, -1, !dbg !8483
  br i1 %23, label %30, label %24, !dbg !8484

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8485
  call void @llvm.dbg.value(metadata i32 %25, metadata !8467, metadata !DIExpression()), !dbg !8470
  %26 = icmp eq i32 %25, 0, !dbg !8486
  br i1 %26, label %27, label %15, !dbg !8487, !llvm.loop !8488

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8490
  call void @llvm.dbg.value(metadata i32 %28, metadata !8466, metadata !DIExpression()), !dbg !8470
  %29 = icmp eq i32 %28, 0, !dbg !8491
  br i1 %29, label %30, label %12, !dbg !8492, !llvm.loop !8493

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8470
  call void @llvm.dbg.value(metadata i32 %31, metadata !8466, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.label(metadata !8469), !dbg !8496
  %32 = sub i32 %2, %31, !dbg !8497
  br label %33, !dbg !8498

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8470
  ret i32 %34, !dbg !8499
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8500 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8504, metadata !DIExpression()), !dbg !8505
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8506
  %3 = icmp eq i32 %2, -1, !dbg !8508
  br i1 %3, label %8, label %4, !dbg !8509

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8510
  %6 = icmp eq i32 %5, -1, !dbg !8511
  %7 = sext i1 %6 to i32, !dbg !8510
  br label %8, !dbg !8512

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8505
  ret i32 %9, !dbg !8513
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8514 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8516, metadata !DIExpression()), !dbg !8517
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8518
  ret void, !dbg !8519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8520 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8524, metadata !DIExpression()), !dbg !8530
  call void @llvm.dbg.value(metadata i32 %1, metadata !8525, metadata !DIExpression()), !dbg !8530
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8526, metadata !DIExpression()), !dbg !8530
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8531
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8531
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8531
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8527, metadata !DIExpression()), !dbg !8530
  call void @llvm.dbg.value(metadata i32 %0, metadata !8529, metadata !DIExpression()), !dbg !8530
  %7 = icmp slt i32 %0, %1, !dbg !8532
  br i1 %7, label %8, label %22, !dbg !8535

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8529, metadata !DIExpression()), !dbg !8530
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8536
  %11 = icmp eq i32 %10, 0, !dbg !8536
  br i1 %11, label %19, label %12, !dbg !8539

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8540
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8542
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8542
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8544
  br i1 %15, label %19, label %16, !dbg !8545

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8546
  %18 = load i8*, i8** %17, align 4, !dbg !8546
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8547
  br label %19, !dbg !8548

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8549
  call void @llvm.dbg.value(metadata i32 %20, metadata !8529, metadata !DIExpression()), !dbg !8530
  %21 = icmp eq i32 %20, %1, !dbg !8532
  br i1 %21, label %22, label %8, !dbg !8535, !llvm.loop !8550

22:                                               ; preds = %19, %3
  ret void, !dbg !8552
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8555, metadata !DIExpression()), !dbg !8556
  %2 = shl nuw i32 1, %0, !dbg !8557
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8560
  ret i32 %3, !dbg !8561
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8566, metadata !DIExpression()), !dbg !8567
  %2 = shl nuw i32 1, %0, !dbg !8568
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8571
  ret void, !dbg !8572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8576, metadata !DIExpression()), !dbg !8577
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8578
  ret void, !dbg !8579
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8582, metadata !DIExpression()), !dbg !8583
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8584
  %3 = and i32 %2, %0, !dbg !8584
  %4 = icmp eq i32 %3, %0, !dbg !8585
  %5 = zext i1 %4 to i32, !dbg !8585
  ret i32 %5, !dbg !8586
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8587 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8589, metadata !DIExpression()), !dbg !8590
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8591
  ret void, !dbg !8592
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8593 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8595, metadata !DIExpression()), !dbg !8596
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8597
  ret void, !dbg !8598
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8599 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8601, metadata !DIExpression()), !dbg !8602
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8603
  ret void, !dbg !8604
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8605 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8607, metadata !DIExpression()), !dbg !8608
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8609
  ret void, !dbg !8610
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8611 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8613, metadata !DIExpression()), !dbg !8614
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8615
  ret void, !dbg !8616
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8619, metadata !DIExpression()), !dbg !8620
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8621
  ret void, !dbg !8622
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8623 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8625, metadata !DIExpression()), !dbg !8626
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8627
  ret void, !dbg !8628
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8629 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8631, metadata !DIExpression()), !dbg !8632
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8633
  ret void, !dbg !8634
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8635 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8637, metadata !DIExpression()), !dbg !8638
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8639
  ret void, !dbg !8640
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8641 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8643, metadata !DIExpression()), !dbg !8644
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8645
  ret void, !dbg !8646
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8647 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8649, metadata !DIExpression()), !dbg !8650
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8651
  ret i32 0, !dbg !8652
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !738 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !742, metadata !DIExpression()), !dbg !8653
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8654
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8656
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8658
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8660
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8662
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8664
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8666
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8668
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8670
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8672
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8674
  ret void, !dbg !8676
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8679, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata i32 0, metadata !8680, metadata !DIExpression()), !dbg !8681
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8682
  %3 = load i32, i32* %2, align 4, !dbg !8682
  call void @llvm.dbg.value(metadata i32 %3, metadata !8680, metadata !DIExpression()), !dbg !8681
  %4 = shl nuw i32 1, %0, !dbg !8683
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8684
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8685
  ret void, !dbg !8686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8689, metadata !DIExpression()), !dbg !8690
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8691
  %3 = or i32 %2, %0, !dbg !8691
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8691
  ret void, !dbg !8692
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8693 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8695, metadata !DIExpression()), !dbg !8696
  %2 = icmp slt i32 %0, 32, !dbg !8697
  br i1 %2, label %3, label %5, !dbg !8699

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8700
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8702
  br label %5, !dbg !8703

5:                                                ; preds = %1, %3
  ret void, !dbg !8704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8707, metadata !DIExpression()), !dbg !8708
  %2 = xor i32 %0, -1, !dbg !8709
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8709
  %4 = and i32 %3, %2, !dbg !8709
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8709
  ret void, !dbg !8710
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8711 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8715, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.value(metadata i32 %1, metadata !8716, metadata !DIExpression()), !dbg !8717
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8718

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8719
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8721
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8722
  br label %11, !dbg !8723

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8724
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8725
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8726
  br label %11, !dbg !8727

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8728
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8729
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8730
  br label %11, !dbg !8731

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8732
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8733
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8734
  br label %11, !dbg !8735

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8739, metadata !DIExpression()), !dbg !8740
  %2 = xor i32 %0, -1, !dbg !8741
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8741
  %4 = and i32 %3, %2, !dbg !8741
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8741
  ret void, !dbg !8742
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8745, metadata !DIExpression()), !dbg !8746
  %2 = xor i32 %0, -1, !dbg !8747
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8747
  %4 = and i32 %3, %2, !dbg !8747
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8747
  ret void, !dbg !8748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8751, metadata !DIExpression()), !dbg !8752
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8753
  %3 = or i32 %2, %0, !dbg !8753
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8753
  ret void, !dbg !8754
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8755 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8757, metadata !DIExpression()), !dbg !8758
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8759
  %3 = or i32 %2, %0, !dbg !8759
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8759
  ret void, !dbg !8760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !8761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8765, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8766, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i8* %2, metadata !8767, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8768, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8770, metadata !DIExpression()), !dbg !8771
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8772
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8772
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8774
  br i1 %6, label %7, label %9, !dbg !8775

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8776
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8777
  store i8* %2, i8** %8, align 4, !dbg !8778
  br label %9, !dbg !8779

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8771
  ret i32 %10, !dbg !8780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8783, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8784, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8785, metadata !DIExpression()), !dbg !8786
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8787
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8788
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8789
  store i8* null, i8** %3, align 4, !dbg !8790
  ret void, !dbg !8791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8794, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i8* %1, metadata !8795, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i8* %1, metadata !8796, metadata !DIExpression()), !dbg !8799
  %3 = bitcast i8* %1 to i32*, !dbg !8800
  %4 = load i32, i32* %3, align 4, !dbg !8800
  %5 = add i32 %4, -169, !dbg !8800
  %6 = icmp ult i32 %5, -121, !dbg !8800
  br i1 %6, label %15, label %7, !dbg !8802

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8803
  %9 = inttoptr i32 %8 to i32*, !dbg !8804
  call void @llvm.dbg.value(metadata i32* %9, metadata !8797, metadata !DIExpression()), !dbg !8799
  %10 = load volatile i32, i32* %9, align 4, !dbg !8805
  call void @llvm.dbg.value(metadata i32 %10, metadata !8798, metadata !DIExpression()), !dbg !8799
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8806
  %12 = bitcast i8* %11 to i32*, !dbg !8806
  %13 = load i32, i32* %12, align 4, !dbg !8806
  %14 = or i32 %13, %10, !dbg !8807
  call void @llvm.dbg.value(metadata i32 %14, metadata !8798, metadata !DIExpression()), !dbg !8799
  store volatile i32 %14, i32* %9, align 4, !dbg !8808
  br label %15, !dbg !8809

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8799
  ret i32 %16, !dbg !8810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8811 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8813, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.value(metadata i8* %1, metadata !8814, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.value(metadata i8* %1, metadata !8815, metadata !DIExpression()), !dbg !8818
  %3 = bitcast i8* %1 to i32*, !dbg !8819
  %4 = load i32, i32* %3, align 4, !dbg !8819
  %5 = add i32 %4, -169, !dbg !8819
  %6 = icmp ult i32 %5, -121, !dbg !8819
  br i1 %6, label %16, label %7, !dbg !8821

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8822
  %9 = inttoptr i32 %8 to i32*, !dbg !8823
  call void @llvm.dbg.value(metadata i32* %9, metadata !8816, metadata !DIExpression()), !dbg !8818
  %10 = load volatile i32, i32* %9, align 4, !dbg !8824
  call void @llvm.dbg.value(metadata i32 %10, metadata !8817, metadata !DIExpression()), !dbg !8818
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8825
  %12 = bitcast i8* %11 to i32*, !dbg !8825
  %13 = load i32, i32* %12, align 4, !dbg !8825
  %14 = xor i32 %13, -1, !dbg !8826
  %15 = and i32 %10, %14, !dbg !8827
  call void @llvm.dbg.value(metadata i32 %15, metadata !8817, metadata !DIExpression()), !dbg !8818
  store volatile i32 %15, i32* %9, align 4, !dbg !8828
  br label %16, !dbg !8829

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8818
  ret i32 %17, !dbg !8830
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8831 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8833, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i8* %1, metadata !8834, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32* %2, metadata !8835, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i8* %1, metadata !8836, metadata !DIExpression()), !dbg !8841
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8842
  call void @llvm.dbg.value(metadata i32 %4, metadata !8837, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 undef, metadata !8838, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 undef, metadata !8839, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %4, metadata !8840, metadata !DIExpression()), !dbg !8841
  %5 = bitcast i8* %1 to i32*, !dbg !8843
  %6 = load i32, i32* %5, align 4, !dbg !8843
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8844

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8845
  call void @llvm.dbg.value(metadata i32 %8, metadata !8838, metadata !DIExpression()), !dbg !8841
  br label %19, !dbg !8846

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !8848
  call void @llvm.dbg.value(metadata i32 %10, metadata !8839, metadata !DIExpression()), !dbg !8841
  br label %19, !dbg !8849

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8850
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !8851
  br label %19, !dbg !8852

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8853
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #26, !dbg !8854
  br label %19, !dbg !8855

17:                                               ; preds = %3
  br label %19, !dbg !8856

18:                                               ; preds = %3
  br label %19, !dbg !8857

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8858
  br label %21, !dbg !8859

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8841
  ret i32 %22, !dbg !8859
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8860 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8862, metadata !DIExpression()), !dbg !8870
  call void @llvm.dbg.value(metadata i8* %1, metadata !8863, metadata !DIExpression()), !dbg !8870
  call void @llvm.dbg.value(metadata i8* %2, metadata !8864, metadata !DIExpression()), !dbg !8870
  call void @llvm.dbg.value(metadata i8* %1, metadata !8865, metadata !DIExpression()), !dbg !8870
  %4 = bitcast i8* %1 to i32*, !dbg !8871
  %5 = load i32, i32* %4, align 4, !dbg !8871
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8872
  call void @llvm.dbg.value(metadata i32 %6, metadata !8869, metadata !DIExpression()), !dbg !8870
  %7 = icmp slt i32 %6, 0, !dbg !8873
  br i1 %7, label %22, label %8, !dbg !8875

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8865, metadata !DIExpression()), !dbg !8870
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8876
  %10 = bitcast i8* %9 to i32*, !dbg !8876
  %11 = load i32, i32* %10, align 4, !dbg !8876
  %12 = lshr i32 %11, 16, !dbg !8876
  %13 = and i32 %12, 7, !dbg !8876
  %14 = lshr i32 %11, 8, !dbg !8877
  %15 = and i32 %14, 31, !dbg !8877
  %16 = shl i32 %13, %15, !dbg !8878
  call void @llvm.dbg.value(metadata i32 %16, metadata !8868, metadata !DIExpression()), !dbg !8870
  %17 = and i32 %11, 255, !dbg !8879
  %18 = or i32 %17, 1073887232, !dbg !8880
  %19 = inttoptr i32 %18 to i32*, !dbg !8881
  call void @llvm.dbg.value(metadata i32* %19, metadata !8866, metadata !DIExpression()), !dbg !8870
  %20 = load volatile i32, i32* %19, align 4, !dbg !8882
  call void @llvm.dbg.value(metadata i32 %20, metadata !8867, metadata !DIExpression()), !dbg !8870
  %21 = or i32 %16, %20, !dbg !8883
  call void @llvm.dbg.value(metadata i32 %21, metadata !8867, metadata !DIExpression()), !dbg !8870
  store volatile i32 %21, i32* %19, align 4, !dbg !8884
  br label %22, !dbg !8885

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8870
  ret i32 %23, !dbg !8886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8891, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata i32 0, metadata !8892, metadata !DIExpression()), !dbg !8893
  %2 = add i32 %0, -1, !dbg !8894
  %3 = icmp ult i32 %2, 6, !dbg !8894
  br i1 %3, label %4, label %7, !dbg !8894

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8894
  %6 = load i32, i32* %5, align 4, !dbg !8894
  call void @llvm.dbg.value(metadata i32 %6, metadata !8892, metadata !DIExpression()), !dbg !8893
  br label %7, !dbg !8895

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8893
  ret i32 %8, !dbg !8896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8901, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata i32 %1, metadata !8902, metadata !DIExpression()), !dbg !8903
  %3 = udiv i32 %0, %1, !dbg !8904
  ret i32 %3, !dbg !8905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8910, metadata !DIExpression()), !dbg !8914
  call void @llvm.dbg.value(metadata i32 8, metadata !8911, metadata !DIExpression()), !dbg !8914
  call void @llvm.dbg.value(metadata i32 84, metadata !8912, metadata !DIExpression()), !dbg !8914
  call void @llvm.dbg.value(metadata i32 %1, metadata !8913, metadata !DIExpression()), !dbg !8914
  %3 = mul i32 %0, 84, !dbg !8915
  %4 = shl nsw i32 %1, 3, !dbg !8916
  %5 = udiv i32 %3, %4, !dbg !8917
  ret i32 %5, !dbg !8918
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8919 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8921, metadata !DIExpression()), !dbg !8924
  tail call void @config_enable_default_clocks() #25, !dbg !8925
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8926
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8926
  %4 = lshr i32 %3, 4, !dbg !8926
  %5 = and i32 %4, 15, !dbg !8926
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8926
  %7 = load i8, i8* %6, align 1, !dbg !8926
  %8 = zext i8 %7 to i32, !dbg !8926
  %9 = lshr i32 %2, %8, !dbg !8926
  call void @llvm.dbg.value(metadata i32 %9, metadata !8922, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8923, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8924
  %10 = icmp ult i32 %9, 84000000, !dbg !8927
  br i1 %10, label %11, label %13, !dbg !8929

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8930
  br label %13, !dbg !8932

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8933
  tail call fastcc void @set_up_plls() #26, !dbg !8934
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8935
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8938
  br label %14, !dbg !8939

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8940
  %16 = icmp eq i32 %15, 8, !dbg !8941
  br i1 %16, label %17, label %14, !dbg !8939, !llvm.loop !8942

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8944
  br i1 %18, label %19, label %21, !dbg !8946

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8947
  br label %21, !dbg !8949

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8950
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8951
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8952
  ret i32 0, !dbg !8953
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8954 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8956
  %2 = and i32 %1, 240, !dbg !8956
  ret i32 %2, !dbg !8957
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8958 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8959
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8964
  br label %1, !dbg !8965

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8966
  %3 = icmp eq i32 %2, 1, !dbg !8967
  br i1 %3, label %4, label %1, !dbg !8965, !llvm.loop !8968

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8970
  br label %5, !dbg !8973

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8974
  %7 = icmp eq i32 %6, 1, !dbg !8975
  br i1 %7, label %8, label %5, !dbg !8973, !llvm.loop !8976

8:                                                ; preds = %5
  ret void, !dbg !8978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8979 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8980
  %2 = icmp eq i32 %1, 8, !dbg !8982
  br i1 %2, label %3, label %4, !dbg !8983

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8984
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8986
  br label %4, !dbg !8987

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8988
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8989
  %6 = and i32 %5, -196609, !dbg !8989
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8989
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8990
  %8 = and i32 %7, -251658241, !dbg !8990
  %9 = or i32 %8, 134217728, !dbg !8990
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8990
  tail call void @config_pll_sysclock() #25, !dbg !8991
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8992
  br label %10, !dbg !8993

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8994
  %12 = icmp eq i32 %11, 1, !dbg !8995
  br i1 %12, label %13, label %10, !dbg !8993, !llvm.loop !8996

13:                                               ; preds = %10
  ret void, !dbg !8998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8999 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9001, metadata !DIExpression()), !dbg !9002
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9003
  %2 = and i32 %1, -241, !dbg !9003
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9003
  ret void, !dbg !9004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !9005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9007, metadata !DIExpression()), !dbg !9008
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9009
  %3 = and i32 %2, -4, !dbg !9009
  %4 = or i32 %3, %0, !dbg !9009
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9009
  ret void, !dbg !9010
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !9011 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9012
  %2 = and i32 %1, 12, !dbg !9012
  ret i32 %2, !dbg !9013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !9014 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !9016, metadata !DIExpression()), !dbg !9017
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9018
  %2 = and i32 %1, -7169, !dbg !9018
  %3 = or i32 %2, 4096, !dbg !9018
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9018
  ret void, !dbg !9019
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !9020 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9022, metadata !DIExpression()), !dbg !9023
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9024
  %2 = and i32 %1, -57345, !dbg !9024
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9024
  ret void, !dbg !9025
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !9026 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !9027
  %2 = icmp eq i32 %1, 1, !dbg !9029
  br i1 %2, label %7, label %3, !dbg !9030

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !9031
  br label %4, !dbg !9033

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !9034
  %6 = icmp eq i32 %5, 1, !dbg !9035
  br i1 %6, label %7, label %4, !dbg !9033, !llvm.loop !9036

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !9038
  br label %8, !dbg !9039

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !9040
  %10 = icmp eq i32 %9, 0, !dbg !9041
  br i1 %10, label %11, label %8, !dbg !9039, !llvm.loop !9042

11:                                               ; preds = %8
  ret void, !dbg !9044
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !9045 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9046
  %2 = and i32 %1, -16777217, !dbg !9046
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9046
  ret void, !dbg !9047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !9048 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9049
  %2 = or i32 %1, 16777216, !dbg !9049
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9049
  ret void, !dbg !9050
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !9051 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9052
  %2 = lshr i32 %1, 25, !dbg !9053
  %3 = and i32 %2, 1, !dbg !9053
  ret i32 %3, !dbg !9054
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !9055 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9056
  %2 = lshr i32 %1, 1, !dbg !9057
  %3 = and i32 %2, 1, !dbg !9057
  ret i32 %3, !dbg !9058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !9059 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9060
  %2 = or i32 %1, 1, !dbg !9060
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9060
  ret void, !dbg !9061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !9062 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9063
  %2 = and i32 %1, -262145, !dbg !9063
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9063
  ret void, !dbg !9064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !9065 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9066
  %2 = or i32 %1, 65536, !dbg !9066
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9066
  ret void, !dbg !9067
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !9068 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9069
  %2 = lshr i32 %1, 17, !dbg !9070
  %3 = and i32 %2, 1, !dbg !9070
  ret i32 %3, !dbg !9071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !9072 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9073
  %2 = or i32 %1, 1, !dbg !9073
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9073
  ret void, !dbg !9074
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !9075 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9076
  %2 = lshr i32 %1, 1, !dbg !9077
  %3 = and i32 %2, 1, !dbg !9077
  ret i32 %3, !dbg !9078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !9079 {
  ret i32 16000000, !dbg !9081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !9085 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !9086
  ret void, !dbg !9087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !9088 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9092, metadata !DIExpression()), !dbg !9096
  call void @llvm.dbg.value(metadata i32 8, metadata !9093, metadata !DIExpression()), !dbg !9096
  call void @llvm.dbg.value(metadata i32 84, metadata !9094, metadata !DIExpression()), !dbg !9096
  call void @llvm.dbg.value(metadata i32 0, metadata !9095, metadata !DIExpression()), !dbg !9096
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9097
  %2 = and i32 %1, -4227072, !dbg !9097
  %3 = or i32 %2, 4199688, !dbg !9097
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9097
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9098
  %5 = and i32 %4, -196609, !dbg !9098
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9098
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9099
  %7 = and i32 %6, -1879048193, !dbg !9099
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9099
  ret void, !dbg !9100
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !9101 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !9102
  ret void, !dbg !9103
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !9104 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9107, metadata !DIExpression()), !dbg !9109
  %2 = bitcast i32* %1 to i8*, !dbg !9110
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9110
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9108, metadata !DIExpression()), !dbg !9111
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9112
  %4 = or i32 %3, 268435456, !dbg !9112
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9112
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9113
  %6 = and i32 %5, 268435456, !dbg !9113
  store volatile i32 %6, i32* %1, align 4, !dbg !9114
  %7 = load volatile i32, i32* %1, align 4, !dbg !9115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9116
  ret void, !dbg !9116
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9117 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9119, metadata !DIExpression()), !dbg !9120
  %2 = tail call fastcc zeroext i1 @device_is_ready.49() #26, !dbg !9121
  br i1 %2, label %3, label %4, !dbg !9123

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !9124
  br label %4, !dbg !9125

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9120
  ret i32 %5, !dbg !9126
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.49() unnamed_addr #1 !dbg !9127 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9131, metadata !DIExpression()), !dbg !9132
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9133, !srcloc !9135
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.52() #26, !dbg !9136
  ret i1 %1, !dbg !9137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9138 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9139
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9140
  ret void, !dbg !9141
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9144, metadata !DIExpression()), !dbg !9146
  %2 = load i32 (i8)*, i32 (i8)** @debug_hook_out, align 4, !dbg !9147
  %3 = trunc i32 %0 to i8, !dbg !9147
  %4 = tail call i32 %2(i8 noundef zeroext %3) #25, !dbg !9147
  %5 = icmp eq i32 %4, 1, !dbg !9147
  call void @llvm.dbg.value(metadata i1 %5, metadata !9145, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9146
  br i1 %5, label %10, label %6, !dbg !9148

6:                                                ; preds = %1
  %7 = icmp eq i32 %0, 10, !dbg !9149
  br i1 %7, label %8, label %9, !dbg !9151

8:                                                ; preds = %6
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 13) #26, !dbg !9152
  br label %9, !dbg !9154

9:                                                ; preds = %8, %6
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %3) #26, !dbg !9155
  br label %10, !dbg !9156

10:                                               ; preds = %1, %9
  ret i32 %0, !dbg !9157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.50(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9158 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9160, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i8 %0, metadata !9161, metadata !DIExpression()), !dbg !9162
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9163, !srcloc !9165
  tail call fastcc void @z_impl_uart_poll_out.51(i8 noundef zeroext %0) #26, !dbg !9166
  ret void, !dbg !9167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.51(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9168 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9170, metadata !DIExpression()), !dbg !9173
  call void @llvm.dbg.value(metadata i8 %0, metadata !9171, metadata !DIExpression()), !dbg !9173
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9174
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9172, metadata !DIExpression()), !dbg !9173
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9175
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9175
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #25, !dbg !9176
  ret void, !dbg !9177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @debug_hook_out_nop(i8 noundef zeroext %0) #11 !dbg !9178 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9180, metadata !DIExpression()), !dbg !9181
  ret i32 0, !dbg !9182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.52() unnamed_addr #1 !dbg !9183 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9185, metadata !DIExpression()), !dbg !9186
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9187
  ret i1 %1, !dbg !9188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_in_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9189 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9193, metadata !DIExpression()), !dbg !9194
  store i32 (i8)* %0, i32 (i8)** @debug_hook_in, align 4, !dbg !9195
  ret void, !dbg !9196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_out_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9197 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9201, metadata !DIExpression()), !dbg !9202
  store i32 (i8)* %0, i32 (i8)** @debug_hook_out, align 4, !dbg !9203
  ret void, !dbg !9204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !9205 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9209, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9210, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9211, metadata !DIExpression()), !dbg !9212
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !9213
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !9214
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9215
  tail call fastcc void @console_input_init() #26, !dbg !9216
  ret void, !dbg !9217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !9218 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9221
  tail call fastcc void @uart_irq_rx_disable.53() #26, !dbg !9222
  tail call fastcc void @uart_irq_tx_disable.54() #26, !dbg !9223
  tail call fastcc void @uart_irq_callback_set() #26, !dbg !9224
  %2 = call fastcc i32 @uart_irq_rx_ready.55() #26, !dbg !9225
  %3 = icmp eq i32 %2, 0, !dbg !9226
  br i1 %3, label %8, label %4, !dbg !9226

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !9220, metadata !DIExpression(DW_OP_deref)), !dbg !9227
  %5 = call fastcc i32 @uart_fifo_read.56(i8* noundef nonnull %1) #26, !dbg !9228
  %6 = call fastcc i32 @uart_irq_rx_ready.55() #26, !dbg !9225
  %7 = icmp eq i32 %6, 0, !dbg !9226
  br i1 %7, label %8, label %4, !dbg !9226, !llvm.loop !9230

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable.57() #26, !dbg !9232
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9233
  ret void, !dbg !9233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable.53() unnamed_addr #1 !dbg !9234 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9236, metadata !DIExpression()), !dbg !9237
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9238, !srcloc !9240
  tail call fastcc void @z_impl_uart_irq_rx_disable.66() #26, !dbg !9241
  ret void, !dbg !9242
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable.54() unnamed_addr #1 !dbg !9243 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9245, metadata !DIExpression()), !dbg !9246
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9247, !srcloc !9249
  tail call fastcc void @z_impl_uart_irq_tx_disable.65() #26, !dbg !9250
  ret void, !dbg !9251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !9252 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9256, metadata !DIExpression()), !dbg !9258
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9257, metadata !DIExpression()), !dbg !9258
  tail call fastcc void @uart_irq_callback_user_data_set.59() #26, !dbg !9259
  ret void, !dbg !9260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready.55() unnamed_addr #1 !dbg !9261 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9263, metadata !DIExpression()), !dbg !9265
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9266
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9264, metadata !DIExpression()), !dbg !9265
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !9267
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9267
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9269
  br i1 %4, label %7, label %5, !dbg !9270

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9271
  br label %7, !dbg !9272

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9265
  ret i32 %8, !dbg !9273
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read.56(i8* noundef %0) unnamed_addr #1 !dbg !9274 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9276, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.value(metadata i8* %0, metadata !9277, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.value(metadata i32 1, metadata !9278, metadata !DIExpression()), !dbg !9280
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9281
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9279, metadata !DIExpression()), !dbg !9280
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !9282
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !9282
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !9284
  br i1 %5, label %8, label %6, !dbg !9285

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8* noundef %0, i32 noundef 1) #25, !dbg !9286
  br label %8, !dbg !9287

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !9280
  ret i32 %9, !dbg !9288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable.57() unnamed_addr #1 !dbg !9289 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9291, metadata !DIExpression()), !dbg !9292
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9293, !srcloc !9295
  tail call fastcc void @z_impl_uart_irq_rx_enable.58() #26, !dbg !9296
  ret void, !dbg !9297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable.58() unnamed_addr #1 !dbg !9298 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9300, metadata !DIExpression()), !dbg !9302
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9303
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9301, metadata !DIExpression()), !dbg !9302
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !9304
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9304
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9306
  br i1 %4, label %6, label %5, !dbg !9307

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9308
  br label %6, !dbg !9310

6:                                                ; preds = %5, %0
  ret void, !dbg !9311
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1110 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1112, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i8* %1, metadata !1113, metadata !DIExpression()), !dbg !9312
  %4 = call fastcc i32 @uart_irq_update.60() #26, !dbg !9313
  %5 = icmp eq i32 %4, 0, !dbg !9313
  br i1 %5, label %96, label %6, !dbg !9314

6:                                                ; preds = %2, %93
  %7 = call fastcc i32 @uart_irq_is_pending() #26, !dbg !9315
  %8 = icmp eq i32 %7, 0, !dbg !9314
  br i1 %8, label %96, label %9, !dbg !9316

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9317
  %10 = call fastcc i32 @uart_irq_rx_ready.55() #26, !dbg !9318
  %11 = icmp eq i32 %10, 0, !dbg !9318
  br i1 %11, label %93, label %12, !dbg !9320, !llvm.loop !9321

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1114, metadata !DIExpression(DW_OP_deref)), !dbg !9323
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #26, !dbg !9324
  call void @llvm.dbg.value(metadata i32 %13, metadata !1116, metadata !DIExpression()), !dbg !9323
  %14 = icmp slt i32 %13, 0, !dbg !9325
  br i1 %14, label %92, label %15, !dbg !9327

15:                                               ; preds = %12
  %16 = load i32 (i8)*, i32 (i8)** @debug_hook_in, align 4, !dbg !9328
  %17 = icmp eq i32 (i8)* %16, null, !dbg !9330
  br i1 %17, label %22, label %18, !dbg !9331

18:                                               ; preds = %15
  %19 = load i8, i8* %3, align 1, !dbg !9332
  call void @llvm.dbg.value(metadata i8 %19, metadata !1114, metadata !DIExpression()), !dbg !9323
  %20 = call i32 %16(i8 noundef zeroext %19) #25, !dbg !9333
  %21 = icmp eq i32 %20, 0, !dbg !9334
  br i1 %21, label %22, label %92, !dbg !9335

22:                                               ; preds = %18, %15
  %23 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9336
  %24 = icmp eq %struct.console_input* %23, null, !dbg !9336
  br i1 %24, label %25, label %30, !dbg !9337

25:                                               ; preds = %22
  %26 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !9338
  %27 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %26, i32 0, i32 0, !dbg !9338
  %28 = call fastcc i8* @k_queue_get(%struct.k_queue* noundef %27) #26, !dbg !9338
  call void @llvm.dbg.value(metadata i8* %28, metadata !1117, metadata !DIExpression()), !dbg !9339
  store i8* %28, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9340
  %29 = icmp eq i8* %28, null, !dbg !9341
  br i1 %29, label %92, label %30, !dbg !9343

30:                                               ; preds = %25, %22
  %31 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #26, !dbg !9344
  br i1 %31, label %32, label %36, !dbg !9346

32:                                               ; preds = %30
  %33 = load i8, i8* %3, align 1, !dbg !9347
  call void @llvm.dbg.value(metadata i8 %33, metadata !1114, metadata !DIExpression()), !dbg !9323
  %34 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9349
  %35 = getelementptr inbounds %struct.console_input, %struct.console_input* %34, i32 0, i32 2, i32 0, !dbg !9349
  call fastcc void @handle_ansi(i8 noundef zeroext %33, i8* noundef nonnull %35) #26, !dbg !9350
  br label %93, !dbg !9351, !llvm.loop !9321

36:                                               ; preds = %30
  %37 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #26, !dbg !9352
  %38 = load i8, i8* %3, align 1, !dbg !9323
  call void @llvm.dbg.value(metadata i8 %38, metadata !1114, metadata !DIExpression()), !dbg !9323
  call void @llvm.dbg.value(metadata i8 %38, metadata !1114, metadata !DIExpression()), !dbg !9323
  br i1 %37, label %39, label %42, !dbg !9354

39:                                               ; preds = %36
  %40 = icmp eq i8 %38, 91, !dbg !9355
  br i1 %40, label %41, label %93, !dbg !9358, !llvm.loop !9321

41:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 1) #26, !dbg !9359
  call fastcc void @atomic_set_bit(i32 noundef 2) #26, !dbg !9361
  br label %93, !dbg !9362, !llvm.loop !9321

42:                                               ; preds = %36
  %43 = zext i8 %38 to i32, !dbg !9363
  %44 = call fastcc i32 @isprint(i32 noundef %43) #26, !dbg !9365
  %45 = icmp eq i32 %44, 0, !dbg !9365
  br i1 %45, label %46, label %81, !dbg !9366

46:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i8 undef, metadata !1114, metadata !DIExpression()), !dbg !9323
  switch i8 %38, label %93 [
    i8 8, label %47
    i8 127, label %47
    i8 27, label %56
    i8 13, label %57
    i8 9, label %68
  ], !dbg !9367, !llvm.loop !9321

47:                                               ; preds = %46, %46
  %48 = load i8, i8* @cur, align 1, !dbg !9369
  %49 = icmp eq i8 %48, 0, !dbg !9372
  br i1 %49, label %93, label %50, !dbg !9373, !llvm.loop !9321

50:                                               ; preds = %47
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9374
  %52 = add i8 %48, -1, !dbg !9376
  store i8 %52, i8* @cur, align 1, !dbg !9376
  %53 = zext i8 %52 to i32, !dbg !9374
  %54 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %53, !dbg !9374
  %55 = load i8, i8* @end, align 1, !dbg !9377
  call fastcc void @del_char(i8* noundef nonnull %54, i8 noundef zeroext %55) #26, !dbg !9378
  br label %93, !dbg !9379, !llvm.loop !9321

56:                                               ; preds = %46
  call fastcc void @atomic_set_bit(i32 noundef 0) #26, !dbg !9380
  br label %93, !dbg !9381, !llvm.loop !9321

57:                                               ; preds = %46
  %58 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9382
  %59 = load i8, i8* @cur, align 1, !dbg !9383
  %60 = zext i8 %59 to i32, !dbg !9383
  %61 = load i8, i8* @end, align 1, !dbg !9384
  %62 = zext i8 %61 to i32, !dbg !9384
  %63 = add nuw nsw i32 %62, %60, !dbg !9385
  %64 = getelementptr inbounds %struct.console_input, %struct.console_input* %58, i32 0, i32 2, i32 %63, !dbg !9382
  store i8 0, i8* %64, align 1, !dbg !9386
  call fastcc void @uart_poll_out.50(i8 noundef zeroext 13) #26, !dbg !9387
  call fastcc void @uart_poll_out.50(i8 noundef zeroext 10) #26, !dbg !9388
  store i8 0, i8* @cur, align 1, !dbg !9389
  store i8 0, i8* @end, align 1, !dbg !9390
  %65 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !9391
  %66 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %65, i32 0, i32 0, !dbg !9391
  %67 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9391
  call void @k_queue_append(%struct.k_queue* noundef %66, i8* noundef %67) #25, !dbg !9391
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9393
  br label %93, !dbg !9394, !llvm.loop !9321

68:                                               ; preds = %46
  %69 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9395
  %70 = icmp eq i8 (i8*, i8)* %69, null, !dbg !9395
  %71 = load i8, i8* @end, align 1
  %72 = icmp ne i8 %71, 0
  %73 = select i1 %70, i1 true, i1 %72, !dbg !9397
  br i1 %73, label %93, label %74, !dbg !9397, !llvm.loop !9321

74:                                               ; preds = %68
  %75 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9398
  %76 = getelementptr inbounds %struct.console_input, %struct.console_input* %75, i32 0, i32 2, i32 0, !dbg !9398
  %77 = load i8, i8* @cur, align 1, !dbg !9400
  %78 = call zeroext i8 %69(i8* noundef nonnull %76, i8 noundef zeroext %77) #25, !dbg !9401
  %79 = load i8, i8* @cur, align 1, !dbg !9402
  %80 = add i8 %79, %78, !dbg !9402
  store i8 %80, i8* @cur, align 1, !dbg !9402
  br label %93, !dbg !9403, !llvm.loop !9321

81:                                               ; preds = %42
  %82 = load i8, i8* @cur, align 1, !dbg !9404
  %83 = zext i8 %82 to i32, !dbg !9404
  %84 = load i8, i8* @end, align 1, !dbg !9406
  %85 = zext i8 %84 to i32, !dbg !9406
  %86 = add nuw nsw i32 %85, %83, !dbg !9407
  %87 = icmp ult i32 %86, 127, !dbg !9408
  br i1 %87, label %88, label %93, !dbg !9409

88:                                               ; preds = %81
  %89 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9410
  %90 = add i8 %82, 1, !dbg !9412
  store i8 %90, i8* @cur, align 1, !dbg !9412
  %91 = getelementptr inbounds %struct.console_input, %struct.console_input* %89, i32 0, i32 2, i32 %83, !dbg !9410
  call void @llvm.dbg.value(metadata i8 %38, metadata !1114, metadata !DIExpression()), !dbg !9323
  call fastcc void @insert_char(i8* noundef nonnull %91, i8 noundef zeroext %38, i8 noundef zeroext %84) #26, !dbg !9413
  br label %93, !dbg !9414

92:                                               ; preds = %12, %18, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9322
  br label %96

93:                                               ; preds = %81, %88, %56, %57, %50, %47, %74, %68, %46, %39, %41, %9, %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9322
  %94 = call fastcc i32 @uart_irq_update.60() #26, !dbg !9313
  %95 = icmp eq i32 %94, 0, !dbg !9313
  br i1 %95, label %96, label %6, !dbg !9314

96:                                               ; preds = %6, %93, %2, %92
  ret void, !dbg !9415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set.59() unnamed_addr #1 !dbg !9416 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9418, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9419, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.value(metadata i8* null, metadata !9420, metadata !DIExpression()), !dbg !9422
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9423
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9421, metadata !DIExpression()), !dbg !9422
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !9424
  br i1 %2, label %8, label %3, !dbg !9426

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !9427
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !9427
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !9428
  br i1 %6, label %8, label %7, !dbg !9429

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_48, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #25, !dbg !9430
  br label %8, !dbg !9432

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !9433
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update.60() unnamed_addr #1 !dbg !9434 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9436, metadata !DIExpression()), !dbg !9437
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9438, !srcloc !9440
  %1 = tail call fastcc i32 @z_impl_uart_irq_update.64() #26, !dbg !9441
  ret i32 %1, !dbg !9442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !9443 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9445, metadata !DIExpression()), !dbg !9446
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9447, !srcloc !9449
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #26, !dbg !9450
  ret i32 %1, !dbg !9451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !9452 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9456, metadata !DIExpression()), !dbg !9460
  call void @llvm.dbg.value(metadata i8* %0, metadata !9457, metadata !DIExpression()), !dbg !9460
  call void @llvm.dbg.value(metadata i32 1, metadata !9458, metadata !DIExpression()), !dbg !9460
  %2 = tail call fastcc i32 @uart_fifo_read.56(i8* noundef %0) #26, !dbg !9461
  call void @llvm.dbg.value(metadata i32 %2, metadata !9459, metadata !DIExpression()), !dbg !9460
  %3 = icmp slt i32 %2, 0, !dbg !9462
  br i1 %3, label %4, label %5, !dbg !9464

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable.53() #26, !dbg !9465
  br label %5, !dbg !9467

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !9460
  ret i32 %6, !dbg !9468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !9469 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9479, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !9478, metadata !DIExpression()), !dbg !9480
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9481, !srcloc !9483
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #25, !dbg !9484
  ret i8* %2, !dbg !9485
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !9486 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9492, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.value(metadata i32 %0, metadata !9493, metadata !DIExpression()), !dbg !9496
  %2 = tail call fastcc i32 @atomic_get() #26, !dbg !9497
  call void @llvm.dbg.value(metadata i32 %2, metadata !9494, metadata !DIExpression()), !dbg !9496
  %3 = and i32 %0, 31, !dbg !9498
  %4 = shl nuw i32 1, %3, !dbg !9499
  %5 = and i32 %2, %4, !dbg !9499
  %6 = icmp ne i32 %5, 0, !dbg !9499
  ret i1 %6, !dbg !9500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !9501 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9505, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata i8* %1, metadata !9506, metadata !DIExpression()), !dbg !9508
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #26, !dbg !9509
  br i1 %3, label %4, label %11, !dbg !9511

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !9512
  %6 = tail call fastcc i32 @isdigit.61(i32 noundef %5) #26, !dbg !9515
  %7 = icmp eq i32 %6, 0, !dbg !9515
  br i1 %7, label %8, label %9, !dbg !9516

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !9517
  br label %34, !dbg !9519

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #26, !dbg !9520
  %10 = add nsw i32 %5, -48, !dbg !9521
  store i32 %10, i32* @ansi_val, align 4, !dbg !9522
  store i32 0, i32* @ansi_val_2, align 4, !dbg !9523
  br label %81, !dbg !9524

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #26, !dbg !9525
  br i1 %12, label %13, label %34, !dbg !9527

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !9528
  %15 = tail call fastcc i32 @isdigit.61(i32 noundef %14) #26, !dbg !9531
  %16 = icmp eq i32 %15, 0, !dbg !9531
  br i1 %16, label %29, label %17, !dbg !9532

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #26, !dbg !9533
  br i1 %18, label %19, label %24, !dbg !9536

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !9537
  %21 = mul i32 %20, 10, !dbg !9537
  %22 = add nsw i32 %14, -48, !dbg !9539
  %23 = add i32 %22, %21, !dbg !9540
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !9540
  br label %81, !dbg !9541

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !9542
  %26 = mul i32 %25, 10, !dbg !9542
  %27 = add nsw i32 %14, -48, !dbg !9544
  %28 = add i32 %27, %26, !dbg !9545
  store i32 %28, i32* @ansi_val, align 4, !dbg !9545
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !9546
  br i1 %30, label %31, label %33, !dbg !9548

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #26, !dbg !9549
  br i1 %32, label %33, label %81, !dbg !9550

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #26, !dbg !9551
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #26, !dbg !9552
  br label %34, !dbg !9553

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !9507), !dbg !9554
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !9555

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !9556
  %37 = load i8, i8* @cur, align 1, !dbg !9559
  %38 = zext i8 %37 to i32, !dbg !9559
  %39 = icmp ugt i32 %36, %38, !dbg !9560
  br i1 %39, label %80, label %40, !dbg !9561

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !9562
  %42 = trunc i32 %36 to i8, !dbg !9562
  %43 = add i8 %41, %42, !dbg !9562
  store i8 %43, i8* @end, align 1, !dbg !9562
  %44 = sub i8 %37, %42, !dbg !9563
  store i8 %44, i8* @cur, align 1, !dbg !9563
  tail call fastcc void @cursor_backward(i32 noundef %36) #26, !dbg !9564
  br label %80, !dbg !9565

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !9566
  %47 = load i8, i8* @end, align 1, !dbg !9568
  %48 = zext i8 %47 to i32, !dbg !9568
  %49 = icmp ugt i32 %46, %48, !dbg !9569
  br i1 %49, label %80, label %50, !dbg !9570

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !9571
  %52 = sub i8 %47, %51, !dbg !9571
  store i8 %52, i8* @end, align 1, !dbg !9571
  %53 = load i8, i8* @cur, align 1, !dbg !9572
  %54 = add i8 %53, %51, !dbg !9572
  store i8 %54, i8* @cur, align 1, !dbg !9572
  tail call fastcc void @cursor_forward(i32 noundef %46) #26, !dbg !9573
  br label %80, !dbg !9574

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !9575
  %57 = icmp eq i8 %56, 0, !dbg !9575
  br i1 %57, label %80, label %58, !dbg !9577

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !9578
  tail call fastcc void @cursor_backward(i32 noundef %59) #26, !dbg !9579
  %60 = load i8, i8* @cur, align 1, !dbg !9580
  %61 = load i8, i8* @end, align 1, !dbg !9581
  %62 = add i8 %61, %60, !dbg !9581
  store i8 %62, i8* @end, align 1, !dbg !9581
  store i8 0, i8* @cur, align 1, !dbg !9582
  br label %80, !dbg !9583

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !9584
  %65 = icmp eq i8 %64, 0, !dbg !9584
  br i1 %65, label %80, label %66, !dbg !9586

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !9587
  tail call fastcc void @cursor_forward(i32 noundef %67) #26, !dbg !9588
  %68 = load i8, i8* @end, align 1, !dbg !9589
  %69 = load i8, i8* @cur, align 1, !dbg !9590
  %70 = add i8 %69, %68, !dbg !9590
  store i8 %70, i8* @cur, align 1, !dbg !9590
  store i8 0, i8* @end, align 1, !dbg !9591
  br label %80, !dbg !9592

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !9593
  %73 = icmp eq i8 %72, 0, !dbg !9593
  br i1 %73, label %80, label %74, !dbg !9595

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #26, !dbg !9596
  %75 = load i8, i8* @cur, align 1, !dbg !9597
  %76 = zext i8 %75 to i32, !dbg !9598
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !9598
  %78 = load i8, i8* @end, align 1, !dbg !9599
  %79 = add i8 %78, -1, !dbg !9599
  store i8 %79, i8* @end, align 1, !dbg !9599
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #26, !dbg !9600
  br label %80, !dbg !9601

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #26, !dbg !9602
  br label %81, !dbg !9603

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !9603
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9604 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9609, metadata !DIExpression()), !dbg !9613
  call void @llvm.dbg.value(metadata i32 %0, metadata !9610, metadata !DIExpression()), !dbg !9613
  %2 = and i32 %0, 31, !dbg !9614
  %3 = shl nuw i32 1, %2, !dbg !9614
  call void @llvm.dbg.value(metadata i32 %3, metadata !9611, metadata !DIExpression()), !dbg !9613
  %4 = xor i32 %3, -1, !dbg !9615
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9616
  call void @llvm.dbg.value(metadata i32 %5, metadata !9612, metadata !DIExpression()), !dbg !9613
  %6 = and i32 %5, %3, !dbg !9617
  %7 = icmp ne i32 %6, 0, !dbg !9618
  ret i1 %7, !dbg !9619
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !9620 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9624, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.value(metadata i32 %0, metadata !9625, metadata !DIExpression()), !dbg !9627
  %2 = and i32 %0, 31, !dbg !9628
  %3 = shl nuw i32 1, %2, !dbg !9628
  call void @llvm.dbg.value(metadata i32 %3, metadata !9626, metadata !DIExpression()), !dbg !9627
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #26, !dbg !9629
  ret void, !dbg !9630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !9631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9633, metadata !DIExpression()), !dbg !9634
  %2 = add i32 %0, -32, !dbg !9635
  %3 = icmp ult i32 %2, 95, !dbg !9635
  %4 = zext i1 %3 to i32, !dbg !9635
  ret i32 %4, !dbg !9636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9637 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9641, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.value(metadata i8 %1, metadata !9642, metadata !DIExpression()), !dbg !9643
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 8) #26, !dbg !9644
  %3 = icmp eq i8 %1, 0, !dbg !9645
  br i1 %3, label %4, label %5, !dbg !9647

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 32) #26, !dbg !9648
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 8) #26, !dbg !9650
  br label %14, !dbg !9651

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #26, !dbg !9652
  call void @llvm.dbg.value(metadata i8 %1, metadata !9642, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.value(metadata i8* %0, metadata !9641, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.value(metadata i8 %1, metadata !9642, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9643
  br label %6, !dbg !9653

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !9642, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.value(metadata i8* %8, metadata !9641, metadata !DIExpression()), !dbg !9643
  %9 = add i8 %7, -1, !dbg !9654
  call void @llvm.dbg.value(metadata i8 %9, metadata !9642, metadata !DIExpression()), !dbg !9643
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9655
  %11 = load i8, i8* %10, align 1, !dbg !9657
  store i8 %11, i8* %8, align 1, !dbg !9658
  call void @llvm.dbg.value(metadata i8* %10, metadata !9641, metadata !DIExpression()), !dbg !9643
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %11) #26, !dbg !9659
  call void @llvm.dbg.value(metadata i8 %9, metadata !9642, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9643
  %12 = icmp eq i8 %9, 0, !dbg !9660
  br i1 %12, label %13, label %6, !dbg !9653, !llvm.loop !9661

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 32) #26, !dbg !9663
  tail call fastcc void @cursor_restore() #26, !dbg !9664
  br label %14, !dbg !9665

14:                                               ; preds = %13, %4
  ret void, !dbg !9665
}

; Function Attrs: optsize
declare !dbg !9666 dso_local void @k_queue_append(%struct.k_queue* noundef, i8* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !9669 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9673, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i8 %1, metadata !9674, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i8 %2, metadata !9675, metadata !DIExpression()), !dbg !9677
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %1) #26, !dbg !9678
  %4 = icmp eq i8 %2, 0, !dbg !9679
  br i1 %4, label %5, label %6, !dbg !9681

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !9682
  br label %17, !dbg !9684

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !9685
  call void @llvm.dbg.value(metadata i8 %7, metadata !9676, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i8* %0, metadata !9673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9677
  store i8 %1, i8* %0, align 1, !dbg !9686
  tail call fastcc void @cursor_save() #26, !dbg !9687
  call void @llvm.dbg.value(metadata i8 %7, metadata !9676, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i8 %2, metadata !9675, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i8* %0, metadata !9673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9677
  call void @llvm.dbg.value(metadata i8 %2, metadata !9675, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9677
  br label %8, !dbg !9688

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9677
  call void @llvm.dbg.value(metadata i8 %10, metadata !9676, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i8 %11, metadata !9675, metadata !DIExpression()), !dbg !9677
  %13 = add i8 %11, -1, !dbg !9689
  call void @llvm.dbg.value(metadata i8 %13, metadata !9675, metadata !DIExpression()), !dbg !9677
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %10) #26, !dbg !9690
  %14 = load i8, i8* %12, align 1, !dbg !9692
  call void @llvm.dbg.value(metadata i8 %14, metadata !9674, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i8* %12, metadata !9673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9677
  store i8 %10, i8* %12, align 1, !dbg !9693
  call void @llvm.dbg.value(metadata i8 %14, metadata !9676, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i8* %12, metadata !9673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9677
  call void @llvm.dbg.value(metadata i8 %13, metadata !9675, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9677
  %15 = icmp eq i8 %13, 0, !dbg !9694
  br i1 %15, label %16, label %8, !dbg !9688, !llvm.loop !9695

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #26, !dbg !9697
  br label %17, !dbg !9698

17:                                               ; preds = %16, %5
  ret void, !dbg !9698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !9699 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0)) #25, !dbg !9700
  ret void, !dbg !9701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !9702 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !9703
  ret void, !dbg !9704
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !9705 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9710, metadata !DIExpression()), !dbg !9712
  call void @llvm.dbg.value(metadata i32 %0, metadata !9711, metadata !DIExpression()), !dbg !9712
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9713
  ret i32 %2, !dbg !9714
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !9715 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9717, metadata !DIExpression()), !dbg !9719
  call void @llvm.dbg.value(metadata i32 %0, metadata !9718, metadata !DIExpression()), !dbg !9719
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9720
  ret i32 %2, !dbg !9721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.61(i32 noundef %0) unnamed_addr #11 !dbg !9722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9724, metadata !DIExpression()), !dbg !9725
  %2 = add i32 %0, -48, !dbg !9726
  %3 = icmp ult i32 %2, 10, !dbg !9727
  %4 = zext i1 %3 to i32, !dbg !9727
  ret i32 %4, !dbg !9728
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !9729 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9731, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i32 4, metadata !9732, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i32 16, metadata !9733, metadata !DIExpression()), !dbg !9735
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #26, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %1, metadata !9734, metadata !DIExpression()), !dbg !9735
  %2 = and i32 %1, 16, !dbg !9737
  %3 = icmp ne i32 %2, 0, !dbg !9738
  ret i1 %3, !dbg !9739
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9740 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9742, metadata !DIExpression()), !dbg !9745
  call void @llvm.dbg.value(metadata i32 %0, metadata !9743, metadata !DIExpression()), !dbg !9745
  %2 = and i32 %0, 31, !dbg !9746
  %3 = shl nuw i32 1, %2, !dbg !9746
  call void @llvm.dbg.value(metadata i32 %3, metadata !9744, metadata !DIExpression()), !dbg !9745
  %4 = xor i32 %3, -1, !dbg !9747
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9748
  ret void, !dbg !9749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !9750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9752, metadata !DIExpression()), !dbg !9753
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 noundef %0) #25, !dbg !9754
  ret void, !dbg !9755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !9756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9758, metadata !DIExpression()), !dbg !9759
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.62, i32 0, i32 0), i32 noundef %0) #25, !dbg !9760
  ret void, !dbg !9761
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !9762 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9766, metadata !DIExpression()), !dbg !9767
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !9768
  ret i32 %1, !dbg !9769
}

; Function Attrs: optsize
declare !dbg !9770 dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef, [1 x i64]) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !9771 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9773, metadata !DIExpression()), !dbg !9775
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9776
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9774, metadata !DIExpression()), !dbg !9775
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !9777
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9777
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9779
  br i1 %4, label %7, label %5, !dbg !9780

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9781
  br label %7, !dbg !9782

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9775
  ret i32 %8, !dbg !9783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update.64() unnamed_addr #1 !dbg !9784 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9786, metadata !DIExpression()), !dbg !9788
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9789
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9787, metadata !DIExpression()), !dbg !9788
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !9790
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9790
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9792
  br i1 %4, label %7, label %5, !dbg !9793

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9794
  br label %7, !dbg !9795

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9788
  ret i32 %8, !dbg !9796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable.65() unnamed_addr #1 !dbg !9797 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9799, metadata !DIExpression()), !dbg !9801
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9802
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9800, metadata !DIExpression()), !dbg !9801
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !9803
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9803
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9805
  br i1 %4, label %6, label %5, !dbg !9806

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9807
  br label %6, !dbg !9809

6:                                                ; preds = %5, %0
  ret void, !dbg !9810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable.66() unnamed_addr #1 !dbg !9811 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9813, metadata !DIExpression()), !dbg !9815
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9816
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9814, metadata !DIExpression()), !dbg !9815
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !9817
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9817
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9819
  br i1 %4, label %6, label %5, !dbg !9820

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9821
  br label %6, !dbg !9823

6:                                                ; preds = %5, %0
  ret void, !dbg !9824
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9825 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9827, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i8 %1, metadata !9828, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i32 %2, metadata !9829, metadata !DIExpression()), !dbg !9832
  %5 = bitcast i32* %4 to i8*, !dbg !9833
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9833
  call void @llvm.dbg.value(metadata i32* %4, metadata !9831, metadata !DIExpression(DW_OP_deref)), !dbg !9832
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !9834
  call void @llvm.dbg.value(metadata i32 %6, metadata !9830, metadata !DIExpression()), !dbg !9832
  %7 = icmp eq i32 %6, 0, !dbg !9835
  br i1 %7, label %8, label %31, !dbg !9837

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9830, metadata !DIExpression()), !dbg !9832
  %9 = and i32 %2, 131072, !dbg !9838
  %10 = icmp eq i32 %9, 0, !dbg !9840
  br i1 %10, label %28, label %11, !dbg !9841

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9842
  %13 = icmp eq i32 %12, 0, !dbg !9845
  br i1 %13, label %18, label %14, !dbg !9846

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9847
  %16 = shl nuw i32 1, %15, !dbg !9847
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !9849
  br label %25, !dbg !9850

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9851
  %20 = icmp eq i32 %19, 0, !dbg !9853
  %21 = zext i8 %1 to i32, !dbg !9832
  br i1 %20, label %25, label %22, !dbg !9854

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9855
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !9857
  br label %25, !dbg !9858

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9859
  %27 = load i32, i32* %4, align 4, !dbg !9860
  call void @llvm.dbg.value(metadata i32 %30, metadata !9831, metadata !DIExpression()), !dbg !9832
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !9861
  br label %31, !dbg !9862

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9859
  %30 = load i32, i32* %4, align 4, !dbg !9860
  call void @llvm.dbg.value(metadata i32 %30, metadata !9831, metadata !DIExpression()), !dbg !9832
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !9861
  call void @llvm.dbg.value(metadata i32 0, metadata !9830, metadata !DIExpression()), !dbg !9832
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9863
  ret i32 %6, !dbg !9863
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !9864 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9868, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.value(metadata i32* %1, metadata !9869, metadata !DIExpression()), !dbg !9873
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9874
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9874
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9874
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9870, metadata !DIExpression()), !dbg !9873
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9875
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9875
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9875
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9872, metadata !DIExpression()), !dbg !9873
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !9876
  store i32 %9, i32* %1, align 4, !dbg !9877
  ret i32 0, !dbg !9878
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9879 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9881, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 %1, metadata !9882, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 %2, metadata !9883, metadata !DIExpression()), !dbg !9887
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9888
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9888
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9888
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9884, metadata !DIExpression()), !dbg !9887
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9889
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9889
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9889
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9885, metadata !DIExpression()), !dbg !9887
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !9890
  call void @llvm.dbg.value(metadata i32 %10, metadata !9886, metadata !DIExpression()), !dbg !9887
  %11 = xor i32 %1, -1, !dbg !9891
  %12 = and i32 %10, %11, !dbg !9892
  %13 = and i32 %2, %1, !dbg !9893
  %14 = or i32 %12, %13, !dbg !9894
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !9895
  ret i32 0, !dbg !9896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9897 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9899, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.value(metadata i32 %1, metadata !9900, metadata !DIExpression()), !dbg !9903
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9904
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9904
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9904
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9901, metadata !DIExpression()), !dbg !9903
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9905
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9905
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9905
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9902, metadata !DIExpression()), !dbg !9903
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9906
  store volatile i32 %1, i32* %9, align 4, !dbg !9906
  ret i32 0, !dbg !9907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9908 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9910, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.value(metadata i32 %1, metadata !9911, metadata !DIExpression()), !dbg !9914
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9915
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9915
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9915
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9912, metadata !DIExpression()), !dbg !9914
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9916
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9916
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9916
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9913, metadata !DIExpression()), !dbg !9914
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !9917
  ret i32 0, !dbg !9918
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9919 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9921, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i32 %1, metadata !9922, metadata !DIExpression()), !dbg !9925
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9926
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9926
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9926
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9923, metadata !DIExpression()), !dbg !9925
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9927
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9927
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9927
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9924, metadata !DIExpression()), !dbg !9925
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9928
  %10 = load volatile i32, i32* %9, align 4, !dbg !9928
  %11 = xor i32 %10, %1, !dbg !9928
  store volatile i32 %11, i32* %9, align 4, !dbg !9928
  ret i32 0, !dbg !9929
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9930 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9932, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.value(metadata i8 %1, metadata !9933, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.value(metadata i32 %2, metadata !9934, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.value(metadata i32 %3, metadata !9935, metadata !DIExpression()), !dbg !9942
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9943
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9943
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9943
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9936, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.value(metadata i8* undef, metadata !9937, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.value(metadata i32 0, metadata !9939, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.value(metadata i32 0, metadata !9940, metadata !DIExpression()), !dbg !9942
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9944

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9945
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !9949
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9950
  %12 = load i32, i32* %11, align 4, !dbg !9950
  %13 = icmp eq i32 %10, %12, !dbg !9951
  br i1 %13, label %14, label %29, !dbg !9952

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9953
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9955
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9956
  br label %29, !dbg !9957

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9958
  %17 = load i8*, i8** %16, align 4, !dbg !9958
  call void @llvm.dbg.value(metadata i8* %17, metadata !9937, metadata !DIExpression()), !dbg !9942
  %18 = zext i8 %1 to i32, !dbg !9959
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9961
  %20 = icmp eq i32 %19, 0, !dbg !9962
  br i1 %20, label %21, label %29, !dbg !9963

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9964
  %23 = load i32, i32* %22, align 4, !dbg !9964
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !9965
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9966

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9939, metadata !DIExpression()), !dbg !9942
  br label %27, !dbg !9967

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9939, metadata !DIExpression()), !dbg !9942
  br label %27, !dbg !9969

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9939, metadata !DIExpression()), !dbg !9942
  br label %27, !dbg !9970

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9942
  call void @llvm.dbg.value(metadata i32 %28, metadata !9939, metadata !DIExpression()), !dbg !9942
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9971
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9972
  br label %29, !dbg !9972

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9942
  call void @llvm.dbg.value(metadata i32 %30, metadata !9940, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.label(metadata !9941), !dbg !9973
  ret i32 %30, !dbg !9974
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !9975 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9977, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9978, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.value(metadata i1 %2, metadata !9979, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9981
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9982
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9982
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9982
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9980, metadata !DIExpression()), !dbg !9981
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9983
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !9984
  ret i32 %8, !dbg !9985
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !9986 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9992, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9993, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata i1 %2, metadata !9994, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9995
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !9996
  br i1 %4, label %10, label %5, !dbg !9998

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9999
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !10002
  %8 = or i1 %7, %2, !dbg !10003
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10003
  br i1 %2, label %11, label %13, !dbg !10003

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10004

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10005
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !10008
  br label %13, !dbg !10009

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9995
  ret i32 %14, !dbg !10010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10011 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10015, metadata !DIExpression()), !dbg !10016
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10017
  %3 = icmp eq %struct._snode* %2, null, !dbg !10017
  ret i1 %3, !dbg !10017
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10018 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10022, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10023, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10024, metadata !DIExpression()), !dbg !10026
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10027
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10025, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10024, metadata !DIExpression()), !dbg !10026
  %4 = icmp eq %struct._snode* %3, null, !dbg !10029
  br i1 %4, label %15, label %5, !dbg !10027

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10025, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10024, metadata !DIExpression()), !dbg !10026
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10031
  br i1 %6, label %9, label %11, !dbg !10034

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10025, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10024, metadata !DIExpression()), !dbg !10026
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10031
  br i1 %8, label %9, label %11, !dbg !10034, !llvm.loop !10035

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !10036
  br label %15, !dbg !10036

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10025, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10024, metadata !DIExpression()), !dbg !10026
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !10029
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10025, metadata !DIExpression()), !dbg !10026
  %14 = icmp eq %struct._snode* %13, null, !dbg !10029
  br i1 %14, label %15, label %7, !dbg !10027, !llvm.loop !10035

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10039 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10043, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10044, metadata !DIExpression()), !dbg !10045
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10046
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !10046
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !10046
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10047
  %5 = icmp eq %struct._snode* %4, null, !dbg !10047
  br i1 %5, label %6, label %8, !dbg !10046

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10049
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !10049
  br label %8, !dbg !10049

8:                                                ; preds = %6, %2
  ret void, !dbg !10046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10051 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10055, metadata !DIExpression()), !dbg !10056
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10057
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10057
  ret %struct._snode* %3, !dbg !10058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !10059 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10063, metadata !DIExpression()), !dbg !10065
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10064, metadata !DIExpression()), !dbg !10065
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10066
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10067
  ret void, !dbg !10068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !10069 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10071, metadata !DIExpression()), !dbg !10073
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10072, metadata !DIExpression()), !dbg !10073
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10074
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10075
  ret void, !dbg !10076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10077 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10079, metadata !DIExpression()), !dbg !10080
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10081
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10081
  ret %struct._snode* %3, !dbg !10082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !10083 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10085, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10086, metadata !DIExpression()), !dbg !10087
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10088
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10089
  ret void, !dbg !10090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !10091 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10095, metadata !DIExpression()), !dbg !10098
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10096, metadata !DIExpression()), !dbg !10098
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10097, metadata !DIExpression()), !dbg !10098
  %4 = icmp eq %struct._snode* %1, null, !dbg !10099
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !10101
  br i1 %4, label %6, label %11, !dbg !10102

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !10103
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10105
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10105
  br i1 %8, label %9, label %15, !dbg !10103

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10107
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !10107
  br label %15, !dbg !10107

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !10109
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10111
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10111
  br i1 %13, label %14, label %15, !dbg !10109

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !10113
  br label %15, !dbg !10113

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !10102
  ret void, !dbg !10102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !10115 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10119, metadata !DIExpression()), !dbg !10120
  %2 = icmp eq %struct._snode* %0, null, !dbg !10121
  br i1 %2, label %5, label %3, !dbg !10121

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !10121
  br label %5, !dbg !10121

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10121
  ret %struct._snode* %6, !dbg !10121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10122 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10124, metadata !DIExpression()), !dbg !10125
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !10126
  ret %struct._snode* %2, !dbg !10126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10127 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10129, metadata !DIExpression()), !dbg !10130
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10131
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10131
  ret %struct._snode* %3, !dbg !10132
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10135, metadata !DIExpression()), !dbg !10138
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10139, !range !10140
  call void @llvm.dbg.value(metadata i32 %2, metadata !10136, metadata !DIExpression()), !dbg !10138
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10141
  call void @llvm.dbg.value(metadata i32 %3, metadata !10137, metadata !DIExpression()), !dbg !10138
  ret i32 %3, !dbg !10142
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10145, metadata !DIExpression()), !dbg !10148
  call void @llvm.dbg.value(metadata i8* %1, metadata !10146, metadata !DIExpression()), !dbg !10148
  call void @llvm.dbg.value(metadata i8* %1, metadata !10147, metadata !DIExpression()), !dbg !10148
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10149
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10149
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10150
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10150
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10150
  %8 = shl nuw i32 1, %0, !dbg !10151
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10152
  ret void, !dbg !10153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10154 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10158, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 %1, metadata !10159, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10160, metadata !DIExpression()), !dbg !10164
  %4 = bitcast i64* %3 to i8*, !dbg !10165
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10165
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10162, metadata !DIExpression()), !dbg !10164
  store i64 70368744177732, i64* %3, align 8, !dbg !10166
  call void @llvm.dbg.value(metadata i64* %3, metadata !10162, metadata !DIExpression(DW_OP_deref)), !dbg !10164
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10167
  call void @llvm.dbg.value(metadata i32 %5, metadata !10163, metadata !DIExpression()), !dbg !10164
  %6 = icmp eq i32 %5, 0, !dbg !10168
  br i1 %6, label %7, label %8, !dbg !10170

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10171
  br label %8, !dbg !10172

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10173
  ret void, !dbg !10173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10174 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10176, metadata !DIExpression()), !dbg !10179
  call void @llvm.dbg.value(metadata i8* %0, metadata !10177, metadata !DIExpression()), !dbg !10179
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10180
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10178, metadata !DIExpression()), !dbg !10179
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10181
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10181
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10182
  ret i32 %5, !dbg !10183
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10186, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.value(metadata i32 %1, metadata !10187, metadata !DIExpression()), !dbg !10189
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10190
  call void @llvm.dbg.value(metadata i32 %3, metadata !10188, metadata !DIExpression()), !dbg !10189
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10191
  ret void, !dbg !10192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !10193 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10197, metadata !DIExpression()), !dbg !10198
  %2 = sdiv i32 %0, 4, !dbg !10199
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10200
  %6 = add nsw i32 %5, 16, !dbg !10201
  %7 = shl i32 15, %6, !dbg !10202
  %8 = or i32 %7, %2, !dbg !10203
  ret i32 %8, !dbg !10204
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10209, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.value(metadata i32 %1, metadata !10210, metadata !DIExpression()), !dbg !10211
  %3 = and i32 %1, 255, !dbg !10212
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10212
  %5 = load volatile i32, i32* %4, align 4, !dbg !10212
  %6 = lshr i32 %1, 16, !dbg !10212
  %7 = xor i32 %6, -1, !dbg !10212
  %8 = and i32 %5, %7, !dbg !10212
  call void @llvm.dbg.value(metadata i32 %6, metadata !10213, metadata !DIExpression()) #24, !dbg !10217
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10219, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %9, metadata !10216, metadata !DIExpression()) #24, !dbg !10217
  call void @llvm.dbg.value(metadata i32 %9, metadata !10221, metadata !DIExpression()) #24, !dbg !10226
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !10228, !range !3964
  %11 = shl i32 %0, %10, !dbg !10212
  %12 = or i32 %11, %8, !dbg !10212
  store volatile i32 %12, i32* %4, align 4, !dbg !10212
  ret void, !dbg !10229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10230 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10234, metadata !DIExpression()), !dbg !10239
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10235, metadata !DIExpression()), !dbg !10239
  call void @llvm.dbg.value(metadata i32 %2, metadata !10236, metadata !DIExpression()), !dbg !10239
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10240
  %5 = icmp eq %struct._snode* %4, null, !dbg !10240
  br i1 %5, label %21, label %6, !dbg !10240

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10242
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10238, metadata !DIExpression()), !dbg !10239
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10237, metadata !DIExpression()), !dbg !10239
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10243
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10243
  %11 = load i32, i32* %10, align 4, !dbg !10243
  %12 = and i32 %11, %2, !dbg !10247
  %13 = icmp eq i32 %12, 0, !dbg !10247
  br i1 %13, label %19, label %14, !dbg !10248

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10237, metadata !DIExpression()), !dbg !10239
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10249
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10249
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10249
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10251
  br label %19, !dbg !10252

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10237, metadata !DIExpression()), !dbg !10239
  %20 = icmp eq %struct._snode* %8, null, !dbg !10253
  br i1 %20, label %21, label %6, !dbg !10253

21:                                               ; preds = %19, %3
  ret void, !dbg !10254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10255 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10257, metadata !DIExpression()), !dbg !10258
  %2 = and i32 %0, 255, !dbg !10259
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10259
  %4 = load volatile i32, i32* %3, align 4, !dbg !10259
  %5 = lshr i32 %0, 16, !dbg !10259
  %6 = and i32 %4, %5, !dbg !10259
  call void @llvm.dbg.value(metadata i32 %5, metadata !10213, metadata !DIExpression()) #24, !dbg !10260
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !10262, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %7, metadata !10216, metadata !DIExpression()) #24, !dbg !10260
  call void @llvm.dbg.value(metadata i32 %7, metadata !10221, metadata !DIExpression()) #24, !dbg !10263
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10265, !range !3964
  %9 = lshr i32 %6, %8, !dbg !10266
  ret i32 %9, !dbg !10267
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10268 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10273, metadata !DIExpression()), !dbg !10275
  call void @llvm.dbg.value(metadata i32 %1, metadata !10274, metadata !DIExpression()), !dbg !10275
  %3 = shl i32 %1, 16, !dbg !10276
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10276
  store volatile i32 %3, i32* %4, align 4, !dbg !10276
  ret void, !dbg !10277
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10278 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10282, metadata !DIExpression()), !dbg !10283
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10284
  %3 = load volatile i32, i32* %2, align 4, !dbg !10284
  ret i32 %3, !dbg !10285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10286 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10288, metadata !DIExpression()), !dbg !10290
  call void @llvm.dbg.value(metadata i32 %1, metadata !10289, metadata !DIExpression()), !dbg !10290
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10291
  store volatile i32 %1, i32* %3, align 4, !dbg !10291
  ret void, !dbg !10292
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10293 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10295, metadata !DIExpression()), !dbg !10296
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10297
  %3 = load volatile i32, i32* %2, align 4, !dbg !10297
  ret i32 %3, !dbg !10298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !10299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10303, metadata !DIExpression()), !dbg !10305
  call void @llvm.dbg.value(metadata i32* %1, metadata !10304, metadata !DIExpression()), !dbg !10305
  %3 = and i32 %0, 131072, !dbg !10306
  %4 = icmp eq i32 %3, 0, !dbg !10308
  br i1 %4, label %22, label %5, !dbg !10309

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10310
  %6 = and i32 %0, 2, !dbg !10312
  %7 = icmp eq i32 %6, 0, !dbg !10314
  br i1 %7, label %11, label %8, !dbg !10315

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10316
  %10 = icmp eq i32 %9, 0, !dbg !10316
  br i1 %10, label %33, label %11, !dbg !10319

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10320
  store i32 %12, i32* %1, align 4, !dbg !10320
  %13 = and i32 %0, 16, !dbg !10321
  %14 = icmp eq i32 %13, 0, !dbg !10323
  br i1 %14, label %17, label %15, !dbg !10324

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10325
  br label %31, !dbg !10327

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10328
  %19 = icmp eq i32 %18, 0, !dbg !10330
  br i1 %19, label %33, label %20, !dbg !10331

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10332
  br label %31, !dbg !10334

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10335
  %24 = icmp eq i32 %23, 0, !dbg !10337
  br i1 %24, label %31, label %25, !dbg !10338

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10339
  %27 = icmp eq i32 %26, 0, !dbg !10342
  br i1 %27, label %28, label %31, !dbg !10343

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10344
  br label %33, !dbg !10345

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10305
  ret i32 %34, !dbg !10345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10350, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 %1, metadata !10351, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 %2, metadata !10352, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 %3, metadata !10353, metadata !DIExpression()), !dbg !10361
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10362
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10362
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10362
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10354, metadata !DIExpression()), !dbg !10361
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10363
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10363
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10363
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10355, metadata !DIExpression()), !dbg !10361
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10364
  call void @llvm.dbg.value(metadata i32 %11, metadata !10356, metadata !DIExpression()), !dbg !10361
  %12 = and i32 %2, 48, !dbg !10365
  call void @llvm.dbg.value(metadata i32 %12, metadata !10357, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 %2, metadata !10358, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10361
  call void @llvm.dbg.value(metadata i32 %2, metadata !10359, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10361
  call void @llvm.dbg.value(metadata i32 %2, metadata !10360, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10361
  %13 = lshr i32 %2, 6, !dbg !10366
  %14 = and i32 %13, 1, !dbg !10366
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10367
  %15 = lshr i32 %2, 7, !dbg !10368
  %16 = and i32 %15, 3, !dbg !10368
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10369
  %17 = lshr i32 %2, 9, !dbg !10370
  %18 = and i32 %17, 3, !dbg !10370
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10371
  %19 = icmp eq i32 %12, 32, !dbg !10372
  br i1 %19, label %20, label %24, !dbg !10374

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10375
  br i1 %21, label %22, label %23, !dbg !10378

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10379
  br label %24, !dbg !10381

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10382
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10384
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10385
  ret void, !dbg !10386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !10387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10389, metadata !DIExpression()), !dbg !10391
  %2 = shl nuw i32 1, %0, !dbg !10392
  call void @llvm.dbg.value(metadata i32 %2, metadata !10390, metadata !DIExpression()), !dbg !10391
  ret i32 %2, !dbg !10393
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10394 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10398, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %1, metadata !10399, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %2, metadata !10400, metadata !DIExpression()), !dbg !10401
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10402
  %5 = load volatile i32, i32* %4, align 4, !dbg !10402
  %6 = xor i32 %1, -1, !dbg !10402
  %7 = and i32 %5, %6, !dbg !10402
  %8 = mul i32 %2, %1, !dbg !10402
  %9 = or i32 %7, %8, !dbg !10402
  store volatile i32 %9, i32* %4, align 4, !dbg !10402
  ret void, !dbg !10403
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10404 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10406, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.value(metadata i32 %1, metadata !10407, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.value(metadata i32 %2, metadata !10408, metadata !DIExpression()), !dbg !10409
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10410
  %5 = load volatile i32, i32* %4, align 4, !dbg !10410
  call void @llvm.dbg.value(metadata i32 %1, metadata !10213, metadata !DIExpression()) #24, !dbg !10411
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10413, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #24, !dbg !10411
  call void @llvm.dbg.value(metadata i32 %6, metadata !10221, metadata !DIExpression()) #24, !dbg !10414
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10416, !range !3964
  %8 = shl nuw nsw i32 %7, 1, !dbg !10410
  %9 = shl i32 3, %8, !dbg !10410
  %10 = xor i32 %9, -1, !dbg !10410
  %11 = and i32 %5, %10, !dbg !10410
  call void @llvm.dbg.value(metadata i32 %1, metadata !10213, metadata !DIExpression()) #24, !dbg !10417
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #24, !dbg !10417
  call void @llvm.dbg.value(metadata i32 %6, metadata !10221, metadata !DIExpression()) #24, !dbg !10419
  %12 = shl i32 %2, %8, !dbg !10410
  %13 = or i32 %11, %12, !dbg !10410
  store volatile i32 %13, i32* %4, align 4, !dbg !10410
  ret void, !dbg !10421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10422 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10424, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata i32 %1, metadata !10425, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata i32 %2, metadata !10426, metadata !DIExpression()), !dbg !10427
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10428
  %5 = load volatile i32, i32* %4, align 4, !dbg !10428
  call void @llvm.dbg.value(metadata i32 %1, metadata !10213, metadata !DIExpression()) #24, !dbg !10429
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10431, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #24, !dbg !10429
  call void @llvm.dbg.value(metadata i32 %6, metadata !10221, metadata !DIExpression()) #24, !dbg !10432
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10434, !range !3964
  %8 = shl nuw nsw i32 %7, 1, !dbg !10428
  %9 = shl i32 3, %8, !dbg !10428
  %10 = xor i32 %9, -1, !dbg !10428
  %11 = and i32 %5, %10, !dbg !10428
  call void @llvm.dbg.value(metadata i32 %1, metadata !10213, metadata !DIExpression()) #24, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #24, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %6, metadata !10221, metadata !DIExpression()) #24, !dbg !10437
  %12 = shl i32 %2, %8, !dbg !10428
  %13 = or i32 %11, %12, !dbg !10428
  store volatile i32 %13, i32* %4, align 4, !dbg !10428
  ret void, !dbg !10439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10440 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10442, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata i32 %1, metadata !10443, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata i32 %2, metadata !10444, metadata !DIExpression()), !dbg !10445
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10446
  %5 = load volatile i32, i32* %4, align 4, !dbg !10446
  call void @llvm.dbg.value(metadata i32 %1, metadata !10213, metadata !DIExpression()) #24, !dbg !10447
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10449, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #24, !dbg !10447
  call void @llvm.dbg.value(metadata i32 %6, metadata !10221, metadata !DIExpression()) #24, !dbg !10450
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10452, !range !3964
  %8 = shl nuw nsw i32 %7, 2, !dbg !10446
  %9 = shl i32 15, %8, !dbg !10446
  %10 = xor i32 %9, -1, !dbg !10446
  %11 = and i32 %5, %10, !dbg !10446
  call void @llvm.dbg.value(metadata i32 %1, metadata !10213, metadata !DIExpression()) #24, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #24, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %6, metadata !10221, metadata !DIExpression()) #24, !dbg !10455
  %12 = shl i32 %2, %8, !dbg !10446
  %13 = or i32 %11, %12, !dbg !10446
  store volatile i32 %13, i32* %4, align 4, !dbg !10446
  ret void, !dbg !10457
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10458 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10460, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata i32 %1, metadata !10461, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata i32 %2, metadata !10462, metadata !DIExpression()), !dbg !10463
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10464
  %5 = load volatile i32, i32* %4, align 4, !dbg !10464
  %6 = lshr i32 %1, 8, !dbg !10464
  call void @llvm.dbg.value(metadata i32 %6, metadata !10213, metadata !DIExpression()) #24, !dbg !10465
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10467, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %7, metadata !10216, metadata !DIExpression()) #24, !dbg !10465
  call void @llvm.dbg.value(metadata i32 %7, metadata !10221, metadata !DIExpression()) #24, !dbg !10468
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10470, !range !3964
  %9 = shl nuw nsw i32 %8, 2, !dbg !10464
  %10 = shl i32 15, %9, !dbg !10464
  %11 = xor i32 %10, -1, !dbg !10464
  %12 = and i32 %5, %11, !dbg !10464
  call void @llvm.dbg.value(metadata i32 %6, metadata !10213, metadata !DIExpression()) #24, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %7, metadata !10216, metadata !DIExpression()) #24, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %7, metadata !10221, metadata !DIExpression()) #24, !dbg !10473
  %13 = shl i32 %2, %9, !dbg !10464
  %14 = or i32 %12, %13, !dbg !10464
  store volatile i32 %14, i32* %4, align 4, !dbg !10464
  ret void, !dbg !10475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10476 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10478, metadata !DIExpression()), !dbg !10481
  call void @llvm.dbg.value(metadata i32 %1, metadata !10479, metadata !DIExpression()), !dbg !10481
  call void @llvm.dbg.value(metadata i32 %2, metadata !10480, metadata !DIExpression()), !dbg !10481
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10482
  %5 = load volatile i32, i32* %4, align 4, !dbg !10482
  call void @llvm.dbg.value(metadata i32 %1, metadata !10213, metadata !DIExpression()) #24, !dbg !10483
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10485, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #24, !dbg !10483
  call void @llvm.dbg.value(metadata i32 %6, metadata !10221, metadata !DIExpression()) #24, !dbg !10486
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10488, !range !3964
  %8 = shl nuw nsw i32 %7, 1, !dbg !10482
  %9 = shl i32 3, %8, !dbg !10482
  %10 = xor i32 %9, -1, !dbg !10482
  %11 = and i32 %5, %10, !dbg !10482
  call void @llvm.dbg.value(metadata i32 %1, metadata !10213, metadata !DIExpression()) #24, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #24, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %6, metadata !10221, metadata !DIExpression()) #24, !dbg !10491
  %12 = shl i32 %2, %8, !dbg !10482
  %13 = or i32 %11, %12, !dbg !10482
  store volatile i32 %13, i32* %4, align 4, !dbg !10482
  ret void, !dbg !10493
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10494 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10496, metadata !DIExpression()), !dbg !10499
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10500
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10500
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10500
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10497, metadata !DIExpression()), !dbg !10499
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10501
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10502
  %6 = tail call fastcc zeroext i1 @device_is_ready.73() #26, !dbg !10503
  br i1 %6, label %7, label %11, !dbg !10505

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10506
  call void @llvm.dbg.value(metadata i32 %8, metadata !10498, metadata !DIExpression()), !dbg !10499
  %9 = icmp slt i32 %8, 0, !dbg !10507
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10509
  br label %11, !dbg !10509

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10499
  ret i32 %12, !dbg !10510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.73() unnamed_addr #1 !dbg !10511 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10515, metadata !DIExpression()), !dbg !10516
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10517, !srcloc !10519
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.74() #26, !dbg !10520
  ret i1 %1, !dbg !10521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10522 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10526, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i8 1, metadata !10527, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10528, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i32 0, metadata !10529, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10530, metadata !DIExpression()), !dbg !10531
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10532
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10532
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10532
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10528, metadata !DIExpression()), !dbg !10531
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10533
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10536
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10537
  call void @llvm.dbg.value(metadata i32 %7, metadata !10529, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i32 %7, metadata !10529, metadata !DIExpression()), !dbg !10531
  ret i32 %7, !dbg !10538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.74() unnamed_addr #1 !dbg !10539 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10541, metadata !DIExpression()), !dbg !10542
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10543
  ret i1 %1, !dbg !10544
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10545 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10549, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i32 %1, metadata !10550, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i32 %2, metadata !10551, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i32 %3, metadata !10552, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i32 0, metadata !10553, metadata !DIExpression()), !dbg !10557
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10558
  %5 = icmp eq i32 %3, 17, !dbg !10559
  br i1 %5, label %6, label %14, !dbg !10560

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10561
  call void @llvm.dbg.value(metadata i32 %7, metadata !10554, metadata !DIExpression()), !dbg !10562
  %8 = icmp eq i32 %7, 0, !dbg !10563
  %9 = shl nuw i32 1, %1, !dbg !10565
  br i1 %8, label %12, label %10, !dbg !10566

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10567
  br label %14, !dbg !10569

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10570
  br label %14, !dbg !10573

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10574
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !10575 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10577, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata i8* %1, metadata !10578, metadata !DIExpression()), !dbg !10581
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10582
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10582
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10582
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10579, metadata !DIExpression()), !dbg !10581
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10583
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10583
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !10585
  %9 = icmp eq i32 %8, 0, !dbg !10585
  br i1 %9, label %12, label %10, !dbg !10586

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10587
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !10589
  br label %12, !dbg !10590

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10591
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10593
  %15 = icmp eq i32 %14, 0, !dbg !10593
  br i1 %15, label %19, label %16, !dbg !10594

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10595
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !10596
  store i8 %18, i8* %1, align 1, !dbg !10597
  br label %19, !dbg !10598

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10581
  ret i32 %20, !dbg !10599
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10600 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10602, metadata !DIExpression()), !dbg !10606
  call void @llvm.dbg.value(metadata i8 %1, metadata !10603, metadata !DIExpression()), !dbg !10606
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10607
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10607
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10607
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10604, metadata !DIExpression()), !dbg !10606
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10608

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10609
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10612
  %10 = icmp eq i32 %9, 0, !dbg !10612
  br i1 %10, label %18, label %11, !dbg !10613

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10614, !srcloc !10621
  call void @llvm.dbg.value(metadata i32 undef, metadata !10617, metadata !DIExpression()) #24, !dbg !10622
  call void @llvm.dbg.value(metadata i32 undef, metadata !10618, metadata !DIExpression()) #24, !dbg !10622
  call void @llvm.dbg.value(metadata i32 undef, metadata !10605, metadata !DIExpression()), !dbg !10606
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10623
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10625
  %15 = icmp eq i32 %14, 0, !dbg !10625
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10614
  br i1 %15, label %17, label %19, !dbg !10626

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10617, metadata !DIExpression()) #24, !dbg !10622
  call void @llvm.dbg.value(metadata i32 %16, metadata !10605, metadata !DIExpression()), !dbg !10606
  call void @llvm.dbg.value(metadata i32 undef, metadata !10627, metadata !DIExpression()) #24, !dbg !10630
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !10632, !srcloc !10633
  br label %18, !dbg !10634

18:                                               ; preds = %17, %7
  br label %7, !dbg !10609, !llvm.loop !10635

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10614
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10637
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !10638
  call void @llvm.dbg.value(metadata i32 %20, metadata !10627, metadata !DIExpression()) #24, !dbg !10639
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !10641, !srcloc !10633
  ret void, !dbg !10642
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !10643 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10645, metadata !DIExpression()), !dbg !10648
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10649
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10649
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10649
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10646, metadata !DIExpression()), !dbg !10648
  call void @llvm.dbg.value(metadata i32 0, metadata !10647, metadata !DIExpression()), !dbg !10648
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10650
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10650
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10652
  %8 = icmp ne i32 %7, 0, !dbg !10652
  %9 = zext i1 %8 to i32, !dbg !10653
  call void @llvm.dbg.value(metadata i32 %9, metadata !10647, metadata !DIExpression()), !dbg !10648
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10654
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10656
  %12 = icmp eq i32 %11, 0, !dbg !10656
  %13 = or i32 %9, 2, !dbg !10657
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10657
  call void @llvm.dbg.value(metadata i32 %14, metadata !10647, metadata !DIExpression()), !dbg !10648
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10658
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !10660
  %17 = icmp eq i32 %16, 0, !dbg !10660
  %18 = or i32 %14, 4, !dbg !10661
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10661
  call void @llvm.dbg.value(metadata i32 %19, metadata !10647, metadata !DIExpression()), !dbg !10648
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10662
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !10664
  %22 = icmp eq i32 %21, 0, !dbg !10664
  %23 = or i32 %19, 8, !dbg !10665
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10665
  call void @llvm.dbg.value(metadata i32 %24, metadata !10647, metadata !DIExpression()), !dbg !10648
  %25 = and i32 %24, 8, !dbg !10666
  %26 = icmp eq i32 %25, 0, !dbg !10666
  br i1 %26, label %29, label %27, !dbg !10668

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10669
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !10671
  br label %29, !dbg !10672

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10673
  %31 = icmp eq i32 %30, 0, !dbg !10673
  br i1 %31, label %34, label %32, !dbg !10675

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10676
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !10678
  br label %34, !dbg !10679

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10680
  %36 = icmp eq i32 %35, 0, !dbg !10680
  br i1 %36, label %39, label %37, !dbg !10682

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10683
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !10685
  br label %39, !dbg !10686

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10687
  %41 = icmp eq i32 %40, 0, !dbg !10687
  br i1 %41, label %44, label %42, !dbg !10689

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10690
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !10692
  br label %44, !dbg !10693

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10694
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !10695
  ret i32 %24, !dbg !10696
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10697 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10699, metadata !DIExpression()), !dbg !10708
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10700, metadata !DIExpression()), !dbg !10708
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10709
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10709
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10709
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10701, metadata !DIExpression()), !dbg !10708
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10710
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10710
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10710
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10702, metadata !DIExpression()), !dbg !10708
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10711
  %10 = load i8, i8* %9, align 4, !dbg !10711
  %11 = zext i8 %10 to i32, !dbg !10712
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !10713
  call void @llvm.dbg.value(metadata i32 %12, metadata !10704, metadata !DIExpression()), !dbg !10708
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10714
  %14 = load i8, i8* %13, align 1, !dbg !10714
  %15 = zext i8 %14 to i32, !dbg !10715
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !10716
  call void @llvm.dbg.value(metadata i32 %16, metadata !10705, metadata !DIExpression()), !dbg !10708
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10717
  %18 = load i8, i8* %17, align 2, !dbg !10717
  %19 = zext i8 %18 to i32, !dbg !10718
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !10719
  call void @llvm.dbg.value(metadata i32 %20, metadata !10706, metadata !DIExpression()), !dbg !10708
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10720
  %22 = load i8, i8* %21, align 1, !dbg !10720
  %23 = zext i8 %22 to i32, !dbg !10721
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !10722
  call void @llvm.dbg.value(metadata i32 %24, metadata !10707, metadata !DIExpression()), !dbg !10708
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10723

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10725
  br i1 %26, label %69, label %27, !dbg !10727

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10728

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10729
  br i1 %29, label %65, label %30, !dbg !10729

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10731
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10708
  br i1 %31, label %38, label %34, !dbg !10733

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10734
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !10734

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10737
  br i1 %37, label %38, label %69, !dbg !10738

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10739
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !10740
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !10741
  %41 = icmp eq i32 %12, %40, !dbg !10743
  br i1 %41, label %43, label %42, !dbg !10744

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !10745
  br label %43, !dbg !10747

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !10748
  %45 = icmp eq i32 %16, %44, !dbg !10750
  br i1 %45, label %47, label %46, !dbg !10751

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !10752
  br label %47, !dbg !10754

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !10755
  %49 = icmp eq i32 %20, %48, !dbg !10757
  br i1 %49, label %51, label %50, !dbg !10758

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !10759
  br label %51, !dbg !10761

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !10762
  %53 = icmp eq i32 %24, %52, !dbg !10764
  br i1 %53, label %55, label %54, !dbg !10765

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !10766
  br label %55, !dbg !10768

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10769
  %57 = load i32, i32* %56, align 4, !dbg !10769
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10771
  %59 = load i32, i32* %58, align 4, !dbg !10771
  %60 = icmp eq i32 %57, %59, !dbg !10772
  br i1 %60, label %63, label %61, !dbg !10773

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !10774
  %62 = load i32, i32* %56, align 4, !dbg !10776
  store i32 %62, i32* %58, align 4, !dbg !10777
  br label %63, !dbg !10778

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10779
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !10780
  br label %69, !dbg !10781

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10729
  %67 = and i8 %66, 1, !dbg !10729
  %68 = icmp eq i8 %67, 0, !dbg !10729
  br i1 %68, label %30, label %69, !dbg !10729

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10708
  ret i32 %70, !dbg !10782
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !10783 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10785, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10786, metadata !DIExpression()), !dbg !10788
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10789
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10789
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10789
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10787, metadata !DIExpression()), !dbg !10788
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10790
  %7 = load i32, i32* %6, align 4, !dbg !10790
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10791
  store i32 %7, i32* %8, align 4, !dbg !10792
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10793, !range !10794
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !10795
  %11 = trunc i32 %10 to i8, !dbg !10795
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10796
  store i8 %11, i8* %12, align 4, !dbg !10797
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !10798, !range !10799
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !10800
  %15 = trunc i32 %14 to i8, !dbg !10800
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10801
  store i8 %15, i8* %16, align 1, !dbg !10802
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !10803
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10804, !range !10794
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !10805
  %20 = trunc i32 %19 to i8, !dbg !10805
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10806
  store i8 %20, i8* %21, align 2, !dbg !10807
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !10808, !range !10809
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !10810
  %24 = trunc i32 %23 to i8, !dbg !10810
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10811
  store i8 %24, i8* %25, align 1, !dbg !10812
  ret i32 0, !dbg !10813
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !10814 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10816, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.value(metadata i8* %1, metadata !10817, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.value(metadata i32 %2, metadata !10818, metadata !DIExpression()), !dbg !10822
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10823
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10823
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10823
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10819, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.value(metadata i8 0, metadata !10820, metadata !DIExpression()), !dbg !10822
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10824
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10824
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10826
  %10 = icmp eq i32 %9, 0, !dbg !10826
  br i1 %10, label %30, label %11, !dbg !10827

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10828, !srcloc !10621
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !10828
  call void @llvm.dbg.value(metadata i32 %13, metadata !10617, metadata !DIExpression()) #24, !dbg !10830
  call void @llvm.dbg.value(metadata i32 undef, metadata !10618, metadata !DIExpression()) #24, !dbg !10830
  call void @llvm.dbg.value(metadata i32 %13, metadata !10821, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.value(metadata i8 0, metadata !10820, metadata !DIExpression()), !dbg !10822
  %14 = icmp sgt i32 %2, 0, !dbg !10831
  br i1 %14, label %15, label %28, !dbg !10832

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !10820, metadata !DIExpression()), !dbg !10822
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10833
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !10834
  %20 = icmp eq i32 %19, 0, !dbg !10832
  br i1 %20, label %28, label %21, !dbg !10835

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10836
  %23 = add i8 %17, 1, !dbg !10838
  call void @llvm.dbg.value(metadata i8 %23, metadata !10820, metadata !DIExpression()), !dbg !10822
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !10839
  %25 = load i8, i8* %24, align 1, !dbg !10839
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !10840
  %26 = zext i8 %23 to i32, !dbg !10841
  %27 = icmp slt i32 %26, %2, !dbg !10831
  br i1 %27, label %15, label %28, !dbg !10832, !llvm.loop !10842

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !10841
  call void @llvm.dbg.value(metadata i32 %13, metadata !10627, metadata !DIExpression()) #24, !dbg !10844
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !10846, !srcloc !10633
  br label %30, !dbg !10847

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !10822
  ret i32 %31, !dbg !10848
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !10849 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10851, metadata !DIExpression()), !dbg !10856
  call void @llvm.dbg.value(metadata i8* %1, metadata !10852, metadata !DIExpression()), !dbg !10856
  call void @llvm.dbg.value(metadata i32 %2, metadata !10853, metadata !DIExpression()), !dbg !10856
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10857
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10857
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10857
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10854, metadata !DIExpression()), !dbg !10856
  call void @llvm.dbg.value(metadata i8 0, metadata !10855, metadata !DIExpression()), !dbg !10856
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10858
  call void @llvm.dbg.value(metadata i8 0, metadata !10855, metadata !DIExpression()), !dbg !10856
  %8 = icmp sgt i32 %2, 0, !dbg !10859
  br i1 %8, label %9, label %28, !dbg !10860

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !10855, metadata !DIExpression()), !dbg !10856
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10858
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10861
  %14 = icmp eq i32 %13, 0, !dbg !10860
  br i1 %14, label %28, label %15, !dbg !10862

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10863
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !10865
  %18 = add i8 %11, 1, !dbg !10866
  call void @llvm.dbg.value(metadata i8 %18, metadata !10855, metadata !DIExpression()), !dbg !10856
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !10867
  store i8 %17, i8* %19, align 1, !dbg !10868
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10869
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !10871
  %22 = icmp eq i32 %21, 0, !dbg !10871
  br i1 %22, label %25, label %23, !dbg !10872

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10873
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !10875
  br label %25, !dbg !10876

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !10855, metadata !DIExpression()), !dbg !10856
  %26 = zext i8 %18 to i32, !dbg !10877
  %27 = icmp slt i32 %26, %2, !dbg !10859
  br i1 %27, label %9, label %28, !dbg !10860, !llvm.loop !10878

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !10877
  ret i32 %29, !dbg !10880
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10881 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10883, metadata !DIExpression()), !dbg !10885
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10886
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10886
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10886
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10884, metadata !DIExpression()), !dbg !10885
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10887
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10887
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10888
  ret void, !dbg !10889
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10890 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10892, metadata !DIExpression()), !dbg !10894
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10895
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10895
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10895
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10893, metadata !DIExpression()), !dbg !10894
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10896
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10896
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10897
  ret void, !dbg !10898
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10899 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10901, metadata !DIExpression()), !dbg !10903
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10904
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10904
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10904
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10902, metadata !DIExpression()), !dbg !10903
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10905
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10905
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10906
  %8 = icmp eq i32 %7, 0, !dbg !10906
  br i1 %8, label %14, label %9, !dbg !10907

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10908
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !10909
  %12 = icmp ne i32 %11, 0, !dbg !10907
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !10910
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10911 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10913, metadata !DIExpression()), !dbg !10915
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10916
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10916
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10916
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10914, metadata !DIExpression()), !dbg !10915
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10917
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10917
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10918
  ret void, !dbg !10919
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10920 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10922, metadata !DIExpression()), !dbg !10924
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10925
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10925
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10925
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10923, metadata !DIExpression()), !dbg !10924
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10926
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10926
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10927
  ret void, !dbg !10928
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !10929 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10931, metadata !DIExpression()), !dbg !10933
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10934
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10934
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10934
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10932, metadata !DIExpression()), !dbg !10933
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10935
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10935
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10936
  ret i32 %7, !dbg !10937
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10938 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10940, metadata !DIExpression()), !dbg !10942
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10943
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10943
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10943
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10941, metadata !DIExpression()), !dbg !10942
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10944
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10944
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10945
  ret i32 %7, !dbg !10946
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10947 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10949, metadata !DIExpression()), !dbg !10951
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10952
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10952
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10952
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10950, metadata !DIExpression()), !dbg !10951
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10953
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10953
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10954
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10955
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10955
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !10955

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10957
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10959
  br label %11, !dbg !10960

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10959
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10961
  ret void, !dbg !10962
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10963 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10965, metadata !DIExpression()), !dbg !10967
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10968
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10968
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10968
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10966, metadata !DIExpression()), !dbg !10967
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10969
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10969
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10970
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10971
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10971
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !10971

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10973
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10975
  br label %11, !dbg !10976

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10975
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10977
  ret void, !dbg !10978
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !10979 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10981, metadata !DIExpression()), !dbg !10983
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10984
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10984
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10984
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10982, metadata !DIExpression()), !dbg !10983
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10985
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10985
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10986
  %8 = icmp eq i32 %7, 0, !dbg !10986
  br i1 %8, label %13, label %9, !dbg !10987

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10988
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10989
  %12 = icmp eq i32 %11, 0, !dbg !10989
  br i1 %12, label %13, label %22, !dbg !10990

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10991
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !10992
  %16 = icmp eq i32 %15, 0, !dbg !10992
  br i1 %16, label %22, label %17, !dbg !10993

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10994
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !10995
  %20 = icmp ne i32 %19, 0, !dbg !10993
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !10996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !10997 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10999, metadata !DIExpression()), !dbg !11000
  ret i32 1, !dbg !11001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !11002 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11004, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !11005, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.value(metadata i8* %2, metadata !11006, metadata !DIExpression()), !dbg !11008
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11009
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !11009
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !11009
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !11007, metadata !DIExpression()), !dbg !11008
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !11010
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !11011
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !11012
  store i8* %2, i8** %8, align 4, !dbg !11013
  ret void, !dbg !11014
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11015 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11020, metadata !DIExpression()), !dbg !11021
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11022
  %3 = load volatile i32, i32* %2, align 4, !dbg !11022
  %4 = lshr i32 %3, 5, !dbg !11023
  %5 = and i32 %4, 1, !dbg !11023
  ret i32 %5, !dbg !11024
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11025 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11027, metadata !DIExpression()), !dbg !11028
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11029
  %3 = load volatile i32, i32* %2, align 4, !dbg !11029
  %4 = lshr i32 %3, 5, !dbg !11030
  %5 = and i32 %4, 1, !dbg !11030
  ret i32 %5, !dbg !11031
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11032 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11034, metadata !DIExpression()), !dbg !11035
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11036
  %3 = load volatile i32, i32* %2, align 4, !dbg !11036
  %4 = lshr i32 %3, 6, !dbg !11037
  %5 = and i32 %4, 1, !dbg !11037
  ret i32 %5, !dbg !11038
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11039 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11041, metadata !DIExpression()), !dbg !11042
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11043
  %3 = load volatile i32, i32* %2, align 4, !dbg !11043
  %4 = lshr i32 %3, 6, !dbg !11044
  %5 = and i32 %4, 1, !dbg !11044
  ret i32 %5, !dbg !11045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11046 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11050, metadata !DIExpression()), !dbg !11053
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !11054

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11055, metadata !DIExpression()) #24, !dbg !11061
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11064, !srcloc !11065
  call void @llvm.dbg.value(metadata i32 %4, metadata !11060, metadata !DIExpression()) #24, !dbg !11061
  %5 = and i32 %4, -2, !dbg !11066
  call void @llvm.dbg.value(metadata i32 %5, metadata !11051, metadata !DIExpression()), !dbg !11067
  call void @llvm.dbg.value(metadata i32 %5, metadata !11068, metadata !DIExpression()) #24, !dbg !11075
  call void @llvm.dbg.value(metadata i32* %2, metadata !11073, metadata !DIExpression()) #24, !dbg !11075
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11077, !srcloc !11078
  call void @llvm.dbg.value(metadata i32 %6, metadata !11074, metadata !DIExpression()) #24, !dbg !11075
  %7 = icmp eq i32 %6, 0, !dbg !11054
  br i1 %7, label %8, label %3, !dbg !11066, !llvm.loop !11079

8:                                                ; preds = %3
  ret void, !dbg !11080
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11081 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11083, metadata !DIExpression()), !dbg !11084
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11085
  %3 = load volatile i32, i32* %2, align 4, !dbg !11085
  %4 = and i32 %3, -65, !dbg !11085
  store volatile i32 %4, i32* %2, align 4, !dbg !11085
  ret void, !dbg !11086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11087 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11089, metadata !DIExpression()), !dbg !11092
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11093

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11055, metadata !DIExpression()) #24, !dbg !11094
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11097, !srcloc !11065
  call void @llvm.dbg.value(metadata i32 %4, metadata !11060, metadata !DIExpression()) #24, !dbg !11094
  %5 = and i32 %4, -257, !dbg !11098
  call void @llvm.dbg.value(metadata i32 %5, metadata !11090, metadata !DIExpression()), !dbg !11099
  call void @llvm.dbg.value(metadata i32 %5, metadata !11068, metadata !DIExpression()) #24, !dbg !11100
  call void @llvm.dbg.value(metadata i32* %2, metadata !11073, metadata !DIExpression()) #24, !dbg !11100
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11102, !srcloc !11078
  call void @llvm.dbg.value(metadata i32 %6, metadata !11074, metadata !DIExpression()) #24, !dbg !11100
  %7 = icmp eq i32 %6, 0, !dbg !11093
  br i1 %7, label %8, label %3, !dbg !11098, !llvm.loop !11103

8:                                                ; preds = %3
  ret void, !dbg !11104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11105 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11107, metadata !DIExpression()), !dbg !11110
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !11111

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11055, metadata !DIExpression()) #24, !dbg !11112
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11115, !srcloc !11065
  call void @llvm.dbg.value(metadata i32 %4, metadata !11060, metadata !DIExpression()) #24, !dbg !11112
  %5 = or i32 %4, 1, !dbg !11116
  call void @llvm.dbg.value(metadata i32 %5, metadata !11108, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.value(metadata i32 %5, metadata !11068, metadata !DIExpression()) #24, !dbg !11118
  call void @llvm.dbg.value(metadata i32* %2, metadata !11073, metadata !DIExpression()) #24, !dbg !11118
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11120, !srcloc !11078
  call void @llvm.dbg.value(metadata i32 %6, metadata !11074, metadata !DIExpression()) #24, !dbg !11118
  %7 = icmp eq i32 %6, 0, !dbg !11111
  br i1 %7, label %8, label %3, !dbg !11116, !llvm.loop !11121

8:                                                ; preds = %3
  ret void, !dbg !11122
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11123 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11125, metadata !DIExpression()), !dbg !11126
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11127
  %3 = load volatile i32, i32* %2, align 4, !dbg !11127
  %4 = or i32 %3, 64, !dbg !11127
  store volatile i32 %4, i32* %2, align 4, !dbg !11127
  ret void, !dbg !11128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11129 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11131, metadata !DIExpression()), !dbg !11134
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11135

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11055, metadata !DIExpression()) #24, !dbg !11136
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11139, !srcloc !11065
  call void @llvm.dbg.value(metadata i32 %4, metadata !11060, metadata !DIExpression()) #24, !dbg !11136
  %5 = or i32 %4, 256, !dbg !11140
  call void @llvm.dbg.value(metadata i32 %5, metadata !11132, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.value(metadata i32 %5, metadata !11068, metadata !DIExpression()) #24, !dbg !11142
  call void @llvm.dbg.value(metadata i32* %2, metadata !11073, metadata !DIExpression()) #24, !dbg !11142
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11144, !srcloc !11078
  call void @llvm.dbg.value(metadata i32 %6, metadata !11074, metadata !DIExpression()) #24, !dbg !11142
  %7 = icmp eq i32 %6, 0, !dbg !11135
  br i1 %7, label %8, label %3, !dbg !11140, !llvm.loop !11145

8:                                                ; preds = %3
  ret void, !dbg !11146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11147 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11149, metadata !DIExpression()), !dbg !11152
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11153

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11055, metadata !DIExpression()) #24, !dbg !11154
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11157, !srcloc !11065
  call void @llvm.dbg.value(metadata i32 %4, metadata !11060, metadata !DIExpression()) #24, !dbg !11154
  %5 = and i32 %4, -33, !dbg !11158
  call void @llvm.dbg.value(metadata i32 %5, metadata !11150, metadata !DIExpression()), !dbg !11159
  call void @llvm.dbg.value(metadata i32 %5, metadata !11068, metadata !DIExpression()) #24, !dbg !11160
  call void @llvm.dbg.value(metadata i32* %2, metadata !11073, metadata !DIExpression()) #24, !dbg !11160
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11162, !srcloc !11078
  call void @llvm.dbg.value(metadata i32 %6, metadata !11074, metadata !DIExpression()) #24, !dbg !11160
  %7 = icmp eq i32 %6, 0, !dbg !11153
  br i1 %7, label %8, label %3, !dbg !11158, !llvm.loop !11163

8:                                                ; preds = %3
  ret void, !dbg !11164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11165 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11167, metadata !DIExpression()), !dbg !11170
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11171

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11055, metadata !DIExpression()) #24, !dbg !11172
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11175, !srcloc !11065
  call void @llvm.dbg.value(metadata i32 %4, metadata !11060, metadata !DIExpression()) #24, !dbg !11172
  %5 = or i32 %4, 32, !dbg !11176
  call void @llvm.dbg.value(metadata i32 %5, metadata !11168, metadata !DIExpression()), !dbg !11177
  call void @llvm.dbg.value(metadata i32 %5, metadata !11068, metadata !DIExpression()) #24, !dbg !11178
  call void @llvm.dbg.value(metadata i32* %2, metadata !11073, metadata !DIExpression()) #24, !dbg !11178
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11180, !srcloc !11078
  call void @llvm.dbg.value(metadata i32 %6, metadata !11074, metadata !DIExpression()) #24, !dbg !11178
  %7 = icmp eq i32 %6, 0, !dbg !11171
  br i1 %7, label %8, label %3, !dbg !11176, !llvm.loop !11181

8:                                                ; preds = %3
  ret void, !dbg !11182
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11183 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11185, metadata !DIExpression()), !dbg !11186
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11187
  %3 = load volatile i32, i32* %2, align 4, !dbg !11187
  %4 = lshr i32 %3, 7, !dbg !11188
  %5 = and i32 %4, 1, !dbg !11188
  ret i32 %5, !dbg !11189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11190 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11192, metadata !DIExpression()), !dbg !11195
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11196

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11055, metadata !DIExpression()) #24, !dbg !11197
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11200, !srcloc !11065
  call void @llvm.dbg.value(metadata i32 %4, metadata !11060, metadata !DIExpression()) #24, !dbg !11197
  %5 = and i32 %4, -65, !dbg !11201
  call void @llvm.dbg.value(metadata i32 %5, metadata !11193, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata i32 %5, metadata !11068, metadata !DIExpression()) #24, !dbg !11203
  call void @llvm.dbg.value(metadata i32* %2, metadata !11073, metadata !DIExpression()) #24, !dbg !11203
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11205, !srcloc !11078
  call void @llvm.dbg.value(metadata i32 %6, metadata !11074, metadata !DIExpression()) #24, !dbg !11203
  %7 = icmp eq i32 %6, 0, !dbg !11196
  br i1 %7, label %8, label %3, !dbg !11201, !llvm.loop !11206

8:                                                ; preds = %3
  ret void, !dbg !11207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11208 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11210, metadata !DIExpression()), !dbg !11213
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11214

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11055, metadata !DIExpression()) #24, !dbg !11215
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11218, !srcloc !11065
  call void @llvm.dbg.value(metadata i32 %4, metadata !11060, metadata !DIExpression()) #24, !dbg !11215
  %5 = or i32 %4, 64, !dbg !11219
  call void @llvm.dbg.value(metadata i32 %5, metadata !11211, metadata !DIExpression()), !dbg !11220
  call void @llvm.dbg.value(metadata i32 %5, metadata !11068, metadata !DIExpression()) #24, !dbg !11221
  call void @llvm.dbg.value(metadata i32* %2, metadata !11073, metadata !DIExpression()) #24, !dbg !11221
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11223, !srcloc !11078
  call void @llvm.dbg.value(metadata i32 %6, metadata !11074, metadata !DIExpression()) #24, !dbg !11221
  %7 = icmp eq i32 %6, 0, !dbg !11214
  br i1 %7, label %8, label %3, !dbg !11219, !llvm.loop !11224

8:                                                ; preds = %3
  ret void, !dbg !11225
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11226 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11230, metadata !DIExpression()), !dbg !11231
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11232
  %3 = load volatile i32, i32* %2, align 4, !dbg !11232
  %4 = trunc i32 %3 to i8, !dbg !11233
  ret i8 %4, !dbg !11234
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11235 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11237, metadata !DIExpression()), !dbg !11238
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11239
  %3 = load volatile i32, i32* %2, align 4, !dbg !11239
  %4 = lshr i32 %3, 3, !dbg !11240
  %5 = and i32 %4, 1, !dbg !11240
  ret i32 %5, !dbg !11241
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11242 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11244, metadata !DIExpression()), !dbg !11246
  %3 = bitcast i32* %2 to i8*, !dbg !11247
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11247
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11245, metadata !DIExpression()), !dbg !11248
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11249
  %5 = load volatile i32, i32* %4, align 4, !dbg !11249
  store volatile i32 %5, i32* %2, align 4, !dbg !11250
  %6 = load volatile i32, i32* %2, align 4, !dbg !11251
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11252
  %8 = load volatile i32, i32* %7, align 4, !dbg !11252
  store volatile i32 %8, i32* %2, align 4, !dbg !11253
  %9 = load volatile i32, i32* %2, align 4, !dbg !11254
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11255
  ret void, !dbg !11255
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11256 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11260, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.value(metadata i8 %1, metadata !11261, metadata !DIExpression()), !dbg !11262
  %3 = zext i8 %1 to i32, !dbg !11263
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11264
  store volatile i32 %3, i32* %4, align 4, !dbg !11265
  ret void, !dbg !11266
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11267 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11271, metadata !DIExpression()), !dbg !11273
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11274
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11274
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11274
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11272, metadata !DIExpression()), !dbg !11273
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11275
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11275
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11276
  ret i32 %7, !dbg !11277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !11278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11282, metadata !DIExpression()), !dbg !11283
  %2 = icmp eq i32 %0, 1024, !dbg !11284
  %3 = select i1 %2, i32 2, i32 0, !dbg !11284
  %4 = icmp eq i32 %0, 1536, !dbg !11284
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11284
  ret i32 %5, !dbg !11285
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11286 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11288, metadata !DIExpression()), !dbg !11290
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11291
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11291
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11291
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11289, metadata !DIExpression()), !dbg !11290
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11292
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11292
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11293
  ret i32 %7, !dbg !11294
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !11295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11299, metadata !DIExpression()), !dbg !11300
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11301
  %3 = icmp ult i32 %2, 4, !dbg !11301
  br i1 %3, label %4, label %7, !dbg !11301

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11301
  %6 = load i32, i32* %5, align 4, !dbg !11301
  br label %7, !dbg !11301

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11302
  ret i32 %8, !dbg !11304
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11305 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11307, metadata !DIExpression()), !dbg !11309
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11310
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11310
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11310
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11308, metadata !DIExpression()), !dbg !11309
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11311
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11311
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11312
  ret i32 %7, !dbg !11313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11318, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 %1, metadata !11319, metadata !DIExpression()), !dbg !11320
  %3 = icmp eq i32 %0, 4096, !dbg !11321
  %4 = icmp eq i32 %1, 0, !dbg !11321
  %5 = select i1 %4, i32 4, i32 3, !dbg !11321
  %6 = select i1 %4, i32 3, i32 2, !dbg !11321
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11321
  ret i32 %7, !dbg !11322
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11323 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11325, metadata !DIExpression()), !dbg !11327
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11328
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11328
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11328
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11326, metadata !DIExpression()), !dbg !11327
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11329
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11329
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11330
  ret i32 %7, !dbg !11331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11336, metadata !DIExpression()), !dbg !11337
  %2 = icmp eq i32 %0, 768, !dbg !11338
  %3 = zext i1 %2 to i32, !dbg !11337
  ret i32 %3, !dbg !11340
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11341 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11343, metadata !DIExpression()), !dbg !11344
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11345
  %3 = load volatile i32, i32* %2, align 4, !dbg !11345
  %4 = and i32 %3, 768, !dbg !11345
  ret i32 %4, !dbg !11346
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11347 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11349, metadata !DIExpression()), !dbg !11350
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11351
  %3 = load volatile i32, i32* %2, align 4, !dbg !11351
  %4 = and i32 %3, 4096, !dbg !11351
  ret i32 %4, !dbg !11352
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11353 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11355, metadata !DIExpression()), !dbg !11356
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11357
  %3 = load volatile i32, i32* %2, align 4, !dbg !11357
  %4 = and i32 %3, 12288, !dbg !11357
  ret i32 %4, !dbg !11358
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11359 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11361, metadata !DIExpression()), !dbg !11362
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11363
  %3 = load volatile i32, i32* %2, align 4, !dbg !11363
  %4 = and i32 %3, 1536, !dbg !11363
  ret i32 %4, !dbg !11364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !11365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11369, metadata !DIExpression()), !dbg !11370
  %2 = icmp eq i32 %0, 2, !dbg !11371
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11371
  %4 = icmp eq i32 %0, 1, !dbg !11371
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11371
  ret i32 %5, !dbg !11372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11377, metadata !DIExpression()), !dbg !11378
  %2 = icmp ult i32 %0, 3, !dbg !11379
  br i1 %2, label %3, label %6, !dbg !11379

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11379
  %5 = load i32, i32* %4, align 4, !dbg !11379
  br label %6, !dbg !11379

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11380
  ret i32 %7, !dbg !11382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11387, metadata !DIExpression()), !dbg !11389
  call void @llvm.dbg.value(metadata i32 %1, metadata !11388, metadata !DIExpression()), !dbg !11389
  %3 = icmp eq i32 %0, 4, !dbg !11390
  %4 = icmp eq i32 %1, 0, !dbg !11390
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11390
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11390
  ret i32 %6, !dbg !11391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11392 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11396, metadata !DIExpression()), !dbg !11397
  %2 = icmp eq i32 %0, 1, !dbg !11398
  %3 = select i1 %2, i32 768, i32 0, !dbg !11397
  ret i32 %3, !dbg !11400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11401 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11403, metadata !DIExpression()), !dbg !11404
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11405
  %3 = load volatile i32, i32* %2, align 4, !dbg !11405
  %4 = and i32 %3, -8193, !dbg !11405
  store volatile i32 %4, i32* %2, align 4, !dbg !11405
  ret void, !dbg !11406
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11407 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11411, metadata !DIExpression()), !dbg !11414
  call void @llvm.dbg.value(metadata i32 %1, metadata !11412, metadata !DIExpression()), !dbg !11414
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11415
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11415
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11415
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11413, metadata !DIExpression()), !dbg !11414
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11416
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11416
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11417
  ret void, !dbg !11418
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11419 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11421, metadata !DIExpression()), !dbg !11424
  call void @llvm.dbg.value(metadata i32 %1, metadata !11422, metadata !DIExpression()), !dbg !11424
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11425
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11425
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11425
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11423, metadata !DIExpression()), !dbg !11424
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11426
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11426
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11427
  ret void, !dbg !11428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11429 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11431, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.value(metadata i32 %1, metadata !11432, metadata !DIExpression()), !dbg !11434
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11435
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11435
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11435
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11433, metadata !DIExpression()), !dbg !11434
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11436
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11436
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11437
  ret void, !dbg !11438
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11441, metadata !DIExpression()), !dbg !11444
  call void @llvm.dbg.value(metadata i32 %1, metadata !11442, metadata !DIExpression()), !dbg !11444
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11445
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11445
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11445
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11443, metadata !DIExpression()), !dbg !11444
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11446
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11446
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11447
  ret void, !dbg !11448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11449 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11451, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata i32 %1, metadata !11452, metadata !DIExpression()), !dbg !11456
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11457
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11457
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11457
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11453, metadata !DIExpression()), !dbg !11456
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11458
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11458
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11458
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11454, metadata !DIExpression()), !dbg !11456
  %10 = bitcast i32* %3 to i8*, !dbg !11459
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11459
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11460
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11460
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11464
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11464
  %15 = load i8*, i8** %14, align 4, !dbg !11464
  call void @llvm.dbg.value(metadata i32* %3, metadata !11455, metadata !DIExpression(DW_OP_deref)), !dbg !11456
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11465
  %17 = icmp slt i32 %16, 0, !dbg !11466
  br i1 %17, label %23, label %18, !dbg !11467

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11468
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11468
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !11469
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11470
  %22 = load i32, i32* %3, align 4, !dbg !11471
  call void @llvm.dbg.value(metadata i32 %22, metadata !11455, metadata !DIExpression()), !dbg !11456
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !11472
  br label %23, !dbg !11473

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11473
  ret void, !dbg !11473
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11474 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11476, metadata !DIExpression()), !dbg !11477
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11478
  %3 = load volatile i32, i32* %2, align 4, !dbg !11478
  %4 = or i32 %3, 8192, !dbg !11478
  store volatile i32 %4, i32* %2, align 4, !dbg !11478
  ret void, !dbg !11479
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11482, metadata !DIExpression()), !dbg !11486
  call void @llvm.dbg.value(metadata i8* %1, metadata !11483, metadata !DIExpression()), !dbg !11486
  call void @llvm.dbg.value(metadata i32* %2, metadata !11484, metadata !DIExpression()), !dbg !11486
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11487
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11487
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11487
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11485, metadata !DIExpression()), !dbg !11486
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11488
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11488
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11490
  br i1 %9, label %12, label %10, !dbg !11491

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11492
  br label %12, !dbg !11493

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11486
  ret i32 %13, !dbg !11494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11495 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11499, metadata !DIExpression()), !dbg !11501
  call void @llvm.dbg.value(metadata i32 0, metadata !11500, metadata !DIExpression()), !dbg !11501
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11502
  %3 = load volatile i32, i32* %2, align 4, !dbg !11502
  %4 = and i32 %3, -32769, !dbg !11502
  store volatile i32 %4, i32* %2, align 4, !dbg !11502
  ret void, !dbg !11503
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11504 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11508, metadata !DIExpression()), !dbg !11512
  call void @llvm.dbg.value(metadata i32 %1, metadata !11509, metadata !DIExpression()), !dbg !11512
  call void @llvm.dbg.value(metadata i32 0, metadata !11510, metadata !DIExpression()), !dbg !11512
  call void @llvm.dbg.value(metadata i32 %2, metadata !11511, metadata !DIExpression()), !dbg !11512
  %4 = zext i32 %1 to i64, !dbg !11513
  %5 = mul nuw nsw i64 %4, 25, !dbg !11513
  %6 = zext i32 %2 to i64, !dbg !11513
  %7 = shl nuw nsw i64 %6, 2, !dbg !11513
  %8 = udiv i64 %5, %7, !dbg !11513
  %9 = trunc i64 %8 to i32, !dbg !11513
  %10 = udiv i32 %9, 100, !dbg !11513
  %11 = shl nuw nsw i32 %10, 4, !dbg !11513
  %12 = mul i32 %10, -100, !dbg !11513
  %13 = add i32 %12, %9, !dbg !11513
  %14 = shl i32 %13, 4, !dbg !11513
  %15 = add i32 %14, 50, !dbg !11513
  %16 = udiv i32 %15, 100, !dbg !11513
  %17 = and i32 %16, 240, !dbg !11513
  %18 = add nuw nsw i32 %17, %11, !dbg !11513
  %19 = and i32 %16, 15, !dbg !11513
  %20 = and i32 %18, 65520, !dbg !11516
  %21 = or i32 %20, %19, !dbg !11516
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11517
  store volatile i32 %21, i32* %22, align 4, !dbg !11518
  ret void, !dbg !11519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11520 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11522, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i32 %1, metadata !11523, metadata !DIExpression()), !dbg !11524
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11525
  %4 = load volatile i32, i32* %3, align 4, !dbg !11525
  %5 = and i32 %4, -769, !dbg !11525
  %6 = or i32 %5, %1, !dbg !11525
  store volatile i32 %6, i32* %3, align 4, !dbg !11525
  ret void, !dbg !11526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11527 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11529, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.value(metadata i32 %1, metadata !11530, metadata !DIExpression()), !dbg !11531
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11532
  %4 = load volatile i32, i32* %3, align 4, !dbg !11532
  %5 = and i32 %4, -4097, !dbg !11532
  %6 = or i32 %5, %1, !dbg !11532
  store volatile i32 %6, i32* %3, align 4, !dbg !11532
  ret void, !dbg !11533
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11534 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11536, metadata !DIExpression()), !dbg !11538
  call void @llvm.dbg.value(metadata i32 %1, metadata !11537, metadata !DIExpression()), !dbg !11538
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11539
  %4 = load volatile i32, i32* %3, align 4, !dbg !11539
  %5 = and i32 %4, -12289, !dbg !11539
  %6 = or i32 %5, %1, !dbg !11539
  store volatile i32 %6, i32* %3, align 4, !dbg !11539
  ret void, !dbg !11540
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11541 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11543, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 %1, metadata !11544, metadata !DIExpression()), !dbg !11545
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11546
  %4 = load volatile i32, i32* %3, align 4, !dbg !11546
  %5 = and i32 %4, -1537, !dbg !11546
  %6 = or i32 %5, %1, !dbg !11546
  store volatile i32 %6, i32* %3, align 4, !dbg !11546
  ret void, !dbg !11547
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11548 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11550, metadata !DIExpression()), !dbg !11551
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11552
  %3 = load volatile i32, i32* %2, align 4, !dbg !11552
  %4 = and i32 %3, 1, !dbg !11552
  ret i32 %4, !dbg !11553
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11554 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11556, metadata !DIExpression()), !dbg !11557
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11558
  %3 = load volatile i32, i32* %2, align 4, !dbg !11558
  %4 = lshr i32 %3, 1, !dbg !11559
  %5 = and i32 %4, 1, !dbg !11559
  ret i32 %5, !dbg !11560
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11561 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11563, metadata !DIExpression()), !dbg !11564
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11565
  %3 = load volatile i32, i32* %2, align 4, !dbg !11565
  %4 = lshr i32 %3, 8, !dbg !11566
  %5 = and i32 %4, 1, !dbg !11566
  ret i32 %5, !dbg !11567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11568 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11570, metadata !DIExpression()), !dbg !11571
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11572
  store volatile i32 -257, i32* %2, align 4, !dbg !11572
  ret void, !dbg !11573
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11574 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11576, metadata !DIExpression()), !dbg !11578
  %3 = bitcast i32* %2 to i8*, !dbg !11579
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11579
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11577, metadata !DIExpression()), !dbg !11580
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11581
  %5 = load volatile i32, i32* %4, align 4, !dbg !11581
  store volatile i32 %5, i32* %2, align 4, !dbg !11582
  %6 = load volatile i32, i32* %2, align 4, !dbg !11583
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11584
  %8 = load volatile i32, i32* %7, align 4, !dbg !11584
  store volatile i32 %8, i32* %2, align 4, !dbg !11585
  %9 = load volatile i32, i32* %2, align 4, !dbg !11586
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11587
  ret void, !dbg !11587
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11588 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11590, metadata !DIExpression()), !dbg !11592
  %3 = bitcast i32* %2 to i8*, !dbg !11593
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11593
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11591, metadata !DIExpression()), !dbg !11594
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11595
  %5 = load volatile i32, i32* %4, align 4, !dbg !11595
  store volatile i32 %5, i32* %2, align 4, !dbg !11596
  %6 = load volatile i32, i32* %2, align 4, !dbg !11597
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11598
  %8 = load volatile i32, i32* %7, align 4, !dbg !11598
  store volatile i32 %8, i32* %2, align 4, !dbg !11599
  %9 = load volatile i32, i32* %2, align 4, !dbg !11600
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11601
  ret void, !dbg !11601
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11602 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11604, metadata !DIExpression()), !dbg !11606
  %3 = bitcast i32* %2 to i8*, !dbg !11607
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11607
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11605, metadata !DIExpression()), !dbg !11608
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11609
  %5 = load volatile i32, i32* %4, align 4, !dbg !11609
  store volatile i32 %5, i32* %2, align 4, !dbg !11610
  %6 = load volatile i32, i32* %2, align 4, !dbg !11611
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11612
  %8 = load volatile i32, i32* %7, align 4, !dbg !11612
  store volatile i32 %8, i32* %2, align 4, !dbg !11613
  %9 = load volatile i32, i32* %2, align 4, !dbg !11614
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11615
  ret void, !dbg !11615
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1705 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1707, metadata !DIExpression()), !dbg !11616
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #25, !dbg !11617
  tail call void @arch_irq_enable(i32 noundef 37) #25, !dbg !11619
  ret void, !dbg !11619
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_1(%struct.device* nocapture noundef readnone %0) #1 !dbg !1754 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1756, metadata !DIExpression()), !dbg !11620
  tail call void @z_arm_irq_priority_set(i32 noundef 38, i32 noundef 0, i32 noundef 0) #25, !dbg !11621
  tail call void @arch_irq_enable(i32 noundef 38) #25, !dbg !11623
  ret void, !dbg !11623
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_2(%struct.device* nocapture noundef readnone %0) #1 !dbg !1771 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1773, metadata !DIExpression()), !dbg !11624
  tail call void @z_arm_irq_priority_set(i32 noundef 39, i32 noundef 0, i32 noundef 0) #25, !dbg !11625
  tail call void @arch_irq_enable(i32 noundef 39) #25, !dbg !11627
  ret void, !dbg !11627
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_3(%struct.device* nocapture noundef readnone %0) #1 !dbg !1788 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1790, metadata !DIExpression()), !dbg !11628
  tail call void @z_arm_irq_priority_set(i32 noundef 52, i32 noundef 0, i32 noundef 0) #25, !dbg !11629
  tail call void @arch_irq_enable(i32 noundef 52) #25, !dbg !11631
  ret void, !dbg !11631
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !11632 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11634, metadata !DIExpression()), !dbg !11636
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11637
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11637
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11637
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11635, metadata !DIExpression()), !dbg !11636
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !11638
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !11638
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !11640
  br i1 %7, label %11, label %8, !dbg !11641

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !11642
  %10 = load i8*, i8** %9, align 4, !dbg !11642
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !11644
  br label %11, !dbg !11645

11:                                               ; preds = %8, %1
  ret void, !dbg !11646
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !11647 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11649, metadata !DIExpression()), !dbg !11655
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11656
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11656
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11656
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11650, metadata !DIExpression()), !dbg !11655
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11657
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11657
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11657
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11651, metadata !DIExpression()), !dbg !11655
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11658
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11659
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11659
  %10 = tail call fastcc zeroext i1 @device_is_ready.82(%struct.device* noundef %9) #26, !dbg !11661
  br i1 %10, label %11, label %51, !dbg !11662

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !11663
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11664
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11664
  %15 = load i8*, i8** %14, align 4, !dbg !11664
  %16 = tail call fastcc i32 @clock_control_on.83(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !11665
  call void @llvm.dbg.value(metadata i32 %16, metadata !11654, metadata !DIExpression()), !dbg !11655
  %17 = icmp eq i32 %16, 0, !dbg !11666
  br i1 %17, label %18, label %51, !dbg !11668

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11669
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !11669
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !11670
  call void @llvm.dbg.value(metadata i32 %21, metadata !11654, metadata !DIExpression()), !dbg !11655
  %22 = icmp slt i32 %21, 0, !dbg !11671
  br i1 %22, label %51, label %23, !dbg !11673

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11674
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11674
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !11675
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11676
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !11677
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11678
  %28 = load i32, i32* %27, align 4, !dbg !11678
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !11680

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !11652, metadata !DIExpression()), !dbg !11655
  call void @llvm.dbg.value(metadata i32 4096, metadata !11653, metadata !DIExpression()), !dbg !11655
  br label %31, !dbg !11681

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !11652, metadata !DIExpression()), !dbg !11655
  call void @llvm.dbg.value(metadata i32 0, metadata !11653, metadata !DIExpression()), !dbg !11655
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !11684
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !11684
  call void @llvm.dbg.value(metadata i32 %33, metadata !11653, metadata !DIExpression()), !dbg !11655
  call void @llvm.dbg.value(metadata i32 %32, metadata !11652, metadata !DIExpression()), !dbg !11655
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11685
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !11686
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11687
  %36 = load i8, i8* %35, align 4, !dbg !11687, !range !7266
  %37 = icmp eq i8 %36, 0, !dbg !11687
  br i1 %37, label %39, label %38, !dbg !11689

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11690
  br label %39, !dbg !11692

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11693
  %41 = load i32, i32* %40, align 4, !dbg !11693
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !11694
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11695
  %43 = load i8, i8* %42, align 4, !dbg !11695, !range !7266
  %44 = icmp eq i8 %43, 0, !dbg !11695
  br i1 %44, label %47, label %45, !dbg !11697

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11698
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !11700
  br label %47, !dbg !11701

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11702
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !11703
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !11704
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !11704
  tail call void %50(%struct.device* noundef nonnull %0) #25, !dbg !11705
  br label %51, !dbg !11706

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !11655
  ret i32 %52, !dbg !11707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11708 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11710, metadata !DIExpression()), !dbg !11714
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11715
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11715
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11715
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11711, metadata !DIExpression()), !dbg !11714
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11712, metadata !DIExpression()), !dbg !11714
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11716
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11717
  ret void, !dbg !11718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.82(%struct.device* noundef %0) unnamed_addr #1 !dbg !11719 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11723, metadata !DIExpression()), !dbg !11724
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11725, !srcloc !11727
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.84(%struct.device* noundef %0) #26, !dbg !11728
  ret i1 %2, !dbg !11729
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.83(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11730 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11732, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i8* %1, metadata !11733, metadata !DIExpression()), !dbg !11735
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11736
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11736
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11736
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11734, metadata !DIExpression()), !dbg !11735
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11737
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11737
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11738
  ret i32 %8, !dbg !11739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11740 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11744, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.value(metadata i8 0, metadata !11745, metadata !DIExpression()), !dbg !11748
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11749
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11749
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11747, metadata !DIExpression(DW_OP_deref)), !dbg !11748
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11750
  call void @llvm.dbg.value(metadata i32 %4, metadata !11746, metadata !DIExpression()), !dbg !11748
  %5 = icmp slt i32 %4, 0, !dbg !11751
  br i1 %5, label %9, label %6, !dbg !11753

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11754
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11747, metadata !DIExpression()), !dbg !11748
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11755
  br label %9, !dbg !11756

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11748
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11757
  ret i32 %10, !dbg !11757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11758 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11760, metadata !DIExpression()), !dbg !11764
  call void @llvm.dbg.value(metadata i32 12, metadata !11761, metadata !DIExpression()), !dbg !11764
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11765

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11055, metadata !DIExpression()) #24, !dbg !11766
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11769, !srcloc !11065
  call void @llvm.dbg.value(metadata i32 %4, metadata !11060, metadata !DIExpression()) #24, !dbg !11766
  %5 = or i32 %4, 12, !dbg !11770
  call void @llvm.dbg.value(metadata i32 %5, metadata !11762, metadata !DIExpression()), !dbg !11771
  call void @llvm.dbg.value(metadata i32 %5, metadata !11068, metadata !DIExpression()) #24, !dbg !11772
  call void @llvm.dbg.value(metadata i32* %2, metadata !11073, metadata !DIExpression()) #24, !dbg !11772
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11774, !srcloc !11078
  call void @llvm.dbg.value(metadata i32 %6, metadata !11074, metadata !DIExpression()) #24, !dbg !11772
  %7 = icmp eq i32 %6, 0, !dbg !11765
  br i1 %7, label %8, label %3, !dbg !11770, !llvm.loop !11775

8:                                                ; preds = %3
  ret void, !dbg !11776
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11777 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11779, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 %1, metadata !11780, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 %2, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 0, metadata !11782, metadata !DIExpression()), !dbg !11783
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11784
  %5 = load volatile i32, i32* %4, align 4, !dbg !11784
  %6 = and i32 %5, -5633, !dbg !11784
  %7 = or i32 %2, %1, !dbg !11784
  %8 = or i32 %7, %6, !dbg !11784
  store volatile i32 %8, i32* %4, align 4, !dbg !11784
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11785
  %10 = load volatile i32, i32* %9, align 4, !dbg !11785
  %11 = and i32 %10, -12289, !dbg !11785
  store volatile i32 %11, i32* %9, align 4, !dbg !11785
  ret void, !dbg !11786
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11787 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11789, metadata !DIExpression()), !dbg !11790
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11791
  %3 = load volatile i32, i32* %2, align 4, !dbg !11791
  %4 = or i32 %3, 8, !dbg !11791
  store volatile i32 %4, i32* %2, align 4, !dbg !11791
  ret void, !dbg !11792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11793 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11797, metadata !DIExpression()), !dbg !11800
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11798, metadata !DIExpression()), !dbg !11800
  call void @llvm.dbg.value(metadata i32 0, metadata !11799, metadata !DIExpression()), !dbg !11800
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11801
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11801
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11802
  %5 = load i8, i8* %4, align 4, !dbg !11802
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11803
  ret i32 %6, !dbg !11804
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.84(%struct.device* noundef %0) unnamed_addr #1 !dbg !11805 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11807, metadata !DIExpression()), !dbg !11808
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11809
  ret i1 %2, !dbg !11810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11811 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11813, metadata !DIExpression()), !dbg !11814
  tail call fastcc void @__NVIC_SetPriority.86() #26, !dbg !11815
  store i32 8399, i32* @last_load, align 4, !dbg !11816
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11817
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11818
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11819
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11820
  %3 = or i32 %2, 7, !dbg !11820
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11820
  ret i32 0, !dbg !11821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.86() unnamed_addr #15 !dbg !11822 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11824, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32 1, metadata !11825, metadata !DIExpression()), !dbg !11826
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11827
  ret void, !dbg !11830
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11831 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11833, metadata !DIExpression()), !dbg !11835
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11836
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11837
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11838
  %5 = add i32 %4, %3, !dbg !11838
  store i32 %5, i32* @cycle_count, align 4, !dbg !11838
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11839
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11840
  %7 = sub i32 %5, %6, !dbg !11843
  %8 = udiv i32 %7, 8400, !dbg !11844
  call void @llvm.dbg.value(metadata i32 %8, metadata !11834, metadata !DIExpression()), !dbg !11835
  %9 = mul nuw i32 %8, 8400, !dbg !11845
  %10 = add i32 %9, %6, !dbg !11846
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11846
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11847
  tail call void @z_arm_int_exit() #25, !dbg !11848
  ret void, !dbg !11849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11850 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11855
  call void @llvm.dbg.value(metadata i32 %1, metadata !11852, metadata !DIExpression()), !dbg !11856
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11857
  call void @llvm.dbg.value(metadata i32 %2, metadata !11853, metadata !DIExpression()), !dbg !11856
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11858
  call void @llvm.dbg.value(metadata i32 %3, metadata !11854, metadata !DIExpression()), !dbg !11856
  %4 = and i32 %2, 65536, !dbg !11859
  %5 = icmp ne i32 %4, 0, !dbg !11859
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11861
  %8 = load i32, i32* @last_load, align 4, !dbg !11856
  br i1 %7, label %9, label %13, !dbg !11861

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11862
  %11 = add i32 %10, %8, !dbg !11862
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11862
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11864
  br label %13, !dbg !11865

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11866
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11867
  %16 = add i32 %14, %15, !dbg !11868
  ret i32 %16, !dbg !11869
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11874, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.value(metadata i1 %1, metadata !11875, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11887
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11888
  br i1 %4, label %5, label %8, !dbg !11888

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11890
  %7 = and i32 %6, -2, !dbg !11890
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11890
  store i32 -16777216, i32* @last_load, align 4, !dbg !11892
  br label %54, !dbg !11893

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11894
  call void @llvm.dbg.value(metadata i32 %9, metadata !11879, metadata !DIExpression()), !dbg !11887
  br i1 %3, label %18, label %10, !dbg !11895

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11895
  call void @llvm.dbg.value(metadata i32 undef, metadata !11874, metadata !DIExpression()), !dbg !11887
  %12 = icmp slt i32 %11, 1, !dbg !11896
  br i1 %12, label %18, label %13, !dbg !11896

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11896
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11896
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11896
  %17 = add nuw nsw i32 %16, 8399, !dbg !11896
  br label %18, !dbg !11896

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11874, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11897, metadata !DIExpression()) #24, !dbg !11904
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11906, !srcloc !11912
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11906
  call void @llvm.dbg.value(metadata i32 %21, metadata !11909, metadata !DIExpression()) #24, !dbg !11913
  call void @llvm.dbg.value(metadata i32 undef, metadata !11910, metadata !DIExpression()) #24, !dbg !11913
  call void @llvm.dbg.value(metadata i32 %21, metadata !11903, metadata !DIExpression()) #24, !dbg !11904
  call void @llvm.dbg.value(metadata i32 %21, metadata !11880, metadata !DIExpression()), !dbg !11887
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11914
  call void @llvm.dbg.value(metadata i32 %22, metadata !11885, metadata !DIExpression()), !dbg !11887
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11915
  call void @llvm.dbg.value(metadata i32 %23, metadata !11877, metadata !DIExpression()), !dbg !11887
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11916
  %25 = add i32 %24, %22, !dbg !11916
  store i32 %25, i32* @cycle_count, align 4, !dbg !11916
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11917
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11918
  %27 = sub i32 %25, %26, !dbg !11919
  call void @llvm.dbg.value(metadata i32 %27, metadata !11886, metadata !DIExpression()), !dbg !11887
  %28 = icmp slt i32 %27, 0, !dbg !11920
  br i1 %28, label %38, label %29, !dbg !11922

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11876, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.value(metadata i32 undef, metadata !11876, metadata !DIExpression()), !dbg !11887
  %30 = add nuw i32 %19, %27, !dbg !11923
  %31 = urem i32 %30, 8400, !dbg !11925
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11876, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11887
  %32 = sub nuw nsw i32 %19, %31, !dbg !11926
  call void @llvm.dbg.value(metadata i32 %32, metadata !11876, metadata !DIExpression()), !dbg !11887
  %33 = icmp ugt i32 %32, 1024, !dbg !11927
  br i1 %33, label %34, label %36, !dbg !11927

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11876, metadata !DIExpression()), !dbg !11887
  %35 = icmp ugt i32 %32, 16766400, !dbg !11928
  br i1 %35, label %38, label %36, !dbg !11930

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11931
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11932
  call void @llvm.dbg.value(metadata i32 %40, metadata !11878, metadata !DIExpression()), !dbg !11887
  %41 = add nsw i32 %39, -1, !dbg !11933
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11934
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11935
  %42 = icmp ult i32 %23, %40, !dbg !11936
  br i1 %42, label %43, label %48, !dbg !11938

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11939
  %45 = add i32 %23, %9, !dbg !11941
  %46 = sub i32 %45, %40, !dbg !11942
  %47 = add i32 %46, %44, !dbg !11939
  br label %52, !dbg !11943

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11944
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11946
  %51 = add i32 %49, %50, !dbg !11946
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11947
  store i32 %53, i32* @cycle_count, align 4, !dbg !11947
  call void @llvm.dbg.value(metadata i32 %21, metadata !11948, metadata !DIExpression()) #24, !dbg !11954
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11953, metadata !DIExpression()) #24, !dbg !11954
  call void @llvm.dbg.value(metadata i32 %21, metadata !11956, metadata !DIExpression()) #24, !dbg !11959
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !11961, !srcloc !11962
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11963
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11964 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11897, metadata !DIExpression()) #24, !dbg !11968
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11970, !srcloc !11912
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11970
  call void @llvm.dbg.value(metadata i32 %2, metadata !11909, metadata !DIExpression()) #24, !dbg !11972
  call void @llvm.dbg.value(metadata i32 undef, metadata !11910, metadata !DIExpression()) #24, !dbg !11972
  call void @llvm.dbg.value(metadata i32 %2, metadata !11903, metadata !DIExpression()) #24, !dbg !11968
  call void @llvm.dbg.value(metadata i32 %2, metadata !11966, metadata !DIExpression()), !dbg !11973
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11974
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11975
  %5 = add i32 %4, %3, !dbg !11976
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11977
  %7 = sub i32 %5, %6, !dbg !11978
  call void @llvm.dbg.value(metadata i32 %7, metadata !11967, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.value(metadata i32 %2, metadata !11948, metadata !DIExpression()) #24, !dbg !11979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11953, metadata !DIExpression()) #24, !dbg !11979
  call void @llvm.dbg.value(metadata i32 %2, metadata !11956, metadata !DIExpression()) #24, !dbg !11981
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11983, !srcloc !11962
  %8 = udiv i32 %7, 8400, !dbg !11984
  ret i32 %8, !dbg !11985
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11986 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11897, metadata !DIExpression()) #24, !dbg !11990
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11992, !srcloc !11912
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11992
  call void @llvm.dbg.value(metadata i32 %2, metadata !11909, metadata !DIExpression()) #24, !dbg !11994
  call void @llvm.dbg.value(metadata i32 undef, metadata !11910, metadata !DIExpression()) #24, !dbg !11994
  call void @llvm.dbg.value(metadata i32 %2, metadata !11903, metadata !DIExpression()) #24, !dbg !11990
  call void @llvm.dbg.value(metadata i32 %2, metadata !11988, metadata !DIExpression()), !dbg !11995
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11996
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11997
  %5 = add i32 %4, %3, !dbg !11998
  call void @llvm.dbg.value(metadata i32 %5, metadata !11989, metadata !DIExpression()), !dbg !11995
  call void @llvm.dbg.value(metadata i32 %2, metadata !11948, metadata !DIExpression()) #24, !dbg !11999
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11953, metadata !DIExpression()) #24, !dbg !11999
  call void @llvm.dbg.value(metadata i32 %2, metadata !11956, metadata !DIExpression()) #24, !dbg !12001
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !12003, !srcloc !11962
  ret i32 %5, !dbg !12004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !12005 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12006
  %2 = icmp eq i32 %1, -16777216, !dbg !12008
  br i1 %2, label %3, label %6, !dbg !12009

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12010
  %5 = or i32 %4, 1, !dbg !12010
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12010
  br label %6, !dbg !12012

6:                                                ; preds = %3, %0
  ret void, !dbg !12013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !12014 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12015
  %2 = and i32 %1, -2, !dbg !12015
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12015
  ret void, !dbg !12016
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !12017 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12043, metadata !DIExpression()), !dbg !12046
  call void @llvm.dbg.value(metadata i8 %1, metadata !12044, metadata !DIExpression()), !dbg !12046
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12045, metadata !DIExpression()), !dbg !12046
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12047
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12047
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12046
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12048
  %8 = load i8, i8* %6, align 4, !dbg !12049
  %9 = zext i8 %8 to i32, !dbg !12050
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12050
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12051
  br i1 %11, label %18, label %24, !dbg !12052

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12046
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12048
  %14 = load i8, i8* %6, align 4, !dbg !12049
  %15 = zext i8 %14 to i32, !dbg !12050
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12050
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12051
  br i1 %17, label %18, label %24, !dbg !12052, !llvm.loop !12053

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12055
  %21 = load i8, i8* %20, align 1, !dbg !12055
  %22 = icmp eq i8 %21, %1, !dbg !12058
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12059
  br i1 %22, label %24, label %12, !dbg !12060

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12046
  ret i32 %25, !dbg !12061
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12062 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12073, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.value(metadata i8 %1, metadata !12074, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.value(metadata i32 %2, metadata !12075, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.value(metadata i32 0, metadata !12078, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.value(metadata i32 0, metadata !12079, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.value(metadata i8 0, metadata !12080, metadata !DIExpression()), !dbg !12090
  %4 = icmp eq i8 %1, 0, !dbg !12091
  br i1 %4, label %35, label %5, !dbg !12092

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12091
  br label %9, !dbg !12092

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12080, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.value(metadata i32 %29, metadata !12078, metadata !DIExpression()), !dbg !12089
  %8 = icmp eq i32 %34, %6, !dbg !12091
  br i1 %8, label %35, label %9, !dbg !12092, !llvm.loop !12093

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12080, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.value(metadata i32 %11, metadata !12078, metadata !DIExpression()), !dbg !12089
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12095
  %13 = load i32, i32* %12, align 4, !dbg !12095
  call void @llvm.dbg.value(metadata i32 %13, metadata !12077, metadata !DIExpression()), !dbg !12089
  %14 = and i32 %13, 31, !dbg !12096
  %15 = icmp ult i32 %14, 16, !dbg !12097
  br i1 %15, label %16, label %20, !dbg !12098

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12099
  %18 = load i32, i32* %17, align 4, !dbg !12099
  %19 = or i32 %18, 32, !dbg !12101
  call void @llvm.dbg.value(metadata i32 %19, metadata !12078, metadata !DIExpression()), !dbg !12089
  br label %28, !dbg !12102

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12103

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12104
  %23 = load i32, i32* %22, align 4, !dbg !12104
  call void @llvm.dbg.value(metadata i32 %23, metadata !12082, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12105
  %24 = lshr i32 %23, 7, !dbg !12106
  %25 = and i32 %24, 16, !dbg !12106
  %26 = or i32 %25, %23, !dbg !12106
  call void @llvm.dbg.value(metadata i32 %26, metadata !12078, metadata !DIExpression()), !dbg !12089
  br label %28, !dbg !12107

27:                                               ; preds = %20
  br label %28, !dbg !12108

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12089
  call void @llvm.dbg.value(metadata i32 %29, metadata !12078, metadata !DIExpression()), !dbg !12089
  %30 = lshr i32 %13, 5, !dbg !12108
  %31 = and i32 %30, 255, !dbg !12108
  call void @llvm.dbg.value(metadata i32 %31, metadata !12076, metadata !DIExpression()), !dbg !12089
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !12109
  call void @llvm.dbg.value(metadata i32 %32, metadata !12079, metadata !DIExpression()), !dbg !12089
  %33 = icmp slt i32 %32, 0, !dbg !12110
  %34 = add nuw nsw i32 %10, 1, !dbg !12112
  call void @llvm.dbg.value(metadata i32 %34, metadata !12080, metadata !DIExpression()), !dbg !12090
  br i1 %33, label %35, label %7, !dbg !12113

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12114
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12119, metadata !DIExpression()), !dbg !12123
  call void @llvm.dbg.value(metadata i32 %1, metadata !12120, metadata !DIExpression()), !dbg !12123
  call void @llvm.dbg.value(metadata i32 %2, metadata !12121, metadata !DIExpression()), !dbg !12123
  %4 = icmp ugt i32 %0, 175, !dbg !12124
  br i1 %4, label %16, label %5, !dbg !12126

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12127
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12128
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12128
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12122, metadata !DIExpression()), !dbg !12123
  %9 = add nsw i32 %6, -8, !dbg !12129
  %10 = icmp ult i32 %9, 3, !dbg !12129
  br i1 %10, label %16, label %11, !dbg !12131

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.91(%struct.device* noundef %8) #26, !dbg !12132
  br i1 %12, label %13, label %16, !dbg !12133

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12134
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !12135
  br label %16, !dbg !12136

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12123
  ret i32 %17, !dbg !12137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.91(%struct.device* noundef %0) unnamed_addr #1 !dbg !12138 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12142, metadata !DIExpression()), !dbg !12143
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12144, !srcloc !12146
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.92(%struct.device* noundef %0) #26, !dbg !12147
  ret i1 %2, !dbg !12148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.92(%struct.device* noundef %0) unnamed_addr #1 !dbg !12149 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12151, metadata !DIExpression()), !dbg !12152
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12153
  ret i1 %2, !dbg !12154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !12155 {
  ret void, !dbg !12156
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !12157 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12159, metadata !DIExpression()), !dbg !12164
  call void @llvm.dbg.value(metadata i32 0, metadata !12160, metadata !DIExpression()), !dbg !12164
  call void @llvm.dbg.value(metadata i32 2, metadata !12161, metadata !DIExpression()), !dbg !12164
  call void @llvm.dbg.value(metadata i32 0, metadata !12162, metadata !DIExpression()), !dbg !12164
  call void @llvm.dbg.value(metadata i32 2, metadata !12163, metadata !DIExpression()), !dbg !12164
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12165
  %2 = and i32 %1, 12, !dbg !12166
  call void @llvm.dbg.value(metadata i32 %2, metadata !12159, metadata !DIExpression()), !dbg !12164
  %3 = icmp eq i32 %2, 8, !dbg !12167
  br i1 %3, label %4, label %18, !dbg !12167

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12168
  call void @llvm.dbg.value(metadata i32 %5, metadata !12162, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12164
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12170
  %7 = and i32 %6, 63, !dbg !12171
  call void @llvm.dbg.value(metadata i32 %7, metadata !12163, metadata !DIExpression()), !dbg !12164
  %8 = udiv i32 16000000, %7, !dbg !12172
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12172
  %10 = lshr i32 %9, 6, !dbg !12172
  %11 = and i32 %10, 511, !dbg !12172
  %12 = mul i32 %11, %8, !dbg !12172
  call void @llvm.dbg.value(metadata i32 %12, metadata !12160, metadata !DIExpression()), !dbg !12164
  call void @llvm.dbg.value(metadata i32 %12, metadata !12160, metadata !DIExpression()), !dbg !12164
  call void @llvm.dbg.value(metadata i32 %12, metadata !12160, metadata !DIExpression()), !dbg !12164
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12174
  %14 = lshr i32 %13, 15, !dbg !12175
  %15 = and i32 %14, 6, !dbg !12175
  %16 = add nuw nsw i32 %15, 2, !dbg !12175
  call void @llvm.dbg.value(metadata i32 %16, metadata !12161, metadata !DIExpression()), !dbg !12164
  %17 = udiv i32 %12, %16, !dbg !12176
  br label %18, !dbg !12177

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12178
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12179
  %21 = lshr i32 %20, 4, !dbg !12180
  %22 = and i32 %21, 15, !dbg !12180
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12181
  %24 = load i8, i8* %23, align 1, !dbg !12181
  %25 = zext i8 %24 to i32, !dbg !12181
  call void @llvm.dbg.value(metadata i32 %25, metadata !12159, metadata !DIExpression()), !dbg !12164
  %26 = lshr i32 %19, %25, !dbg !12182
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12182
  ret void, !dbg !12183
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12184 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12226, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.value(metadata i32 0, metadata !12227, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.value(metadata i32 0, metadata !12228, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.value(metadata i32 0, metadata !12229, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.value(metadata i32 0, metadata !12230, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.value(metadata i32 0, metadata !12231, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.value(metadata i32 0, metadata !12232, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.value(metadata i32 0, metadata !12233, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.value(metadata i32 0, metadata !12234, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.value(metadata i32 0, metadata !12235, metadata !DIExpression()), !dbg !12240
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12241
  %4 = load i32, i32* %3, align 4, !dbg !12241
  %5 = and i32 %4, 1, !dbg !12243
  %6 = icmp eq i32 %5, 0, !dbg !12244
  br i1 %6, label %17, label %7, !dbg !12245

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12246
  %9 = and i32 %8, -100663297, !dbg !12246
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12246
  %11 = load i32, i32* %10, align 4, !dbg !12246
  %12 = or i32 %9, %11, !dbg !12246
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12246
  %13 = load i32, i32* %10, align 4, !dbg !12248
  %14 = icmp eq i32 %13, 0, !dbg !12250
  %15 = zext i1 %14 to i32, !dbg !12251
  %16 = load i32, i32* %3, align 4, !dbg !12252
  br label %17, !dbg !12251

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !12252
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !12240
  call void @llvm.dbg.value(metadata i32 %19, metadata !12234, metadata !DIExpression()), !dbg !12240
  %20 = and i32 %18, 2, !dbg !12254
  %21 = icmp eq i32 %20, 0, !dbg !12255
  br i1 %21, label %32, label %22, !dbg !12256

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12257
  %24 = and i32 %23, -402653185, !dbg !12257
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12257
  %26 = load i32, i32* %25, align 4, !dbg !12257
  %27 = or i32 %24, %26, !dbg !12257
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12257
  %28 = load i32, i32* %25, align 4, !dbg !12259
  %29 = icmp eq i32 %28, 0, !dbg !12261
  %30 = select i1 %29, i32 1, i32 %19, !dbg !12262
  %31 = load i32, i32* %3, align 4, !dbg !12263
  br label %32, !dbg !12262

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !12263
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !12240
  call void @llvm.dbg.value(metadata i32 %34, metadata !12234, metadata !DIExpression()), !dbg !12240
  %35 = and i32 %33, 4, !dbg !12265
  %36 = icmp eq i32 %35, 0, !dbg !12266
  br i1 %36, label %49, label %37, !dbg !12267

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12268
  %39 = and i32 %38, -3145729, !dbg !12268
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12268
  %41 = load i32, i32* %40, align 4, !dbg !12268
  %42 = or i32 %39, %41, !dbg !12268
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12268
  %43 = load i32, i32* %40, align 4, !dbg !12270
  %44 = icmp eq i32 %43, 1048576, !dbg !12272
  %45 = select i1 %44, i32 1, i32 %34, !dbg !12273
  call void @llvm.dbg.value(metadata i32 %45, metadata !12234, metadata !DIExpression()), !dbg !12240
  %46 = icmp eq i32 %43, 0, !dbg !12274
  %47 = zext i1 %46 to i32, !dbg !12276
  %48 = load i32, i32* %3, align 4, !dbg !12277
  br label %49, !dbg !12276

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !12277
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !12240
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !12240
  call void @llvm.dbg.value(metadata i32 %52, metadata !12235, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.value(metadata i32 %51, metadata !12234, metadata !DIExpression()), !dbg !12240
  %53 = and i32 %50, 8, !dbg !12279
  %54 = icmp eq i32 %53, 0, !dbg !12280
  br i1 %54, label %67, label %55, !dbg !12281

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12282
  %57 = and i32 %56, -12582913, !dbg !12282
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12282
  %59 = load i32, i32* %58, align 4, !dbg !12282
  %60 = or i32 %57, %59, !dbg !12282
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12282
  %61 = load i32, i32* %58, align 4, !dbg !12284
  %62 = icmp eq i32 %61, 4194304, !dbg !12286
  %63 = select i1 %62, i32 1, i32 %51, !dbg !12287
  call void @llvm.dbg.value(metadata i32 %63, metadata !12234, metadata !DIExpression()), !dbg !12240
  %64 = icmp eq i32 %61, 0, !dbg !12288
  %65 = select i1 %64, i32 1, i32 %52, !dbg !12290
  %66 = load i32, i32* %3, align 4, !dbg !12291
  br label %67, !dbg !12290

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !12291
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !12240
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !12240
  call void @llvm.dbg.value(metadata i32 %70, metadata !12235, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.value(metadata i32 %69, metadata !12234, metadata !DIExpression()), !dbg !12240
  %71 = and i32 %68, 32, !dbg !12292
  %72 = icmp eq i32 %71, 0, !dbg !12293
  br i1 %72, label %131, label %73, !dbg !12294

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !12295
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !12295
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12236, metadata !DIExpression()), !dbg !12295
  store volatile i32 0, i32* %2, align 4, !dbg !12295
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12295
  %76 = or i32 %75, 268435456, !dbg !12295
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12295
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12295
  %78 = and i32 %77, 268435456, !dbg !12295
  store volatile i32 %78, i32* %2, align 4, !dbg !12295
  %79 = load volatile i32, i32* %2, align 4, !dbg !12295
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !12296
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12297
  %81 = or i32 %80, 256, !dbg !12297
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12297
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !12298
  call void @llvm.dbg.value(metadata i32 %82, metadata !12227, metadata !DIExpression()), !dbg !12240
  br label %83, !dbg !12299

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12300
  %85 = and i32 %84, 256, !dbg !12301
  %86 = icmp eq i32 %85, 0, !dbg !12302
  br i1 %86, label %87, label %91, !dbg !12299

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #25, !dbg !12303
  %89 = sub i32 %88, %82, !dbg !12306
  %90 = icmp ugt i32 %89, 2, !dbg !12307
  br i1 %90, label %439, label %83, !dbg !12308, !llvm.loop !12309

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12311
  %93 = and i32 %92, 768, !dbg !12312
  call void @llvm.dbg.value(metadata i32 %93, metadata !12228, metadata !DIExpression()), !dbg !12240
  %94 = icmp eq i32 %93, 0, !dbg !12313
  br i1 %94, label %116, label %95, !dbg !12315

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12316
  %97 = load i32, i32* %96, align 4, !dbg !12316
  %98 = and i32 %97, 768, !dbg !12317
  %99 = icmp eq i32 %93, %98, !dbg !12318
  br i1 %99, label %116, label %100, !dbg !12319

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12320
  %102 = and i32 %101, -769, !dbg !12322
  call void @llvm.dbg.value(metadata i32 %102, metadata !12228, metadata !DIExpression()), !dbg !12240
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12323
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12324
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12325
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12326
  %104 = and i32 %103, 1, !dbg !12326
  %105 = icmp eq i32 %104, 0, !dbg !12326
  br i1 %105, label %116, label %106, !dbg !12328

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #25, !dbg !12329
  call void @llvm.dbg.value(metadata i32 %107, metadata !12227, metadata !DIExpression()), !dbg !12240
  br label %108, !dbg !12331

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12332
  %110 = and i32 %109, 2, !dbg !12333
  %111 = icmp eq i32 %110, 0, !dbg !12333
  br i1 %111, label %112, label %116, !dbg !12331

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #25, !dbg !12334
  %114 = sub i32 %113, %107, !dbg !12337
  %115 = icmp ugt i32 %114, 5000, !dbg !12338
  br i1 %115, label %439, label %108, !dbg !12339, !llvm.loop !12340

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12342
  %118 = load i32, i32* %117, align 4, !dbg !12342
  %119 = and i32 %118, 768, !dbg !12342
  %120 = icmp eq i32 %119, 768, !dbg !12342
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12342
  %122 = and i32 %121, -2031617, !dbg !12342
  %123 = and i32 %118, 268434687, !dbg !12342
  %124 = select i1 %120, i32 %123, i32 0, !dbg !12342
  %125 = or i32 %122, %124, !dbg !12342
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12342
  %126 = load i32, i32* %117, align 4, !dbg !12342
  %127 = and i32 %126, 4095, !dbg !12342
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12342
  %129 = or i32 %128, %127, !dbg !12342
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12342
  %130 = load i32, i32* %3, align 4, !dbg !12344
  br label %131, !dbg !12346

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !12344
  %133 = and i32 %132, 16, !dbg !12347
  %134 = icmp eq i32 %133, 0, !dbg !12348
  br i1 %134, label %140, label %135, !dbg !12349

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12350
  %137 = load i8, i8* %136, align 4, !dbg !12350
  %138 = zext i8 %137 to i32, !dbg !12350
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !12350
  %139 = load i32, i32* %3, align 4, !dbg !12352
  br label %140, !dbg !12354

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !12352
  %142 = and i32 %141, 128, !dbg !12355
  %143 = icmp eq i32 %142, 0, !dbg !12356
  br i1 %143, label %151, label %144, !dbg !12357

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12358
  %146 = and i32 %145, -12582913, !dbg !12358
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12358
  %148 = load i32, i32* %147, align 4, !dbg !12358
  %149 = or i32 %146, %148, !dbg !12358
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12358
  %150 = load i32, i32* %3, align 4, !dbg !12360
  br label %151, !dbg !12362

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !12360
  %153 = and i32 %152, 64, !dbg !12363
  %154 = icmp eq i32 %153, 0, !dbg !12364
  br i1 %154, label %162, label %155, !dbg !12365

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12366
  %157 = and i32 %156, -67108865, !dbg !12366
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12366
  %159 = load i32, i32* %158, align 4, !dbg !12366
  %160 = or i32 %157, %159, !dbg !12366
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12366
  %161 = load i32, i32* %3, align 4, !dbg !12368
  br label %162, !dbg !12370

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !12368
  %164 = and i32 %163, 256, !dbg !12371
  %165 = icmp eq i32 %164, 0, !dbg !12372
  br i1 %165, label %176, label %166, !dbg !12373

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12374
  %168 = and i32 %167, -134217729, !dbg !12374
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12374
  %170 = load i32, i32* %169, align 4, !dbg !12374
  %171 = or i32 %168, %170, !dbg !12374
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12374
  %172 = load i32, i32* %169, align 4, !dbg !12376
  %173 = icmp eq i32 %172, 134217728, !dbg !12378
  %174 = select i1 %173, i32 1, i32 %70, !dbg !12379
  %175 = load i32, i32* %3, align 4, !dbg !12380
  br label %176, !dbg !12379

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !12380
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !12240
  call void @llvm.dbg.value(metadata i32 %178, metadata !12235, metadata !DIExpression()), !dbg !12240
  %179 = and i32 %177, 512, !dbg !12382
  %180 = icmp eq i32 %179, 0, !dbg !12383
  br i1 %180, label %188, label %181, !dbg !12384

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12385
  %183 = and i32 %182, -268435457, !dbg !12385
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12385
  %185 = load i32, i32* %184, align 4, !dbg !12385
  %186 = or i32 %183, %185, !dbg !12385
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12385
  %187 = load i32, i32* %3, align 4, !dbg !12387
  br label %188, !dbg !12389

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !12387
  %190 = and i32 %189, 1024, !dbg !12390
  %191 = icmp eq i32 %190, 0, !dbg !12391
  br i1 %191, label %204, label %192, !dbg !12392

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12393
  %194 = and i32 %193, -536870913, !dbg !12393
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12393
  %196 = load i32, i32* %195, align 4, !dbg !12393
  %197 = or i32 %194, %196, !dbg !12393
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12393
  %198 = load i32, i32* %195, align 4, !dbg !12395
  %199 = icmp eq i32 %198, 536870912, !dbg !12397
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !12398
  call void @llvm.dbg.value(metadata i32 %69, metadata !12234, metadata !DIExpression()), !dbg !12240
  br i1 %201, label %209, label %202, !dbg !12398

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !12399
  br label %206, !dbg !12398

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !12234, metadata !DIExpression()), !dbg !12240
  %205 = icmp eq i32 %69, 1, !dbg !12401
  br i1 %205, label %209, label %206, !dbg !12402

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !12399
  %208 = icmp eq i32 %207, 2048, !dbg !12403
  br i1 %208, label %209, label %356, !dbg !12404

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12405
  %210 = tail call i32 @HAL_GetTick() #25, !dbg !12407
  call void @llvm.dbg.value(metadata i32 %210, metadata !12227, metadata !DIExpression()), !dbg !12240
  br label %211, !dbg !12408

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12409
  %213 = and i32 %212, 134217728, !dbg !12409
  %214 = icmp eq i32 %213, 0, !dbg !12409
  br i1 %214, label %219, label %215, !dbg !12408

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !12410
  %217 = sub i32 %216, %210, !dbg !12413
  %218 = icmp ugt i32 %217, 2, !dbg !12414
  br i1 %218, label %439, label %211, !dbg !12415, !llvm.loop !12416

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !12418
  %221 = and i32 %220, 1, !dbg !12420
  %222 = icmp eq i32 %221, 0, !dbg !12421
  br i1 %222, label %227, label %223, !dbg !12422

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12423
  %225 = load i32, i32* %224, align 4, !dbg !12423
  %226 = icmp eq i32 %225, 0, !dbg !12424
  br i1 %226, label %234, label %227, !dbg !12425

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !12426
  %229 = icmp eq i32 %228, 0, !dbg !12427
  br i1 %229, label %252, label %230, !dbg !12428

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12429
  %232 = load i32, i32* %231, align 4, !dbg !12429
  %233 = icmp eq i32 %232, 0, !dbg !12430
  br i1 %233, label %234, label %252, !dbg !12431

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12432
  %236 = and i32 %235, 196608, !dbg !12434
  call void @llvm.dbg.value(metadata i32 %236, metadata !12229, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12240
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12435
  %238 = and i32 %237, 251658240, !dbg !12436
  call void @llvm.dbg.value(metadata i32 %238, metadata !12230, metadata !DIExpression()), !dbg !12240
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12437
  %240 = load i32, i32* %239, align 4, !dbg !12437
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12437
  %242 = load i32, i32* %241, align 4, !dbg !12437
  %243 = shl i32 %242, 6, !dbg !12437
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12437
  %245 = load i32, i32* %244, align 4, !dbg !12437
  %246 = shl i32 %245, 28, !dbg !12437
  %247 = or i32 %240, %236, !dbg !12437
  %248 = or i32 %247, %238, !dbg !12437
  %249 = or i32 %248, %243, !dbg !12437
  %250 = or i32 %249, %246, !dbg !12437
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12437
  %251 = load i32, i32* %3, align 4, !dbg !12438
  br label %252, !dbg !12440

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !12438
  %254 = and i32 %253, 4, !dbg !12441
  %255 = icmp eq i32 %254, 0, !dbg !12442
  br i1 %255, label %260, label %256, !dbg !12443

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12444
  %258 = load i32, i32* %257, align 4, !dbg !12444
  %259 = icmp eq i32 %258, 1048576, !dbg !12445
  br i1 %259, label %267, label %260, !dbg !12446

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !12447
  %262 = icmp eq i32 %261, 0, !dbg !12448
  br i1 %262, label %291, label %263, !dbg !12449

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12450
  %265 = load i32, i32* %264, align 4, !dbg !12450
  %266 = icmp eq i32 %265, 4194304, !dbg !12451
  br i1 %266, label %267, label %291, !dbg !12452

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12453
  %269 = and i32 %268, 196608, !dbg !12455
  call void @llvm.dbg.value(metadata i32 %269, metadata !12229, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12240
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12456
  %271 = and i32 %270, 1879048192, !dbg !12457
  call void @llvm.dbg.value(metadata i32 %271, metadata !12231, metadata !DIExpression()), !dbg !12240
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12458
  %273 = load i32, i32* %272, align 4, !dbg !12458
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12458
  %275 = load i32, i32* %274, align 4, !dbg !12458
  %276 = shl i32 %275, 6, !dbg !12458
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12458
  %278 = load i32, i32* %277, align 4, !dbg !12458
  %279 = shl i32 %278, 24, !dbg !12458
  %280 = or i32 %273, %269, !dbg !12458
  %281 = or i32 %280, %271, !dbg !12458
  %282 = or i32 %281, %276, !dbg !12458
  %283 = or i32 %282, %279, !dbg !12458
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12458
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12459
  %285 = and i32 %284, -32, !dbg !12459
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12459
  %287 = load i32, i32* %286, align 4, !dbg !12459
  %288 = add i32 %287, -1, !dbg !12459
  %289 = or i32 %288, %285, !dbg !12459
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12459
  %290 = load i32, i32* %3, align 4, !dbg !12460
  br label %291, !dbg !12462

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !12460
  %293 = and i32 %292, 1024, !dbg !12463
  %294 = icmp eq i32 %293, 0, !dbg !12464
  br i1 %294, label %321, label %295, !dbg !12465

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12466
  %297 = load i32, i32* %296, align 4, !dbg !12466
  %298 = icmp eq i32 %297, 536870912, !dbg !12467
  br i1 %298, label %299, label %321, !dbg !12468

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12469
  call void @llvm.dbg.value(metadata i32 %300, metadata !12230, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12240
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12471
  %302 = and i32 %301, 1879048192, !dbg !12472
  call void @llvm.dbg.value(metadata i32 %302, metadata !12231, metadata !DIExpression()), !dbg !12240
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12473
  %304 = load i32, i32* %303, align 4, !dbg !12473
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12473
  %306 = load i32, i32* %305, align 4, !dbg !12473
  %307 = shl i32 %306, 6, !dbg !12473
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12473
  %309 = load i32, i32* %308, align 4, !dbg !12473
  %310 = shl i32 %309, 15, !dbg !12473
  %311 = add i32 %310, -65536, !dbg !12473
  %312 = and i32 %311, -65536, !dbg !12473
  %313 = shl i32 %300, 9, !dbg !12473
  %314 = and i32 %313, 100663296, !dbg !12473
  %315 = add nuw nsw i32 %314, 33554432, !dbg !12473
  %316 = or i32 %302, %304, !dbg !12473
  %317 = or i32 %316, %315, !dbg !12473
  %318 = or i32 %317, %307, !dbg !12473
  %319 = or i32 %318, %312, !dbg !12473
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12473
  %320 = load i32, i32* %3, align 4, !dbg !12474
  br label %321, !dbg !12476

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !12474
  %323 = and i32 %322, 2048, !dbg !12477
  %324 = icmp eq i32 %323, 0, !dbg !12478
  br i1 %324, label %346, label %325, !dbg !12479

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12480
  %327 = load i32, i32* %326, align 4, !dbg !12480
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12480
  %329 = load i32, i32* %328, align 4, !dbg !12480
  %330 = shl i32 %329, 6, !dbg !12480
  %331 = or i32 %330, %327, !dbg !12480
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12480
  %333 = load i32, i32* %332, align 4, !dbg !12480
  %334 = shl i32 %333, 15, !dbg !12480
  %335 = add i32 %334, -65536, !dbg !12480
  %336 = and i32 %335, -65536, !dbg !12480
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12480
  %338 = load i32, i32* %337, align 4, !dbg !12480
  %339 = shl i32 %338, 24, !dbg !12480
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12480
  %341 = load i32, i32* %340, align 4, !dbg !12480
  %342 = shl i32 %341, 28, !dbg !12480
  %343 = or i32 %331, %339, !dbg !12480
  %344 = or i32 %343, %336, !dbg !12480
  %345 = or i32 %344, %342, !dbg !12480
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12480
  br label %346, !dbg !12482

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12483
  %347 = tail call i32 @HAL_GetTick() #25, !dbg !12484
  call void @llvm.dbg.value(metadata i32 %347, metadata !12227, metadata !DIExpression()), !dbg !12240
  br label %348, !dbg !12485

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12486
  %350 = and i32 %349, 134217728, !dbg !12487
  %351 = icmp eq i32 %350, 0, !dbg !12487
  br i1 %351, label %352, label %356, !dbg !12485

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #25, !dbg !12488
  %354 = sub i32 %353, %347, !dbg !12491
  %355 = icmp ugt i32 %354, 2, !dbg !12492
  br i1 %355, label %439, label %348, !dbg !12493, !llvm.loop !12494

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !12496
  br i1 %357, label %358, label %439, !dbg !12498

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12499
  %359 = tail call i32 @HAL_GetTick() #25, !dbg !12501
  call void @llvm.dbg.value(metadata i32 %359, metadata !12227, metadata !DIExpression()), !dbg !12240
  br label %360, !dbg !12502

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12503
  %362 = and i32 %361, 536870912, !dbg !12503
  %363 = icmp eq i32 %362, 0, !dbg !12503
  br i1 %363, label %368, label %364, !dbg !12502

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #25, !dbg !12504
  %366 = sub i32 %365, %359, !dbg !12507
  %367 = icmp ugt i32 %366, 2, !dbg !12508
  br i1 %367, label %439, label %360, !dbg !12509, !llvm.loop !12510

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !12512
  %370 = and i32 %369, 4, !dbg !12514
  %371 = icmp eq i32 %370, 0, !dbg !12515
  br i1 %371, label %376, label %372, !dbg !12516

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12517
  %374 = load i32, i32* %373, align 4, !dbg !12517
  %375 = icmp eq i32 %374, 0, !dbg !12518
  br i1 %375, label %383, label %376, !dbg !12519

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !12520
  %378 = icmp eq i32 %377, 0, !dbg !12521
  br i1 %378, label %405, label %379, !dbg !12522

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12523
  %381 = load i32, i32* %380, align 4, !dbg !12523
  %382 = icmp eq i32 %381, 0, !dbg !12524
  br i1 %382, label %383, label %405, !dbg !12525

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12526
  %385 = and i32 %384, 196608, !dbg !12528
  call void @llvm.dbg.value(metadata i32 %385, metadata !12232, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12240
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12529
  %387 = load i32, i32* %386, align 4, !dbg !12529
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12529
  %389 = load i32, i32* %388, align 4, !dbg !12529
  %390 = shl i32 %389, 6, !dbg !12529
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12529
  %392 = load i32, i32* %391, align 4, !dbg !12529
  %393 = shl i32 %392, 24, !dbg !12529
  %394 = or i32 %385, %387, !dbg !12529
  %395 = or i32 %394, %390, !dbg !12529
  %396 = or i32 %395, %393, !dbg !12529
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12529
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12530
  %398 = and i32 %397, -7937, !dbg !12530
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12530
  %400 = load i32, i32* %399, align 4, !dbg !12530
  %401 = shl i32 %400, 8, !dbg !12530
  %402 = add i32 %401, -256, !dbg !12530
  %403 = or i32 %402, %398, !dbg !12530
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12530
  %404 = load i32, i32* %3, align 4, !dbg !12531
  br label %405, !dbg !12533

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !12531
  %407 = and i32 %406, 256, !dbg !12534
  %408 = icmp eq i32 %407, 0, !dbg !12535
  br i1 %408, label %429, label %409, !dbg !12536

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12537
  %411 = load i32, i32* %410, align 4, !dbg !12537
  %412 = icmp eq i32 %411, 134217728, !dbg !12538
  br i1 %412, label %413, label %429, !dbg !12539

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12540
  %415 = and i32 %414, 251658240, !dbg !12542
  call void @llvm.dbg.value(metadata i32 %415, metadata !12233, metadata !DIExpression()), !dbg !12240
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12543
  %417 = load i32, i32* %416, align 4, !dbg !12543
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12543
  %419 = load i32, i32* %418, align 4, !dbg !12543
  %420 = shl i32 %419, 6, !dbg !12543
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12543
  %422 = load i32, i32* %421, align 4, !dbg !12543
  %423 = shl i32 %422, 15, !dbg !12543
  %424 = add i32 %423, -65536, !dbg !12543
  %425 = and i32 %424, -65536, !dbg !12543
  %426 = or i32 %415, %417, !dbg !12543
  %427 = or i32 %426, %420, !dbg !12543
  %428 = or i32 %427, %425, !dbg !12543
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12543
  br label %429, !dbg !12544

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12545
  %430 = tail call i32 @HAL_GetTick() #25, !dbg !12546
  call void @llvm.dbg.value(metadata i32 %430, metadata !12227, metadata !DIExpression()), !dbg !12240
  br label %431, !dbg !12547

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12548
  %433 = and i32 %432, 536870912, !dbg !12549
  %434 = icmp eq i32 %433, 0, !dbg !12549
  br i1 %434, label %435, label %439, !dbg !12547

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #25, !dbg !12550
  %437 = sub i32 %436, %430, !dbg !12553
  %438 = icmp ugt i32 %437, 2, !dbg !12554
  br i1 %438, label %439, label %431, !dbg !12555, !llvm.loop !12556

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !12240
  ret i32 %440, !dbg !12558
}

; Function Attrs: optsize
declare !dbg !12559 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #16 !dbg !12561 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12565, metadata !DIExpression()), !dbg !12567
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12568
  store i32 2047, i32* %2, align 4, !dbg !12569
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12570
  %4 = and i32 %3, 63, !dbg !12571
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12572
  store i32 %4, i32* %5, align 4, !dbg !12573
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12574
  %7 = lshr i32 %6, 6, !dbg !12575
  %8 = and i32 %7, 511, !dbg !12575
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12576
  store i32 %8, i32* %9, align 4, !dbg !12577
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12578
  %11 = lshr i32 %10, 15, !dbg !12579
  %12 = and i32 %11, 6, !dbg !12579
  %13 = add nuw nsw i32 %12, 2, !dbg !12579
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12580
  store i32 %13, i32* %14, align 4, !dbg !12581
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12582
  %16 = lshr i32 %15, 24, !dbg !12583
  %17 = and i32 %16, 15, !dbg !12583
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12584
  store i32 %17, i32* %18, align 4, !dbg !12585
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12586
  %20 = lshr i32 %19, 28, !dbg !12587
  %21 = and i32 %20, 7, !dbg !12587
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12588
  store i32 %21, i32* %22, align 4, !dbg !12589
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12590
  %24 = and i32 %23, 63, !dbg !12591
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12592
  store i32 %24, i32* %25, align 4, !dbg !12593
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12594
  %27 = lshr i32 %26, 6, !dbg !12595
  %28 = and i32 %27, 511, !dbg !12595
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12596
  store i32 %28, i32* %29, align 4, !dbg !12597
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12598
  %31 = lshr i32 %30, 15, !dbg !12599
  %32 = and i32 %31, 6, !dbg !12599
  %33 = add nuw nsw i32 %32, 2, !dbg !12599
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12600
  store i32 %33, i32* %34, align 4, !dbg !12601
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12602
  %36 = lshr i32 %35, 24, !dbg !12603
  %37 = and i32 %36, 15, !dbg !12603
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12604
  store i32 %37, i32* %38, align 4, !dbg !12605
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12606
  %40 = and i32 %39, 31, !dbg !12607
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12608
  store i32 %40, i32* %41, align 4, !dbg !12609
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12610
  %43 = lshr i32 %42, 8, !dbg !12611
  %44 = and i32 %43, 31, !dbg !12611
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12612
  store i32 %44, i32* %45, align 4, !dbg !12613
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12614
  %47 = and i32 %46, 3145728, !dbg !12614
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12615
  store i32 %47, i32* %48, align 4, !dbg !12616
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12617
  %50 = and i32 %49, 12582912, !dbg !12617
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12618
  store i32 %50, i32* %51, align 4, !dbg !12619
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12620
  %53 = and i32 %52, 100663296, !dbg !12620
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12621
  store i32 %53, i32* %54, align 4, !dbg !12622
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12623
  %56 = and i32 %55, 402653184, !dbg !12623
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12624
  store i32 %56, i32* %57, align 4, !dbg !12625
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12626
  %59 = and i32 %58, 2031616, !dbg !12627
  call void @llvm.dbg.value(metadata i32 %59, metadata !12566, metadata !DIExpression()), !dbg !12567
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12628
  %61 = and i32 %60, 768, !dbg !12629
  %62 = or i32 %61, %59, !dbg !12630
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12631
  store i32 %62, i32* %63, align 4, !dbg !12632
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12633
  %65 = and i32 %64, 67108864, !dbg !12633
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12634
  store i32 %65, i32* %66, align 4, !dbg !12635
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12636
  %68 = and i32 %67, 12582912, !dbg !12636
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12637
  store i32 %68, i32* %69, align 4, !dbg !12638
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12639
  %71 = and i32 %70, 134217728, !dbg !12639
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12640
  store i32 %71, i32* %72, align 4, !dbg !12641
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12642
  %74 = and i32 %73, 268435456, !dbg !12642
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12643
  store i32 %74, i32* %75, align 4, !dbg !12644
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12645
  %77 = and i32 %76, 536870912, !dbg !12645
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12646
  store i32 %77, i32* %78, align 4, !dbg !12647
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12648
  %80 = lshr i32 %79, 24, !dbg !12650
  %81 = trunc i32 %80 to i8, !dbg !12650
  %82 = and i8 %81, 1, !dbg !12650
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12651
  store i8 %82, i8* %83, align 4, !dbg !12653
  ret void, !dbg !12654
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #16 !dbg !12655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12657, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 0, metadata !12658, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 0, metadata !12659, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 0, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 0, metadata !12661, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 0, metadata !12662, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 0, metadata !12663, metadata !DIExpression()), !dbg !12664
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !12665

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12666
  call void @llvm.dbg.value(metadata i32 %3, metadata !12661, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 %3, metadata !12661, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !12664
  %4 = lshr i32 %3, 20, !dbg !12669
  %5 = and i32 %4, 15, !dbg !12669
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !12669

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12670
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12674
  %9 = and i32 %8, 63, !dbg !12674
  %10 = udiv i32 16000000, %9, !dbg !12674
  call void @llvm.dbg.value(metadata i32 %10, metadata !12660, metadata !DIExpression()), !dbg !12664
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12675
  %12 = lshr i32 %11, 24, !dbg !12676
  %13 = and i32 %12, 15, !dbg !12676
  call void @llvm.dbg.value(metadata i32 %13, metadata !12658, metadata !DIExpression()), !dbg !12664
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12677
  %15 = lshr i32 %14, 6, !dbg !12678
  %16 = and i32 %15, 511, !dbg !12678
  %17 = mul i32 %16, %10, !dbg !12679
  %18 = udiv i32 %17, %13, !dbg !12680
  call void @llvm.dbg.value(metadata i32 %18, metadata !12659, metadata !DIExpression()), !dbg !12664
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12681
  %20 = lshr i32 %19, 8, !dbg !12682
  %21 = and i32 %20, 31, !dbg !12682
  %22 = add nuw nsw i32 %21, 1, !dbg !12683
  call void @llvm.dbg.value(metadata i32 %22, metadata !12658, metadata !DIExpression()), !dbg !12664
  %23 = udiv i32 %18, %22, !dbg !12684
  call void @llvm.dbg.value(metadata i32 %23, metadata !12659, metadata !DIExpression()), !dbg !12664
  br label %123, !dbg !12685

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12686
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12689
  %27 = and i32 %26, 63, !dbg !12689
  %28 = udiv i32 16000000, %27, !dbg !12689
  call void @llvm.dbg.value(metadata i32 %28, metadata !12660, metadata !DIExpression()), !dbg !12664
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12690
  %30 = lshr i32 %29, 24, !dbg !12691
  %31 = and i32 %30, 15, !dbg !12691
  call void @llvm.dbg.value(metadata i32 %31, metadata !12658, metadata !DIExpression()), !dbg !12664
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12692
  %33 = lshr i32 %32, 6, !dbg !12693
  %34 = and i32 %33, 511, !dbg !12693
  %35 = mul i32 %34, %28, !dbg !12694
  %36 = udiv i32 %35, %31, !dbg !12695
  call void @llvm.dbg.value(metadata i32 %36, metadata !12659, metadata !DIExpression()), !dbg !12664
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12696
  %38 = and i32 %37, 31, !dbg !12697
  %39 = add nuw nsw i32 %38, 1, !dbg !12698
  call void @llvm.dbg.value(metadata i32 %39, metadata !12658, metadata !DIExpression()), !dbg !12664
  %40 = udiv i32 %36, %39, !dbg !12699
  call void @llvm.dbg.value(metadata i32 %40, metadata !12659, metadata !DIExpression()), !dbg !12664
  br label %123, !dbg !12700

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12701
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12704
  %44 = and i32 %43, 63, !dbg !12704
  %45 = udiv i32 16000000, %44, !dbg !12704
  call void @llvm.dbg.value(metadata i32 %45, metadata !12660, metadata !DIExpression()), !dbg !12664
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12705
  %47 = lshr i32 %46, 28, !dbg !12706
  %48 = and i32 %47, 7, !dbg !12706
  call void @llvm.dbg.value(metadata i32 %48, metadata !12658, metadata !DIExpression()), !dbg !12664
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12707
  %50 = lshr i32 %49, 6, !dbg !12708
  %51 = and i32 %50, 511, !dbg !12708
  %52 = mul i32 %51, %45, !dbg !12709
  %53 = udiv i32 %52, %48, !dbg !12710
  call void @llvm.dbg.value(metadata i32 %53, metadata !12659, metadata !DIExpression()), !dbg !12664
  br label %123, !dbg !12711

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !12659, metadata !DIExpression()), !dbg !12664
  br label %123, !dbg !12712

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12714
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12659, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12659, metadata !DIExpression()), !dbg !12664
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12717
  call void @llvm.dbg.value(metadata i32 %58, metadata !12662, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !12664
  %59 = lshr i32 %58, 25, !dbg !12719
  %60 = and i32 %59, 3, !dbg !12719
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !12719

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12720
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12724
  %64 = and i32 %63, 63, !dbg !12724
  %65 = udiv i32 16000000, %64, !dbg !12724
  call void @llvm.dbg.value(metadata i32 %65, metadata !12660, metadata !DIExpression()), !dbg !12664
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12725
  %67 = lshr i32 %66, 6, !dbg !12726
  %68 = and i32 %67, 511, !dbg !12726
  %69 = mul i32 %68, %65, !dbg !12727
  call void @llvm.dbg.value(metadata i32 %69, metadata !12663, metadata !DIExpression()), !dbg !12664
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12728
  %71 = lshr i32 %70, 28, !dbg !12729
  %72 = and i32 %71, 7, !dbg !12729
  %73 = udiv i32 %69, %72, !dbg !12730
  call void @llvm.dbg.value(metadata i32 %73, metadata !12659, metadata !DIExpression()), !dbg !12664
  br label %123, !dbg !12731

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12732
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12735
  %77 = and i32 %76, 63, !dbg !12735
  %78 = udiv i32 16000000, %77, !dbg !12735
  call void @llvm.dbg.value(metadata i32 %78, metadata !12660, metadata !DIExpression()), !dbg !12664
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12736
  %80 = lshr i32 %79, 6, !dbg !12737
  %81 = and i32 %80, 511, !dbg !12737
  %82 = mul i32 %81, %78, !dbg !12738
  call void @llvm.dbg.value(metadata i32 %82, metadata !12663, metadata !DIExpression()), !dbg !12664
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12739
  %84 = lshr i32 %83, 28, !dbg !12740
  %85 = and i32 %84, 7, !dbg !12740
  %86 = udiv i32 %82, %85, !dbg !12741
  call void @llvm.dbg.value(metadata i32 %86, metadata !12659, metadata !DIExpression()), !dbg !12664
  br label %123, !dbg !12742

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12743
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12659, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12659, metadata !DIExpression()), !dbg !12664
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12746
  call void @llvm.dbg.value(metadata i32 %91, metadata !12662, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !12664
  %92 = lshr i32 %91, 27, !dbg !12748
  %93 = and i32 %92, 3, !dbg !12748
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !12748

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12749
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12753
  %97 = and i32 %96, 63, !dbg !12753
  %98 = udiv i32 16000000, %97, !dbg !12753
  call void @llvm.dbg.value(metadata i32 %98, metadata !12660, metadata !DIExpression()), !dbg !12664
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12754
  %100 = lshr i32 %99, 6, !dbg !12755
  %101 = and i32 %100, 511, !dbg !12755
  %102 = mul i32 %101, %98, !dbg !12756
  call void @llvm.dbg.value(metadata i32 %102, metadata !12663, metadata !DIExpression()), !dbg !12664
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12757
  %104 = lshr i32 %103, 28, !dbg !12758
  %105 = and i32 %104, 7, !dbg !12758
  %106 = udiv i32 %102, %105, !dbg !12759
  call void @llvm.dbg.value(metadata i32 %106, metadata !12659, metadata !DIExpression()), !dbg !12664
  br label %123, !dbg !12760

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12761
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12764
  %110 = and i32 %109, 63, !dbg !12764
  %111 = udiv i32 16000000, %110, !dbg !12764
  call void @llvm.dbg.value(metadata i32 %111, metadata !12660, metadata !DIExpression()), !dbg !12664
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12765
  %113 = lshr i32 %112, 6, !dbg !12766
  %114 = and i32 %113, 511, !dbg !12766
  %115 = mul i32 %114, %111, !dbg !12767
  call void @llvm.dbg.value(metadata i32 %115, metadata !12663, metadata !DIExpression()), !dbg !12664
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12768
  %117 = lshr i32 %116, 28, !dbg !12769
  %118 = and i32 %117, 7, !dbg !12769
  %119 = udiv i32 %115, %118, !dbg !12770
  call void @llvm.dbg.value(metadata i32 %119, metadata !12659, metadata !DIExpression()), !dbg !12664
  br label %123, !dbg !12771

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12772
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12659, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12659, metadata !DIExpression()), !dbg !12664
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !12664
  call void @llvm.dbg.value(metadata i32 %124, metadata !12659, metadata !DIExpression()), !dbg !12664
  ret i32 %124, !dbg !12775
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #15 !dbg !12776 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !12780, metadata !DIExpression()), !dbg !12781
  %2 = icmp eq i8 %0, 1, !dbg !12782
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12784
  %4 = and i32 %3, -9, !dbg !12785
  %5 = select i1 %2, i32 8, i32 0, !dbg !12785
  %6 = or i32 %4, %5, !dbg !12785
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12784
  ret void, !dbg !12786
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !12787 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !12792, metadata !DIExpression()), !dbg !12794
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12795
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !12796
  call void @llvm.dbg.value(metadata i32 %2, metadata !12793, metadata !DIExpression()), !dbg !12794
  br label %3, !dbg !12797

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12798
  %5 = and i32 %4, 134217728, !dbg !12798
  %6 = icmp eq i32 %5, 0, !dbg !12798
  br i1 %6, label %11, label %7, !dbg !12797

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !12799
  %9 = sub i32 %8, %2, !dbg !12802
  %10 = icmp ugt i32 %9, 2, !dbg !12803
  br i1 %10, label %41, label %3, !dbg !12804, !llvm.loop !12805

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !12807
  %13 = load i32, i32* %12, align 4, !dbg !12807
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !12807
  %15 = load i32, i32* %14, align 4, !dbg !12807
  %16 = shl i32 %15, 6, !dbg !12807
  %17 = or i32 %16, %13, !dbg !12807
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !12807
  %19 = load i32, i32* %18, align 4, !dbg !12807
  %20 = shl i32 %19, 15, !dbg !12807
  %21 = add i32 %20, -65536, !dbg !12807
  %22 = and i32 %21, -65536, !dbg !12807
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !12807
  %24 = load i32, i32* %23, align 4, !dbg !12807
  %25 = shl i32 %24, 24, !dbg !12807
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !12807
  %27 = load i32, i32* %26, align 4, !dbg !12807
  %28 = shl i32 %27, 28, !dbg !12807
  %29 = or i32 %17, %25, !dbg !12807
  %30 = or i32 %29, %22, !dbg !12807
  %31 = or i32 %30, %28, !dbg !12807
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12807
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12808
  %32 = tail call i32 @HAL_GetTick() #25, !dbg !12809
  call void @llvm.dbg.value(metadata i32 %32, metadata !12793, metadata !DIExpression()), !dbg !12794
  br label %33, !dbg !12810

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12811
  %35 = and i32 %34, 134217728, !dbg !12812
  %36 = icmp eq i32 %35, 0, !dbg !12812
  br i1 %36, label %37, label %41, !dbg !12810

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #25, !dbg !12813
  %39 = sub i32 %38, %32, !dbg !12816
  %40 = icmp ugt i32 %39, 2, !dbg !12817
  br i1 %40, label %41, label %33, !dbg !12818, !llvm.loop !12819

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !12794
  ret i32 %42, !dbg !12821
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !12822 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12827
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !12828
  call void @llvm.dbg.value(metadata i32 %1, metadata !12826, metadata !DIExpression()), !dbg !12829
  br label %2, !dbg !12830

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12831
  %4 = and i32 %3, 134217728, !dbg !12831
  %5 = icmp eq i32 %4, 0, !dbg !12832
  br i1 %5, label %10, label %6, !dbg !12830

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !12833
  %8 = sub i32 %7, %1, !dbg !12836
  %9 = icmp ugt i32 %8, 2, !dbg !12837
  br i1 %9, label %10, label %2, !dbg !12838, !llvm.loop !12839

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !12829
  ret i32 %11, !dbg !12841
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !12842 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !12847, metadata !DIExpression()), !dbg !12849
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12850
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !12851
  call void @llvm.dbg.value(metadata i32 %2, metadata !12848, metadata !DIExpression()), !dbg !12849
  br label %3, !dbg !12852

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12853
  %5 = and i32 %4, 536870912, !dbg !12853
  %6 = icmp eq i32 %5, 0, !dbg !12853
  br i1 %6, label %11, label %7, !dbg !12852

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !12854
  %9 = sub i32 %8, %2, !dbg !12857
  %10 = icmp ugt i32 %9, 2, !dbg !12858
  br i1 %10, label %37, label %3, !dbg !12859, !llvm.loop !12860

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !12862
  %13 = load i32, i32* %12, align 4, !dbg !12862
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !12862
  %15 = load i32, i32* %14, align 4, !dbg !12862
  %16 = shl i32 %15, 6, !dbg !12862
  %17 = or i32 %16, %13, !dbg !12862
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !12862
  %19 = load i32, i32* %18, align 4, !dbg !12862
  %20 = shl i32 %19, 15, !dbg !12862
  %21 = add i32 %20, -65536, !dbg !12862
  %22 = and i32 %21, -65536, !dbg !12862
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !12862
  %24 = load i32, i32* %23, align 4, !dbg !12862
  %25 = shl i32 %24, 24, !dbg !12862
  %26 = or i32 %17, %25, !dbg !12862
  %27 = or i32 %26, %22, !dbg !12862
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12862
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12863
  %28 = tail call i32 @HAL_GetTick() #25, !dbg !12864
  call void @llvm.dbg.value(metadata i32 %28, metadata !12848, metadata !DIExpression()), !dbg !12849
  br label %29, !dbg !12865

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12866
  %31 = and i32 %30, 536870912, !dbg !12867
  %32 = icmp eq i32 %31, 0, !dbg !12867
  br i1 %32, label %33, label %37, !dbg !12865

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #25, !dbg !12868
  %35 = sub i32 %34, %28, !dbg !12871
  %36 = icmp ugt i32 %35, 2, !dbg !12872
  br i1 %36, label %37, label %29, !dbg !12873, !llvm.loop !12874

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !12849
  ret i32 %38, !dbg !12876
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !12877 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12880
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !12881
  call void @llvm.dbg.value(metadata i32 %1, metadata !12879, metadata !DIExpression()), !dbg !12882
  br label %2, !dbg !12883

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12884
  %4 = and i32 %3, 536870912, !dbg !12884
  %5 = icmp eq i32 %4, 0, !dbg !12884
  br i1 %5, label %10, label %6, !dbg !12883

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !12885
  %8 = sub i32 %7, %1, !dbg !12888
  %9 = icmp ugt i32 %8, 2, !dbg !12889
  br i1 %9, label %10, label %2, !dbg !12890, !llvm.loop !12891

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !12882
  ret i32 %11, !dbg !12893
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #16 !dbg !12894 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12896, metadata !DIExpression()), !dbg !12901
  call void @llvm.dbg.value(metadata i32 0, metadata !12897, metadata !DIExpression()), !dbg !12901
  call void @llvm.dbg.value(metadata i32 0, metadata !12898, metadata !DIExpression()), !dbg !12901
  call void @llvm.dbg.value(metadata i32 0, metadata !12899, metadata !DIExpression()), !dbg !12901
  call void @llvm.dbg.value(metadata i32 0, metadata !12900, metadata !DIExpression()), !dbg !12901
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12902
  %2 = lshr i32 %1, 2, !dbg !12903
  %3 = and i32 %2, 3, !dbg !12903
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !12903

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12904
  %6 = and i32 %5, 63, !dbg !12907
  call void @llvm.dbg.value(metadata i32 %6, metadata !12896, metadata !DIExpression()), !dbg !12901
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12908
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12910
  %9 = lshr i32 %8, 6, !dbg !12910
  %10 = and i32 %9, 511, !dbg !12910
  %11 = zext i32 %10 to i64, !dbg !12910
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12910
  %13 = zext i32 %6 to i64, !dbg !12910
  %14 = udiv i64 %12, %13, !dbg !12910
  %15 = trunc i64 %14 to i32, !dbg !12910
  call void @llvm.dbg.value(metadata i32 %15, metadata !12897, metadata !DIExpression()), !dbg !12901
  call void @llvm.dbg.value(metadata i32 %15, metadata !12897, metadata !DIExpression()), !dbg !12901
  call void @llvm.dbg.value(metadata i32 %15, metadata !12897, metadata !DIExpression()), !dbg !12901
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12911
  %17 = lshr i32 %16, 15, !dbg !12912
  %18 = and i32 %17, 6, !dbg !12912
  %19 = add nuw nsw i32 %18, 2, !dbg !12912
  call void @llvm.dbg.value(metadata i32 %19, metadata !12898, metadata !DIExpression()), !dbg !12901
  %20 = udiv i32 %15, %19, !dbg !12913
  call void @llvm.dbg.value(metadata i32 %20, metadata !12900, metadata !DIExpression()), !dbg !12901
  br label %38, !dbg !12914

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12915
  %23 = and i32 %22, 63, !dbg !12917
  call void @llvm.dbg.value(metadata i32 %23, metadata !12896, metadata !DIExpression()), !dbg !12901
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12918
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12920
  %26 = lshr i32 %25, 6, !dbg !12920
  %27 = and i32 %26, 511, !dbg !12920
  %28 = zext i32 %27 to i64, !dbg !12920
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !12920
  %30 = zext i32 %23 to i64, !dbg !12920
  %31 = udiv i64 %29, %30, !dbg !12920
  %32 = trunc i64 %31 to i32, !dbg !12920
  call void @llvm.dbg.value(metadata i32 %32, metadata !12897, metadata !DIExpression()), !dbg !12901
  call void @llvm.dbg.value(metadata i32 %32, metadata !12897, metadata !DIExpression()), !dbg !12901
  call void @llvm.dbg.value(metadata i32 %32, metadata !12897, metadata !DIExpression()), !dbg !12901
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12921
  %34 = lshr i32 %33, 28, !dbg !12922
  %35 = and i32 %34, 7, !dbg !12922
  call void @llvm.dbg.value(metadata i32 %35, metadata !12899, metadata !DIExpression()), !dbg !12901
  %36 = udiv i32 %32, %35, !dbg !12923
  call void @llvm.dbg.value(metadata i32 %36, metadata !12900, metadata !DIExpression()), !dbg !12901
  br label %38, !dbg !12924

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !12925
  call void @llvm.dbg.value(metadata i32 %39, metadata !12900, metadata !DIExpression()), !dbg !12901
  ret i32 %39, !dbg !12926
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12927 {
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !12930
  call void @llvm.dbg.value(metadata i32 %1, metadata !12929, metadata !DIExpression()), !dbg !12931
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12932
  %3 = or i32 %2, 1, !dbg !12932
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12932
  br label %4, !dbg !12933

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12934
  %6 = and i32 %5, 2, !dbg !12934
  %7 = icmp eq i32 %6, 0, !dbg !12935
  br i1 %7, label %8, label %12, !dbg !12933

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #25, !dbg !12936
  %10 = sub i32 %9, %1, !dbg !12939
  %11 = icmp ugt i32 %10, 2, !dbg !12940
  br i1 %11, label %89, label %4, !dbg !12941, !llvm.loop !12942

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12944
  %14 = or i32 %13, 128, !dbg !12944
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12944
  %15 = tail call i32 @HAL_GetTick() #25, !dbg !12945
  call void @llvm.dbg.value(metadata i32 %15, metadata !12929, metadata !DIExpression()), !dbg !12931
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12946
  br label %16, !dbg !12947

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12948
  %18 = and i32 %17, 12, !dbg !12948
  %19 = icmp eq i32 %18, 0, !dbg !12949
  %20 = tail call i32 @HAL_GetTick() #25, !dbg !12931
  br i1 %19, label %24, label %21, !dbg !12947

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !12950
  %23 = icmp ugt i32 %22, 5000, !dbg !12953
  br i1 %23, label %89, label %16, !dbg !12954, !llvm.loop !12955

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !12929, metadata !DIExpression()), !dbg !12931
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12957
  %26 = and i32 %25, -851969, !dbg !12957
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12957
  br label %27, !dbg !12958

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12959
  %29 = and i32 %28, 131072, !dbg !12959
  %30 = icmp eq i32 %29, 0, !dbg !12960
  %31 = tail call i32 @HAL_GetTick() #25, !dbg !12931
  br i1 %30, label %35, label %32, !dbg !12958

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !12961
  %34 = icmp ugt i32 %33, 100, !dbg !12964
  br i1 %34, label %89, label %27, !dbg !12965, !llvm.loop !12966

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !12929, metadata !DIExpression()), !dbg !12931
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12968
  %37 = and i32 %36, -16777217, !dbg !12968
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12968
  br label %38, !dbg !12969

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12970
  %40 = and i32 %39, 33554432, !dbg !12970
  %41 = icmp eq i32 %40, 0, !dbg !12971
  %42 = tail call i32 @HAL_GetTick() #25, !dbg !12931
  br i1 %41, label %46, label %43, !dbg !12969

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !12972
  %45 = icmp ugt i32 %44, 2, !dbg !12975
  br i1 %45, label %89, label %38, !dbg !12976, !llvm.loop !12977

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !12929, metadata !DIExpression()), !dbg !12931
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12979
  %48 = and i32 %47, -67108865, !dbg !12979
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12979
  br label %49, !dbg !12980

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12981
  %51 = and i32 %50, 134217728, !dbg !12981
  %52 = icmp eq i32 %51, 0, !dbg !12982
  %53 = tail call i32 @HAL_GetTick() #25, !dbg !12931
  br i1 %52, label %57, label %54, !dbg !12980

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !12983
  %56 = icmp ugt i32 %55, 2, !dbg !12986
  br i1 %56, label %89, label %49, !dbg !12987, !llvm.loop !12988

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !12929, metadata !DIExpression()), !dbg !12931
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12990
  %59 = and i32 %58, -268435457, !dbg !12990
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12990
  br label %60, !dbg !12991

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12992
  %62 = and i32 %61, 536870912, !dbg !12992
  %63 = icmp eq i32 %62, 0, !dbg !12993
  br i1 %63, label %68, label %64, !dbg !12991

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #25, !dbg !12994
  %66 = sub i32 %65, %53, !dbg !12997
  %67 = icmp ugt i32 %66, 2, !dbg !12998
  br i1 %67, label %89, label %60, !dbg !12999, !llvm.loop !13000

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13002
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13003
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13004
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13005
  %70 = and i32 %69, -7937, !dbg !13005
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13005
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13006
  %72 = and i32 %71, -8193, !dbg !13006
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13006
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13007
  %74 = and i32 %73, -16385, !dbg !13007
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13007
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13008
  %76 = or i32 %75, 10420224, !dbg !13008
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13008
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13009
  %78 = or i32 %77, 2097152, !dbg !13009
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13009
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13010
  %80 = or i32 %79, 4194304, !dbg !13010
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13010
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13011
  %82 = and i32 %81, -2, !dbg !13011
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13011
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13012
  %84 = or i32 %83, 16777216, !dbg !13012
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13012
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !13013
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !13014
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #25, !dbg !13016
  %87 = icmp ne i32 %86, 0, !dbg !13017
  %88 = zext i1 %87 to i32, !dbg !13018
  br label %89, !dbg !13018

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !12931
  ret i32 %90, !dbg !13019
}

; Function Attrs: optsize
declare !dbg !13020 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !13023 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13049, metadata !DIExpression()), !dbg !13060
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13061
  br i1 %3, label %337, label %4, !dbg !13063

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13064
  %6 = load i32, i32* %5, align 4, !dbg !13064
  %7 = and i32 %6, 1, !dbg !13066
  %8 = icmp eq i32 %7, 0, !dbg !13067
  br i1 %8, label %74, label %9, !dbg !13068

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13069
  %11 = and i32 %10, 12, !dbg !13069
  %12 = icmp eq i32 %11, 4, !dbg !13072
  br i1 %12, label %29, label %13, !dbg !13073

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13074
  %15 = and i32 %14, 12, !dbg !13074
  %16 = icmp eq i32 %15, 8, !dbg !13075
  br i1 %16, label %17, label %21, !dbg !13076

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13077
  %19 = and i32 %18, 4194304, !dbg !13078
  %20 = icmp eq i32 %19, 0, !dbg !13079
  br i1 %20, label %21, label %29, !dbg !13080

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13081
  %23 = and i32 %22, 12, !dbg !13081
  %24 = icmp eq i32 %23, 12, !dbg !13082
  br i1 %24, label %25, label %37, !dbg !13083

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13084
  %27 = and i32 %26, 4194304, !dbg !13085
  %28 = icmp eq i32 %27, 0, !dbg !13086
  br i1 %28, label %37, label %29, !dbg !13087

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13088
  %31 = and i32 %30, 131072, !dbg !13088
  %32 = icmp eq i32 %31, 0, !dbg !13088
  br i1 %32, label %74, label %33, !dbg !13091

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13092
  %35 = load i32, i32* %34, align 4, !dbg !13092
  %36 = icmp eq i32 %35, 0, !dbg !13093
  br i1 %36, label %337, label %74, !dbg !13094

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13095
  %39 = load i32, i32* %38, align 4, !dbg !13095
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !13099

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13100
  %42 = or i32 %41, 65536, !dbg !13100
  br label %53, !dbg !13100

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13102
  %45 = or i32 %44, 262144, !dbg !13102
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13102
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13102
  %47 = or i32 %46, 65536, !dbg !13102
  br label %53, !dbg !13102

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13105
  %50 = and i32 %49, -65537, !dbg !13105
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13105
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13105
  %52 = and i32 %51, -262145, !dbg !13105
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13107
  %55 = load i32, i32* %38, align 4, !dbg !13108
  %56 = icmp eq i32 %55, 0, !dbg !13110
  %57 = tail call i32 @HAL_GetTick() #25, !dbg !13111
  call void @llvm.dbg.value(metadata i32 %57, metadata !13050, metadata !DIExpression()), !dbg !13060
  call void @llvm.dbg.value(metadata i32 %57, metadata !13050, metadata !DIExpression()), !dbg !13060
  br i1 %56, label %66, label %58, !dbg !13112

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13113
  %60 = and i32 %59, 131072, !dbg !13115
  %61 = icmp eq i32 %60, 0, !dbg !13115
  br i1 %61, label %62, label %74, !dbg !13116

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !13117
  %64 = sub i32 %63, %57, !dbg !13120
  %65 = icmp ugt i32 %64, 100, !dbg !13121
  br i1 %65, label %337, label %58, !dbg !13122, !llvm.loop !13123

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13125
  %68 = and i32 %67, 131072, !dbg !13125
  %69 = icmp eq i32 %68, 0, !dbg !13125
  br i1 %69, label %74, label %70, !dbg !13127

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #25, !dbg !13128
  %72 = sub i32 %71, %57, !dbg !13131
  %73 = icmp ugt i32 %72, 100, !dbg !13132
  br i1 %73, label %337, label %66, !dbg !13133, !llvm.loop !13134

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !13136
  %76 = and i32 %75, 2, !dbg !13138
  %77 = icmp eq i32 %76, 0, !dbg !13139
  br i1 %77, label %137, label %78, !dbg !13140

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13141
  %80 = and i32 %79, 12, !dbg !13141
  %81 = icmp eq i32 %80, 0, !dbg !13144
  br i1 %81, label %98, label %82, !dbg !13145

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13146
  %84 = and i32 %83, 12, !dbg !13146
  %85 = icmp eq i32 %84, 8, !dbg !13147
  br i1 %85, label %86, label %90, !dbg !13148

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13149
  %88 = and i32 %87, 4194304, !dbg !13150
  %89 = icmp eq i32 %88, 0, !dbg !13151
  br i1 %89, label %98, label %90, !dbg !13152

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13153
  %92 = and i32 %91, 12, !dbg !13153
  %93 = icmp eq i32 %92, 12, !dbg !13154
  br i1 %93, label %94, label %106, !dbg !13155

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13156
  %96 = and i32 %95, 4194304, !dbg !13157
  %97 = icmp eq i32 %96, 0, !dbg !13158
  br i1 %97, label %98, label %106, !dbg !13159

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13160
  %100 = and i32 %99, 2, !dbg !13160
  %101 = icmp eq i32 %100, 0, !dbg !13160
  br i1 %101, label %130, label %102, !dbg !13163

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13164
  %104 = load i32, i32* %103, align 4, !dbg !13164
  %105 = icmp eq i32 %104, 1, !dbg !13165
  br i1 %105, label %130, label %337, !dbg !13166

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13167
  %108 = load i32, i32* %107, align 4, !dbg !13167
  %109 = icmp eq i32 %108, 0, !dbg !13170
  br i1 %109, label %120, label %110, !dbg !13171

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13172
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !13174
  call void @llvm.dbg.value(metadata i32 %111, metadata !13050, metadata !DIExpression()), !dbg !13060
  br label %112, !dbg !13175

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13176
  %114 = and i32 %113, 2, !dbg !13177
  %115 = icmp eq i32 %114, 0, !dbg !13177
  br i1 %115, label %116, label %130, !dbg !13175

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #25, !dbg !13178
  %118 = sub i32 %117, %111, !dbg !13181
  %119 = icmp ugt i32 %118, 2, !dbg !13182
  br i1 %119, label %337, label %112, !dbg !13183, !llvm.loop !13184

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13186
  %121 = tail call i32 @HAL_GetTick() #25, !dbg !13188
  call void @llvm.dbg.value(metadata i32 %121, metadata !13050, metadata !DIExpression()), !dbg !13060
  br label %122, !dbg !13189

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13190
  %124 = and i32 %123, 2, !dbg !13190
  %125 = icmp eq i32 %124, 0, !dbg !13190
  br i1 %125, label %137, label %126, !dbg !13189

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #25, !dbg !13191
  %128 = sub i32 %127, %121, !dbg !13194
  %129 = icmp ugt i32 %128, 2, !dbg !13195
  br i1 %129, label %337, label %122, !dbg !13196, !llvm.loop !13197

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13199
  %132 = and i32 %131, -249, !dbg !13199
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13199
  %134 = load i32, i32* %133, align 4, !dbg !13199
  %135 = shl i32 %134, 3, !dbg !13199
  %136 = or i32 %135, %132, !dbg !13199
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13199
  br label %137, !dbg !13200

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !13200
  %139 = and i32 %138, 8, !dbg !13202
  %140 = icmp eq i32 %139, 0, !dbg !13203
  br i1 %140, label %165, label %141, !dbg !13204

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13205
  %143 = load i32, i32* %142, align 4, !dbg !13205
  %144 = icmp eq i32 %143, 0, !dbg !13208
  br i1 %144, label %155, label %145, !dbg !13209

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13210
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !13212
  call void @llvm.dbg.value(metadata i32 %146, metadata !13050, metadata !DIExpression()), !dbg !13060
  br label %147, !dbg !13213

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13214
  %149 = and i32 %148, 2, !dbg !13215
  %150 = icmp eq i32 %149, 0, !dbg !13215
  br i1 %150, label %151, label %165, !dbg !13213

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #25, !dbg !13216
  %153 = sub i32 %152, %146, !dbg !13219
  %154 = icmp ugt i32 %153, 2, !dbg !13220
  br i1 %154, label %337, label %147, !dbg !13221, !llvm.loop !13222

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13224
  %156 = tail call i32 @HAL_GetTick() #25, !dbg !13226
  call void @llvm.dbg.value(metadata i32 %156, metadata !13050, metadata !DIExpression()), !dbg !13060
  br label %157, !dbg !13227

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13228
  %159 = and i32 %158, 2, !dbg !13228
  %160 = icmp eq i32 %159, 0, !dbg !13228
  br i1 %160, label %165, label %161, !dbg !13227

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #25, !dbg !13229
  %163 = sub i32 %162, %156, !dbg !13232
  %164 = icmp ugt i32 %163, 2, !dbg !13233
  br i1 %164, label %337, label %157, !dbg !13234, !llvm.loop !13235

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !13237
  %167 = and i32 %166, 4, !dbg !13238
  %168 = icmp eq i32 %167, 0, !dbg !13239
  br i1 %168, label %237, label %169, !dbg !13240

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !13052, metadata !DIExpression()), !dbg !13241
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13242
  %171 = and i32 %170, 268435456, !dbg !13242
  %172 = icmp eq i32 %171, 0, !dbg !13242
  br i1 %172, label %173, label %180, !dbg !13243

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !13244
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !13244
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13056, metadata !DIExpression()), !dbg !13244
  store volatile i32 0, i32* %2, align 4, !dbg !13244
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13244
  %176 = or i32 %175, 268435456, !dbg !13244
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13244
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13244
  %178 = and i32 %177, 268435456, !dbg !13244
  store volatile i32 %178, i32* %2, align 4, !dbg !13244
  %179 = load volatile i32, i32* %2, align 4, !dbg !13244
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !13245
  call void @llvm.dbg.value(metadata i32 1, metadata !13052, metadata !DIExpression()), !dbg !13241
  br label %180, !dbg !13246

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !13052, metadata !DIExpression()), !dbg !13241
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13247
  %182 = and i32 %181, 256, !dbg !13247
  %183 = icmp eq i32 %182, 0, !dbg !13247
  br i1 %183, label %184, label %196, !dbg !13249

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13250
  %186 = or i32 %185, 256, !dbg !13250
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13250
  %187 = tail call i32 @HAL_GetTick() #25, !dbg !13252
  call void @llvm.dbg.value(metadata i32 %187, metadata !13050, metadata !DIExpression()), !dbg !13060
  br label %188, !dbg !13253

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13254
  %190 = and i32 %189, 256, !dbg !13254
  %191 = icmp eq i32 %190, 0, !dbg !13254
  br i1 %191, label %192, label %196, !dbg !13253

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #25, !dbg !13255
  %194 = sub i32 %193, %187, !dbg !13258
  %195 = icmp ugt i32 %194, 2, !dbg !13259
  br i1 %195, label %337, label %188, !dbg !13260, !llvm.loop !13261

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13263
  %198 = load i32, i32* %197, align 4, !dbg !13263
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !13266

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13267
  %201 = or i32 %200, 1, !dbg !13267
  br label %212, !dbg !13267

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13269
  %204 = or i32 %203, 4, !dbg !13269
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13269
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13269
  %206 = or i32 %205, 1, !dbg !13269
  br label %212, !dbg !13269

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13272
  %209 = and i32 %208, -2, !dbg !13272
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13272
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13272
  %211 = and i32 %210, -5, !dbg !13272
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13274
  %214 = load i32, i32* %197, align 4, !dbg !13275
  %215 = icmp eq i32 %214, 0, !dbg !13277
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !13278
  call void @llvm.dbg.value(metadata i32 %216, metadata !13050, metadata !DIExpression()), !dbg !13060
  call void @llvm.dbg.value(metadata i32 %216, metadata !13050, metadata !DIExpression()), !dbg !13060
  br i1 %215, label %225, label %217, !dbg !13279

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13280
  %219 = and i32 %218, 2, !dbg !13282
  %220 = icmp eq i32 %219, 0, !dbg !13282
  br i1 %220, label %221, label %233, !dbg !13283

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #25, !dbg !13284
  %223 = sub i32 %222, %216, !dbg !13287
  %224 = icmp ugt i32 %223, 5000, !dbg !13288
  br i1 %224, label %337, label %217, !dbg !13289, !llvm.loop !13290

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13292
  %227 = and i32 %226, 2, !dbg !13292
  %228 = icmp eq i32 %227, 0, !dbg !13292
  br i1 %228, label %233, label %229, !dbg !13294

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !13295
  %231 = sub i32 %230, %216, !dbg !13298
  %232 = icmp ugt i32 %231, 5000, !dbg !13299
  br i1 %232, label %337, label %225, !dbg !13300, !llvm.loop !13301

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !13303

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13304
  %236 = and i32 %235, -268435457, !dbg !13304
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13304
  br label %237, !dbg !13307

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13308
  %239 = load i32, i32* %238, align 4, !dbg !13308
  %240 = icmp eq i32 %239, 0, !dbg !13310
  br i1 %240, label %336, label %241, !dbg !13311

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13312
  %243 = and i32 %242, 12, !dbg !13312
  %244 = icmp eq i32 %243, 8, !dbg !13315
  br i1 %244, label %297, label %245, !dbg !13316

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !13317
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13320
  %247 = tail call i32 @HAL_GetTick() #25, !dbg !13320
  call void @llvm.dbg.value(metadata i32 %247, metadata !13050, metadata !DIExpression()), !dbg !13060
  call void @llvm.dbg.value(metadata i32 %247, metadata !13050, metadata !DIExpression()), !dbg !13060
  br i1 %246, label %248, label %289, !dbg !13321

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13322
  %250 = and i32 %249, 33554432, !dbg !13322
  %251 = icmp eq i32 %250, 0, !dbg !13322
  br i1 %251, label %256, label %252, !dbg !13324

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #25, !dbg !13325
  %254 = sub i32 %253, %247, !dbg !13328
  %255 = icmp ugt i32 %254, 2, !dbg !13329
  br i1 %255, label %337, label %248, !dbg !13330, !llvm.loop !13331

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13333
  %258 = load i32, i32* %257, align 4, !dbg !13333
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13333
  %260 = load i32, i32* %259, align 4, !dbg !13333
  %261 = or i32 %260, %258, !dbg !13333
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13333
  %263 = load i32, i32* %262, align 4, !dbg !13333
  %264 = shl i32 %263, 6, !dbg !13333
  %265 = or i32 %261, %264, !dbg !13333
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13333
  %267 = load i32, i32* %266, align 4, !dbg !13333
  %268 = shl i32 %267, 15, !dbg !13333
  %269 = add i32 %268, -65536, !dbg !13333
  %270 = and i32 %269, -65536, !dbg !13333
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13333
  %272 = load i32, i32* %271, align 4, !dbg !13333
  %273 = shl i32 %272, 24, !dbg !13333
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13333
  %275 = load i32, i32* %274, align 4, !dbg !13333
  %276 = shl i32 %275, 28, !dbg !13333
  %277 = or i32 %265, %273, !dbg !13333
  %278 = or i32 %277, %270, !dbg !13333
  %279 = or i32 %278, %276, !dbg !13333
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13333
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13334
  %280 = tail call i32 @HAL_GetTick() #25, !dbg !13335
  call void @llvm.dbg.value(metadata i32 %280, metadata !13050, metadata !DIExpression()), !dbg !13060
  br label %281, !dbg !13336

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13337
  %283 = and i32 %282, 33554432, !dbg !13338
  %284 = icmp eq i32 %283, 0, !dbg !13338
  br i1 %284, label %285, label %336, !dbg !13336

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #25, !dbg !13339
  %287 = sub i32 %286, %280, !dbg !13342
  %288 = icmp ugt i32 %287, 2, !dbg !13343
  br i1 %288, label %337, label %281, !dbg !13344, !llvm.loop !13345

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13347
  %291 = and i32 %290, 33554432, !dbg !13347
  %292 = icmp eq i32 %291, 0, !dbg !13347
  br i1 %292, label %336, label %293, !dbg !13349

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #25, !dbg !13350
  %295 = sub i32 %294, %247, !dbg !13353
  %296 = icmp ugt i32 %295, 2, !dbg !13354
  br i1 %296, label %337, label %289, !dbg !13355, !llvm.loop !13356

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !13358
  br i1 %298, label %337, label %299, !dbg !13361

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13362
  call void @llvm.dbg.value(metadata i32 %300, metadata !13051, metadata !DIExpression()), !dbg !13060
  %301 = and i32 %300, 4194304, !dbg !13364
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13366
  %303 = load i32, i32* %302, align 4, !dbg !13366
  %304 = icmp eq i32 %301, %303, !dbg !13367
  br i1 %304, label %305, label %337, !dbg !13368

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !13369
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13370
  %308 = load i32, i32* %307, align 4, !dbg !13370
  %309 = icmp eq i32 %306, %308, !dbg !13371
  br i1 %309, label %310, label %337, !dbg !13372

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !13373
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13374
  %313 = load i32, i32* %312, align 4, !dbg !13374
  %314 = shl i32 %313, 6, !dbg !13375
  %315 = icmp eq i32 %311, %314, !dbg !13376
  br i1 %315, label %316, label %337, !dbg !13377

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !13378
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13379
  %319 = load i32, i32* %318, align 4, !dbg !13379
  %320 = shl i32 %319, 15, !dbg !13380
  %321 = add i32 %320, -65536, !dbg !13380
  %322 = and i32 %321, -65536, !dbg !13380
  %323 = icmp eq i32 %317, %322, !dbg !13381
  br i1 %323, label %324, label %337, !dbg !13382

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !13383
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13384
  %327 = load i32, i32* %326, align 4, !dbg !13384
  %328 = shl i32 %327, 24, !dbg !13385
  %329 = icmp eq i32 %325, %328, !dbg !13386
  br i1 %329, label %330, label %337, !dbg !13387

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !13388
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13389
  %333 = load i32, i32* %332, align 4, !dbg !13389
  %334 = shl i32 %333, 28, !dbg !13390
  %335 = icmp eq i32 %331, %334, !dbg !13391
  br i1 %335, label %336, label %337, !dbg !13392

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !13393

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !13060
  ret i32 %338, !dbg !13394
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #16 !dbg !13395 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13399, metadata !DIExpression()), !dbg !13400
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13401
  store i32 15, i32* %2, align 4, !dbg !13402
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13403
  %4 = and i32 %3, 262144, !dbg !13405
  %5 = icmp eq i32 %4, 0, !dbg !13406
  br i1 %5, label %8, label %6, !dbg !13407

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13408
  store i32 327680, i32* %7, align 4, !dbg !13410
  br label %15, !dbg !13411

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13412
  %10 = and i32 %9, 65536, !dbg !13414
  %11 = icmp eq i32 %10, 0, !dbg !13415
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13416
  br i1 %11, label %14, label %13, !dbg !13417

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13418
  br label %15, !dbg !13420

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13421
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13423
  %17 = and i32 %16, 1, !dbg !13425
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13426
  store i32 %17, i32* %18, align 4, !dbg !13428
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13429
  %20 = lshr i32 %19, 3, !dbg !13430
  %21 = and i32 %20, 31, !dbg !13430
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13431
  store i32 %21, i32* %22, align 4, !dbg !13432
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13433
  %24 = and i32 %23, 4, !dbg !13435
  %25 = icmp eq i32 %24, 0, !dbg !13436
  br i1 %25, label %28, label %26, !dbg !13437

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13438
  store i32 5, i32* %27, align 4, !dbg !13440
  br label %35, !dbg !13441

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13442
  %30 = and i32 %29, 1, !dbg !13444
  %31 = icmp eq i32 %30, 0, !dbg !13445
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13446
  br i1 %31, label %34, label %33, !dbg !13447

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13448
  br label %35, !dbg !13450

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13451
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13453
  %37 = and i32 %36, 1, !dbg !13455
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13456
  store i32 %37, i32* %38, align 4, !dbg !13458
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13459
  %40 = and i32 %39, 16777216, !dbg !13461
  %41 = icmp eq i32 %40, 0, !dbg !13462
  %42 = select i1 %41, i32 1, i32 2, !dbg !13463
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13464
  store i32 %42, i32* %43, align 4, !dbg !13466
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13467
  %45 = and i32 %44, 4194304, !dbg !13468
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13469
  store i32 %45, i32* %46, align 4, !dbg !13470
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13471
  %48 = and i32 %47, 63, !dbg !13472
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13473
  store i32 %48, i32* %49, align 4, !dbg !13474
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13475
  %51 = lshr i32 %50, 6, !dbg !13476
  %52 = and i32 %51, 511, !dbg !13476
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13477
  store i32 %52, i32* %53, align 4, !dbg !13478
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13479
  %55 = shl i32 %54, 1, !dbg !13480
  %56 = and i32 %55, 393216, !dbg !13480
  %57 = add nuw nsw i32 %56, 131072, !dbg !13480
  %58 = lshr exact i32 %57, 16, !dbg !13481
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13482
  store i32 %58, i32* %59, align 4, !dbg !13483
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13484
  %61 = lshr i32 %60, 24, !dbg !13485
  %62 = and i32 %61, 15, !dbg !13485
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13486
  store i32 %62, i32* %63, align 4, !dbg !13487
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13488
  %65 = lshr i32 %64, 28, !dbg !13489
  %66 = and i32 %65, 7, !dbg !13489
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13490
  store i32 %66, i32* %67, align 4, !dbg !13491
  ret void, !dbg !13492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !13493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13496, metadata !DIExpression()), !dbg !13497
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !13498
  ret void, !dbg !13499
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !13500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13503, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.value(metadata i32 1000, metadata !13504, metadata !DIExpression()), !dbg !13505
  %2 = udiv i32 %0, 1000, !dbg !13506
  %3 = add nsw i32 %2, -1, !dbg !13507
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13508
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13509
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13510
  ret void, !dbg !13511
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !13512 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13514, metadata !DIExpression()), !dbg !13516
  %3 = bitcast i32* %2 to i8*, !dbg !13517
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13517
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13515, metadata !DIExpression()), !dbg !13518
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13519
  store volatile i32 %4, i32* %2, align 4, !dbg !13518
  %5 = load volatile i32, i32* %2, align 4, !dbg !13520
  %6 = icmp eq i32 %0, -1, !dbg !13521
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13514, metadata !DIExpression()), !dbg !13516
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13516
  call void @llvm.dbg.value(metadata i32 %8, metadata !13514, metadata !DIExpression()), !dbg !13516
  br label %9, !dbg !13523

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13514, metadata !DIExpression()), !dbg !13516
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13524
  call void @llvm.dbg.value(metadata i32 undef, metadata !13514, metadata !DIExpression()), !dbg !13516
  %12 = shl i32 %11, 15, !dbg !13516
  %13 = ashr i32 %12, 31, !dbg !13516
  %14 = add i32 %13, %10, !dbg !13516
  call void @llvm.dbg.value(metadata i32 %14, metadata !13514, metadata !DIExpression()), !dbg !13516
  %15 = icmp eq i32 %14, 0, !dbg !13523
  br i1 %15, label %16, label %9, !dbg !13523

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13527
  ret void, !dbg !13527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !13528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13530, metadata !DIExpression()), !dbg !13531
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13532
  ret void, !dbg !13533
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !13534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13539, metadata !DIExpression()), !dbg !13544
  call void @llvm.dbg.value(metadata i32 0, metadata !13542, metadata !DIExpression()), !dbg !13544
  call void @llvm.dbg.value(metadata i32 0, metadata !13543, metadata !DIExpression()), !dbg !13544
  %2 = icmp eq i32 %0, 0, !dbg !13545
  br i1 %2, label %72, label %3, !dbg !13547

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13548
  %5 = icmp eq i32 %4, 49152, !dbg !13551
  br i1 %5, label %6, label %21, !dbg !13552

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13553
  %8 = select i1 %7, i32 0, i32 5, !dbg !13556
  call void @llvm.dbg.value(metadata i32 %8, metadata !13542, metadata !DIExpression()), !dbg !13544
  %9 = add i32 %0, -120000001, !dbg !13557
  %10 = icmp ult i32 %9, 30000000, !dbg !13557
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13557
  call void @llvm.dbg.value(metadata i32 %11, metadata !13542, metadata !DIExpression()), !dbg !13544
  %12 = icmp ult i32 %9, -30000000, !dbg !13559
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13559
  call void @llvm.dbg.value(metadata i32 %13, metadata !13542, metadata !DIExpression()), !dbg !13544
  %14 = icmp ugt i32 %0, 60000000, !dbg !13561
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13563
  br i1 %16, label %21, label %17, !dbg !13563

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13564
  %19 = and i1 %18, %15, !dbg !13567
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13567
  br label %21, !dbg !13567

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13544
  call void @llvm.dbg.value(metadata i32 %22, metadata !13542, metadata !DIExpression()), !dbg !13544
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13568
  %24 = icmp eq i32 %23, 32768, !dbg !13570
  br i1 %24, label %25, label %45, !dbg !13571

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !13572
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13575
  %29 = select i1 %28, i32 5, i32 %22, !dbg !13575
  call void @llvm.dbg.value(metadata i32 %29, metadata !13542, metadata !DIExpression()), !dbg !13544
  %30 = icmp ugt i32 %0, 12000000, !dbg !13576
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13578
  %33 = select i1 %32, i32 4, i32 %29, !dbg !13578
  call void @llvm.dbg.value(metadata i32 %33, metadata !13542, metadata !DIExpression()), !dbg !13544
  %34 = icmp ugt i32 %0, 90000000, !dbg !13579
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13581
  %37 = select i1 %36, i32 3, i32 %33, !dbg !13581
  call void @llvm.dbg.value(metadata i32 %37, metadata !13542, metadata !DIExpression()), !dbg !13544
  %38 = icmp ugt i32 %0, 60000000, !dbg !13582
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !13584
  br i1 %40, label %45, label %41, !dbg !13584

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !13585
  %43 = select i1 %42, i1 %39, i1 false, !dbg !13588
  %44 = select i1 %43, i32 1, i32 %37, !dbg !13588
  br label %45, !dbg !13588

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !13589
  call void @llvm.dbg.value(metadata i32 %46, metadata !13542, metadata !DIExpression()), !dbg !13544
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13590
  %48 = icmp eq i32 %47, 16384, !dbg !13592
  br i1 %48, label %49, label %61, !dbg !13593

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !13594
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !13597
  %53 = select i1 %52, i32 3, i32 %46, !dbg !13597
  call void @llvm.dbg.value(metadata i32 %53, metadata !13542, metadata !DIExpression()), !dbg !13544
  %54 = icmp ugt i32 %0, 60000000, !dbg !13598
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !13600
  br i1 %56, label %61, label %57, !dbg !13600

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !13601
  %59 = select i1 %58, i1 %55, i1 false, !dbg !13604
  %60 = select i1 %59, i32 1, i32 %53, !dbg !13604
  br label %61, !dbg !13604

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !13589
  call void @llvm.dbg.value(metadata i32 %62, metadata !13542, metadata !DIExpression()), !dbg !13544
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #26, !dbg !13605
  call void @llvm.dbg.value(metadata i32 2, metadata !13540, metadata !DIExpression()), !dbg !13544
  br label %63, !dbg !13606

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !13589
  call void @llvm.dbg.value(metadata i32 %64, metadata !13540, metadata !DIExpression()), !dbg !13544
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !13607
  call void @llvm.dbg.value(metadata i32 %65, metadata !13541, metadata !DIExpression()), !dbg !13544
  %66 = add nsw i32 %64, -1, !dbg !13609
  call void @llvm.dbg.value(metadata i32 %66, metadata !13540, metadata !DIExpression()), !dbg !13544
  %67 = icmp ne i32 %65, %62, !dbg !13610
  %68 = icmp ne i32 %66, 0, !dbg !13611
  %69 = select i1 %67, i1 %68, i1 false, !dbg !13611
  br i1 %69, label %63, label %70, !dbg !13612, !llvm.loop !13613

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !13615
  call void @llvm.dbg.value(metadata i32 %73, metadata !13543, metadata !DIExpression()), !dbg !13544
  ret i32 %73, !dbg !13616
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !13617 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13619
  %2 = and i32 %1, 49152, !dbg !13619
  ret i32 %2, !dbg !13620
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !13621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13623, metadata !DIExpression()), !dbg !13624
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13625
  %3 = and i32 %2, -16, !dbg !13625
  %4 = or i32 %3, %0, !dbg !13625
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13625
  ret void, !dbg !13626
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !13627 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13628
  %2 = and i32 %1, 15, !dbg !13628
  ret i32 %2, !dbg !13629
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !13630 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13648, metadata !DIExpression()), !dbg !13652
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13649, metadata !DIExpression()), !dbg !13652
  call void @llvm.dbg.value(metadata i32 0, metadata !13650, metadata !DIExpression()), !dbg !13652
  call void @llvm.dbg.value(metadata i32 0, metadata !13651, metadata !DIExpression()), !dbg !13652
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13653
  %4 = icmp eq i32 %3, 0, !dbg !13655
  br i1 %4, label %5, label %21, !dbg !13656

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !13657
  call void @llvm.dbg.value(metadata i32 %6, metadata !13651, metadata !DIExpression()), !dbg !13652
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.101() #26, !dbg !13659
  %8 = icmp eq i32 %7, 1, !dbg !13661
  br i1 %8, label %13, label %9, !dbg !13662

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.102() #26, !dbg !13663
  br label %10, !dbg !13665

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.101() #26, !dbg !13666
  %12 = icmp eq i32 %11, 1, !dbg !13667
  br i1 %12, label %13, label %10, !dbg !13665, !llvm.loop !13668

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13670
  %15 = load i32, i32* %14, align 4, !dbg !13670
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13671
  %17 = load i32, i32* %16, align 4, !dbg !13671
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13672
  %19 = load i32, i32* %18, align 4, !dbg !13672
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.103(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !13673
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !13674
  call void @llvm.dbg.value(metadata i32 %20, metadata !13650, metadata !DIExpression()), !dbg !13652
  br label %21, !dbg !13675

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13676
  call void @llvm.dbg.value(metadata i32 %22, metadata !13650, metadata !DIExpression()), !dbg !13652
  ret i32 %22, !dbg !13677
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !13678 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13682, metadata !DIExpression()), !dbg !13683
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.105() #26, !dbg !13684
  %2 = icmp ne i32 %1, 0, !dbg !13686
  call void @llvm.dbg.value(metadata i1 %2, metadata !13682, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13683
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #26, !dbg !13687
  %4 = icmp ne i32 %3, 0, !dbg !13689
  call void @llvm.dbg.value(metadata i1 undef, metadata !13682, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13683
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !13690
  %6 = icmp ne i32 %5, 0, !dbg !13692
  %7 = select i1 %6, i1 true, i1 %4, !dbg !13693
  %8 = select i1 %7, i1 true, i1 %2, !dbg !13693
  %9 = zext i1 %8 to i32, !dbg !13693
  call void @llvm.dbg.value(metadata i32 %9, metadata !13682, metadata !DIExpression()), !dbg !13683
  ret i32 %9, !dbg !13694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !13695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13699, metadata !DIExpression()), !dbg !13702
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13700, metadata !DIExpression()), !dbg !13702
  call void @llvm.dbg.value(metadata i32 0, metadata !13701, metadata !DIExpression()), !dbg !13702
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13703
  %4 = load i32, i32* %3, align 4, !dbg !13703
  %5 = and i32 %4, 63, !dbg !13704
  %6 = udiv i32 %0, %5, !dbg !13705
  call void @llvm.dbg.value(metadata i32 %6, metadata !13701, metadata !DIExpression()), !dbg !13702
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13706
  %8 = load i32, i32* %7, align 4, !dbg !13706
  %9 = and i32 %8, 511, !dbg !13707
  %10 = mul i32 %9, %6, !dbg !13708
  call void @llvm.dbg.value(metadata i32 %10, metadata !13701, metadata !DIExpression()), !dbg !13702
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13709
  %12 = load i32, i32* %11, align 4, !dbg !13709
  %13 = lshr i32 %12, 15, !dbg !13710
  %14 = and i32 %13, 131070, !dbg !13710
  %15 = add nuw nsw i32 %14, 2, !dbg !13710
  %16 = udiv i32 %10, %15, !dbg !13711
  call void @llvm.dbg.value(metadata i32 %16, metadata !13701, metadata !DIExpression()), !dbg !13702
  ret i32 %16, !dbg !13712
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.101() unnamed_addr #16 !dbg !13713 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13714
  %2 = lshr i32 %1, 1, !dbg !13715
  %3 = and i32 %2, 1, !dbg !13715
  ret i32 %3, !dbg !13716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.102() unnamed_addr #15 !dbg !13717 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13718
  %2 = or i32 %1, 1, !dbg !13718
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13718
  ret void, !dbg !13719
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.103(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !13720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13722, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.value(metadata i32 %1, metadata !13723, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.value(metadata i32 %2, metadata !13724, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.value(metadata i32 %3, metadata !13725, metadata !DIExpression()), !dbg !13726
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13727
  %6 = and i32 %5, -4227072, !dbg !13727
  %7 = or i32 %1, %0, !dbg !13727
  %8 = shl i32 %2, 6, !dbg !13727
  %9 = or i32 %7, %8, !dbg !13727
  %10 = or i32 %9, %6, !dbg !13727
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13727
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13728
  %12 = and i32 %11, -196609, !dbg !13728
  %13 = or i32 %12, %3, !dbg !13728
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13728
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13729
  %15 = and i32 %14, -1879048193, !dbg !13729
  %16 = or i32 %15, %3, !dbg !13729
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13729
  ret void, !dbg !13730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !13731 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13735, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13736, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.value(metadata i32 0, metadata !13737, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.value(metadata i32 0, metadata !13738, metadata !DIExpression()), !dbg !13739
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13740
  %4 = load i32, i32* %3, align 4, !dbg !13740
  %5 = lshr i32 %4, 4, !dbg !13740
  %6 = and i32 %5, 15, !dbg !13740
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13740
  %8 = load i8, i8* %7, align 1, !dbg !13740
  %9 = zext i8 %8 to i32, !dbg !13740
  %10 = lshr i32 %0, %9, !dbg !13740
  call void @llvm.dbg.value(metadata i32 %10, metadata !13738, metadata !DIExpression()), !dbg !13739
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13741
  %12 = icmp ult i32 %11, %10, !dbg !13743
  br i1 %12, label %13, label %16, !dbg !13744

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13745
  call void @llvm.dbg.value(metadata i32 %14, metadata !13737, metadata !DIExpression()), !dbg !13739
  %15 = icmp eq i32 %14, 0, !dbg !13747
  br i1 %15, label %16, label %30, !dbg !13749

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.104() #26, !dbg !13750
  br label %17, !dbg !13752

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.105() #26, !dbg !13753
  %19 = icmp eq i32 %18, 1, !dbg !13754
  br i1 %19, label %20, label %17, !dbg !13752, !llvm.loop !13755

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13757
  tail call fastcc void @LL_RCC_SetAHBPrescaler.106(i32 noundef %21) #26, !dbg !13758
  tail call fastcc void @LL_RCC_SetSysClkSource.107() #26, !dbg !13759
  br label %22, !dbg !13760

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.108() #26, !dbg !13761
  %24 = icmp eq i32 %23, 8, !dbg !13762
  br i1 %24, label %25, label %22, !dbg !13760, !llvm.loop !13763

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13765
  %27 = load i32, i32* %26, align 4, !dbg !13765
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.109(i32 noundef %27) #26, !dbg !13766
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13767
  %29 = load i32, i32* %28, align 4, !dbg !13767
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.110(i32 noundef %29) #26, !dbg !13768
  br label %30, !dbg !13769

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13770
  %33 = icmp ugt i32 %32, %10, !dbg !13772
  br i1 %33, label %34, label %36, !dbg !13773

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13774
  call void @llvm.dbg.value(metadata i32 %35, metadata !13737, metadata !DIExpression()), !dbg !13739
  br label %36, !dbg !13776

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13739
  call void @llvm.dbg.value(metadata i32 %37, metadata !13737, metadata !DIExpression()), !dbg !13739
  %38 = icmp eq i32 %37, 0, !dbg !13777
  br i1 %38, label %39, label %40, !dbg !13779

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13780
  br label %40, !dbg !13782

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13783
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.104() unnamed_addr #15 !dbg !13784 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13785
  %2 = or i32 %1, 16777216, !dbg !13785
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13785
  ret void, !dbg !13786
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.105() unnamed_addr #16 !dbg !13787 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13788
  %2 = lshr i32 %1, 25, !dbg !13789
  %3 = and i32 %2, 1, !dbg !13789
  ret i32 %3, !dbg !13790
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.106(i32 noundef %0) unnamed_addr #15 !dbg !13791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13793, metadata !DIExpression()), !dbg !13794
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13795
  %3 = and i32 %2, -241, !dbg !13795
  %4 = or i32 %3, %0, !dbg !13795
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13795
  ret void, !dbg !13796
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.107() unnamed_addr #15 !dbg !13797 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13799, metadata !DIExpression()), !dbg !13800
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13801
  %2 = and i32 %1, -4, !dbg !13801
  %3 = or i32 %2, 2, !dbg !13801
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13801
  ret void, !dbg !13802
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.108() unnamed_addr #16 !dbg !13803 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13804
  %2 = and i32 %1, 12, !dbg !13804
  ret i32 %2, !dbg !13805
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.109(i32 noundef %0) unnamed_addr #15 !dbg !13806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13808, metadata !DIExpression()), !dbg !13809
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13810
  %3 = and i32 %2, -7169, !dbg !13810
  %4 = or i32 %3, %0, !dbg !13810
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13810
  ret void, !dbg !13811
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.110(i32 noundef %0) unnamed_addr #15 !dbg !13812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13814, metadata !DIExpression()), !dbg !13815
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13816
  %3 = and i32 %2, -57345, !dbg !13816
  %4 = or i32 %3, %0, !dbg !13816
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13816
  ret void, !dbg !13817
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #16 !dbg !13818 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13819
  %2 = lshr i32 %1, 29, !dbg !13820
  %3 = and i32 %2, 1, !dbg !13820
  ret i32 %3, !dbg !13821
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !13822 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13823
  %2 = lshr i32 %1, 27, !dbg !13824
  %3 = and i32 %2, 1, !dbg !13824
  ret i32 %3, !dbg !13825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13830, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i32 %1, metadata !13831, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13832, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13833, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i32 0, metadata !13834, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i32 0, metadata !13835, metadata !DIExpression()), !dbg !13836
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13837
  %6 = icmp eq i32 %5, 0, !dbg !13839
  br i1 %6, label %7, label %27, !dbg !13840

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !13841
  call void @llvm.dbg.value(metadata i32 %8, metadata !13835, metadata !DIExpression()), !dbg !13836
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.111() #26, !dbg !13843
  %10 = icmp eq i32 %9, 1, !dbg !13845
  br i1 %10, label %19, label %11, !dbg !13846

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13847
  br i1 %12, label %13, label %14, !dbg !13850

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13851
  br label %15, !dbg !13853

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.112() #26, !dbg !13854
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.113() #26, !dbg !13856
  br label %16, !dbg !13857

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.111() #26, !dbg !13858
  %18 = icmp eq i32 %17, 1, !dbg !13859
  br i1 %18, label %19, label %16, !dbg !13857, !llvm.loop !13860

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13862
  %21 = load i32, i32* %20, align 4, !dbg !13862
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13863
  %23 = load i32, i32* %22, align 4, !dbg !13863
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13864
  %25 = load i32, i32* %24, align 4, !dbg !13864
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.103(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !13865
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13866
  call void @llvm.dbg.value(metadata i32 %26, metadata !13834, metadata !DIExpression()), !dbg !13836
  br label %27, !dbg !13867

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13868
  call void @llvm.dbg.value(metadata i32 %28, metadata !13834, metadata !DIExpression()), !dbg !13836
  ret i32 %28, !dbg !13869
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.111() unnamed_addr #16 !dbg !13870 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13871
  %2 = lshr i32 %1, 17, !dbg !13872
  %3 = and i32 %2, 1, !dbg !13872
  ret i32 %3, !dbg !13873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13874 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13875
  %2 = or i32 %1, 262144, !dbg !13875
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13875
  ret void, !dbg !13876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.112() unnamed_addr #15 !dbg !13877 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13878
  %2 = and i32 %1, -262145, !dbg !13878
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13878
  ret void, !dbg !13879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.113() unnamed_addr #15 !dbg !13880 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13881
  %2 = or i32 %1, 65536, !dbg !13881
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13881
  ret void, !dbg !13882
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13883 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13886, metadata !DIExpression()), !dbg !13902
  call void @llvm.dbg.value(metadata i32 undef, metadata !13886, metadata !DIExpression()), !dbg !13902
  call void @llvm.dbg.value(metadata i32 undef, metadata !13886, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13902
  ret void, !dbg !13903
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13904 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13908, metadata !DIExpression()), !dbg !13910
  %2 = icmp eq i8* %0, null, !dbg !13911
  br i1 %2, label %29, label %3, !dbg !13913

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13914
  %5 = icmp eq i8 %4, 0, !dbg !13915
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13916
  br i1 %6, label %29, label %8, !dbg !13916

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13909, metadata !DIExpression()), !dbg !13910
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13917

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13909, metadata !DIExpression()), !dbg !13910
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13919
  br i1 %10, label %11, label %15, !dbg !13924

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13925
  %13 = load i8*, i8** %12, align 4, !dbg !13925
  %14 = icmp eq i8* %13, %0, !dbg !13926
  br i1 %14, label %29, label %15, !dbg !13927

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13928
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13909, metadata !DIExpression()), !dbg !13910
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13929
  br i1 %17, label %7, label %8, !dbg !13930, !llvm.loop !13931

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13909, metadata !DIExpression()), !dbg !13910
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13933
  br i1 %20, label %21, label %26, !dbg !13937

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13938
  %23 = load i8*, i8** %22, align 4, !dbg !13938
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13939
  %25 = icmp eq i32 %24, 0, !dbg !13940
  br i1 %25, label %29, label %26, !dbg !13941

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13942
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13909, metadata !DIExpression()), !dbg !13910
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13943
  br i1 %28, label %29, label %18, !dbg !13917, !llvm.loop !13944

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13910
  ret %struct.device* %30, !dbg !13946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !13947 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13951, metadata !DIExpression()), !dbg !13952
  %2 = icmp eq %struct.device* %0, null, !dbg !13953
  br i1 %2, label %14, label %3, !dbg !13955

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13956
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13956
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13957
  %7 = load i8, i8* %6, align 1, !dbg !13957
  %8 = and i8 %7, 1, !dbg !13957
  %9 = icmp eq i8 %8, 0, !dbg !13957
  br i1 %9, label %14, label %10, !dbg !13958

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13959
  %12 = load i8, i8* %11, align 1, !dbg !13959
  %13 = icmp eq i8 %12, 0, !dbg !13960
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13952
  ret i1 %15, !dbg !13961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !13962 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13967, metadata !DIExpression()), !dbg !13968
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13969
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13970
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13971 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13979, metadata !DIExpression()), !dbg !13984
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13980, metadata !DIExpression()), !dbg !13984
  call void @llvm.dbg.value(metadata i8* %2, metadata !13981, metadata !DIExpression()), !dbg !13984
  %5 = bitcast i32* %4 to i8*, !dbg !13985
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13985
  call void @llvm.dbg.value(metadata i32 0, metadata !13982, metadata !DIExpression()), !dbg !13984
  store i32 0, i32* %4, align 4, !dbg !13986
  call void @llvm.dbg.value(metadata i32* %4, metadata !13982, metadata !DIExpression(DW_OP_deref)), !dbg !13984
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13987
  call void @llvm.dbg.value(metadata i16* %6, metadata !13983, metadata !DIExpression()), !dbg !13984
  %7 = load i32, i32* %4, align 4, !dbg !13988
  call void @llvm.dbg.value(metadata i32 %7, metadata !13982, metadata !DIExpression()), !dbg !13984
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13989
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13990
  ret i32 %8, !dbg !13991
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13992 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13996, metadata !DIExpression()), !dbg !14002
  call void @llvm.dbg.value(metadata i32* %1, metadata !13997, metadata !DIExpression()), !dbg !14002
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14003
  %4 = load i16*, i16** %3, align 4, !dbg !14003
  call void @llvm.dbg.value(metadata i16* %4, metadata !13998, metadata !DIExpression()), !dbg !14002
  %5 = icmp eq i16* %4, null, !dbg !14004
  br i1 %5, label %14, label %6, !dbg !14005

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14006
  call void @llvm.dbg.value(metadata i32 %7, metadata !13999, metadata !DIExpression()), !dbg !14006
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14007
  %9 = load i16, i16* %8, align 2, !dbg !14007
  %10 = add i16 %9, -32767, !dbg !14008
  %11 = icmp ult i16 %10, 2, !dbg !14008
  %12 = add i32 %7, 1, !dbg !14009
  call void @llvm.dbg.value(metadata i32 %12, metadata !13999, metadata !DIExpression()), !dbg !14006
  br i1 %11, label %13, label %6, !dbg !14008, !llvm.loop !14011

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14014
  br label %14, !dbg !14015

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14017 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14021, metadata !DIExpression()), !dbg !14032
  call void @llvm.dbg.value(metadata i32 %1, metadata !14022, metadata !DIExpression()), !dbg !14032
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14023, metadata !DIExpression()), !dbg !14032
  call void @llvm.dbg.value(metadata i8* %3, metadata !14024, metadata !DIExpression()), !dbg !14032
  call void @llvm.dbg.value(metadata i32 0, metadata !14025, metadata !DIExpression()), !dbg !14033
  %5 = icmp eq i32 %1, 0, !dbg !14034
  br i1 %5, label %16, label %8, !dbg !14035

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14025, metadata !DIExpression()), !dbg !14033
  %7 = icmp eq i32 %15, %1, !dbg !14034
  br i1 %7, label %16, label %8, !dbg !14035, !llvm.loop !14036

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14025, metadata !DIExpression()), !dbg !14033
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14038
  %11 = load i16, i16* %10, align 2, !dbg !14038
  call void @llvm.dbg.value(metadata i16 %11, metadata !14027, metadata !DIExpression()), !dbg !14039
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !14040
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14030, metadata !DIExpression()), !dbg !14039
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !14041
  call void @llvm.dbg.value(metadata i32 %13, metadata !14031, metadata !DIExpression()), !dbg !14039
  %14 = icmp slt i32 %13, 0, !dbg !14042
  %15 = add nuw i32 %9, 1, !dbg !14044
  call void @llvm.dbg.value(metadata i32 %15, metadata !14025, metadata !DIExpression()), !dbg !14033
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !14046 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14050, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14051, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14052, metadata !DIExpression()), !dbg !14053
  %2 = sext i16 %0 to i32, !dbg !14054
  %3 = icmp slt i16 %0, 1, !dbg !14056
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14057
  %6 = add nsw i32 %2, -1, !dbg !14057
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14057
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14057
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14051, metadata !DIExpression()), !dbg !14053
  ret %struct.device* %8, !dbg !14058
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14059 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14061, metadata !DIExpression()), !dbg !14066
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14062, metadata !DIExpression()), !dbg !14066
  call void @llvm.dbg.value(metadata i8* %2, metadata !14063, metadata !DIExpression()), !dbg !14066
  %5 = bitcast i32* %4 to i8*, !dbg !14067
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !14067
  call void @llvm.dbg.value(metadata i32 0, metadata !14064, metadata !DIExpression()), !dbg !14066
  store i32 0, i32* %4, align 4, !dbg !14068
  call void @llvm.dbg.value(metadata i32* %4, metadata !14064, metadata !DIExpression(DW_OP_deref)), !dbg !14066
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14069
  call void @llvm.dbg.value(metadata i16* %6, metadata !14065, metadata !DIExpression()), !dbg !14066
  %7 = load i32, i32* %4, align 4, !dbg !14070
  call void @llvm.dbg.value(metadata i32 %7, metadata !14064, metadata !DIExpression()), !dbg !14066
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14071
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !14072
  ret i32 %8, !dbg !14073
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14074 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14076, metadata !DIExpression()), !dbg !14081
  call void @llvm.dbg.value(metadata i32* %1, metadata !14077, metadata !DIExpression()), !dbg !14081
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14082
  %4 = load i16*, i16** %3, align 4, !dbg !14082
  call void @llvm.dbg.value(metadata i16* %4, metadata !14078, metadata !DIExpression()), !dbg !14081
  call void @llvm.dbg.value(metadata i32 0, metadata !14079, metadata !DIExpression()), !dbg !14081
  call void @llvm.dbg.value(metadata i32 0, metadata !14080, metadata !DIExpression()), !dbg !14081
  %5 = icmp eq i16* %4, null, !dbg !14083
  br i1 %5, label %22, label %6, !dbg !14085

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14079, metadata !DIExpression()), !dbg !14081
  call void @llvm.dbg.value(metadata i16* %8, metadata !14078, metadata !DIExpression()), !dbg !14081
  %9 = load i16, i16* %8, align 2, !dbg !14086
  %10 = icmp eq i16 %9, -32768, !dbg !14090
  call void @llvm.dbg.value(metadata i32 undef, metadata !14079, metadata !DIExpression()), !dbg !14081
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14091
  call void @llvm.dbg.value(metadata i16* %11, metadata !14078, metadata !DIExpression()), !dbg !14081
  %12 = zext i1 %10 to i32, !dbg !14092
  %13 = add i32 %7, %12, !dbg !14092
  call void @llvm.dbg.value(metadata i32 %13, metadata !14079, metadata !DIExpression()), !dbg !14081
  %14 = icmp eq i32 %13, 2, !dbg !14093
  br i1 %14, label %15, label %6, !dbg !14094

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14081
  call void @llvm.dbg.value(metadata i32 %16, metadata !14080, metadata !DIExpression()), !dbg !14081
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14095
  %18 = load i16, i16* %17, align 2, !dbg !14095
  %19 = icmp eq i16 %18, 32767, !dbg !14096
  %20 = add i32 %16, 1, !dbg !14097
  call void @llvm.dbg.value(metadata i32 %20, metadata !14080, metadata !DIExpression()), !dbg !14081
  br i1 %19, label %21, label %15, !dbg !14099, !llvm.loop !14100

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14102
  br label %22, !dbg !14103

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14104
  call void @llvm.dbg.value(metadata i16* %23, metadata !14078, metadata !DIExpression()), !dbg !14081
  ret i16* %23, !dbg !14105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !14106 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14107
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14108
  ret i32* %2, !dbg !14109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !14110 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14258, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14259, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14260, metadata !DIExpression()), !dbg !14261
  ret void, !dbg !14262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !14263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14267, metadata !DIExpression()), !dbg !14269
  call void @llvm.dbg.value(metadata i32 %1, metadata !14268, metadata !DIExpression()), !dbg !14269
  ret void, !dbg !14270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !14271 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14275, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i32 %1, metadata !14276, metadata !DIExpression()), !dbg !14277
  ret void, !dbg !14278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !14279 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14283, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i8* %1, metadata !14284, metadata !DIExpression()), !dbg !14285
  ret i32 -134, !dbg !14286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !14287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14291, metadata !DIExpression()), !dbg !14293
  call void @llvm.dbg.value(metadata i8* %1, metadata !14292, metadata !DIExpression()), !dbg !14293
  ret i32 -134, !dbg !14294
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !14295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14298, metadata !DIExpression()), !dbg !14299
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14300, !srcloc !14306
  call void @llvm.dbg.value(metadata i32 undef, metadata !14303, metadata !DIExpression()) #24, !dbg !14307
  call void @llvm.dbg.value(metadata i32 undef, metadata !14304, metadata !DIExpression()) #24, !dbg !14307
  br label %3, !dbg !14308

3:                                                ; preds = %3, %1
  br label %3, !dbg !14309, !llvm.loop !14312
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14319, metadata !DIExpression()), !dbg !14321
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14320, metadata !DIExpression()), !dbg !14321
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !14322
  unreachable, !dbg !14322
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !14323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14325, metadata !DIExpression()), !dbg !14326
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !14327
  unreachable, !dbg !14327
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14330, metadata !DIExpression()), !dbg !14334
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14331, metadata !DIExpression()), !dbg !14334
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14335, !srcloc !14306
  call void @llvm.dbg.value(metadata i32 undef, metadata !14303, metadata !DIExpression()) #24, !dbg !14337
  call void @llvm.dbg.value(metadata i32 undef, metadata !14304, metadata !DIExpression()) #24, !dbg !14337
  call void @llvm.dbg.value(metadata i32 undef, metadata !14332, metadata !DIExpression()), !dbg !14334
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14333, metadata !DIExpression()), !dbg !14334
  %4 = icmp eq %struct.__esf* %1, null, !dbg !14338
  br i1 %4, label %6, label %5, !dbg !14340

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !14341
  br label %7, !dbg !14342

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !14341
  br label %7, !dbg !14345

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !14335
  call void @llvm.dbg.value(metadata i32 %8, metadata !14303, metadata !DIExpression()) #24, !dbg !14337
  call void @llvm.dbg.value(metadata i32 %8, metadata !14332, metadata !DIExpression()), !dbg !14334
  %9 = tail call fastcc %struct.k_thread* @k_current_get.122() #27, !dbg !14347
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14333, metadata !DIExpression()), !dbg !14334
  call void @llvm.dbg.value(metadata i32 undef, metadata !14348, metadata !DIExpression()) #24, !dbg !14351
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !14353, !srcloc !14354
  tail call fastcc void @k_thread_abort.123(%struct.k_thread* noundef %9) #26, !dbg !14355
  ret void, !dbg !14358
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.122() unnamed_addr #9 !dbg !14359 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.124() #27, !dbg !14363
  ret %struct.k_thread* %1, !dbg !14364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.123(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14365 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14369, metadata !DIExpression()), !dbg !14370
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14371, !srcloc !14373
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !14374
  ret void, !dbg !14375
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.124() unnamed_addr #9 !dbg !14376 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14377, !srcloc !14379
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !14380
  ret %struct.k_thread* %1, !dbg !14381
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14382 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14386, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata i32 %1, metadata !14387, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata i32 %2, metadata !14388, metadata !DIExpression()), !dbg !14389
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !14390
  ret void, !dbg !14391
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14392 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14396, metadata !DIExpression()), !dbg !14399
  call void @llvm.dbg.value(metadata i8* %1, metadata !14397, metadata !DIExpression()), !dbg !14399
  call void @llvm.dbg.value(metadata i32 %2, metadata !14398, metadata !DIExpression()), !dbg !14399
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !14400
  ret void, !dbg !14401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14402 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !14403
  ret void, !dbg !14404
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14407, metadata !DIExpression()), !dbg !14408
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !14409
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14410
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14411
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14412
  %4 = trunc i32 %0 to i8, !dbg !14413
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14414
  store i8 %4, i8* %5, align 4, !dbg !14415
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14416
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !14417
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14418
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14419
  store i8* %8, i8** %9, align 4, !dbg !14420
  ret void, !dbg !14421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14424, metadata !DIExpression()), !dbg !14430
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14431
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14425, metadata !DIExpression()), !dbg !14430
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14432
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14426, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.value(metadata i8* null, metadata !14429, metadata !DIExpression()), !dbg !14430
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14433
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14434
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !14435
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !14436
  ret void, !dbg !14437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !14438 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14442, metadata !DIExpression()), !dbg !14443
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14444
  ret i8* %2, !dbg !14445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !14446 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14451, metadata !DIExpression()), !dbg !14452
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14453
  %3 = load i8, i8* %2, align 1, !dbg !14454
  %4 = and i8 %3, -5, !dbg !14454
  store i8 %4, i8* %2, align 1, !dbg !14454
  ret void, !dbg !14455
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14456 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !14459
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !14460
  %3 = ptrtoint i8* %2 to i32, !dbg !14469
  %4 = add i32 %3, 2048, !dbg !14470
  call void @llvm.dbg.value(metadata i32 %4, metadata !14464, metadata !DIExpression()) #24, !dbg !14471
  call void @llvm.dbg.value(metadata i32 %4, metadata !14472, metadata !DIExpression()) #24, !dbg !14475
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !14477, !srcloc !14478
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14479
  %6 = or i32 %5, 512, !dbg !14479
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14479
  tail call fastcc void @__NVIC_SetPriority.131(i32 noundef -2, i32 noundef 255) #25, !dbg !14480
  tail call fastcc void @__NVIC_SetPriority.131(i32 noundef -5, i32 noundef 0) #25, !dbg !14483
  tail call fastcc void @__NVIC_SetPriority.131(i32 noundef -12, i32 noundef 0) #25, !dbg !14484
  tail call fastcc void @__NVIC_SetPriority.131(i32 noundef -11, i32 noundef 0) #25, !dbg !14485
  tail call fastcc void @__NVIC_SetPriority.131(i32 noundef -10, i32 noundef 0) #25, !dbg !14486
  tail call fastcc void @__NVIC_SetPriority.131(i32 noundef -4, i32 noundef 0) #25, !dbg !14487
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14488
  %8 = or i32 %7, 458752, !dbg !14488
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14488
  tail call void @z_arm_fault_init() #25, !dbg !14489
  tail call void @z_arm_cpu_idle_init() #25, !dbg !14490
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14491
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14494
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !14495
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !14496
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14497
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !14497
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14458, metadata !DIExpression()), !dbg !14498
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !14499
  call void @z_device_state_init() #25, !dbg !14500
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !14501
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !14502
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !14503
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !14504
  unreachable, !dbg !14504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2293, metadata !DIExpression()), !dbg !14505
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14506
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14506
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2294, metadata !DIExpression()), !dbg !14505
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2294, metadata !DIExpression()), !dbg !14505
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14507
  br i1 %7, label %8, label %35, !dbg !14508

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2294, metadata !DIExpression()), !dbg !14505
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14509
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14509
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2304, metadata !DIExpression()), !dbg !14510
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14511
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14511
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !14512
  call void @llvm.dbg.value(metadata i32 %14, metadata !2308, metadata !DIExpression()), !dbg !14510
  %15 = icmp eq %struct.device* %11, null, !dbg !14513
  br i1 %15, label %32, label %16, !dbg !14515

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14516
  br i1 %17, label %26, label %18, !dbg !14519

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14520
  call void @llvm.dbg.value(metadata i32 %19, metadata !2308, metadata !DIExpression()), !dbg !14510
  %20 = icmp ult i32 %19, 255, !dbg !14522
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14522
  call void @llvm.dbg.value(metadata i32 %21, metadata !2308, metadata !DIExpression()), !dbg !14510
  %22 = trunc i32 %21 to i8, !dbg !14523
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14524
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14524
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14525
  store i8 %22, i8* %25, align 1, !dbg !14526
  br label %26, !dbg !14527

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14528
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14528
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14529
  %30 = load i8, i8* %29, align 1, !dbg !14530
  %31 = or i8 %30, 1, !dbg !14530
  store i8 %31, i8* %29, align 1, !dbg !14530
  br label %32, !dbg !14531

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14532
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2294, metadata !DIExpression()), !dbg !14505
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14507
  br i1 %34, label %8, label %35, !dbg !14508, !llvm.loop !14533

35:                                               ; preds = %32, %1
  ret void, !dbg !14535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.131(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !14536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14538, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata i32 %1, metadata !14539, metadata !DIExpression()), !dbg !14540
  %3 = trunc i32 %1 to i8, !dbg !14541
  %4 = shl i8 %3, 4, !dbg !14541
  %5 = and i32 %0, 15, !dbg !14544
  %6 = add nsw i32 %5, -4, !dbg !14545
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14546
  store volatile i8 %4, i8* %7, align 1, !dbg !14547
  ret void, !dbg !14548
}

; Function Attrs: optsize
declare !dbg !14549 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !14550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14553, metadata !DIExpression()), !dbg !14554
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14555
  store i8 1, i8* %2, align 1, !dbg !14556
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14557
  store i8 1, i8* %3, align 4, !dbg !14558
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14559
  store i32 0, i32* %4, align 4, !dbg !14560
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14561
  store i32 0, i32* %5, align 4, !dbg !14562
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14563
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14564
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14565
  ret void, !dbg !14566
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14567 {
  tail call void @z_sched_init() #25, !dbg !14572
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14573
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.132, i32 0, i32 0)) #25, !dbg !14574
  call void @llvm.dbg.value(metadata i8* %1, metadata !14571, metadata !DIExpression()), !dbg !14575
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !14576
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !14577
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !14578
  ret i8* %1, !dbg !14579
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14580 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14584, metadata !DIExpression()), !dbg !14585
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !14586
  unreachable, !dbg !14587
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14588 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14590, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i8* %1, metadata !14591, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i8* %2, metadata !14592, metadata !DIExpression()), !dbg !14593
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14594
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !14595
  tail call void @boot_banner() #25, !dbg !14596
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !14597
  tail call void @z_init_static_threads() #25, !dbg !14598
  tail call void @main() #25, !dbg !14599
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14600
  %5 = and i8 %4, -2, !dbg !14600
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14600
  ret void, !dbg !14601
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !14602 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14612, metadata !DIExpression()), !dbg !14614
  call void @llvm.dbg.value(metadata i8* %1, metadata !14613, metadata !DIExpression()), !dbg !14614
  ret void, !dbg !14615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !14616 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14618, metadata !DIExpression()), !dbg !14620
  call void @llvm.dbg.value(metadata i8* %1, metadata !14619, metadata !DIExpression()), !dbg !14620
  ret void, !dbg !14621
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14622 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14623, !srcloc !14630
  call void @llvm.dbg.value(metadata i32 %1, metadata !14626, metadata !DIExpression()) #24, !dbg !14631
  %2 = icmp ne i32 %1, 0, !dbg !14632
  ret i1 %2, !dbg !14633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !14634 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14635
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14636
  %3 = load i8, i8* %2, align 4, !dbg !14637
  %4 = or i8 %3, 1, !dbg !14637
  store i8 %4, i8* %2, align 4, !dbg !14637
  ret void, !dbg !14638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !14639 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14640
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14641
  %3 = load i8, i8* %2, align 4, !dbg !14642
  %4 = and i8 %3, -2, !dbg !14642
  store i8 %4, i8* %2, align 4, !dbg !14642
  ret void, !dbg !14643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !14644 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14645
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14646
  %3 = load i8, i8* %2, align 4, !dbg !14646
  %4 = and i8 %3, 1, !dbg !14647
  %5 = icmp ne i8 %4, 0, !dbg !14648
  ret i1 %5, !dbg !14649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !14650 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14654, metadata !DIExpression()), !dbg !14656
  call void @llvm.dbg.value(metadata i8* %1, metadata !14655, metadata !DIExpression()), !dbg !14656
  ret i32 -88, !dbg !14657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !14658 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14662, metadata !DIExpression()), !dbg !14663
  ret i8* null, !dbg !14664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !14665 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()), !dbg !14672
  call void @llvm.dbg.value(metadata i8* %1, metadata !14670, metadata !DIExpression()), !dbg !14672
  call void @llvm.dbg.value(metadata i32 %2, metadata !14671, metadata !DIExpression()), !dbg !14672
  ret i32 -88, !dbg !14673
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2317 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2431, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.value(metadata i8* %1, metadata !2432, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.value(metadata i32 %2, metadata !2433, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.value(metadata i32 0, metadata !2434, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.value(metadata i8 undef, metadata !2436, metadata !DIExpression()), !dbg !14674
  %4 = icmp eq i8* %1, null, !dbg !14675
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14677
  br i1 %6, label %46, label %7, !dbg !14677

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14678
  %9 = load i8, i8* %8, align 1, !dbg !14678
  call void @llvm.dbg.value(metadata i8 %9, metadata !2436, metadata !DIExpression()), !dbg !14674
  %10 = add i32 %2, -1, !dbg !14679
  call void @llvm.dbg.value(metadata i32 %10, metadata !2433, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.value(metadata i8 0, metadata !2437, metadata !DIExpression()), !dbg !14680
  call void @llvm.dbg.value(metadata i8 %9, metadata !2436, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.value(metadata i32 0, metadata !2434, metadata !DIExpression()), !dbg !14674
  %11 = icmp eq i8 %9, 0, !dbg !14681
  br i1 %11, label %12, label %15, !dbg !14683

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14684
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14685
  store i8 0, i8* %14, align 1, !dbg !14686
  br label %46, !dbg !14687

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2437, metadata !DIExpression()), !dbg !14680
  call void @llvm.dbg.value(metadata i8 %17, metadata !2436, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.value(metadata i32 %18, metadata !2434, metadata !DIExpression()), !dbg !14674
  %19 = zext i8 %17 to i32, !dbg !14688
  %20 = zext i8 %16 to i32, !dbg !14689
  %21 = shl nuw i32 1, %20, !dbg !14689
  call void @llvm.dbg.value(metadata i32 %21, metadata !2435, metadata !DIExpression()), !dbg !14674
  %22 = and i32 %21, %19, !dbg !14691
  %23 = icmp eq i32 %22, 0, !dbg !14693
  br i1 %23, label %42, label %24, !dbg !14694

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14695
  %26 = sub i32 %10, %18, !dbg !14696
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14697
  %28 = load i8*, i8** %27, align 4, !dbg !14697
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14698
  %30 = load i32, i32* %29, align 4, !dbg !14698
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !14699
  %32 = add i32 %31, %18, !dbg !14700
  call void @llvm.dbg.value(metadata i32 %32, metadata !2434, metadata !DIExpression()), !dbg !14674
  %33 = trunc i32 %21 to i8, !dbg !14701
  %34 = xor i8 %33, -1, !dbg !14701
  %35 = and i8 %17, %34, !dbg !14701
  call void @llvm.dbg.value(metadata i8 %35, metadata !2436, metadata !DIExpression()), !dbg !14674
  %36 = icmp eq i8 %35, 0, !dbg !14702
  br i1 %36, label %12, label %37, !dbg !14704

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14705
  %39 = sub i32 %10, %32, !dbg !14707
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !14708
  %41 = add i32 %40, %32, !dbg !14709
  call void @llvm.dbg.value(metadata i32 %41, metadata !2434, metadata !DIExpression()), !dbg !14674
  br label %42, !dbg !14710

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14674
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14674
  call void @llvm.dbg.value(metadata i8 %44, metadata !2436, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.value(metadata i32 %43, metadata !2434, metadata !DIExpression()), !dbg !14674
  %45 = add i8 %16, 1, !dbg !14711
  call void @llvm.dbg.value(metadata i8 %45, metadata !2437, metadata !DIExpression()), !dbg !14680
  br label %15, !dbg !14683

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.135, i32 0, i32 0), %3 ], !dbg !14674
  ret i8* %47, !dbg !14712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14713 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14717, metadata !DIExpression()), !dbg !14722
  call void @llvm.dbg.value(metadata i32 %1, metadata !14718, metadata !DIExpression()), !dbg !14722
  call void @llvm.dbg.value(metadata i8* %2, metadata !14719, metadata !DIExpression()), !dbg !14722
  call void @llvm.dbg.value(metadata i32 %3, metadata !14720, metadata !DIExpression()), !dbg !14722
  %5 = icmp ult i32 %1, %3, !dbg !14723
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14723
  call void @llvm.dbg.value(metadata i32 %6, metadata !14721, metadata !DIExpression()), !dbg !14722
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14724
  ret i32 %6, !dbg !14725
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14726 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14730, metadata !DIExpression()), !dbg !14731
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14732
  ret void, !dbg !14733
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14734 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14743, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14744, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i32 %2, metadata !14745, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14746, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i8* %4, metadata !14747, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i8* %5, metadata !14748, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i8* %6, metadata !14749, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i32 %7, metadata !14750, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i32 %8, metadata !14751, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i8* undef, metadata !14752, metadata !DIExpression()), !dbg !14754
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14755
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !14756
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14757
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14758
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14759
  call void @llvm.dbg.value(metadata i8* %13, metadata !14753, metadata !DIExpression()), !dbg !14754
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14760
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14761
  store i8* null, i8** %14, align 4, !dbg !14762
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14763
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14763
  br i1 %16, label %20, label %17, !dbg !14765

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14766
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14766
  br label %20, !dbg !14767

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14754
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14768
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14770
  ret i8* %13, !dbg !14771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !14772 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14777, metadata !DIExpression()), !dbg !14778
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14779
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14780
  ret void, !dbg !14781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !14782 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14787, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.value(metadata i32 %1, metadata !14788, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.value(metadata i32 %2, metadata !14789, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.value(metadata i32 %3, metadata !14790, metadata !DIExpression()), !dbg !14791
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14792
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14793
  %6 = trunc i32 %3 to i8, !dbg !14794
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14795
  store i8 %6, i8* %7, align 4, !dbg !14796
  %8 = trunc i32 %2 to i8, !dbg !14797
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14798
  store i8 %8, i8* %9, align 1, !dbg !14799
  %10 = trunc i32 %1 to i8, !dbg !14800
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14801
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14801
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14801
  store i8 %10, i8* %13, align 2, !dbg !14802
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14803
  store i8 0, i8* %14, align 1, !dbg !14804
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14805
  ret void, !dbg !14806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !14807 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14811, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14812, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.value(metadata i32 %2, metadata !14813, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.value(metadata i32 0, metadata !14818, metadata !DIExpression()), !dbg !14819
  %4 = add i32 %2, 7, !dbg !14820
  %5 = and i32 %4, -8, !dbg !14820
  %6 = add i32 %5, 64, !dbg !14820
  call void @llvm.dbg.value(metadata i32 %6, metadata !14814, metadata !DIExpression()), !dbg !14819
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.145(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14822
  call void @llvm.dbg.value(metadata i8* %7, metadata !14817, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.value(metadata i32 %5, metadata !14815, metadata !DIExpression()), !dbg !14819
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14823
  call void @llvm.dbg.value(metadata i8* %8, metadata !14816, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.value(metadata i32 0, metadata !14818, metadata !DIExpression()), !dbg !14819
  %9 = ptrtoint i8* %7 to i32, !dbg !14824
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14825
  store i32 %9, i32* %10, align 4, !dbg !14826
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14827
  store i32 %5, i32* %11, align 4, !dbg !14828
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14829
  store i32 0, i32* %12, align 4, !dbg !14830
  call void @llvm.dbg.value(metadata i8* %8, metadata !14816, metadata !DIExpression()), !dbg !14819
  ret i8* %8, !dbg !14831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.145(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !14832 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14836, metadata !DIExpression()), !dbg !14837
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14838
  ret i8* %2, !dbg !14839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14840 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14845, metadata !DIExpression()), !dbg !14846
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14847
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14848
  ret void, !dbg !14849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14850 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14852, metadata !DIExpression()), !dbg !14853
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14854
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14855
  ret void, !dbg !14856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14857 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14861, metadata !DIExpression()), !dbg !14862
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14863
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14864
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14865
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14866
  ret void, !dbg !14867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14868 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14873, metadata !DIExpression()), !dbg !14874
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14875
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14876
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14877
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14878
  ret void, !dbg !14879
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14880 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14897, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14888, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14889, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata i32 %2, metadata !14890, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14891, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata i8* %4, metadata !14892, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata i8* %5, metadata !14893, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata i8* %6, metadata !14894, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata i32 %7, metadata !14895, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata i32 %8, metadata !14896, metadata !DIExpression()), !dbg !14898
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14899
  %13 = icmp eq i64 %11, -1, !dbg !14900
  br i1 %13, label %15, label %14, !dbg !14902

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14903
  br label %15, !dbg !14905

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14906
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14907 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14912, metadata !DIExpression()), !dbg !14913
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14911, metadata !DIExpression()), !dbg !14913
  %4 = icmp eq i64 %3, 0, !dbg !14914
  br i1 %4, label %5, label %6, !dbg !14916

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14917
  br label %7, !dbg !14919

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14920
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14923 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14927, metadata !DIExpression()), !dbg !14928
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14929, !srcloc !14931
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14932
  ret void, !dbg !14933
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14934 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14937, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14936, metadata !DIExpression()), !dbg !14938
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14939
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14940
  ret void, !dbg !14941
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14942 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14944, metadata !DIExpression()), !dbg !14964
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14965

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14966
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14962, metadata !DIExpression()), !dbg !14967
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14968

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14944, metadata !DIExpression()), !dbg !14964
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14969
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14969
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14972
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14972
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14973
  %9 = load i32, i32* %8, align 4, !dbg !14973
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14974
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14974
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14975
  %13 = load i8*, i8** %12, align 4, !dbg !14975
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14976
  %15 = load i8*, i8** %14, align 4, !dbg !14976
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14977
  %17 = load i8*, i8** %16, align 4, !dbg !14977
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14978
  %19 = load i32, i32* %18, align 4, !dbg !14978
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14979
  %21 = load i32, i32* %20, align 4, !dbg !14979
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14980
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14981
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14982
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14983
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14983
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14984
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14944, metadata !DIExpression()), !dbg !14964
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14985
  br i1 %27, label %2, label %1, !dbg !14965, !llvm.loop !14987

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14966
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14962, metadata !DIExpression()), !dbg !14967
  br label %29, !dbg !14968

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14989
  ret void, !dbg !14990

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14962, metadata !DIExpression()), !dbg !14967
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14991
  %33 = load i32, i32* %32, align 4, !dbg !14991
  %34 = icmp eq i32 %33, -1, !dbg !14995
  br i1 %34, label %43, label %35, !dbg !14996

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14997
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14997
  %38 = icmp sgt i32 %33, 0, !dbg !14999
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14999
  %40 = zext i32 %39 to i64, !dbg !14999
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.148(i64 noundef %40) #26, !dbg !14999
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !15000
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !15000
  br label %43, !dbg !15001

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !15002
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14962, metadata !DIExpression()), !dbg !14967
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15003
  br i1 %45, label %30, label %29, !dbg !14968, !llvm.loop !15005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.148(i64 noundef %0) unnamed_addr #11 !dbg !15007 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15009, metadata !DIExpression()), !dbg !15010
  call void @llvm.dbg.value(metadata i64 %0, metadata !15011, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i32 1000, metadata !15014, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i32 10000, metadata !15015, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i8 1, metadata !15016, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i8 0, metadata !15017, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i8 1, metadata !15018, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i8 0, metadata !15019, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i8 1, metadata !15020, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i8 0, metadata !15021, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i64 0, metadata !15022, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i64 0, metadata !15022, metadata !DIExpression()), !dbg !15026
  %2 = mul i64 %0, 10, !dbg !15028
  ret i64 %2, !dbg !15034
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !15035 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15037, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.value(metadata i8* %1, metadata !15038, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.value(metadata i8* %2, metadata !15039, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.value(metadata i8* %3, metadata !15040, metadata !DIExpression()), !dbg !15041
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15042
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15043
  %7 = load i8, i8* %6, align 4, !dbg !15044
  %8 = or i8 %7, 4, !dbg !15044
  store i8 %8, i8* %6, align 4, !dbg !15044
  tail call void @z_thread_essential_clear() #26, !dbg !15045
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !15046
  unreachable, !dbg !15046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !15047 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15051, metadata !DIExpression()), !dbg !15052
  ret i32 -134, !dbg !15053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !15054 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15058, metadata !DIExpression()), !dbg !15060
  call void @llvm.dbg.value(metadata i32 %1, metadata !15059, metadata !DIExpression()), !dbg !15060
  ret i32 -134, !dbg !15061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !15062 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15069, metadata !DIExpression()), !dbg !15071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !15070, metadata !DIExpression()), !dbg !15071
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15072
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !15074
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15071
  ret i32 %6, !dbg !15075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !15076 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15080, metadata !DIExpression()), !dbg !15081
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !15082
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15081
  ret i32 %3, !dbg !15084
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15085 {
  tail call void @sys_clock_idle_exit() #25, !dbg !15087
  ret void, !dbg !15088
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !15089 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15091, metadata !DIExpression()), !dbg !15094
  call void @llvm.dbg.value(metadata i8* %1, metadata !15092, metadata !DIExpression()), !dbg !15094
  call void @llvm.dbg.value(metadata i8* %2, metadata !15093, metadata !DIExpression()), !dbg !15094
  br label %4, !dbg !15095

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15096, !srcloc !15103
  call void @llvm.dbg.value(metadata i32 undef, metadata !15099, metadata !DIExpression()) #24, !dbg !15104
  call void @llvm.dbg.value(metadata i32 undef, metadata !15100, metadata !DIExpression()) #24, !dbg !15104
  tail call fastcc void @k_cpu_idle() #26, !dbg !15105
  br label %4, !dbg !15095, !llvm.loop !15106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15108 {
  tail call void @arch_cpu_idle() #25, !dbg !15109
  ret void, !dbg !15110
}

; Function Attrs: optsize
declare !dbg !15111 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 !dbg !15112 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15127, metadata !DIExpression()), !dbg !15130
  call void @llvm.dbg.value(metadata i32 %1, metadata !15128, metadata !DIExpression()), !dbg !15130
  call void @llvm.dbg.value(metadata i32 %2, metadata !15129, metadata !DIExpression()), !dbg !15130
  %4 = icmp eq i32 %2, 0, !dbg !15131
  %5 = icmp ugt i32 %1, %2, !dbg !15131
  %6 = or i1 %4, %5, !dbg !15131
  br i1 %6, label %11, label %7, !dbg !15131

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15133
  store i32 %1, i32* %8, align 4, !dbg !15134
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15135
  store i32 %2, i32* %9, align 4, !dbg !15136
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15137
  tail call fastcc void @z_waitq_init.153(%union.anon* noundef %10) #26, !dbg !15138
  br label %11, !dbg !15139

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !15130
  ret i32 %12, !dbg !15140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.153(%union.anon* noundef %0) unnamed_addr #4 !dbg !15141 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15146, metadata !DIExpression()), !dbg !15147
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15148
  tail call fastcc void @sys_dlist_init.154(%struct._dnode* noundef %2) #26, !dbg !15149
  ret void, !dbg !15150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.154(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15151 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15156, metadata !DIExpression()), !dbg !15157
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15158
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15159
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15160
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15161
  ret void, !dbg !15162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15163 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15167, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15254, metadata !DIExpression()) #24, !dbg !15261
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15263, !srcloc !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !15266, metadata !DIExpression()) #24, !dbg !15270
  call void @llvm.dbg.value(metadata i32 undef, metadata !15267, metadata !DIExpression()) #24, !dbg !15270
  call void @llvm.dbg.value(metadata i32 undef, metadata !15260, metadata !DIExpression()) #24, !dbg !15261
  call void @llvm.dbg.value(metadata i32 undef, metadata !15168, metadata !DIExpression()), !dbg !15253
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15271
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !15272
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15173, metadata !DIExpression()), !dbg !15253
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15273
  br i1 %5, label %8, label %6, !dbg !15275

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15276, metadata !DIExpression()), !dbg !15282
  call void @llvm.dbg.value(metadata i32 0, metadata !15281, metadata !DIExpression()), !dbg !15282
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 7, i32 1, !dbg !15285
  store i32 0, i32* %7, align 4, !dbg !15286
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %4) #25, !dbg !15287
  br label %16, !dbg !15288

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15289
  %10 = load i32, i32* %9, align 4, !dbg !15289
  %11 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15291
  %12 = load i32, i32* %11, align 4, !dbg !15291
  %13 = icmp ne i32 %10, %12, !dbg !15292
  %14 = zext i1 %13 to i32, !dbg !15293
  %15 = add i32 %10, %14, !dbg !15294
  store i32 %15, i32* %9, align 4, !dbg !15294
  br label %16

16:                                               ; preds = %8, %6
  %17 = extractvalue { i32, i32 } %2, 0, !dbg !15263
  call void @llvm.dbg.value(metadata i32 %17, metadata !15266, metadata !DIExpression()) #24, !dbg !15270
  call void @llvm.dbg.value(metadata i32 %17, metadata !15260, metadata !DIExpression()) #24, !dbg !15261
  call void @llvm.dbg.value(metadata i32 %17, metadata !15168, metadata !DIExpression()), !dbg !15253
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !15295
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %18) #25, !dbg !15295
  ret void, !dbg !15296
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15297 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15306, metadata !DIExpression()), !dbg !15310
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15305, metadata !DIExpression()), !dbg !15310
  call void @llvm.dbg.value(metadata i32 0, metadata !15307, metadata !DIExpression()), !dbg !15310
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15254, metadata !DIExpression()) #24, !dbg !15311
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15313, !srcloc !15269
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15313
  call void @llvm.dbg.value(metadata i32 %4, metadata !15266, metadata !DIExpression()) #24, !dbg !15315
  call void @llvm.dbg.value(metadata i32 undef, metadata !15267, metadata !DIExpression()) #24, !dbg !15315
  call void @llvm.dbg.value(metadata i32 %4, metadata !15260, metadata !DIExpression()) #24, !dbg !15311
  call void @llvm.dbg.value(metadata i32 %4, metadata !15308, metadata !DIExpression()), !dbg !15310
  %5 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15316
  %6 = load i32, i32* %5, align 4, !dbg !15316
  %7 = icmp eq i32 %6, 0, !dbg !15316
  br i1 %7, label %10, label %8, !dbg !15318, !prof !15319

8:                                                ; preds = %2
  %9 = add i32 %6, -1, !dbg !15320
  store i32 %9, i32* %5, align 4, !dbg !15320
  call void @llvm.dbg.value(metadata i32 %4, metadata !15322, metadata !DIExpression()) #24, !dbg !15328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15327, metadata !DIExpression()) #24, !dbg !15328
  call void @llvm.dbg.value(metadata i32 %4, metadata !15330, metadata !DIExpression()) #24, !dbg !15333
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15335, !srcloc !15336
  call void @llvm.dbg.value(metadata i32 0, metadata !15307, metadata !DIExpression()), !dbg !15310
  br label %18, !dbg !15337

10:                                               ; preds = %2
  %11 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !15306, metadata !DIExpression()), !dbg !15310
  %12 = icmp eq i64 %11, 0, !dbg !15338
  br i1 %12, label %13, label %14, !dbg !15340

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %4, metadata !15322, metadata !DIExpression()) #24, !dbg !15341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15327, metadata !DIExpression()) #24, !dbg !15341
  call void @llvm.dbg.value(metadata i32 %4, metadata !15330, metadata !DIExpression()) #24, !dbg !15344
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15346, !srcloc !15336
  call void @llvm.dbg.value(metadata i32 -16, metadata !15307, metadata !DIExpression()), !dbg !15310
  br label %18, !dbg !15347

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15348
  %16 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !15349
  %17 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %16, %union.anon* noundef %15, [1 x i64] %1) #25, !dbg !15349
  call void @llvm.dbg.value(metadata i32 %17, metadata !15307, metadata !DIExpression()), !dbg !15310
  br label %18, !dbg !15350

18:                                               ; preds = %8, %13, %14
  %19 = phi i32 [ 0, %8 ], [ -16, %13 ], [ %17, %14 ], !dbg !15310
  call void @llvm.dbg.value(metadata i32 %19, metadata !15307, metadata !DIExpression()), !dbg !15310
  call void @llvm.dbg.label(metadata !15309), !dbg !15351
  ret i32 %19, !dbg !15352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15353 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15355, metadata !DIExpression()), !dbg !15358
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15254, metadata !DIExpression()) #24, !dbg !15359
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15361, !srcloc !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !15266, metadata !DIExpression()) #24, !dbg !15363
  call void @llvm.dbg.value(metadata i32 undef, metadata !15267, metadata !DIExpression()) #24, !dbg !15363
  call void @llvm.dbg.value(metadata i32 undef, metadata !15260, metadata !DIExpression()) #24, !dbg !15359
  call void @llvm.dbg.value(metadata i32 undef, metadata !15357, metadata !DIExpression()), !dbg !15358
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !15364
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15356, metadata !DIExpression()), !dbg !15358
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15366
  br i1 %5, label %11, label %6, !dbg !15368

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15276, metadata !DIExpression()), !dbg !15369
  call void @llvm.dbg.value(metadata i32 -11, metadata !15281, metadata !DIExpression()), !dbg !15369
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15371
  store i32 -11, i32* %8, align 4, !dbg !15372
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #25, !dbg !15373
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !15364
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15356, metadata !DIExpression()), !dbg !15358
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15366
  br i1 %10, label %11, label %6, !dbg !15368, !llvm.loop !15374

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !15361
  call void @llvm.dbg.value(metadata i32 %12, metadata !15266, metadata !DIExpression()) #24, !dbg !15363
  call void @llvm.dbg.value(metadata i32 %12, metadata !15260, metadata !DIExpression()) #24, !dbg !15359
  call void @llvm.dbg.value(metadata i32 %12, metadata !15357, metadata !DIExpression()), !dbg !15358
  %13 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15377
  store i32 0, i32* %13, align 4, !dbg !15378
  %14 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !15379
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %14) #25, !dbg !15379
  ret void, !dbg !15380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !15381 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15385, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15386, metadata !DIExpression()), !dbg !15389
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15390
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15390
  %5 = load i8, i8* %4, align 2, !dbg !15390
  call void @llvm.dbg.value(metadata i8 %5, metadata !15387, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15389
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15391
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15391
  %8 = load i8, i8* %7, align 2, !dbg !15391
  call void @llvm.dbg.value(metadata i8 %8, metadata !15388, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15389
  %9 = icmp eq i8 %8, %5, !dbg !15392
  %10 = sext i8 %5 to i32, !dbg !15394
  %11 = sext i8 %8 to i32, !dbg !15394
  %12 = sub nsw i32 %11, %10, !dbg !15394
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15394
  ret i32 %13, !dbg !15395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15396 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15400, metadata !DIExpression()), !dbg !15401
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !15402
  %3 = icmp eq i32 %2, 0, !dbg !15404
  br i1 %3, label %8, label %4, !dbg !15405

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !15406
  %6 = add i32 %5, %2, !dbg !15408
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15409
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !15410
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !15411
  br label %8, !dbg !15412

8:                                                ; preds = %4, %1
  ret void, !dbg !15413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !15414 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15418, metadata !DIExpression()), !dbg !15420
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15421
  call void @llvm.dbg.value(metadata i32 %1, metadata !15419, metadata !DIExpression()), !dbg !15420
  ret i32 %1, !dbg !15422
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15427, metadata !DIExpression()), !dbg !15436
  call void @llvm.dbg.value(metadata i32 %1, metadata !15428, metadata !DIExpression()), !dbg !15436
  call void @llvm.dbg.value(metadata i32 0, metadata !15429, metadata !DIExpression()), !dbg !15437
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !15445
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15447, !srcloc !15453
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15447
  call void @llvm.dbg.value(metadata i32 %4, metadata !15450, metadata !DIExpression()) #24, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !15454
  call void @llvm.dbg.value(metadata i32 %4, metadata !15444, metadata !DIExpression()) #24, !dbg !15445
  call void @llvm.dbg.value(metadata i32 %4, metadata !15435, metadata !DIExpression()), !dbg !15437
  call void @llvm.dbg.value(metadata i32 undef, metadata !15429, metadata !DIExpression()), !dbg !15437
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15455
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !15458
  %6 = icmp sgt i32 %0, 0, !dbg !15459
  %7 = icmp sgt i32 %5, 2, !dbg !15461
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15461
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15461
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15462
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15463
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15464
  call void @llvm.dbg.value(metadata i32 %4, metadata !15465, metadata !DIExpression()) #24, !dbg !15471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !15471
  call void @llvm.dbg.value(metadata i32 %4, metadata !15473, metadata !DIExpression()) #24, !dbg !15476
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15478, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 1, metadata !15429, metadata !DIExpression()), !dbg !15437
  call void @llvm.dbg.value(metadata i32 undef, metadata !15429, metadata !DIExpression()), !dbg !15437
  ret void, !dbg !15480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !15481 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15483, metadata !DIExpression()), !dbg !15484
  call void @llvm.dbg.value(metadata i32 %0, metadata !15485, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15500
  call void @llvm.dbg.value(metadata i32 1000, metadata !15488, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata i32 10000, metadata !15489, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata i8 1, metadata !15490, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata i1 true, metadata !15491, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15500
  call void @llvm.dbg.value(metadata i1 true, metadata !15492, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15500
  call void @llvm.dbg.value(metadata i8 0, metadata !15493, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata i1 true, metadata !15494, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15500
  call void @llvm.dbg.value(metadata i1 false, metadata !15495, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15500
  call void @llvm.dbg.value(metadata i64 0, metadata !15496, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata i64 0, metadata !15496, metadata !DIExpression()), !dbg !15500
  %2 = mul i32 %0, 10, !dbg !15502
  ret i32 %2, !dbg !15508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15511, metadata !DIExpression()), !dbg !15513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !15514
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15516, !srcloc !15453
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15516
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #24, !dbg !15518
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !15518
  call void @llvm.dbg.value(metadata i32 %3, metadata !15444, metadata !DIExpression()) #24, !dbg !15514
  call void @llvm.dbg.value(metadata i32 %3, metadata !15512, metadata !DIExpression()), !dbg !15513
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15519
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15521
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15522
  br i1 %6, label %7, label %8, !dbg !15523

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15524
  call void @llvm.dbg.value(metadata i32 %3, metadata !15465, metadata !DIExpression()) #24, !dbg !15526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !15526
  call void @llvm.dbg.value(metadata i32 %3, metadata !15473, metadata !DIExpression()) #24, !dbg !15528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15530, !srcloc !15479
  br label %24, !dbg !15531

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15532
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !15533
  %10 = icmp eq i32 %9, 0, !dbg !15533
  br i1 %10, label %21, label %11, !dbg !15535

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !15536
  br i1 %12, label %13, label %21, !dbg !15537

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15538
  %15 = icmp sgt i32 %14, %0, !dbg !15541
  br i1 %15, label %19, label %16, !dbg !15542

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15543
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !15543
  call void @llvm.dbg.value(metadata i32 %18, metadata !15512, metadata !DIExpression()), !dbg !15513
  br label %22, !dbg !15545

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15546
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15546
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15548
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15513
  call void @llvm.dbg.value(metadata i32 %23, metadata !15512, metadata !DIExpression()), !dbg !15513
  call void @llvm.dbg.value(metadata i32 %23, metadata !15465, metadata !DIExpression()) #24, !dbg !15550
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !15550
  call void @llvm.dbg.value(metadata i32 %23, metadata !15473, metadata !DIExpression()) #24, !dbg !15552
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !15554, !srcloc !15479
  br label %24, !dbg !15555

24:                                               ; preds = %22, %7
  ret void, !dbg !15555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !15556 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15560, metadata !DIExpression()), !dbg !15562
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !15563
  %3 = icmp eq i32 %2, 0, !dbg !15563
  br i1 %3, label %16, label %4, !dbg !15564

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15565
  br i1 %5, label %16, label %6, !dbg !15566

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15567
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15567
  %9 = load i8, i8* %8, align 2, !dbg !15567
  %10 = sext i8 %9 to i32, !dbg !15568
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15569
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !15570
  br i1 %12, label %16, label %13, !dbg !15571

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !15572
  %15 = xor i1 %14, true, !dbg !15573
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15562
  call void @llvm.dbg.value(metadata i1 %17, metadata !15561, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15562
  ret i1 %17, !dbg !15574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15575 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15579, metadata !DIExpression()), !dbg !15581
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15582
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15580, metadata !DIExpression()), !dbg !15581
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !15583
  br i1 %3, label %5, label %4, !dbg !15585

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !15586
  br label %5, !dbg !15588

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15579, metadata !DIExpression()), !dbg !15581
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15589
  ret i32 %6, !dbg !15590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15591 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15593, metadata !DIExpression()), !dbg !15595
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15596
  %3 = load i8, i8* %2, align 1, !dbg !15596
  call void @llvm.dbg.value(metadata i8 %3, metadata !15594, metadata !DIExpression()), !dbg !15595
  %4 = and i8 %3, 31, !dbg !15597
  %5 = icmp ne i8 %4, 0, !dbg !15598
  ret i1 %5, !dbg !15599
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15600 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15602, metadata !DIExpression()), !dbg !15603
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15604
  br i1 %2, label %3, label %7, !dbg !15606

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15607, metadata !DIExpression()) #24, !dbg !15610
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15613
  %5 = load i8, i8* %4, align 1, !dbg !15614
  %6 = and i8 %5, 127, !dbg !15614
  store i8 %6, i8* %4, align 1, !dbg !15614
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15615, metadata !DIExpression()) #24, !dbg !15618
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15622
  br label %7, !dbg !15623

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15624, metadata !DIExpression()) #24, !dbg !15627
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15629
  %9 = load i8, i8* %8, align 1, !dbg !15630
  %10 = or i8 %9, -128, !dbg !15630
  store i8 %10, i8* %8, align 1, !dbg !15630
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15631, metadata !DIExpression()) #24, !dbg !15634
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15638, metadata !DIExpression()) #24, !dbg !15646
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15644, metadata !DIExpression()) #24, !dbg !15646
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15648
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15645, metadata !DIExpression()) #24, !dbg !15646
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15650
  br i1 %12, label %23, label %13, !dbg !15648

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15645, metadata !DIExpression()) #24, !dbg !15646
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15652
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15645, metadata !DIExpression()) #24, !dbg !15646
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !15653
  %17 = icmp sgt i32 %16, 0, !dbg !15656
  br i1 %17, label %18, label %20, !dbg !15657

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15658
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !15660
  br label %25, !dbg !15661

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !15650
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15645, metadata !DIExpression()) #24, !dbg !15646
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15650
  br i1 %22, label %23, label %13, !dbg !15648, !llvm.loop !15662

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15664
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !15665
  br label %25, !dbg !15666

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15667
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15668
  %28 = zext i1 %27 to i32, !dbg !15668
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !15669
  ret void, !dbg !15670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15671 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15673, metadata !DIExpression()), !dbg !15674
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !15675
  ret i1 %2, !dbg !15676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !15677 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15679, metadata !DIExpression()), !dbg !15681
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15680, metadata !DIExpression()), !dbg !15681
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15682
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15683
  ret void, !dbg !15684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !15685 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15689, metadata !DIExpression()), !dbg !15690
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !15691
  br i1 %2, label %6, label %3, !dbg !15691

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15692
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15692
  br label %6, !dbg !15691

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15691
  ret %struct._dnode* %7, !dbg !15693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15694 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15698, metadata !DIExpression()), !dbg !15702
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15699, metadata !DIExpression()), !dbg !15702
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15703
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15703
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15700, metadata !DIExpression()), !dbg !15702
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15704
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15705
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15706
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15707
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15708
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15709
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15710
  ret void, !dbg !15711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15712 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15716, metadata !DIExpression()), !dbg !15718
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15717, metadata !DIExpression()), !dbg !15718
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15719
  br i1 %3, label %6, label %4, !dbg !15720

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15721
  br label %6, !dbg !15720

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15720
  ret %struct._dnode* %7, !dbg !15722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15723 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15727, metadata !DIExpression()), !dbg !15730
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15728, metadata !DIExpression()), !dbg !15730
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15731
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15731
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15729, metadata !DIExpression()), !dbg !15730
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15732
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15733
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15734
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15735
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15736
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15737
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15738
  ret void, !dbg !15739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15742, metadata !DIExpression()), !dbg !15744
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15745
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15752, metadata !DIExpression()) #24, !dbg !15754
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15755
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15756
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15756
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15743, metadata !DIExpression()), !dbg !15744
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15757, metadata !DIExpression()) #24, !dbg !15763
  call void @llvm.dbg.value(metadata i32 %0, metadata !15762, metadata !DIExpression()) #24, !dbg !15763
  %6 = icmp eq i32 %0, 0, !dbg !15766
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15768
  br i1 %6, label %8, label %15, !dbg !15769

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15770
  br i1 %9, label %15, label %10, !dbg !15772

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15773
  br i1 %11, label %15, label %12, !dbg !15775

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15776
  %14 = icmp eq i32 %13, 0, !dbg !15776
  br i1 %14, label %18, label %15, !dbg !15778

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15779
  br i1 %16, label %18, label %17, !dbg !15782

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15783
  br label %18, !dbg !15785

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15768
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15768
  ret void, !dbg !15786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !15787 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15791, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15792, metadata !DIExpression()), !dbg !15794
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !15795
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15793, metadata !DIExpression()), !dbg !15794
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15792, metadata !DIExpression()), !dbg !15794
  ret %struct.k_thread* %3, !dbg !15796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15797 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15799, metadata !DIExpression()), !dbg !15800
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15801
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15802
  %4 = xor i1 %3, true, !dbg !15803
  ret i1 %4, !dbg !15804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15805 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15807, metadata !DIExpression()), !dbg !15808
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15809
  %3 = load i16, i16* %2, align 2, !dbg !15809
  %4 = icmp ult i16 %3, 128, !dbg !15810
  %5 = zext i1 %4 to i32, !dbg !15810
  ret i32 %5, !dbg !15811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15812 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15818, metadata !DIExpression()), !dbg !15819
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15820
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15821
  %4 = xor i1 %3, true, !dbg !15822
  ret i1 %4, !dbg !15823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15824 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15830, metadata !DIExpression()), !dbg !15831
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15832
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15832
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15833
  ret i1 %4, !dbg !15834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15835 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15837, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15838, metadata !DIExpression()), !dbg !15839
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15840
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15840
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15841
  br i1 %5, label %9, label %6, !dbg !15842

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15843
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15843
  br label %9, !dbg !15842

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15842
  ret %struct._dnode* %10, !dbg !15844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15845 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15849, metadata !DIExpression()), !dbg !15850
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15851
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15851
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15852
  ret i1 %4, !dbg !15853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !15854 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15858, metadata !DIExpression()), !dbg !15861
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15862
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15862
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15859, metadata !DIExpression()), !dbg !15861
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15863
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15863
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15860, metadata !DIExpression()), !dbg !15861
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15864
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15865
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15866
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15867
  tail call fastcc void @sys_dnode_init.159(%struct._dnode* noundef %0) #26, !dbg !15868
  ret void, !dbg !15869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.159(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15870 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15872, metadata !DIExpression()), !dbg !15873
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15874
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15875
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15876
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15877
  ret void, !dbg !15878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15879 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15883, metadata !DIExpression()), !dbg !15885
  call void @llvm.dbg.value(metadata i32 128, metadata !15884, metadata !DIExpression()), !dbg !15885
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15886
  %3 = load i8, i8* %2, align 1, !dbg !15886
  %4 = icmp slt i8 %3, 0, !dbg !15887
  ret i1 %4, !dbg !15888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15893, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata i32 %1, metadata !15894, metadata !DIExpression()), !dbg !15895
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15896
  ret i1 %3, !dbg !15897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !15898 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15900, metadata !DIExpression()), !dbg !15901
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15902
  ret i1 %2, !dbg !15903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15906, metadata !DIExpression()), !dbg !15908
  call void @llvm.dbg.value(metadata i32 %1, metadata !15907, metadata !DIExpression()), !dbg !15908
  %3 = icmp slt i32 %0, %1, !dbg !15909
  ret i1 %3, !dbg !15910
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15911 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15913, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i32 0, metadata !15914, metadata !DIExpression()), !dbg !15918
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !15919
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15921, !srcloc !15453
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15921
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #24, !dbg !15923
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !15923
  call void @llvm.dbg.value(metadata i32 %3, metadata !15444, metadata !DIExpression()) #24, !dbg !15919
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()), !dbg !15918
  call void @llvm.dbg.value(metadata i32 undef, metadata !15914, metadata !DIExpression()), !dbg !15918
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15924
  call void @llvm.dbg.value(metadata i32 %3, metadata !15465, metadata !DIExpression()) #24, !dbg !15929
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !15929
  call void @llvm.dbg.value(metadata i32 %3, metadata !15473, metadata !DIExpression()) #24, !dbg !15931
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15933, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 1, metadata !15914, metadata !DIExpression()), !dbg !15918
  call void @llvm.dbg.value(metadata i32 undef, metadata !15914, metadata !DIExpression()), !dbg !15918
  ret void, !dbg !15934
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15935 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15937, metadata !DIExpression()), !dbg !15938
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15939
  br i1 %2, label %24, label %3, !dbg !15941

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15942
  br i1 %4, label %5, label %24, !dbg !15943

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15624, metadata !DIExpression()) #24, !dbg !15944
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15947
  %7 = load i8, i8* %6, align 1, !dbg !15948
  %8 = or i8 %7, -128, !dbg !15948
  store i8 %8, i8* %6, align 1, !dbg !15948
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15631, metadata !DIExpression()) #24, !dbg !15949
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15638, metadata !DIExpression()) #24, !dbg !15951
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15644, metadata !DIExpression()) #24, !dbg !15951
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15953
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15645, metadata !DIExpression()) #24, !dbg !15951
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15954
  br i1 %10, label %21, label %11, !dbg !15953

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15645, metadata !DIExpression()) #24, !dbg !15951
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15955
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15645, metadata !DIExpression()) #24, !dbg !15951
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15956
  %15 = icmp sgt i32 %14, 0, !dbg !15957
  br i1 %15, label %16, label %18, !dbg !15958

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15959
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15960
  br label %23, !dbg !15961

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15954
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15645, metadata !DIExpression()) #24, !dbg !15951
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15954
  br i1 %20, label %21, label %11, !dbg !15953, !llvm.loop !15962

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15964
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15965
  br label %23, !dbg !15966

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15967
  br label %24, !dbg !15968

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15970 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15972, metadata !DIExpression()), !dbg !15973
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15974
  br i1 %2, label %6, label %3, !dbg !15975

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15976
  %5 = xor i1 %4, true, !dbg !15975
  br label %6, !dbg !15975

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15977
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15978 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15980, metadata !DIExpression()), !dbg !15984
  call void @llvm.dbg.value(metadata i32 0, metadata !15981, metadata !DIExpression()), !dbg !15985
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !15986
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15988, !srcloc !15453
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15988
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #24, !dbg !15990
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !15990
  call void @llvm.dbg.value(metadata i32 %3, metadata !15444, metadata !DIExpression()) #24, !dbg !15986
  call void @llvm.dbg.value(metadata i32 %3, metadata !15983, metadata !DIExpression()), !dbg !15985
  call void @llvm.dbg.value(metadata i32 undef, metadata !15981, metadata !DIExpression()), !dbg !15985
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15991
  call void @llvm.dbg.value(metadata i32 %3, metadata !15465, metadata !DIExpression()) #24, !dbg !15994
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !15994
  call void @llvm.dbg.value(metadata i32 %3, metadata !15473, metadata !DIExpression()) #24, !dbg !15996
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15998, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 1, metadata !15981, metadata !DIExpression()), !dbg !15985
  call void @llvm.dbg.value(metadata i32 undef, metadata !15981, metadata !DIExpression()), !dbg !15985
  ret void, !dbg !15999
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16000 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16002, metadata !DIExpression()), !dbg !16004
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16005
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16007, !srcloc !15453
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16007
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #24, !dbg !16009
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16009
  call void @llvm.dbg.value(metadata i32 %3, metadata !15444, metadata !DIExpression()) #24, !dbg !16005
  call void @llvm.dbg.value(metadata i32 %3, metadata !16003, metadata !DIExpression()), !dbg !16004
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !16010
  br i1 %4, label %5, label %6, !dbg !16012

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15465, metadata !DIExpression()) #24, !dbg !16013
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16013
  call void @llvm.dbg.value(metadata i32 %3, metadata !15473, metadata !DIExpression()) #24, !dbg !16016
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16018, !srcloc !15479
  br label %8, !dbg !16019

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.164(%struct.k_thread* noundef %0) #26, !dbg !16020
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16021
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16022
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16022
  br label %8, !dbg !16023

8:                                                ; preds = %6, %5
  ret void, !dbg !16023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16024 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16026, metadata !DIExpression()), !dbg !16027
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16028
  %3 = load i8, i8* %2, align 1, !dbg !16028
  %4 = and i8 %3, 4, !dbg !16029
  %5 = icmp eq i8 %4, 0, !dbg !16030
  ret i1 %5, !dbg !16031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.164(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !16032 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16034, metadata !DIExpression()), !dbg !16035
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16036
  %3 = load i8, i8* %2, align 1, !dbg !16037
  %4 = and i8 %3, -5, !dbg !16037
  store i8 %4, i8* %2, align 1, !dbg !16037
  ret void, !dbg !16038
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16039 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16042, metadata !DIExpression()), !dbg !16043
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16041, metadata !DIExpression()), !dbg !16043
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !16044
  br i1 %4, label %5, label %9, !dbg !16046

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16047
  br i1 %6, label %7, label %9, !dbg !16048

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16049, metadata !DIExpression()) #24, !dbg !16055
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16054, metadata !DIExpression()) #24, !dbg !16055
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16058
  br label %10, !dbg !16059

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15465, metadata !DIExpression()) #24, !dbg !16060
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16060
  call void @llvm.dbg.value(metadata i32 %3, metadata !15473, metadata !DIExpression()) #24, !dbg !16063
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16065, !srcloc !15479
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16071, metadata !DIExpression()), !dbg !16072
  call void @llvm.dbg.value(metadata i32 %0, metadata !16073, metadata !DIExpression()), !dbg !16078
  %2 = icmp eq i32 %0, 0, !dbg !16080
  br i1 %2, label %3, label %6, !dbg !16081

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16082, !srcloc !16089
  call void @llvm.dbg.value(metadata i32 %4, metadata !16085, metadata !DIExpression()) #24, !dbg !16090
  %5 = icmp eq i32 %4, 0, !dbg !16091
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16072
  ret i1 %7, !dbg !16092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !16093 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16096
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16095, metadata !DIExpression()), !dbg !16097
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16098
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16099
  ret i1 %3, !dbg !16100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16103, metadata !DIExpression()), !dbg !16105
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !16106
  call void @llvm.dbg.value(metadata i32 %2, metadata !16104, metadata !DIExpression()), !dbg !16105
  ret i32 %2, !dbg !16107
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16108 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16110, metadata !DIExpression()), !dbg !16114
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16115
  call void @llvm.dbg.value(metadata i32 0, metadata !16111, metadata !DIExpression()), !dbg !16116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16117
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16119, !srcloc !15453
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16119
  call void @llvm.dbg.value(metadata i32 %4, metadata !15450, metadata !DIExpression()) #24, !dbg !16121
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16121
  call void @llvm.dbg.value(metadata i32 %4, metadata !15444, metadata !DIExpression()) #24, !dbg !16117
  call void @llvm.dbg.value(metadata i32 %4, metadata !16113, metadata !DIExpression()), !dbg !16116
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()), !dbg !16116
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16122
  br i1 %5, label %6, label %10, !dbg !16126

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15607, metadata !DIExpression()) #24, !dbg !16127
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16130
  %8 = load i8, i8* %7, align 1, !dbg !16131
  %9 = and i8 %8, 127, !dbg !16131
  store i8 %9, i8* %7, align 1, !dbg !16131
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15615, metadata !DIExpression()) #24, !dbg !16132
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16134
  br label %10, !dbg !16135

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16136
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16137
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16138
  %13 = zext i1 %12 to i32, !dbg !16138
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16139
  call void @llvm.dbg.value(metadata i32 %4, metadata !15465, metadata !DIExpression()) #24, !dbg !16140
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16140
  call void @llvm.dbg.value(metadata i32 %4, metadata !15473, metadata !DIExpression()) #24, !dbg !16142
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !16144, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 1, metadata !16111, metadata !DIExpression()), !dbg !16116
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()), !dbg !16116
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16145
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16147
  br i1 %15, label %16, label %17, !dbg !16148

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16149
  br label %17, !dbg !16151

17:                                               ; preds = %16, %10
  ret void, !dbg !16152
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16153 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16155, metadata !DIExpression()), !dbg !16156
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16157
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !16158
  ret i32 %3, !dbg !16159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !16160 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16162, metadata !DIExpression()), !dbg !16163
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16164
  %3 = load i8, i8* %2, align 1, !dbg !16165
  %4 = or i8 %3, 16, !dbg !16165
  store i8 %4, i8* %2, align 1, !dbg !16165
  ret void, !dbg !16166
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16167 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16168, !srcloc !15453
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16168
  call void @llvm.dbg.value(metadata i32 %2, metadata !15450, metadata !DIExpression()) #24, !dbg !16170
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16170
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16171
  ret void, !dbg !16172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16175, metadata !DIExpression()), !dbg !16176
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16177
  br i1 %2, label %3, label %5, !dbg !16179

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16180
  br label %6, !dbg !16182

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15473, metadata !DIExpression()) #24, !dbg !16183
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !16186, !srcloc !15479
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16187
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16188 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16190, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16193
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16195, !srcloc !15453
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16195
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #24, !dbg !16197
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16197
  call void @llvm.dbg.value(metadata i32 %3, metadata !15444, metadata !DIExpression()) #24, !dbg !16193
  call void @llvm.dbg.value(metadata i32 %3, metadata !16191, metadata !DIExpression()), !dbg !16192
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16198
  br i1 %4, label %6, label %5, !dbg !16200

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15465, metadata !DIExpression()) #24, !dbg !16201
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16201
  call void @llvm.dbg.value(metadata i32 %3, metadata !15473, metadata !DIExpression()) #24, !dbg !16204
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16206, !srcloc !15479
  br label %8, !dbg !16207

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16208
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16209
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16210
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16210
  br label %8, !dbg !16211

8:                                                ; preds = %6, %5
  ret void, !dbg !16211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16212 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16214, metadata !DIExpression()), !dbg !16215
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16216
  %3 = load i8, i8* %2, align 1, !dbg !16216
  %4 = and i8 %3, 16, !dbg !16217
  %5 = icmp ne i8 %4, 0, !dbg !16218
  ret i1 %5, !dbg !16219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !16220 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16222, metadata !DIExpression()), !dbg !16223
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16224
  %3 = load i8, i8* %2, align 1, !dbg !16225
  %4 = and i8 %3, -17, !dbg !16225
  store i8 %4, i8* %2, align 1, !dbg !16225
  ret void, !dbg !16226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16227 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16237, metadata !DIExpression()), !dbg !16241
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16235, metadata !DIExpression()), !dbg !16241
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16236, metadata !DIExpression()), !dbg !16241
  call void @llvm.dbg.value(metadata i32 0, metadata !16238, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16243
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16245, !srcloc !15453
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16245
  call void @llvm.dbg.value(metadata i32 %5, metadata !15450, metadata !DIExpression()) #24, !dbg !16247
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16247
  call void @llvm.dbg.value(metadata i32 %5, metadata !15444, metadata !DIExpression()) #24, !dbg !16243
  call void @llvm.dbg.value(metadata i32 %5, metadata !16240, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata i32 undef, metadata !16238, metadata !DIExpression()), !dbg !16242
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16248
  call void @llvm.dbg.value(metadata i32 %5, metadata !15465, metadata !DIExpression()) #24, !dbg !16251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16251
  call void @llvm.dbg.value(metadata i32 %5, metadata !15473, metadata !DIExpression()) #24, !dbg !16253
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !16255, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 1, metadata !16238, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata i32 undef, metadata !16238, metadata !DIExpression()), !dbg !16242
  ret void, !dbg !16256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16257 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16261, metadata !DIExpression()), !dbg !16262
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16259, metadata !DIExpression()), !dbg !16262
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16260, metadata !DIExpression()), !dbg !16262
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !16263
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16264
  ret void, !dbg !16265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16266 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16270, metadata !DIExpression()), !dbg !16272
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16271, metadata !DIExpression()), !dbg !16272
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16273
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16274
  %3 = icmp eq %union.anon* %1, null, !dbg !16275
  br i1 %3, label %21, label %4, !dbg !16277

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16278
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16280
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16281
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15638, metadata !DIExpression()) #24, !dbg !16282
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15644, metadata !DIExpression()) #24, !dbg !16282
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !16284
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15645, metadata !DIExpression()) #24, !dbg !16282
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16285
  br i1 %8, label %19, label %9, !dbg !16284

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15645, metadata !DIExpression()) #24, !dbg !16282
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16286
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15645, metadata !DIExpression()) #24, !dbg !16282
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !16287
  %13 = icmp sgt i32 %12, 0, !dbg !16288
  br i1 %13, label %14, label %16, !dbg !16289

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16290
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !16291
  br label %21, !dbg !16292

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !16285
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15645, metadata !DIExpression()) #24, !dbg !16282
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16285
  br i1 %18, label %19, label %9, !dbg !16284, !llvm.loop !16293

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16295
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !16296
  br label %21, !dbg !16297

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16299 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16304, metadata !DIExpression()), !dbg !16305
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16303, metadata !DIExpression()), !dbg !16305
  %4 = icmp eq i64 %3, -1, !dbg !16306
  br i1 %4, label %6, label %5, !dbg !16308

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.167(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16309
  br label %6, !dbg !16311

6:                                                ; preds = %5, %2
  ret void, !dbg !16312
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.167(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16313 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16316, metadata !DIExpression()), !dbg !16317
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16315, metadata !DIExpression()), !dbg !16317
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16318
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !16319
  ret void, !dbg !16320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16321 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16323, metadata !DIExpression()), !dbg !16331
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16332
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16332
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16324, metadata !DIExpression()), !dbg !16331
  call void @llvm.dbg.value(metadata i32 0, metadata !16325, metadata !DIExpression()), !dbg !16333
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16334
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16336, !srcloc !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #24, !dbg !16338
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16338
  call void @llvm.dbg.value(metadata i32 undef, metadata !15444, metadata !DIExpression()) #24, !dbg !16334
  call void @llvm.dbg.value(metadata i32 undef, metadata !16327, metadata !DIExpression()), !dbg !16333
  call void @llvm.dbg.value(metadata i32 undef, metadata !16325, metadata !DIExpression()), !dbg !16333
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16339
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16340
  %7 = load i8, i8* %6, align 1, !dbg !16340
  %8 = and i8 %7, 40, !dbg !16341
  %9 = icmp eq i8 %8, 0, !dbg !16341
  call void @llvm.dbg.value(metadata i1 %9, metadata !16328, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16342
  br i1 %9, label %10, label %17, !dbg !16343

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16344
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !16344
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !16344
  %14 = icmp eq %union.anon* %13, null, !dbg !16348
  br i1 %14, label %16, label %15, !dbg !16349

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16350
  br label %16, !dbg !16352

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.164(%struct.k_thread* noundef nonnull %3) #26, !dbg !16353
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !16354
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !16355
  br label %17, !dbg !16356

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16336
  call void @llvm.dbg.value(metadata i32 %18, metadata !15450, metadata !DIExpression()) #24, !dbg !16338
  call void @llvm.dbg.value(metadata i32 %18, metadata !15444, metadata !DIExpression()) #24, !dbg !16334
  call void @llvm.dbg.value(metadata i32 %18, metadata !16327, metadata !DIExpression()), !dbg !16333
  call void @llvm.dbg.value(metadata i32 undef, metadata !15465, metadata !DIExpression()) #24, !dbg !16357
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16357
  call void @llvm.dbg.value(metadata i32 undef, metadata !15473, metadata !DIExpression()) #24, !dbg !16359
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !16361, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 1, metadata !16325, metadata !DIExpression()), !dbg !16333
  call void @llvm.dbg.value(metadata i32 undef, metadata !16325, metadata !DIExpression()), !dbg !16333
  ret void, !dbg !16362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !16363 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16365, metadata !DIExpression()), !dbg !16366
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16367
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !16368
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16369
  store %union.anon* null, %union.anon** %2, align 8, !dbg !16370
  ret void, !dbg !16371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !16372 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16374, metadata !DIExpression()), !dbg !16375
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16376
  %3 = load i8, i8* %2, align 1, !dbg !16377
  %4 = and i8 %3, -3, !dbg !16377
  store i8 %4, i8* %2, align 1, !dbg !16377
  ret void, !dbg !16378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16379 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16381, metadata !DIExpression()), !dbg !16382
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16383
  br i1 %2, label %3, label %7, !dbg !16385

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15607, metadata !DIExpression()) #24, !dbg !16386
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16389
  %5 = load i8, i8* %4, align 1, !dbg !16390
  %6 = and i8 %5, 127, !dbg !16390
  store i8 %6, i8* %4, align 1, !dbg !16390
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15615, metadata !DIExpression()) #24, !dbg !16391
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16393
  br label %7, !dbg !16394

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16395
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16396
  %10 = zext i1 %9 to i32, !dbg !16396
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !16397
  ret void, !dbg !16398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !16399 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16401, metadata !DIExpression()), !dbg !16402
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16403
  %3 = load i8, i8* %2, align 1, !dbg !16404
  %4 = or i8 %3, 2, !dbg !16404
  store i8 %4, i8* %2, align 1, !dbg !16404
  ret void, !dbg !16405
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !16406 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16408, metadata !DIExpression()), !dbg !16412
  call void @llvm.dbg.value(metadata i32 0, metadata !16409, metadata !DIExpression()), !dbg !16413
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16414
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16416, !srcloc !15453
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16416
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #24, !dbg !16418
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16418
  call void @llvm.dbg.value(metadata i32 %3, metadata !15444, metadata !DIExpression()) #24, !dbg !16414
  call void @llvm.dbg.value(metadata i32 %3, metadata !16411, metadata !DIExpression()), !dbg !16413
  call void @llvm.dbg.value(metadata i32 undef, metadata !16409, metadata !DIExpression()), !dbg !16413
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16419
  call void @llvm.dbg.value(metadata i32 %3, metadata !15465, metadata !DIExpression()) #24, !dbg !16422
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16422
  call void @llvm.dbg.value(metadata i32 %3, metadata !15473, metadata !DIExpression()) #24, !dbg !16424
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16426, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 1, metadata !16409, metadata !DIExpression()), !dbg !16413
  call void @llvm.dbg.value(metadata i32 undef, metadata !16409, metadata !DIExpression()), !dbg !16413
  ret void, !dbg !16427
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16428 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16434, metadata !DIExpression()), !dbg !16439
  call void @llvm.dbg.value(metadata i32 %0, metadata !16432, metadata !DIExpression()), !dbg !16439
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16433, metadata !DIExpression()), !dbg !16439
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16440
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16441
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16442
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16443
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16444
  call void @llvm.dbg.value(metadata i32 %6, metadata !16435, metadata !DIExpression()), !dbg !16439
  call void @llvm.dbg.value(metadata i32 0, metadata !16436, metadata !DIExpression()), !dbg !16445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16446
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16448, !srcloc !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #24, !dbg !16450
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16450
  call void @llvm.dbg.value(metadata i32 undef, metadata !15444, metadata !DIExpression()) #24, !dbg !16446
  call void @llvm.dbg.value(metadata i32 undef, metadata !16438, metadata !DIExpression()), !dbg !16445
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()), !dbg !16445
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16451
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16455
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16456
  br i1 %10, label %11, label %12, !dbg !16457

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16458
  br label %12, !dbg !16460

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16448
  call void @llvm.dbg.value(metadata i32 %13, metadata !15450, metadata !DIExpression()) #24, !dbg !16450
  call void @llvm.dbg.value(metadata i32 %13, metadata !15444, metadata !DIExpression()) #24, !dbg !16446
  call void @llvm.dbg.value(metadata i32 %13, metadata !16438, metadata !DIExpression()), !dbg !16445
  call void @llvm.dbg.value(metadata i32 undef, metadata !15465, metadata !DIExpression()) #24, !dbg !16461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16461
  call void @llvm.dbg.value(metadata i32 undef, metadata !15473, metadata !DIExpression()) #24, !dbg !16463
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !16465, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 1, metadata !16436, metadata !DIExpression()), !dbg !16445
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()), !dbg !16445
  ret i32 %6, !dbg !16466
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16467 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16472, metadata !DIExpression()), !dbg !16475
  call void @llvm.dbg.value(metadata i64 undef, metadata !16474, metadata !DIExpression()), !dbg !16475
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16471, metadata !DIExpression()), !dbg !16475
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16473, metadata !DIExpression()), !dbg !16475
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16476
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16477
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16478
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16480, !srcloc !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #24, !dbg !16482
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16482
  call void @llvm.dbg.value(metadata i32 undef, metadata !15444, metadata !DIExpression()) #24, !dbg !16478
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16483
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16484
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16049, metadata !DIExpression()) #24, !dbg !16485
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16054, metadata !DIExpression()) #24, !dbg !16485
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !16487
  ret i32 %9, !dbg !16488
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16489 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16493, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16494, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i32 0, metadata !16495, metadata !DIExpression()), !dbg !16499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16500
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16502, !srcloc !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #24, !dbg !16504
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16504
  call void @llvm.dbg.value(metadata i32 undef, metadata !15444, metadata !DIExpression()) #24, !dbg !16500
  call void @llvm.dbg.value(metadata i32 undef, metadata !16497, metadata !DIExpression()), !dbg !16499
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16494, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i32 undef, metadata !16495, metadata !DIExpression()), !dbg !16499
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16505
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16494, metadata !DIExpression()), !dbg !16498
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16508
  br i1 %5, label %7, label %6, !dbg !16510

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16511
  br label %7, !dbg !16513

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16502
  call void @llvm.dbg.value(metadata i32 %8, metadata !15450, metadata !DIExpression()) #24, !dbg !16504
  call void @llvm.dbg.value(metadata i32 %8, metadata !15444, metadata !DIExpression()) #24, !dbg !16500
  call void @llvm.dbg.value(metadata i32 %8, metadata !16497, metadata !DIExpression()), !dbg !16499
  call void @llvm.dbg.value(metadata i32 undef, metadata !15465, metadata !DIExpression()) #24, !dbg !16514
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16514
  call void @llvm.dbg.value(metadata i32 undef, metadata !15473, metadata !DIExpression()) #24, !dbg !16516
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !16518, !srcloc !15479
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16494, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i32 undef, metadata !16495, metadata !DIExpression()), !dbg !16499
  ret %struct.k_thread* %4, !dbg !16519
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16520 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16522, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16523, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata i32 0, metadata !16524, metadata !DIExpression()), !dbg !16528
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16529
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16531, !srcloc !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #24, !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !15444, metadata !DIExpression()) #24, !dbg !16529
  call void @llvm.dbg.value(metadata i32 undef, metadata !16526, metadata !DIExpression()), !dbg !16528
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16523, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !16524, metadata !DIExpression()), !dbg !16528
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16534
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16523, metadata !DIExpression()), !dbg !16527
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16537
  br i1 %5, label %8, label %6, !dbg !16539

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16540
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16542
  br label %8, !dbg !16543

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16531
  call void @llvm.dbg.value(metadata i32 %9, metadata !15450, metadata !DIExpression()) #24, !dbg !16533
  call void @llvm.dbg.value(metadata i32 %9, metadata !15444, metadata !DIExpression()) #24, !dbg !16529
  call void @llvm.dbg.value(metadata i32 %9, metadata !16526, metadata !DIExpression()), !dbg !16528
  call void @llvm.dbg.value(metadata i32 undef, metadata !15465, metadata !DIExpression()) #24, !dbg !16544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16544
  call void @llvm.dbg.value(metadata i32 undef, metadata !15473, metadata !DIExpression()) #24, !dbg !16546
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !16548, !srcloc !15479
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16523, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !16524, metadata !DIExpression()), !dbg !16528
  ret %struct.k_thread* %4, !dbg !16549
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16552, metadata !DIExpression()), !dbg !16553
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16408, metadata !DIExpression()) #24, !dbg !16554
  call void @llvm.dbg.value(metadata i32 0, metadata !16409, metadata !DIExpression()) #24, !dbg !16556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16557
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16559, !srcloc !15453
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16559
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #24, !dbg !16561
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16561
  call void @llvm.dbg.value(metadata i32 %3, metadata !15444, metadata !DIExpression()) #24, !dbg !16557
  call void @llvm.dbg.value(metadata i32 %3, metadata !16411, metadata !DIExpression()) #24, !dbg !16556
  call void @llvm.dbg.value(metadata i32 undef, metadata !16409, metadata !DIExpression()) #24, !dbg !16556
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !16562
  call void @llvm.dbg.value(metadata i32 %3, metadata !15465, metadata !DIExpression()) #24, !dbg !16563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16563
  call void @llvm.dbg.value(metadata i32 %3, metadata !15473, metadata !DIExpression()) #24, !dbg !16565
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16567, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 1, metadata !16409, metadata !DIExpression()) #24, !dbg !16556
  call void @llvm.dbg.value(metadata i32 undef, metadata !16409, metadata !DIExpression()) #24, !dbg !16556
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16568
  ret void, !dbg !16569
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16570 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16572, metadata !DIExpression()), !dbg !16578
  call void @llvm.dbg.value(metadata i32 %1, metadata !16573, metadata !DIExpression()), !dbg !16578
  call void @llvm.dbg.value(metadata i8 0, metadata !16574, metadata !DIExpression()), !dbg !16578
  call void @llvm.dbg.value(metadata i32 0, metadata !16575, metadata !DIExpression()), !dbg !16579
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16580
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16582, !srcloc !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #24, !dbg !16584
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16584
  call void @llvm.dbg.value(metadata i32 undef, metadata !15444, metadata !DIExpression()) #24, !dbg !16580
  call void @llvm.dbg.value(metadata i32 undef, metadata !16577, metadata !DIExpression()), !dbg !16579
  call void @llvm.dbg.value(metadata i8 poison, metadata !16574, metadata !DIExpression()), !dbg !16578
  call void @llvm.dbg.value(metadata i32 undef, metadata !16575, metadata !DIExpression()), !dbg !16579
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16585
  call void @llvm.dbg.value(metadata i1 %6, metadata !16574, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16578
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16588

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15607, metadata !DIExpression()) #24, !dbg !16589
  %11 = load i8, i8* %4, align 1, !dbg !16595
  %12 = and i8 %11, 127, !dbg !16595
  store i8 %12, i8* %4, align 1, !dbg !16595
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15615, metadata !DIExpression()) #24, !dbg !16596
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16598
  store i8 %9, i8* %8, align 2, !dbg !16599
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15624, metadata !DIExpression()) #24, !dbg !16600
  %13 = load i8, i8* %4, align 1, !dbg !16602
  %14 = or i8 %13, -128, !dbg !16602
  store i8 %14, i8* %4, align 1, !dbg !16602
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15631, metadata !DIExpression()) #24, !dbg !16603
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15638, metadata !DIExpression()) #24, !dbg !16605
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15644, metadata !DIExpression()) #24, !dbg !16605
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16607
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15645, metadata !DIExpression()) #24, !dbg !16605
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16608
  br i1 %16, label %26, label %17, !dbg !16607

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15645, metadata !DIExpression()) #24, !dbg !16605
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16609
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15645, metadata !DIExpression()) #24, !dbg !16605
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !16610
  %21 = icmp sgt i32 %20, 0, !dbg !16611
  br i1 %21, label %22, label %23, !dbg !16612

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !16613
  br label %27, !dbg !16614

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !16608
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15645, metadata !DIExpression()) #24, !dbg !16605
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16608
  br i1 %25, label %26, label %17, !dbg !16607, !llvm.loop !16615

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !16617
  br label %27, !dbg !16618

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16619
  br label %29, !dbg !16620

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16621
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16582
  call void @llvm.dbg.value(metadata i32 %30, metadata !15450, metadata !DIExpression()) #24, !dbg !16584
  call void @llvm.dbg.value(metadata i32 %30, metadata !15444, metadata !DIExpression()) #24, !dbg !16580
  call void @llvm.dbg.value(metadata i32 %30, metadata !16577, metadata !DIExpression()), !dbg !16579
  call void @llvm.dbg.value(metadata i32 undef, metadata !15465, metadata !DIExpression()) #24, !dbg !16623
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16623
  call void @llvm.dbg.value(metadata i32 undef, metadata !15473, metadata !DIExpression()) #24, !dbg !16625
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !16627, !srcloc !15479
  call void @llvm.dbg.value(metadata i8 poison, metadata !16574, metadata !DIExpression()), !dbg !16578
  call void @llvm.dbg.value(metadata i32 undef, metadata !16575, metadata !DIExpression()), !dbg !16579
  ret i1 %6, !dbg !16628
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16629 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16633, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata i32 %1, metadata !16634, metadata !DIExpression()), !dbg !16636
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16637
  call void @llvm.dbg.value(metadata i1 %3, metadata !16635, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16636
  br i1 %3, label %4, label %12, !dbg !16638

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16640
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16641
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16641
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16641
  %9 = load i8, i8* %8, align 1, !dbg !16641
  %10 = icmp eq i8 %9, 0, !dbg !16642
  br i1 %10, label %11, label %12, !dbg !16643

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16644
  br label %12, !dbg !16646

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16647
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16648 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16650, metadata !DIExpression()), !dbg !16653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16654
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16656, !srcloc !15453
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16656
  call void @llvm.dbg.value(metadata i32 %2, metadata !15450, metadata !DIExpression()) #24, !dbg !16658
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16658
  call void @llvm.dbg.value(metadata i32 %2, metadata !15444, metadata !DIExpression()) #24, !dbg !16654
  call void @llvm.dbg.value(metadata i32 %2, metadata !16652, metadata !DIExpression()), !dbg !16653
  call void @llvm.dbg.value(metadata i32 undef, metadata !16650, metadata !DIExpression()), !dbg !16653
  tail call fastcc void @z_sched_lock() #26, !dbg !16659
  call void @llvm.dbg.value(metadata i32 %2, metadata !15465, metadata !DIExpression()) #24, !dbg !16662
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16662
  call void @llvm.dbg.value(metadata i32 %2, metadata !15473, metadata !DIExpression()) #24, !dbg !16664
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !16666, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 1, metadata !16650, metadata !DIExpression()), !dbg !16653
  call void @llvm.dbg.value(metadata i32 undef, metadata !16650, metadata !DIExpression()), !dbg !16653
  ret void, !dbg !16667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16668 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16669
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16670
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16670
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16670
  %5 = load i8, i8* %4, align 1, !dbg !16671
  %6 = add i8 %5, -1, !dbg !16671
  store i8 %6, i8* %4, align 1, !dbg !16671
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16672, !srcloc !16674
  ret void, !dbg !16675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16676 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16678, metadata !DIExpression()), !dbg !16681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16682
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16684, !srcloc !15453
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16684
  call void @llvm.dbg.value(metadata i32 %2, metadata !15450, metadata !DIExpression()) #24, !dbg !16686
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16686
  call void @llvm.dbg.value(metadata i32 %2, metadata !15444, metadata !DIExpression()) #24, !dbg !16682
  call void @llvm.dbg.value(metadata i32 %2, metadata !16680, metadata !DIExpression()), !dbg !16681
  call void @llvm.dbg.value(metadata i32 undef, metadata !16678, metadata !DIExpression()), !dbg !16681
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16687
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16690
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16690
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16690
  %7 = load i8, i8* %6, align 1, !dbg !16691
  %8 = add i8 %7, 1, !dbg !16691
  store i8 %8, i8* %6, align 1, !dbg !16691
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16692
  call void @llvm.dbg.value(metadata i32 %2, metadata !15465, metadata !DIExpression()) #24, !dbg !16693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !16693
  call void @llvm.dbg.value(metadata i32 %2, metadata !15473, metadata !DIExpression()) #24, !dbg !16695
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !16697, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 1, metadata !16678, metadata !DIExpression()), !dbg !16681
  call void @llvm.dbg.value(metadata i32 undef, metadata !16678, metadata !DIExpression()), !dbg !16681
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16698
  ret void, !dbg !16699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !16700 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16701
  ret %struct.k_thread* %1, !dbg !16702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !16703 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16707, metadata !DIExpression()), !dbg !16712
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16708, metadata !DIExpression()), !dbg !16712
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16713
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16709, metadata !DIExpression()), !dbg !16712
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16714
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16710, metadata !DIExpression()), !dbg !16712
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16715
  call void @llvm.dbg.value(metadata i32 %5, metadata !16711, metadata !DIExpression()), !dbg !16712
  %6 = icmp sgt i32 %5, 0, !dbg !16716
  br i1 %6, label %17, label %7, !dbg !16718

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16719
  br i1 %8, label %17, label %9, !dbg !16721

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16722
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16722
  %12 = load i32, i32* %11, align 8, !dbg !16722
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16724
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16724
  %15 = load i32, i32* %14, align 8, !dbg !16724
  %16 = icmp ult i32 %12, %15, !dbg !16725
  br label %17, !dbg !16726

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16727
  ret i1 %18, !dbg !16728
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16729 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16746, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16747, metadata !DIExpression()), !dbg !16761
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16762
  %5 = load i32, i32* %4, align 4, !dbg !16763
  %6 = add nsw i32 %5, 1, !dbg !16763
  store i32 %6, i32* %4, align 4, !dbg !16763
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16764
  store i32 %5, i32* %7, align 8, !dbg !16765
  %8 = load i32, i32* %4, align 4, !dbg !16766
  %9 = icmp eq i32 %8, 0, !dbg !16767
  br i1 %9, label %10, label %32, !dbg !16768

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16769
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16769
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16749, metadata !DIExpression()), !dbg !16769
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16769
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16769
  %14 = load i32, i32* %13, align 4, !dbg !16769
  %15 = shl i32 %14, 2, !dbg !16769
  %16 = alloca i8, i32 %15, align 8, !dbg !16769
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16769
  store i8* %16, i8** %17, align 4, !dbg !16769
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16769
  %19 = alloca i8, i32 %14, align 8, !dbg !16769
  store i8* %19, i8** %18, align 4, !dbg !16769
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16769
  store i32 -1, i32* %20, align 4, !dbg !16769
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16770
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16758, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16748, metadata !DIExpression()), !dbg !16761
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16772
  br i1 %22, label %23, label %24, !dbg !16769

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16772
  br label %32, !dbg !16773

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16748, metadata !DIExpression()), !dbg !16761
  %26 = load i32, i32* %4, align 4, !dbg !16774
  %27 = add nsw i32 %26, 1, !dbg !16774
  store i32 %27, i32* %4, align 4, !dbg !16774
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16776
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16776
  store i32 %26, i32* %29, align 8, !dbg !16777
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16770
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16758, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16748, metadata !DIExpression()), !dbg !16761
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16772
  br i1 %31, label %23, label %24, !dbg !16769, !llvm.loop !16778

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16780
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16781
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16782
  ret void, !dbg !16783
}

; Function Attrs: optsize
declare !dbg !16784 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16789 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16792 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16794, metadata !DIExpression()), !dbg !16796
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16795, metadata !DIExpression()), !dbg !16796
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16797
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16798
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16799
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16800
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16800
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16802
  br i1 %7, label %8, label %10, !dbg !16803

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16804
  store i32 0, i32* %9, align 4, !dbg !16806
  br label %10, !dbg !16807

10:                                               ; preds = %8, %2
  ret void, !dbg !16808
}

; Function Attrs: optsize
declare !dbg !16809 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16810 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16814, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16815, metadata !DIExpression()), !dbg !16817
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16818
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16819
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16816, metadata !DIExpression()), !dbg !16817
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16815, metadata !DIExpression()), !dbg !16817
  ret %struct.k_thread* %4, !dbg !16820
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16821 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16825, metadata !DIExpression()), !dbg !16826
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16827
  ret %struct.rbnode* %2, !dbg !16828
}

; Function Attrs: optsize
declare !dbg !16829 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16832 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16844, metadata !DIExpression()), !dbg !16848
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16849
  %3 = load i32, i32* %2, align 4, !dbg !16849
  %4 = icmp eq i32 %3, 0, !dbg !16851
  br i1 %4, label %10, label %5, !dbg !16852

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16845, metadata !DIExpression()), !dbg !16848
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16853, !range !3964
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16854
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16846, metadata !DIExpression()), !dbg !16848
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !16855
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16847, metadata !DIExpression()), !dbg !16848
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16845, metadata !DIExpression()), !dbg !16848
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16848
  ret %struct.k_thread* %11, !dbg !16856
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16857 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16861, metadata !DIExpression()), !dbg !16864
  call void @llvm.dbg.value(metadata i32 0, metadata !16862, metadata !DIExpression()), !dbg !16864
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16865
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16863, metadata !DIExpression()), !dbg !16864
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16866
  br i1 %3, label %8, label %4, !dbg !16867

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16868
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16870
  call void @llvm.dbg.value(metadata i32 1, metadata !16862, metadata !DIExpression()), !dbg !16864
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16865
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16863, metadata !DIExpression()), !dbg !16864
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16866
  br i1 %7, label %8, label %4, !dbg !16867, !llvm.loop !16871

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16864
  ret i32 %9, !dbg !16873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !16874 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16876, metadata !DIExpression()), !dbg !16877
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16878
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !16879
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16880
  ret %struct.k_thread* %4, !dbg !16881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !16882 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16891, metadata !DIExpression()), !dbg !16892
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16893
  tail call fastcc void @sys_dlist_init.178(%struct._dnode* noundef nonnull %2) #26, !dbg !16894
  ret void, !dbg !16895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.178(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16896 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16900, metadata !DIExpression()), !dbg !16901
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16902
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16903
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16904
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16905
  ret void, !dbg !16906
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16907 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16908
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16909
  ret void, !dbg !16910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !16911 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16916, metadata !DIExpression()), !dbg !16917
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16918
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16918
  %4 = load i8, i8* %3, align 2, !dbg !16918
  %5 = sext i8 %4 to i32, !dbg !16919
  ret i32 %5, !dbg !16920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16921 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16925, metadata !DIExpression()), !dbg !16928
  call void @llvm.dbg.value(metadata i32 %1, metadata !16926, metadata !DIExpression()), !dbg !16928
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16927, metadata !DIExpression()), !dbg !16928
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16929
  ret void, !dbg !16930
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16931 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16932
  br i1 %1, label %8, label %2, !dbg !16933

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16934
  br i1 %3, label %8, label %4, !dbg !16935

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16936
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16937
  %7 = xor i1 %6, true, !dbg !16935
  br label %8, !dbg !16935

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !16939 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16940, !range !7266
  %2 = icmp eq i8 %1, 0, !dbg !16940
  ret i1 %2, !dbg !16941
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16942 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !16945
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16947, !srcloc !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #24, !dbg !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !15444, metadata !DIExpression()) #24, !dbg !16945
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()), !dbg !16950
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16951
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15607, metadata !DIExpression()) #24, !dbg !16954
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16956
  %4 = load i8, i8* %3, align 1, !dbg !16957
  %5 = and i8 %4, 127, !dbg !16957
  store i8 %5, i8* %3, align 1, !dbg !16957
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15615, metadata !DIExpression()) #24, !dbg !16958
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16960
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16961
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15624, metadata !DIExpression()) #24, !dbg !16962
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16964
  %8 = load i8, i8* %7, align 1, !dbg !16965
  %9 = or i8 %8, -128, !dbg !16965
  store i8 %9, i8* %7, align 1, !dbg !16965
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15631, metadata !DIExpression()) #24, !dbg !16966
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15638, metadata !DIExpression()) #24, !dbg !16968
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15644, metadata !DIExpression()) #24, !dbg !16968
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16970
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15645, metadata !DIExpression()) #24, !dbg !16968
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16971
  br i1 %11, label %22, label %12, !dbg !16970

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15645, metadata !DIExpression()) #24, !dbg !16968
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16972
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15645, metadata !DIExpression()) #24, !dbg !16968
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16973
  %16 = icmp sgt i32 %15, 0, !dbg !16974
  br i1 %16, label %17, label %19, !dbg !16975

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16976
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16977
  br label %24, !dbg !16978

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16971
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15645, metadata !DIExpression()) #24, !dbg !16968
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16971
  br i1 %21, label %22, label %12, !dbg !16970, !llvm.loop !16979

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16981
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16982
  br label %24, !dbg !16983

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16947
  call void @llvm.dbg.value(metadata i32 %25, metadata !15450, metadata !DIExpression()) #24, !dbg !16949
  call void @llvm.dbg.value(metadata i32 %25, metadata !15444, metadata !DIExpression()) #24, !dbg !16945
  call void @llvm.dbg.value(metadata i32 %25, metadata !16944, metadata !DIExpression()), !dbg !16950
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16984
  call void @llvm.dbg.value(metadata i32 undef, metadata !16049, metadata !DIExpression()) #24, !dbg !16985
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16054, metadata !DIExpression()) #24, !dbg !16985
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16987
  ret void, !dbg !16988
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16989 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16993, metadata !DIExpression()), !dbg !16996
  %3 = icmp eq i64 %2, -1, !dbg !16997
  br i1 %3, label %4, label %6, !dbg !16999

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17000
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !17002
  br label %11, !dbg !17003

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16994, metadata !DIExpression()), !dbg !16996
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !17004
  %8 = sext i32 %7 to i64, !dbg !17004
  call void @llvm.dbg.value(metadata i64 %8, metadata !16994, metadata !DIExpression()), !dbg !16996
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !17005
  %10 = trunc i64 %9 to i32, !dbg !17005
  call void @llvm.dbg.value(metadata i32 %10, metadata !16995, metadata !DIExpression()), !dbg !16996
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16996
  ret i32 %12, !dbg !17006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17007 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17011, metadata !DIExpression()), !dbg !17012
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !17013, !srcloc !17015
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !17016
  ret void, !dbg !17017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17018 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17022, metadata !DIExpression()), !dbg !17026
  %2 = icmp eq i64 %0, 0, !dbg !17027
  br i1 %2, label %3, label %4, !dbg !17029

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17030
  br label %29, !dbg !17032

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17024, metadata !DIExpression()), !dbg !17026
  %5 = icmp sgt i64 %0, -3, !dbg !17033
  br i1 %5, label %6, label %10, !dbg !17035

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !17036
  %8 = trunc i64 %0 to i32, !dbg !17038
  %9 = add i32 %7, %8, !dbg !17038
  call void @llvm.dbg.value(metadata i32 %9, metadata !17023, metadata !DIExpression()), !dbg !17026
  br label %13, !dbg !17039

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17040
  %12 = sub i32 -2, %11, !dbg !17040
  call void @llvm.dbg.value(metadata i32 %12, metadata !17023, metadata !DIExpression()), !dbg !17026
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17042
  call void @llvm.dbg.value(metadata i32 %14, metadata !17023, metadata !DIExpression()), !dbg !17026
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !17043
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17045, !srcloc !15453
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17045
  call void @llvm.dbg.value(metadata i32 %16, metadata !15450, metadata !DIExpression()) #24, !dbg !17047
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !17047
  call void @llvm.dbg.value(metadata i32 %16, metadata !15444, metadata !DIExpression()) #24, !dbg !17043
  call void @llvm.dbg.value(metadata i32 %16, metadata !17025, metadata !DIExpression()), !dbg !17026
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17048
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17049
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17050
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17051
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17052
  tail call fastcc void @z_add_thread_timeout.167(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17052
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17053
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17054
  call void @llvm.dbg.value(metadata i32 %16, metadata !16049, metadata !DIExpression()) #24, !dbg !17055
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16054, metadata !DIExpression()) #24, !dbg !17055
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !17057
  %22 = zext i32 %14 to i64, !dbg !17058
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !17059
  %24 = zext i32 %23 to i64, !dbg !17059
  %25 = sub nsw i64 %22, %24, !dbg !17060
  call void @llvm.dbg.value(metadata i64 %25, metadata !17022, metadata !DIExpression()), !dbg !17026
  %26 = icmp sgt i64 %25, 0, !dbg !17061
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17061
  %28 = trunc i64 %27 to i32, !dbg !17061
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17026
  ret i32 %30, !dbg !17062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !17063 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17065, metadata !DIExpression()), !dbg !17066
  call void @llvm.dbg.value(metadata i64 %0, metadata !15485, metadata !DIExpression()), !dbg !17067
  call void @llvm.dbg.value(metadata i32 10000, metadata !15488, metadata !DIExpression()), !dbg !17067
  call void @llvm.dbg.value(metadata i32 1000, metadata !15489, metadata !DIExpression()), !dbg !17067
  call void @llvm.dbg.value(metadata i8 1, metadata !15490, metadata !DIExpression()), !dbg !17067
  call void @llvm.dbg.value(metadata i1 false, metadata !15491, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17067
  call void @llvm.dbg.value(metadata i1 false, metadata !15492, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17067
  call void @llvm.dbg.value(metadata i8 0, metadata !15493, metadata !DIExpression()), !dbg !17067
  call void @llvm.dbg.value(metadata i1 false, metadata !15494, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17067
  call void @llvm.dbg.value(metadata i1 true, metadata !15495, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17067
  call void @llvm.dbg.value(metadata i64 0, metadata !15496, metadata !DIExpression()), !dbg !17067
  call void @llvm.dbg.value(metadata i64 0, metadata !15496, metadata !DIExpression()), !dbg !17067
  call void @llvm.dbg.value(metadata i64 %0, metadata !15485, metadata !DIExpression()), !dbg !17067
  %2 = udiv i64 %0, 10, !dbg !17069
  ret i64 %2, !dbg !17073
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17074 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !17075, !srcloc !17077
  tail call void @z_impl_k_yield() #26, !dbg !17078
  ret void, !dbg !17079
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17084, metadata !DIExpression()), !dbg !17086
  %2 = sext i32 %0 to i64, !dbg !17087
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17088
  call void @llvm.dbg.value(metadata i64 %3, metadata !17085, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17086
  %4 = shl i64 %3, 32, !dbg !17089
  %5 = ashr exact i64 %4, 32, !dbg !17089
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17090
  call void @llvm.dbg.value(metadata i32 %6, metadata !17085, metadata !DIExpression()), !dbg !17086
  %7 = sext i32 %6 to i64, !dbg !17091
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17092
  %9 = trunc i64 %8 to i32, !dbg !17092
  ret i32 %9, !dbg !17093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !17094 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17096, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i64 %0, metadata !15485, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15488, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 10000, metadata !15489, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i8 1, metadata !15490, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i1 false, metadata !15491, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17098
  call void @llvm.dbg.value(metadata i1 true, metadata !15492, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17098
  call void @llvm.dbg.value(metadata i8 0, metadata !15493, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i1 false, metadata !15494, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17098
  call void @llvm.dbg.value(metadata i1 true, metadata !15495, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17098
  call void @llvm.dbg.value(metadata i64 0, metadata !15496, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i64 0, metadata !15496, metadata !DIExpression()), !dbg !17098
  %2 = add i64 %0, 99, !dbg !17100
  call void @llvm.dbg.value(metadata i64 %2, metadata !15485, metadata !DIExpression()), !dbg !17098
  %3 = udiv i64 %2, 100, !dbg !17101
  ret i64 %3, !dbg !17102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !17103 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17105, metadata !DIExpression()), !dbg !17106
  call void @llvm.dbg.value(metadata i64 %0, metadata !15485, metadata !DIExpression()), !dbg !17107
  call void @llvm.dbg.value(metadata i32 10000, metadata !15488, metadata !DIExpression()), !dbg !17107
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15489, metadata !DIExpression()), !dbg !17107
  call void @llvm.dbg.value(metadata i8 1, metadata !15490, metadata !DIExpression()), !dbg !17107
  call void @llvm.dbg.value(metadata i1 false, metadata !15491, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17107
  call void @llvm.dbg.value(metadata i1 false, metadata !15492, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17107
  call void @llvm.dbg.value(metadata i8 0, metadata !15493, metadata !DIExpression()), !dbg !17107
  call void @llvm.dbg.value(metadata i1 true, metadata !15494, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17107
  call void @llvm.dbg.value(metadata i1 false, metadata !15495, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17107
  call void @llvm.dbg.value(metadata i64 0, metadata !15496, metadata !DIExpression()), !dbg !17107
  call void @llvm.dbg.value(metadata i64 0, metadata !15496, metadata !DIExpression()), !dbg !17107
  %2 = mul i64 %0, 100, !dbg !17109
  ret i64 %2, !dbg !17111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17112 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17114, metadata !DIExpression()), !dbg !17115
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17116
  br i1 %2, label %14, label %3, !dbg !17118

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17119
  %5 = icmp slt i32 %4, 0, !dbg !17121
  br i1 %5, label %6, label %10, !dbg !17122

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17123
  %8 = load i8, i8* %7, align 1, !dbg !17123
  %9 = icmp eq i8 %8, 16, !dbg !17126
  br i1 %9, label %10, label %14, !dbg !17127

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17128
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17129
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !17130, !srcloc !16089
  call void @llvm.dbg.value(metadata i32 %11, metadata !16085, metadata !DIExpression()) #24, !dbg !17134
  %12 = icmp eq i32 %11, 0, !dbg !17135
  br i1 %12, label %13, label %14, !dbg !17136

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17137
  br label %14, !dbg !17139

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17141 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17143, metadata !DIExpression()), !dbg !17144
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17145
  %3 = load i8, i8* %2, align 1, !dbg !17145
  %4 = and i8 %3, 2, !dbg !17146
  %5 = icmp ne i8 %4, 0, !dbg !17147
  ret i1 %5, !dbg !17148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !17149 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17154
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17153, metadata !DIExpression()), !dbg !17155
  ret %struct.k_thread* %1, !dbg !17156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17157 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !17158, !srcloc !16089
  call void @llvm.dbg.value(metadata i32 %1, metadata !16085, metadata !DIExpression()) #24, !dbg !17161
  %2 = icmp eq i32 %1, 0, !dbg !17162
  br i1 %2, label %3, label %8, !dbg !17163

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17164
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17165
  %6 = icmp ne i32 %5, 0, !dbg !17163
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17166
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17167 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17169, metadata !DIExpression()), !dbg !17171
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !17172
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17174, !srcloc !15453
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17174
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #24, !dbg !17176
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !17176
  call void @llvm.dbg.value(metadata i32 %3, metadata !15444, metadata !DIExpression()) #24, !dbg !17172
  call void @llvm.dbg.value(metadata i32 %3, metadata !17170, metadata !DIExpression()), !dbg !17171
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17177
  %5 = load i8, i8* %4, align 4, !dbg !17177
  %6 = and i8 %5, 1, !dbg !17179
  %7 = icmp eq i8 %6, 0, !dbg !17180
  br i1 %7, label %9, label %8, !dbg !17181

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15465, metadata !DIExpression()) #24, !dbg !17182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !17182
  call void @llvm.dbg.value(metadata i32 %3, metadata !15473, metadata !DIExpression()) #24, !dbg !17185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17187, !srcloc !15479
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !17188, !srcloc !17190
  br label %24, !dbg !17191

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17192
  %11 = load i8, i8* %10, align 1, !dbg !17192
  %12 = and i8 %11, 8, !dbg !17194
  %13 = icmp eq i8 %12, 0, !dbg !17195
  br i1 %13, label %15, label %14, !dbg !17196

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15465, metadata !DIExpression()) #24, !dbg !17197
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !17197
  call void @llvm.dbg.value(metadata i32 %3, metadata !15473, metadata !DIExpression()) #24, !dbg !17200
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17202, !srcloc !15479
  br label %24, !dbg !17203

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17204
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17205
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17207
  br i1 %17, label %18, label %23, !dbg !17208

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !17209, !srcloc !16089
  call void @llvm.dbg.value(metadata i32 %19, metadata !16085, metadata !DIExpression()) #24, !dbg !17212
  %20 = icmp eq i32 %19, 0, !dbg !17213
  br i1 %20, label %21, label %23, !dbg !17214

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16049, metadata !DIExpression()) #24, !dbg !17215
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16054, metadata !DIExpression()) #24, !dbg !17215
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !17218
  br label %23, !dbg !17219

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15465, metadata !DIExpression()) #24, !dbg !17220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !17220
  call void @llvm.dbg.value(metadata i32 %3, metadata !15473, metadata !DIExpression()) #24, !dbg !17222
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17224, !srcloc !15479
  br label %24, !dbg !17225

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17226 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17228, metadata !DIExpression()), !dbg !17229
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17230
  %3 = load i8, i8* %2, align 1, !dbg !17230
  %4 = and i8 %3, 8, !dbg !17232
  %5 = icmp eq i8 %4, 0, !dbg !17233
  br i1 %5, label %6, label %20, !dbg !17234

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17235
  %8 = or i8 %7, 8, !dbg !17235
  store i8 %8, i8* %2, align 1, !dbg !17235
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17237
  br i1 %9, label %10, label %12, !dbg !17239

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15607, metadata !DIExpression()) #24, !dbg !17240
  %11 = and i8 %8, 95, !dbg !17243
  store i8 %11, i8* %2, align 1, !dbg !17243
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15615, metadata !DIExpression()) #24, !dbg !17244
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !17246
  br label %12, !dbg !17247

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17248
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !17248
  %15 = icmp eq %union.anon* %14, null, !dbg !17250
  br i1 %15, label %17, label %16, !dbg !17251

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17252
  br label %17, !dbg !17254

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17255
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17256
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !17257
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17258
  br label %20, !dbg !17259

20:                                               ; preds = %17, %1
  ret void, !dbg !17260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !17261 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17265, metadata !DIExpression()), !dbg !17267
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17268
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17266, metadata !DIExpression()), !dbg !17267
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17269
  br i1 %3, label %10, label %4, !dbg !17270

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17271
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17273
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17274, metadata !DIExpression()), !dbg !17280
  call void @llvm.dbg.value(metadata i32 0, metadata !17279, metadata !DIExpression()), !dbg !17280
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17282
  store i32 0, i32* %7, align 4, !dbg !17283
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17284
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17268
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17266, metadata !DIExpression()), !dbg !17267
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17269
  br i1 %9, label %10, label %4, !dbg !17270, !llvm.loop !17285

10:                                               ; preds = %4, %1
  ret void, !dbg !17287
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17288 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17293, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17292, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !17297
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17299, !srcloc !15453
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17299
  call void @llvm.dbg.value(metadata i32 %4, metadata !15450, metadata !DIExpression()) #24, !dbg !17301
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !17301
  call void @llvm.dbg.value(metadata i32 %4, metadata !15444, metadata !DIExpression()) #24, !dbg !17297
  call void @llvm.dbg.value(metadata i32 %4, metadata !17294, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata i32 0, metadata !17295, metadata !DIExpression()), !dbg !17296
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17302
  %6 = load i8, i8* %5, align 1, !dbg !17302
  %7 = and i8 %6, 8, !dbg !17304
  %8 = icmp eq i8 %7, 0, !dbg !17305
  br i1 %8, label %9, label %24, !dbg !17306

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17293, metadata !DIExpression()), !dbg !17296
  %11 = icmp eq i64 %10, 0, !dbg !17307
  br i1 %11, label %24, label %12, !dbg !17309

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17310
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17312
  br i1 %14, label %24, label %15, !dbg !17313

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17314
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !17314
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17315
  %19 = icmp eq %union.anon* %17, %18, !dbg !17316
  br i1 %19, label %24, label %20, !dbg !17317

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17318
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !17320
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17321
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17322
  call void @llvm.dbg.value(metadata i32 %4, metadata !16049, metadata !DIExpression()) #24, !dbg !17323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16054, metadata !DIExpression()) #24, !dbg !17323
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !17325
  call void @llvm.dbg.value(metadata i32 %23, metadata !17295, metadata !DIExpression()), !dbg !17296
  br label %26, !dbg !17326

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17327
  call void @llvm.dbg.value(metadata i32 %25, metadata !17295, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata i32 %4, metadata !15465, metadata !DIExpression()) #24, !dbg !17328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !17328
  call void @llvm.dbg.value(metadata i32 %4, metadata !15473, metadata !DIExpression()) #24, !dbg !17330
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !17332, !srcloc !15479
  br label %26, !dbg !17333

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17296
  ret i32 %27, !dbg !17334
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17335 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17339, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.value(metadata i32 %1, metadata !17340, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.value(metadata i8* %2, metadata !17341, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.value(metadata i8 0, metadata !17343, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.value(metadata i32 0, metadata !17344, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15438, metadata !DIExpression()) #24, !dbg !17349
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17351, !srcloc !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #24, !dbg !17353
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()) #24, !dbg !17353
  call void @llvm.dbg.value(metadata i32 undef, metadata !15444, metadata !DIExpression()) #24, !dbg !17349
  call void @llvm.dbg.value(metadata i32 undef, metadata !17346, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata i8 poison, metadata !17343, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.value(metadata i32 undef, metadata !17344, metadata !DIExpression()), !dbg !17348
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !17354
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17342, metadata !DIExpression()), !dbg !17347
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17357
  br i1 %7, label %12, label %8, !dbg !17359

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17360, metadata !DIExpression()), !dbg !17368
  call void @llvm.dbg.value(metadata i32 %1, metadata !17366, metadata !DIExpression()), !dbg !17368
  call void @llvm.dbg.value(metadata i8* %2, metadata !17367, metadata !DIExpression()), !dbg !17368
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17274, metadata !DIExpression()), !dbg !17371
  call void @llvm.dbg.value(metadata i32 %1, metadata !17279, metadata !DIExpression()), !dbg !17371
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17373
  store i32 %1, i32* %9, align 4, !dbg !17374
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17375
  store i8* %2, i8** %10, align 4, !dbg !17376
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17377
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17378
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !17379
  call void @llvm.dbg.value(metadata i8 1, metadata !17343, metadata !DIExpression()), !dbg !17347
  br label %12, !dbg !17380

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17351
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17351
  call void @llvm.dbg.value(metadata i32 %14, metadata !15450, metadata !DIExpression()) #24, !dbg !17353
  call void @llvm.dbg.value(metadata i32 %14, metadata !15444, metadata !DIExpression()) #24, !dbg !17349
  call void @llvm.dbg.value(metadata i32 %14, metadata !17346, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata i8 poison, metadata !17343, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.value(metadata i32 undef, metadata !15465, metadata !DIExpression()) #24, !dbg !17381
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15470, metadata !DIExpression()) #24, !dbg !17381
  call void @llvm.dbg.value(metadata i32 undef, metadata !15473, metadata !DIExpression()) #24, !dbg !17383
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !17385, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 undef, metadata !17344, metadata !DIExpression()), !dbg !17348
  ret i1 %13, !dbg !17386
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17387 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17393, metadata !DIExpression()), !dbg !17398
  call void @llvm.dbg.value(metadata i64 undef, metadata !17395, metadata !DIExpression()), !dbg !17398
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17392, metadata !DIExpression()), !dbg !17398
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17394, metadata !DIExpression()), !dbg !17398
  call void @llvm.dbg.value(metadata i8** %4, metadata !17396, metadata !DIExpression()), !dbg !17398
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !17399
  call void @llvm.dbg.value(metadata i32 %6, metadata !17397, metadata !DIExpression()), !dbg !17398
  %7 = icmp eq i8** %4, null, !dbg !17400
  br i1 %7, label %12, label %8, !dbg !17402

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17403
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17405
  %11 = load i8*, i8** %10, align 4, !dbg !17405
  store i8* %11, i8** %4, align 4, !dbg !17406
  br label %12, !dbg !17407

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17409 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !17411
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !17412
  ret void, !dbg !17413
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17414 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17424, metadata !DIExpression()), !dbg !17441
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17422, metadata !DIExpression()), !dbg !17441
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17423, metadata !DIExpression()), !dbg !17441
  %5 = icmp eq i64 %4, -1, !dbg !17442
  br i1 %5, label %55, label %6, !dbg !17444

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17445
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17446
  call void @llvm.dbg.value(metadata i32 0, metadata !17425, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17448, metadata !DIExpression()) #24, !dbg !17455
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17457, !srcloc !17463
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17457
  call void @llvm.dbg.value(metadata i32 %9, metadata !17460, metadata !DIExpression()) #24, !dbg !17464
  call void @llvm.dbg.value(metadata i32 undef, metadata !17461, metadata !DIExpression()) #24, !dbg !17464
  call void @llvm.dbg.value(metadata i32 %9, metadata !17454, metadata !DIExpression()) #24, !dbg !17455
  call void @llvm.dbg.value(metadata i32 %9, metadata !17431, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i32 undef, metadata !17425, metadata !DIExpression()), !dbg !17447
  %10 = icmp slt i64 %4, -1, !dbg !17465
  br i1 %10, label %11, label %17, !dbg !17466

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17467
  %13 = add i64 %4, %12, !dbg !17468
  %14 = sub i64 -2, %13, !dbg !17468
  call void @llvm.dbg.value(metadata i64 %14, metadata !17435, metadata !DIExpression()), !dbg !17469
  %15 = icmp sgt i64 %14, 1, !dbg !17470
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17470
  br label %22, !dbg !17471

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17472
  %19 = tail call fastcc i32 @elapsed.191() #26, !dbg !17474
  %20 = sext i32 %19 to i64, !dbg !17474
  %21 = add nsw i64 %18, %20, !dbg !17475
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17476
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17477
  store i64 %23, i64* %24, align 8, !dbg !17478
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !17479
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17432, metadata !DIExpression()), !dbg !17481
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17482
  br i1 %26, label %42, label %27, !dbg !17482

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17483
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17432, metadata !DIExpression()), !dbg !17481
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17487
  %31 = load i64, i64* %30, align 8, !dbg !17487
  %32 = icmp slt i64 %28, %31, !dbg !17488
  br i1 %32, label %33, label %38, !dbg !17489

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17487
  %35 = sub nsw i64 %31, %28, !dbg !17490
  store i64 %35, i64* %34, align 8, !dbg !17490
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17492
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17493
  tail call fastcc void @sys_dlist_insert.192(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !17494
  br label %44, !dbg !17495

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17496
  store i64 %39, i64* %24, align 8, !dbg !17496
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !17497
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17432, metadata !DIExpression()), !dbg !17481
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17482
  br i1 %41, label %42, label %27, !dbg !17482, !llvm.loop !17498

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17500
  tail call fastcc void @sys_dlist_append.193(%struct._dnode* noundef %43) #26, !dbg !17503
  br label %44, !dbg !17504

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !17505
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17506
  br i1 %46, label %47, label %54, !dbg !17507

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !17508
  call void @llvm.dbg.value(metadata i32 %48, metadata !17438, metadata !DIExpression()), !dbg !17509
  %49 = icmp ne i32 %48, 0, !dbg !17510
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17512
  br i1 %52, label %54, label %53, !dbg !17512

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !17513
  br label %54, !dbg !17515

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17516, metadata !DIExpression()) #24, !dbg !17522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17521, metadata !DIExpression()) #24, !dbg !17522
  call void @llvm.dbg.value(metadata i32 %9, metadata !17524, metadata !DIExpression()) #24, !dbg !17527
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !17529, !srcloc !17530
  call void @llvm.dbg.value(metadata i32 undef, metadata !17425, metadata !DIExpression()), !dbg !17447
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.191() unnamed_addr #1 !dbg !17532 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17535
  %2 = icmp eq i32 %1, 0, !dbg !17536
  br i1 %2, label %3, label %5, !dbg !17535

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !17537
  br label %5, !dbg !17535

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17535
  ret i32 %6, !dbg !17538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !17539 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.196() #26, !dbg !17545
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17543, metadata !DIExpression()), !dbg !17546
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17547
  ret %struct._timeout* %2, !dbg !17548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.192(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !17549 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17553, metadata !DIExpression()), !dbg !17557
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17554, metadata !DIExpression()), !dbg !17557
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17558
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17558
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17555, metadata !DIExpression()), !dbg !17557
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17559
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17560
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17561
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17562
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17563
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17564
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17565
  ret void, !dbg !17566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !17567 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17571, metadata !DIExpression()), !dbg !17573
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17574
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.194(%struct._dnode* noundef %2) #26, !dbg !17575
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17572, metadata !DIExpression()), !dbg !17573
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17576
  ret %struct._timeout* %4, !dbg !17577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.193(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !17578 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17583, metadata !DIExpression()), !dbg !17586
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17584, metadata !DIExpression()), !dbg !17586
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17587
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17585, metadata !DIExpression()), !dbg !17586
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17588
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17589
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17590
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17591
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17592
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17593
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17594
  ret void, !dbg !17595
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17596 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !17601
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17598, metadata !DIExpression()), !dbg !17602
  %2 = tail call fastcc i32 @elapsed.191() #26, !dbg !17603
  call void @llvm.dbg.value(metadata i32 %2, metadata !17599, metadata !DIExpression()), !dbg !17602
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17604
  br i1 %3, label %14, label %4, !dbg !17606

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17607
  %6 = load i64, i64* %5, align 8, !dbg !17607
  %7 = sext i32 %2 to i64, !dbg !17608
  %8 = sub nsw i64 %6, %7, !dbg !17609
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17610
  br i1 %9, label %14, label %10, !dbg !17611

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17612
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17612
  %13 = trunc i64 %12 to i32, !dbg !17612
  call void @llvm.dbg.value(metadata i32 %13, metadata !17600, metadata !DIExpression()), !dbg !17602
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17614
  call void @llvm.dbg.value(metadata i32 %15, metadata !17600, metadata !DIExpression()), !dbg !17602
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17615
  %17 = icmp ne i32 %16, 0, !dbg !17617
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17618
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17618
  call void @llvm.dbg.value(metadata i32 %20, metadata !17600, metadata !DIExpression()), !dbg !17602
  ret i32 %20, !dbg !17619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.194(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !17620 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17624, metadata !DIExpression()), !dbg !17626
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17625, metadata !DIExpression()), !dbg !17626
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17627
  br i1 %2, label %5, label %3, !dbg !17628

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.195(%struct._dnode* noundef nonnull %0) #26, !dbg !17629
  br label %5, !dbg !17628

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17628
  ret %struct._dnode* %6, !dbg !17630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.195(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !17631 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17633, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17634, metadata !DIExpression()), !dbg !17635
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17636
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17637
  br i1 %3, label %7, label %4, !dbg !17638

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17639
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17639
  br label %7, !dbg !17638

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17638
  ret %struct._dnode* %8, !dbg !17640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.196() unnamed_addr #5 !dbg !17641 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17645, metadata !DIExpression()), !dbg !17646
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.197() #26, !dbg !17647
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17647
  ret %struct._dnode* %3, !dbg !17648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.197() unnamed_addr #5 !dbg !17649 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17653, metadata !DIExpression()), !dbg !17654
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17655
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17656
  ret i1 %2, !dbg !17657
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17658 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17662, metadata !DIExpression()), !dbg !17667
  call void @llvm.dbg.value(metadata i32 -22, metadata !17663, metadata !DIExpression()), !dbg !17667
  call void @llvm.dbg.value(metadata i32 0, metadata !17664, metadata !DIExpression()), !dbg !17668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17448, metadata !DIExpression()) #24, !dbg !17669
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17671, !srcloc !17463
  call void @llvm.dbg.value(metadata i32 undef, metadata !17460, metadata !DIExpression()) #24, !dbg !17673
  call void @llvm.dbg.value(metadata i32 undef, metadata !17461, metadata !DIExpression()) #24, !dbg !17673
  call void @llvm.dbg.value(metadata i32 undef, metadata !17454, metadata !DIExpression()) #24, !dbg !17669
  call void @llvm.dbg.value(metadata i32 undef, metadata !17666, metadata !DIExpression()), !dbg !17668
  call void @llvm.dbg.value(metadata i32 -22, metadata !17663, metadata !DIExpression()), !dbg !17667
  call void @llvm.dbg.value(metadata i32 undef, metadata !17664, metadata !DIExpression()), !dbg !17668
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17663, metadata !DIExpression()), !dbg !17667
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.200(%struct._dnode* noundef %3) #26, !dbg !17674
  br i1 %4, label %5, label %6, !dbg !17678

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !17679
  call void @llvm.dbg.value(metadata i32 0, metadata !17663, metadata !DIExpression()), !dbg !17667
  br label %6, !dbg !17681

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17667
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17671
  call void @llvm.dbg.value(metadata i32 %8, metadata !17460, metadata !DIExpression()) #24, !dbg !17673
  call void @llvm.dbg.value(metadata i32 %8, metadata !17454, metadata !DIExpression()) #24, !dbg !17669
  call void @llvm.dbg.value(metadata i32 %8, metadata !17666, metadata !DIExpression()), !dbg !17668
  call void @llvm.dbg.value(metadata i32 %7, metadata !17663, metadata !DIExpression()), !dbg !17667
  call void @llvm.dbg.value(metadata i32 undef, metadata !17516, metadata !DIExpression()) #24, !dbg !17682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17521, metadata !DIExpression()) #24, !dbg !17682
  call void @llvm.dbg.value(metadata i32 undef, metadata !17524, metadata !DIExpression()) #24, !dbg !17684
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !17686, !srcloc !17530
  call void @llvm.dbg.value(metadata i32 undef, metadata !17664, metadata !DIExpression()), !dbg !17668
  ret i32 %7, !dbg !17687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.200(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17688 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17694, metadata !DIExpression()), !dbg !17695
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17696
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17696
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17697
  ret i1 %4, !dbg !17698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !17699 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17701, metadata !DIExpression()), !dbg !17702
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17703
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17705
  br i1 %3, label %10, label %4, !dbg !17706

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17707
  %6 = load i64, i64* %5, align 8, !dbg !17707
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17709
  %8 = load i64, i64* %7, align 8, !dbg !17710
  %9 = add nsw i64 %8, %6, !dbg !17710
  store i64 %9, i64* %7, align 8, !dbg !17710
  br label %10, !dbg !17711

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17712
  tail call fastcc void @sys_dlist_remove.201(%struct._dnode* noundef %11) #26, !dbg !17713
  ret void, !dbg !17714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.201(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !17715 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17719, metadata !DIExpression()), !dbg !17722
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17723
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17723
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17720, metadata !DIExpression()), !dbg !17722
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17724
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17724
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17721, metadata !DIExpression()), !dbg !17722
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17725
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17726
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17727
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17728
  tail call fastcc void @sys_dnode_init.202(%struct._dnode* noundef %0) #26, !dbg !17729
  ret void, !dbg !17730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.202(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !17731 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17733, metadata !DIExpression()), !dbg !17734
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17735
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17736
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17737
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17738
  ret void, !dbg !17739
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17740 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17746, metadata !DIExpression()), !dbg !17751
  call void @llvm.dbg.value(metadata i64 0, metadata !17747, metadata !DIExpression()), !dbg !17751
  call void @llvm.dbg.value(metadata i32 0, metadata !17748, metadata !DIExpression()), !dbg !17752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17448, metadata !DIExpression()) #24, !dbg !17753
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17755, !srcloc !17463
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17755
  call void @llvm.dbg.value(metadata i32 %3, metadata !17460, metadata !DIExpression()) #24, !dbg !17757
  call void @llvm.dbg.value(metadata i32 undef, metadata !17461, metadata !DIExpression()) #24, !dbg !17757
  call void @llvm.dbg.value(metadata i32 %3, metadata !17454, metadata !DIExpression()) #24, !dbg !17753
  call void @llvm.dbg.value(metadata i32 %3, metadata !17750, metadata !DIExpression()), !dbg !17752
  call void @llvm.dbg.value(metadata i64 0, metadata !17747, metadata !DIExpression()), !dbg !17751
  call void @llvm.dbg.value(metadata i32 undef, metadata !17748, metadata !DIExpression()), !dbg !17752
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17758
  call void @llvm.dbg.value(metadata i64 %4, metadata !17747, metadata !DIExpression()), !dbg !17751
  call void @llvm.dbg.value(metadata i32 %3, metadata !17516, metadata !DIExpression()) #24, !dbg !17761
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17521, metadata !DIExpression()) #24, !dbg !17761
  call void @llvm.dbg.value(metadata i32 %3, metadata !17524, metadata !DIExpression()) #24, !dbg !17763
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17765, !srcloc !17530
  call void @llvm.dbg.value(metadata i32 undef, metadata !17748, metadata !DIExpression()), !dbg !17752
  ret i64 %4, !dbg !17766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17767 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17769, metadata !DIExpression()), !dbg !17773
  call void @llvm.dbg.value(metadata i64 0, metadata !17770, metadata !DIExpression()), !dbg !17773
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.203(%struct._timeout* noundef %0) #26, !dbg !17774
  br i1 %2, label %21, label %3, !dbg !17776

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17777
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17771, metadata !DIExpression()), !dbg !17778
  call void @llvm.dbg.value(metadata i64 0, metadata !17770, metadata !DIExpression()), !dbg !17773
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17779
  br i1 %5, label %16, label %6, !dbg !17781

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17771, metadata !DIExpression()), !dbg !17778
  call void @llvm.dbg.value(metadata i64 %8, metadata !17770, metadata !DIExpression()), !dbg !17773
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17782
  %10 = load i64, i64* %9, align 8, !dbg !17782
  %11 = add nsw i64 %10, %8, !dbg !17784
  call void @llvm.dbg.value(metadata i64 %11, metadata !17770, metadata !DIExpression()), !dbg !17773
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17785
  br i1 %12, label %16, label %13, !dbg !17787

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17788
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17771, metadata !DIExpression()), !dbg !17778
  call void @llvm.dbg.value(metadata i64 %11, metadata !17770, metadata !DIExpression()), !dbg !17773
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17779
  br i1 %15, label %16, label %6, !dbg !17781, !llvm.loop !17789

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17773
  call void @llvm.dbg.value(metadata i64 %17, metadata !17770, metadata !DIExpression()), !dbg !17773
  %18 = tail call fastcc i32 @elapsed.191() #26, !dbg !17791
  %19 = sext i32 %18 to i64, !dbg !17791
  %20 = sub nsw i64 %17, %19, !dbg !17792
  br label %21, !dbg !17793

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17773
  ret i64 %22, !dbg !17794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.203(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17795 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17799, metadata !DIExpression()), !dbg !17800
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17801
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.200(%struct._dnode* noundef %2) #26, !dbg !17802
  %4 = xor i1 %3, true, !dbg !17803
  ret i1 %4, !dbg !17804
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17805 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17807, metadata !DIExpression()), !dbg !17812
  call void @llvm.dbg.value(metadata i64 0, metadata !17808, metadata !DIExpression()), !dbg !17812
  call void @llvm.dbg.value(metadata i32 0, metadata !17809, metadata !DIExpression()), !dbg !17813
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17448, metadata !DIExpression()) #24, !dbg !17814
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17816, !srcloc !17463
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17816
  call void @llvm.dbg.value(metadata i32 %3, metadata !17460, metadata !DIExpression()) #24, !dbg !17818
  call void @llvm.dbg.value(metadata i32 undef, metadata !17461, metadata !DIExpression()) #24, !dbg !17818
  call void @llvm.dbg.value(metadata i32 %3, metadata !17454, metadata !DIExpression()) #24, !dbg !17814
  call void @llvm.dbg.value(metadata i32 %3, metadata !17811, metadata !DIExpression()), !dbg !17813
  call void @llvm.dbg.value(metadata i64 0, metadata !17808, metadata !DIExpression()), !dbg !17812
  call void @llvm.dbg.value(metadata i32 undef, metadata !17809, metadata !DIExpression()), !dbg !17813
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17819
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17822
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17808, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17812
  call void @llvm.dbg.value(metadata i32 %3, metadata !17516, metadata !DIExpression()) #24, !dbg !17823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17521, metadata !DIExpression()) #24, !dbg !17823
  call void @llvm.dbg.value(metadata i32 %3, metadata !17524, metadata !DIExpression()) #24, !dbg !17825
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17827, !srcloc !17530
  call void @llvm.dbg.value(metadata i32 undef, metadata !17809, metadata !DIExpression()), !dbg !17813
  %6 = add i64 %5, %4, !dbg !17828
  ret i64 %6, !dbg !17829
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17830 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17832, metadata !DIExpression()), !dbg !17836
  call void @llvm.dbg.value(metadata i32 0, metadata !17833, metadata !DIExpression()), !dbg !17837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17448, metadata !DIExpression()) #24, !dbg !17838
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17840, !srcloc !17463
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17840
  call void @llvm.dbg.value(metadata i32 %2, metadata !17460, metadata !DIExpression()) #24, !dbg !17842
  call void @llvm.dbg.value(metadata i32 undef, metadata !17461, metadata !DIExpression()) #24, !dbg !17842
  call void @llvm.dbg.value(metadata i32 %2, metadata !17454, metadata !DIExpression()) #24, !dbg !17838
  call void @llvm.dbg.value(metadata i32 %2, metadata !17835, metadata !DIExpression()), !dbg !17837
  call void @llvm.dbg.value(metadata i32 -1, metadata !17832, metadata !DIExpression()), !dbg !17836
  call void @llvm.dbg.value(metadata i32 undef, metadata !17833, metadata !DIExpression()), !dbg !17837
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17843
  call void @llvm.dbg.value(metadata i32 %3, metadata !17832, metadata !DIExpression()), !dbg !17836
  call void @llvm.dbg.value(metadata i32 %2, metadata !17516, metadata !DIExpression()) #24, !dbg !17846
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17521, metadata !DIExpression()) #24, !dbg !17846
  call void @llvm.dbg.value(metadata i32 %2, metadata !17524, metadata !DIExpression()) #24, !dbg !17848
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17850, !srcloc !17530
  call void @llvm.dbg.value(metadata i32 undef, metadata !17833, metadata !DIExpression()), !dbg !17837
  ret i32 %3, !dbg !17851
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17854, metadata !DIExpression()), !dbg !17864
  call void @llvm.dbg.value(metadata i1 %1, metadata !17855, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17864
  call void @llvm.dbg.value(metadata i32 0, metadata !17856, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17448, metadata !DIExpression()) #24, !dbg !17866
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17868, !srcloc !17463
  call void @llvm.dbg.value(metadata i32 undef, metadata !17460, metadata !DIExpression()) #24, !dbg !17870
  call void @llvm.dbg.value(metadata i32 undef, metadata !17461, metadata !DIExpression()) #24, !dbg !17870
  call void @llvm.dbg.value(metadata i32 undef, metadata !17454, metadata !DIExpression()) #24, !dbg !17866
  call void @llvm.dbg.value(metadata i32 undef, metadata !17858, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i32 undef, metadata !17856, metadata !DIExpression()), !dbg !17865
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17871
  call void @llvm.dbg.value(metadata i32 %4, metadata !17859, metadata !DIExpression()), !dbg !17872
  call void @llvm.dbg.value(metadata i1 undef, metadata !17862, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17872
  %5 = icmp slt i32 %4, 2, !dbg !17873
  call void @llvm.dbg.value(metadata i1 %5, metadata !17863, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17872
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17874
  call void @llvm.dbg.value(metadata i1 %6, metadata !17862, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17872
  br i1 %7, label %11, label %8, !dbg !17874

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17876
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17876
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17878
  br label %11, !dbg !17879

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17868
  call void @llvm.dbg.value(metadata i32 %12, metadata !17460, metadata !DIExpression()) #24, !dbg !17870
  call void @llvm.dbg.value(metadata i32 %12, metadata !17454, metadata !DIExpression()) #24, !dbg !17866
  call void @llvm.dbg.value(metadata i32 %12, metadata !17858, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i32 undef, metadata !17516, metadata !DIExpression()) #24, !dbg !17880
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17521, metadata !DIExpression()) #24, !dbg !17880
  call void @llvm.dbg.value(metadata i32 undef, metadata !17524, metadata !DIExpression()) #24, !dbg !17882
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !17884, !srcloc !17530
  call void @llvm.dbg.value(metadata i32 1, metadata !17856, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i32 undef, metadata !17856, metadata !DIExpression()), !dbg !17865
  ret void, !dbg !17885
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17886 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17890, metadata !DIExpression()), !dbg !17895
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17896
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17448, metadata !DIExpression()) #24, !dbg !17897
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17899, !srcloc !17463
  call void @llvm.dbg.value(metadata i32 undef, metadata !17460, metadata !DIExpression()) #24, !dbg !17901
  call void @llvm.dbg.value(metadata i32 undef, metadata !17461, metadata !DIExpression()) #24, !dbg !17901
  call void @llvm.dbg.value(metadata i32 undef, metadata !17454, metadata !DIExpression()) #24, !dbg !17897
  call void @llvm.dbg.value(metadata i32 undef, metadata !17891, metadata !DIExpression()), !dbg !17895
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17895
  call void @llvm.dbg.value(metadata i32 undef, metadata !17891, metadata !DIExpression()), !dbg !17895
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17902
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17903
  br i1 %4, label %28, label %5, !dbg !17904

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17905
  %10 = load i64, i64* %9, align 8, !dbg !17905
  %11 = sext i32 %8 to i64, !dbg !17906
  %12 = icmp sgt i64 %10, %11, !dbg !17907
  br i1 %12, label %26, label %13, !dbg !17908

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17895
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17892, metadata !DIExpression()), !dbg !17909
  %15 = trunc i64 %10 to i32, !dbg !17910
  call void @llvm.dbg.value(metadata i32 %15, metadata !17894, metadata !DIExpression()), !dbg !17909
  %16 = sext i32 %15 to i64, !dbg !17911
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17912
  %18 = add i64 %17, %16, !dbg !17912
  store i64 %18, i64* @curr_tick, align 8, !dbg !17912
  store i64 0, i64* %9, align 8, !dbg !17913
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17914
  call void @llvm.dbg.value(metadata i32 %14, metadata !17516, metadata !DIExpression()) #24, !dbg !17915
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17521, metadata !DIExpression()) #24, !dbg !17915
  call void @llvm.dbg.value(metadata i32 %14, metadata !17524, metadata !DIExpression()) #24, !dbg !17917
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !17919, !srcloc !17530
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17920
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17920
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17921
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17448, metadata !DIExpression()) #24, !dbg !17922
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17924, !srcloc !17463
  call void @llvm.dbg.value(metadata i32 undef, metadata !17460, metadata !DIExpression()) #24, !dbg !17926
  call void @llvm.dbg.value(metadata i32 undef, metadata !17461, metadata !DIExpression()) #24, !dbg !17926
  call void @llvm.dbg.value(metadata i32 undef, metadata !17454, metadata !DIExpression()) #24, !dbg !17922
  call void @llvm.dbg.value(metadata i32 undef, metadata !17891, metadata !DIExpression()), !dbg !17895
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17927
  %23 = sub nsw i32 %22, %15, !dbg !17927
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17895
  call void @llvm.dbg.value(metadata i32 undef, metadata !17891, metadata !DIExpression()), !dbg !17895
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17902
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17903
  br i1 %25, label %28, label %5, !dbg !17904, !llvm.loop !17928

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17930
  store i64 %27, i64* %9, align 8, !dbg !17930
  br label %32, !dbg !17933

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17895
  %31 = sext i32 %30 to i64, !dbg !17934
  br label %32, !dbg !17934

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17934
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17895
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17935
  %37 = add i64 %36, %33, !dbg !17935
  store i64 %37, i64* @curr_tick, align 8, !dbg !17935
  store i32 0, i32* @announce_remaining, align 4, !dbg !17936
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17937
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17938
  call void @llvm.dbg.value(metadata i32 %35, metadata !17516, metadata !DIExpression()) #24, !dbg !17939
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17521, metadata !DIExpression()) #24, !dbg !17939
  call void @llvm.dbg.value(metadata i32 %35, metadata !17524, metadata !DIExpression()) #24, !dbg !17941
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !17943, !srcloc !17530
  ret void, !dbg !17944
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17945 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17949, metadata !DIExpression()), !dbg !17953
  call void @llvm.dbg.value(metadata i32 0, metadata !17950, metadata !DIExpression()), !dbg !17954
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17448, metadata !DIExpression()) #24, !dbg !17955
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17957, !srcloc !17463
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17957
  call void @llvm.dbg.value(metadata i32 %2, metadata !17460, metadata !DIExpression()) #24, !dbg !17959
  call void @llvm.dbg.value(metadata i32 undef, metadata !17461, metadata !DIExpression()) #24, !dbg !17959
  call void @llvm.dbg.value(metadata i32 %2, metadata !17454, metadata !DIExpression()) #24, !dbg !17955
  call void @llvm.dbg.value(metadata i32 %2, metadata !17952, metadata !DIExpression()), !dbg !17954
  call void @llvm.dbg.value(metadata i64 0, metadata !17949, metadata !DIExpression()), !dbg !17953
  call void @llvm.dbg.value(metadata i32 undef, metadata !17950, metadata !DIExpression()), !dbg !17954
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17960
  %4 = tail call fastcc i32 @elapsed.191() #26, !dbg !17963
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17949, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17953
  call void @llvm.dbg.value(metadata i32 %2, metadata !17516, metadata !DIExpression()) #24, !dbg !17964
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17521, metadata !DIExpression()) #24, !dbg !17964
  call void @llvm.dbg.value(metadata i32 %2, metadata !17524, metadata !DIExpression()) #24, !dbg !17966
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17968, !srcloc !17530
  call void @llvm.dbg.value(metadata i32 undef, metadata !17950, metadata !DIExpression()), !dbg !17954
  %5 = sext i32 %4 to i64, !dbg !17963
  %6 = add i64 %3, %5, !dbg !17969
  ret i64 %6, !dbg !17970
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17971 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17972
  %2 = trunc i64 %1 to i32, !dbg !17973
  ret i32 %2, !dbg !17974
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17975 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17976
  ret i64 %1, !dbg !17977
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17980, metadata !DIExpression()), !dbg !17987
  %2 = icmp eq i32 %0, 0, !dbg !17988
  br i1 %2, label %10, label %3, !dbg !17990

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17991
  call void @llvm.dbg.value(metadata i32 %4, metadata !17981, metadata !DIExpression()), !dbg !17987
  %5 = mul i32 %0, 84, !dbg !17992
  call void @llvm.dbg.value(metadata i32 %5, metadata !17982, metadata !DIExpression()), !dbg !17987
  br label %6, !dbg !17993

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17994
  call void @llvm.dbg.value(metadata i32 %7, metadata !17983, metadata !DIExpression()), !dbg !17995
  %8 = sub i32 %7, %4, !dbg !17996
  %9 = icmp ult i32 %8, %5, !dbg !17998
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18000 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !18001
  ret i32 %1, !dbg !18002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18003 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !18005
  ret i32 %1, !dbg !18006
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18007 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18011, metadata !DIExpression()), !dbg !18013
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18014

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !18015
  br label %14, !dbg !18019

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18012, metadata !DIExpression()), !dbg !18013
  %6 = icmp slt i64 %2, -1, !dbg !18020
  br i1 %6, label %7, label %9, !dbg !18023

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18024
  br label %14, !dbg !18025

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !18027
  %11 = icmp ugt i64 %2, 1, !dbg !18028
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18028
  %13 = add nsw i64 %10, %12, !dbg !18029
  br label %14, !dbg !18030

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18031
  ret i64 %15, !dbg !18032
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18033 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.212, i32 0, i32 0)) #25, !dbg !18035
  ret void, !dbg !18036
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18037 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18039, metadata !DIExpression()), !dbg !18059
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18040, metadata !DIExpression()), !dbg !18060
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !18061

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !18062

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18040, metadata !DIExpression()), !dbg !18060
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18063
  %6 = load i8*, i8** %5, align 4, !dbg !18063
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18067
  %8 = load i32, i32* %7, align 4, !dbg !18067
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !18068
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18069
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !18040, metadata !DIExpression()), !dbg !18060
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18070
  br i1 %10, label %3, label %2, !dbg !18061, !llvm.loop !18072
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18074 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18078, metadata !DIExpression()), !dbg !18081
  call void @llvm.dbg.value(metadata i8* %1, metadata !18079, metadata !DIExpression()), !dbg !18081
  call void @llvm.dbg.value(metadata i32 %2, metadata !18080, metadata !DIExpression()), !dbg !18081
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18082
  tail call fastcc void @z_waitq_init.214(%union.anon* noundef nonnull %4) #26, !dbg !18083
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18084
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !18085
  ret void, !dbg !18086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.214(%union.anon* noundef %0) unnamed_addr #4 !dbg !18087 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18092, metadata !DIExpression()), !dbg !18093
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !18094
  tail call fastcc void @sys_dlist_init.215(%struct._dnode* noundef %2) #26, !dbg !18095
  ret void, !dbg !18096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.215(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !18097 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18102, metadata !DIExpression()), !dbg !18103
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18104
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18105
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18106
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18107
  ret void, !dbg !18108
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18109 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18120, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18117, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.value(metadata i32 %1, metadata !18118, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.value(metadata i32 %2, metadata !18119, metadata !DIExpression()), !dbg !18130
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !18131
  call void @llvm.dbg.value(metadata i64 %6, metadata !18122, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.value(metadata i8* null, metadata !18123, metadata !DIExpression()), !dbg !18130
  %7 = icmp eq i64 %5, -1, !dbg !18132
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !18132
  call void @llvm.dbg.value(metadata i64 %8, metadata !18122, metadata !DIExpression()), !dbg !18130
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18134, metadata !DIExpression()) #24, !dbg !18141
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !18143, !srcloc !18149
  call void @llvm.dbg.value(metadata i32 undef, metadata !18146, metadata !DIExpression()) #24, !dbg !18150
  call void @llvm.dbg.value(metadata i32 undef, metadata !18147, metadata !DIExpression()) #24, !dbg !18150
  call void @llvm.dbg.value(metadata i32 undef, metadata !18140, metadata !DIExpression()) #24, !dbg !18141
  call void @llvm.dbg.value(metadata i32 undef, metadata !18124, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.value(metadata i8 0, metadata !18129, metadata !DIExpression()), !dbg !18130
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18123, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.value(metadata i8 0, metadata !18129, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.value(metadata i32 undef, metadata !18124, metadata !DIExpression()), !dbg !18130
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !18151
  call void @llvm.dbg.value(metadata i8* %12, metadata !18123, metadata !DIExpression()), !dbg !18130
  %13 = tail call i64 @sys_clock_tick_get() #25, !dbg !18153
  call void @llvm.dbg.value(metadata i64 %13, metadata !18121, metadata !DIExpression()), !dbg !18130
  %14 = icmp eq i8* %12, null, !dbg !18154
  br i1 %14, label %15, label %31, !dbg !18156

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18124, metadata !DIExpression()), !dbg !18130
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !18156

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18129, metadata !DIExpression()), !dbg !18130
  %20 = sub nsw i64 %8, %18, !dbg !18157
  %21 = icmp slt i64 %20, 1, !dbg !18158
  br i1 %21, label %31, label %22, !dbg !18159

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !18130
  call void @llvm.dbg.value(metadata i8 undef, metadata !18129, metadata !DIExpression()), !dbg !18130
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !18160
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !18160
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #25, !dbg !18160
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18134, metadata !DIExpression()) #24, !dbg !18161
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !18163, !srcloc !18149
  call void @llvm.dbg.value(metadata i32 undef, metadata !18146, metadata !DIExpression()) #24, !dbg !18165
  call void @llvm.dbg.value(metadata i32 undef, metadata !18147, metadata !DIExpression()) #24, !dbg !18165
  call void @llvm.dbg.value(metadata i32 undef, metadata !18140, metadata !DIExpression()) #24, !dbg !18161
  call void @llvm.dbg.value(metadata i32 undef, metadata !18124, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.value(metadata i8* null, metadata !18123, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.value(metadata i32 undef, metadata !18124, metadata !DIExpression()), !dbg !18130
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !18151
  call void @llvm.dbg.value(metadata i8* %28, metadata !18123, metadata !DIExpression()), !dbg !18130
  %29 = tail call i64 @sys_clock_tick_get() #25, !dbg !18153
  call void @llvm.dbg.value(metadata i64 %29, metadata !18121, metadata !DIExpression()), !dbg !18130
  %30 = icmp eq i8* %28, null, !dbg !18154
  br i1 %30, label %17, label %31, !dbg !18156, !llvm.loop !18166

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !18151
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !18130
  call void @llvm.dbg.value(metadata i8* %33, metadata !18123, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.value(metadata i32 %34, metadata !18169, metadata !DIExpression()) #24, !dbg !18175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18174, metadata !DIExpression()) #24, !dbg !18175
  call void @llvm.dbg.value(metadata i32 %34, metadata !18177, metadata !DIExpression()) #24, !dbg !18180
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #24, !dbg !18182, !srcloc !18183
  ret i8* %33, !dbg !18184
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18185 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18191, metadata !DIExpression()), !dbg !18193
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18189, metadata !DIExpression()), !dbg !18193
  call void @llvm.dbg.value(metadata i32 %1, metadata !18190, metadata !DIExpression()), !dbg !18193
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !18194
  call void @llvm.dbg.value(metadata i8* %4, metadata !18192, metadata !DIExpression()), !dbg !18193
  ret i8* %4, !dbg !18195
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !18196 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18200, metadata !DIExpression()), !dbg !18203
  call void @llvm.dbg.value(metadata i8* %1, metadata !18201, metadata !DIExpression()), !dbg !18203
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18134, metadata !DIExpression()) #24, !dbg !18204
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !18206, !srcloc !18149
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !18206
  call void @llvm.dbg.value(metadata i32 %4, metadata !18146, metadata !DIExpression()) #24, !dbg !18208
  call void @llvm.dbg.value(metadata i32 undef, metadata !18147, metadata !DIExpression()) #24, !dbg !18208
  call void @llvm.dbg.value(metadata i32 %4, metadata !18140, metadata !DIExpression()) #24, !dbg !18204
  call void @llvm.dbg.value(metadata i32 %4, metadata !18202, metadata !DIExpression()), !dbg !18203
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18209
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #25, !dbg !18210
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18211
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #25, !dbg !18213
  %8 = icmp eq i32 %7, 0, !dbg !18214
  br i1 %8, label %12, label %9, !dbg !18215

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18216
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !18217
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #25, !dbg !18217
  br label %13, !dbg !18219

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !18169, metadata !DIExpression()) #24, !dbg !18220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18174, metadata !DIExpression()) #24, !dbg !18220
  call void @llvm.dbg.value(metadata i32 %4, metadata !18177, metadata !DIExpression()) #24, !dbg !18223
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !18225, !srcloc !18183
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !18226
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!774, !2, !2650, !27, !113, !2652, !2654, !2687, !2724, !122, !177, !2726, !206, !2808, !2819, !2865, !2867, !2895, !2923, !2966, !3037, !3082, !353, !502, !3110, !538, !548, !573, !812, !3115, !949, !1151, !1456, !1795, !3156, !1910, !2000, !3158, !3221, !3288, !2053, !3291, !2059, !2422, !3309, !2442, !2465, !3311, !2580, !3314, !2619}
!llvm.ident = !{!3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316}
!llvm.module.flags = !{!3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "prompt", scope: !27, file: !105, line: 9, type: !106, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/echo/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/samples/subsys/console/echo/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 400, elements: !109)
!107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!108 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!109 = !{!110}
!110 = !DISubrange(count: 50)
!111 = !DIGlobalVariableExpression(var: !112, expr: !DIExpression())
!112 = distinct !DIGlobalVariable(name: "_char_out", scope: !113, file: !116, line: 54, type: !117, isLocal: false, isDefinition: true)
!113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !115, splitDebugInlining: false, nameTableKind: None)
!114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!115 = !{!111}
!116 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!118 = !DISubroutineType(types: !119)
!119 = !{!103, !103}
!120 = !DIGlobalVariableExpression(var: !121, expr: !DIExpression())
!121 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !122, file: !140, line: 56, type: !141, isLocal: true, isDefinition: true, align: 32)
!122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !123, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !124, globals: !139, splitDebugInlining: false, nameTableKind: None)
!123 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !127, line: 407, baseType: !128)
!127 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 398, size: 224, elements: !129)
!129 = !{!130, !133, !134, !135, !136, !137, !138}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !128, file: !127, line: 400, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !132)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !128, file: !127, line: 401, baseType: !131, size: 32, offset: 32)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !128, file: !127, line: 402, baseType: !131, size: 32, offset: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !128, file: !127, line: 403, baseType: !131, size: 32, offset: 96)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !128, file: !127, line: 404, baseType: !131, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !128, file: !127, line: 405, baseType: !131, size: 32, offset: 160)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !128, file: !127, line: 406, baseType: !131, size: 32, offset: 192)
!139 = !{!120}
!140 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !{!145, !174}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !142, file: !143, line: 60, baseType: !146, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DISubroutineType(types: !148)
!148 = !{!103, !149}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !153)
!152 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!153 = !{!154, !156, !157, !158, !167, !168}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !151, file: !152, line: 380, baseType: !155, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !151, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !151, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !151, file: !152, line: 386, baseType: !159, size: 32, offset: 96)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !161)
!161 = !{!162, !165}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !160, file: !152, line: 359, baseType: !163, size: 8)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !164)
!164 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !160, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!166 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !151, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !151, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !171)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !152, line: 43, baseType: !172)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !173)
!173 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !142, file: !143, line: 65, baseType: !149, size: 32, offset: 32)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !177, file: !180, line: 71, type: !181, isLocal: true, isDefinition: true, align: 32)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !179, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!179 = !{!175}
!180 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !182)
!182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !183)
!183 = !{!184, !203}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !182, file: !143, line: 60, baseType: !185, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!186 = !DISubroutineType(types: !187)
!187 = !{!103, !188}
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !190)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !191)
!191 = !{!192, !193, !194, !195, !201, !202}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !190, file: !152, line: 380, baseType: !155, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !190, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !190, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !190, file: !152, line: 386, baseType: !196, size: 32, offset: 96)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !198)
!198 = !{!199, !200}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !197, file: !152, line: 359, baseType: !163, size: 8)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !197, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !190, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !190, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !182, file: !143, line: 65, baseType: !188, size: 32, offset: 32)
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "console_serial", scope: !206, file: !297, line: 13, type: !306, isLocal: true, isDefinition: true)
!206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !207, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !208, globals: !294, splitDebugInlining: false, nameTableKind: None)
!207 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!208 = !{!209, !102, !103}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !213)
!212 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !{!214, !234, !238, !242, !255, !260, !266, !272, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !211, file: !212, line: 365, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 32)
!216 = !DISubroutineType(types: !217)
!217 = !{!103, !218, !233}
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !220)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !221)
!221 = !{!222, !223, !224, !225, !231, !232}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !220, file: !152, line: 380, baseType: !155, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !220, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !220, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !220, file: !152, line: 386, baseType: !226, size: 32, offset: 96)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !228)
!228 = !{!229, !230}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !227, file: !152, line: 359, baseType: !163, size: 8)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !227, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !220, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !220, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !211, file: !212, line: 366, baseType: !235, size: 32, offset: 32)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = !DISubroutineType(types: !237)
!237 = !{null, !218, !164}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !211, file: !212, line: 374, baseType: !239, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!240 = !DISubroutineType(types: !241)
!241 = !{!103, !218}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !211, file: !212, line: 377, baseType: !243, size: 32, offset: 96)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DISubroutineType(types: !245)
!245 = !{!103, !218, !246}
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !248)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !249)
!249 = !{!250, !251, !252, !253, !254}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !248, file: !212, line: 123, baseType: !132, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !248, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !248, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !248, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !248, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !211, file: !212, line: 379, baseType: !256, size: 32, offset: 128)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 32)
!257 = !DISubroutineType(types: !258)
!258 = !{!103, !218, !259}
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !211, file: !212, line: 384, baseType: !261, size: 32, offset: 160)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = !DISubroutineType(types: !263)
!263 = !{!103, !218, !264, !103}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !163)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !211, file: !212, line: 393, baseType: !267, size: 32, offset: 192)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = !DISubroutineType(types: !269)
!269 = !{!103, !218, !270, !271}
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !211, file: !212, line: 402, baseType: !273, size: 32, offset: 224)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DISubroutineType(types: !275)
!275 = !{null, !218}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !211, file: !212, line: 405, baseType: !273, size: 32, offset: 256)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !211, file: !212, line: 408, baseType: !239, size: 32, offset: 288)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !211, file: !212, line: 411, baseType: !273, size: 32, offset: 320)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !211, file: !212, line: 414, baseType: !273, size: 32, offset: 352)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !211, file: !212, line: 417, baseType: !239, size: 32, offset: 384)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !211, file: !212, line: 420, baseType: !239, size: 32, offset: 416)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !211, file: !212, line: 423, baseType: !273, size: 32, offset: 448)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !211, file: !212, line: 426, baseType: !273, size: 32, offset: 480)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !211, file: !212, line: 429, baseType: !239, size: 32, offset: 512)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !211, file: !212, line: 432, baseType: !239, size: 32, offset: 544)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !211, file: !212, line: 435, baseType: !287, size: 32, offset: 576)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{null, !218, !290, !102}
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32)
!292 = !DISubroutineType(types: !293)
!293 = !{null, !218, !102}
!294 = !{!204, !295, !301}
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "console_rxbuf", scope: !206, file: !297, line: 15, type: !298, isLocal: true, isDefinition: true)
!297 = !DIFile(filename: "zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 512, elements: !299)
!299 = !{!300}
!300 = !DISubrange(count: 64)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "console_txbuf", scope: !206, file: !297, line: 16, type: !303, isLocal: true, isDefinition: true)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 4096, elements: !304)
!304 = !{!305}
!305 = !DISubrange(count: 512)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !307, line: 18, size: 544, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/console/tty.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !310, !337, !338, !339, !342, !343, !345, !346, !347, !348, !349, !350}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !306, file: !307, line: 19, baseType: !218, size: 32)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !306, file: !307, line: 21, baseType: !311, size: 128, offset: 32)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !312, line: 2909, size: 128, elements: !313)
!312 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = !{!314, !335, !336}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !311, file: !312, line: 2910, baseType: !315, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !318)
!318 = !{!319}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !317, file: !316, line: 232, baseType: !320, size: 64)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !323)
!323 = !{!324, !330}
!324 = !DIDerivedType(tag: DW_TAG_member, scope: !322, file: !321, line: 38, baseType: !325, size: 32)
!325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !322, file: !321, line: 38, size: 32, elements: !326)
!326 = !{!327, !329}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !325, file: !321, line: 39, baseType: !328, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !325, file: !321, line: 40, baseType: !328, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, scope: !322, file: !321, line: 42, baseType: !331, size: 32, offset: 32)
!331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !322, file: !321, line: 42, size: 32, elements: !332)
!332 = !{!333, !334}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !331, file: !321, line: 43, baseType: !328, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !331, file: !321, line: 44, baseType: !328, size: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !311, file: !312, line: 2911, baseType: !32, size: 32, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !311, file: !312, line: 2912, baseType: !32, size: 32, offset: 96)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !306, file: !307, line: 22, baseType: !270, size: 32, offset: 160)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !306, file: !307, line: 23, baseType: !132, size: 32, offset: 192)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !306, file: !307, line: 24, baseType: !340, size: 16, offset: 224)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !341)
!341 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !306, file: !307, line: 24, baseType: !340, size: 16, offset: 240)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !306, file: !307, line: 25, baseType: !344, size: 32, offset: 256)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !306, file: !307, line: 27, baseType: !311, size: 128, offset: 288)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !306, file: !307, line: 28, baseType: !270, size: 32, offset: 416)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !306, file: !307, line: 29, baseType: !132, size: 32, offset: 448)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !306, file: !307, line: 30, baseType: !340, size: 16, offset: 480)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !306, file: !307, line: 30, baseType: !340, size: 16, offset: 496)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !306, file: !307, line: 31, baseType: !344, size: 32, offset: 512)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "static_regions", scope: !353, file: !362, line: 62, type: !498, isLocal: true, isDefinition: true)
!353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !355, globals: !358, splitDebugInlining: false, nameTableKind: None)
!354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!355 = !{!356, !103, !132, !102}
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !357, line: 214, baseType: !32)
!357 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!358 = !{!359, !351}
!359 = !DIGlobalVariableExpression(var: !360, expr: !DIExpression())
!360 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !361, file: !362, line: 198, type: !484, isLocal: true, isDefinition: true)
!361 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !362, file: !362, line: 175, type: !363, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !353, retainedNodes: !479)
!362 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!363 = !DISubroutineType(types: !364)
!364 = !{null, !365}
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !368)
!367 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!368 = !{!369, !434, !447, !448, !449, !450, !456, !474}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !366, file: !367, line: 247, baseType: !370, size: 384)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !371)
!371 = !{!372, !399, !406, !407, !408, !419, !420, !421}
!372 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !367, line: 60, baseType: !373, size: 64)
!373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 60, size: 64, elements: !374)
!374 = !{!375, !390}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !373, file: !367, line: 61, baseType: !376, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !377)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !378)
!378 = !{!379, !385}
!379 = !DIDerivedType(tag: DW_TAG_member, scope: !377, file: !321, line: 38, baseType: !380, size: 32)
!380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !377, file: !321, line: 38, size: 32, elements: !381)
!381 = !{!382, !384}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !380, file: !321, line: 39, baseType: !383, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !380, file: !321, line: 40, baseType: !383, size: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, scope: !377, file: !321, line: 42, baseType: !386, size: 32, offset: 32)
!386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !377, file: !321, line: 42, size: 32, elements: !387)
!387 = !{!388, !389}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !386, file: !321, line: 43, baseType: !383, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !386, file: !321, line: 44, baseType: !383, size: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !373, file: !367, line: 62, baseType: !391, size: 64)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !393)
!392 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!394}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !391, file: !392, line: 50, baseType: !395, size: 64)
!395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 64, elements: !397)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!397 = !{!398}
!398 = !DISubrange(count: 2)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !370, file: !367, line: 68, baseType: !400, size: 32, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !402, file: !316, line: 232, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !377)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !370, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !370, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!408 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !367, line: 90, baseType: !409, size: 16, offset: 112)
!409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 90, size: 16, elements: !410)
!410 = !{!411, !418}
!411 = !DIDerivedType(tag: DW_TAG_member, scope: !409, file: !367, line: 91, baseType: !412, size: 16)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !409, file: !367, line: 91, size: 16, elements: !413)
!413 = !{!414, !417}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !412, file: !367, line: 96, baseType: !415, size: 8)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !416)
!416 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !412, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !409, file: !367, line: 100, baseType: !340, size: 16)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !370, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !370, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !370, file: !367, line: 131, baseType: !422, size: 192, offset: 192)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !423)
!423 = !{!424, !425, !431}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !422, file: !316, line: 245, baseType: !376, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !422, file: !316, line: 246, baseType: !426, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !427)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 32)
!428 = !DISubroutineType(types: !429)
!429 = !{null, !430}
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !422, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !433)
!433 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !366, file: !367, line: 250, baseType: !435, size: 288, offset: 384)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !437)
!436 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!437 = !{!438, !439, !440, !441, !442, !443, !444, !445, !446}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !435, file: !436, line: 26, baseType: !132, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !435, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !435, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !435, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !435, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !435, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !435, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !435, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !435, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !366, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !366, file: !367, line: 256, baseType: !401, size: 64, offset: 704)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !366, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !366, file: !367, line: 300, baseType: !451, size: 96, offset: 800)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !452)
!452 = !{!453, !454, !455}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !451, file: !367, line: 153, baseType: !22, size: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !451, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !451, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !366, file: !367, line: 325, baseType: !457, size: 32, offset: 896)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 32)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !459)
!459 = !{!460, !469, !470}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !458, file: !312, line: 5074, baseType: !461, size: 96)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !463)
!462 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!463 = !{!464, !467, !468}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !461, file: !462, line: 57, baseType: !465, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 32)
!466 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !462, line: 57, flags: DIFlagFwdDecl)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !461, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !461, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !458, file: !312, line: 5075, baseType: !401, size: 64, offset: 96)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !458, file: !312, line: 5076, baseType: !471, offset: 160)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !366, file: !367, line: 343, baseType: !475, size: 64, offset: 928)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !476)
!476 = !{!477, !478}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !475, file: !436, line: 63, baseType: !132, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !475, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!479 = !{!480, !481, !482, !483}
!480 = !DILocalVariable(name: "thread", arg: 1, scope: !361, file: !362, line: 175, type: !365)
!481 = !DILocalVariable(name: "region_num", scope: !361, file: !362, line: 200, type: !163)
!482 = !DILocalVariable(name: "guard_start", scope: !361, file: !362, line: 265, type: !22)
!483 = !DILocalVariable(name: "guard_size", scope: !361, file: !362, line: 266, type: !356)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 96, elements: !496)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !486, line: 52, size: 96, elements: !487)
!486 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!487 = !{!488, !489, !490}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !485, file: !486, line: 53, baseType: !22, size: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !485, file: !486, line: 54, baseType: !356, size: 32, offset: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !485, file: !486, line: 55, baseType: !491, size: 32, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !492, line: 151, baseType: !493)
!492 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !492, line: 149, size: 32, elements: !494)
!494 = !{!495}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !493, file: !492, line: 150, baseType: !132, size: 32)
!496 = !{!497}
!497 = !DISubrange(count: 1)
!498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 96, elements: !496)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !485)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !502, file: !535, line: 39, type: !163, isLocal: true, isDefinition: true)
!502 = distinct !DICompileUnit(language: DW_LANG_C99, file: !503, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !504, globals: !534, splitDebugInlining: false, nameTableKind: None)
!503 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!504 = !{!505, !102, !103, !522, !163}
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !507, line: 1226, baseType: !508)
!507 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 1213, size: 352, elements: !509)
!509 = !{!510, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !508, file: !507, line: 1215, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !508, file: !507, line: 1216, baseType: !131, size: 32, offset: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !508, file: !507, line: 1217, baseType: !131, size: 32, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !508, file: !507, line: 1218, baseType: !131, size: 32, offset: 96)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !508, file: !507, line: 1219, baseType: !131, size: 32, offset: 128)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !508, file: !507, line: 1220, baseType: !131, size: 32, offset: 160)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !508, file: !507, line: 1221, baseType: !131, size: 32, offset: 192)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !508, file: !507, line: 1222, baseType: !131, size: 32, offset: 224)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !508, file: !507, line: 1223, baseType: !131, size: 32, offset: 256)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !508, file: !507, line: 1224, baseType: !131, size: 32, offset: 288)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !508, file: !507, line: 1225, baseType: !131, size: 32, offset: 320)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !525, line: 27, size: 96, elements: !526)
!525 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!526 = !{!527, !528, !529}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !524, file: !525, line: 29, baseType: !132, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !524, file: !525, line: 31, baseType: !155, size: 32, offset: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !524, file: !525, line: 37, baseType: !530, size: 32, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !492, line: 146, baseType: !531)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !492, line: 141, size: 32, elements: !532)
!532 = !{!533}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !531, file: !492, line: 143, baseType: !132, size: 32)
!534 = !{!500}
!535 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !538, file: !545, line: 21, type: !117, isLocal: true, isDefinition: true)
!538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !540, globals: !544, splitDebugInlining: false, nameTableKind: None)
!539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!540 = !{!541, !103, !102}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !543, line: 22, baseType: !103)
!543 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !{!536}
!545 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !548, file: !553, line: 13, type: !570, isLocal: true, isDefinition: true)
!548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !549, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !550, splitDebugInlining: false, nameTableKind: None)
!549 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!550 = !{!551, !546}
!551 = !DIGlobalVariableExpression(var: !552, expr: !DIExpression())
!552 = distinct !DIGlobalVariable(name: "mpu_config", scope: !548, file: !553, line: 37, type: !554, isLocal: false, isDefinition: true)
!553 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !525, line: 41, size: 64, elements: !556)
!556 = !{!557, !558}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !555, file: !525, line: 43, baseType: !132, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !555, file: !525, line: 45, baseType: !559, size: 32, offset: 32)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !561)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !525, line: 27, size: 96, elements: !562)
!562 = !{!563, !564, !565}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !561, file: !525, line: 29, baseType: !132, size: 32)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !561, file: !525, line: 31, baseType: !155, size: 32, offset: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !561, file: !525, line: 37, baseType: !566, size: 32, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !492, line: 146, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !492, line: 141, size: 32, elements: !568)
!568 = !{!569}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !567, file: !492, line: 143, baseType: !132, size: 32)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !560, size: 192, elements: !397)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !573, file: !686, line: 72, type: !769, isLocal: true, isDefinition: true)
!573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !574, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !575, retainedTypes: !672, globals: !683, splitDebugInlining: false, nameTableKind: None)
!574 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!575 = !{!30, !576}
!576 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !127, line: 65, baseType: !103, size: 32, elements: !577)
!577 = !{!578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671}
!578 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!579 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!580 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!581 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!582 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!583 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!584 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!585 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!586 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!587 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!588 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!589 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!590 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!591 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!592 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!593 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!594 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!595 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!596 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!597 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!598 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!599 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!600 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!601 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!602 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!603 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!604 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!605 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!606 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!607 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!608 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!609 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!610 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!611 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!612 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!613 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!614 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!615 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!616 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!617 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!618 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!619 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!620 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!621 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!622 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!623 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!624 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!625 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!626 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!627 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!628 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!629 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!630 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!631 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!632 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!633 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!634 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!635 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!636 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!637 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!638 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!639 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!640 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!641 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!642 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!643 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!644 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!645 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!646 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!647 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!648 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!649 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!650 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!651 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!652 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!653 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!654 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!655 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!656 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!657 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!658 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!659 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!660 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!661 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!662 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!663 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!664 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!665 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!666 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!667 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!668 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!669 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!670 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!671 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!672 = !{!356, !103, !102, !673}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !127, line: 392, baseType: !675)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 384, size: 192, elements: !676)
!676 = !{!677, !678, !679, !680, !681, !682}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !675, file: !127, line: 386, baseType: !131, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !675, file: !127, line: 387, baseType: !131, size: 32, offset: 32)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !675, file: !127, line: 388, baseType: !131, size: 32, offset: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !675, file: !127, line: 389, baseType: !131, size: 32, offset: 96)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !675, file: !127, line: 390, baseType: !131, size: 32, offset: 128)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !675, file: !127, line: 391, baseType: !131, size: 32, offset: 160)
!683 = !{!684, !690, !706, !717, !734, !571, !736, !749, !751, !753, !755, !757, !759, !761, !763, !765, !767}
!684 = !DIGlobalVariableExpression(var: !685, expr: !DIExpression())
!685 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !573, file: !686, line: 424, type: !687, isLocal: false, isDefinition: true, align: 16)
!686 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 64, elements: !688)
!688 = !{!689}
!689 = !DISubrange(count: 4)
!690 = !DIGlobalVariableExpression(var: !691, expr: !DIExpression())
!691 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !573, file: !686, line: 424, type: !692, isLocal: false, isDefinition: true, align: 32)
!692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !693)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !694)
!694 = !{!695, !696, !697, !698, !704, !705}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !693, file: !152, line: 380, baseType: !155, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !693, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !693, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !693, file: !152, line: 386, baseType: !699, size: 32, offset: 96)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 32)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !701)
!701 = !{!702, !703}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !700, file: !152, line: 359, baseType: !163, size: 8)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !700, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !693, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !693, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!706 = !DIGlobalVariableExpression(var: !707, expr: !DIExpression())
!707 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !573, file: !686, line: 424, type: !708, isLocal: true, isDefinition: true, align: 32)
!708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !709)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !710)
!710 = !{!711, !716}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !709, file: !143, line: 60, baseType: !712, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 32)
!713 = !DISubroutineType(types: !714)
!714 = !{!103, !715}
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !709, file: !143, line: 65, baseType: !715, size: 32, offset: 32)
!717 = !DIGlobalVariableExpression(var: !718, expr: !DIExpression())
!718 = distinct !DIGlobalVariable(name: "exti_data", scope: !573, file: !686, line: 423, type: !719, isLocal: true, isDefinition: true)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !686, line: 107, size: 1472, elements: !720)
!720 = !{!721}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !719, file: !686, line: 109, baseType: !722, size: 1472)
!722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !723, size: 1472, elements: !732)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !686, line: 101, size: 64, elements: !724)
!724 = !{!725, !731}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !723, file: !686, line: 102, baseType: !726, size: 32)
!726 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !727, line: 63, baseType: !728)
!727 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = !DISubroutineType(types: !730)
!730 = !{null, !103, !102}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !723, file: !686, line: 103, baseType: !102, size: 32, offset: 32)
!732 = !{!733}
!733 = !DISubrange(count: 23)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !573, file: !686, line: 424, type: !700, isLocal: true, isDefinition: true, align: 8)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !738, file: !686, line: 493, type: !743, isLocal: true, isDefinition: true, align: 32)
!738 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !686, file: !686, line: 460, type: !739, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !741)
!739 = !DISubroutineType(types: !740)
!740 = !{null, !715}
!741 = !{!742}
!742 = !DILocalVariable(name: "dev", arg: 1, scope: !738, file: !686, line: 460, type: !715)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !744)
!744 = !{!745, !746, !747, !748}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !743, file: !10, line: 55, baseType: !344, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !743, file: !10, line: 57, baseType: !344, size: 32, offset: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !743, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !743, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !738, file: !686, line: 497, type: !743, isLocal: true, isDefinition: true, align: 32)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !738, file: !686, line: 507, type: !743, isLocal: true, isDefinition: true, align: 32)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !738, file: !686, line: 512, type: !743, isLocal: true, isDefinition: true, align: 32)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !738, file: !686, line: 516, type: !743, isLocal: true, isDefinition: true, align: 32)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !738, file: !686, line: 523, type: !743, isLocal: true, isDefinition: true, align: 32)
!759 = !DIGlobalVariableExpression(var: !760, expr: !DIExpression())
!760 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !738, file: !686, line: 527, type: !743, isLocal: true, isDefinition: true, align: 32)
!761 = !DIGlobalVariableExpression(var: !762, expr: !DIExpression())
!762 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !738, file: !686, line: 581, type: !743, isLocal: true, isDefinition: true, align: 32)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !738, file: !686, line: 586, type: !743, isLocal: true, isDefinition: true, align: 32)
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !738, file: !686, line: 591, type: !743, isLocal: true, isDefinition: true, align: 32)
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !738, file: !686, line: 595, type: !743, isLocal: true, isDefinition: true, align: 32)
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !770, size: 736, elements: !732)
!770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !771)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !127, line: 163, baseType: !576)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !774, file: !779, line: 25, type: !807, isLocal: false, isDefinition: true, align: 16)
!774 = distinct !DICompileUnit(language: DW_LANG_C99, file: !775, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !776, splitDebugInlining: false, nameTableKind: None)
!775 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!776 = !{!777, !772, !783, !785, !787, !789, !791, !793, !795, !797, !799, !801, !803, !805}
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !774, file: !779, line: 20, type: !780, isLocal: false, isDefinition: true, align: 16)
!779 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 240, elements: !781)
!781 = !{!782}
!782 = !DISubrange(count: 15)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !774, file: !779, line: 32, type: !687, isLocal: false, isDefinition: true, align: 16)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !774, file: !779, line: 39, type: !687, isLocal: false, isDefinition: true, align: 16)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !774, file: !779, line: 46, type: !687, isLocal: false, isDefinition: true, align: 16)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !774, file: !779, line: 53, type: !687, isLocal: false, isDefinition: true, align: 16)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !774, file: !779, line: 60, type: !687, isLocal: false, isDefinition: true, align: 16)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !774, file: !779, line: 67, type: !687, isLocal: false, isDefinition: true, align: 16)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !774, file: !779, line: 74, type: !687, isLocal: false, isDefinition: true, align: 16)
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !774, file: !779, line: 81, type: !687, isLocal: false, isDefinition: true, align: 16)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !774, file: !779, line: 88, type: !687, isLocal: false, isDefinition: true, align: 16)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !774, file: !779, line: 95, type: !687, isLocal: false, isDefinition: true, align: 16)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !774, file: !779, line: 102, type: !687, isLocal: false, isDefinition: true, align: 16)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !774, file: !779, line: 109, type: !687, isLocal: false, isDefinition: true, align: 16)
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 48, elements: !808)
!808 = !{!809}
!809 = !DISubrange(count: 3)
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !812, file: !877, line: 398, type: !908, isLocal: true, isDefinition: true)
!812 = distinct !DICompileUnit(language: DW_LANG_C99, file: !813, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !814, retainedTypes: !827, globals: !874, splitDebugInlining: false, nameTableKind: None)
!813 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!814 = !{!815, !30, !820}
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !816, line: 197, baseType: !32, size: 32, elements: !817)
!816 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!817 = !{!818, !819}
!818 = !DIEnumerator(name: "SUCCESS", value: 0)
!819 = !DIEnumerator(name: "ERROR", value: 1)
!820 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !821, line: 44, baseType: !32, size: 32, elements: !822)
!821 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!822 = !{!823, !824, !825, !826}
!823 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!824 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!825 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!826 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!827 = !{!102, !103, !132, !828, !867, !873}
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 586, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 550, size: 1216, elements: !831)
!831 = !{!832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !830, file: !127, line: 552, baseType: !131, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !830, file: !127, line: 553, baseType: !131, size: 32, offset: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !830, file: !127, line: 554, baseType: !131, size: 32, offset: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !830, file: !127, line: 555, baseType: !131, size: 32, offset: 96)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !830, file: !127, line: 556, baseType: !131, size: 32, offset: 128)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !830, file: !127, line: 557, baseType: !131, size: 32, offset: 160)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !830, file: !127, line: 558, baseType: !131, size: 32, offset: 192)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !830, file: !127, line: 559, baseType: !132, size: 32, offset: 224)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !830, file: !127, line: 560, baseType: !131, size: 32, offset: 256)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !830, file: !127, line: 561, baseType: !131, size: 32, offset: 288)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !830, file: !127, line: 562, baseType: !843, size: 64, offset: 320)
!843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 64, elements: !397)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !830, file: !127, line: 563, baseType: !131, size: 32, offset: 384)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !830, file: !127, line: 564, baseType: !131, size: 32, offset: 416)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !830, file: !127, line: 565, baseType: !131, size: 32, offset: 448)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !830, file: !127, line: 566, baseType: !132, size: 32, offset: 480)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !830, file: !127, line: 567, baseType: !131, size: 32, offset: 512)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !830, file: !127, line: 568, baseType: !131, size: 32, offset: 544)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !830, file: !127, line: 569, baseType: !843, size: 64, offset: 576)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !830, file: !127, line: 570, baseType: !131, size: 32, offset: 640)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !830, file: !127, line: 571, baseType: !131, size: 32, offset: 672)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !830, file: !127, line: 572, baseType: !131, size: 32, offset: 704)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !830, file: !127, line: 573, baseType: !132, size: 32, offset: 736)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !830, file: !127, line: 574, baseType: !131, size: 32, offset: 768)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !830, file: !127, line: 575, baseType: !131, size: 32, offset: 800)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !830, file: !127, line: 576, baseType: !843, size: 64, offset: 832)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !830, file: !127, line: 577, baseType: !131, size: 32, offset: 896)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !830, file: !127, line: 578, baseType: !131, size: 32, offset: 928)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !830, file: !127, line: 579, baseType: !843, size: 64, offset: 960)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !830, file: !127, line: 580, baseType: !131, size: 32, offset: 1024)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !830, file: !127, line: 581, baseType: !131, size: 32, offset: 1056)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !830, file: !127, line: 582, baseType: !131, size: 32, offset: 1088)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !830, file: !127, line: 583, baseType: !131, size: 32, offset: 1120)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !830, file: !127, line: 584, baseType: !131, size: 32, offset: 1152)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !830, file: !127, line: 585, baseType: !131, size: 32, offset: 1184)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 32)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !869, line: 343, size: 64, elements: !870)
!869 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !868, file: !869, line: 344, baseType: !132, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !868, file: !869, line: 345, baseType: !132, size: 32, offset: 32)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!874 = !{!875, !879, !895, !906, !810}
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !812, file: !877, line: 752, type: !878, isLocal: false, isDefinition: true, align: 16)
!877 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 800, elements: !109)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !812, file: !877, line: 752, type: !881, isLocal: false, isDefinition: true, align: 32)
!881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !882)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !883)
!883 = !{!884, !885, !886, !887, !893, !894}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !882, file: !152, line: 380, baseType: !155, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !882, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !882, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !882, file: !152, line: 386, baseType: !888, size: 32, offset: 96)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !890)
!890 = !{!891, !892}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !889, file: !152, line: 359, baseType: !163, size: 8)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !889, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !882, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !882, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !812, file: !877, line: 752, type: !897, isLocal: true, isDefinition: true, align: 32)
!897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !898)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !899)
!899 = !{!900, !905}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !898, file: !143, line: 60, baseType: !901, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = !DISubroutineType(types: !903)
!903 = !{!103, !904}
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !898, file: !143, line: 65, baseType: !904, size: 32, offset: 32)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !812, file: !877, line: 752, type: !889, isLocal: true, isDefinition: true, align: 8)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !821, line: 100, size: 224, elements: !909)
!909 = !{!910, !916, !917, !926, !931, !936, !942}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !908, file: !821, line: 101, baseType: !911, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !821, line: 76, baseType: !912)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!103, !904, !915}
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !821, line: 56, baseType: !102)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !908, file: !821, line: 102, baseType: !911, size: 32, offset: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !908, file: !821, line: 103, baseType: !918, size: 32, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !821, line: 83, baseType: !919)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{!103, !904, !915, !922, !102}
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !821, line: 72, baseType: !923)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DISubroutineType(types: !925)
!925 = !{null, !904, !915, !102}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !908, file: !821, line: 104, baseType: !927, size: 32, offset: 96)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !821, line: 79, baseType: !928)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 32)
!929 = !DISubroutineType(types: !930)
!930 = !{!103, !904, !915, !873}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !908, file: !821, line: 105, baseType: !932, size: 32, offset: 128)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !821, line: 88, baseType: !933)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!934 = !DISubroutineType(types: !935)
!935 = !{!820, !904, !915}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !908, file: !821, line: 106, baseType: !937, size: 32, offset: 160)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !821, line: 92, baseType: !938)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!939 = !DISubroutineType(types: !940)
!940 = !{!103, !904, !915, !941}
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !821, line: 64, baseType: !102)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !908, file: !821, line: 107, baseType: !943, size: 32, offset: 192)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !821, line: 96, baseType: !944)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DISubroutineType(types: !946)
!946 = !{!103, !904, !915, !102}
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "debug_hook_in", scope: !949, file: !953, line: 43, type: !1145, isLocal: true, isDefinition: true)
!949 = distinct !DICompileUnit(language: DW_LANG_C99, file: !950, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !951, retainedTypes: !960, globals: !1040, splitDebugInlining: false, nameTableKind: None)
!950 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!951 = !{!30, !952}
!952 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !953, line: 214, baseType: !32, size: 32, elements: !954)
!953 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!954 = !{!955, !956, !957, !958, !959}
!955 = !DIEnumerator(name: "ESC_ESC", value: 0)
!956 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!957 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!958 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!959 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!960 = !{!102, !103, !961, !32, !24}
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 32)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !964)
!964 = !{!965, !984, !988, !992, !1005, !1010, !1014, !1018, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !963, file: !212, line: 365, baseType: !966, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 32)
!967 = !DISubroutineType(types: !968)
!968 = !{!103, !969, !233}
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !971)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !972)
!972 = !{!973, !974, !975, !976, !982, !983}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !971, file: !152, line: 380, baseType: !155, size: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !971, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !971, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !971, file: !152, line: 386, baseType: !977, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !979)
!979 = !{!980, !981}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !978, file: !152, line: 359, baseType: !163, size: 8)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !978, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !971, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !971, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !963, file: !212, line: 366, baseType: !985, size: 32, offset: 32)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DISubroutineType(types: !987)
!987 = !{null, !969, !164}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !963, file: !212, line: 374, baseType: !989, size: 32, offset: 64)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = !DISubroutineType(types: !991)
!991 = !{!103, !969}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !963, file: !212, line: 377, baseType: !993, size: 32, offset: 96)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = !DISubroutineType(types: !995)
!995 = !{!103, !969, !996}
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !998)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !999)
!999 = !{!1000, !1001, !1002, !1003, !1004}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !998, file: !212, line: 123, baseType: !132, size: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !998, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !998, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !998, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !998, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !963, file: !212, line: 379, baseType: !1006, size: 32, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 32)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!103, !969, !1009}
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !963, file: !212, line: 384, baseType: !1011, size: 32, offset: 160)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!103, !969, !264, !103}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !963, file: !212, line: 393, baseType: !1015, size: 32, offset: 192)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 32)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!103, !969, !270, !271}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !963, file: !212, line: 402, baseType: !1019, size: 32, offset: 224)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{null, !969}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !963, file: !212, line: 405, baseType: !1019, size: 32, offset: 256)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !963, file: !212, line: 408, baseType: !989, size: 32, offset: 288)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !963, file: !212, line: 411, baseType: !1019, size: 32, offset: 320)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !963, file: !212, line: 414, baseType: !1019, size: 32, offset: 352)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !963, file: !212, line: 417, baseType: !989, size: 32, offset: 384)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !963, file: !212, line: 420, baseType: !989, size: 32, offset: 416)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !963, file: !212, line: 423, baseType: !1019, size: 32, offset: 448)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !963, file: !212, line: 426, baseType: !1019, size: 32, offset: 480)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !963, file: !212, line: 429, baseType: !989, size: 32, offset: 512)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !963, file: !212, line: 432, baseType: !989, size: 32, offset: 544)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !963, file: !212, line: 435, baseType: !1033, size: 32, offset: 576)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{null, !969, !1036, !102}
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !1037)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{null, !969, !102}
!1040 = !{!1041, !947, !1048, !1090, !1092, !1098, !1105, !1108, !1133, !1137, !1139, !1141, !1143}
!1041 = !DIGlobalVariableExpression(var: !1042, expr: !DIExpression())
!1042 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !949, file: !953, line: 603, type: !1043, isLocal: true, isDefinition: true, align: 32)
!1043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1044)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1045)
!1045 = !{!1046, !1047}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1044, file: !143, line: 60, baseType: !989, size: 32)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1044, file: !143, line: 65, baseType: !969, size: 32, offset: 32)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "avail_queue", scope: !949, file: !953, line: 108, type: !1050, isLocal: true, isDefinition: true)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !312, line: 2208, size: 128, elements: !1052)
!1052 = !{!1053}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1051, file: !312, line: 2209, baseType: !1054, size: 128)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !312, line: 1709, size: 128, elements: !1055)
!1055 = !{!1056, !1069, !1071}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1054, file: !312, line: 1710, baseType: !1057, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !1058, line: 46, baseType: !1059)
!1058 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !1058, line: 41, size: 64, elements: !1060)
!1060 = !{!1061, !1068}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1059, file: !1058, line: 42, baseType: !1062, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !1058, line: 39, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !1058, line: 35, size: 32, elements: !1065)
!1065 = !{!1066}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1064, file: !1058, line: 36, baseType: !1067, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !1058, line: 32, baseType: !132)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1059, file: !1058, line: 43, baseType: !1062, size: 32, offset: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1054, file: !312, line: 1711, baseType: !1070, offset: 64)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1054, file: !312, line: 1712, baseType: !1072, size: 64, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !1073)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !1074)
!1074 = !{!1075}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1073, file: !316, line: 232, baseType: !1076, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !1077)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !1078)
!1078 = !{!1079, !1085}
!1079 = !DIDerivedType(tag: DW_TAG_member, scope: !1077, file: !321, line: 38, baseType: !1080, size: 32)
!1080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1077, file: !321, line: 38, size: 32, elements: !1081)
!1081 = !{!1082, !1084}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1080, file: !321, line: 39, baseType: !1083, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1080, file: !321, line: 40, baseType: !1083, size: 32)
!1085 = !DIDerivedType(tag: DW_TAG_member, scope: !1077, file: !321, line: 42, baseType: !1086, size: 32, offset: 32)
!1086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1077, file: !321, line: 42, size: 32, elements: !1087)
!1087 = !{!1088, !1089}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1086, file: !321, line: 43, baseType: !1083, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1086, file: !321, line: 44, baseType: !1083, size: 32)
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "lines_queue", scope: !949, file: !953, line: 109, type: !1050, isLocal: true, isDefinition: true)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "completion_cb", scope: !949, file: !953, line: 110, type: !1094, isLocal: true, isDefinition: true)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!163, !1097, !163}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "debug_hook_out", scope: !949, file: !953, line: 54, type: !1100, isLocal: true, isDefinition: true)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_out_debug_hook_t", file: !1102, line: 40, baseType: !1103)
!1102 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/uart_console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!103, !108}
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !949, file: !953, line: 38, type: !1107, isLocal: true, isDefinition: true)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "cmd", scope: !1110, file: !953, line: 435, type: !1121, isLocal: true, isDefinition: true)
!1110 = distinct !DISubprogram(name: "uart_console_isr", scope: !953, file: !953, line: 428, type: !1038, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !1111)
!1111 = !{!1112, !1113, !1114, !1116, !1117}
!1112 = !DILocalVariable(name: "unused", arg: 1, scope: !1110, file: !953, line: 428, type: !969)
!1113 = !DILocalVariable(name: "user_data", arg: 2, scope: !1110, file: !953, line: 428, type: !102)
!1114 = !DILocalVariable(name: "byte", scope: !1115, file: !953, line: 436, type: !163)
!1115 = distinct !DILexicalBlock(scope: !1110, file: !953, line: 434, column: 48)
!1116 = !DILocalVariable(name: "rx", scope: !1115, file: !953, line: 437, type: !103)
!1117 = !DILocalVariable(name: "ret", scope: !1118, file: !953, line: 461, type: !102)
!1118 = distinct !DILexicalBlock(scope: !1119, file: !953, line: 461, column: 10)
!1119 = distinct !DILexicalBlock(scope: !1120, file: !953, line: 460, column: 13)
!1120 = distinct !DILexicalBlock(scope: !1115, file: !953, line: 460, column: 7)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !1123, line: 21, size: 1088, elements: !1124)
!1123 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1124 = !{!1125, !1128, !1129}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1122, file: !1123, line: 23, baseType: !1126, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !1127)
!1127 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1122, file: !1123, line: 25, baseType: !163, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1122, file: !1123, line: 27, baseType: !1130, size: 1024, offset: 40)
!1130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1024, elements: !1131)
!1131 = !{!1132}
!1132 = !DISubrange(count: 128)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "esc_state", scope: !949, file: !953, line: 228, type: !1135, isLocal: true, isDefinition: true)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1136, line: 22, baseType: !1127)
!1136 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "ansi_val", scope: !949, file: !953, line: 229, type: !32, isLocal: true, isDefinition: true)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !949, file: !953, line: 229, type: !32, isLocal: true, isDefinition: true)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "cur", scope: !949, file: !953, line: 230, type: !163, isLocal: true, isDefinition: true)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "end", scope: !949, file: !953, line: 230, type: !163, isLocal: true, isDefinition: true)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_in_debug_hook_t", file: !1102, line: 45, baseType: !1146)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!103, !163}
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1151, file: !1322, line: 762, type: !1431, isLocal: true, isDefinition: true)
!1151 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1152, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1153, retainedTypes: !1171, globals: !1319, splitDebugInlining: false, nameTableKind: None)
!1152 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!1153 = !{!30, !1154, !1160, !1165, !820}
!1154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1155, line: 506, baseType: !32, size: 32, elements: !1156)
!1155 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1156 = !{!1157, !1158, !1159}
!1157 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1158 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1159 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1155, line: 512, baseType: !32, size: 32, elements: !1161)
!1161 = !{!1162, !1163, !1164}
!1162 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1163 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1164 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !727, line: 43, baseType: !32, size: 32, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1170}
!1167 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1168 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1169 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1170 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1171 = !{!102, !103, !1172, !1242, !1247, !1207, !1160, !1154, !1252, !1253, !132, !1267, !1222, !1097, !1279, !1280}
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1174)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1155, line: 523, size: 288, elements: !1175)
!1175 = !{!1176, !1197, !1203, !1208, !1212, !1213, !1214, !1218, !1238}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1174, file: !1155, line: 524, baseType: !1177, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!103, !1180, !1195, !1196}
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187, !1193, !1194}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1182, file: !152, line: 380, baseType: !155, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1182, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1182, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1182, file: !152, line: 386, baseType: !1188, size: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1190)
!1190 = !{!1191, !1192}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1189, file: !152, line: 359, baseType: !163, size: 8)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1189, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1182, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1182, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1155, line: 237, baseType: !163)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1155, line: 257, baseType: !132)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1174, file: !1155, line: 530, baseType: !1198, size: 32, offset: 32)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!103, !1180, !1201}
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1155, line: 229, baseType: !132)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1174, file: !1155, line: 532, baseType: !1204, size: 32, offset: 64)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!103, !1180, !1207, !1202}
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1155, line: 216, baseType: !132)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1174, file: !1155, line: 535, baseType: !1209, size: 32, offset: 96)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!103, !1180, !1207}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1174, file: !1155, line: 537, baseType: !1209, size: 32, offset: 128)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1174, file: !1155, line: 539, baseType: !1209, size: 32, offset: 160)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1174, file: !1155, line: 541, baseType: !1215, size: 32, offset: 192)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 32)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!103, !1180, !1195, !1154, !1160}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1174, file: !1155, line: 544, baseType: !1219, size: 32, offset: 224)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!103, !1180, !1222, !166}
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1155, line: 478, size: 96, elements: !1224)
!1224 = !{!1225, !1232, !1237}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1223, file: !1155, line: 482, baseType: !1226, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1227, line: 33, baseType: !1228)
!1227 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1227, line: 29, size: 32, elements: !1229)
!1229 = !{!1230}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1228, file: !1227, line: 30, baseType: !1231, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1223, file: !1155, line: 485, baseType: !1233, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1155, line: 464, baseType: !1234)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{null, !1180, !1222, !1207}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1223, file: !1155, line: 493, baseType: !1207, size: 32, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1174, file: !1155, line: 547, baseType: !1239, size: 32, offset: 256)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!132, !1180}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1155, line: 428, size: 32, elements: !1245)
!1245 = !{!1246}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1244, file: !1155, line: 434, baseType: !1207, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1155, line: 441, size: 32, elements: !1250)
!1250 = !{!1251}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1249, file: !1155, line: 447, baseType: !1207, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !127, line: 469, baseType: !1255)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 458, size: 320, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1255, file: !127, line: 460, baseType: !131, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1255, file: !127, line: 461, baseType: !131, size: 32, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1255, file: !127, line: 462, baseType: !131, size: 32, offset: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1255, file: !127, line: 463, baseType: !131, size: 32, offset: 96)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1255, file: !127, line: 464, baseType: !131, size: 32, offset: 128)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1255, file: !127, line: 465, baseType: !131, size: 32, offset: 160)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1255, file: !127, line: 466, baseType: !131, size: 32, offset: 192)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1255, file: !127, line: 467, baseType: !131, size: 32, offset: 224)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1255, file: !127, line: 468, baseType: !1266, size: 64, offset: 256)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 64, elements: !397)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !127, line: 484, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 475, size: 384, elements: !1270)
!1270 = !{!1271, !1272, !1273, !1275, !1276, !1277, !1278}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1269, file: !127, line: 477, baseType: !131, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1269, file: !127, line: 478, baseType: !131, size: 32, offset: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1269, file: !127, line: 479, baseType: !1274, size: 128, offset: 64)
!1274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 128, elements: !688)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1269, file: !127, line: 480, baseType: !843, size: 64, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1269, file: !127, line: 481, baseType: !131, size: 32, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1269, file: !127, line: 482, baseType: !843, size: 64, offset: 288)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1269, file: !127, line: 483, baseType: !131, size: 32, offset: 352)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1282)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !821, line: 100, size: 224, elements: !1283)
!1283 = !{!1284, !1289, !1290, !1299, !1304, !1309, !1314}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1282, file: !821, line: 101, baseType: !1285, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !821, line: 76, baseType: !1286)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!103, !1180, !915}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1282, file: !821, line: 102, baseType: !1285, size: 32, offset: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1282, file: !821, line: 103, baseType: !1291, size: 32, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !821, line: 83, baseType: !1292)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!103, !1180, !915, !1295, !102}
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !821, line: 72, baseType: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{null, !1180, !915, !102}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1282, file: !821, line: 104, baseType: !1300, size: 32, offset: 96)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !821, line: 79, baseType: !1301)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!103, !1180, !915, !873}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1282, file: !821, line: 105, baseType: !1305, size: 32, offset: 128)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !821, line: 88, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!820, !1180, !915}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1282, file: !821, line: 106, baseType: !1310, size: 32, offset: 160)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !821, line: 92, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!103, !1180, !915, !941}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1282, file: !821, line: 107, baseType: !1315, size: 32, offset: 192)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !821, line: 96, baseType: !1316)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 32)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!103, !1180, !915, !102}
!1319 = !{!1320, !1326, !1328, !1338, !1340, !1342, !1344, !1346, !1348, !1350, !1355, !1357, !1359, !1361, !1363, !1365, !1367, !1369, !1371, !1373, !1375, !1377, !1379, !1381, !1383, !1397, !1399, !1401, !1403, !1405, !1407, !1409, !1411, !1413, !1415, !1417, !1419, !1421, !1423, !1425, !1149, !1427, !1429, !1442, !1444, !1446, !1448, !1450, !1452}
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1151, file: !1322, line: 762, type: !1323, isLocal: false, isDefinition: true, align: 16)
!1322 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 80, elements: !1324)
!1324 = !{!1325}
!1325 = !DISubrange(count: 5)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1151, file: !1322, line: 762, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1151, file: !1322, line: 762, type: !1330, isLocal: true, isDefinition: true, align: 32)
!1330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1331)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1332)
!1332 = !{!1333, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1331, file: !143, line: 60, baseType: !1334, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 32)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!103, !1180}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1331, file: !143, line: 65, baseType: !1180, size: 32, offset: 32)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1151, file: !1322, line: 766, type: !1323, isLocal: false, isDefinition: true, align: 16)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1151, file: !1322, line: 766, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1151, file: !1322, line: 766, type: !1330, isLocal: true, isDefinition: true, align: 32)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1151, file: !1322, line: 770, type: !1323, isLocal: false, isDefinition: true, align: 16)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1151, file: !1322, line: 770, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1151, file: !1322, line: 770, type: !1330, isLocal: true, isDefinition: true, align: 32)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1151, file: !1322, line: 774, type: !1352, isLocal: false, isDefinition: true, align: 16)
!1352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 144, elements: !1353)
!1353 = !{!1354}
!1354 = !DISubrange(count: 9)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1151, file: !1322, line: 774, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1151, file: !1322, line: 774, type: !1330, isLocal: true, isDefinition: true, align: 32)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1151, file: !1322, line: 778, type: !1323, isLocal: false, isDefinition: true, align: 16)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1151, file: !1322, line: 778, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1151, file: !1322, line: 778, type: !1330, isLocal: true, isDefinition: true, align: 32)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1151, file: !1322, line: 782, type: !1323, isLocal: false, isDefinition: true, align: 16)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1151, file: !1322, line: 782, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1151, file: !1322, line: 782, type: !1330, isLocal: true, isDefinition: true, align: 32)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1151, file: !1322, line: 786, type: !1323, isLocal: false, isDefinition: true, align: 16)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1151, file: !1322, line: 786, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1151, file: !1322, line: 786, type: !1330, isLocal: true, isDefinition: true, align: 32)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1151, file: !1322, line: 790, type: !1323, isLocal: false, isDefinition: true, align: 16)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1151, file: !1322, line: 790, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1151, file: !1322, line: 790, type: !1330, isLocal: true, isDefinition: true, align: 32)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1151, file: !1322, line: 762, type: !1385, isLocal: true, isDefinition: true)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1386, line: 237, size: 128, elements: !1387)
!1386 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1387 = !{!1388, !1389, !1390}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1385, file: !1386, line: 239, baseType: !1249, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1385, file: !1386, line: 241, baseType: !1180, size: 32, offset: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1385, file: !1386, line: 243, baseType: !1391, size: 64, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1227, line: 40, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1227, line: 35, size: 64, elements: !1393)
!1393 = !{!1394, !1396}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1392, file: !1227, line: 36, baseType: !1395, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1392, file: !1227, line: 37, baseType: !1395, size: 32, offset: 32)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1151, file: !1322, line: 762, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1151, file: !1322, line: 766, type: !1385, isLocal: true, isDefinition: true)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1151, file: !1322, line: 766, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1151, file: !1322, line: 770, type: !1385, isLocal: true, isDefinition: true)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1151, file: !1322, line: 770, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1151, file: !1322, line: 774, type: !1385, isLocal: true, isDefinition: true)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1151, file: !1322, line: 774, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1151, file: !1322, line: 778, type: !1385, isLocal: true, isDefinition: true)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1151, file: !1322, line: 778, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1151, file: !1322, line: 782, type: !1385, isLocal: true, isDefinition: true)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1151, file: !1322, line: 782, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1151, file: !1322, line: 786, type: !1385, isLocal: true, isDefinition: true)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1151, file: !1322, line: 786, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1151, file: !1322, line: 790, type: !1385, isLocal: true, isDefinition: true)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1151, file: !1322, line: 790, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1151, file: !1322, line: 656, type: !1173, isLocal: true, isDefinition: true)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1151, file: !1322, line: 766, type: !1431, isLocal: true, isDefinition: true)
!1431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1432)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1386, line: 224, size: 160, elements: !1433)
!1433 = !{!1434, !1435, !1436, !1437}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1432, file: !1386, line: 226, baseType: !1244, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1432, file: !1386, line: 228, baseType: !873, size: 32, offset: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1432, file: !1386, line: 230, baseType: !103, size: 32, offset: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1432, file: !1386, line: 231, baseType: !1438, size: 64, offset: 96)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !869, line: 343, size: 64, elements: !1439)
!1439 = !{!1440, !1441}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1438, file: !869, line: 344, baseType: !132, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1438, file: !869, line: 345, baseType: !132, size: 32, offset: 32)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1151, file: !1322, line: 770, type: !1431, isLocal: true, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1151, file: !1322, line: 774, type: !1431, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1151, file: !1322, line: 778, type: !1431, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1151, file: !1322, line: 782, type: !1431, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1151, file: !1322, line: 786, type: !1431, isLocal: true, isDefinition: true)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1151, file: !1322, line: 790, type: !1431, isLocal: true, isDefinition: true)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1456, file: !1627, line: 1914, type: !1727, isLocal: true, isDefinition: true)
!1456 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1457, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1458, retainedTypes: !1491, globals: !1624, splitDebugInlining: false, nameTableKind: None)
!1457 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!1458 = !{!30, !1459, !1466, !1473, !1480, !1486, !820}
!1459 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !212, line: 47, baseType: !32, size: 32, elements: !1460)
!1460 = !{!1461, !1462, !1463, !1464, !1465}
!1461 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1462 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1463 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1464 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1465 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1466 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !212, line: 75, baseType: !32, size: 32, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472}
!1468 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1469 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1470 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1471 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1472 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !212, line: 92, baseType: !32, size: 32, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1478, !1479}
!1475 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1476 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1477 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1478 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1479 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1480 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !212, line: 84, baseType: !32, size: 32, elements: !1481)
!1481 = !{!1482, !1483, !1484, !1485}
!1482 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1483 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1484 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1485 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1486 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !212, line: 107, baseType: !32, size: 32, elements: !1487)
!1487 = !{!1488, !1489, !1490}
!1488 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1489 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1490 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1491 = !{!102, !103, !1492, !164, !163, !1571, !132, !915, !1582, !340, !1621, !1623}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1494)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !1495)
!1495 = !{!1496, !1515, !1519, !1523, !1536, !1541, !1545, !1549, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1494, file: !212, line: 365, baseType: !1497, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!103, !1500, !233}
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507, !1513, !1514}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1502, file: !152, line: 380, baseType: !155, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1502, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1502, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1502, file: !152, line: 386, baseType: !1508, size: 32, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1510)
!1510 = !{!1511, !1512}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1509, file: !152, line: 359, baseType: !163, size: 8)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1509, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1502, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1502, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1494, file: !212, line: 366, baseType: !1516, size: 32, offset: 32)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{null, !1500, !164}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1494, file: !212, line: 374, baseType: !1520, size: 32, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!103, !1500}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1494, file: !212, line: 377, baseType: !1524, size: 32, offset: 96)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!103, !1500, !1527}
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !1530)
!1530 = !{!1531, !1532, !1533, !1534, !1535}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1529, file: !212, line: 123, baseType: !132, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1529, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1529, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1529, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1529, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1494, file: !212, line: 379, baseType: !1537, size: 32, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!103, !1500, !1540}
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1494, file: !212, line: 384, baseType: !1542, size: 32, offset: 160)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 32)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!103, !1500, !264, !103}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1494, file: !212, line: 393, baseType: !1546, size: 32, offset: 192)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!103, !1500, !270, !271}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1494, file: !212, line: 402, baseType: !1550, size: 32, offset: 224)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{null, !1500}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1494, file: !212, line: 405, baseType: !1550, size: 32, offset: 256)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1494, file: !212, line: 408, baseType: !1520, size: 32, offset: 288)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1494, file: !212, line: 411, baseType: !1550, size: 32, offset: 320)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1494, file: !212, line: 414, baseType: !1550, size: 32, offset: 352)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1494, file: !212, line: 417, baseType: !1520, size: 32, offset: 384)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1494, file: !212, line: 420, baseType: !1520, size: 32, offset: 416)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1494, file: !212, line: 423, baseType: !1550, size: 32, offset: 448)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1494, file: !212, line: 426, baseType: !1550, size: 32, offset: 480)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1494, file: !212, line: 429, baseType: !1520, size: 32, offset: 512)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1494, file: !212, line: 432, baseType: !1520, size: 32, offset: 544)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1494, file: !212, line: 435, baseType: !1564, size: 32, offset: 576)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{null, !1500, !1567, !102}
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !1568)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{null, !1500, !102}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !127, line: 783, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 774, size: 224, elements: !1574)
!1574 = !{!1575, !1576, !1577, !1578, !1579, !1580, !1581}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1573, file: !127, line: 776, baseType: !131, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1573, file: !127, line: 777, baseType: !131, size: 32, offset: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1573, file: !127, line: 778, baseType: !131, size: 32, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1573, file: !127, line: 779, baseType: !131, size: 32, offset: 96)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1573, file: !127, line: 780, baseType: !131, size: 32, offset: 128)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1573, file: !127, line: 781, baseType: !131, size: 32, offset: 160)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1573, file: !127, line: 782, baseType: !131, size: 32, offset: 192)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !821, line: 100, size: 224, elements: !1585)
!1585 = !{!1586, !1591, !1592, !1601, !1606, !1611, !1616}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1584, file: !821, line: 101, baseType: !1587, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !821, line: 76, baseType: !1588)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!103, !1500, !915}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1584, file: !821, line: 102, baseType: !1587, size: 32, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1584, file: !821, line: 103, baseType: !1593, size: 32, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !821, line: 83, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!103, !1500, !915, !1597, !102}
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !821, line: 72, baseType: !1598)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{null, !1500, !915, !102}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1584, file: !821, line: 104, baseType: !1602, size: 32, offset: 96)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !821, line: 79, baseType: !1603)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!103, !1500, !915, !873}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1584, file: !821, line: 105, baseType: !1607, size: 32, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !821, line: 88, baseType: !1608)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!820, !1500, !915}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1584, file: !821, line: 106, baseType: !1612, size: 32, offset: 160)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !821, line: 92, baseType: !1613)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!103, !1500, !915, !941}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1584, file: !821, line: 107, baseType: !1617, size: 32, offset: 192)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !821, line: 96, baseType: !1618)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 32)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{!103, !1500, !915, !102}
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1622)
!1622 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!1624 = !{!1625, !1631, !1633, !1640, !1642, !1644, !1646, !1648, !1650, !1652, !1654, !1656, !1658, !1660, !1662, !1664, !1454, !1666, !1674, !1697, !1700, !1703, !1714, !1716, !1725, !1744, !1746, !1748, !1750, !1752, !1757, !1759, !1761, !1763, !1765, !1767, !1769, !1774, !1776, !1778, !1780, !1782, !1784, !1786, !1791}
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1456, file: !1627, line: 1914, type: !1628, isLocal: false, isDefinition: true, align: 16)
!1627 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 128, elements: !1629)
!1629 = !{!1630}
!1630 = !DISubrange(count: 8)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1456, file: !1627, line: 1914, type: !1501, isLocal: false, isDefinition: true, align: 32)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1456, file: !1627, line: 1914, type: !1635, isLocal: true, isDefinition: true, align: 32)
!1635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1636)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1637)
!1637 = !{!1638, !1639}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1636, file: !143, line: 60, baseType: !1520, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1636, file: !143, line: 65, baseType: !1500, size: 32, offset: 32)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1456, file: !1627, line: 1914, type: !1628, isLocal: false, isDefinition: true, align: 16)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1456, file: !1627, line: 1914, type: !1501, isLocal: false, isDefinition: true, align: 32)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1456, file: !1627, line: 1914, type: !1635, isLocal: true, isDefinition: true, align: 32)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1456, file: !1627, line: 1914, type: !1628, isLocal: false, isDefinition: true, align: 16)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1456, file: !1627, line: 1914, type: !1501, isLocal: false, isDefinition: true, align: 32)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1456, file: !1627, line: 1914, type: !1635, isLocal: true, isDefinition: true, align: 32)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1456, file: !1627, line: 1914, type: !1628, isLocal: false, isDefinition: true, align: 16)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1456, file: !1627, line: 1914, type: !1501, isLocal: false, isDefinition: true, align: 32)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1456, file: !1627, line: 1914, type: !1635, isLocal: true, isDefinition: true, align: 32)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1456, file: !1627, line: 1914, type: !1509, isLocal: true, isDefinition: true, align: 8)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1456, file: !1627, line: 1914, type: !1509, isLocal: true, isDefinition: true, align: 8)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1456, file: !1627, line: 1914, type: !1509, isLocal: true, isDefinition: true, align: 8)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1456, file: !1627, line: 1914, type: !1509, isLocal: true, isDefinition: true, align: 8)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1456, file: !1627, line: 1914, type: !1668, isLocal: true, isDefinition: true)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1669, size: 64, elements: !496)
!1669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1670)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !869, line: 343, size: 64, elements: !1671)
!1671 = !{!1672, !1673}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1670, file: !869, line: 344, baseType: !132, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1670, file: !869, line: 345, baseType: !132, size: 32, offset: 32)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1456, file: !1627, line: 1914, type: !1676, isLocal: true, isDefinition: true)
!1676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1678, line: 60, size: 64, elements: !1679)
!1678 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1679 = !{!1680, !1696}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1677, file: !1678, line: 69, baseType: !1681, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1683)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1678, line: 50, size: 64, elements: !1684)
!1684 = !{!1685, !1694, !1695}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1683, file: !1678, line: 52, baseType: !1686, size: 32)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1689, line: 37, baseType: !1690)
!1689 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1689, line: 32, size: 64, elements: !1691)
!1691 = !{!1692, !1693}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1690, file: !1689, line: 34, baseType: !132, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1690, file: !1689, line: 36, baseType: !132, size: 32, offset: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1683, file: !1678, line: 54, baseType: !163, size: 8, offset: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1683, file: !1678, line: 56, baseType: !163, size: 8, offset: 40)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1677, file: !1678, line: 71, baseType: !163, size: 8, offset: 32)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1456, file: !1627, line: 1914, type: !1699, isLocal: true, isDefinition: true)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1682, size: 64, elements: !496)
!1700 = !DIGlobalVariableExpression(var: !1701, expr: !DIExpression())
!1701 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1456, file: !1627, line: 1914, type: !1702, isLocal: true, isDefinition: true)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1687, size: 128, elements: !397)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1705, file: !1627, line: 1914, type: !1708, isLocal: true, isDefinition: true, align: 32)
!1705 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1627, file: !1627, line: 1914, type: !1551, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !1706)
!1706 = !{!1707}
!1707 = !DILocalVariable(name: "dev", arg: 1, scope: !1705, file: !1627, line: 1914, type: !1500)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1713}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1708, file: !10, line: 55, baseType: !344, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1708, file: !10, line: 57, baseType: !344, size: 32, offset: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1708, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1708, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1456, file: !1627, line: 1539, type: !1493, isLocal: true, isDefinition: true)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1456, file: !1627, line: 1914, type: !1718, isLocal: true, isDefinition: true)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1719, line: 74, size: 128, elements: !1720)
!1719 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1720 = !{!1721, !1722, !1723, !1724}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1718, file: !1719, line: 76, baseType: !132, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1718, file: !1719, line: 78, baseType: !1500, size: 32, offset: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1718, file: !1719, line: 80, baseType: !1567, size: 32, offset: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1718, file: !1719, line: 81, baseType: !102, size: 32, offset: 96)
!1725 = !DIGlobalVariableExpression(var: !1726, expr: !DIExpression())
!1726 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1456, file: !1627, line: 1914, type: !1727, isLocal: true, isDefinition: true)
!1727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1728)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1719, line: 22, size: 256, elements: !1729)
!1729 = !{!1730, !1731, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1742}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1728, file: !1719, line: 24, baseType: !1571, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1728, file: !1719, line: 26, baseType: !1732, size: 32, offset: 32)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1728, file: !1719, line: 28, baseType: !356, size: 32, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1728, file: !1719, line: 30, baseType: !166, size: 8, offset: 96)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1728, file: !1719, line: 32, baseType: !103, size: 32, offset: 128)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1728, file: !1719, line: 34, baseType: !166, size: 8, offset: 160)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1728, file: !1719, line: 36, baseType: !166, size: 8, offset: 168)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1728, file: !1719, line: 38, baseType: !166, size: 8, offset: 176)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1728, file: !1719, line: 40, baseType: !166, size: 8, offset: 184)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1728, file: !1719, line: 41, baseType: !1741, size: 32, offset: 192)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1728, file: !1719, line: 44, baseType: !1743, size: 32, offset: 224)
!1743 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !212, line: 150, baseType: !1550)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1456, file: !1627, line: 1914, type: !1668, isLocal: true, isDefinition: true)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1456, file: !1627, line: 1914, type: !1676, isLocal: true, isDefinition: true)
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1456, file: !1627, line: 1914, type: !1699, isLocal: true, isDefinition: true)
!1750 = !DIGlobalVariableExpression(var: !1751, expr: !DIExpression())
!1751 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1456, file: !1627, line: 1914, type: !1702, isLocal: true, isDefinition: true)
!1752 = !DIGlobalVariableExpression(var: !1753, expr: !DIExpression())
!1753 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_1", scope: !1754, file: !1627, line: 1914, type: !1708, isLocal: true, isDefinition: true, align: 32)
!1754 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_1", scope: !1627, file: !1627, line: 1914, type: !1551, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !1755)
!1755 = !{!1756}
!1756 = !DILocalVariable(name: "dev", arg: 1, scope: !1754, file: !1627, line: 1914, type: !1500)
!1757 = !DIGlobalVariableExpression(var: !1758, expr: !DIExpression())
!1758 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1456, file: !1627, line: 1914, type: !1718, isLocal: true, isDefinition: true)
!1759 = !DIGlobalVariableExpression(var: !1760, expr: !DIExpression())
!1760 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1456, file: !1627, line: 1914, type: !1727, isLocal: true, isDefinition: true)
!1761 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression())
!1762 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1456, file: !1627, line: 1914, type: !1668, isLocal: true, isDefinition: true)
!1763 = !DIGlobalVariableExpression(var: !1764, expr: !DIExpression())
!1764 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1456, file: !1627, line: 1914, type: !1676, isLocal: true, isDefinition: true)
!1765 = !DIGlobalVariableExpression(var: !1766, expr: !DIExpression())
!1766 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1456, file: !1627, line: 1914, type: !1699, isLocal: true, isDefinition: true)
!1767 = !DIGlobalVariableExpression(var: !1768, expr: !DIExpression())
!1768 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1456, file: !1627, line: 1914, type: !1702, isLocal: true, isDefinition: true)
!1769 = !DIGlobalVariableExpression(var: !1770, expr: !DIExpression())
!1770 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_2", scope: !1771, file: !1627, line: 1914, type: !1708, isLocal: true, isDefinition: true, align: 32)
!1771 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_2", scope: !1627, file: !1627, line: 1914, type: !1551, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !1772)
!1772 = !{!1773}
!1773 = !DILocalVariable(name: "dev", arg: 1, scope: !1771, file: !1627, line: 1914, type: !1500)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1456, file: !1627, line: 1914, type: !1718, isLocal: true, isDefinition: true)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1456, file: !1627, line: 1914, type: !1727, isLocal: true, isDefinition: true)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1456, file: !1627, line: 1914, type: !1668, isLocal: true, isDefinition: true)
!1780 = !DIGlobalVariableExpression(var: !1781, expr: !DIExpression())
!1781 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1456, file: !1627, line: 1914, type: !1676, isLocal: true, isDefinition: true)
!1782 = !DIGlobalVariableExpression(var: !1783, expr: !DIExpression())
!1783 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1456, file: !1627, line: 1914, type: !1699, isLocal: true, isDefinition: true)
!1784 = !DIGlobalVariableExpression(var: !1785, expr: !DIExpression())
!1785 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1456, file: !1627, line: 1914, type: !1702, isLocal: true, isDefinition: true)
!1786 = !DIGlobalVariableExpression(var: !1787, expr: !DIExpression())
!1787 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_3", scope: !1788, file: !1627, line: 1914, type: !1708, isLocal: true, isDefinition: true, align: 32)
!1788 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_3", scope: !1627, file: !1627, line: 1914, type: !1551, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !1789)
!1789 = !{!1790}
!1790 = !DILocalVariable(name: "dev", arg: 1, scope: !1788, file: !1627, line: 1914, type: !1500)
!1791 = !DIGlobalVariableExpression(var: !1792, expr: !DIExpression())
!1792 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1456, file: !1627, line: 1914, type: !1718, isLocal: true, isDefinition: true)
!1793 = !DIGlobalVariableExpression(var: !1794, expr: !DIExpression())
!1794 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1795, file: !1875, line: 65, type: !131, isLocal: true, isDefinition: true)
!1795 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1796, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1797, retainedTypes: !1798, globals: !1872, splitDebugInlining: false, nameTableKind: None)
!1796 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!1797 = !{!576}
!1798 = !{!1799, !1801, !344, !163, !132, !1809, !1840}
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1800, line: 46, baseType: !432)
!1800 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !507, line: 770, baseType: !1803)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 764, size: 128, elements: !1804)
!1804 = !{!1805, !1806, !1807, !1808}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1803, file: !507, line: 766, baseType: !131, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1803, file: !507, line: 767, baseType: !131, size: 32, offset: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1803, file: !507, line: 768, baseType: !131, size: 32, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1803, file: !507, line: 769, baseType: !511, size: 32, offset: 96)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !1812)
!1812 = !{!1813, !1815, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1830, !1835, !1839}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1811, file: !507, line: 413, baseType: !1814, size: 256)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 256, elements: !1629)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1811, file: !507, line: 414, baseType: !1816, size: 768, offset: 256)
!1816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 768, elements: !1817)
!1817 = !{!1818}
!1818 = !DISubrange(count: 24)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1811, file: !507, line: 415, baseType: !1814, size: 256, offset: 1024)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1811, file: !507, line: 416, baseType: !1816, size: 768, offset: 1280)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1811, file: !507, line: 417, baseType: !1814, size: 256, offset: 2048)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1811, file: !507, line: 418, baseType: !1816, size: 768, offset: 2304)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1811, file: !507, line: 419, baseType: !1814, size: 256, offset: 3072)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1811, file: !507, line: 420, baseType: !1816, size: 768, offset: 3328)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1811, file: !507, line: 421, baseType: !1814, size: 256, offset: 4096)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1811, file: !507, line: 422, baseType: !1827, size: 1792, offset: 4352)
!1827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 1792, elements: !1828)
!1828 = !{!1829}
!1829 = !DISubrange(count: 56)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1811, file: !507, line: 423, baseType: !1831, size: 1920, offset: 6144)
!1831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1832, size: 1920, elements: !1833)
!1832 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !163)
!1833 = !{!1834}
!1834 = !DISubrange(count: 240)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1811, file: !507, line: 424, baseType: !1836, size: 20608, offset: 8064)
!1836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 20608, elements: !1837)
!1837 = !{!1838}
!1838 = !DISubrange(count: 644)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1811, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1848, !1849, !1850, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1863, !1864, !1865, !1867, !1869, !1871}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1842, file: !507, line: 447, baseType: !511, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1842, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1842, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1842, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1842, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1842, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1842, file: !507, line: 453, baseType: !1851, size: 96, offset: 192)
!1851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1832, size: 96, elements: !1852)
!1852 = !{!1853}
!1853 = !DISubrange(count: 12)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1842, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1842, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1842, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1842, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1842, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1842, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1842, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1842, file: !507, line: 461, baseType: !1862, size: 64, offset: 512)
!1862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 64, elements: !397)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1842, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1842, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1842, file: !507, line: 464, baseType: !1866, size: 128, offset: 640)
!1866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 128, elements: !688)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1842, file: !507, line: 465, baseType: !1868, size: 160, offset: 768)
!1868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 160, elements: !1324)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1842, file: !507, line: 466, baseType: !1870, size: 160, offset: 928)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 160, elements: !1324)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1842, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!1872 = !{!1873, !1899, !1902, !1904, !1906, !1793}
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression())
!1874 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1795, file: !1875, line: 285, type: !1876, isLocal: true, isDefinition: true, align: 32)
!1875 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1877)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1878)
!1878 = !{!1879, !1898}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1877, file: !143, line: 60, baseType: !1880, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!103, !1883}
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1886)
!1886 = !{!1887, !1888, !1889, !1890, !1896, !1897}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1885, file: !152, line: 380, baseType: !155, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1885, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1885, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1885, file: !152, line: 386, baseType: !1891, size: 32, offset: 96)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1893)
!1893 = !{!1894, !1895}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1892, file: !152, line: 359, baseType: !163, size: 8)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1892, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1885, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1885, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1877, file: !143, line: 65, baseType: !1883, size: 32, offset: 32)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "lock", scope: !1795, file: !1875, line: 34, type: !1901, isLocal: true, isDefinition: true)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "last_load", scope: !1795, file: !1875, line: 36, type: !132, isLocal: true, isDefinition: true)
!1904 = !DIGlobalVariableExpression(var: !1905, expr: !DIExpression())
!1905 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1795, file: !1875, line: 48, type: !132, isLocal: true, isDefinition: true)
!1906 = !DIGlobalVariableExpression(var: !1907, expr: !DIExpression())
!1907 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1795, file: !1875, line: 54, type: !132, isLocal: true, isDefinition: true)
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression())
!1909 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1910, file: !1992, line: 22, type: !1994, isLocal: true, isDefinition: true)
!1910 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1911, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1912, retainedTypes: !1913, globals: !1989, splitDebugInlining: false, nameTableKind: None)
!1911 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!1912 = !{!1154, !1160}
!1913 = !{!1914, !1978, !1983, !1207, !1160, !1154, !1988, !102}
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 32)
!1915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1916)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1155, line: 523, size: 288, elements: !1917)
!1917 = !{!1918, !1937, !1941, !1945, !1949, !1950, !1951, !1955, !1974}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1916, file: !1155, line: 524, baseType: !1919, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 32)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{!103, !1922, !1195, !1196}
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1925)
!1925 = !{!1926, !1927, !1928, !1929, !1935, !1936}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1924, file: !152, line: 380, baseType: !155, size: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1924, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1924, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1924, file: !152, line: 386, baseType: !1930, size: 32, offset: 96)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1932)
!1932 = !{!1933, !1934}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1931, file: !152, line: 359, baseType: !163, size: 8)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1931, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1924, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1924, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1916, file: !1155, line: 530, baseType: !1938, size: 32, offset: 32)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 32)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!103, !1922, !1201}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1916, file: !1155, line: 532, baseType: !1942, size: 32, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 32)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{!103, !1922, !1207, !1202}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1916, file: !1155, line: 535, baseType: !1946, size: 32, offset: 96)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!103, !1922, !1207}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1916, file: !1155, line: 537, baseType: !1946, size: 32, offset: 128)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1916, file: !1155, line: 539, baseType: !1946, size: 32, offset: 160)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1916, file: !1155, line: 541, baseType: !1952, size: 32, offset: 192)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 32)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{!103, !1922, !1195, !1154, !1160}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1916, file: !1155, line: 544, baseType: !1956, size: 32, offset: 224)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!103, !1922, !1959, !166}
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 32)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1155, line: 478, size: 96, elements: !1961)
!1961 = !{!1962, !1968, !1973}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1960, file: !1155, line: 482, baseType: !1963, size: 32)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1227, line: 33, baseType: !1964)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1227, line: 29, size: 32, elements: !1965)
!1965 = !{!1966}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1964, file: !1227, line: 30, baseType: !1967, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1960, file: !1155, line: 485, baseType: !1969, size: 32, offset: 32)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1155, line: 464, baseType: !1970)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 32)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{null, !1922, !1959, !1207}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1960, file: !1155, line: 493, baseType: !1207, size: 32, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1916, file: !1155, line: 547, baseType: !1975, size: 32, offset: 256)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{!132, !1922}
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1980)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1155, line: 428, size: 32, elements: !1981)
!1981 = !{!1982}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1980, file: !1155, line: 434, baseType: !1207, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1155, line: 441, size: 32, elements: !1986)
!1986 = !{!1987}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1985, file: !1155, line: 447, baseType: !1207, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1989 = !{!1990, !1908}
!1990 = !DIGlobalVariableExpression(var: !1991, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1991 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1910, file: !1992, line: 37, type: !1993, isLocal: true, isDefinition: true)
!1992 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !356)
!1994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1995, size: 352, elements: !1996)
!1995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1922)
!1996 = !{!1997}
!1997 = !DISubrange(count: 11)
!1998 = !DIGlobalVariableExpression(var: !1999, expr: !DIExpression())
!1999 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2000, file: !2044, line: 139, type: !2050, isLocal: false, isDefinition: true)
!2000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2002, globals: !2041, splitDebugInlining: false, nameTableKind: None)
!2001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2002 = !{!2003}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 586, baseType: !2005)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 550, size: 1216, elements: !2006)
!2006 = !{!2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2005, file: !127, line: 552, baseType: !131, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2005, file: !127, line: 553, baseType: !131, size: 32, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2005, file: !127, line: 554, baseType: !131, size: 32, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2005, file: !127, line: 555, baseType: !131, size: 32, offset: 96)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2005, file: !127, line: 556, baseType: !131, size: 32, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2005, file: !127, line: 557, baseType: !131, size: 32, offset: 160)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2005, file: !127, line: 558, baseType: !131, size: 32, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2005, file: !127, line: 559, baseType: !132, size: 32, offset: 224)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2005, file: !127, line: 560, baseType: !131, size: 32, offset: 256)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2005, file: !127, line: 561, baseType: !131, size: 32, offset: 288)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2005, file: !127, line: 562, baseType: !843, size: 64, offset: 320)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2005, file: !127, line: 563, baseType: !131, size: 32, offset: 384)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2005, file: !127, line: 564, baseType: !131, size: 32, offset: 416)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2005, file: !127, line: 565, baseType: !131, size: 32, offset: 448)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2005, file: !127, line: 566, baseType: !132, size: 32, offset: 480)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2005, file: !127, line: 567, baseType: !131, size: 32, offset: 512)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2005, file: !127, line: 568, baseType: !131, size: 32, offset: 544)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2005, file: !127, line: 569, baseType: !843, size: 64, offset: 576)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2005, file: !127, line: 570, baseType: !131, size: 32, offset: 640)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2005, file: !127, line: 571, baseType: !131, size: 32, offset: 672)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2005, file: !127, line: 572, baseType: !131, size: 32, offset: 704)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2005, file: !127, line: 573, baseType: !132, size: 32, offset: 736)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2005, file: !127, line: 574, baseType: !131, size: 32, offset: 768)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2005, file: !127, line: 575, baseType: !131, size: 32, offset: 800)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2005, file: !127, line: 576, baseType: !843, size: 64, offset: 832)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2005, file: !127, line: 577, baseType: !131, size: 32, offset: 896)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2005, file: !127, line: 578, baseType: !131, size: 32, offset: 928)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2005, file: !127, line: 579, baseType: !843, size: 64, offset: 960)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2005, file: !127, line: 580, baseType: !131, size: 32, offset: 1024)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2005, file: !127, line: 581, baseType: !131, size: 32, offset: 1056)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2005, file: !127, line: 582, baseType: !131, size: 32, offset: 1088)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2005, file: !127, line: 583, baseType: !131, size: 32, offset: 1120)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2005, file: !127, line: 584, baseType: !131, size: 32, offset: 1152)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2005, file: !127, line: 585, baseType: !131, size: 32, offset: 1184)
!2041 = !{!2042, !2045, !1998}
!2042 = !DIGlobalVariableExpression(var: !2043, expr: !DIExpression())
!2043 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2000, file: !2044, line: 137, type: !132, isLocal: false, isDefinition: true)
!2044 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2045 = !DIGlobalVariableExpression(var: !2046, expr: !DIExpression())
!2046 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2000, file: !2044, line: 138, type: !2047, isLocal: false, isDefinition: true)
!2047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 128, elements: !2048)
!2048 = !{!2049}
!2049 = !DISubrange(count: 16)
!2050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 64, elements: !1629)
!2051 = !DIGlobalVariableExpression(var: !2052, expr: !DIExpression())
!2052 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2053, file: !2056, line: 23, type: !271, isLocal: false, isDefinition: true)
!2053 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2054, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !2055, splitDebugInlining: false, nameTableKind: None)
!2054 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2055 = !{!2051}
!2056 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2057 = !DIGlobalVariableExpression(var: !2058, expr: !DIExpression())
!2058 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2059, file: !2063, line: 86, type: !2312, isLocal: false, isDefinition: true, align: 512)
!2059 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2060, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2061, retainedTypes: !2070, globals: !2143, splitDebugInlining: false, nameTableKind: None)
!2060 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2061 = !{!2062, !30, !576}
!2062 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2063, line: 63, baseType: !32, size: 32, elements: !2064)
!2063 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2064 = !{!2065, !2066, !2067, !2068, !2069}
!2065 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2066 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2067 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2068 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2069 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2070 = !{!356, !102, !103, !2071, !1097, !132, !2101, !344, !163, !2126}
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2073)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2074, line: 51, size: 64, elements: !2075)
!2074 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2075 = !{!2076, !2096}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2073, file: !2074, line: 52, baseType: !2077, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2074, line: 38, baseType: !2078)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 32)
!2079 = !DISubroutineType(types: !2080)
!2080 = !{!103, !2081, !270, !340}
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2083)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !2084)
!2084 = !{!2085, !2086, !2087, !2088, !2094, !2095}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2083, file: !152, line: 380, baseType: !155, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2083, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2083, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2083, file: !152, line: 386, baseType: !2089, size: 32, offset: 96)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 32)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !2091)
!2091 = !{!2092, !2093}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2090, file: !152, line: 359, baseType: !163, size: 8)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2090, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2083, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2083, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2073, file: !2074, line: 53, baseType: !2097, size: 32, offset: 32)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2074, line: 47, baseType: !2098)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{!103, !2081, !270, !340, !132}
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2103)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2104)
!2104 = !{!2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2103, file: !507, line: 447, baseType: !511, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2103, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2103, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2103, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2103, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2103, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2103, file: !507, line: 453, baseType: !1851, size: 96, offset: 192)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2103, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2103, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2103, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2103, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2103, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2103, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2103, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2103, file: !507, line: 461, baseType: !1862, size: 64, offset: 512)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2103, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2103, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2103, file: !507, line: 464, baseType: !1866, size: 128, offset: 640)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2103, file: !507, line: 465, baseType: !1868, size: 160, offset: 768)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2103, file: !507, line: 466, baseType: !1870, size: 160, offset: 928)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2103, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !2129)
!2129 = !{!2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2128, file: !507, line: 413, baseType: !1814, size: 256)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2128, file: !507, line: 414, baseType: !1816, size: 768, offset: 256)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2128, file: !507, line: 415, baseType: !1814, size: 256, offset: 1024)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2128, file: !507, line: 416, baseType: !1816, size: 768, offset: 1280)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2128, file: !507, line: 417, baseType: !1814, size: 256, offset: 2048)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2128, file: !507, line: 418, baseType: !1816, size: 768, offset: 2304)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2128, file: !507, line: 419, baseType: !1814, size: 256, offset: 3072)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2128, file: !507, line: 420, baseType: !1816, size: 768, offset: 3328)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2128, file: !507, line: 421, baseType: !1814, size: 256, offset: 4096)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2128, file: !507, line: 422, baseType: !1827, size: 1792, offset: 4352)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2128, file: !507, line: 423, baseType: !1831, size: 1920, offset: 6144)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2128, file: !507, line: 424, baseType: !1836, size: 20608, offset: 8064)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2128, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!2143 = !{!2144, !2266, !2275, !2277, !2057, !2280, !2282, !2287}
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(name: "_kernel", scope: !2059, file: !2063, line: 40, type: !2146, isLocal: false, isDefinition: true)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !316, line: 158, size: 288, elements: !2147)
!2147 = !{!2148, !2261}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2146, file: !316, line: 159, baseType: !2149, size: 192)
!2149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2150, size: 192, elements: !496)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !316, line: 100, size: 192, elements: !2151)
!2151 = !{!2152, !2153, !2154, !2255, !2256, !2257, !2258}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2150, file: !316, line: 102, baseType: !132, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2150, file: !316, line: 105, baseType: !1097, size: 32, offset: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2150, file: !316, line: 108, baseType: !2155, size: 32, offset: 64)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 32)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2157)
!2157 = !{!2158, !2216, !2228, !2229, !2230, !2231, !2237, !2250}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2156, file: !367, line: 247, baseType: !2159, size: 384)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2160)
!2160 = !{!2161, !2185, !2192, !2193, !2194, !2203, !2204, !2205}
!2161 = !DIDerivedType(tag: DW_TAG_member, scope: !2159, file: !367, line: 60, baseType: !2162, size: 64)
!2162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2159, file: !367, line: 60, size: 64, elements: !2163)
!2163 = !{!2164, !2179}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2162, file: !367, line: 61, baseType: !2165, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2166)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2167)
!2167 = !{!2168, !2174}
!2168 = !DIDerivedType(tag: DW_TAG_member, scope: !2166, file: !321, line: 38, baseType: !2169, size: 32)
!2169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2166, file: !321, line: 38, size: 32, elements: !2170)
!2170 = !{!2171, !2173}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2169, file: !321, line: 39, baseType: !2172, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2169, file: !321, line: 40, baseType: !2172, size: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, scope: !2166, file: !321, line: 42, baseType: !2175, size: 32, offset: 32)
!2175 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2166, file: !321, line: 42, size: 32, elements: !2176)
!2176 = !{!2177, !2178}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2175, file: !321, line: 43, baseType: !2172, size: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2175, file: !321, line: 44, baseType: !2172, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2162, file: !367, line: 62, baseType: !2180, size: 64)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !2181)
!2181 = !{!2182}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2180, file: !392, line: 50, baseType: !2183, size: 64)
!2183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2184, size: 64, elements: !397)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2159, file: !367, line: 68, baseType: !2186, size: 32, offset: 64)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !2188)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !2189)
!2189 = !{!2190}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2188, file: !316, line: 232, baseType: !2191, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2166)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2159, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2159, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!2194 = !DIDerivedType(tag: DW_TAG_member, scope: !2159, file: !367, line: 90, baseType: !2195, size: 16, offset: 112)
!2195 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2159, file: !367, line: 90, size: 16, elements: !2196)
!2196 = !{!2197, !2202}
!2197 = !DIDerivedType(tag: DW_TAG_member, scope: !2195, file: !367, line: 91, baseType: !2198, size: 16)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2195, file: !367, line: 91, size: 16, elements: !2199)
!2199 = !{!2200, !2201}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2198, file: !367, line: 96, baseType: !415, size: 8)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2198, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2195, file: !367, line: 100, baseType: !340, size: 16)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2159, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2159, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2159, file: !367, line: 131, baseType: !2206, size: 192, offset: 192)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2207)
!2207 = !{!2208, !2209, !2215}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2206, file: !316, line: 245, baseType: !2165, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2206, file: !316, line: 246, baseType: !2210, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2211)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!2212 = !DISubroutineType(types: !2213)
!2213 = !{null, !2214}
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 32)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2206, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2156, file: !367, line: 250, baseType: !2217, size: 288, offset: 384)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2218)
!2218 = !{!2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2217, file: !436, line: 26, baseType: !132, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2217, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2217, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2217, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2217, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2217, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2217, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2217, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2217, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2156, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2156, file: !367, line: 256, baseType: !2187, size: 64, offset: 704)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2156, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2156, file: !367, line: 300, baseType: !2232, size: 96, offset: 800)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2233)
!2233 = !{!2234, !2235, !2236}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2232, file: !367, line: 153, baseType: !22, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2232, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2232, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2156, file: !367, line: 325, baseType: !2238, size: 32, offset: 896)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 32)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !2240)
!2240 = !{!2241, !2247, !2248}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2239, file: !312, line: 5074, baseType: !2242, size: 96)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !2243)
!2243 = !{!2244, !2245, !2246}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2242, file: !462, line: 57, baseType: !465, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2242, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2242, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2239, file: !312, line: 5075, baseType: !2187, size: 64, offset: 96)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2239, file: !312, line: 5076, baseType: !2249, offset: 160)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2156, file: !367, line: 343, baseType: !2251, size: 64, offset: 928)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2252)
!2252 = !{!2253, !2254}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2251, file: !436, line: 63, baseType: !132, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2251, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2150, file: !316, line: 111, baseType: !2155, size: 32, offset: 96)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2150, file: !316, line: 124, baseType: !103, size: 32, offset: 128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2150, file: !316, line: 127, baseType: !163, size: 8, offset: 160)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2150, file: !316, line: 153, baseType: !2259, offset: 168)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2260, line: 33, elements: !473)
!2260 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2146, file: !316, line: 170, baseType: !2262, size: 96, offset: 192)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !316, line: 83, size: 96, elements: !2263)
!2263 = !{!2264, !2265}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2262, file: !316, line: 86, baseType: !2155, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2262, file: !316, line: 90, baseType: !2191, size: 64, offset: 32)
!2266 = !DIGlobalVariableExpression(var: !2267, expr: !DIExpression())
!2267 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2059, file: !2063, line: 43, type: !2268, isLocal: false, isDefinition: true, align: 512)
!2268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2269, size: 8704, elements: !2273)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2270, line: 47, size: 8, elements: !2271)
!2270 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2271 = !{!2272}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2269, file: !2270, line: 48, baseType: !108, size: 8)
!2273 = !{!2274}
!2274 = !DISubrange(count: 1088)
!2275 = !DIGlobalVariableExpression(var: !2276, expr: !DIExpression())
!2276 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2059, file: !2063, line: 44, type: !2156, isLocal: false, isDefinition: true)
!2277 = !DIGlobalVariableExpression(var: !2278, expr: !DIExpression())
!2278 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2059, file: !2063, line: 48, type: !2279, isLocal: false, isDefinition: true)
!2279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2156, size: 1024, elements: !496)
!2280 = !DIGlobalVariableExpression(var: !2281, expr: !DIExpression())
!2281 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2059, file: !2063, line: 217, type: !166, isLocal: false, isDefinition: true)
!2282 = !DIGlobalVariableExpression(var: !2283, expr: !DIExpression())
!2283 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2059, file: !2063, line: 50, type: !2284, isLocal: true, isDefinition: true, align: 512)
!2284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2269, size: 3072, elements: !2285)
!2285 = !{!497, !2286}
!2286 = !DISubrange(count: 384)
!2287 = !DIGlobalVariableExpression(var: !2288, expr: !DIExpression())
!2288 = distinct !DIGlobalVariable(name: "levels", scope: !2289, file: !2063, line: 232, type: !2309, isLocal: true, isDefinition: true)
!2289 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2063, file: !2063, line: 230, type: !2290, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !2292)
!2290 = !DISubroutineType(types: !2291)
!2291 = !{null, !2062}
!2292 = !{!2293, !2294, !2304, !2308}
!2293 = !DILocalVariable(name: "level", arg: 1, scope: !2289, file: !2063, line: 230, type: !2062)
!2294 = !DILocalVariable(name: "entry", scope: !2289, file: !2063, line: 244, type: !2295)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2297)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !2298)
!2298 = !{!2299, !2303}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2297, file: !143, line: 60, baseType: !2300, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 32)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{!103, !2081}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2297, file: !143, line: 65, baseType: !2081, size: 32, offset: 32)
!2304 = !DILocalVariable(name: "dev", scope: !2305, file: !2063, line: 247, type: !2081)
!2305 = distinct !DILexicalBlock(scope: !2306, file: !2063, line: 246, column: 64)
!2306 = distinct !DILexicalBlock(scope: !2307, file: !2063, line: 246, column: 2)
!2307 = distinct !DILexicalBlock(scope: !2289, file: !2063, line: 246, column: 2)
!2308 = !DILocalVariable(name: "rc", scope: !2305, file: !2063, line: 248, type: !103)
!2309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2295, size: 192, elements: !2310)
!2310 = !{!2311}
!2311 = !DISubrange(count: 6)
!2312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2269, size: 16896, elements: !2313)
!2313 = !{!497, !2314}
!2314 = !DISubrange(count: 2112)
!2315 = !DIGlobalVariableExpression(var: !2316, expr: !DIExpression())
!2316 = distinct !DIGlobalVariable(name: "states_str", scope: !2317, file: !2318, line: 276, type: !2439, isLocal: true, isDefinition: true)
!2317 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2318, file: !2318, line: 271, type: !2319, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !2430)
!2318 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2319 = !DISubroutineType(types: !2320)
!2320 = !{!155, !2321, !1097, !356}
!2321 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !2322)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 32)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2324)
!2324 = !{!2325, !2383, !2395, !2396, !2397, !2398, !2404, !2417}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2323, file: !367, line: 247, baseType: !2326, size: 384)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2327)
!2327 = !{!2328, !2352, !2359, !2360, !2361, !2370, !2371, !2372}
!2328 = !DIDerivedType(tag: DW_TAG_member, scope: !2326, file: !367, line: 60, baseType: !2329, size: 64)
!2329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2326, file: !367, line: 60, size: 64, elements: !2330)
!2330 = !{!2331, !2346}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2329, file: !367, line: 61, baseType: !2332, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2333)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2334)
!2334 = !{!2335, !2341}
!2335 = !DIDerivedType(tag: DW_TAG_member, scope: !2333, file: !321, line: 38, baseType: !2336, size: 32)
!2336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2333, file: !321, line: 38, size: 32, elements: !2337)
!2337 = !{!2338, !2340}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2336, file: !321, line: 39, baseType: !2339, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2336, file: !321, line: 40, baseType: !2339, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, scope: !2333, file: !321, line: 42, baseType: !2342, size: 32, offset: 32)
!2342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2333, file: !321, line: 42, size: 32, elements: !2343)
!2343 = !{!2344, !2345}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2342, file: !321, line: 43, baseType: !2339, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2342, file: !321, line: 44, baseType: !2339, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2329, file: !367, line: 62, baseType: !2347, size: 64)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !2348)
!2348 = !{!2349}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2347, file: !392, line: 50, baseType: !2350, size: 64)
!2350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2351, size: 64, elements: !397)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2326, file: !367, line: 68, baseType: !2353, size: 32, offset: 64)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !2355)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !2356)
!2356 = !{!2357}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2355, file: !316, line: 232, baseType: !2358, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2333)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2326, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2326, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!2361 = !DIDerivedType(tag: DW_TAG_member, scope: !2326, file: !367, line: 90, baseType: !2362, size: 16, offset: 112)
!2362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2326, file: !367, line: 90, size: 16, elements: !2363)
!2363 = !{!2364, !2369}
!2364 = !DIDerivedType(tag: DW_TAG_member, scope: !2362, file: !367, line: 91, baseType: !2365, size: 16)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2362, file: !367, line: 91, size: 16, elements: !2366)
!2366 = !{!2367, !2368}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2365, file: !367, line: 96, baseType: !415, size: 8)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2365, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2362, file: !367, line: 100, baseType: !340, size: 16)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2326, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2326, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2326, file: !367, line: 131, baseType: !2373, size: 192, offset: 192)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2374)
!2374 = !{!2375, !2376, !2382}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2373, file: !316, line: 245, baseType: !2332, size: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2373, file: !316, line: 246, baseType: !2377, size: 32, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2378)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!2379 = !DISubroutineType(types: !2380)
!2380 = !{null, !2381}
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2373, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2323, file: !367, line: 250, baseType: !2384, size: 288, offset: 384)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2385)
!2385 = !{!2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2384, file: !436, line: 26, baseType: !132, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2384, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2384, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2384, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2384, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2384, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2384, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2384, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2384, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2323, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2323, file: !367, line: 256, baseType: !2354, size: 64, offset: 704)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2323, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2323, file: !367, line: 300, baseType: !2399, size: 96, offset: 800)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2400)
!2400 = !{!2401, !2402, !2403}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2399, file: !367, line: 153, baseType: !22, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2399, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2399, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2323, file: !367, line: 325, baseType: !2405, size: 32, offset: 896)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 32)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !2407)
!2407 = !{!2408, !2414, !2415}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2406, file: !312, line: 5074, baseType: !2409, size: 96)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !2410)
!2410 = !{!2411, !2412, !2413}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2409, file: !462, line: 57, baseType: !465, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2409, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2409, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2406, file: !312, line: 5075, baseType: !2354, size: 64, offset: 96)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2406, file: !312, line: 5076, baseType: !2416, offset: 160)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2323, file: !367, line: 343, baseType: !2418, size: 64, offset: 928)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2419)
!2419 = !{!2420, !2421}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2418, file: !436, line: 63, baseType: !132, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2418, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!2422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2424, globals: !2426, splitDebugInlining: false, nameTableKind: None)
!2423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2424 = !{!102, !155, !1799, !163, !103, !2425, !24, !356, !1097, !22, !132, !1621}
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 32)
!2426 = !{!2315, !2427}
!2427 = !DIGlobalVariableExpression(var: !2428, expr: !DIExpression())
!2428 = distinct !DIGlobalVariable(name: "states_sz", scope: !2317, file: !2318, line: 279, type: !2429, isLocal: true, isDefinition: true)
!2429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1993, size: 256, elements: !1629)
!2430 = !{!2431, !2432, !2433, !2434, !2435, !2436, !2437}
!2431 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2317, file: !2318, line: 271, type: !2321)
!2432 = !DILocalVariable(name: "buf", arg: 2, scope: !2317, file: !2318, line: 271, type: !1097)
!2433 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2317, file: !2318, line: 271, type: !356)
!2434 = !DILocalVariable(name: "off", scope: !2317, file: !2318, line: 273, type: !356)
!2435 = !DILocalVariable(name: "bit", scope: !2317, file: !2318, line: 274, type: !163)
!2436 = !DILocalVariable(name: "thread_state", scope: !2317, file: !2318, line: 275, type: !163)
!2437 = !DILocalVariable(name: "index", scope: !2438, file: !2318, line: 293, type: !163)
!2438 = distinct !DILexicalBlock(scope: !2317, file: !2318, line: 293, column: 2)
!2439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 256, elements: !1629)
!2440 = !DIGlobalVariableExpression(var: !2441, expr: !DIExpression())
!2441 = distinct !DIGlobalVariable(name: "lock", scope: !2442, file: !2461, line: 39, type: !2462, isLocal: true, isDefinition: true)
!2442 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2443, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2444, globals: !2460, splitDebugInlining: false, nameTableKind: None)
!2443 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2444 = !{!102, !166, !103, !2445}
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2447)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2448)
!2448 = !{!2449, !2455}
!2449 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !321, line: 38, baseType: !2450, size: 32)
!2450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !321, line: 38, size: 32, elements: !2451)
!2451 = !{!2452, !2454}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2450, file: !321, line: 39, baseType: !2453, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2450, file: !321, line: 40, baseType: !2453, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !321, line: 42, baseType: !2456, size: 32, offset: 32)
!2456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !321, line: 42, size: 32, elements: !2457)
!2457 = !{!2458, !2459}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2456, file: !321, line: 43, baseType: !2453, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2456, file: !321, line: 44, baseType: !2453, size: 32)
!2460 = !{!2440}
!2461 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2463 = !DIGlobalVariableExpression(var: !2464, expr: !DIExpression())
!2464 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2465, file: !2573, line: 56, type: !2562, isLocal: false, isDefinition: true)
!2465 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2466, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2467, globals: !2570, splitDebugInlining: false, nameTableKind: None)
!2466 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2467 = !{!2468, !1097, !102, !2568, !270, !1799, !344, !103, !132, !1621, !2569}
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 32)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2470)
!2470 = !{!2471, !2529, !2541, !2542, !2543, !2544, !2550, !2563}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2469, file: !367, line: 247, baseType: !2472, size: 384)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2473)
!2473 = !{!2474, !2498, !2505, !2506, !2507, !2516, !2517, !2518}
!2474 = !DIDerivedType(tag: DW_TAG_member, scope: !2472, file: !367, line: 60, baseType: !2475, size: 64)
!2475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2472, file: !367, line: 60, size: 64, elements: !2476)
!2476 = !{!2477, !2492}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2475, file: !367, line: 61, baseType: !2478, size: 64)
!2478 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2479)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2480)
!2480 = !{!2481, !2487}
!2481 = !DIDerivedType(tag: DW_TAG_member, scope: !2479, file: !321, line: 38, baseType: !2482, size: 32)
!2482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2479, file: !321, line: 38, size: 32, elements: !2483)
!2483 = !{!2484, !2486}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2482, file: !321, line: 39, baseType: !2485, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2482, file: !321, line: 40, baseType: !2485, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, scope: !2479, file: !321, line: 42, baseType: !2488, size: 32, offset: 32)
!2488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2479, file: !321, line: 42, size: 32, elements: !2489)
!2489 = !{!2490, !2491}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2488, file: !321, line: 43, baseType: !2485, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2488, file: !321, line: 44, baseType: !2485, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2475, file: !367, line: 62, baseType: !2493, size: 64)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !2494)
!2494 = !{!2495}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2493, file: !392, line: 50, baseType: !2496, size: 64)
!2496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2497, size: 64, elements: !397)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2472, file: !367, line: 68, baseType: !2499, size: 32, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !2501)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !2502)
!2502 = !{!2503}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2501, file: !316, line: 232, baseType: !2504, size: 64)
!2504 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2479)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2472, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2472, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!2507 = !DIDerivedType(tag: DW_TAG_member, scope: !2472, file: !367, line: 90, baseType: !2508, size: 16, offset: 112)
!2508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2472, file: !367, line: 90, size: 16, elements: !2509)
!2509 = !{!2510, !2515}
!2510 = !DIDerivedType(tag: DW_TAG_member, scope: !2508, file: !367, line: 91, baseType: !2511, size: 16)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2508, file: !367, line: 91, size: 16, elements: !2512)
!2512 = !{!2513, !2514}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2511, file: !367, line: 96, baseType: !415, size: 8)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2511, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2508, file: !367, line: 100, baseType: !340, size: 16)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2472, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2472, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2472, file: !367, line: 131, baseType: !2519, size: 192, offset: 192)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2520)
!2520 = !{!2521, !2522, !2528}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2519, file: !316, line: 245, baseType: !2478, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2519, file: !316, line: 246, baseType: !2523, size: 32, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2524)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 32)
!2525 = !DISubroutineType(types: !2526)
!2526 = !{null, !2527}
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2519, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2469, file: !367, line: 250, baseType: !2530, size: 288, offset: 384)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2531)
!2531 = !{!2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2530, file: !436, line: 26, baseType: !132, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2530, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2530, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2530, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2530, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2530, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2530, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2530, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2530, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2469, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2469, file: !367, line: 256, baseType: !2500, size: 64, offset: 704)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2469, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2469, file: !367, line: 300, baseType: !2545, size: 96, offset: 800)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2546)
!2546 = !{!2547, !2548, !2549}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2545, file: !367, line: 153, baseType: !22, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2545, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2545, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2469, file: !367, line: 325, baseType: !2551, size: 32, offset: 896)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 32)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !2553)
!2553 = !{!2554, !2560, !2561}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2552, file: !312, line: 5074, baseType: !2555, size: 96)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !2556)
!2556 = !{!2557, !2558, !2559}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2555, file: !462, line: 57, baseType: !465, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2555, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2555, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2552, file: !312, line: 5075, baseType: !2500, size: 64, offset: 96)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2552, file: !312, line: 5076, baseType: !2562, offset: 160)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2469, file: !367, line: 343, baseType: !2564, size: 64, offset: 928)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2565)
!2565 = !{!2566, !2567}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2564, file: !436, line: 63, baseType: !132, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2564, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 32)
!2570 = !{!2463, !2571, !2574, !2576}
!2571 = !DIGlobalVariableExpression(var: !2572, expr: !DIExpression())
!2572 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2465, file: !2573, line: 404, type: !103, isLocal: true, isDefinition: true)
!2573 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2574 = !DIGlobalVariableExpression(var: !2575, expr: !DIExpression())
!2575 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2465, file: !2573, line: 405, type: !103, isLocal: true, isDefinition: true)
!2576 = !DIGlobalVariableExpression(var: !2577, expr: !DIExpression())
!2577 = distinct !DIGlobalVariable(name: "pending_current", scope: !2465, file: !2573, line: 425, type: !2468, isLocal: true, isDefinition: true)
!2578 = !DIGlobalVariableExpression(var: !2579, expr: !DIExpression())
!2579 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2580, file: !2610, line: 15, type: !1621, isLocal: true, isDefinition: true)
!2580 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2581, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2582, globals: !2607, splitDebugInlining: false, nameTableKind: None)
!2581 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2582 = !{!1799, !102, !344, !132, !1621, !103, !2583, !1097, !432}
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 32)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2585)
!2585 = !{!2586, !2601, !2606}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2584, file: !316, line: 245, baseType: !2587, size: 64)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2588)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2589)
!2589 = !{!2590, !2596}
!2590 = !DIDerivedType(tag: DW_TAG_member, scope: !2588, file: !321, line: 38, baseType: !2591, size: 32)
!2591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2588, file: !321, line: 38, size: 32, elements: !2592)
!2592 = !{!2593, !2595}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2591, file: !321, line: 39, baseType: !2594, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2591, file: !321, line: 40, baseType: !2594, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, scope: !2588, file: !321, line: 42, baseType: !2597, size: 32, offset: 32)
!2597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2588, file: !321, line: 42, size: 32, elements: !2598)
!2598 = !{!2599, !2600}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2597, file: !321, line: 43, baseType: !2594, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2597, file: !321, line: 44, baseType: !2594, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2584, file: !316, line: 246, baseType: !2602, size: 32, offset: 64)
!2602 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2603)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 32)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{null, !2583}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2584, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2607 = !{!2578, !2608, !2612, !2614}
!2608 = !DIGlobalVariableExpression(var: !2609, expr: !DIExpression())
!2609 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2580, file: !2610, line: 19, type: !2611, isLocal: true, isDefinition: true)
!2610 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2612 = !DIGlobalVariableExpression(var: !2613, expr: !DIExpression())
!2613 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2580, file: !2610, line: 25, type: !103, isLocal: true, isDefinition: true)
!2614 = !DIGlobalVariableExpression(var: !2615, expr: !DIExpression())
!2615 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2580, file: !2610, line: 17, type: !2616, isLocal: true, isDefinition: true)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2588)
!2617 = !DIGlobalVariableExpression(var: !2618, expr: !DIExpression())
!2618 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2619, file: !2638, line: 55, type: !2639, isLocal: true, isDefinition: true, align: 32)
!2619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2621, globals: !2637, splitDebugInlining: false, nameTableKind: None)
!2620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2621 = !{!102, !1799, !103, !2622}
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2624)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2625)
!2625 = !{!2626, !2632}
!2626 = !DIDerivedType(tag: DW_TAG_member, scope: !2624, file: !321, line: 38, baseType: !2627, size: 32)
!2627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2624, file: !321, line: 38, size: 32, elements: !2628)
!2628 = !{!2629, !2631}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2627, file: !321, line: 39, baseType: !2630, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2627, file: !321, line: 40, baseType: !2630, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, scope: !2624, file: !321, line: 42, baseType: !2633, size: 32, offset: 32)
!2633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2624, file: !321, line: 42, size: 32, elements: !2634)
!2634 = !{!2635, !2636}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2633, file: !321, line: 43, baseType: !2630, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2633, file: !321, line: 44, baseType: !2630, size: 32)
!2637 = !{!2617}
!2638 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2640)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !2641)
!2641 = !{!2642, !2649}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2640, file: !143, line: 60, baseType: !2643, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 32)
!2644 = !DISubroutineType(types: !2645)
!2645 = !{!103, !2646}
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2648)
!2648 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !143, line: 48, flags: DIFlagFwdDecl)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2640, file: !143, line: 65, baseType: !2646, size: 32, offset: 32)
!2650 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2651, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2651 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2653, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2653 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2654 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2655, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2656, retainedTypes: !2664, splitDebugInlining: false, nameTableKind: None)
!2655 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2656 = !{!30, !2657}
!2657 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2658, line: 54, baseType: !32, size: 32, elements: !2659)
!2658 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2659 = !{!2660, !2661, !2662, !2663}
!2660 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2661 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2662 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2663 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2664 = !{!102, !356, !270, !24, !2665, !22, !2671, !103, !873, !2686}
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2658, line: 58, baseType: !2667)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2658, line: 58, size: 64, elements: !2668)
!2668 = !{!2669}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2667, file: !2658, line: 58, baseType: !2670, size: 64)
!2670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1629)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 32)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2658, line: 68, size: 128, elements: !2673)
!2673 = !{!2674, !2677, !2678, !2679}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2672, file: !2658, line: 69, baseType: !2675, size: 64)
!2675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2676, size: 64, elements: !397)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2658, line: 61, baseType: !132)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2672, file: !2658, line: 70, baseType: !2676, size: 32, offset: 64)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2672, file: !2658, line: 71, baseType: !132, size: 32, offset: 96)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2672, file: !2658, line: 77, baseType: !2680, offset: 128)
!2680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2681, elements: !2684)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2658, line: 64, size: 32, elements: !2682)
!2682 = !{!2683}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2681, file: !2658, line: 65, baseType: !2676, size: 32)
!2684 = !{!2685}
!2685 = !DISubrange(count: 0)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 32)
!2687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2688, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2689, retainedTypes: !2709, splitDebugInlining: false, nameTableKind: None)
!2688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2689 = !{!2690, !2698}
!2690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2691, line: 69, baseType: !32, size: 32, elements: !2692)
!2691 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2692 = !{!2693, !2694, !2695, !2696, !2697}
!2693 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2694 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2695 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2696 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2697 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2698 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2691, line: 56, baseType: !32, size: 32, elements: !2699)
!2699 = !{!2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708}
!2700 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2701 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2702 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2703 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2704 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2705 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2706 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2707 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2708 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2709 = !{!103, !2690, !2698, !2710, !416, !173, !2712, !2713, !164, !341, !155, !356, !102, !22, !32, !2715, !2716, !2717, !1127, !2718, !433, !2719, !2711, !2720, !2721, !2722, !2723}
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2691, line: 31, baseType: !2711)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !433)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !357, line: 329, baseType: !32)
!2713 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2691, line: 32, baseType: !2714)
!2714 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1622)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !357, line: 145, baseType: !103)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 32)
!2724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2725, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2725 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2726 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2727, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2728, splitDebugInlining: false, nameTableKind: None)
!2727 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2728 = !{!163, !102, !103, !2729, !1799, !132, !1621}
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2731)
!2731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !2732)
!2732 = !{!2733, !2752, !2756, !2760, !2773, !2778, !2782, !2786, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2731, file: !212, line: 365, baseType: !2734, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 32)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{!103, !2737, !233}
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2739)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !2740)
!2740 = !{!2741, !2742, !2743, !2744, !2750, !2751}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2739, file: !152, line: 380, baseType: !155, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2739, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2739, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2739, file: !152, line: 386, baseType: !2745, size: 32, offset: 96)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 32)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !2747)
!2747 = !{!2748, !2749}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2746, file: !152, line: 359, baseType: !163, size: 8)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2746, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2739, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2739, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2731, file: !212, line: 366, baseType: !2753, size: 32, offset: 32)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 32)
!2754 = !DISubroutineType(types: !2755)
!2755 = !{null, !2737, !164}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2731, file: !212, line: 374, baseType: !2757, size: 32, offset: 64)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{!103, !2737}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2731, file: !212, line: 377, baseType: !2761, size: 32, offset: 96)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 32)
!2762 = !DISubroutineType(types: !2763)
!2763 = !{!103, !2737, !2764}
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2766)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !2767)
!2767 = !{!2768, !2769, !2770, !2771, !2772}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2766, file: !212, line: 123, baseType: !132, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2766, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2766, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2766, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2766, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2731, file: !212, line: 379, baseType: !2774, size: 32, offset: 128)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 32)
!2775 = !DISubroutineType(types: !2776)
!2776 = !{!103, !2737, !2777}
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !2731, file: !212, line: 384, baseType: !2779, size: 32, offset: 160)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 32)
!2780 = !DISubroutineType(types: !2781)
!2781 = !{!103, !2737, !264, !103}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !2731, file: !212, line: 393, baseType: !2783, size: 32, offset: 192)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 32)
!2784 = !DISubroutineType(types: !2785)
!2785 = !{!103, !2737, !270, !271}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !2731, file: !212, line: 402, baseType: !2787, size: 32, offset: 224)
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 32)
!2788 = !DISubroutineType(types: !2789)
!2789 = !{null, !2737}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !2731, file: !212, line: 405, baseType: !2787, size: 32, offset: 256)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !2731, file: !212, line: 408, baseType: !2757, size: 32, offset: 288)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !2731, file: !212, line: 411, baseType: !2787, size: 32, offset: 320)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !2731, file: !212, line: 414, baseType: !2787, size: 32, offset: 352)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !2731, file: !212, line: 417, baseType: !2757, size: 32, offset: 384)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !2731, file: !212, line: 420, baseType: !2757, size: 32, offset: 416)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !2731, file: !212, line: 423, baseType: !2787, size: 32, offset: 448)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !2731, file: !212, line: 426, baseType: !2787, size: 32, offset: 480)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !2731, file: !212, line: 429, baseType: !2757, size: 32, offset: 512)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !2731, file: !212, line: 432, baseType: !2757, size: 32, offset: 544)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !2731, file: !212, line: 435, baseType: !2801, size: 32, offset: 576)
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 32)
!2802 = !DISubroutineType(types: !2803)
!2803 = !{null, !2737, !2804, !102}
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !2805)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 32)
!2806 = !DISubroutineType(types: !2807)
!2807 = !{null, !2737, !102}
!2808 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2809, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2810, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2809 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2810 = !{!2811, !30}
!2811 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2812, line: 27, baseType: !32, size: 32, elements: !2813)
!2812 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2813 = !{!2814, !2815, !2816, !2817, !2818}
!2814 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2815 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2816 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2817 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2818 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2820, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2821, retainedTypes: !2822, splitDebugInlining: false, nameTableKind: None)
!2820 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2821 = !{!576, !2811, !30}
!2822 = !{!771, !2823, !102, !103, !344, !132, !163, !2840}
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !2825)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !2826)
!2826 = !{!2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2825, file: !507, line: 413, baseType: !1814, size: 256)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2825, file: !507, line: 414, baseType: !1816, size: 768, offset: 256)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2825, file: !507, line: 415, baseType: !1814, size: 256, offset: 1024)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2825, file: !507, line: 416, baseType: !1816, size: 768, offset: 1280)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2825, file: !507, line: 417, baseType: !1814, size: 256, offset: 2048)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2825, file: !507, line: 418, baseType: !1816, size: 768, offset: 2304)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2825, file: !507, line: 419, baseType: !1814, size: 256, offset: 3072)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2825, file: !507, line: 420, baseType: !1816, size: 768, offset: 3328)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2825, file: !507, line: 421, baseType: !1814, size: 256, offset: 4096)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2825, file: !507, line: 422, baseType: !1827, size: 1792, offset: 4352)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2825, file: !507, line: 423, baseType: !1831, size: 1920, offset: 6144)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2825, file: !507, line: 424, baseType: !1836, size: 20608, offset: 8064)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2825, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2842)
!2842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2843)
!2843 = !{!2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2842, file: !507, line: 447, baseType: !511, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2842, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2842, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2842, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2842, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2842, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2842, file: !507, line: 453, baseType: !1851, size: 96, offset: 192)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2842, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2842, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2842, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2842, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2842, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2842, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2842, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2842, file: !507, line: 461, baseType: !1862, size: 64, offset: 512)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2842, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2842, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2842, file: !507, line: 464, baseType: !1866, size: 128, offset: 640)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2842, file: !507, line: 465, baseType: !1868, size: 160, offset: 768)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2842, file: !507, line: 466, baseType: !1870, size: 160, offset: 928)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2842, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2865 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2866, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2866 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2869, splitDebugInlining: false, nameTableKind: None)
!2868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2869 = !{!102, !103, !22, !2870}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2872)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2873)
!2873 = !{!2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2872, file: !507, line: 447, baseType: !511, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2872, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2872, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2872, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2872, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2872, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2872, file: !507, line: 453, baseType: !1851, size: 96, offset: 192)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2872, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2872, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2872, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2872, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2872, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2872, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2872, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2872, file: !507, line: 461, baseType: !1862, size: 64, offset: 512)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2872, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2872, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2872, file: !507, line: 464, baseType: !1866, size: 128, offset: 640)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2872, file: !507, line: 465, baseType: !1868, size: 160, offset: 768)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2872, file: !507, line: 466, baseType: !1870, size: 160, offset: 928)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2872, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2896, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2897, splitDebugInlining: false, nameTableKind: None)
!2896 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2897 = !{!2898, !102, !103}
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2900)
!2900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2901)
!2901 = !{!2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2900, file: !507, line: 447, baseType: !511, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2900, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2900, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2900, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2900, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2900, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2900, file: !507, line: 453, baseType: !1851, size: 96, offset: 192)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2900, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2900, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2900, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2900, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2900, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2900, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2900, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2900, file: !507, line: 461, baseType: !1862, size: 64, offset: 512)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2900, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2900, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2900, file: !507, line: 464, baseType: !1866, size: 128, offset: 640)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2900, file: !507, line: 465, baseType: !1868, size: 160, offset: 768)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2900, file: !507, line: 466, baseType: !1870, size: 160, offset: 928)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2900, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2925, splitDebugInlining: false, nameTableKind: None)
!2924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2925 = !{!2926, !132, !102, !103}
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 32)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2928, line: 98, size: 256, elements: !2929)
!2928 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2929 = !{!2930, !2935, !2940, !2945, !2950, !2955, !2960, !2965}
!2930 = !DIDerivedType(tag: DW_TAG_member, scope: !2927, file: !2928, line: 99, baseType: !2931, size: 32)
!2931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2927, file: !2928, line: 99, size: 32, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2931, file: !2928, line: 99, baseType: !132, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2931, file: !2928, line: 99, baseType: !132, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, scope: !2927, file: !2928, line: 100, baseType: !2936, size: 32, offset: 32)
!2936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2927, file: !2928, line: 100, size: 32, elements: !2937)
!2937 = !{!2938, !2939}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2936, file: !2928, line: 100, baseType: !132, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2936, file: !2928, line: 100, baseType: !132, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, scope: !2927, file: !2928, line: 101, baseType: !2941, size: 32, offset: 64)
!2941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2927, file: !2928, line: 101, size: 32, elements: !2942)
!2942 = !{!2943, !2944}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2941, file: !2928, line: 101, baseType: !132, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2941, file: !2928, line: 101, baseType: !132, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, scope: !2927, file: !2928, line: 102, baseType: !2946, size: 32, offset: 96)
!2946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2927, file: !2928, line: 102, size: 32, elements: !2947)
!2947 = !{!2948, !2949}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2946, file: !2928, line: 102, baseType: !132, size: 32)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2946, file: !2928, line: 102, baseType: !132, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, scope: !2927, file: !2928, line: 103, baseType: !2951, size: 32, offset: 128)
!2951 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2927, file: !2928, line: 103, size: 32, elements: !2952)
!2952 = !{!2953, !2954}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2951, file: !2928, line: 103, baseType: !132, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2951, file: !2928, line: 103, baseType: !132, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, scope: !2927, file: !2928, line: 104, baseType: !2956, size: 32, offset: 160)
!2956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2927, file: !2928, line: 104, size: 32, elements: !2957)
!2957 = !{!2958, !2959}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2956, file: !2928, line: 104, baseType: !132, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2956, file: !2928, line: 104, baseType: !132, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_member, scope: !2927, file: !2928, line: 105, baseType: !2961, size: 32, offset: 192)
!2961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2927, file: !2928, line: 105, size: 32, elements: !2962)
!2962 = !{!2963, !2964}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2961, file: !2928, line: 105, baseType: !132, size: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2961, file: !2928, line: 105, baseType: !132, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2927, file: !2928, line: 106, baseType: !132, size: 32, offset: 224)
!2966 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2967, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2810, retainedTypes: !2968, splitDebugInlining: false, nameTableKind: None)
!2967 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!2968 = !{!2969, !102, !103, !2994, !2686, !132}
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2971)
!2971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2972)
!2972 = !{!2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2971, file: !507, line: 447, baseType: !511, size: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2971, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2971, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2971, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2971, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2971, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2971, file: !507, line: 453, baseType: !1851, size: 96, offset: 192)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2971, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2971, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2971, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2971, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2971, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2971, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2971, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2971, file: !507, line: 461, baseType: !1862, size: 64, offset: 512)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2971, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2971, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2971, file: !507, line: 464, baseType: !1866, size: 128, offset: 640)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2971, file: !507, line: 465, baseType: !1868, size: 160, offset: 768)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2971, file: !507, line: 466, baseType: !1870, size: 160, offset: 928)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2971, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2928, line: 141, baseType: !2996)
!2996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2928, line: 97, size: 256, elements: !2997)
!2997 = !{!2998}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2996, file: !2928, line: 107, baseType: !2999, size: 256)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2928, line: 98, size: 256, elements: !3000)
!3000 = !{!3001, !3006, !3011, !3016, !3021, !3026, !3031, !3036}
!3001 = !DIDerivedType(tag: DW_TAG_member, scope: !2999, file: !2928, line: 99, baseType: !3002, size: 32)
!3002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2999, file: !2928, line: 99, size: 32, elements: !3003)
!3003 = !{!3004, !3005}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3002, file: !2928, line: 99, baseType: !132, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3002, file: !2928, line: 99, baseType: !132, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, scope: !2999, file: !2928, line: 100, baseType: !3007, size: 32, offset: 32)
!3007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2999, file: !2928, line: 100, size: 32, elements: !3008)
!3008 = !{!3009, !3010}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3007, file: !2928, line: 100, baseType: !132, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3007, file: !2928, line: 100, baseType: !132, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, scope: !2999, file: !2928, line: 101, baseType: !3012, size: 32, offset: 64)
!3012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2999, file: !2928, line: 101, size: 32, elements: !3013)
!3013 = !{!3014, !3015}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3012, file: !2928, line: 101, baseType: !132, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3012, file: !2928, line: 101, baseType: !132, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, scope: !2999, file: !2928, line: 102, baseType: !3017, size: 32, offset: 96)
!3017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2999, file: !2928, line: 102, size: 32, elements: !3018)
!3018 = !{!3019, !3020}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3017, file: !2928, line: 102, baseType: !132, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3017, file: !2928, line: 102, baseType: !132, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, scope: !2999, file: !2928, line: 103, baseType: !3022, size: 32, offset: 128)
!3022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2999, file: !2928, line: 103, size: 32, elements: !3023)
!3023 = !{!3024, !3025}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3022, file: !2928, line: 103, baseType: !132, size: 32)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3022, file: !2928, line: 103, baseType: !132, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, scope: !2999, file: !2928, line: 104, baseType: !3027, size: 32, offset: 160)
!3027 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2999, file: !2928, line: 104, size: 32, elements: !3028)
!3028 = !{!3029, !3030}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3027, file: !2928, line: 104, baseType: !132, size: 32)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3027, file: !2928, line: 104, baseType: !132, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, scope: !2999, file: !2928, line: 105, baseType: !3032, size: 32, offset: 192)
!3032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2999, file: !2928, line: 105, size: 32, elements: !3033)
!3033 = !{!3034, !3035}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3032, file: !2928, line: 105, baseType: !132, size: 32)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3032, file: !2928, line: 105, baseType: !132, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2999, file: !2928, line: 106, baseType: !132, size: 32, offset: 224)
!3037 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3038, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1797, retainedTypes: !3039, splitDebugInlining: false, nameTableKind: None)
!3038 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!3039 = !{!771, !344, !163, !132, !3040, !3057}
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !3042)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !3043)
!3043 = !{!3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3042, file: !507, line: 413, baseType: !1814, size: 256)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3042, file: !507, line: 414, baseType: !1816, size: 768, offset: 256)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3042, file: !507, line: 415, baseType: !1814, size: 256, offset: 1024)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3042, file: !507, line: 416, baseType: !1816, size: 768, offset: 1280)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3042, file: !507, line: 417, baseType: !1814, size: 256, offset: 2048)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3042, file: !507, line: 418, baseType: !1816, size: 768, offset: 2304)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3042, file: !507, line: 419, baseType: !1814, size: 256, offset: 3072)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3042, file: !507, line: 420, baseType: !1816, size: 768, offset: 3328)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3042, file: !507, line: 421, baseType: !1814, size: 256, offset: 4096)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3042, file: !507, line: 422, baseType: !1827, size: 1792, offset: 4352)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3042, file: !507, line: 423, baseType: !1831, size: 1920, offset: 6144)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3042, file: !507, line: 424, baseType: !1836, size: 20608, offset: 8064)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3042, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 32)
!3058 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !3059)
!3059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !3060)
!3060 = !{!3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081}
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3059, file: !507, line: 447, baseType: !511, size: 32)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3059, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3059, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3059, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3059, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3059, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3059, file: !507, line: 453, baseType: !1851, size: 96, offset: 192)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3059, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3059, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3059, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3059, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3059, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3059, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3059, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3059, file: !507, line: 461, baseType: !1862, size: 64, offset: 512)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3059, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3059, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3059, file: !507, line: 464, baseType: !1866, size: 128, offset: 640)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3059, file: !507, line: 465, baseType: !1868, size: 160, offset: 768)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3059, file: !507, line: 466, baseType: !1870, size: 160, offset: 928)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3059, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!3082 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3083, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3084, splitDebugInlining: false, nameTableKind: None)
!3083 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!3084 = !{!3085, !102, !103}
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !3087)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !3088)
!3088 = !{!3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3087, file: !507, line: 447, baseType: !511, size: 32)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3087, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3087, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3087, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3087, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3087, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3087, file: !507, line: 453, baseType: !1851, size: 96, offset: 192)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3087, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3087, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3087, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3087, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3087, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3087, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3087, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3087, file: !507, line: 461, baseType: !1862, size: 64, offset: 512)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3087, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3087, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3087, file: !507, line: 464, baseType: !1866, size: 128, offset: 640)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3087, file: !507, line: 465, baseType: !1868, size: 160, offset: 768)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3087, file: !507, line: 466, baseType: !1870, size: 160, offset: 928)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3087, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!3110 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3111, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3112, splitDebugInlining: false, nameTableKind: None)
!3111 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!3112 = !{!108, !1097, !356, !233, !3113, !164, !102}
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 32)
!3114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!3115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3116, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3117, splitDebugInlining: false, nameTableKind: None)
!3116 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!3117 = !{!3118}
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 32)
!3119 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 586, baseType: !3120)
!3120 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 550, size: 1216, elements: !3121)
!3121 = !{!3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3120, file: !127, line: 552, baseType: !131, size: 32)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3120, file: !127, line: 553, baseType: !131, size: 32, offset: 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3120, file: !127, line: 554, baseType: !131, size: 32, offset: 64)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3120, file: !127, line: 555, baseType: !131, size: 32, offset: 96)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3120, file: !127, line: 556, baseType: !131, size: 32, offset: 128)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3120, file: !127, line: 557, baseType: !131, size: 32, offset: 160)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3120, file: !127, line: 558, baseType: !131, size: 32, offset: 192)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3120, file: !127, line: 559, baseType: !132, size: 32, offset: 224)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3120, file: !127, line: 560, baseType: !131, size: 32, offset: 256)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3120, file: !127, line: 561, baseType: !131, size: 32, offset: 288)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3120, file: !127, line: 562, baseType: !843, size: 64, offset: 320)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3120, file: !127, line: 563, baseType: !131, size: 32, offset: 384)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3120, file: !127, line: 564, baseType: !131, size: 32, offset: 416)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3120, file: !127, line: 565, baseType: !131, size: 32, offset: 448)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3120, file: !127, line: 566, baseType: !132, size: 32, offset: 480)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3120, file: !127, line: 567, baseType: !131, size: 32, offset: 512)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3120, file: !127, line: 568, baseType: !131, size: 32, offset: 544)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3120, file: !127, line: 569, baseType: !843, size: 64, offset: 576)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3120, file: !127, line: 570, baseType: !131, size: 32, offset: 640)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3120, file: !127, line: 571, baseType: !131, size: 32, offset: 672)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3120, file: !127, line: 572, baseType: !131, size: 32, offset: 704)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3120, file: !127, line: 573, baseType: !132, size: 32, offset: 736)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3120, file: !127, line: 574, baseType: !131, size: 32, offset: 768)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3120, file: !127, line: 575, baseType: !131, size: 32, offset: 800)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3120, file: !127, line: 576, baseType: !843, size: 64, offset: 832)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3120, file: !127, line: 577, baseType: !131, size: 32, offset: 896)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3120, file: !127, line: 578, baseType: !131, size: 32, offset: 928)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3120, file: !127, line: 579, baseType: !843, size: 64, offset: 960)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3120, file: !127, line: 580, baseType: !131, size: 32, offset: 1024)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3120, file: !127, line: 581, baseType: !131, size: 32, offset: 1056)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3120, file: !127, line: 582, baseType: !131, size: 32, offset: 1088)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3120, file: !127, line: 583, baseType: !131, size: 32, offset: 1120)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3120, file: !127, line: 584, baseType: !131, size: 32, offset: 1152)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3120, file: !127, line: 585, baseType: !131, size: 32, offset: 1184)
!3156 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3157, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3157 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!3158 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3159, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3160, retainedTypes: !3176, splitDebugInlining: false, nameTableKind: None)
!3159 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!3160 = !{!3161, !3168, !3172}
!3161 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3162, line: 38, baseType: !32, size: 32, elements: !3163)
!3162 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3163 = !{!3164, !3165, !3166, !3167}
!3164 = !DIEnumerator(name: "HAL_OK", value: 0)
!3165 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3166 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3167 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3168 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !816, line: 184, baseType: !32, size: 32, elements: !3169)
!3169 = !{!3170, !3171}
!3170 = !DIEnumerator(name: "RESET", value: 0)
!3171 = !DIEnumerator(name: "SET", value: 1)
!3172 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !816, line: 190, baseType: !32, size: 32, elements: !3173)
!3173 = !{!3174, !3175}
!3174 = !DIEnumerator(name: "DISABLE", value: 0)
!3175 = !DIEnumerator(name: "ENABLE", value: 1)
!3176 = !{!3177, !132, !3215, !1623, !163, !1621, !102}
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 32)
!3178 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 586, baseType: !3179)
!3179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 550, size: 1216, elements: !3180)
!3180 = !{!3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3179, file: !127, line: 552, baseType: !131, size: 32)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3179, file: !127, line: 553, baseType: !131, size: 32, offset: 32)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3179, file: !127, line: 554, baseType: !131, size: 32, offset: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3179, file: !127, line: 555, baseType: !131, size: 32, offset: 96)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3179, file: !127, line: 556, baseType: !131, size: 32, offset: 128)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3179, file: !127, line: 557, baseType: !131, size: 32, offset: 160)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3179, file: !127, line: 558, baseType: !131, size: 32, offset: 192)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3179, file: !127, line: 559, baseType: !132, size: 32, offset: 224)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3179, file: !127, line: 560, baseType: !131, size: 32, offset: 256)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3179, file: !127, line: 561, baseType: !131, size: 32, offset: 288)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3179, file: !127, line: 562, baseType: !843, size: 64, offset: 320)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3179, file: !127, line: 563, baseType: !131, size: 32, offset: 384)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3179, file: !127, line: 564, baseType: !131, size: 32, offset: 416)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3179, file: !127, line: 565, baseType: !131, size: 32, offset: 448)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3179, file: !127, line: 566, baseType: !132, size: 32, offset: 480)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3179, file: !127, line: 567, baseType: !131, size: 32, offset: 512)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3179, file: !127, line: 568, baseType: !131, size: 32, offset: 544)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3179, file: !127, line: 569, baseType: !843, size: 64, offset: 576)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3179, file: !127, line: 570, baseType: !131, size: 32, offset: 640)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3179, file: !127, line: 571, baseType: !131, size: 32, offset: 672)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3179, file: !127, line: 572, baseType: !131, size: 32, offset: 704)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3179, file: !127, line: 573, baseType: !132, size: 32, offset: 736)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3179, file: !127, line: 574, baseType: !131, size: 32, offset: 768)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3179, file: !127, line: 575, baseType: !131, size: 32, offset: 800)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3179, file: !127, line: 576, baseType: !843, size: 64, offset: 832)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3179, file: !127, line: 577, baseType: !131, size: 32, offset: 896)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3179, file: !127, line: 578, baseType: !131, size: 32, offset: 928)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3179, file: !127, line: 579, baseType: !843, size: 64, offset: 960)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3179, file: !127, line: 580, baseType: !131, size: 32, offset: 1024)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3179, file: !127, line: 581, baseType: !131, size: 32, offset: 1056)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3179, file: !127, line: 582, baseType: !131, size: 32, offset: 1088)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3179, file: !127, line: 583, baseType: !131, size: 32, offset: 1120)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3179, file: !127, line: 584, baseType: !131, size: 32, offset: 1152)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3179, file: !127, line: 585, baseType: !131, size: 32, offset: 1184)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 32)
!3216 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !127, line: 544, baseType: !3217)
!3217 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 540, size: 64, elements: !3218)
!3218 = !{!3219, !3220}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3217, file: !127, line: 542, baseType: !131, size: 32)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3217, file: !127, line: 543, baseType: !131, size: 32, offset: 32)
!3221 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3222, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3223, retainedTypes: !3224, splitDebugInlining: false, nameTableKind: None)
!3222 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!3223 = !{!815}
!3224 = !{!3225, !132, !3233, !3239, !3250}
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 32)
!3226 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !507, line: 770, baseType: !3227)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 764, size: 128, elements: !3228)
!3228 = !{!3229, !3230, !3231, !3232}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3227, file: !507, line: 766, baseType: !131, size: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3227, file: !507, line: 767, baseType: !131, size: 32, offset: 32)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3227, file: !507, line: 768, baseType: !131, size: 32, offset: 64)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3227, file: !507, line: 769, baseType: !511, size: 32, offset: 96)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 32)
!3234 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !127, line: 544, baseType: !3235)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 540, size: 64, elements: !3236)
!3236 = !{!3237, !3238}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3235, file: !127, line: 542, baseType: !131, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3235, file: !127, line: 543, baseType: !131, size: 32, offset: 32)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 32)
!3240 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !127, line: 407, baseType: !3241)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 398, size: 224, elements: !3242)
!3242 = !{!3243, !3244, !3245, !3246, !3247, !3248, !3249}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3241, file: !127, line: 400, baseType: !131, size: 32)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3241, file: !127, line: 401, baseType: !131, size: 32, offset: 32)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3241, file: !127, line: 402, baseType: !131, size: 32, offset: 64)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3241, file: !127, line: 403, baseType: !131, size: 32, offset: 96)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3241, file: !127, line: 404, baseType: !131, size: 32, offset: 128)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3241, file: !127, line: 405, baseType: !131, size: 32, offset: 160)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3241, file: !127, line: 406, baseType: !131, size: 32, offset: 192)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 586, baseType: !3252)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 550, size: 1216, elements: !3253)
!3253 = !{!3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3252, file: !127, line: 552, baseType: !131, size: 32)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3252, file: !127, line: 553, baseType: !131, size: 32, offset: 32)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3252, file: !127, line: 554, baseType: !131, size: 32, offset: 64)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3252, file: !127, line: 555, baseType: !131, size: 32, offset: 96)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3252, file: !127, line: 556, baseType: !131, size: 32, offset: 128)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3252, file: !127, line: 557, baseType: !131, size: 32, offset: 160)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3252, file: !127, line: 558, baseType: !131, size: 32, offset: 192)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3252, file: !127, line: 559, baseType: !132, size: 32, offset: 224)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3252, file: !127, line: 560, baseType: !131, size: 32, offset: 256)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3252, file: !127, line: 561, baseType: !131, size: 32, offset: 288)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3252, file: !127, line: 562, baseType: !843, size: 64, offset: 320)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3252, file: !127, line: 563, baseType: !131, size: 32, offset: 384)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3252, file: !127, line: 564, baseType: !131, size: 32, offset: 416)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3252, file: !127, line: 565, baseType: !131, size: 32, offset: 448)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3252, file: !127, line: 566, baseType: !132, size: 32, offset: 480)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3252, file: !127, line: 567, baseType: !131, size: 32, offset: 512)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3252, file: !127, line: 568, baseType: !131, size: 32, offset: 544)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3252, file: !127, line: 569, baseType: !843, size: 64, offset: 576)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3252, file: !127, line: 570, baseType: !131, size: 32, offset: 640)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3252, file: !127, line: 571, baseType: !131, size: 32, offset: 672)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3252, file: !127, line: 572, baseType: !131, size: 32, offset: 704)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3252, file: !127, line: 573, baseType: !132, size: 32, offset: 736)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3252, file: !127, line: 574, baseType: !131, size: 32, offset: 768)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3252, file: !127, line: 575, baseType: !131, size: 32, offset: 800)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3252, file: !127, line: 576, baseType: !843, size: 64, offset: 832)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3252, file: !127, line: 577, baseType: !131, size: 32, offset: 896)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3252, file: !127, line: 578, baseType: !131, size: 32, offset: 928)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3252, file: !127, line: 579, baseType: !843, size: 64, offset: 960)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3252, file: !127, line: 580, baseType: !131, size: 32, offset: 1024)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3252, file: !127, line: 581, baseType: !131, size: 32, offset: 1056)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3252, file: !127, line: 582, baseType: !131, size: 32, offset: 1088)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3252, file: !127, line: 583, baseType: !131, size: 32, offset: 1120)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3252, file: !127, line: 584, baseType: !131, size: 32, offset: 1152)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3252, file: !127, line: 585, baseType: !131, size: 32, offset: 1184)
!3288 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3289, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3290, splitDebugInlining: false, nameTableKind: None)
!3289 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!3290 = !{!102, !356}
!3291 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3292, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3293, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3292 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!3293 = !{!3294, !3301, !30}
!3294 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3295, line: 14, baseType: !32, size: 32, elements: !3296)
!3295 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3296 = !{!3297, !3298, !3299, !3300}
!3297 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3298 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3299 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3300 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3301 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3295, line: 42, baseType: !32, size: 32, elements: !3302)
!3302 = !{!3303, !3304, !3305, !3306, !3307, !3308}
!3303 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3304 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3305 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3306 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3307 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3308 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3310, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3310 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!3311 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3312, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3313, splitDebugInlining: false, nameTableKind: None)
!3312 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!3313 = !{!22, !102, !103}
!3314 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3315, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3315 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!3316 = !{!"Ubuntu clang version 14.0.6"}
!3317 = !{i32 7, !"Dwarf Version", i32 4}
!3318 = !{i32 2, !"Debug Info Version", i32 3}
!3319 = !{i32 1, !"wchar_size", i32 4}
!3320 = !{i32 1, !"min_enum_size", i32 4}
!3321 = !{i32 1, !"branch-target-enforcement", i32 0}
!3322 = !{i32 1, !"sign-return-address", i32 0}
!3323 = !{i32 1, !"sign-return-address-all", i32 0}
!3324 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3325 = !{i32 7, !"frame-pointer", i32 2}
!3326 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3327, file: !3327, line: 26, type: !3328, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !473)
!3327 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3328 = !DISubroutineType(types: !3329)
!3329 = !{null}
!3330 = !DILocation(line: 28, column: 1, scope: !3326)
!3331 = !{i64 2155360750, i64 2155360770, i64 2155360833}
!3332 = !DILocation(line: 29, column: 1, scope: !3326)
!3333 = !{i64 2155361165, i64 2155361185, i64 2155361248}
!3334 = !DILocation(line: 30, column: 1, scope: !3326)
!3335 = !{i64 2155361584, i64 2155361604, i64 2155361667}
!3336 = !DILocation(line: 31, column: 1, scope: !3326)
!3337 = !{i64 2155362003, i64 2155362023, i64 2155362086}
!3338 = !DILocation(line: 33, column: 1, scope: !3326)
!3339 = !{i64 2155362295, i64 2155362315, i64 2155362378}
!3340 = !DILocation(line: 35, column: 1, scope: !3326)
!3341 = !{i64 2155362620, i64 2155362640, i64 2155362703}
!3342 = !DILocation(line: 50, column: 1, scope: !3326)
!3343 = !{i64 2155363047, i64 2155363067, i64 2155363130}
!3344 = !DILocation(line: 54, column: 1, scope: !3326)
!3345 = !{i64 2155367547, i64 2155367567, i64 2155367630}
!3346 = !DILocation(line: 61, column: 1, scope: !3326)
!3347 = !{i64 2155367864, i64 2155367884, i64 2155367947}
!3348 = !DILocation(line: 63, column: 1, scope: !3326)
!3349 = !{i64 2155368244, i64 2155368264, i64 2155368327}
!3350 = !DILocation(line: 64, column: 1, scope: !3326)
!3351 = !{i64 2155368766, i64 2155368786, i64 2155368849}
!3352 = !DILocation(line: 65, column: 1, scope: !3326)
!3353 = !{i64 2155369264, i64 2155369284, i64 2155369347}
!3354 = !DILocation(line: 66, column: 1, scope: !3326)
!3355 = !{i64 2155369746, i64 2155369766, i64 2155369829}
!3356 = !DILocation(line: 67, column: 1, scope: !3326)
!3357 = !{i64 2155370253, i64 2155370273, i64 2155370336}
!3358 = !DILocation(line: 68, column: 1, scope: !3326)
!3359 = !{i64 2155370741, i64 2155370761, i64 2155370824}
!3360 = !DILocation(line: 70, column: 1, scope: !3326)
!3361 = !{i64 2155371209, i64 2155371229, i64 2155371292}
!3362 = !DILocation(line: 71, column: 1, scope: !3326)
!3363 = !{i64 2155371651, i64 2155371671, i64 2155371734}
!3364 = !DILocation(line: 72, column: 1, scope: !3326)
!3365 = !{i64 2155372109, i64 2155372129, i64 2155372192}
!3366 = !DILocation(line: 79, column: 1, scope: !3326)
!3367 = !{i64 2155372563, i64 2155372583, i64 2155372646}
!3368 = !DILocation(line: 80, column: 1, scope: !3326)
!3369 = !{i64 2155373074, i64 2155373094, i64 2155373157}
!3370 = !DILocation(line: 82, column: 1, scope: !3326)
!3371 = !{i64 2155373565, i64 2155373585, i64 2155373648}
!3372 = !DILocation(line: 97, column: 1, scope: !3326)
!3373 = !{i64 2155373902, i64 2155373922, i64 2155373985}
!3374 = !DILocation(line: 99, column: 1, scope: !3326)
!3375 = !{i64 2155374120, i64 2155374140, i64 2155374203}
!3376 = !DILocation(line: 102, column: 1, scope: !3326)
!3377 = !{i64 2155374377, i64 2155374397, i64 2155374460}
!3378 = !DILocation(line: 105, column: 1, scope: !3326)
!3379 = !{i64 2155374617, i64 2155374637, i64 2155374700}
!3380 = !DILocation(line: 115, column: 1, scope: !3326)
!3381 = !{i64 2155374956, i64 2155374976, i64 2155375039}
!3382 = !DILocation(line: 118, column: 1, scope: !3326)
!3383 = !{i64 2155375300, i64 2155375320, i64 2155375383}
!3384 = !DILocation(line: 32, column: 1, scope: !3385)
!3385 = !DILexicalBlockFile(scope: !3326, file: !3386, discriminator: 0)
!3386 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3387 = !{i64 2155375656, i64 2155375676, i64 2155375739}
!3388 = !DILocation(line: 33, column: 1, scope: !3385)
!3389 = !{i64 2155376168, i64 2155376188, i64 2155376251}
!3390 = !DILocation(line: 53, column: 1, scope: !3385)
!3391 = !{i64 2155376676, i64 2155376696, i64 2155376759}
!3392 = !DILocation(line: 54, column: 1, scope: !3385)
!3393 = !{i64 2155381155, i64 2155381175, i64 2155381238}
!3394 = !DILocation(line: 55, column: 1, scope: !3385)
!3395 = !{i64 2155381573, i64 2155381593, i64 2155381656}
!3396 = !DILocation(line: 56, column: 1, scope: !3385)
!3397 = !{i64 2155381991, i64 2155382011, i64 2155382074}
!3398 = !DILocation(line: 57, column: 1, scope: !3385)
!3399 = !{i64 2155382409, i64 2155382429, i64 2155382492}
!3400 = !DILocation(line: 58, column: 1, scope: !3385)
!3401 = !{i64 2155382827, i64 2155382847, i64 2155382910}
!3402 = !DILocation(line: 59, column: 1, scope: !3385)
!3403 = !{i64 2155383245, i64 2155383265, i64 2155383328}
!3404 = !DILocation(line: 60, column: 1, scope: !3385)
!3405 = !{i64 2155383669, i64 2155383689, i64 2155383752}
!3406 = !DILocation(line: 61, column: 1, scope: !3385)
!3407 = !{i64 2155383986, i64 2155384006, i64 2155384069}
!3408 = !DILocation(line: 70, column: 1, scope: !3385)
!3409 = !{i64 2155384215, i64 2155384235, i64 2155384298}
!3410 = !DILocation(line: 72, column: 1, scope: !3385)
!3411 = !{i64 2155384547, i64 2155384567, i64 2155384630}
!3412 = !DILocation(line: 73, column: 1, scope: !3385)
!3413 = !{i64 2155384997, i64 2155385017, i64 2155385080}
!3414 = !DILocation(line: 74, column: 1, scope: !3385)
!3415 = !{i64 2155385447, i64 2155385467, i64 2155385530}
!3416 = !DILocation(line: 75, column: 1, scope: !3385)
!3417 = !{i64 2155385897, i64 2155385917, i64 2155385980}
!3418 = !DILocation(line: 76, column: 1, scope: !3385)
!3419 = !{i64 2155386347, i64 2155386367, i64 2155386430}
!3420 = !DILocation(line: 77, column: 1, scope: !3385)
!3421 = !{i64 2155386797, i64 2155386817, i64 2155386880}
!3422 = !DILocation(line: 78, column: 1, scope: !3385)
!3423 = !{i64 2155387247, i64 2155387267, i64 2155387330}
!3424 = !DILocation(line: 79, column: 1, scope: !3385)
!3425 = !{i64 2155387697, i64 2155387717, i64 2155387780}
!3426 = !DILocation(line: 80, column: 1, scope: !3385)
!3427 = !{i64 2155388150, i64 2155388170, i64 2155388233}
!3428 = !DILocation(line: 84, column: 1, scope: !3385)
!3429 = !{i64 2155388482, i64 2155388502, i64 2155388565}
!3430 = !DILocation(line: 91, column: 1, scope: !3385)
!3431 = !{i64 2155388879, i64 2155388899, i64 2155388962}
!3432 = !DILocation(line: 93, column: 1, scope: !3385)
!3433 = !{i64 2155389246, i64 2155389266, i64 2155389329}
!3434 = !DILocation(line: 106, column: 1, scope: !3385)
!3435 = !{i64 2155389516, i64 2155389536, i64 2155389599}
!3436 = !DILocation(line: 11, column: 1, scope: !3437)
!3437 = !DILexicalBlockFile(scope: !3326, file: !3438, discriminator: 0)
!3438 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3439 = distinct !DISubprogram(name: "main", scope: !105, file: !105, line: 11, type: !3328, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3440)
!3440 = !{!3441}
!3441 = !DILocalVariable(name: "c", scope: !3442, file: !105, line: 20, type: !163)
!3442 = distinct !DILexicalBlock(scope: !3439, file: !105, line: 19, column: 12)
!3443 = !DILocation(line: 13, column: 2, scope: !3439)
!3444 = !DILocation(line: 15, column: 2, scope: !3439)
!3445 = !DILocation(line: 16, column: 2, scope: !3439)
!3446 = !DILocation(line: 17, column: 2, scope: !3439)
!3447 = !DILocation(line: 19, column: 2, scope: !3439)
!3448 = !DILocation(line: 20, column: 15, scope: !3442)
!3449 = !DILocation(line: 0, scope: !3442)
!3450 = !DILocation(line: 22, column: 3, scope: !3442)
!3451 = !DILocation(line: 23, column: 7, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3442, file: !105, line: 23, column: 7)
!3453 = !DILocation(line: 23, column: 9, scope: !3452)
!3454 = !DILocation(line: 23, column: 7, scope: !3442)
!3455 = !DILocation(line: 24, column: 4, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3452, file: !105, line: 23, column: 18)
!3457 = !DILocation(line: 25, column: 3, scope: !3456)
!3458 = distinct !{!3458, !3447, !3459}
!3459 = !DILocation(line: 26, column: 2, scope: !3439)
!3460 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !116, file: !116, line: 45, type: !118, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3461)
!3461 = !{!3462}
!3462 = !DILocalVariable(name: "c", arg: 1, scope: !3460, file: !116, line: 45, type: !103)
!3463 = !DILocation(line: 0, scope: !3460)
!3464 = !DILocation(line: 50, column: 2, scope: !3460)
!3465 = distinct !DISubprogram(name: "__printk_hook_install", scope: !116, file: !116, line: 63, type: !3466, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3468)
!3466 = !DISubroutineType(types: !3467)
!3467 = !{null, !117}
!3468 = !{!3469}
!3469 = !DILocalVariable(name: "fn", arg: 1, scope: !3465, file: !116, line: 63, type: !117)
!3470 = !DILocation(line: 0, scope: !3465)
!3471 = !DILocation(line: 65, column: 12, scope: !3465)
!3472 = !DILocation(line: 66, column: 1, scope: !3465)
!3473 = distinct !DISubprogram(name: "__printk_get_hook", scope: !116, file: !116, line: 76, type: !3474, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !473)
!3474 = !DISubroutineType(types: !3475)
!3475 = !{!102}
!3476 = !DILocation(line: 78, column: 9, scope: !3473)
!3477 = !DILocation(line: 78, column: 2, scope: !3473)
!3478 = distinct !DISubprogram(name: "vprintk", scope: !116, file: !116, line: 113, type: !3479, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3488)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{null, !155, !3481}
!3481 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3482, line: 99, baseType: !3483)
!3482 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3483 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3482, line: 40, baseType: !3484)
!3484 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !116, baseType: !3485)
!3485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3486)
!3486 = !{!3487}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3485, file: !116, line: 79, baseType: !102, size: 32)
!3488 = !{!3489, !3490, !3491}
!3489 = !DILocalVariable(name: "fmt", arg: 1, scope: !3478, file: !116, line: 113, type: !155)
!3490 = !DILocalVariable(name: "ap", arg: 2, scope: !3478, file: !116, line: 113, type: !3481)
!3491 = !DILocalVariable(name: "ctx", scope: !3492, file: !116, line: 121, type: !3494)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !116, line: 120, column: 27)
!3493 = distinct !DILexicalBlock(scope: !3478, file: !116, line: 120, column: 6)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !116, line: 81, size: 32, elements: !3495)
!3495 = !{!3496, !3497}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3494, file: !116, line: 85, baseType: !32, size: 32)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3494, file: !116, line: 86, baseType: !3498, offset: 32)
!3498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, elements: !2684)
!3499 = !DILocation(line: 0, scope: !3478)
!3500 = !DILocation(line: 148, column: 3, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3493, file: !116, line: 138, column: 9)
!3502 = !DILocation(line: 155, column: 1, scope: !3478)
!3503 = distinct !DISubprogram(name: "char_out", scope: !116, file: !116, line: 107, type: !3504, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3506)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!103, !103, !102}
!3506 = !{!3507, !3508}
!3507 = !DILocalVariable(name: "c", arg: 1, scope: !3503, file: !116, line: 107, type: !103)
!3508 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3503, file: !116, line: 107, type: !102)
!3509 = !DILocation(line: 0, scope: !3503)
!3510 = !DILocation(line: 110, column: 9, scope: !3503)
!3511 = !DILocation(line: 110, column: 2, scope: !3503)
!3512 = distinct !DISubprogram(name: "cbvprintf", scope: !3513, file: !3513, line: 739, type: !3514, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3520)
!3513 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3514 = !DISubroutineType(types: !3515)
!3515 = !{!103, !3516, !102, !155, !3481}
!3516 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3513, line: 297, baseType: !3517)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 32)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{!103, null}
!3520 = !{!3521, !3522, !3523, !3524}
!3521 = !DILocalVariable(name: "out", arg: 1, scope: !3512, file: !3513, line: 739, type: !3516)
!3522 = !DILocalVariable(name: "ctx", arg: 2, scope: !3512, file: !3513, line: 739, type: !102)
!3523 = !DILocalVariable(name: "format", arg: 3, scope: !3512, file: !3513, line: 739, type: !155)
!3524 = !DILocalVariable(name: "ap", arg: 4, scope: !3512, file: !3513, line: 739, type: !3481)
!3525 = !DILocation(line: 0, scope: !3512)
!3526 = !DILocation(line: 741, column: 9, scope: !3512)
!3527 = !DILocation(line: 741, column: 2, scope: !3512)
!3528 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !116, file: !116, line: 157, type: !3529, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3531)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{null, !1097, !356}
!3531 = !{!3532, !3533, !3534}
!3532 = !DILocalVariable(name: "c", arg: 1, scope: !3528, file: !116, line: 157, type: !1097)
!3533 = !DILocalVariable(name: "n", arg: 2, scope: !3528, file: !116, line: 157, type: !356)
!3534 = !DILocalVariable(name: "i", scope: !3528, file: !116, line: 159, type: !356)
!3535 = !DILocation(line: 0, scope: !3528)
!3536 = !DILocation(line: 164, column: 16, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !116, line: 164, column: 2)
!3538 = distinct !DILexicalBlock(scope: !3528, file: !116, line: 164, column: 2)
!3539 = !DILocation(line: 164, column: 2, scope: !3538)
!3540 = !DILocation(line: 165, column: 3, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3537, file: !116, line: 164, column: 26)
!3542 = !DILocation(line: 165, column: 13, scope: !3541)
!3543 = !DILocation(line: 164, column: 22, scope: !3537)
!3544 = distinct !{!3544, !3539, !3545}
!3545 = !DILocation(line: 166, column: 2, scope: !3538)
!3546 = !DILocation(line: 171, column: 1, scope: !3528)
!3547 = distinct !DISubprogram(name: "printk", scope: !116, file: !116, line: 203, type: !3548, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3550)
!3548 = !DISubroutineType(types: !3549)
!3549 = !{null, !155, null}
!3550 = !{!3551, !3552}
!3551 = !DILocalVariable(name: "fmt", arg: 1, scope: !3547, file: !116, line: 203, type: !155)
!3552 = !DILocalVariable(name: "ap", scope: !3547, file: !116, line: 205, type: !3481)
!3553 = !DILocation(line: 0, scope: !3547)
!3554 = !DILocation(line: 205, column: 2, scope: !3547)
!3555 = !DILocation(line: 205, column: 10, scope: !3547)
!3556 = !DILocation(line: 207, column: 2, scope: !3547)
!3557 = !DILocation(line: 209, column: 2, scope: !3547)
!3558 = !DILocation(line: 211, column: 2, scope: !3547)
!3559 = !DILocation(line: 212, column: 1, scope: !3547)
!3560 = distinct !DISubprogram(name: "snprintk", scope: !116, file: !116, line: 239, type: !3561, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3563)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{!103, !1097, !356, !155, null}
!3563 = !{!3564, !3565, !3566, !3567, !3568}
!3564 = !DILocalVariable(name: "str", arg: 1, scope: !3560, file: !116, line: 239, type: !1097)
!3565 = !DILocalVariable(name: "size", arg: 2, scope: !3560, file: !116, line: 239, type: !356)
!3566 = !DILocalVariable(name: "fmt", arg: 3, scope: !3560, file: !116, line: 239, type: !155)
!3567 = !DILocalVariable(name: "ap", scope: !3560, file: !116, line: 241, type: !3481)
!3568 = !DILocalVariable(name: "ret", scope: !3560, file: !116, line: 242, type: !103)
!3569 = !DILocation(line: 0, scope: !3560)
!3570 = !DILocation(line: 241, column: 2, scope: !3560)
!3571 = !DILocation(line: 241, column: 10, scope: !3560)
!3572 = !DILocation(line: 244, column: 2, scope: !3560)
!3573 = !DILocation(line: 245, column: 8, scope: !3560)
!3574 = !DILocation(line: 246, column: 2, scope: !3560)
!3575 = !DILocation(line: 249, column: 1, scope: !3560)
!3576 = !DILocation(line: 248, column: 2, scope: !3560)
!3577 = distinct !DISubprogram(name: "vsnprintk", scope: !116, file: !116, line: 251, type: !3578, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3580)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{!103, !1097, !356, !155, !3481}
!3580 = !{!3581, !3582, !3583, !3584, !3585}
!3581 = !DILocalVariable(name: "str", arg: 1, scope: !3577, file: !116, line: 251, type: !1097)
!3582 = !DILocalVariable(name: "size", arg: 2, scope: !3577, file: !116, line: 251, type: !356)
!3583 = !DILocalVariable(name: "fmt", arg: 3, scope: !3577, file: !116, line: 251, type: !155)
!3584 = !DILocalVariable(name: "ap", arg: 4, scope: !3577, file: !116, line: 251, type: !3481)
!3585 = !DILocalVariable(name: "ctx", scope: !3577, file: !116, line: 253, type: !3586)
!3586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !116, line: 217, size: 96, elements: !3587)
!3587 = !{!3588, !3589, !3590}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3586, file: !116, line: 218, baseType: !1097, size: 32)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3586, file: !116, line: 219, baseType: !103, size: 32, offset: 32)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3586, file: !116, line: 220, baseType: !103, size: 32, offset: 64)
!3591 = !DILocation(line: 0, scope: !3577)
!3592 = !DILocation(line: 253, column: 2, scope: !3577)
!3593 = !DILocation(line: 253, column: 21, scope: !3577)
!3594 = !DILocation(line: 253, column: 27, scope: !3577)
!3595 = !DILocation(line: 255, column: 2, scope: !3577)
!3596 = !DILocation(line: 257, column: 10, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3577, file: !116, line: 257, column: 6)
!3598 = !DILocation(line: 257, column: 22, scope: !3597)
!3599 = !DILocation(line: 257, column: 16, scope: !3597)
!3600 = !DILocation(line: 257, column: 6, scope: !3577)
!3601 = !DILocation(line: 258, column: 3, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3597, file: !116, line: 257, column: 27)
!3603 = !DILocation(line: 258, column: 18, scope: !3602)
!3604 = !DILocation(line: 259, column: 2, scope: !3602)
!3605 = !DILocation(line: 262, column: 1, scope: !3577)
!3606 = !DILocation(line: 261, column: 2, scope: !3577)
!3607 = distinct !DISubprogram(name: "str_out", scope: !116, file: !116, line: 223, type: !3608, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3611)
!3608 = !DISubroutineType(types: !3609)
!3609 = !{!103, !103, !3610}
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 32)
!3611 = !{!3612, !3613}
!3612 = !DILocalVariable(name: "c", arg: 1, scope: !3607, file: !116, line: 223, type: !103)
!3613 = !DILocalVariable(name: "ctx", arg: 2, scope: !3607, file: !116, line: 223, type: !3610)
!3614 = !DILocation(line: 0, scope: !3607)
!3615 = !DILocation(line: 225, column: 11, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3607, file: !116, line: 225, column: 6)
!3617 = !DILocation(line: 225, column: 15, scope: !3616)
!3618 = !DILocation(line: 0, scope: !3616)
!3619 = !DILocation(line: 225, column: 23, scope: !3616)
!3620 = !DILocation(line: 225, column: 45, scope: !3616)
!3621 = !DILocation(line: 225, column: 37, scope: !3616)
!3622 = !DILocation(line: 225, column: 6, scope: !3607)
!3623 = !DILocation(line: 226, column: 8, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3616, file: !116, line: 225, column: 50)
!3625 = !DILocation(line: 226, column: 13, scope: !3624)
!3626 = !DILocation(line: 227, column: 3, scope: !3624)
!3627 = !DILocation(line: 230, column: 29, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3607, file: !116, line: 230, column: 6)
!3629 = !DILocation(line: 230, column: 17, scope: !3628)
!3630 = !DILocation(line: 230, column: 6, scope: !3607)
!3631 = !DILocation(line: 231, column: 22, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3628, file: !116, line: 230, column: 34)
!3633 = !DILocation(line: 231, column: 3, scope: !3632)
!3634 = !DILocation(line: 231, column: 26, scope: !3632)
!3635 = !DILocation(line: 232, column: 2, scope: !3632)
!3636 = !DILocation(line: 233, column: 28, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3628, file: !116, line: 232, column: 9)
!3638 = !DILocation(line: 233, column: 22, scope: !3637)
!3639 = !DILocation(line: 233, column: 3, scope: !3637)
!3640 = !DILocation(line: 233, column: 26, scope: !3637)
!3641 = !DILocation(line: 237, column: 1, scope: !3607)
!3642 = distinct !DISubprogram(name: "z_thread_entry", scope: !3643, file: !3643, line: 30, type: !3644, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !3651)
!3643 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3644 = !DISubroutineType(types: !3645)
!3645 = !{null, !3646, !102, !102, !102}
!3646 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3647, line: 46, baseType: !3648)
!3647 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 32)
!3649 = !DISubroutineType(types: !3650)
!3650 = !{null, !102, !102, !102}
!3651 = !{!3652, !3653, !3654, !3655}
!3652 = !DILocalVariable(name: "entry", arg: 1, scope: !3642, file: !3643, line: 30, type: !3646)
!3653 = !DILocalVariable(name: "p1", arg: 2, scope: !3642, file: !3643, line: 31, type: !102)
!3654 = !DILocalVariable(name: "p2", arg: 3, scope: !3642, file: !3643, line: 31, type: !102)
!3655 = !DILocalVariable(name: "p3", arg: 4, scope: !3642, file: !3643, line: 31, type: !102)
!3656 = !DILocation(line: 0, scope: !3642)
!3657 = !DILocation(line: 36, column: 2, scope: !3642)
!3658 = !DILocation(line: 38, column: 17, scope: !3642)
!3659 = !DILocation(line: 38, column: 2, scope: !3642)
!3660 = !DILocation(line: 45, column: 2, scope: !3642)
!3661 = distinct !DISubprogram(name: "k_current_get", scope: !312, file: !312, line: 530, type: !3662, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !473)
!3662 = !DISubroutineType(types: !3663)
!3663 = !{!3664}
!3664 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !3665)
!3665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3666, size: 32)
!3666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !3667)
!3667 = !{!3668, !3726, !3738, !3739, !3740, !3741, !3747, !3760}
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3666, file: !367, line: 247, baseType: !3669, size: 384)
!3669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !3670)
!3670 = !{!3671, !3695, !3702, !3703, !3704, !3713, !3714, !3715}
!3671 = !DIDerivedType(tag: DW_TAG_member, scope: !3669, file: !367, line: 60, baseType: !3672, size: 64)
!3672 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3669, file: !367, line: 60, size: 64, elements: !3673)
!3673 = !{!3674, !3689}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3672, file: !367, line: 61, baseType: !3675, size: 64)
!3675 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !3676)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !3677)
!3677 = !{!3678, !3684}
!3678 = !DIDerivedType(tag: DW_TAG_member, scope: !3676, file: !321, line: 38, baseType: !3679, size: 32)
!3679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3676, file: !321, line: 38, size: 32, elements: !3680)
!3680 = !{!3681, !3683}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3679, file: !321, line: 39, baseType: !3682, size: 32)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 32)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3679, file: !321, line: 40, baseType: !3682, size: 32)
!3684 = !DIDerivedType(tag: DW_TAG_member, scope: !3676, file: !321, line: 42, baseType: !3685, size: 32, offset: 32)
!3685 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3676, file: !321, line: 42, size: 32, elements: !3686)
!3686 = !{!3687, !3688}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3685, file: !321, line: 43, baseType: !3682, size: 32)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3685, file: !321, line: 44, baseType: !3682, size: 32)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3672, file: !367, line: 62, baseType: !3690, size: 64)
!3690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !3691)
!3691 = !{!3692}
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3690, file: !392, line: 50, baseType: !3693, size: 64)
!3693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3694, size: 64, elements: !397)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3690, size: 32)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3669, file: !367, line: 68, baseType: !3696, size: 32, offset: 64)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 32)
!3697 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !3698)
!3698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !3699)
!3699 = !{!3700}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3698, file: !316, line: 232, baseType: !3701, size: 64)
!3701 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !3676)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3669, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3669, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!3704 = !DIDerivedType(tag: DW_TAG_member, scope: !3669, file: !367, line: 90, baseType: !3705, size: 16, offset: 112)
!3705 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3669, file: !367, line: 90, size: 16, elements: !3706)
!3706 = !{!3707, !3712}
!3707 = !DIDerivedType(tag: DW_TAG_member, scope: !3705, file: !367, line: 91, baseType: !3708, size: 16)
!3708 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3705, file: !367, line: 91, size: 16, elements: !3709)
!3709 = !{!3710, !3711}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3708, file: !367, line: 96, baseType: !415, size: 8)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3708, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3705, file: !367, line: 100, baseType: !340, size: 16)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3669, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3669, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3669, file: !367, line: 131, baseType: !3716, size: 192, offset: 192)
!3716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !3717)
!3717 = !{!3718, !3719, !3725}
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3716, file: !316, line: 245, baseType: !3675, size: 64)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3716, file: !316, line: 246, baseType: !3720, size: 32, offset: 64)
!3720 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !3721)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 32)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{null, !3724}
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 32)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3716, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3666, file: !367, line: 250, baseType: !3727, size: 288, offset: 384)
!3727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !3728)
!3728 = !{!3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3727, file: !436, line: 26, baseType: !132, size: 32)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3727, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3727, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3727, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3727, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3727, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3727, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3727, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3727, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3666, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3666, file: !367, line: 256, baseType: !3697, size: 64, offset: 704)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3666, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3666, file: !367, line: 300, baseType: !3742, size: 96, offset: 800)
!3742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !3743)
!3743 = !{!3744, !3745, !3746}
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3742, file: !367, line: 153, baseType: !22, size: 32)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3742, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3742, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3666, file: !367, line: 325, baseType: !3748, size: 32, offset: 896)
!3748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3749, size: 32)
!3749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !3750)
!3750 = !{!3751, !3757, !3758}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3749, file: !312, line: 5074, baseType: !3752, size: 96)
!3752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !3753)
!3753 = !{!3754, !3755, !3756}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3752, file: !462, line: 57, baseType: !465, size: 32)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3752, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3752, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3749, file: !312, line: 5075, baseType: !3697, size: 64, offset: 96)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3749, file: !312, line: 5076, baseType: !3759, offset: 160)
!3759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3666, file: !367, line: 343, baseType: !3761, size: 64, offset: 928)
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !3762)
!3762 = !{!3763, !3764}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3761, file: !436, line: 63, baseType: !132, size: 32)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3761, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!3765 = !DILocation(line: 535, column: 9, scope: !3661)
!3766 = !DILocation(line: 535, column: 2, scope: !3661)
!3767 = distinct !DISubprogram(name: "k_thread_abort", scope: !3768, file: !3768, line: 188, type: !3769, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !3771)
!3768 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!3769 = !DISubroutineType(types: !3770)
!3770 = !{null, !3664}
!3771 = !{!3772}
!3772 = !DILocalVariable(name: "thread", arg: 1, scope: !3767, file: !3768, line: 188, type: !3664)
!3773 = !DILocation(line: 0, scope: !3767)
!3774 = !DILocation(line: 197, column: 2, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3767, file: !3768, line: 197, column: 2)
!3776 = !{i64 2155058015}
!3777 = !DILocation(line: 198, column: 2, scope: !3767)
!3778 = !DILocation(line: 199, column: 1, scope: !3767)
!3779 = distinct !DISubprogram(name: "z_current_get", scope: !3768, file: !3768, line: 173, type: !3662, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !473)
!3780 = !DILocation(line: 180, column: 2, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3779, file: !3768, line: 180, column: 2)
!3782 = !{i64 2155057947}
!3783 = !DILocation(line: 181, column: 9, scope: !3779)
!3784 = !DILocation(line: 181, column: 2, scope: !3779)
!3785 = distinct !DISubprogram(name: "sys_heap_free", scope: !3786, file: !3786, line: 163, type: !3787, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3795)
!3786 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3787 = !DISubroutineType(types: !3788)
!3788 = !{null, !3789, !102}
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 32)
!3790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !3791)
!3791 = !{!3792, !3793, !3794}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3790, file: !462, line: 57, baseType: !2671, size: 32)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3790, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3790, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!3795 = !{!3796, !3797, !3798, !3799}
!3796 = !DILocalVariable(name: "heap", arg: 1, scope: !3785, file: !3786, line: 163, type: !3789)
!3797 = !DILocalVariable(name: "mem", arg: 2, scope: !3785, file: !3786, line: 163, type: !102)
!3798 = !DILocalVariable(name: "h", scope: !3785, file: !3786, line: 168, type: !2671)
!3799 = !DILocalVariable(name: "c", scope: !3785, file: !3786, line: 169, type: !2676)
!3800 = !DILocation(line: 0, scope: !3785)
!3801 = !DILocation(line: 165, column: 10, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3785, file: !3786, line: 165, column: 6)
!3803 = !DILocation(line: 165, column: 6, scope: !3785)
!3804 = !DILocation(line: 168, column: 27, scope: !3785)
!3805 = !DILocation(line: 169, column: 16, scope: !3785)
!3806 = !{i32 0, i32 536870912}
!3807 = !DILocation(line: 187, column: 2, scope: !3785)
!3808 = !DILocation(line: 197, column: 2, scope: !3785)
!3809 = !DILocation(line: 198, column: 1, scope: !3785)
!3810 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3786, file: !3786, line: 157, type: !3811, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3813)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{!2676, !2671, !102}
!3813 = !{!3814, !3815, !3816, !3817}
!3814 = !DILocalVariable(name: "h", arg: 1, scope: !3810, file: !3786, line: 157, type: !2671)
!3815 = !DILocalVariable(name: "p", arg: 2, scope: !3810, file: !3786, line: 157, type: !102)
!3816 = !DILocalVariable(name: "mem", scope: !3810, file: !3786, line: 159, type: !270)
!3817 = !DILocalVariable(name: "base", scope: !3810, file: !3786, line: 159, type: !270)
!3818 = !DILocation(line: 0, scope: !3810)
!3819 = !DILocation(line: 159, column: 39, scope: !3810)
!3820 = !DILocation(line: 160, column: 14, scope: !3810)
!3821 = !DILocation(line: 160, column: 38, scope: !3810)
!3822 = !DILocation(line: 160, column: 46, scope: !3810)
!3823 = !DILocation(line: 160, column: 2, scope: !3810)
!3824 = distinct !DISubprogram(name: "set_chunk_used", scope: !2658, file: !2658, line: 147, type: !3825, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3827)
!3825 = !DISubroutineType(types: !3826)
!3826 = !{null, !2671, !2676, !166}
!3827 = !{!3828, !3829, !3830, !3831, !3832}
!3828 = !DILocalVariable(name: "h", arg: 1, scope: !3824, file: !2658, line: 147, type: !2671)
!3829 = !DILocalVariable(name: "c", arg: 2, scope: !3824, file: !2658, line: 147, type: !2676)
!3830 = !DILocalVariable(name: "used", arg: 3, scope: !3824, file: !2658, line: 147, type: !166)
!3831 = !DILocalVariable(name: "buf", scope: !3824, file: !2658, line: 149, type: !2665)
!3832 = !DILocalVariable(name: "cmem", scope: !3824, file: !2658, line: 150, type: !102)
!3833 = !DILocation(line: 0, scope: !3824)
!3834 = !DILocation(line: 149, column: 22, scope: !3824)
!3835 = !DILocation(line: 0, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !2658, line: 159, column: 7)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !2658, line: 158, column: 9)
!3838 = distinct !DILexicalBlock(scope: !3824, file: !2658, line: 152, column: 6)
!3839 = !DILocation(line: 159, column: 7, scope: !3837)
!3840 = !DILocation(line: 165, column: 1, scope: !3824)
!3841 = distinct !DISubprogram(name: "free_chunk", scope: !3786, file: !3786, line: 133, type: !3842, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3844)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{null, !2671, !2676}
!3844 = !{!3845, !3846}
!3845 = !DILocalVariable(name: "h", arg: 1, scope: !3841, file: !3786, line: 133, type: !2671)
!3846 = !DILocalVariable(name: "c", arg: 2, scope: !3841, file: !3786, line: 133, type: !2676)
!3847 = !DILocation(line: 0, scope: !3841)
!3848 = !DILocation(line: 136, column: 21, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3841, file: !3786, line: 136, column: 6)
!3850 = !DILocation(line: 136, column: 7, scope: !3849)
!3851 = !DILocation(line: 136, column: 6, scope: !3841)
!3852 = !DILocation(line: 137, column: 3, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3849, file: !3786, line: 136, column: 41)
!3854 = !DILocation(line: 138, column: 22, scope: !3853)
!3855 = !DILocation(line: 138, column: 3, scope: !3853)
!3856 = !DILocation(line: 139, column: 2, scope: !3853)
!3857 = !DILocation(line: 142, column: 21, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3841, file: !3786, line: 142, column: 6)
!3859 = !{i32 -65535, i32 536903678}
!3860 = !DILocation(line: 142, column: 7, scope: !3858)
!3861 = !DILocation(line: 142, column: 6, scope: !3841)
!3862 = !DILocation(line: 143, column: 3, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3858, file: !3786, line: 142, column: 40)
!3864 = !DILocation(line: 144, column: 19, scope: !3863)
!3865 = !DILocation(line: 144, column: 3, scope: !3863)
!3866 = !DILocation(line: 145, column: 7, scope: !3863)
!3867 = !DILocation(line: 146, column: 2, scope: !3863)
!3868 = !DILocation(line: 148, column: 2, scope: !3841)
!3869 = !DILocation(line: 149, column: 1, scope: !3841)
!3870 = distinct !DISubprogram(name: "right_chunk", scope: !2658, file: !2658, line: 204, type: !3871, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3873)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{!2676, !2671, !2676}
!3873 = !{!3874, !3875}
!3874 = !DILocalVariable(name: "h", arg: 1, scope: !3870, file: !2658, line: 204, type: !2671)
!3875 = !DILocalVariable(name: "c", arg: 2, scope: !3870, file: !2658, line: 204, type: !2676)
!3876 = !DILocation(line: 0, scope: !3870)
!3877 = !DILocation(line: 206, column: 13, scope: !3870)
!3878 = !DILocation(line: 206, column: 11, scope: !3870)
!3879 = !DILocation(line: 206, column: 2, scope: !3870)
!3880 = distinct !DISubprogram(name: "chunk_used", scope: !2658, file: !2658, line: 137, type: !3881, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3883)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!166, !2671, !2676}
!3883 = !{!3884, !3885}
!3884 = !DILocalVariable(name: "h", arg: 1, scope: !3880, file: !2658, line: 137, type: !2671)
!3885 = !DILocalVariable(name: "c", arg: 2, scope: !3880, file: !2658, line: 137, type: !2676)
!3886 = !DILocation(line: 0, scope: !3880)
!3887 = !DILocation(line: 139, column: 9, scope: !3880)
!3888 = !DILocation(line: 139, column: 42, scope: !3880)
!3889 = !DILocation(line: 139, column: 2, scope: !3880)
!3890 = distinct !DISubprogram(name: "free_list_remove", scope: !3786, file: !3786, line: 60, type: !3842, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3891)
!3891 = !{!3892, !3893, !3894}
!3892 = !DILocalVariable(name: "h", arg: 1, scope: !3890, file: !3786, line: 60, type: !2671)
!3893 = !DILocalVariable(name: "c", arg: 2, scope: !3890, file: !3786, line: 60, type: !2676)
!3894 = !DILocalVariable(name: "bidx", scope: !3895, file: !3786, line: 63, type: !103)
!3895 = distinct !DILexicalBlock(scope: !3896, file: !3786, line: 62, column: 31)
!3896 = distinct !DILexicalBlock(scope: !3890, file: !3786, line: 62, column: 6)
!3897 = !DILocation(line: 0, scope: !3890)
!3898 = !DILocation(line: 63, column: 28, scope: !3895)
!3899 = !{i32 0, i32 32768}
!3900 = !DILocation(line: 63, column: 14, scope: !3895)
!3901 = !DILocation(line: 0, scope: !3895)
!3902 = !DILocation(line: 64, column: 3, scope: !3895)
!3903 = !DILocation(line: 66, column: 1, scope: !3890)
!3904 = distinct !DISubprogram(name: "merge_chunks", scope: !3786, file: !3786, line: 125, type: !3905, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3907)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{null, !2671, !2676, !2676}
!3907 = !{!3908, !3909, !3910, !3911}
!3908 = !DILocalVariable(name: "h", arg: 1, scope: !3904, file: !3786, line: 125, type: !2671)
!3909 = !DILocalVariable(name: "lc", arg: 2, scope: !3904, file: !3786, line: 125, type: !2676)
!3910 = !DILocalVariable(name: "rc", arg: 3, scope: !3904, file: !3786, line: 125, type: !2676)
!3911 = !DILocalVariable(name: "newsz", scope: !3904, file: !3786, line: 127, type: !3912)
!3912 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2658, line: 62, baseType: !132)
!3913 = !DILocation(line: 0, scope: !3904)
!3914 = !DILocation(line: 127, column: 20, scope: !3904)
!3915 = !DILocation(line: 127, column: 40, scope: !3904)
!3916 = !DILocation(line: 127, column: 38, scope: !3904)
!3917 = !DILocation(line: 129, column: 2, scope: !3904)
!3918 = !DILocation(line: 130, column: 25, scope: !3904)
!3919 = !DILocation(line: 130, column: 2, scope: !3904)
!3920 = !DILocation(line: 131, column: 1, scope: !3904)
!3921 = distinct !DISubprogram(name: "left_chunk", scope: !2658, file: !2658, line: 199, type: !3871, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3922)
!3922 = !{!3923, !3924}
!3923 = !DILocalVariable(name: "h", arg: 1, scope: !3921, file: !2658, line: 199, type: !2671)
!3924 = !DILocalVariable(name: "c", arg: 2, scope: !3921, file: !2658, line: 199, type: !2676)
!3925 = !DILocation(line: 0, scope: !3921)
!3926 = !DILocation(line: 201, column: 13, scope: !3921)
!3927 = !DILocation(line: 201, column: 11, scope: !3921)
!3928 = !DILocation(line: 201, column: 2, scope: !3921)
!3929 = distinct !DISubprogram(name: "free_list_add", scope: !3786, file: !3786, line: 98, type: !3842, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3930)
!3930 = !{!3931, !3932, !3933}
!3931 = !DILocalVariable(name: "h", arg: 1, scope: !3929, file: !3786, line: 98, type: !2671)
!3932 = !DILocalVariable(name: "c", arg: 2, scope: !3929, file: !3786, line: 98, type: !2676)
!3933 = !DILocalVariable(name: "bidx", scope: !3934, file: !3786, line: 101, type: !103)
!3934 = distinct !DILexicalBlock(scope: !3935, file: !3786, line: 100, column: 31)
!3935 = distinct !DILexicalBlock(scope: !3929, file: !3786, line: 100, column: 6)
!3936 = !DILocation(line: 0, scope: !3929)
!3937 = !DILocation(line: 101, column: 28, scope: !3934)
!3938 = !DILocation(line: 101, column: 14, scope: !3934)
!3939 = !DILocation(line: 0, scope: !3934)
!3940 = !DILocation(line: 102, column: 3, scope: !3934)
!3941 = !DILocation(line: 104, column: 1, scope: !3929)
!3942 = distinct !DISubprogram(name: "chunk_size", scope: !2658, file: !2658, line: 142, type: !3943, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3945)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!3912, !2671, !2676}
!3945 = !{!3946, !3947}
!3946 = !DILocalVariable(name: "h", arg: 1, scope: !3942, file: !2658, line: 142, type: !2671)
!3947 = !DILocalVariable(name: "c", arg: 2, scope: !3942, file: !2658, line: 142, type: !2676)
!3948 = !DILocation(line: 0, scope: !3942)
!3949 = !DILocation(line: 144, column: 9, scope: !3942)
!3950 = !DILocation(line: 144, column: 42, scope: !3942)
!3951 = !DILocation(line: 144, column: 2, scope: !3942)
!3952 = distinct !DISubprogram(name: "bucket_idx", scope: !2658, file: !2658, line: 250, type: !3953, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3955)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!103, !2671, !3912}
!3955 = !{!3956, !3957, !3958}
!3956 = !DILocalVariable(name: "h", arg: 1, scope: !3952, file: !2658, line: 250, type: !2671)
!3957 = !DILocalVariable(name: "sz", arg: 2, scope: !3952, file: !2658, line: 250, type: !3912)
!3958 = !DILocalVariable(name: "usable_sz", scope: !3952, file: !2658, line: 252, type: !32)
!3959 = !DILocation(line: 0, scope: !3952)
!3960 = !DILocation(line: 252, column: 32, scope: !3952)
!3961 = !DILocation(line: 252, column: 30, scope: !3952)
!3962 = !DILocation(line: 252, column: 50, scope: !3952)
!3963 = !DILocation(line: 253, column: 14, scope: !3952)
!3964 = !{i32 0, i32 33}
!3965 = !DILocation(line: 253, column: 12, scope: !3952)
!3966 = !DILocation(line: 253, column: 2, scope: !3952)
!3967 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3786, file: !3786, line: 68, type: !3968, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3970)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{null, !2671, !2676, !103}
!3970 = !{!3971, !3972, !3973, !3974, !3976, !3979}
!3971 = !DILocalVariable(name: "h", arg: 1, scope: !3967, file: !3786, line: 68, type: !2671)
!3972 = !DILocalVariable(name: "c", arg: 2, scope: !3967, file: !3786, line: 68, type: !2676)
!3973 = !DILocalVariable(name: "bidx", arg: 3, scope: !3967, file: !3786, line: 68, type: !103)
!3974 = !DILocalVariable(name: "b", scope: !3967, file: !3786, line: 70, type: !3975)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 32)
!3976 = !DILocalVariable(name: "second", scope: !3977, file: !3786, line: 84, type: !2676)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !3786, line: 80, column: 9)
!3978 = distinct !DILexicalBlock(scope: !3967, file: !3786, line: 72, column: 6)
!3979 = !DILocalVariable(name: "first", scope: !3977, file: !3786, line: 85, type: !2676)
!3980 = !DILocation(line: 0, scope: !3967)
!3981 = !DILocation(line: 72, column: 9, scope: !3978)
!3982 = !DILocation(line: 72, column: 14, scope: !3978)
!3983 = !DILocation(line: 72, column: 6, scope: !3967)
!3984 = !DILocation(line: 76, column: 23, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3978, file: !3786, line: 72, column: 21)
!3986 = !DILocation(line: 76, column: 6, scope: !3985)
!3987 = !DILocation(line: 76, column: 20, scope: !3985)
!3988 = !DILocation(line: 77, column: 11, scope: !3985)
!3989 = !DILocation(line: 78, column: 3, scope: !3985)
!3990 = !DILocation(line: 79, column: 3, scope: !3985)
!3991 = !DILocation(line: 80, column: 2, scope: !3985)
!3992 = !DILocation(line: 0, scope: !3977)
!3993 = !DILocation(line: 85, column: 21, scope: !3977)
!3994 = !{i32 0, i32 65536}
!3995 = !DILocation(line: 87, column: 3, scope: !3977)
!3996 = !DILocation(line: 88, column: 3, scope: !3977)
!3997 = !DILocation(line: 89, column: 3, scope: !3977)
!3998 = !DILocation(line: 90, column: 3, scope: !3977)
!3999 = !DILocation(line: 96, column: 1, scope: !3967)
!4000 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2658, file: !2658, line: 187, type: !3905, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4001)
!4001 = !{!4002, !4003, !4004}
!4002 = !DILocalVariable(name: "h", arg: 1, scope: !4000, file: !2658, line: 187, type: !2671)
!4003 = !DILocalVariable(name: "c", arg: 2, scope: !4000, file: !2658, line: 187, type: !2676)
!4004 = !DILocalVariable(name: "prev", arg: 3, scope: !4000, file: !2658, line: 188, type: !2676)
!4005 = !DILocation(line: 0, scope: !4000)
!4006 = !DILocation(line: 190, column: 2, scope: !4000)
!4007 = !DILocation(line: 191, column: 1, scope: !4000)
!4008 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2658, file: !2658, line: 193, type: !3905, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4009)
!4009 = !{!4010, !4011, !4012}
!4010 = !DILocalVariable(name: "h", arg: 1, scope: !4008, file: !2658, line: 193, type: !2671)
!4011 = !DILocalVariable(name: "c", arg: 2, scope: !4008, file: !2658, line: 193, type: !2676)
!4012 = !DILocalVariable(name: "next", arg: 3, scope: !4008, file: !2658, line: 194, type: !2676)
!4013 = !DILocation(line: 0, scope: !4008)
!4014 = !DILocation(line: 196, column: 2, scope: !4008)
!4015 = !DILocation(line: 197, column: 1, scope: !4008)
!4016 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2658, file: !2658, line: 177, type: !3871, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4017)
!4017 = !{!4018, !4019}
!4018 = !DILocalVariable(name: "h", arg: 1, scope: !4016, file: !2658, line: 177, type: !2671)
!4019 = !DILocalVariable(name: "c", arg: 2, scope: !4016, file: !2658, line: 177, type: !2676)
!4020 = !DILocation(line: 0, scope: !4016)
!4021 = !DILocation(line: 179, column: 9, scope: !4016)
!4022 = !DILocation(line: 179, column: 2, scope: !4016)
!4023 = distinct !DISubprogram(name: "chunk_field", scope: !2658, file: !2658, line: 107, type: !4024, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4026)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!2676, !2671, !2676, !2657}
!4026 = !{!4027, !4028, !4029, !4030, !4031}
!4027 = !DILocalVariable(name: "h", arg: 1, scope: !4023, file: !2658, line: 107, type: !2671)
!4028 = !DILocalVariable(name: "c", arg: 2, scope: !4023, file: !2658, line: 107, type: !2676)
!4029 = !DILocalVariable(name: "f", arg: 3, scope: !4023, file: !2658, line: 108, type: !2657)
!4030 = !DILocalVariable(name: "buf", scope: !4023, file: !2658, line: 110, type: !2665)
!4031 = !DILocalVariable(name: "cmem", scope: !4023, file: !2658, line: 111, type: !102)
!4032 = !DILocation(line: 0, scope: !4023)
!4033 = !DILocation(line: 110, column: 22, scope: !4023)
!4034 = !DILocation(line: 111, column: 15, scope: !4023)
!4035 = !DILocation(line: 116, column: 11, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !2658, line: 115, column: 9)
!4037 = distinct !DILexicalBlock(scope: !4023, file: !2658, line: 113, column: 6)
!4038 = !DILocation(line: 116, column: 10, scope: !4036)
!4039 = !DILocation(line: 118, column: 1, scope: !4023)
!4040 = distinct !DISubprogram(name: "chunk_buf", scope: !2658, file: !2658, line: 101, type: !4041, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4043)
!4041 = !DISubroutineType(types: !4042)
!4042 = !{!2665, !2671}
!4043 = !{!4044}
!4044 = !DILocalVariable(name: "h", arg: 1, scope: !4040, file: !2658, line: 101, type: !2671)
!4045 = !DILocation(line: 0, scope: !4040)
!4046 = !DILocation(line: 104, column: 9, scope: !4040)
!4047 = !DILocation(line: 104, column: 2, scope: !4040)
!4048 = distinct !DISubprogram(name: "chunk_set", scope: !2658, file: !2658, line: 120, type: !4049, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4051)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{null, !2671, !2676, !2657, !2676}
!4051 = !{!4052, !4053, !4054, !4055, !4056, !4057}
!4052 = !DILocalVariable(name: "h", arg: 1, scope: !4048, file: !2658, line: 120, type: !2671)
!4053 = !DILocalVariable(name: "c", arg: 2, scope: !4048, file: !2658, line: 120, type: !2676)
!4054 = !DILocalVariable(name: "f", arg: 3, scope: !4048, file: !2658, line: 121, type: !2657)
!4055 = !DILocalVariable(name: "val", arg: 4, scope: !4048, file: !2658, line: 121, type: !2676)
!4056 = !DILocalVariable(name: "buf", scope: !4048, file: !2658, line: 125, type: !2665)
!4057 = !DILocalVariable(name: "cmem", scope: !4048, file: !2658, line: 126, type: !102)
!4058 = !DILocation(line: 0, scope: !4048)
!4059 = !DILocation(line: 125, column: 22, scope: !4048)
!4060 = !DILocation(line: 126, column: 15, scope: !4048)
!4061 = !DILocation(line: 133, column: 27, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !2658, line: 131, column: 9)
!4063 = distinct !DILexicalBlock(scope: !4048, file: !2658, line: 128, column: 6)
!4064 = !DILocation(line: 133, column: 4, scope: !4062)
!4065 = !DILocation(line: 133, column: 3, scope: !4062)
!4066 = !DILocation(line: 133, column: 25, scope: !4062)
!4067 = !DILocation(line: 135, column: 1, scope: !4048)
!4068 = distinct !DISubprogram(name: "min_chunk_size", scope: !2658, file: !2658, line: 240, type: !4069, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4071)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!3912, !2671}
!4071 = !{!4072}
!4072 = !DILocalVariable(name: "h", arg: 1, scope: !4068, file: !2658, line: 240, type: !2671)
!4073 = !DILocation(line: 0, scope: !4068)
!4074 = !DILocation(line: 242, column: 9, scope: !4068)
!4075 = !DILocation(line: 242, column: 2, scope: !4068)
!4076 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2658, file: !2658, line: 235, type: !4077, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4079)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!3912, !2671, !356}
!4079 = !{!4080, !4081}
!4080 = !DILocalVariable(name: "h", arg: 1, scope: !4076, file: !2658, line: 235, type: !2671)
!4081 = !DILocalVariable(name: "bytes", arg: 2, scope: !4076, file: !2658, line: 235, type: !356)
!4082 = !DILocation(line: 0, scope: !4076)
!4083 = !DILocation(line: 237, column: 39, scope: !4076)
!4084 = !DILocation(line: 237, column: 9, scope: !4076)
!4085 = !DILocation(line: 237, column: 2, scope: !4076)
!4086 = distinct !DISubprogram(name: "chunksz", scope: !2658, file: !2658, line: 230, type: !4087, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4089)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{!3912, !356}
!4089 = !{!4090}
!4090 = !DILocalVariable(name: "bytes", arg: 1, scope: !4086, file: !2658, line: 230, type: !356)
!4091 = !DILocation(line: 0, scope: !4086)
!4092 = !DILocation(line: 232, column: 29, scope: !4086)
!4093 = !DILocation(line: 232, column: 35, scope: !4086)
!4094 = !DILocation(line: 232, column: 2, scope: !4086)
!4095 = distinct !DISubprogram(name: "set_chunk_size", scope: !2658, file: !2658, line: 172, type: !4096, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4098)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{null, !2671, !2676, !3912}
!4098 = !{!4099, !4100, !4101}
!4099 = !DILocalVariable(name: "h", arg: 1, scope: !4095, file: !2658, line: 172, type: !2671)
!4100 = !DILocalVariable(name: "c", arg: 2, scope: !4095, file: !2658, line: 172, type: !2676)
!4101 = !DILocalVariable(name: "size", arg: 3, scope: !4095, file: !2658, line: 172, type: !3912)
!4102 = !DILocation(line: 0, scope: !4095)
!4103 = !DILocation(line: 174, column: 38, scope: !4095)
!4104 = !DILocation(line: 174, column: 2, scope: !4095)
!4105 = !DILocation(line: 175, column: 1, scope: !4095)
!4106 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2658, file: !2658, line: 209, type: !4096, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4107)
!4107 = !{!4108, !4109, !4110}
!4108 = !DILocalVariable(name: "h", arg: 1, scope: !4106, file: !2658, line: 209, type: !2671)
!4109 = !DILocalVariable(name: "c", arg: 2, scope: !4106, file: !2658, line: 209, type: !2676)
!4110 = !DILocalVariable(name: "size", arg: 3, scope: !4106, file: !2658, line: 210, type: !3912)
!4111 = !DILocation(line: 0, scope: !4106)
!4112 = !DILocation(line: 212, column: 2, scope: !4106)
!4113 = !DILocation(line: 213, column: 1, scope: !4106)
!4114 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3786, file: !3786, line: 34, type: !3968, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4115)
!4115 = !{!4116, !4117, !4118, !4119, !4120, !4123}
!4116 = !DILocalVariable(name: "h", arg: 1, scope: !4114, file: !3786, line: 34, type: !2671)
!4117 = !DILocalVariable(name: "c", arg: 2, scope: !4114, file: !3786, line: 34, type: !2676)
!4118 = !DILocalVariable(name: "bidx", arg: 3, scope: !4114, file: !3786, line: 34, type: !103)
!4119 = !DILocalVariable(name: "b", scope: !4114, file: !3786, line: 36, type: !3975)
!4120 = !DILocalVariable(name: "first", scope: !4121, file: !3786, line: 47, type: !2676)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !3786, line: 46, column: 9)
!4122 = distinct !DILexicalBlock(scope: !4114, file: !3786, line: 42, column: 6)
!4123 = !DILocalVariable(name: "second", scope: !4121, file: !3786, line: 48, type: !2676)
!4124 = !DILocation(line: 0, scope: !4114)
!4125 = !DILocation(line: 36, column: 29, scope: !4114)
!4126 = !DILocation(line: 42, column: 6, scope: !4122)
!4127 = !DILocation(line: 42, column: 28, scope: !4122)
!4128 = !DILocation(line: 42, column: 6, scope: !4114)
!4129 = !DILocation(line: 44, column: 24, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4122, file: !3786, line: 42, column: 34)
!4131 = !DILocation(line: 44, column: 23, scope: !4130)
!4132 = !DILocation(line: 44, column: 6, scope: !4130)
!4133 = !DILocation(line: 44, column: 20, scope: !4130)
!4134 = !DILocation(line: 45, column: 6, scope: !4130)
!4135 = !DILocation(line: 45, column: 11, scope: !4130)
!4136 = !DILocation(line: 46, column: 2, scope: !4130)
!4137 = !DILocation(line: 47, column: 21, scope: !4121)
!4138 = !DILocation(line: 0, scope: !4121)
!4139 = !DILocation(line: 50, column: 6, scope: !4121)
!4140 = !DILocation(line: 50, column: 11, scope: !4121)
!4141 = !DILocation(line: 51, column: 3, scope: !4121)
!4142 = !DILocation(line: 52, column: 3, scope: !4121)
!4143 = !DILocation(line: 58, column: 1, scope: !4114)
!4144 = distinct !DISubprogram(name: "next_free_chunk", scope: !2658, file: !2658, line: 182, type: !3871, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4145)
!4145 = !{!4146, !4147}
!4146 = !DILocalVariable(name: "h", arg: 1, scope: !4144, file: !2658, line: 182, type: !2671)
!4147 = !DILocalVariable(name: "c", arg: 2, scope: !4144, file: !2658, line: 182, type: !2676)
!4148 = !DILocation(line: 0, scope: !4144)
!4149 = !DILocation(line: 184, column: 9, scope: !4144)
!4150 = !DILocation(line: 184, column: 2, scope: !4144)
!4151 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3786, file: !3786, line: 200, type: !4152, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4154)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{!356, !3789, !102}
!4154 = !{!4155, !4156, !4157, !4158, !4159, !4160, !4161}
!4155 = !DILocalVariable(name: "heap", arg: 1, scope: !4151, file: !3786, line: 200, type: !3789)
!4156 = !DILocalVariable(name: "mem", arg: 2, scope: !4151, file: !3786, line: 200, type: !102)
!4157 = !DILocalVariable(name: "h", scope: !4151, file: !3786, line: 202, type: !2671)
!4158 = !DILocalVariable(name: "c", scope: !4151, file: !3786, line: 203, type: !2676)
!4159 = !DILocalVariable(name: "addr", scope: !4151, file: !3786, line: 204, type: !356)
!4160 = !DILocalVariable(name: "chunk_base", scope: !4151, file: !3786, line: 205, type: !356)
!4161 = !DILocalVariable(name: "chunk_sz", scope: !4151, file: !3786, line: 206, type: !356)
!4162 = !DILocation(line: 0, scope: !4151)
!4163 = !DILocation(line: 202, column: 27, scope: !4151)
!4164 = !DILocation(line: 203, column: 16, scope: !4151)
!4165 = !DILocation(line: 204, column: 16, scope: !4151)
!4166 = !DILocation(line: 205, column: 31, scope: !4151)
!4167 = !DILocation(line: 205, column: 22, scope: !4151)
!4168 = !DILocation(line: 206, column: 20, scope: !4151)
!4169 = !DILocation(line: 206, column: 37, scope: !4151)
!4170 = !DILocation(line: 208, column: 26, scope: !4151)
!4171 = !DILocation(line: 208, column: 18, scope: !4151)
!4172 = !DILocation(line: 208, column: 2, scope: !4151)
!4173 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3786, file: !3786, line: 263, type: !4174, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4176)
!4174 = !DISubroutineType(types: !4175)
!4175 = !{!102, !3789, !356}
!4176 = !{!4177, !4178, !4179, !4180, !4181, !4182}
!4177 = !DILocalVariable(name: "heap", arg: 1, scope: !4173, file: !3786, line: 263, type: !3789)
!4178 = !DILocalVariable(name: "bytes", arg: 2, scope: !4173, file: !3786, line: 263, type: !356)
!4179 = !DILocalVariable(name: "h", scope: !4173, file: !3786, line: 265, type: !2671)
!4180 = !DILocalVariable(name: "mem", scope: !4173, file: !3786, line: 266, type: !102)
!4181 = !DILocalVariable(name: "chunk_sz", scope: !4173, file: !3786, line: 272, type: !3912)
!4182 = !DILocalVariable(name: "c", scope: !4173, file: !3786, line: 273, type: !2676)
!4183 = !DILocation(line: 0, scope: !4173)
!4184 = !DILocation(line: 265, column: 27, scope: !4173)
!4185 = !DILocation(line: 268, column: 12, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4173, file: !3786, line: 268, column: 6)
!4187 = !DILocation(line: 268, column: 18, scope: !4186)
!4188 = !DILocation(line: 268, column: 21, scope: !4186)
!4189 = !DILocation(line: 268, column: 6, scope: !4173)
!4190 = !DILocation(line: 272, column: 23, scope: !4173)
!4191 = !DILocation(line: 273, column: 16, scope: !4173)
!4192 = !DILocation(line: 274, column: 8, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4173, file: !3786, line: 274, column: 6)
!4194 = !DILocation(line: 274, column: 6, scope: !4173)
!4195 = !DILocation(line: 279, column: 6, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4173, file: !3786, line: 279, column: 6)
!4197 = !DILocation(line: 279, column: 23, scope: !4196)
!4198 = !DILocation(line: 279, column: 6, scope: !4173)
!4199 = !DILocation(line: 280, column: 24, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4196, file: !3786, line: 279, column: 35)
!4201 = !DILocation(line: 280, column: 3, scope: !4200)
!4202 = !DILocation(line: 281, column: 3, scope: !4200)
!4203 = !DILocation(line: 282, column: 2, scope: !4200)
!4204 = !DILocation(line: 284, column: 2, scope: !4173)
!4205 = !DILocation(line: 286, column: 8, scope: !4173)
!4206 = !DILocation(line: 298, column: 2, scope: !4173)
!4207 = !DILocation(line: 299, column: 1, scope: !4173)
!4208 = distinct !DISubprogram(name: "size_too_big", scope: !2658, file: !2658, line: 256, type: !4209, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4211)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!166, !2671, !356}
!4211 = !{!4212, !4213}
!4212 = !DILocalVariable(name: "h", arg: 1, scope: !4208, file: !2658, line: 256, type: !2671)
!4213 = !DILocalVariable(name: "bytes", arg: 2, scope: !4208, file: !2658, line: 256, type: !356)
!4214 = !DILocation(line: 0, scope: !4208)
!4215 = !DILocation(line: 262, column: 16, scope: !4208)
!4216 = !DILocation(line: 262, column: 36, scope: !4208)
!4217 = !DILocation(line: 262, column: 30, scope: !4208)
!4218 = !DILocation(line: 262, column: 2, scope: !4208)
!4219 = distinct !DISubprogram(name: "alloc_chunk", scope: !3786, file: !3786, line: 211, type: !4220, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4222)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{!2676, !2671, !3912}
!4222 = !{!4223, !4224, !4225, !4226, !4227, !4230, !4231, !4233, !4234, !4237}
!4223 = !DILocalVariable(name: "h", arg: 1, scope: !4219, file: !3786, line: 211, type: !2671)
!4224 = !DILocalVariable(name: "sz", arg: 2, scope: !4219, file: !3786, line: 211, type: !3912)
!4225 = !DILocalVariable(name: "bi", scope: !4219, file: !3786, line: 213, type: !103)
!4226 = !DILocalVariable(name: "b", scope: !4219, file: !3786, line: 214, type: !3975)
!4227 = !DILocalVariable(name: "first", scope: !4228, file: !3786, line: 233, type: !2676)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !3786, line: 232, column: 15)
!4229 = distinct !DILexicalBlock(scope: !4219, file: !3786, line: 232, column: 6)
!4230 = !DILocalVariable(name: "i", scope: !4228, file: !3786, line: 234, type: !103)
!4231 = !DILocalVariable(name: "c", scope: !4232, file: !3786, line: 236, type: !2676)
!4232 = distinct !DILexicalBlock(scope: !4228, file: !3786, line: 235, column: 6)
!4233 = !DILocalVariable(name: "bmask", scope: !4219, file: !3786, line: 249, type: !132)
!4234 = !DILocalVariable(name: "minbucket", scope: !4235, file: !3786, line: 252, type: !103)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !3786, line: 251, column: 19)
!4236 = distinct !DILexicalBlock(scope: !4219, file: !3786, line: 251, column: 6)
!4237 = !DILocalVariable(name: "c", scope: !4235, file: !3786, line: 253, type: !2676)
!4238 = !DILocation(line: 0, scope: !4219)
!4239 = !DILocation(line: 213, column: 11, scope: !4219)
!4240 = !DILocation(line: 232, column: 9, scope: !4229)
!4241 = !DILocation(line: 232, column: 6, scope: !4229)
!4242 = !DILocation(line: 232, column: 6, scope: !4219)
!4243 = !DILocation(line: 236, column: 21, scope: !4232)
!4244 = !DILocation(line: 0, scope: !4228)
!4245 = !DILocation(line: 0, scope: !4232)
!4246 = !DILocation(line: 237, column: 8, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4232, file: !3786, line: 237, column: 8)
!4248 = !DILocation(line: 237, column: 25, scope: !4247)
!4249 = !DILocation(line: 237, column: 8, scope: !4232)
!4250 = !DILocation(line: 238, column: 5, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4247, file: !3786, line: 237, column: 32)
!4252 = !DILocation(line: 241, column: 14, scope: !4232)
!4253 = !DILocation(line: 241, column: 12, scope: !4232)
!4254 = !DILocation(line: 243, column: 12, scope: !4228)
!4255 = !DILocation(line: 243, column: 16, scope: !4228)
!4256 = distinct !{!4256, !4257, !4258}
!4257 = !DILocation(line: 235, column: 3, scope: !4228)
!4258 = !DILocation(line: 243, column: 35, scope: !4228)
!4259 = !DILocation(line: 249, column: 22, scope: !4219)
!4260 = !DILocation(line: 249, column: 39, scope: !4219)
!4261 = !DILocation(line: 249, column: 36, scope: !4219)
!4262 = !DILocation(line: 251, column: 12, scope: !4236)
!4263 = !DILocation(line: 251, column: 6, scope: !4219)
!4264 = !DILocation(line: 252, column: 19, scope: !4235)
!4265 = !DILocation(line: 0, scope: !4235)
!4266 = !DILocation(line: 253, column: 39, scope: !4235)
!4267 = !DILocation(line: 255, column: 3, scope: !4235)
!4268 = !DILocation(line: 261, column: 1, scope: !4219)
!4269 = distinct !DISubprogram(name: "split_chunks", scope: !3786, file: !3786, line: 109, type: !3905, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4270)
!4270 = !{!4271, !4272, !4273, !4274, !4275, !4276}
!4271 = !DILocalVariable(name: "h", arg: 1, scope: !4269, file: !3786, line: 109, type: !2671)
!4272 = !DILocalVariable(name: "lc", arg: 2, scope: !4269, file: !3786, line: 109, type: !2676)
!4273 = !DILocalVariable(name: "rc", arg: 3, scope: !4269, file: !3786, line: 109, type: !2676)
!4274 = !DILocalVariable(name: "sz0", scope: !4269, file: !3786, line: 114, type: !3912)
!4275 = !DILocalVariable(name: "lsz", scope: !4269, file: !3786, line: 115, type: !3912)
!4276 = !DILocalVariable(name: "rsz", scope: !4269, file: !3786, line: 116, type: !3912)
!4277 = !DILocation(line: 0, scope: !4269)
!4278 = !DILocation(line: 114, column: 18, scope: !4269)
!4279 = !DILocation(line: 115, column: 21, scope: !4269)
!4280 = !DILocation(line: 116, column: 22, scope: !4269)
!4281 = !DILocation(line: 118, column: 2, scope: !4269)
!4282 = !DILocation(line: 119, column: 2, scope: !4269)
!4283 = !DILocation(line: 120, column: 2, scope: !4269)
!4284 = !DILocation(line: 121, column: 25, scope: !4269)
!4285 = !DILocation(line: 121, column: 2, scope: !4269)
!4286 = !DILocation(line: 122, column: 1, scope: !4269)
!4287 = distinct !DISubprogram(name: "chunk_mem", scope: !3786, file: !3786, line: 24, type: !4288, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4290)
!4288 = !DISubroutineType(types: !4289)
!4289 = !{!102, !2671, !2676}
!4290 = !{!4291, !4292, !4293, !4294}
!4291 = !DILocalVariable(name: "h", arg: 1, scope: !4287, file: !3786, line: 24, type: !2671)
!4292 = !DILocalVariable(name: "c", arg: 2, scope: !4287, file: !3786, line: 24, type: !2676)
!4293 = !DILocalVariable(name: "buf", scope: !4287, file: !3786, line: 26, type: !2665)
!4294 = !DILocalVariable(name: "ret", scope: !4287, file: !3786, line: 27, type: !270)
!4295 = !DILocation(line: 0, scope: !4287)
!4296 = !DILocation(line: 26, column: 22, scope: !4287)
!4297 = !DILocation(line: 27, column: 38, scope: !4287)
!4298 = !DILocation(line: 31, column: 2, scope: !4287)
!4299 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3786, file: !3786, line: 301, type: !4300, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4302)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!102, !3789, !356, !356}
!4302 = !{!4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314}
!4303 = !DILocalVariable(name: "heap", arg: 1, scope: !4299, file: !3786, line: 301, type: !3789)
!4304 = !DILocalVariable(name: "align", arg: 2, scope: !4299, file: !3786, line: 301, type: !356)
!4305 = !DILocalVariable(name: "bytes", arg: 3, scope: !4299, file: !3786, line: 301, type: !356)
!4306 = !DILocalVariable(name: "h", scope: !4299, file: !3786, line: 303, type: !2671)
!4307 = !DILocalVariable(name: "gap", scope: !4299, file: !3786, line: 304, type: !356)
!4308 = !DILocalVariable(name: "rew", scope: !4299, file: !3786, line: 304, type: !356)
!4309 = !DILocalVariable(name: "padded_sz", scope: !4299, file: !3786, line: 335, type: !3912)
!4310 = !DILocalVariable(name: "c0", scope: !4299, file: !3786, line: 336, type: !2676)
!4311 = !DILocalVariable(name: "mem", scope: !4299, file: !3786, line: 341, type: !270)
!4312 = !DILocalVariable(name: "end", scope: !4299, file: !3786, line: 345, type: !2665)
!4313 = !DILocalVariable(name: "c", scope: !4299, file: !3786, line: 348, type: !2676)
!4314 = !DILocalVariable(name: "c_end", scope: !4299, file: !3786, line: 349, type: !2676)
!4315 = !DILocation(line: 0, scope: !4299)
!4316 = !DILocation(line: 303, column: 27, scope: !4299)
!4317 = !DILocation(line: 313, column: 16, scope: !4299)
!4318 = !DILocation(line: 313, column: 14, scope: !4299)
!4319 = !DILocation(line: 314, column: 12, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4299, file: !3786, line: 314, column: 6)
!4321 = !DILocation(line: 314, column: 6, scope: !4299)
!4322 = !DILocation(line: 315, column: 9, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4320, file: !3786, line: 314, column: 20)
!4324 = !DILocation(line: 316, column: 9, scope: !4323)
!4325 = !DILocation(line: 318, column: 13, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4327, file: !3786, line: 318, column: 7)
!4327 = distinct !DILexicalBlock(scope: !4320, file: !3786, line: 317, column: 9)
!4328 = !DILocation(line: 318, column: 7, scope: !4327)
!4329 = !DILocation(line: 319, column: 11, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4326, file: !3786, line: 318, column: 39)
!4331 = !DILocation(line: 319, column: 4, scope: !4330)
!4332 = !DILocation(line: 0, scope: !4320)
!4333 = !DILocation(line: 326, column: 12, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4299, file: !3786, line: 326, column: 6)
!4335 = !DILocation(line: 326, column: 17, scope: !4334)
!4336 = !DILocation(line: 326, column: 20, scope: !4334)
!4337 = !DILocation(line: 326, column: 6, scope: !4299)
!4338 = !DILocation(line: 335, column: 50, scope: !4299)
!4339 = !DILocation(line: 335, column: 58, scope: !4299)
!4340 = !DILocation(line: 335, column: 24, scope: !4299)
!4341 = !DILocation(line: 336, column: 17, scope: !4299)
!4342 = !DILocation(line: 338, column: 9, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4299, file: !3786, line: 338, column: 6)
!4344 = !DILocation(line: 338, column: 6, scope: !4299)
!4345 = !DILocation(line: 341, column: 17, scope: !4299)
!4346 = !DILocation(line: 344, column: 20, scope: !4299)
!4347 = !DILocation(line: 344, column: 8, scope: !4299)
!4348 = !DILocation(line: 344, column: 47, scope: !4299)
!4349 = !DILocation(line: 345, column: 39, scope: !4299)
!4350 = !DILocation(line: 348, column: 16, scope: !4299)
!4351 = !DILocation(line: 349, column: 26, scope: !4299)
!4352 = !DILocation(line: 349, column: 24, scope: !4299)
!4353 = !DILocation(line: 353, column: 8, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4299, file: !3786, line: 353, column: 6)
!4355 = !DILocation(line: 353, column: 6, scope: !4299)
!4356 = !DILocation(line: 354, column: 3, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4354, file: !3786, line: 353, column: 14)
!4358 = !DILocation(line: 355, column: 3, scope: !4357)
!4359 = !DILocation(line: 356, column: 2, scope: !4357)
!4360 = !DILocation(line: 359, column: 6, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4299, file: !3786, line: 359, column: 6)
!4362 = !DILocation(line: 359, column: 24, scope: !4361)
!4363 = !DILocation(line: 359, column: 6, scope: !4299)
!4364 = !DILocation(line: 360, column: 3, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4361, file: !3786, line: 359, column: 33)
!4366 = !DILocation(line: 361, column: 3, scope: !4365)
!4367 = !DILocation(line: 362, column: 2, scope: !4365)
!4368 = !DILocation(line: 364, column: 2, scope: !4299)
!4369 = !DILocation(line: 377, column: 1, scope: !4299)
!4370 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3786, file: !3786, line: 379, type: !4371, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4373)
!4371 = !DISubroutineType(types: !4372)
!4372 = !{!102, !3789, !102, !356, !356}
!4373 = !{!4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4389, !4390}
!4374 = !DILocalVariable(name: "heap", arg: 1, scope: !4370, file: !3786, line: 379, type: !3789)
!4375 = !DILocalVariable(name: "ptr", arg: 2, scope: !4370, file: !3786, line: 379, type: !102)
!4376 = !DILocalVariable(name: "align", arg: 3, scope: !4370, file: !3786, line: 380, type: !356)
!4377 = !DILocalVariable(name: "bytes", arg: 4, scope: !4370, file: !3786, line: 380, type: !356)
!4378 = !DILocalVariable(name: "h", scope: !4370, file: !3786, line: 382, type: !2671)
!4379 = !DILocalVariable(name: "c", scope: !4370, file: !3786, line: 399, type: !2676)
!4380 = !DILocalVariable(name: "rc", scope: !4370, file: !3786, line: 400, type: !2676)
!4381 = !DILocalVariable(name: "align_gap", scope: !4370, file: !3786, line: 401, type: !356)
!4382 = !DILocalVariable(name: "chunks_need", scope: !4370, file: !3786, line: 402, type: !3912)
!4383 = !DILocalVariable(name: "split_size", scope: !4384, file: !3786, line: 435, type: !3912)
!4384 = distinct !DILexicalBlock(scope: !4385, file: !3786, line: 433, column: 61)
!4385 = distinct !DILexicalBlock(scope: !4386, file: !3786, line: 432, column: 13)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !3786, line: 409, column: 13)
!4387 = distinct !DILexicalBlock(scope: !4388, file: !3786, line: 406, column: 13)
!4388 = distinct !DILexicalBlock(scope: !4370, file: !3786, line: 404, column: 6)
!4389 = !DILocalVariable(name: "ptr2", scope: !4370, file: !3786, line: 474, type: !102)
!4390 = !DILocalVariable(name: "prev_size", scope: !4391, file: !3786, line: 477, type: !356)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !3786, line: 476, column: 20)
!4392 = distinct !DILexicalBlock(scope: !4370, file: !3786, line: 476, column: 6)
!4393 = !DILocation(line: 0, scope: !4370)
!4394 = !DILocation(line: 382, column: 27, scope: !4370)
!4395 = !DILocation(line: 385, column: 10, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4370, file: !3786, line: 385, column: 6)
!4397 = !DILocation(line: 385, column: 6, scope: !4370)
!4398 = !DILocation(line: 386, column: 10, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4396, file: !3786, line: 385, column: 19)
!4400 = !DILocation(line: 386, column: 3, scope: !4399)
!4401 = !DILocation(line: 388, column: 12, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4370, file: !3786, line: 388, column: 6)
!4403 = !DILocation(line: 388, column: 6, scope: !4370)
!4404 = !DILocation(line: 389, column: 3, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4402, file: !3786, line: 388, column: 18)
!4406 = !DILocation(line: 390, column: 3, scope: !4405)
!4407 = !DILocation(line: 395, column: 6, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4370, file: !3786, line: 395, column: 6)
!4409 = !DILocation(line: 395, column: 6, scope: !4370)
!4410 = !DILocation(line: 399, column: 16, scope: !4370)
!4411 = !DILocation(line: 400, column: 17, scope: !4370)
!4412 = !DILocation(line: 401, column: 49, scope: !4370)
!4413 = !DILocation(line: 401, column: 36, scope: !4370)
!4414 = !DILocation(line: 402, column: 52, scope: !4370)
!4415 = !DILocation(line: 402, column: 26, scope: !4370)
!4416 = !DILocation(line: 404, column: 6, scope: !4388)
!4417 = !DILocation(line: 404, column: 12, scope: !4388)
!4418 = !DILocation(line: 404, column: 40, scope: !4388)
!4419 = !DILocation(line: 404, column: 31, scope: !4388)
!4420 = !DILocation(line: 404, column: 6, scope: !4370)
!4421 = !DILocation(line: 406, column: 13, scope: !4387)
!4422 = !DILocation(line: 406, column: 30, scope: !4387)
!4423 = !DILocation(line: 406, column: 13, scope: !4388)
!4424 = !DILocation(line: 409, column: 30, scope: !4386)
!4425 = !DILocation(line: 409, column: 13, scope: !4387)
!4426 = !DILocation(line: 420, column: 24, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4386, file: !3786, line: 409, column: 45)
!4428 = !DILocation(line: 420, column: 3, scope: !4427)
!4429 = !DILocation(line: 421, column: 3, scope: !4427)
!4430 = !DILocation(line: 422, column: 3, scope: !4427)
!4431 = !DILocation(line: 431, column: 3, scope: !4427)
!4432 = !DILocation(line: 432, column: 14, scope: !4385)
!4433 = !DILocation(line: 432, column: 32, scope: !4385)
!4434 = !DILocation(line: 433, column: 26, scope: !4385)
!4435 = !DILocation(line: 433, column: 24, scope: !4385)
!4436 = !DILocation(line: 433, column: 44, scope: !4385)
!4437 = !DILocation(line: 432, column: 13, scope: !4386)
!4438 = !DILocation(line: 435, column: 38, scope: !4384)
!4439 = !DILocation(line: 0, scope: !4384)
!4440 = !DILocation(line: 445, column: 3, scope: !4384)
!4441 = !DILocation(line: 447, column: 20, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4384, file: !3786, line: 447, column: 7)
!4443 = !DILocation(line: 447, column: 18, scope: !4442)
!4444 = !DILocation(line: 447, column: 7, scope: !4384)
!4445 = !DILocation(line: 448, column: 27, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4442, file: !3786, line: 447, column: 39)
!4447 = !DILocation(line: 448, column: 4, scope: !4446)
!4448 = !DILocation(line: 449, column: 4, scope: !4446)
!4449 = !DILocation(line: 450, column: 3, scope: !4446)
!4450 = !DILocation(line: 452, column: 3, scope: !4384)
!4451 = !DILocation(line: 453, column: 3, scope: !4384)
!4452 = !DILocation(line: 474, column: 15, scope: !4370)
!4453 = !DILocation(line: 476, column: 11, scope: !4392)
!4454 = !DILocation(line: 476, column: 6, scope: !4370)
!4455 = !DILocation(line: 477, column: 42, scope: !4391)
!4456 = !DILocation(line: 477, column: 22, scope: !4391)
!4457 = !DILocation(line: 477, column: 60, scope: !4391)
!4458 = !DILocation(line: 0, scope: !4391)
!4459 = !DILocation(line: 479, column: 21, scope: !4391)
!4460 = !DILocation(line: 479, column: 3, scope: !4391)
!4461 = !DILocation(line: 480, column: 3, scope: !4391)
!4462 = !DILocation(line: 481, column: 2, scope: !4391)
!4463 = !DILocation(line: 483, column: 1, scope: !4370)
!4464 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2658, file: !2658, line: 245, type: !4465, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4467)
!4465 = !DISubroutineType(types: !4466)
!4466 = !{!356, !2671, !3912}
!4467 = !{!4468, !4469}
!4468 = !DILocalVariable(name: "h", arg: 1, scope: !4464, file: !2658, line: 245, type: !2671)
!4469 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4464, file: !2658, line: 245, type: !3912)
!4470 = !DILocation(line: 0, scope: !4464)
!4471 = !DILocation(line: 247, column: 20, scope: !4464)
!4472 = !DILocation(line: 247, column: 33, scope: !4464)
!4473 = !DILocation(line: 247, column: 2, scope: !4464)
!4474 = distinct !DISubprogram(name: "sys_heap_init", scope: !3786, file: !3786, line: 485, type: !4475, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !4477)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{null, !3789, !102, !356}
!4477 = !{!4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487}
!4478 = !DILocalVariable(name: "heap", arg: 1, scope: !4474, file: !3786, line: 485, type: !3789)
!4479 = !DILocalVariable(name: "mem", arg: 2, scope: !4474, file: !3786, line: 485, type: !102)
!4480 = !DILocalVariable(name: "bytes", arg: 3, scope: !4474, file: !3786, line: 485, type: !356)
!4481 = !DILocalVariable(name: "addr", scope: !4474, file: !3786, line: 502, type: !22)
!4482 = !DILocalVariable(name: "end", scope: !4474, file: !3786, line: 503, type: !22)
!4483 = !DILocalVariable(name: "heap_sz", scope: !4474, file: !3786, line: 504, type: !3912)
!4484 = !DILocalVariable(name: "h", scope: !4474, file: !3786, line: 509, type: !2671)
!4485 = !DILocalVariable(name: "nb_buckets", scope: !4474, file: !3786, line: 520, type: !103)
!4486 = !DILocalVariable(name: "chunk0_size", scope: !4474, file: !3786, line: 521, type: !3912)
!4487 = !DILocalVariable(name: "i", scope: !4488, file: !3786, line: 526, type: !103)
!4488 = distinct !DILexicalBlock(scope: !4474, file: !3786, line: 526, column: 2)
!4489 = !DILocation(line: 0, scope: !4474)
!4490 = !DILocation(line: 499, column: 8, scope: !4474)
!4491 = !DILocation(line: 502, column: 19, scope: !4474)
!4492 = !DILocation(line: 503, column: 18, scope: !4474)
!4493 = !DILocation(line: 504, column: 27, scope: !4474)
!4494 = !DILocation(line: 504, column: 35, scope: !4474)
!4495 = !DILocation(line: 509, column: 21, scope: !4474)
!4496 = !DILocation(line: 510, column: 8, scope: !4474)
!4497 = !DILocation(line: 510, column: 13, scope: !4474)
!4498 = !DILocation(line: 511, column: 5, scope: !4474)
!4499 = !DILocation(line: 511, column: 15, scope: !4474)
!4500 = !DILocation(line: 512, column: 5, scope: !4474)
!4501 = !DILocation(line: 512, column: 19, scope: !4474)
!4502 = !DILocation(line: 520, column: 19, scope: !4474)
!4503 = !DILocation(line: 522, column: 21, scope: !4474)
!4504 = !DILocation(line: 521, column: 56, scope: !4474)
!4505 = !DILocation(line: 521, column: 26, scope: !4474)
!4506 = !DILocation(line: 0, scope: !4488)
!4507 = !DILocation(line: 526, column: 20, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4488, file: !3786, line: 526, column: 2)
!4509 = !DILocation(line: 526, column: 2, scope: !4488)
!4510 = !DILocation(line: 531, column: 2, scope: !4474)
!4511 = !DILocation(line: 532, column: 2, scope: !4474)
!4512 = !DILocation(line: 533, column: 2, scope: !4474)
!4513 = !DILocation(line: 536, column: 41, scope: !4474)
!4514 = !DILocation(line: 536, column: 2, scope: !4474)
!4515 = !DILocation(line: 537, column: 2, scope: !4474)
!4516 = !DILocation(line: 540, column: 2, scope: !4474)
!4517 = !DILocation(line: 541, column: 2, scope: !4474)
!4518 = !DILocation(line: 542, column: 2, scope: !4474)
!4519 = !DILocation(line: 544, column: 2, scope: !4474)
!4520 = !DILocation(line: 545, column: 1, scope: !4474)
!4521 = !DILocation(line: 527, column: 17, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4508, file: !3786, line: 526, column: 39)
!4523 = !DILocation(line: 527, column: 22, scope: !4522)
!4524 = !DILocation(line: 526, column: 35, scope: !4508)
!4525 = distinct !{!4525, !4509, !4526}
!4526 = !DILocation(line: 528, column: 2, scope: !4488)
!4527 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2691, file: !2691, line: 1338, type: !4528, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !4536)
!4528 = !DISubroutineType(types: !4529)
!4529 = !{!103, !3516, !102, !155, !4530, !132}
!4530 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3482, line: 99, baseType: !4531)
!4531 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3482, line: 40, baseType: !4532)
!4532 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2691, baseType: !4533)
!4533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4534)
!4534 = !{!4535}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4533, file: !2691, baseType: !102, size: 32)
!4536 = !{!4537, !4538, !4539, !4540, !4541, !4542, !4546, !4547, !4548, !4550, !4555, !4600, !4603, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4615, !4616, !4617, !4621, !4624, !4626, !4629, !4630, !4631, !4636, !4642, !4645, !4649, !4655, !4659, !4662, !4664, !4667}
!4537 = !DILocalVariable(name: "out", arg: 1, scope: !4527, file: !2691, line: 1338, type: !3516)
!4538 = !DILocalVariable(name: "ctx", arg: 2, scope: !4527, file: !2691, line: 1338, type: !102)
!4539 = !DILocalVariable(name: "fp", arg: 3, scope: !4527, file: !2691, line: 1338, type: !155)
!4540 = !DILocalVariable(name: "ap", arg: 4, scope: !4527, file: !2691, line: 1339, type: !4530)
!4541 = !DILocalVariable(name: "flags", arg: 5, scope: !4527, file: !2691, line: 1339, type: !132)
!4542 = !DILocalVariable(name: "buf", scope: !4527, file: !2691, line: 1341, type: !4543)
!4543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 176, elements: !4544)
!4544 = !{!4545}
!4545 = !DISubrange(count: 22)
!4546 = !DILocalVariable(name: "count", scope: !4527, file: !2691, line: 1342, type: !356)
!4547 = !DILocalVariable(name: "sint", scope: !4527, file: !2691, line: 1343, type: !2710)
!4548 = !DILocalVariable(name: "tagged_ap", scope: !4527, file: !2691, line: 1345, type: !4549)
!4549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!4550 = !DILocalVariable(name: "rc", scope: !4551, file: !2691, line: 1377, type: !103)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !2691, line: 1377, column: 4)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !2691, line: 1376, column: 19)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1376, column: 7)
!4554 = distinct !DILexicalBlock(scope: !4527, file: !2691, line: 1375, column: 19)
!4555 = !DILocalVariable(name: "state", scope: !4554, file: !2691, line: 1395, type: !4556)
!4556 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4527, file: !2691, line: 1392, size: 192, elements: !4557)
!4557 = !{!4558, !4568}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4556, file: !2691, line: 1393, baseType: !4559, size: 64)
!4559 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2691, line: 166, size: 64, elements: !4560)
!4560 = !{!4561, !4562, !4563, !4565, !4567}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4559, file: !2691, line: 168, baseType: !2710, size: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4559, file: !2691, line: 171, baseType: !2713, size: 64)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4559, file: !2691, line: 174, baseType: !4564, size: 64)
!4564 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4559, file: !2691, line: 177, baseType: !4566, size: 64)
!4566 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4559, file: !2691, line: 180, baseType: !102, size: 32)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4556, file: !2691, line: 1394, baseType: !4569, size: 96, offset: 64)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2691, line: 189, size: 96, elements: !4570)
!4570 = !{!4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4595}
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4569, file: !2691, line: 191, baseType: !166, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4569, file: !2691, line: 194, baseType: !166, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4569, file: !2691, line: 197, baseType: !166, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4569, file: !2691, line: 200, baseType: !166, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4569, file: !2691, line: 203, baseType: !166, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4569, file: !2691, line: 206, baseType: !166, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4569, file: !2691, line: 209, baseType: !166, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4569, file: !2691, line: 212, baseType: !166, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4569, file: !2691, line: 219, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4569, file: !2691, line: 222, baseType: !166, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4569, file: !2691, line: 229, baseType: !166, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4569, file: !2691, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4569, file: !2691, line: 238, baseType: !166, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4569, file: !2691, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4569, file: !2691, line: 244, baseType: !166, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4569, file: !2691, line: 247, baseType: !166, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4569, file: !2691, line: 252, baseType: !166, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4569, file: !2691, line: 257, baseType: !166, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4569, file: !2691, line: 260, baseType: !164, size: 8, offset: 24)
!4590 = !DIDerivedType(tag: DW_TAG_member, scope: !4569, file: !2691, line: 262, baseType: !4591, size: 32, offset: 32)
!4591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !2691, line: 262, size: 32, elements: !4592)
!4592 = !{!4593, !4594}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4591, file: !2691, line: 267, baseType: !103, size: 32)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4591, file: !2691, line: 289, baseType: !103, size: 32)
!4595 = !DIDerivedType(tag: DW_TAG_member, scope: !4569, file: !2691, line: 292, baseType: !4596, size: 32, offset: 64)
!4596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !2691, line: 292, size: 32, elements: !4597)
!4597 = !{!4598, !4599}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4596, file: !2691, line: 297, baseType: !103, size: 32)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4596, file: !2691, line: 306, baseType: !103, size: 32)
!4600 = !DILocalVariable(name: "conv", scope: !4554, file: !2691, line: 1400, type: !4601)
!4601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4602)
!4602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4569, size: 32)
!4603 = !DILocalVariable(name: "value", scope: !4554, file: !2691, line: 1401, type: !4604)
!4604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4605)
!4605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4559, size: 32)
!4606 = !DILocalVariable(name: "sp", scope: !4554, file: !2691, line: 1402, type: !155)
!4607 = !DILocalVariable(name: "width", scope: !4554, file: !2691, line: 1403, type: !103)
!4608 = !DILocalVariable(name: "precision", scope: !4554, file: !2691, line: 1404, type: !103)
!4609 = !DILocalVariable(name: "bps", scope: !4554, file: !2691, line: 1405, type: !155)
!4610 = !DILocalVariable(name: "bpe", scope: !4554, file: !2691, line: 1406, type: !155)
!4611 = !DILocalVariable(name: "sign", scope: !4554, file: !2691, line: 1407, type: !108)
!4612 = !DILocalVariable(name: "arg", scope: !4613, file: !2691, line: 1432, type: !103)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !2691, line: 1431, column: 24)
!4614 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1431, column: 7)
!4615 = !DILocalVariable(name: "specifier_cat", scope: !4554, file: !2691, line: 1468, type: !2690)
!4616 = !DILocalVariable(name: "length_mod", scope: !4554, file: !2691, line: 1470, type: !2698)
!4617 = !DILocalVariable(name: "rc", scope: !4618, file: !2691, line: 1575, type: !103)
!4618 = distinct !DILexicalBlock(scope: !4619, file: !2691, line: 1575, column: 4)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !2691, line: 1574, column: 43)
!4620 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1574, column: 7)
!4621 = !DILocalVariable(name: "rc", scope: !4622, file: !2691, line: 1584, type: !103)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !2691, line: 1584, column: 4)
!4623 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1582, column: 28)
!4624 = !DILocalVariable(name: "len", scope: !4625, file: !2691, line: 1589, type: !356)
!4625 = distinct !DILexicalBlock(scope: !4623, file: !2691, line: 1586, column: 13)
!4626 = !DILocalVariable(name: "len", scope: !4627, file: !2691, line: 1641, type: !356)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !2691, line: 1640, column: 24)
!4628 = distinct !DILexicalBlock(scope: !4623, file: !2691, line: 1640, column: 8)
!4629 = !DILocalVariable(name: "nj_len", scope: !4554, file: !2691, line: 1722, type: !356)
!4630 = !DILocalVariable(name: "pad_len", scope: !4554, file: !2691, line: 1723, type: !103)
!4631 = !DILocalVariable(name: "pad", scope: !4632, file: !2691, line: 1751, type: !108)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !2691, line: 1750, column: 26)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !2691, line: 1750, column: 8)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !2691, line: 1747, column: 18)
!4635 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1747, column: 7)
!4636 = !DILocalVariable(name: "rc", scope: !4637, file: !2691, line: 1758, type: !103)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !2691, line: 1758, column: 7)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !2691, line: 1757, column: 21)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !2691, line: 1757, column: 10)
!4640 = distinct !DILexicalBlock(scope: !4641, file: !2691, line: 1756, column: 26)
!4641 = distinct !DILexicalBlock(scope: !4632, file: !2691, line: 1756, column: 9)
!4642 = !DILocalVariable(name: "rc", scope: !4643, file: !2691, line: 1765, type: !103)
!4643 = distinct !DILexicalBlock(scope: !4644, file: !2691, line: 1765, column: 6)
!4644 = distinct !DILexicalBlock(scope: !4632, file: !2691, line: 1764, column: 25)
!4645 = !DILocalVariable(name: "rc", scope: !4646, file: !2691, line: 1774, type: !103)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !2691, line: 1774, column: 4)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !2691, line: 1773, column: 18)
!4648 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1773, column: 7)
!4649 = !DILocalVariable(name: "rc", scope: !4650, file: !2691, line: 1819, type: !103)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !2691, line: 1819, column: 5)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !2691, line: 1818, column: 44)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !2691, line: 1818, column: 8)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !2691, line: 1817, column: 10)
!4654 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1777, column: 7)
!4655 = !DILocalVariable(name: "rc", scope: !4656, file: !2691, line: 1823, type: !103)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !2691, line: 1823, column: 5)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !2691, line: 1822, column: 26)
!4658 = distinct !DILexicalBlock(scope: !4653, file: !2691, line: 1822, column: 8)
!4659 = !DILocalVariable(name: "rc", scope: !4660, file: !2691, line: 1828, type: !103)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !2691, line: 1828, column: 5)
!4661 = distinct !DILexicalBlock(scope: !4653, file: !2691, line: 1827, column: 26)
!4662 = !DILocalVariable(name: "rc", scope: !4663, file: !2691, line: 1831, type: !103)
!4663 = distinct !DILexicalBlock(scope: !4653, file: !2691, line: 1831, column: 4)
!4664 = !DILocalVariable(name: "rc", scope: !4665, file: !2691, line: 1836, type: !103)
!4665 = distinct !DILexicalBlock(scope: !4666, file: !2691, line: 1836, column: 4)
!4666 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1835, column: 21)
!4667 = !DILabel(scope: !4623, name: "prec_int_pad0", file: !2691, line: 1634)
!4668 = !DILocation(line: 0, scope: !4527)
!4669 = !DILocation(line: 1341, column: 2, scope: !4527)
!4670 = !DILocation(line: 1341, column: 7, scope: !4527)
!4671 = !DILocation(line: 1375, column: 2, scope: !4527)
!4672 = !DILocation(line: 1342, column: 9, scope: !4527)
!4673 = !DILocation(line: 1375, column: 9, scope: !4527)
!4674 = !DILocation(line: 1377, column: 4, scope: !4551)
!4675 = !DILocation(line: 0, scope: !4551)
!4676 = !DILocation(line: 1377, column: 4, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4551, file: !2691, line: 1377, column: 4)
!4678 = distinct !{!4678, !4671, !4679}
!4679 = !DILocation(line: 1839, column: 2, scope: !4527)
!4680 = !DILocation(line: 1392, column: 3, scope: !4554)
!4681 = !DILocation(line: 1395, column: 5, scope: !4554)
!4682 = !DILocation(line: 0, scope: !4554)
!4683 = !DILocation(line: 1409, column: 8, scope: !4554)
!4684 = !DILocation(line: 1414, column: 13, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1414, column: 7)
!4686 = !DILocation(line: 1414, column: 7, scope: !4554)
!4687 = !DILocation(line: 1415, column: 12, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4685, file: !2691, line: 1414, column: 25)
!4689 = !DILocation(line: 1417, column: 14, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4688, file: !2691, line: 1417, column: 8)
!4691 = !DILocation(line: 1417, column: 8, scope: !4688)
!4692 = !DILocation(line: 1418, column: 21, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4690, file: !2691, line: 1417, column: 19)
!4694 = !DILocation(line: 1419, column: 13, scope: !4693)
!4695 = !DILocation(line: 1420, column: 4, scope: !4693)
!4696 = !DILocation(line: 1421, column: 20, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4685, file: !2691, line: 1421, column: 14)
!4698 = !DILocation(line: 1421, column: 14, scope: !4685)
!4699 = !DILocation(line: 1431, column: 13, scope: !4614)
!4700 = !DILocation(line: 1431, column: 7, scope: !4554)
!4701 = !DILocation(line: 1432, column: 14, scope: !4613)
!4702 = !DILocation(line: 0, scope: !4613)
!4703 = !DILocation(line: 1434, column: 12, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4613, file: !2691, line: 1434, column: 8)
!4705 = !DILocation(line: 1434, column: 8, scope: !4613)
!4706 = !DILocation(line: 1435, column: 24, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4704, file: !2691, line: 1434, column: 17)
!4708 = !DILocation(line: 1436, column: 4, scope: !4707)
!4709 = !DILocation(line: 1439, column: 20, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4614, file: !2691, line: 1439, column: 14)
!4711 = !DILocation(line: 1439, column: 14, scope: !4614)
!4712 = !DILocation(line: 1469, column: 37, scope: !4554)
!4713 = !DILocation(line: 1448, column: 20, scope: !4554)
!4714 = !DILocation(line: 1449, column: 22, scope: !4554)
!4715 = !DILocation(line: 1471, column: 34, scope: !4554)
!4716 = !DILocation(line: 1478, column: 7, scope: !4554)
!4717 = !DILocation(line: 1479, column: 4, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !2691, line: 1478, column: 40)
!4719 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1478, column: 7)
!4720 = !DILocation(line: 1484, column: 19, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4718, file: !2691, line: 1479, column: 24)
!4722 = !DILocation(line: 1484, column: 17, scope: !4721)
!4723 = !DILocation(line: 1485, column: 5, scope: !4721)
!4724 = !DILocation(line: 1492, column: 20, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !2691, line: 1491, column: 12)
!4726 = distinct !DILexicalBlock(scope: !4721, file: !2691, line: 1487, column: 9)
!4727 = !DILocation(line: 1492, column: 18, scope: !4725)
!4728 = !DILocation(line: 1494, column: 5, scope: !4721)
!4729 = !DILocation(line: 1497, column: 23, scope: !4721)
!4730 = !DILocation(line: 1496, column: 17, scope: !4721)
!4731 = !DILocation(line: 1498, column: 5, scope: !4721)
!4732 = !DILocation(line: 1501, column: 23, scope: !4721)
!4733 = !DILocation(line: 1500, column: 17, scope: !4721)
!4734 = !DILocation(line: 1502, column: 5, scope: !4721)
!4735 = !DILocation(line: 1513, column: 23, scope: !4721)
!4736 = !DILocation(line: 1513, column: 6, scope: !4721)
!4737 = !DILocation(line: 1512, column: 17, scope: !4721)
!4738 = !DILocation(line: 1514, column: 5, scope: !4721)
!4739 = !DILocation(line: 0, scope: !4721)
!4740 = !DILocation(line: 1516, column: 8, scope: !4718)
!4741 = !DILocation(line: 1517, column: 19, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !2691, line: 1516, column: 33)
!4743 = distinct !DILexicalBlock(scope: !4718, file: !2691, line: 1516, column: 8)
!4744 = !DILocation(line: 1517, column: 17, scope: !4742)
!4745 = !DILocation(line: 1518, column: 4, scope: !4742)
!4746 = !DILocation(line: 1519, column: 19, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4748, file: !2691, line: 1518, column: 39)
!4748 = distinct !DILexicalBlock(scope: !4743, file: !2691, line: 1518, column: 15)
!4749 = !DILocation(line: 1519, column: 17, scope: !4747)
!4750 = !DILocation(line: 1520, column: 4, scope: !4747)
!4751 = !DILocation(line: 1522, column: 4, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !2691, line: 1521, column: 47)
!4753 = distinct !DILexicalBlock(scope: !4719, file: !2691, line: 1521, column: 14)
!4754 = !DILocation(line: 1527, column: 19, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4752, file: !2691, line: 1522, column: 24)
!4756 = !DILocation(line: 1527, column: 17, scope: !4755)
!4757 = !DILocation(line: 1528, column: 5, scope: !4755)
!4758 = !DILocation(line: 0, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4755, file: !2691, line: 1530, column: 9)
!4760 = !DILocation(line: 1540, column: 23, scope: !4755)
!4761 = !DILocation(line: 1539, column: 17, scope: !4755)
!4762 = !DILocation(line: 1542, column: 5, scope: !4755)
!4763 = !DILocation(line: 1545, column: 23, scope: !4755)
!4764 = !DILocation(line: 1544, column: 17, scope: !4755)
!4765 = !DILocation(line: 1547, column: 5, scope: !4755)
!4766 = !DILocation(line: 1551, column: 23, scope: !4755)
!4767 = !DILocation(line: 1551, column: 6, scope: !4755)
!4768 = !DILocation(line: 1550, column: 17, scope: !4755)
!4769 = !DILocation(line: 1552, column: 5, scope: !4755)
!4770 = !DILocation(line: 0, scope: !4755)
!4771 = !DILocation(line: 1554, column: 8, scope: !4752)
!4772 = !DILocation(line: 1555, column: 19, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !2691, line: 1554, column: 33)
!4774 = distinct !DILexicalBlock(scope: !4752, file: !2691, line: 1554, column: 8)
!4775 = !DILocation(line: 1555, column: 17, scope: !4773)
!4776 = !DILocation(line: 1556, column: 4, scope: !4773)
!4777 = !DILocation(line: 1557, column: 19, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4779, file: !2691, line: 1556, column: 39)
!4779 = distinct !DILexicalBlock(scope: !4774, file: !2691, line: 1556, column: 15)
!4780 = !DILocation(line: 1557, column: 17, scope: !4778)
!4781 = !DILocation(line: 1558, column: 4, scope: !4778)
!4782 = !DILocation(line: 0, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4784, file: !2691, line: 1560, column: 8)
!4784 = distinct !DILexicalBlock(scope: !4785, file: !2691, line: 1559, column: 45)
!4785 = distinct !DILexicalBlock(scope: !4753, file: !2691, line: 1559, column: 14)
!4786 = !DILocation(line: 1566, column: 17, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4788, file: !2691, line: 1565, column: 46)
!4788 = distinct !DILexicalBlock(scope: !4785, file: !2691, line: 1565, column: 14)
!4789 = !DILocation(line: 1566, column: 15, scope: !4787)
!4790 = !DILocation(line: 1567, column: 3, scope: !4787)
!4791 = !DILocation(line: 1574, column: 21, scope: !4620)
!4792 = !DILocation(line: 1575, column: 4, scope: !4618)
!4793 = !DILocation(line: 0, scope: !4618)
!4794 = !DILocation(line: 1575, column: 4, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4618, file: !2691, line: 1575, column: 4)
!4796 = !DILocation(line: 1582, column: 17, scope: !4554)
!4797 = !DILocation(line: 1582, column: 3, scope: !4554)
!4798 = !DILocation(line: 1584, column: 4, scope: !4622)
!4799 = !DILocation(line: 0, scope: !4622)
!4800 = !DILocation(line: 1584, column: 4, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4622, file: !2691, line: 1584, column: 4)
!4802 = !DILocation(line: 1587, column: 31, scope: !4625)
!4803 = !DILocation(line: 1591, column: 18, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4625, file: !2691, line: 1591, column: 8)
!4805 = !DILocation(line: 1591, column: 8, scope: !4625)
!4806 = !DILocation(line: 1592, column: 11, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4804, file: !2691, line: 1591, column: 24)
!4808 = !DILocation(line: 0, scope: !4625)
!4809 = !DILocation(line: 1593, column: 4, scope: !4807)
!4810 = !DILocation(line: 1594, column: 11, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4804, file: !2691, line: 1593, column: 11)
!4812 = !DILocation(line: 1604, column: 51, scope: !4623)
!4813 = !DILocation(line: 1604, column: 13, scope: !4623)
!4814 = !DILocation(line: 1604, column: 11, scope: !4623)
!4815 = !DILocation(line: 1606, column: 4, scope: !4623)
!4816 = !DILocation(line: 1609, column: 14, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4623, file: !2691, line: 1609, column: 8)
!4818 = !DILocation(line: 1609, column: 8, scope: !4623)
!4819 = !DILocation(line: 1619, column: 18, scope: !4623)
!4820 = !DILocation(line: 1620, column: 13, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4623, file: !2691, line: 1620, column: 8)
!4822 = !DILocation(line: 1620, column: 8, scope: !4623)
!4823 = !DILocation(line: 1622, column: 36, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4821, file: !2691, line: 1620, column: 18)
!4825 = !DILocation(line: 1622, column: 17, scope: !4824)
!4826 = !DILocation(line: 1623, column: 4, scope: !4824)
!4827 = !DILocation(line: 1632, column: 29, scope: !4623)
!4828 = !DILocation(line: 1632, column: 10, scope: !4623)
!4829 = !DILocation(line: 1632, column: 4, scope: !4623)
!4830 = !DILocation(line: 1407, column: 8, scope: !4554)
!4831 = !DILocation(line: 0, scope: !4623)
!4832 = !DILocation(line: 1634, column: 3, scope: !4623)
!4833 = !DILocation(line: 1640, column: 18, scope: !4628)
!4834 = !DILocation(line: 1640, column: 8, scope: !4623)
!4835 = !DILocation(line: 1729, column: 13, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1729, column: 7)
!4837 = !DILocation(line: 1641, column: 22, scope: !4627)
!4838 = !DILocation(line: 0, scope: !4627)
!4839 = !DILocation(line: 1646, column: 21, scope: !4627)
!4840 = !DILocation(line: 1649, column: 13, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4627, file: !2691, line: 1649, column: 9)
!4842 = !DILocation(line: 1649, column: 9, scope: !4627)
!4843 = !DILocation(line: 1650, column: 35, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4841, file: !2691, line: 1649, column: 34)
!4845 = !DILocation(line: 1650, column: 23, scope: !4844)
!4846 = !DILocation(line: 1651, column: 5, scope: !4844)
!4847 = !DILocation(line: 1660, column: 15, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4623, file: !2691, line: 1660, column: 8)
!4849 = !DILocation(line: 1660, column: 19, scope: !4848)
!4850 = !DILocation(line: 1660, column: 8, scope: !4623)
!4851 = !DILocation(line: 1661, column: 23, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4848, file: !2691, line: 1660, column: 28)
!4853 = !DILocation(line: 1661, column: 11, scope: !4852)
!4854 = !DILocation(line: 1665, column: 22, scope: !4852)
!4855 = !DILocation(line: 1666, column: 21, scope: !4852)
!4856 = !DILocation(line: 1668, column: 5, scope: !4852)
!4857 = !DILocation(line: 1677, column: 30, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !2691, line: 1676, column: 49)
!4859 = distinct !DILexicalBlock(scope: !4623, file: !2691, line: 1676, column: 8)
!4860 = !DILocation(line: 1677, column: 5, scope: !4858)
!4861 = !DILocation(line: 1680, column: 4, scope: !4623)
!4862 = !DILocation(line: 0, scope: !4804)
!4863 = !DILocation(line: 1597, column: 14, scope: !4625)
!4864 = !DILocation(line: 1699, column: 11, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1699, column: 7)
!4866 = !DILocation(line: 1699, column: 7, scope: !4554)
!4867 = !DILocation(line: 1725, column: 7, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1725, column: 7)
!4869 = !DILocation(line: 1725, column: 12, scope: !4868)
!4870 = !DILocation(line: 1747, column: 13, scope: !4635)
!4871 = !DILocation(line: 1747, column: 7, scope: !4554)
!4872 = !DILocation(line: 1722, column: 24, scope: !4554)
!4873 = !DILocation(line: 1725, column: 7, scope: !4554)
!4874 = !DILocation(line: 1729, column: 7, scope: !4554)
!4875 = !DILocation(line: 1736, column: 13, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4554, file: !2691, line: 1736, column: 7)
!4877 = !DILocation(line: 1735, column: 19, scope: !4554)
!4878 = !DILocation(line: 1736, column: 7, scope: !4554)
!4879 = !DILocation(line: 1748, column: 10, scope: !4634)
!4880 = !DILocation(line: 1750, column: 15, scope: !4633)
!4881 = !DILocation(line: 1750, column: 8, scope: !4634)
!4882 = !DILocation(line: 0, scope: !4632)
!4883 = !DILocation(line: 1756, column: 15, scope: !4641)
!4884 = !DILocation(line: 1756, column: 9, scope: !4632)
!4885 = !DILocation(line: 1758, column: 7, scope: !4637)
!4886 = !DILocation(line: 0, scope: !4637)
!4887 = !DILocation(line: 1758, column: 7, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4637, file: !2691, line: 1758, column: 7)
!4889 = !DILocation(line: 1764, column: 5, scope: !4632)
!4890 = !DILocation(line: 0, scope: !4634)
!4891 = !DILocation(line: 1764, column: 20, scope: !4632)
!4892 = !DILocation(line: 1764, column: 17, scope: !4632)
!4893 = !DILocation(line: 1765, column: 6, scope: !4643)
!4894 = !DILocation(line: 0, scope: !4643)
!4895 = !DILocation(line: 1765, column: 6, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4643, file: !2691, line: 1765, column: 6)
!4897 = distinct !{!4897, !4889, !4898}
!4898 = !DILocation(line: 1766, column: 5, scope: !4632)
!4899 = !DILocation(line: 1773, column: 12, scope: !4648)
!4900 = !DILocation(line: 1773, column: 7, scope: !4554)
!4901 = !DILocation(line: 1773, column: 7, scope: !4648)
!4902 = !DILocation(line: 1774, column: 4, scope: !4646)
!4903 = !DILocation(line: 0, scope: !4646)
!4904 = !DILocation(line: 1774, column: 4, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4646, file: !2691, line: 1774, column: 4)
!4906 = !DILocation(line: 1818, column: 8, scope: !4652)
!4907 = !DILocation(line: 1818, column: 27, scope: !4652)
!4908 = !DILocation(line: 1818, column: 25, scope: !4652)
!4909 = !DILocation(line: 1818, column: 8, scope: !4653)
!4910 = !DILocation(line: 1819, column: 5, scope: !4650)
!4911 = !DILocation(line: 0, scope: !4650)
!4912 = !DILocation(line: 1819, column: 5, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4650, file: !2691, line: 1819, column: 5)
!4914 = !DILocation(line: 1822, column: 14, scope: !4658)
!4915 = !DILocation(line: 1822, column: 8, scope: !4653)
!4916 = !DILocation(line: 1823, column: 5, scope: !4656)
!4917 = !DILocation(line: 0, scope: !4656)
!4918 = !DILocation(line: 1823, column: 5, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4656, file: !2691, line: 1823, column: 5)
!4920 = !DILocation(line: 1826, column: 20, scope: !4653)
!4921 = !DILocation(line: 1827, column: 4, scope: !4653)
!4922 = !DILocation(line: 0, scope: !4653)
!4923 = !DILocation(line: 1827, column: 21, scope: !4653)
!4924 = !DILocation(line: 1827, column: 18, scope: !4653)
!4925 = !DILocation(line: 1828, column: 5, scope: !4660)
!4926 = !DILocation(line: 0, scope: !4660)
!4927 = !DILocation(line: 1828, column: 5, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4660, file: !2691, line: 1828, column: 5)
!4929 = distinct !{!4929, !4921, !4930}
!4930 = !DILocation(line: 1829, column: 4, scope: !4653)
!4931 = !DILocation(line: 1831, column: 4, scope: !4663)
!4932 = !DILocation(line: 0, scope: !4663)
!4933 = !DILocation(line: 1831, column: 4, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4663, file: !2691, line: 1831, column: 4)
!4935 = !DILocation(line: 1835, column: 16, scope: !4554)
!4936 = !DILocation(line: 1835, column: 3, scope: !4554)
!4937 = !DILocation(line: 1836, column: 4, scope: !4665)
!4938 = !DILocation(line: 0, scope: !4665)
!4939 = !DILocation(line: 1836, column: 4, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4665, file: !2691, line: 1836, column: 4)
!4941 = !DILocation(line: 1837, column: 4, scope: !4666)
!4942 = distinct !{!4942, !4936, !4943}
!4943 = !DILocation(line: 1838, column: 3, scope: !4554)
!4944 = !DILocation(line: 1844, column: 1, scope: !4527)
!4945 = distinct !DISubprogram(name: "extract_conversion", scope: !2691, file: !2691, line: 642, type: !4946, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !4948)
!4946 = !DISubroutineType(types: !4947)
!4947 = !{!155, !4602, !155}
!4948 = !{!4949, !4950}
!4949 = !DILocalVariable(name: "conv", arg: 1, scope: !4945, file: !2691, line: 642, type: !4602)
!4950 = !DILocalVariable(name: "sp", arg: 2, scope: !4945, file: !2691, line: 643, type: !155)
!4951 = !DILocation(line: 0, scope: !4945)
!4952 = !DILocation(line: 645, column: 10, scope: !4945)
!4953 = !DILocation(line: 653, column: 2, scope: !4945)
!4954 = !DILocation(line: 654, column: 6, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4945, file: !2691, line: 654, column: 6)
!4956 = !DILocation(line: 654, column: 10, scope: !4955)
!4957 = !DILocation(line: 654, column: 6, scope: !4945)
!4958 = !DILocation(line: 655, column: 24, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4955, file: !2691, line: 654, column: 18)
!4960 = !DILocation(line: 655, column: 19, scope: !4959)
!4961 = !DILocation(line: 656, column: 3, scope: !4959)
!4962 = !DILocation(line: 659, column: 7, scope: !4945)
!4963 = !DILocation(line: 660, column: 7, scope: !4945)
!4964 = !DILocation(line: 661, column: 7, scope: !4945)
!4965 = !DILocation(line: 662, column: 7, scope: !4945)
!4966 = !DILocation(line: 663, column: 7, scope: !4945)
!4967 = !DILocation(line: 665, column: 2, scope: !4945)
!4968 = !DILocation(line: 666, column: 1, scope: !4945)
!4969 = distinct !DISubprogram(name: "outs", scope: !2691, file: !2691, line: 1319, type: !4970, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !4972)
!4970 = !DISubroutineType(types: !4971)
!4971 = !{!103, !3516, !102, !155, !155}
!4972 = !{!4973, !4974, !4975, !4976, !4977, !4978}
!4973 = !DILocalVariable(name: "out", arg: 1, scope: !4969, file: !2691, line: 1319, type: !3516)
!4974 = !DILocalVariable(name: "ctx", arg: 2, scope: !4969, file: !2691, line: 1320, type: !102)
!4975 = !DILocalVariable(name: "sp", arg: 3, scope: !4969, file: !2691, line: 1321, type: !155)
!4976 = !DILocalVariable(name: "ep", arg: 4, scope: !4969, file: !2691, line: 1322, type: !155)
!4977 = !DILocalVariable(name: "count", scope: !4969, file: !2691, line: 1324, type: !356)
!4978 = !DILocalVariable(name: "rc", scope: !4979, file: !2691, line: 1327, type: !103)
!4979 = distinct !DILexicalBlock(scope: !4969, file: !2691, line: 1326, column: 45)
!4980 = !DILocation(line: 0, scope: !4969)
!4981 = !DILocation(line: 1326, column: 2, scope: !4969)
!4982 = !DILocation(line: 1324, column: 9, scope: !4969)
!4983 = !DILocation(line: 1326, column: 13, scope: !4969)
!4984 = !DILocation(line: 1326, column: 19, scope: !4969)
!4985 = !DILocation(line: 1327, column: 21, scope: !4979)
!4986 = !DILocation(line: 1326, column: 36, scope: !4969)
!4987 = !DILocation(line: 1326, column: 39, scope: !4969)
!4988 = !DILocation(line: 1327, column: 24, scope: !4979)
!4989 = !DILocation(line: 1327, column: 16, scope: !4979)
!4990 = !DILocation(line: 1327, column: 12, scope: !4979)
!4991 = !DILocation(line: 0, scope: !4979)
!4992 = !DILocation(line: 1329, column: 10, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4979, file: !2691, line: 1329, column: 7)
!4994 = !DILocation(line: 1329, column: 7, scope: !4979)
!4995 = distinct !{!4995, !4981, !4996}
!4996 = !DILocation(line: 1333, column: 2, scope: !4969)
!4997 = !DILocation(line: 1336, column: 1, scope: !4969)
!4998 = distinct !DISubprogram(name: "encode_uint", scope: !2691, file: !2691, line: 788, type: !4999, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5001)
!4999 = !DISubroutineType(types: !5000)
!5000 = !{!1097, !2713, !4602, !1097, !155}
!5001 = !{!5002, !5003, !5004, !5005, !5006, !5007, !5009, !5010}
!5002 = !DILocalVariable(name: "value", arg: 1, scope: !4998, file: !2691, line: 788, type: !2713)
!5003 = !DILocalVariable(name: "conv", arg: 2, scope: !4998, file: !2691, line: 789, type: !4602)
!5004 = !DILocalVariable(name: "bps", arg: 3, scope: !4998, file: !2691, line: 790, type: !1097)
!5005 = !DILocalVariable(name: "bpe", arg: 4, scope: !4998, file: !2691, line: 791, type: !155)
!5006 = !DILocalVariable(name: "upcase", scope: !4998, file: !2691, line: 793, type: !166)
!5007 = !DILocalVariable(name: "radix", scope: !4998, file: !2691, line: 794, type: !5008)
!5008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5009 = !DILocalVariable(name: "bp", scope: !4998, file: !2691, line: 795, type: !1097)
!5010 = !DILocalVariable(name: "lsv", scope: !5011, file: !2691, line: 798, type: !32)
!5011 = distinct !DILexicalBlock(scope: !4998, file: !2691, line: 797, column: 5)
!5012 = !DILocation(line: 0, scope: !4998)
!5013 = !DILocation(line: 793, column: 35, scope: !4998)
!5014 = !DILocation(line: 793, column: 24, scope: !4998)
!5015 = !DILocation(line: 793, column: 16, scope: !4998)
!5016 = !DILocation(line: 794, column: 29, scope: !4998)
!5017 = !DILocation(line: 795, column: 24, scope: !4998)
!5018 = !DILocation(line: 795, column: 17, scope: !4998)
!5019 = !DILocation(line: 797, column: 2, scope: !4998)
!5020 = !DILocation(line: 802, column: 9, scope: !5011)
!5021 = !DILocation(line: 798, column: 22, scope: !5011)
!5022 = !DILocation(line: 0, scope: !5011)
!5023 = !DILocation(line: 800, column: 16, scope: !5011)
!5024 = !DILocation(line: 800, column: 11, scope: !5011)
!5025 = !DILocation(line: 800, column: 4, scope: !5011)
!5026 = !DILocation(line: 800, column: 9, scope: !5011)
!5027 = !DILocation(line: 803, column: 18, scope: !4998)
!5028 = !DILocation(line: 803, column: 24, scope: !4998)
!5029 = !DILocation(line: 803, column: 2, scope: !5011)
!5030 = distinct !{!5030, !5019, !5031}
!5031 = !DILocation(line: 803, column: 37, scope: !4998)
!5032 = !DILocation(line: 808, column: 12, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !4998, file: !2691, line: 808, column: 6)
!5034 = !DILocation(line: 808, column: 6, scope: !4998)
!5035 = !DILocation(line: 809, column: 7, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5033, file: !2691, line: 808, column: 23)
!5037 = !DILocation(line: 813, column: 3, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5039, file: !2691, line: 811, column: 27)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !2691, line: 811, column: 14)
!5040 = distinct !DILexicalBlock(scope: !5036, file: !2691, line: 809, column: 7)
!5041 = !DILocation(line: 0, scope: !5040)
!5042 = !DILocation(line: 818, column: 2, scope: !4998)
!5043 = distinct !DISubprogram(name: "store_count", scope: !2691, file: !2691, line: 1280, type: !5044, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5048)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{null, !5046, !102, !103}
!5046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5047, size: 32)
!5047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4569)
!5048 = !{!5049, !5050, !5051}
!5049 = !DILocalVariable(name: "conv", arg: 1, scope: !5043, file: !2691, line: 1280, type: !5046)
!5050 = !DILocalVariable(name: "dp", arg: 2, scope: !5043, file: !2691, line: 1281, type: !102)
!5051 = !DILocalVariable(name: "count", arg: 3, scope: !5043, file: !2691, line: 1282, type: !103)
!5052 = !DILocation(line: 0, scope: !5043)
!5053 = !DILocation(line: 1284, column: 38, scope: !5043)
!5054 = !DILocation(line: 1284, column: 2, scope: !5043)
!5055 = !DILocation(line: 1286, column: 4, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5043, file: !2691, line: 1284, column: 50)
!5057 = !DILocation(line: 1286, column: 14, scope: !5056)
!5058 = !DILocation(line: 1287, column: 3, scope: !5056)
!5059 = !DILocation(line: 1289, column: 24, scope: !5056)
!5060 = !DILocation(line: 1289, column: 22, scope: !5056)
!5061 = !DILocation(line: 1290, column: 3, scope: !5056)
!5062 = !DILocation(line: 1292, column: 18, scope: !5056)
!5063 = !DILocation(line: 1292, column: 4, scope: !5056)
!5064 = !DILocation(line: 1292, column: 16, scope: !5056)
!5065 = !DILocation(line: 1293, column: 3, scope: !5056)
!5066 = !DILocation(line: 1295, column: 4, scope: !5056)
!5067 = !DILocation(line: 1295, column: 15, scope: !5056)
!5068 = !DILocation(line: 1296, column: 3, scope: !5056)
!5069 = !DILocation(line: 1298, column: 22, scope: !5056)
!5070 = !DILocation(line: 1298, column: 4, scope: !5056)
!5071 = !DILocation(line: 1298, column: 20, scope: !5056)
!5072 = !DILocation(line: 1299, column: 3, scope: !5056)
!5073 = !DILocation(line: 1301, column: 21, scope: !5056)
!5074 = !DILocation(line: 1301, column: 4, scope: !5056)
!5075 = !DILocation(line: 1301, column: 19, scope: !5056)
!5076 = !DILocation(line: 1302, column: 3, scope: !5056)
!5077 = !DILocation(line: 1304, column: 4, scope: !5056)
!5078 = !DILocation(line: 1304, column: 17, scope: !5056)
!5079 = !DILocation(line: 1305, column: 3, scope: !5056)
!5080 = !DILocation(line: 1307, column: 4, scope: !5056)
!5081 = !DILocation(line: 1307, column: 20, scope: !5056)
!5082 = !DILocation(line: 1308, column: 3, scope: !5056)
!5083 = !DILocation(line: 1316, column: 1, scope: !5043)
!5084 = distinct !DISubprogram(name: "isupper", scope: !5085, file: !5085, line: 16, type: !118, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5086)
!5085 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5086 = !{!5087}
!5087 = !DILocalVariable(name: "a", arg: 1, scope: !5084, file: !5085, line: 16, type: !103)
!5088 = !DILocation(line: 0, scope: !5084)
!5089 = !DILocation(line: 18, column: 29, scope: !5084)
!5090 = !DILocation(line: 18, column: 45, scope: !5084)
!5091 = !DILocation(line: 18, column: 2, scope: !5084)
!5092 = distinct !DISubprogram(name: "conversion_radix", scope: !2691, file: !2691, line: 761, type: !5093, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5095)
!5093 = !DISubroutineType(types: !5094)
!5094 = !{!356, !108}
!5095 = !{!5096}
!5096 = !DILocalVariable(name: "specifier", arg: 1, scope: !5092, file: !2691, line: 761, type: !108)
!5097 = !DILocation(line: 0, scope: !5092)
!5098 = !DILocation(line: 763, column: 2, scope: !5092)
!5099 = !DILocation(line: 770, column: 3, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5092, file: !2691, line: 763, column: 21)
!5101 = !DILocation(line: 774, column: 3, scope: !5100)
!5102 = !DILocation(line: 0, scope: !5100)
!5103 = !DILocation(line: 776, column: 1, scope: !5092)
!5104 = distinct !DISubprogram(name: "extract_flags", scope: !2691, file: !2691, line: 339, type: !4946, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5105)
!5105 = !{!5106, !5107, !5108}
!5106 = !DILocalVariable(name: "conv", arg: 1, scope: !5104, file: !2691, line: 339, type: !4602)
!5107 = !DILocalVariable(name: "sp", arg: 2, scope: !5104, file: !2691, line: 340, type: !155)
!5108 = !DILocalVariable(name: "loop", scope: !5104, file: !2691, line: 342, type: !166)
!5109 = !DILocation(line: 0, scope: !5104)
!5110 = !DILocation(line: 344, column: 2, scope: !5104)
!5111 = !DILocation(line: 345, column: 11, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5104, file: !2691, line: 344, column: 5)
!5113 = !DILocation(line: 345, column: 3, scope: !5112)
!5114 = !DILocation(line: 351, column: 4, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5112, file: !2691, line: 345, column: 16)
!5116 = !DILocation(line: 354, column: 4, scope: !5115)
!5117 = !DILocation(line: 357, column: 4, scope: !5115)
!5118 = !DILocation(line: 360, column: 4, scope: !5115)
!5119 = !DILocation(line: 0, scope: !5115)
!5120 = !DILocation(line: 370, column: 12, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5104, file: !2691, line: 370, column: 6)
!5122 = !DILocation(line: 370, column: 22, scope: !5121)
!5123 = !DILocation(line: 371, column: 19, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5121, file: !2691, line: 370, column: 42)
!5125 = !DILocation(line: 372, column: 2, scope: !5124)
!5126 = !DILocation(line: 376, column: 2, scope: !5104)
!5127 = distinct !DISubprogram(name: "extract_width", scope: !2691, file: !2691, line: 388, type: !4946, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5128)
!5128 = !{!5129, !5130, !5131, !5132}
!5129 = !DILocalVariable(name: "conv", arg: 1, scope: !5127, file: !2691, line: 388, type: !4602)
!5130 = !DILocalVariable(name: "sp", arg: 2, scope: !5127, file: !2691, line: 389, type: !155)
!5131 = !DILocalVariable(name: "wp", scope: !5127, file: !2691, line: 398, type: !155)
!5132 = !DILocalVariable(name: "width", scope: !5127, file: !2691, line: 399, type: !356)
!5133 = !DILocation(line: 0, scope: !5127)
!5134 = !DILocation(line: 391, column: 8, scope: !5127)
!5135 = !DILocation(line: 391, column: 22, scope: !5127)
!5136 = !DILocation(line: 393, column: 6, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5127, file: !2691, line: 393, column: 6)
!5138 = !DILocation(line: 393, column: 10, scope: !5137)
!5139 = !DILocation(line: 393, column: 6, scope: !5127)
!5140 = !DILocation(line: 394, column: 20, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5137, file: !2691, line: 393, column: 18)
!5142 = !DILocation(line: 395, column: 10, scope: !5141)
!5143 = !DILocation(line: 395, column: 3, scope: !5141)
!5144 = !DILocation(line: 399, column: 17, scope: !5127)
!5145 = !DILocation(line: 401, column: 6, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5127, file: !2691, line: 401, column: 6)
!5147 = !DILocation(line: 401, column: 9, scope: !5146)
!5148 = !DILocation(line: 401, column: 6, scope: !5127)
!5149 = !DILocation(line: 402, column: 23, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5146, file: !2691, line: 401, column: 16)
!5151 = !DILocation(line: 403, column: 9, scope: !5150)
!5152 = !DILocation(line: 403, column: 21, scope: !5150)
!5153 = !DILocation(line: 405, column: 11, scope: !5150)
!5154 = !DILocation(line: 404, column: 21, scope: !5150)
!5155 = !DILocation(line: 406, column: 2, scope: !5150)
!5156 = !DILocation(line: 409, column: 1, scope: !5127)
!5157 = distinct !DISubprogram(name: "extract_prec", scope: !2691, file: !2691, line: 420, type: !4946, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5158)
!5158 = !{!5159, !5160, !5161}
!5159 = !DILocalVariable(name: "conv", arg: 1, scope: !5157, file: !2691, line: 420, type: !4602)
!5160 = !DILocalVariable(name: "sp", arg: 2, scope: !5157, file: !2691, line: 421, type: !155)
!5161 = !DILocalVariable(name: "prec", scope: !5157, file: !2691, line: 435, type: !356)
!5162 = !DILocation(line: 0, scope: !5157)
!5163 = !DILocation(line: 423, column: 24, scope: !5157)
!5164 = !DILocation(line: 423, column: 28, scope: !5157)
!5165 = !DILocation(line: 423, column: 8, scope: !5157)
!5166 = !DILocation(line: 423, column: 21, scope: !5157)
!5167 = !DILocation(line: 425, column: 6, scope: !5157)
!5168 = !DILocation(line: 428, column: 2, scope: !5157)
!5169 = !DILocation(line: 430, column: 6, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5157, file: !2691, line: 430, column: 6)
!5171 = !DILocation(line: 430, column: 10, scope: !5170)
!5172 = !DILocation(line: 430, column: 6, scope: !5157)
!5173 = !DILocation(line: 431, column: 19, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5170, file: !2691, line: 430, column: 18)
!5175 = !DILocation(line: 432, column: 10, scope: !5174)
!5176 = !DILocation(line: 432, column: 3, scope: !5174)
!5177 = !DILocation(line: 435, column: 16, scope: !5157)
!5178 = !DILocation(line: 437, column: 8, scope: !5157)
!5179 = !DILocation(line: 437, column: 19, scope: !5157)
!5180 = !DILocation(line: 439, column: 10, scope: !5157)
!5181 = !DILocation(line: 438, column: 20, scope: !5157)
!5182 = !DILocation(line: 441, column: 9, scope: !5157)
!5183 = !DILocation(line: 442, column: 1, scope: !5157)
!5184 = distinct !DISubprogram(name: "extract_length", scope: !2691, file: !2691, line: 453, type: !4946, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5185)
!5185 = !{!5186, !5187}
!5186 = !DILocalVariable(name: "conv", arg: 1, scope: !5184, file: !2691, line: 453, type: !4602)
!5187 = !DILocalVariable(name: "sp", arg: 2, scope: !5184, file: !2691, line: 454, type: !155)
!5188 = !DILocation(line: 0, scope: !5184)
!5189 = !DILocation(line: 456, column: 10, scope: !5184)
!5190 = !DILocation(line: 456, column: 2, scope: !5184)
!5191 = !DILocation(line: 458, column: 8, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5193, file: !2691, line: 458, column: 7)
!5193 = distinct !DILexicalBlock(scope: !5184, file: !2691, line: 456, column: 15)
!5194 = !DILocation(line: 458, column: 7, scope: !5192)
!5195 = !DILocation(line: 458, column: 13, scope: !5192)
!5196 = !DILocation(line: 0, scope: !5192)
!5197 = !DILocation(line: 458, column: 7, scope: !5193)
!5198 = !DILocation(line: 459, column: 21, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5192, file: !2691, line: 458, column: 21)
!5200 = !DILocation(line: 460, column: 4, scope: !5199)
!5201 = !DILocation(line: 461, column: 3, scope: !5199)
!5202 = !DILocation(line: 462, column: 21, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5192, file: !2691, line: 461, column: 10)
!5204 = !DILocation(line: 466, column: 8, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5193, file: !2691, line: 466, column: 7)
!5206 = !DILocation(line: 466, column: 7, scope: !5205)
!5207 = !DILocation(line: 466, column: 13, scope: !5205)
!5208 = !DILocation(line: 0, scope: !5205)
!5209 = !DILocation(line: 466, column: 7, scope: !5193)
!5210 = !DILocation(line: 467, column: 21, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5205, file: !2691, line: 466, column: 21)
!5212 = !DILocation(line: 468, column: 4, scope: !5211)
!5213 = !DILocation(line: 469, column: 3, scope: !5211)
!5214 = !DILocation(line: 470, column: 21, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5205, file: !2691, line: 469, column: 10)
!5216 = !DILocation(line: 474, column: 9, scope: !5193)
!5217 = !DILocation(line: 474, column: 20, scope: !5193)
!5218 = !DILocation(line: 475, column: 3, scope: !5193)
!5219 = !DILocation(line: 476, column: 3, scope: !5193)
!5220 = !DILocation(line: 478, column: 9, scope: !5193)
!5221 = !DILocation(line: 478, column: 20, scope: !5193)
!5222 = !DILocation(line: 479, column: 3, scope: !5193)
!5223 = !DILocation(line: 480, column: 3, scope: !5193)
!5224 = !DILocation(line: 482, column: 9, scope: !5193)
!5225 = !DILocation(line: 482, column: 20, scope: !5193)
!5226 = !DILocation(line: 483, column: 3, scope: !5193)
!5227 = !DILocation(line: 484, column: 3, scope: !5193)
!5228 = !DILocation(line: 486, column: 9, scope: !5193)
!5229 = !DILocation(line: 486, column: 20, scope: !5193)
!5230 = !DILocation(line: 487, column: 3, scope: !5193)
!5231 = !DILocation(line: 492, column: 21, scope: !5193)
!5232 = !DILocation(line: 493, column: 3, scope: !5193)
!5233 = !DILocation(line: 495, column: 9, scope: !5193)
!5234 = !DILocation(line: 495, column: 20, scope: !5193)
!5235 = !DILocation(line: 496, column: 3, scope: !5193)
!5236 = !DILocation(line: 498, column: 2, scope: !5184)
!5237 = distinct !DISubprogram(name: "extract_specifier", scope: !2691, file: !2691, line: 513, type: !4946, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5238)
!5238 = !{!5239, !5240, !5241, !5242}
!5239 = !DILocalVariable(name: "conv", arg: 1, scope: !5237, file: !2691, line: 513, type: !4602)
!5240 = !DILocalVariable(name: "sp", arg: 2, scope: !5237, file: !2691, line: 514, type: !155)
!5241 = !DILocalVariable(name: "unsupported", scope: !5237, file: !2691, line: 516, type: !166)
!5242 = !DILabel(scope: !5243, name: "int_conv", file: !2691, line: 526)
!5243 = distinct !DILexicalBlock(scope: !5237, file: !2691, line: 520, column: 27)
!5244 = !DILocation(line: 0, scope: !5237)
!5245 = !DILocation(line: 518, column: 20, scope: !5237)
!5246 = !DILocation(line: 518, column: 8, scope: !5237)
!5247 = !DILocation(line: 518, column: 18, scope: !5237)
!5248 = !DILocation(line: 520, column: 2, scope: !5237)
!5249 = !DILocation(line: 525, column: 3, scope: !5243)
!5250 = !DILocation(line: 0, scope: !5243)
!5251 = !DILocation(line: 526, column: 1, scope: !5243)
!5252 = !DILocation(line: 528, column: 24, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5243, file: !2691, line: 528, column: 7)
!5254 = !DILocation(line: 528, column: 7, scope: !5243)
!5255 = !DILocation(line: 535, column: 23, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5243, file: !2691, line: 535, column: 7)
!5257 = !DILocation(line: 535, column: 7, scope: !5243)
!5258 = !DILocation(line: 536, column: 36, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5256, file: !2691, line: 535, column: 31)
!5260 = !DILocation(line: 537, column: 3, scope: !5259)
!5261 = !DILocation(line: 570, column: 9, scope: !5243)
!5262 = !DILocation(line: 570, column: 23, scope: !5243)
!5263 = !DILocation(line: 575, column: 4, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5265, file: !2691, line: 573, column: 48)
!5265 = distinct !DILexicalBlock(scope: !5243, file: !2691, line: 573, column: 7)
!5266 = !DILocation(line: 603, column: 9, scope: !5243)
!5267 = !DILocation(line: 603, column: 23, scope: !5243)
!5268 = !DILocation(line: 605, column: 24, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5243, file: !2691, line: 605, column: 7)
!5270 = !DILocation(line: 605, column: 7, scope: !5243)
!5271 = !DILocation(line: 612, column: 9, scope: !5243)
!5272 = !DILocation(line: 612, column: 23, scope: !5243)
!5273 = !DILocation(line: 619, column: 24, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5243, file: !2691, line: 619, column: 7)
!5275 = !DILocation(line: 619, column: 7, scope: !5243)
!5276 = !DILocation(line: 625, column: 9, scope: !5243)
!5277 = !DILocation(line: 625, column: 17, scope: !5243)
!5278 = !DILocation(line: 626, column: 3, scope: !5243)
!5279 = !DILocation(line: 629, column: 20, scope: !5237)
!5280 = !DILocation(line: 629, column: 8, scope: !5237)
!5281 = !DILocation(line: 518, column: 23, scope: !5237)
!5282 = !DILocation(line: 631, column: 2, scope: !5237)
!5283 = distinct !DISubprogram(name: "extract_decimal", scope: !2691, file: !2691, line: 318, type: !5284, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5287)
!5284 = !DISubroutineType(types: !5285)
!5285 = !{!356, !5286}
!5286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!5287 = !{!5288, !5289, !5290}
!5288 = !DILocalVariable(name: "str", arg: 1, scope: !5283, file: !2691, line: 318, type: !5286)
!5289 = !DILocalVariable(name: "sp", scope: !5283, file: !2691, line: 320, type: !155)
!5290 = !DILocalVariable(name: "val", scope: !5283, file: !2691, line: 321, type: !356)
!5291 = !DILocation(line: 0, scope: !5283)
!5292 = !DILocation(line: 320, column: 19, scope: !5283)
!5293 = !DILocation(line: 323, column: 37, scope: !5283)
!5294 = !DILocation(line: 323, column: 17, scope: !5283)
!5295 = !DILocation(line: 323, column: 9, scope: !5283)
!5296 = !DILocation(line: 323, column: 2, scope: !5283)
!5297 = !DILocation(line: 324, column: 13, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5283, file: !2691, line: 323, column: 43)
!5299 = !DILocation(line: 324, column: 24, scope: !5298)
!5300 = !DILocation(line: 324, column: 19, scope: !5298)
!5301 = !DILocation(line: 324, column: 27, scope: !5298)
!5302 = distinct !{!5302, !5296, !5303}
!5303 = !DILocation(line: 325, column: 2, scope: !5283)
!5304 = !DILocation(line: 326, column: 7, scope: !5283)
!5305 = !DILocation(line: 327, column: 2, scope: !5283)
!5306 = distinct !DISubprogram(name: "isdigit", scope: !5085, file: !5085, line: 43, type: !118, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5307)
!5307 = !{!5308}
!5308 = !DILocalVariable(name: "a", arg: 1, scope: !5306, file: !5085, line: 43, type: !103)
!5309 = !DILocation(line: 0, scope: !5306)
!5310 = !DILocation(line: 45, column: 29, scope: !5306)
!5311 = !DILocation(line: 45, column: 45, scope: !5306)
!5312 = !DILocation(line: 45, column: 2, scope: !5306)
!5313 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5314, file: !5314, line: 9, type: !3328, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !473)
!5314 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!5315 = !DILocation(line: 11, column: 1, scope: !5313)
!5316 = !{i64 2147562277, i64 2147562320, i64 2147562360}
!5317 = !DILocation(line: 12, column: 1, scope: !5313)
!5318 = !{i64 2147566504, i64 2147566547, i64 2147566587}
!5319 = !DILocation(line: 13, column: 1, scope: !5313)
!5320 = !{i64 2147566713, i64 2147566756, i64 2147566796}
!5321 = !DILocation(line: 14, column: 1, scope: !5313)
!5322 = !{i64 2147566930, i64 2147566973, i64 2147567013}
!5323 = !DILocation(line: 15, column: 1, scope: !5313)
!5324 = !{i64 2147567099, i64 2147567142, i64 2147567182}
!5325 = !DILocation(line: 16, column: 1, scope: !5313)
!5326 = !{i64 2147567262, i64 2147567305, i64 2147567345}
!5327 = !DILocation(line: 17, column: 1, scope: !5313)
!5328 = !{i64 2147567446, i64 2147567489, i64 2147567529}
!5329 = !DILocation(line: 18, column: 1, scope: !5313)
!5330 = !{i64 2147567625, i64 2147567668, i64 2147567708}
!5331 = !DILocation(line: 19, column: 1, scope: !5313)
!5332 = !{i64 2147567867, i64 2147567910, i64 2147567950}
!5333 = !DILocation(line: 20, column: 1, scope: !5313)
!5334 = !{i64 2147568102, i64 2147568145, i64 2147568185}
!5335 = !DILocation(line: 21, column: 1, scope: !5313)
!5336 = !{i64 2147568288, i64 2147568331, i64 2147568371}
!5337 = !DILocation(line: 22, column: 1, scope: !5313)
!5338 = !{i64 2147568504, i64 2147568547, i64 2147568587}
!5339 = !DILocation(line: 23, column: 1, scope: !5313)
!5340 = !{i64 2147568707, i64 2147568750, i64 2147568790}
!5341 = !DILocation(line: 24, column: 1, scope: !5313)
!5342 = !{i64 2147568910, i64 2147568953, i64 2147568993}
!5343 = !DILocation(line: 25, column: 1, scope: !5313)
!5344 = !{i64 2147569085, i64 2147569128, i64 2147569168}
!5345 = !DILocation(line: 26, column: 1, scope: !5313)
!5346 = !{i64 2147569293, i64 2147569336, i64 2147569376}
!5347 = !DILocation(line: 27, column: 1, scope: !5313)
!5348 = !{i64 2147569497, i64 2147569540, i64 2147569580}
!5349 = !DILocation(line: 28, column: 1, scope: !5313)
!5350 = !{i64 2147569690, i64 2147569733, i64 2147569773}
!5351 = !DILocation(line: 29, column: 1, scope: !5313)
!5352 = !{i64 2147569892, i64 2147569935, i64 2147569975}
!5353 = !DILocation(line: 30, column: 1, scope: !5313)
!5354 = !{i64 2147570119, i64 2147570162, i64 2147570202}
!5355 = !DILocation(line: 31, column: 1, scope: !5313)
!5356 = !{i64 2147570321, i64 2147570364, i64 2147570404}
!5357 = !DILocation(line: 32, column: 1, scope: !5313)
!5358 = !{i64 2147570536, i64 2147570579, i64 2147570619}
!5359 = !DILocation(line: 33, column: 1, scope: !5313)
!5360 = !{i64 2147570708, i64 2147570751, i64 2147570791}
!5361 = !DILocation(line: 34, column: 1, scope: !5313)
!5362 = !{i64 2147570910, i64 2147570953, i64 2147570993}
!5363 = !DILocation(line: 35, column: 1, scope: !5313)
!5364 = !{i64 2147571136, i64 2147571179, i64 2147571219}
!5365 = !DILocation(line: 36, column: 1, scope: !5313)
!5366 = !{i64 2147571335, i64 2147571378, i64 2147571418}
!5367 = !DILocation(line: 37, column: 1, scope: !5313)
!5368 = !{i64 2147571510, i64 2147571553, i64 2147571593}
!5369 = !DILocation(line: 38, column: 1, scope: !5313)
!5370 = !{i64 2147571763, i64 2147571806, i64 2147571846}
!5371 = !DILocation(line: 39, column: 1, scope: !5313)
!5372 = !{i64 2147572004, i64 2147572047, i64 2147572087}
!5373 = !DILocation(line: 40, column: 1, scope: !5313)
!5374 = !{i64 2147572239, i64 2147572282, i64 2147572322}
!5375 = !DILocation(line: 41, column: 1, scope: !5313)
!5376 = !{i64 2147572471, i64 2147572514, i64 2147572554}
!5377 = !DILocation(line: 42, column: 1, scope: !5313)
!5378 = !{i64 2147572697, i64 2147572740, i64 2147572780}
!5379 = !DILocation(line: 43, column: 1, scope: !5313)
!5380 = !{i64 2147572923, i64 2147572966, i64 2147573006}
!5381 = !DILocation(line: 44, column: 1, scope: !5313)
!5382 = !{i64 2147573149, i64 2147573192, i64 2147573232}
!5383 = !DILocation(line: 45, column: 1, scope: !5313)
!5384 = !{i64 2147573384, i64 2147573427, i64 2147573467}
!5385 = !DILocation(line: 46, column: 1, scope: !5313)
!5386 = !{i64 2147573628, i64 2147573671, i64 2147573711}
!5387 = !DILocation(line: 47, column: 1, scope: !5313)
!5388 = !{i64 2147573875, i64 2147573918, i64 2147573958}
!5389 = !DILocation(line: 48, column: 1, scope: !5313)
!5390 = !{i64 2147574107, i64 2147574150, i64 2147574190}
!5391 = !DILocation(line: 49, column: 1, scope: !5313)
!5392 = !{i64 2147574351, i64 2147574394, i64 2147574434}
!5393 = !DILocation(line: 50, column: 1, scope: !5313)
!5394 = !{i64 2147574589, i64 2147574632, i64 2147574672}
!5395 = !DILocation(line: 51, column: 1, scope: !5313)
!5396 = !{i64 2147574863, i64 2147574906, i64 2147574946}
!5397 = !DILocation(line: 52, column: 1, scope: !5313)
!5398 = !{i64 2147575101, i64 2147575144, i64 2147575184}
!5399 = !DILocation(line: 53, column: 1, scope: !5313)
!5400 = !{i64 2147579415, i64 2147579458, i64 2147579498}
!5401 = !DILocation(line: 54, column: 1, scope: !5313)
!5402 = !{i64 2147579659, i64 2147579702, i64 2147579742}
!5403 = !DILocation(line: 55, column: 1, scope: !5313)
!5404 = !{i64 2147579894, i64 2147579937, i64 2147579977}
!5405 = !DILocation(line: 56, column: 1, scope: !5313)
!5406 = !{i64 2147580144, i64 2147580187, i64 2147580227}
!5407 = !DILocation(line: 57, column: 1, scope: !5313)
!5408 = !{i64 2147580391, i64 2147580434, i64 2147580474}
!5409 = !DILocation(line: 58, column: 1, scope: !5313)
!5410 = !{i64 2147580626, i64 2147580669, i64 2147580709}
!5411 = !DILocation(line: 59, column: 1, scope: !5313)
!5412 = !{i64 2147580861, i64 2147580904, i64 2147580944}
!5413 = !DILocation(line: 60, column: 1, scope: !5313)
!5414 = !{i64 2147581096, i64 2147581139, i64 2147581179}
!5415 = !DILocation(line: 61, column: 1, scope: !5313)
!5416 = !{i64 2147581331, i64 2147581374, i64 2147581414}
!5417 = !DILocation(line: 62, column: 1, scope: !5313)
!5418 = !{i64 2147581575, i64 2147581618, i64 2147581658}
!5419 = !DILocation(line: 63, column: 1, scope: !5313)
!5420 = !{i64 2147581813, i64 2147581856, i64 2147581896}
!5421 = !DILocation(line: 64, column: 1, scope: !5313)
!5422 = !{i64 2147582054, i64 2147582097, i64 2147582137}
!5423 = !DILocation(line: 65, column: 1, scope: !5313)
!5424 = !{i64 2147582334, i64 2147582377, i64 2147582417}
!5425 = !DILocation(line: 66, column: 1, scope: !5313)
!5426 = !{i64 2147582593, i64 2147582636, i64 2147582676}
!5427 = !DILocation(line: 67, column: 1, scope: !5313)
!5428 = !{i64 2147582831, i64 2147582874, i64 2147582914}
!5429 = !DILocation(line: 68, column: 1, scope: !5313)
!5430 = !{i64 2147583060, i64 2147583103, i64 2147583143}
!5431 = !DILocation(line: 69, column: 1, scope: !5313)
!5432 = !{i64 2147583268, i64 2147583311, i64 2147583351}
!5433 = !DILocation(line: 70, column: 1, scope: !5313)
!5434 = !{i64 2147583479, i64 2147583522, i64 2147583562}
!5435 = !DILocation(line: 71, column: 1, scope: !5313)
!5436 = !{i64 2147583714, i64 2147583757, i64 2147583797}
!5437 = !DILocation(line: 72, column: 1, scope: !5313)
!5438 = !{i64 2147583943, i64 2147583986, i64 2147584026}
!5439 = !DILocation(line: 73, column: 1, scope: !5313)
!5440 = !{i64 2147584181, i64 2147584224, i64 2147584264}
!5441 = !DILocation(line: 74, column: 1, scope: !5313)
!5442 = !{i64 2147584413, i64 2147584456, i64 2147584496}
!5443 = !DILocation(line: 75, column: 1, scope: !5313)
!5444 = !{i64 2147584639, i64 2147584682, i64 2147584722}
!5445 = !DILocation(line: 76, column: 1, scope: !5313)
!5446 = !{i64 2147584856, i64 2147584899, i64 2147584939}
!5447 = !DILocation(line: 77, column: 1, scope: !5313)
!5448 = !{i64 2147585088, i64 2147585131, i64 2147585171}
!5449 = !DILocation(line: 78, column: 1, scope: !5313)
!5450 = !{i64 2147585314, i64 2147585357, i64 2147585397}
!5451 = !DILocation(line: 79, column: 1, scope: !5313)
!5452 = !{i64 2147585528, i64 2147585571, i64 2147585611}
!5453 = !DILocation(line: 80, column: 1, scope: !5313)
!5454 = !{i64 2147585748, i64 2147585791, i64 2147585831}
!5455 = !DILocation(line: 81, column: 1, scope: !5313)
!5456 = !{i64 2147585980, i64 2147586023, i64 2147586063}
!5457 = !DILocation(line: 82, column: 1, scope: !5313)
!5458 = !{i64 2147586188, i64 2147586231, i64 2147586271}
!5459 = !DILocation(line: 83, column: 1, scope: !5313)
!5460 = !{i64 2147586393, i64 2147586436, i64 2147586476}
!5461 = !DILocation(line: 84, column: 1, scope: !5313)
!5462 = !{i64 2147586610, i64 2147586653, i64 2147586693}
!5463 = !DILocation(line: 85, column: 1, scope: !5313)
!5464 = !{i64 2147586824, i64 2147586867, i64 2147586907}
!5465 = !DILocation(line: 86, column: 1, scope: !5313)
!5466 = !{i64 2147587050, i64 2147587093, i64 2147587133}
!5467 = !DILocation(line: 87, column: 1, scope: !5313)
!5468 = !{i64 2147587270, i64 2147587313, i64 2147587353}
!5469 = !DILocation(line: 88, column: 1, scope: !5313)
!5470 = !{i64 2147591536, i64 2147591579, i64 2147591619}
!5471 = !DILocation(line: 89, column: 1, scope: !5313)
!5472 = !{i64 2147591768, i64 2147591811, i64 2147591851}
!5473 = !DILocation(line: 90, column: 1, scope: !5313)
!5474 = !{i64 2147592003, i64 2147592046, i64 2147592086}
!5475 = !DILocation(line: 91, column: 1, scope: !5313)
!5476 = !{i64 2147592253, i64 2147592296, i64 2147592336}
!5477 = !DILocation(line: 92, column: 1, scope: !5313)
!5478 = !{i64 2147592503, i64 2147592546, i64 2147592586}
!5479 = !DILocation(line: 93, column: 1, scope: !5313)
!5480 = !{i64 2147592741, i64 2147592784, i64 2147592824}
!5481 = !DILocation(line: 94, column: 1, scope: !5313)
!5482 = !{i64 2147592952, i64 2147592995, i64 2147593035}
!5483 = !DILocation(line: 95, column: 1, scope: !5313)
!5484 = !{i64 2147593169, i64 2147593212, i64 2147593252}
!5485 = !DILocation(line: 96, column: 1, scope: !5313)
!5486 = !{i64 2147593365, i64 2147593408, i64 2147593448}
!5487 = !DILocation(line: 97, column: 1, scope: !5313)
!5488 = !{i64 2147593567, i64 2147593610, i64 2147593650}
!5489 = !DILocation(line: 98, column: 1, scope: !5313)
!5490 = !{i64 2147593760, i64 2147593803, i64 2147593843}
!5491 = !DILocation(line: 99, column: 1, scope: !5313)
!5492 = !{i64 2147593968, i64 2147594011, i64 2147594051}
!5493 = !DILocation(line: 100, column: 1, scope: !5313)
!5494 = !{i64 2147594164, i64 2147594207, i64 2147594247}
!5495 = !DILocation(line: 101, column: 1, scope: !5313)
!5496 = !{i64 2147594396, i64 2147594439, i64 2147594479}
!5497 = !DILocation(line: 102, column: 1, scope: !5313)
!5498 = !{i64 2147594607, i64 2147594650, i64 2147594690}
!5499 = !DILocation(line: 103, column: 1, scope: !5313)
!5500 = !{i64 2147594806, i64 2147594849, i64 2147594889}
!5501 = !DILocation(line: 104, column: 1, scope: !5313)
!5502 = !{i64 2147594981, i64 2147595024, i64 2147595064}
!5503 = !DILocation(line: 105, column: 1, scope: !5313)
!5504 = !{i64 2147595165, i64 2147595208, i64 2147595248}
!5505 = !DILocation(line: 106, column: 1, scope: !5313)
!5506 = !{i64 2147595367, i64 2147595410, i64 2147595450}
!5507 = !DILocation(line: 107, column: 1, scope: !5313)
!5508 = !{i64 2147595566, i64 2147595609, i64 2147595649}
!5509 = !DILocation(line: 108, column: 1, scope: !5313)
!5510 = !{i64 2147595732, i64 2147595775, i64 2147595815}
!5511 = !DILocation(line: 109, column: 1, scope: !5313)
!5512 = !{i64 2147595916, i64 2147595959, i64 2147595999}
!5513 = !DILocation(line: 110, column: 1, scope: !5313)
!5514 = !{i64 2147596106, i64 2147596149, i64 2147596189}
!5515 = !DILocation(line: 111, column: 1, scope: !5313)
!5516 = !{i64 2147596290, i64 2147596333, i64 2147596373}
!5517 = !DILocation(line: 112, column: 1, scope: !5313)
!5518 = !{i64 2147596504, i64 2147596547, i64 2147596587}
!5519 = !DILocation(line: 113, column: 1, scope: !5313)
!5520 = !{i64 2147596715, i64 2147596758, i64 2147596798}
!5521 = !DILocation(line: 114, column: 1, scope: !5313)
!5522 = !{i64 2147596938, i64 2147596981, i64 2147597021}
!5523 = !DILocation(line: 115, column: 1, scope: !5313)
!5524 = !{i64 2147597122, i64 2147597165, i64 2147597205}
!5525 = !DILocation(line: 116, column: 1, scope: !5313)
!5526 = !{i64 2147597336, i64 2147597379, i64 2147597419}
!5527 = !DILocation(line: 117, column: 1, scope: !5313)
!5528 = !{i64 2147597502, i64 2147597545, i64 2147597585}
!5529 = !DILocation(line: 118, column: 1, scope: !5313)
!5530 = !{i64 2147597683, i64 2147597726, i64 2147597766}
!5531 = !DILocation(line: 119, column: 1, scope: !5313)
!5532 = !{i64 2147597876, i64 2147597919, i64 2147597959}
!5533 = !DILocation(line: 120, column: 1, scope: !5313)
!5534 = !{i64 2147598102, i64 2147598145, i64 2147598185}
!5535 = !DILocation(line: 121, column: 1, scope: !5313)
!5536 = !{i64 2147598316, i64 2147598359, i64 2147598399}
!5537 = !DILocation(line: 122, column: 1, scope: !5313)
!5538 = !{i64 2147598542, i64 2147598585, i64 2147598625}
!5539 = !DILocation(line: 123, column: 1, scope: !5313)
!5540 = !{i64 2147598759, i64 2147598802, i64 2147598842}
!5541 = !DILocation(line: 124, column: 1, scope: !5313)
!5542 = !{i64 2147599036, i64 2147599079, i64 2147599119}
!5543 = !DILocation(line: 125, column: 1, scope: !5313)
!5544 = !{i64 2147599262, i64 2147599305, i64 2147599345}
!5545 = !DILocation(line: 126, column: 1, scope: !5313)
!5546 = !{i64 2147599470, i64 2147599513, i64 2147599553}
!5547 = !DILocation(line: 127, column: 1, scope: !5313)
!5548 = !{i64 2147599666, i64 2147599709, i64 2147599749}
!5549 = !DILocation(line: 128, column: 1, scope: !5313)
!5550 = !{i64 2147599931, i64 2147599974, i64 2147600014}
!5551 = !DILocation(line: 129, column: 1, scope: !5313)
!5552 = !{i64 2147600145, i64 2147600188, i64 2147600228}
!5553 = !DILocation(line: 130, column: 1, scope: !5313)
!5554 = !{i64 2147600320, i64 2147600363, i64 2147600403}
!5555 = !DILocation(line: 131, column: 1, scope: !5313)
!5556 = !{i64 2147604635, i64 2147604678, i64 2147604718}
!5557 = !DILocation(line: 132, column: 1, scope: !5313)
!5558 = !{i64 2147604834, i64 2147604877, i64 2147604917}
!5559 = !DILocation(line: 133, column: 1, scope: !5313)
!5560 = !{i64 2147605076, i64 2147605119, i64 2147605159}
!5561 = !DILocation(line: 134, column: 1, scope: !5313)
!5562 = !{i64 2147605239, i64 2147605282, i64 2147605322}
!5563 = !DILocation(line: 135, column: 1, scope: !5313)
!5564 = !{i64 2147605426, i64 2147605469, i64 2147605509}
!5565 = !DILocation(line: 136, column: 1, scope: !5313)
!5566 = !{i64 2147605619, i64 2147605662, i64 2147605702}
!5567 = !DILocation(line: 137, column: 1, scope: !5313)
!5568 = !{i64 2147605802, i64 2147605845, i64 2147605885}
!5569 = !DILocation(line: 138, column: 1, scope: !5313)
!5570 = !{i64 2147606016, i64 2147606059, i64 2147606099}
!5571 = !DILocation(line: 139, column: 1, scope: !5313)
!5572 = !{i64 2147606227, i64 2147606270, i64 2147606310}
!5573 = !DILocation(line: 140, column: 1, scope: !5313)
!5574 = !{i64 2147606447, i64 2147606490, i64 2147606530}
!5575 = !DILocation(line: 141, column: 1, scope: !5313)
!5576 = !{i64 2147606654, i64 2147606697, i64 2147606737}
!5577 = !DILocation(line: 142, column: 1, scope: !5313)
!5578 = !{i64 2147606927, i64 2147606970, i64 2147607010}
!5579 = !DILocation(line: 143, column: 1, scope: !5313)
!5580 = !{i64 2147607175, i64 2147607218, i64 2147607258}
!5581 = !DILocation(line: 144, column: 1, scope: !5313)
!5582 = !{i64 2147607374, i64 2147607417, i64 2147607457}
!5583 = !DILocation(line: 145, column: 1, scope: !5313)
!5584 = !{i64 2147607609, i64 2147607652, i64 2147607692}
!5585 = !DILocation(line: 146, column: 1, scope: !5313)
!5586 = !{i64 2147607859, i64 2147607902, i64 2147607942}
!5587 = !DILocation(line: 147, column: 1, scope: !5313)
!5588 = !{i64 2147608061, i64 2147608104, i64 2147608144}
!5589 = !DILocation(line: 148, column: 1, scope: !5313)
!5590 = !{i64 2147608284, i64 2147608327, i64 2147608367}
!5591 = !DILocation(line: 149, column: 1, scope: !5313)
!5592 = !{i64 2147608498, i64 2147608541, i64 2147608581}
!5593 = !DILocation(line: 150, column: 1, scope: !5313)
!5594 = !{i64 2147608742, i64 2147608785, i64 2147608825}
!5595 = !DILocation(line: 151, column: 1, scope: !5313)
!5596 = !{i64 2147608971, i64 2147609014, i64 2147609054}
!5597 = !DILocation(line: 152, column: 1, scope: !5313)
!5598 = !{i64 2147609200, i64 2147609243, i64 2147609283}
!5599 = !DILocation(line: 153, column: 1, scope: !5313)
!5600 = !{i64 2147609408, i64 2147609451, i64 2147609491}
!5601 = !DILocation(line: 154, column: 1, scope: !5313)
!5602 = !{i64 2147609646, i64 2147609689, i64 2147609729}
!5603 = !DILocation(line: 155, column: 1, scope: !5313)
!5604 = !{i64 2147609872, i64 2147609915, i64 2147609955}
!5605 = !DILocation(line: 156, column: 1, scope: !5313)
!5606 = !{i64 2147610131, i64 2147610174, i64 2147610214}
!5607 = !DILocation(line: 157, column: 1, scope: !5313)
!5608 = !{i64 2147610351, i64 2147610394, i64 2147610434}
!5609 = !DILocation(line: 158, column: 1, scope: !5313)
!5610 = !{i64 2147610583, i64 2147610626, i64 2147610666}
!5611 = !DILocation(line: 159, column: 1, scope: !5313)
!5612 = !{i64 2147610824, i64 2147610867, i64 2147610907}
!5613 = !DILocation(line: 160, column: 1, scope: !5313)
!5614 = !{i64 2147611065, i64 2147611108, i64 2147611148}
!5615 = !DILocation(line: 161, column: 1, scope: !5313)
!5616 = !{i64 2147611288, i64 2147611331, i64 2147611371}
!5617 = !DILocation(line: 162, column: 1, scope: !5313)
!5618 = !{i64 2147611505, i64 2147611548, i64 2147611588}
!5619 = !DILocation(line: 163, column: 1, scope: !5313)
!5620 = !{i64 2147611746, i64 2147611789, i64 2147611829}
!5621 = !DILocation(line: 164, column: 1, scope: !5313)
!5622 = !{i64 2147611933, i64 2147611976, i64 2147612016}
!5623 = !DILocation(line: 165, column: 1, scope: !5313)
!5624 = !{i64 2147612120, i64 2147612163, i64 2147612203}
!5625 = !DILocation(line: 166, column: 1, scope: !5313)
!5626 = !{i64 2147612283, i64 2147612326, i64 2147612366}
!5627 = !DILocation(line: 167, column: 1, scope: !5313)
!5628 = !{i64 2147612542, i64 2147612585, i64 2147612625}
!5629 = !DILocation(line: 168, column: 1, scope: !5313)
!5630 = !{i64 2147612765, i64 2147612808, i64 2147612848}
!5631 = !DILocation(line: 169, column: 1, scope: !5313)
!5632 = !{i64 2147612994, i64 2147613037, i64 2147613077}
!5633 = !DILocation(line: 170, column: 1, scope: !5313)
!5634 = !{i64 2147617251, i64 2147617294, i64 2147617334}
!5635 = !DILocation(line: 171, column: 1, scope: !5313)
!5636 = !{i64 2147617463, i64 2147617506, i64 2147617546}
!5637 = !DILocation(line: 172, column: 1, scope: !5313)
!5638 = !{i64 2147617684, i64 2147617727, i64 2147617767}
!5639 = !DILocation(line: 173, column: 1, scope: !5313)
!5640 = !{i64 2147617898, i64 2147617941, i64 2147617981}
!5641 = !DILocation(line: 174, column: 1, scope: !5313)
!5642 = !{i64 2147618088, i64 2147618131, i64 2147618171}
!5643 = !DILocation(line: 175, column: 1, scope: !5313)
!5644 = !{i64 2147618287, i64 2147618330, i64 2147618370}
!5645 = !DILocation(line: 176, column: 1, scope: !5313)
!5646 = !{i64 2147618492, i64 2147618535, i64 2147618575}
!5647 = !DILocation(line: 177, column: 1, scope: !5313)
!5648 = !{i64 2147618712, i64 2147618755, i64 2147618795}
!5649 = !DILocation(line: 178, column: 1, scope: !5313)
!5650 = !{i64 2147618913, i64 2147618956, i64 2147618996}
!5651 = !DILocation(line: 179, column: 1, scope: !5313)
!5652 = !{i64 2147619112, i64 2147619155, i64 2147619195}
!5653 = !DILocation(line: 180, column: 1, scope: !5313)
!5654 = !{i64 2147619317, i64 2147619360, i64 2147619400}
!5655 = !DILocation(line: 181, column: 1, scope: !5313)
!5656 = !{i64 2147619486, i64 2147619529, i64 2147619569}
!5657 = !DILocation(line: 182, column: 1, scope: !5313)
!5658 = !{i64 2147619670, i64 2147619713, i64 2147619753}
!5659 = !DILocation(line: 183, column: 1, scope: !5313)
!5660 = !{i64 2147619854, i64 2147619897, i64 2147619937}
!5661 = !DILocation(line: 184, column: 1, scope: !5313)
!5662 = !{i64 2147620041, i64 2147620084, i64 2147620124}
!5663 = !DILocation(line: 185, column: 1, scope: !5313)
!5664 = !{i64 2147620225, i64 2147620268, i64 2147620308}
!5665 = !DILocation(line: 186, column: 1, scope: !5313)
!5666 = !{i64 2147620463, i64 2147620506, i64 2147620546}
!5667 = !DILocation(line: 187, column: 1, scope: !5313)
!5668 = !{i64 2147620693, i64 2147620736, i64 2147620776}
!5669 = !DILocation(line: 188, column: 1, scope: !5313)
!5670 = !{i64 2147620922, i64 2147620965, i64 2147621005}
!5671 = !DILocation(line: 189, column: 1, scope: !5313)
!5672 = !{i64 2147621109, i64 2147621152, i64 2147621192}
!5673 = !DILocation(line: 190, column: 1, scope: !5313)
!5674 = !{i64 2147621305, i64 2147621348, i64 2147621388}
!5675 = !DILocation(line: 191, column: 1, scope: !5313)
!5676 = !{i64 2147621513, i64 2147621556, i64 2147621596}
!5677 = !DILocation(line: 192, column: 1, scope: !5313)
!5678 = !{i64 2147621725, i64 2147621768, i64 2147621808}
!5679 = !DILocation(line: 193, column: 1, scope: !5313)
!5680 = !{i64 2147621924, i64 2147621967, i64 2147622007}
!5681 = !DILocation(line: 194, column: 1, scope: !5313)
!5682 = !{i64 2147622162, i64 2147622205, i64 2147622245}
!5683 = !DILocation(line: 195, column: 1, scope: !5313)
!5684 = !{i64 2147622358, i64 2147622401, i64 2147622441}
!5685 = !DILocation(line: 196, column: 1, scope: !5313)
!5686 = !{i64 2147622560, i64 2147622603, i64 2147622643}
!5687 = !DILocation(line: 197, column: 1, scope: !5313)
!5688 = !{i64 2147622753, i64 2147622796, i64 2147622836}
!5689 = !DILocation(line: 198, column: 1, scope: !5313)
!5690 = !{i64 2147622987, i64 2147623030, i64 2147623070}
!5691 = !DILocation(line: 199, column: 1, scope: !5313)
!5692 = !{i64 2147623150, i64 2147623193, i64 2147623233}
!5693 = !DILocation(line: 200, column: 1, scope: !5313)
!5694 = !{i64 2147623389, i64 2147623432, i64 2147623472}
!5695 = !DILocation(line: 201, column: 1, scope: !5313)
!5696 = !{i64 2147623628, i64 2147623671, i64 2147623711}
!5697 = !DILocation(line: 202, column: 1, scope: !5313)
!5698 = !{i64 2147623864, i64 2147623907, i64 2147623947}
!5699 = !DILocation(line: 203, column: 1, scope: !5313)
!5700 = !{i64 2147624094, i64 2147624137, i64 2147624177}
!5701 = !DILocation(line: 204, column: 1, scope: !5313)
!5702 = !{i64 2147624281, i64 2147624324, i64 2147624364}
!5703 = !DILocation(line: 205, column: 1, scope: !5313)
!5704 = !{i64 2147624480, i64 2147624523, i64 2147624563}
!5705 = !DILocation(line: 206, column: 1, scope: !5313)
!5706 = !{i64 2147624751, i64 2147624794, i64 2147624834}
!5707 = !DILocation(line: 207, column: 1, scope: !5313)
!5708 = !{i64 2147624926, i64 2147624969, i64 2147625009}
!5709 = !DILocation(line: 208, column: 1, scope: !5313)
!5710 = !{i64 2147625160, i64 2147625203, i64 2147625243}
!5711 = !DILocation(line: 209, column: 1, scope: !5313)
!5712 = !{i64 2147625368, i64 2147625411, i64 2147625451}
!5713 = !DILocation(line: 210, column: 1, scope: !5313)
!5714 = !{i64 2147625567, i64 2147625610, i64 2147625650}
!5715 = !DILocation(line: 211, column: 1, scope: !5313)
!5716 = !{i64 2147625785, i64 2147625828, i64 2147625868}
!5717 = !DILocation(line: 212, column: 1, scope: !5313)
!5718 = !{i64 2147625975, i64 2147626018, i64 2147626058}
!5719 = !DILocation(line: 213, column: 1, scope: !5313)
!5720 = !{i64 2147626222, i64 2147626265, i64 2147626305}
!5721 = !DILocation(line: 214, column: 1, scope: !5313)
!5722 = !{i64 2147630479, i64 2147630522, i64 2147630562}
!5723 = !DILocation(line: 215, column: 1, scope: !5313)
!5724 = !{i64 2147630685, i64 2147630728, i64 2147630768}
!5725 = !DILocation(line: 216, column: 1, scope: !5313)
!5726 = !{i64 2147630890, i64 2147630933, i64 2147630973}
!5727 = !DILocation(line: 217, column: 1, scope: !5313)
!5728 = !{i64 2147631104, i64 2147631147, i64 2147631187}
!5729 = !DILocation(line: 218, column: 1, scope: !5313)
!5730 = !{i64 2147631330, i64 2147631373, i64 2147631413}
!5731 = !DILocation(line: 219, column: 1, scope: !5313)
!5732 = !{i64 2147631562, i64 2147631605, i64 2147631645}
!5733 = !DILocation(line: 220, column: 1, scope: !5313)
!5734 = !{i64 2147631746, i64 2147631789, i64 2147631829}
!5735 = !DILocation(line: 221, column: 1, scope: !5313)
!5736 = !{i64 2147631955, i64 2147631998, i64 2147632038}
!5737 = !DILocation(line: 222, column: 1, scope: !5313)
!5738 = !{i64 2147632139, i64 2147632182, i64 2147632222}
!5739 = !DILocation(line: 223, column: 1, scope: !5313)
!5740 = !{i64 2147632365, i64 2147632408, i64 2147632448}
!5741 = !DILocation(line: 224, column: 1, scope: !5313)
!5742 = !{i64 2147632591, i64 2147632634, i64 2147632674}
!5743 = !DILocation(line: 225, column: 1, scope: !5313)
!5744 = !{i64 2147632817, i64 2147632860, i64 2147632900}
!5745 = !DILocation(line: 226, column: 1, scope: !5313)
!5746 = !{i64 2147633043, i64 2147633086, i64 2147633126}
!5747 = !DILocation(line: 227, column: 1, scope: !5313)
!5748 = !{i64 2147633269, i64 2147633312, i64 2147633352}
!5749 = !DILocation(line: 228, column: 1, scope: !5313)
!5750 = !{i64 2147633501, i64 2147633544, i64 2147633584}
!5751 = !DILocation(line: 229, column: 1, scope: !5313)
!5752 = !{i64 2147633739, i64 2147633782, i64 2147633822}
!5753 = !DILocation(line: 230, column: 1, scope: !5313)
!5754 = !{i64 2147633959, i64 2147634002, i64 2147634042}
!5755 = !DILocation(line: 231, column: 1, scope: !5313)
!5756 = !{i64 2147634203, i64 2147634246, i64 2147634286}
!5757 = !DILocation(line: 232, column: 1, scope: !5313)
!5758 = !{i64 2147634444, i64 2147634487, i64 2147634527}
!5759 = !DILocation(line: 233, column: 1, scope: !5313)
!5760 = !{i64 2147634679, i64 2147634722, i64 2147634762}
!5761 = !DILocation(line: 234, column: 1, scope: !5313)
!5762 = !{i64 2147634911, i64 2147634954, i64 2147634994}
!5763 = !DILocation(line: 235, column: 1, scope: !5313)
!5764 = !{i64 2147635113, i64 2147635156, i64 2147635196}
!5765 = !DILocation(line: 236, column: 1, scope: !5313)
!5766 = !{i64 2147635363, i64 2147635406, i64 2147635446}
!5767 = !DILocation(line: 237, column: 1, scope: !5313)
!5768 = !{i64 2147635601, i64 2147635644, i64 2147635684}
!5769 = !DILocation(line: 238, column: 1, scope: !5313)
!5770 = !{i64 2147635785, i64 2147635828, i64 2147635868}
!5771 = !DILocation(line: 239, column: 1, scope: !5313)
!5772 = !{i64 2147636009, i64 2147636052, i64 2147636092}
!5773 = !DILocation(line: 240, column: 1, scope: !5313)
!5774 = !{i64 2147636247, i64 2147636290, i64 2147636330}
!5775 = !DILocation(line: 241, column: 1, scope: !5313)
!5776 = !{i64 2147636485, i64 2147636528, i64 2147636568}
!5777 = !DILocation(line: 242, column: 1, scope: !5313)
!5778 = !{i64 2147636678, i64 2147636721, i64 2147636761}
!5779 = !DILocation(line: 243, column: 1, scope: !5313)
!5780 = !{i64 2147636931, i64 2147636974, i64 2147637014}
!5781 = !DILocation(line: 244, column: 1, scope: !5313)
!5782 = !{i64 2147637145, i64 2147637188, i64 2147637228}
!5783 = !DILocation(line: 245, column: 1, scope: !5313)
!5784 = !{i64 2147637353, i64 2147637396, i64 2147637436}
!5785 = !DILocation(line: 246, column: 1, scope: !5313)
!5786 = !{i64 2147637543, i64 2147637586, i64 2147637626}
!5787 = !DILocation(line: 247, column: 1, scope: !5313)
!5788 = !{i64 2147637757, i64 2147637800, i64 2147637840}
!5789 = !DILocation(line: 248, column: 1, scope: !5313)
!5790 = !{i64 2147638019, i64 2147638062, i64 2147638102}
!5791 = !DILocation(line: 249, column: 1, scope: !5313)
!5792 = !{i64 2147638230, i64 2147638273, i64 2147638313}
!5793 = !DILocation(line: 250, column: 1, scope: !5313)
!5794 = !{i64 2147638474, i64 2147638517, i64 2147638557}
!5795 = !DILocation(line: 251, column: 1, scope: !5313)
!5796 = !{i64 2147638685, i64 2147638728, i64 2147638768}
!5797 = !DILocation(line: 252, column: 1, scope: !5313)
!5798 = !{i64 2147638914, i64 2147638957, i64 2147638997}
!5799 = !DILocation(line: 253, column: 1, scope: !5313)
!5800 = !{i64 2147643240, i64 2147643283, i64 2147643323}
!5801 = !DILocation(line: 254, column: 1, scope: !5313)
!5802 = !{i64 2147643445, i64 2147643488, i64 2147643528}
!5803 = !DILocation(line: 255, column: 1, scope: !5313)
!5804 = !{i64 2147643641, i64 2147643684, i64 2147643724}
!5805 = !DILocation(line: 256, column: 1, scope: !5313)
!5806 = !{i64 2147643864, i64 2147643907, i64 2147643947}
!5807 = !DILocation(line: 257, column: 1, scope: !5313)
!5808 = !{i64 2147644027, i64 2147644070, i64 2147644110}
!5809 = !DILocation(line: 258, column: 1, scope: !5313)
!5810 = !{i64 2147644232, i64 2147644275, i64 2147644315}
!5811 = !DILocation(line: 259, column: 1, scope: !5313)
!5812 = !{i64 2147644452, i64 2147644495, i64 2147644535}
!5813 = !DILocation(line: 260, column: 1, scope: !5313)
!5814 = !{i64 2147644666, i64 2147644709, i64 2147644749}
!5815 = !DILocation(line: 261, column: 1, scope: !5313)
!5816 = !{i64 2147644880, i64 2147644923, i64 2147644963}
!5817 = !DILocation(line: 262, column: 1, scope: !5313)
!5818 = !{i64 2147645091, i64 2147645134, i64 2147645174}
!5819 = !DILocation(line: 263, column: 1, scope: !5313)
!5820 = !{i64 2147645284, i64 2147645327, i64 2147645367}
!5821 = !DILocation(line: 264, column: 1, scope: !5313)
!5822 = !{i64 2147645483, i64 2147645526, i64 2147645566}
!5823 = !DILocation(line: 265, column: 1, scope: !5313)
!5824 = !{i64 2147645679, i64 2147645722, i64 2147645762}
!5825 = !DILocation(line: 266, column: 1, scope: !5313)
!5826 = !{i64 2147645878, i64 2147645921, i64 2147645961}
!5827 = !DILocation(line: 267, column: 1, scope: !5313)
!5828 = !{i64 2147646102, i64 2147646145, i64 2147646185}
!5829 = !DILocation(line: 268, column: 1, scope: !5313)
!5830 = !{i64 2147646327, i64 2147646370, i64 2147646410}
!5831 = !DILocation(line: 269, column: 1, scope: !5313)
!5832 = !{i64 2147646499, i64 2147646542, i64 2147646582}
!5833 = !DILocation(line: 270, column: 1, scope: !5313)
!5834 = !{i64 2147646692, i64 2147646735, i64 2147646775}
!5835 = !DILocation(line: 271, column: 1, scope: !5313)
!5836 = !{i64 2147646888, i64 2147646931, i64 2147646971}
!5837 = !DILocation(line: 272, column: 1, scope: !5313)
!5838 = !{i64 2147647115, i64 2147647158, i64 2147647198}
!5839 = !DILocation(line: 273, column: 1, scope: !5313)
!5840 = !{i64 2147647332, i64 2147647375, i64 2147647415}
!5841 = !DILocation(line: 274, column: 1, scope: !5313)
!5842 = !{i64 2147647624, i64 2147647667, i64 2147647707}
!5843 = !DILocation(line: 275, column: 1, scope: !5313)
!5844 = !{i64 2147647856, i64 2147647899, i64 2147647939}
!5845 = !DILocation(line: 276, column: 1, scope: !5313)
!5846 = !{i64 2147648073, i64 2147648116, i64 2147648156}
!5847 = !DILocation(line: 277, column: 1, scope: !5313)
!5848 = !{i64 2147648280, i64 2147648323, i64 2147648363}
!5849 = !DILocation(line: 278, column: 1, scope: !5313)
!5850 = !{i64 2147648481, i64 2147648524, i64 2147648564}
!5851 = !DILocation(line: 279, column: 1, scope: !5313)
!5852 = !{i64 2147648713, i64 2147648756, i64 2147648796}
!5853 = !DILocation(line: 280, column: 1, scope: !5313)
!5854 = !{i64 2147648921, i64 2147648964, i64 2147649004}
!5855 = !DILocation(line: 281, column: 1, scope: !5313)
!5856 = !{i64 2147649111, i64 2147649154, i64 2147649194}
!5857 = !DILocation(line: 282, column: 1, scope: !5313)
!5858 = !{i64 2147649337, i64 2147649380, i64 2147649420}
!5859 = !DILocation(line: 283, column: 1, scope: !5313)
!5860 = !{i64 2147649526, i64 2147649569, i64 2147649609}
!5861 = !DILocation(line: 284, column: 1, scope: !5313)
!5862 = !{i64 2147649797, i64 2147649840, i64 2147649880}
!5863 = !DILocation(line: 285, column: 1, scope: !5313)
!5864 = !{i64 2147650017, i64 2147650060, i64 2147650100}
!5865 = !DILocation(line: 286, column: 1, scope: !5313)
!5866 = !{i64 2147650270, i64 2147650313, i64 2147650353}
!5867 = !DILocation(line: 287, column: 1, scope: !5313)
!5868 = !{i64 2147650478, i64 2147650521, i64 2147650561}
!5869 = !DILocation(line: 288, column: 1, scope: !5313)
!5870 = !{i64 2147650710, i64 2147650753, i64 2147650793}
!5871 = !DILocation(line: 289, column: 1, scope: !5313)
!5872 = !{i64 2147650921, i64 2147650964, i64 2147651004}
!5873 = !DILocation(line: 290, column: 1, scope: !5313)
!5874 = !{i64 2147651111, i64 2147651154, i64 2147651194}
!5875 = !DILocation(line: 291, column: 1, scope: !5313)
!5876 = !{i64 2147651325, i64 2147651368, i64 2147651408}
!5877 = !DILocation(line: 292, column: 1, scope: !5313)
!5878 = !{i64 2147651524, i64 2147651567, i64 2147651607}
!5879 = !DILocation(line: 293, column: 1, scope: !5313)
!5880 = !{i64 2147651711, i64 2147651754, i64 2147651794}
!5881 = !DILocation(line: 294, column: 1, scope: !5313)
!5882 = !{i64 2147655980, i64 2147656023, i64 2147656063}
!5883 = !DILocation(line: 295, column: 1, scope: !5313)
!5884 = !{i64 2147656209, i64 2147656252, i64 2147656292}
!5885 = !DILocation(line: 296, column: 1, scope: !5313)
!5886 = !{i64 2147656411, i64 2147656454, i64 2147656494}
!5887 = !DILocation(line: 297, column: 1, scope: !5313)
!5888 = !{i64 2147656610, i64 2147656653, i64 2147656693}
!5889 = !DILocation(line: 298, column: 1, scope: !5313)
!5890 = !{i64 2147656827, i64 2147656870, i64 2147656910}
!5891 = !DILocation(line: 300, column: 1, scope: !5313)
!5892 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !140, file: !140, line: 30, type: !147, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5893)
!5893 = !{!5894, !5895}
!5894 = !DILocalVariable(name: "arg", arg: 1, scope: !5892, file: !140, line: 30, type: !149)
!5895 = !DILocalVariable(name: "key", scope: !5892, file: !140, line: 32, type: !132)
!5896 = !DILocation(line: 0, scope: !5892)
!5897 = !DILocation(line: 37, column: 2, scope: !5892)
!5898 = !DILocation(line: 38, column: 2, scope: !5892)
!5899 = !DILocation(line: 55, column: 2, scope: !5900, inlinedAt: !5907)
!5900 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5901, file: !5901, line: 42, type: !5902, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5904)
!5901 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5902 = !DISubroutineType(types: !5903)
!5903 = !{!32}
!5904 = !{!5905, !5906}
!5905 = !DILocalVariable(name: "key", scope: !5900, file: !5901, line: 44, type: !32)
!5906 = !DILocalVariable(name: "tmp", scope: !5900, file: !5901, line: 53, type: !32)
!5907 = distinct !DILocation(line: 40, column: 8, scope: !5892)
!5908 = !{i64 2184911}
!5909 = !DILocation(line: 0, scope: !5900, inlinedAt: !5907)
!5910 = !DILocalVariable(name: "key", arg: 1, scope: !5911, file: !5901, line: 84, type: !32)
!5911 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5901, file: !5901, line: 84, type: !5912, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5914)
!5912 = !DISubroutineType(types: !5913)
!5913 = !{null, !32}
!5914 = !{!5910}
!5915 = !DILocation(line: 0, scope: !5911, inlinedAt: !5916)
!5916 = distinct !DILocation(line: 47, column: 2, scope: !5892)
!5917 = !DILocation(line: 95, column: 2, scope: !5911, inlinedAt: !5916)
!5918 = !{i64 2185728}
!5919 = !DILocation(line: 51, column: 18, scope: !5892)
!5920 = !DILocation(line: 53, column: 2, scope: !5892)
!5921 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5922, file: !5922, line: 1609, type: !3328, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !473)
!5922 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5923 = !DILocation(line: 1611, column: 3, scope: !5921)
!5924 = !DILocation(line: 1612, column: 1, scope: !5921)
!5925 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5922, file: !5922, line: 1629, type: !3328, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !473)
!5926 = !DILocation(line: 1631, column: 3, scope: !5925)
!5927 = !DILocation(line: 1632, column: 1, scope: !5925)
!5928 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !180, file: !180, line: 26, type: !186, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !5929)
!5929 = !{!5930}
!5930 = !DILocalVariable(name: "dev", arg: 1, scope: !5928, file: !180, line: 26, type: !188)
!5931 = !DILocation(line: 0, scope: !5928)
!5932 = !DILocation(line: 68, column: 2, scope: !5928)
!5933 = distinct !DISubprogram(name: "tty_write", scope: !5934, file: !5934, line: 100, type: !5935, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !5978)
!5934 = !DIFile(filename: "zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5935 = !DISubroutineType(types: !5936)
!5936 = !{!5937, !5939, !13, !356}
!5937 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !5938, line: 28, baseType: !103)
!5938 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5940, size: 32)
!5940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !307, line: 18, size: 544, elements: !5941)
!5941 = !{!5942, !5943, !5967, !5968, !5969, !5970, !5971, !5972, !5973, !5974, !5975, !5976, !5977}
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !5940, file: !307, line: 19, baseType: !2737, size: 32)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !5940, file: !307, line: 21, baseType: !5944, size: 128, offset: 32)
!5944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !312, line: 2909, size: 128, elements: !5945)
!5945 = !{!5946, !5965, !5966}
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5944, file: !312, line: 2910, baseType: !5947, size: 64)
!5947 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !5948)
!5948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !5949)
!5949 = !{!5950}
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5948, file: !316, line: 232, baseType: !5951, size: 64)
!5951 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !5952)
!5952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !5953)
!5953 = !{!5954, !5960}
!5954 = !DIDerivedType(tag: DW_TAG_member, scope: !5952, file: !321, line: 38, baseType: !5955, size: 32)
!5955 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5952, file: !321, line: 38, size: 32, elements: !5956)
!5956 = !{!5957, !5959}
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5955, file: !321, line: 39, baseType: !5958, size: 32)
!5958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5952, size: 32)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5955, file: !321, line: 40, baseType: !5958, size: 32)
!5960 = !DIDerivedType(tag: DW_TAG_member, scope: !5952, file: !321, line: 42, baseType: !5961, size: 32, offset: 32)
!5961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5952, file: !321, line: 42, size: 32, elements: !5962)
!5962 = !{!5963, !5964}
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5961, file: !321, line: 43, baseType: !5958, size: 32)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5961, file: !321, line: 44, baseType: !5958, size: 32)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5944, file: !312, line: 2911, baseType: !32, size: 32, offset: 64)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5944, file: !312, line: 2912, baseType: !32, size: 32, offset: 96)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !5940, file: !307, line: 22, baseType: !270, size: 32, offset: 160)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !5940, file: !307, line: 23, baseType: !132, size: 32, offset: 192)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !5940, file: !307, line: 24, baseType: !340, size: 16, offset: 224)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !5940, file: !307, line: 24, baseType: !340, size: 16, offset: 240)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !5940, file: !307, line: 25, baseType: !344, size: 32, offset: 256)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !5940, file: !307, line: 27, baseType: !5944, size: 128, offset: 288)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !5940, file: !307, line: 28, baseType: !270, size: 32, offset: 416)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !5940, file: !307, line: 29, baseType: !132, size: 32, offset: 448)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !5940, file: !307, line: 30, baseType: !340, size: 16, offset: 480)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !5940, file: !307, line: 30, baseType: !340, size: 16, offset: 496)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !5940, file: !307, line: 31, baseType: !344, size: 32, offset: 512)
!5978 = !{!5979, !5980, !5981, !5982, !5983, !5984}
!5979 = !DILocalVariable(name: "tty", arg: 1, scope: !5933, file: !5934, line: 100, type: !5939)
!5980 = !DILocalVariable(name: "buf", arg: 2, scope: !5933, file: !5934, line: 100, type: !13)
!5981 = !DILocalVariable(name: "size", arg: 3, scope: !5933, file: !5934, line: 100, type: !356)
!5982 = !DILocalVariable(name: "p", scope: !5933, file: !5934, line: 102, type: !264)
!5983 = !DILocalVariable(name: "out_size", scope: !5933, file: !5934, line: 103, type: !356)
!5984 = !DILocalVariable(name: "res", scope: !5933, file: !5934, line: 104, type: !103)
!5985 = !DILocation(line: 0, scope: !5933)
!5986 = !DILocation(line: 106, column: 11, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5933, file: !5934, line: 106, column: 6)
!5988 = !DILocation(line: 106, column: 25, scope: !5987)
!5989 = !DILocation(line: 106, column: 6, scope: !5933)
!5990 = !DILocation(line: 117, column: 2, scope: !5933)
!5991 = !DILocation(line: 110, column: 3, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5987, file: !5934, line: 106, column: 32)
!5993 = !DILocation(line: 110, column: 14, scope: !5992)
!5994 = !DILocation(line: 111, column: 23, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5992, file: !5934, line: 110, column: 18)
!5996 = !DILocation(line: 111, column: 35, scope: !5995)
!5997 = !DILocation(line: 111, column: 33, scope: !5995)
!5998 = !DILocation(line: 111, column: 4, scope: !5995)
!5999 = distinct !{!5999, !5991, !6000}
!6000 = !DILocation(line: 112, column: 3, scope: !5992)
!6001 = !DILocation(line: 117, column: 13, scope: !5933)
!6002 = !DILocation(line: 118, column: 26, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5933, file: !5934, line: 117, column: 17)
!6004 = !DILocation(line: 118, column: 9, scope: !6003)
!6005 = !DILocation(line: 119, column: 11, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6003, file: !5934, line: 119, column: 7)
!6007 = !DILocation(line: 119, column: 7, scope: !6003)
!6008 = !DILocation(line: 121, column: 17, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6010, file: !5934, line: 121, column: 8)
!6010 = distinct !DILexicalBlock(scope: !6006, file: !5934, line: 119, column: 16)
!6011 = !DILocation(line: 121, column: 8, scope: !6010)
!6012 = !DILocation(line: 122, column: 13, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6009, file: !5934, line: 121, column: 23)
!6014 = !DILocation(line: 122, column: 5, scope: !6013)
!6015 = !DILocation(line: 122, column: 11, scope: !6013)
!6016 = !DILocation(line: 123, column: 5, scope: !6013)
!6017 = !DILocation(line: 118, column: 28, scope: !6003)
!6018 = !DILocation(line: 135, column: 11, scope: !6003)
!6019 = distinct !{!6019, !5990, !6020}
!6020 = !DILocation(line: 136, column: 2, scope: !5933)
!6021 = !DILocation(line: 139, column: 1, scope: !5933)
!6022 = distinct !DISubprogram(name: "uart_poll_out", scope: !6023, file: !6023, line: 95, type: !2754, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6024)
!6023 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!6024 = !{!6025, !6026}
!6025 = !DILocalVariable(name: "dev", arg: 1, scope: !6022, file: !6023, line: 95, type: !2737)
!6026 = !DILocalVariable(name: "out_char", arg: 2, scope: !6022, file: !6023, line: 95, type: !164)
!6027 = !DILocation(line: 0, scope: !6022)
!6028 = !DILocation(line: 105, column: 2, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6022, file: !6023, line: 105, column: 2)
!6030 = !{i64 2155345814}
!6031 = !DILocation(line: 106, column: 2, scope: !6022)
!6032 = !DILocation(line: 107, column: 1, scope: !6022)
!6033 = distinct !DISubprogram(name: "tty_putchar", scope: !5934, file: !5934, line: 69, type: !6034, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6036)
!6034 = !DISubroutineType(types: !6035)
!6035 = !{!103, !5939, !163}
!6036 = !{!6037, !6038, !6039, !6040, !6041}
!6037 = !DILocalVariable(name: "tty", arg: 1, scope: !6033, file: !5934, line: 69, type: !5939)
!6038 = !DILocalVariable(name: "c", arg: 2, scope: !6033, file: !5934, line: 69, type: !163)
!6039 = !DILocalVariable(name: "key", scope: !6033, file: !5934, line: 71, type: !32)
!6040 = !DILocalVariable(name: "tx_next", scope: !6033, file: !5934, line: 72, type: !103)
!6041 = !DILocalVariable(name: "res", scope: !6033, file: !5934, line: 73, type: !103)
!6042 = !DILocation(line: 0, scope: !6033)
!6043 = !DILocation(line: 75, column: 25, scope: !6033)
!6044 = !DILocation(line: 76, column: 5, scope: !6033)
!6045 = !DILocation(line: 77, column: 7, scope: !6033)
!6046 = !DILocation(line: 75, column: 8, scope: !6033)
!6047 = !DILocation(line: 78, column: 10, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6033, file: !5934, line: 78, column: 6)
!6049 = !DILocation(line: 78, column: 6, scope: !6033)
!6050 = !DILocation(line: 55, column: 2, scope: !6051, inlinedAt: !6055)
!6051 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5901, file: !5901, line: 42, type: !5902, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6052)
!6052 = !{!6053, !6054}
!6053 = !DILocalVariable(name: "key", scope: !6051, file: !5901, line: 44, type: !32)
!6054 = !DILocalVariable(name: "tmp", scope: !6051, file: !5901, line: 53, type: !32)
!6055 = distinct !DILocation(line: 82, column: 8, scope: !6033)
!6056 = !{i64 2280982}
!6057 = !DILocation(line: 0, scope: !6051, inlinedAt: !6055)
!6058 = !DILocation(line: 83, column: 17, scope: !6033)
!6059 = !DILocation(line: 83, column: 12, scope: !6033)
!6060 = !DILocation(line: 83, column: 24, scope: !6033)
!6061 = !DILocation(line: 84, column: 22, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6033, file: !5934, line: 84, column: 6)
!6063 = !DILocation(line: 84, column: 14, scope: !6062)
!6064 = !DILocation(line: 84, column: 6, scope: !6033)
!6065 = !DILocation(line: 87, column: 22, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6033, file: !5934, line: 87, column: 6)
!6067 = !DILocation(line: 87, column: 17, scope: !6066)
!6068 = !DILocation(line: 87, column: 14, scope: !6066)
!6069 = !DILocation(line: 87, column: 6, scope: !6033)
!6070 = !DILocalVariable(name: "key", arg: 1, scope: !6071, file: !5901, line: 84, type: !32)
!6071 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5901, file: !5901, line: 84, type: !5912, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6072)
!6072 = !{!6070}
!6073 = !DILocation(line: 0, scope: !6071, inlinedAt: !6074)
!6074 = distinct !DILocation(line: 88, column: 3, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6066, file: !5934, line: 87, column: 30)
!6076 = !DILocation(line: 95, column: 2, scope: !6071, inlinedAt: !6074)
!6077 = !{i64 2281799}
!6078 = !DILocation(line: 89, column: 3, scope: !6075)
!6079 = !DILocation(line: 92, column: 7, scope: !6033)
!6080 = !DILocation(line: 92, column: 2, scope: !6033)
!6081 = !DILocation(line: 92, column: 31, scope: !6033)
!6082 = !DILocation(line: 93, column: 16, scope: !6033)
!6083 = !DILocation(line: 93, column: 14, scope: !6033)
!6084 = !DILocation(line: 0, scope: !6071, inlinedAt: !6085)
!6085 = distinct !DILocation(line: 95, column: 2, scope: !6033)
!6086 = !DILocation(line: 95, column: 2, scope: !6071, inlinedAt: !6085)
!6087 = !DILocation(line: 96, column: 26, scope: !6033)
!6088 = !DILocation(line: 96, column: 2, scope: !6033)
!6089 = !DILocation(line: 97, column: 2, scope: !6033)
!6090 = !DILocation(line: 98, column: 1, scope: !6033)
!6091 = distinct !DISubprogram(name: "z_errno", scope: !6092, file: !6092, line: 24, type: !6093, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !473)
!6092 = !DIFile(filename: "zephyr/include/generated/syscalls/errno_private.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!6093 = !DISubroutineType(types: !6094)
!6094 = !{!2715}
!6095 = !DILocation(line: 31, column: 2, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6091, file: !6092, line: 31, column: 2)
!6097 = !{i64 2154586801}
!6098 = !DILocation(line: 32, column: 9, scope: !6091)
!6099 = !DILocation(line: 32, column: 2, scope: !6091)
!6100 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !6101, file: !6101, line: 403, type: !6102, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6104)
!6101 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6102 = !DISubroutineType(types: !6103)
!6103 = !{!1621, !1621}
!6104 = !{!6105}
!6105 = !DILocalVariable(name: "t", arg: 1, scope: !6100, file: !6101, line: 403, type: !1621)
!6106 = !DILocation(line: 0, scope: !6100)
!6107 = !DILocalVariable(name: "t", arg: 1, scope: !6108, file: !6101, line: 102, type: !1621)
!6108 = distinct !DISubprogram(name: "z_tmcvt", scope: !6101, file: !6101, line: 102, type: !6109, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6111)
!6109 = !DISubroutineType(types: !6110)
!6110 = !{!1621, !1621, !132, !132, !166, !166, !166, !166}
!6111 = !{!6107, !6112, !6113, !6114, !6115, !6116, !6117, !6118, !6119, !6120, !6121}
!6112 = !DILocalVariable(name: "from_hz", arg: 2, scope: !6108, file: !6101, line: 102, type: !132)
!6113 = !DILocalVariable(name: "to_hz", arg: 3, scope: !6108, file: !6101, line: 103, type: !132)
!6114 = !DILocalVariable(name: "const_hz", arg: 4, scope: !6108, file: !6101, line: 103, type: !166)
!6115 = !DILocalVariable(name: "result32", arg: 5, scope: !6108, file: !6101, line: 104, type: !166)
!6116 = !DILocalVariable(name: "round_up", arg: 6, scope: !6108, file: !6101, line: 104, type: !166)
!6117 = !DILocalVariable(name: "round_off", arg: 7, scope: !6108, file: !6101, line: 105, type: !166)
!6118 = !DILocalVariable(name: "mul_ratio", scope: !6108, file: !6101, line: 107, type: !166)
!6119 = !DILocalVariable(name: "div_ratio", scope: !6108, file: !6101, line: 109, type: !166)
!6120 = !DILocalVariable(name: "off", scope: !6108, file: !6101, line: 116, type: !1621)
!6121 = !DILocalVariable(name: "rdivisor", scope: !6122, file: !6101, line: 119, type: !132)
!6122 = distinct !DILexicalBlock(scope: !6123, file: !6101, line: 118, column: 18)
!6123 = distinct !DILexicalBlock(scope: !6108, file: !6101, line: 118, column: 6)
!6124 = !DILocation(line: 0, scope: !6108, inlinedAt: !6125)
!6125 = distinct !DILocation(line: 406, column: 9, scope: !6100)
!6126 = !DILocation(line: 145, column: 13, scope: !6127, inlinedAt: !6125)
!6127 = distinct !DILexicalBlock(scope: !6128, file: !6101, line: 144, column: 10)
!6128 = distinct !DILexicalBlock(scope: !6129, file: !6101, line: 142, column: 7)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !6101, line: 141, column: 24)
!6130 = distinct !DILexicalBlock(scope: !6131, file: !6101, line: 141, column: 13)
!6131 = distinct !DILexicalBlock(scope: !6108, file: !6101, line: 134, column: 6)
!6132 = !DILocation(line: 406, column: 2, scope: !6100)
!6133 = distinct !DISubprogram(name: "k_sem_take", scope: !3768, file: !3768, line: 1044, type: !6134, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6141)
!6134 = !DISubroutineType(types: !6135)
!6135 = !{!103, !6136, !6137}
!6136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5944, size: 32)
!6137 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1800, line: 67, baseType: !6138)
!6138 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1800, line: 65, size: 64, elements: !6139)
!6139 = !{!6140}
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !6138, file: !1800, line: 66, baseType: !1799, size: 64)
!6141 = !{!6142, !6143}
!6142 = !DILocalVariable(name: "sem", arg: 1, scope: !6133, file: !3768, line: 1044, type: !6136)
!6143 = !DILocalVariable(name: "timeout", arg: 2, scope: !6133, file: !3768, line: 1044, type: !6137)
!6144 = !DILocation(line: 0, scope: !6133)
!6145 = !DILocation(line: 1053, column: 2, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6133, file: !3768, line: 1053, column: 2)
!6147 = !{i64 2155065989}
!6148 = !DILocation(line: 1054, column: 9, scope: !6133)
!6149 = !DILocation(line: 1054, column: 2, scope: !6133)
!6150 = distinct !DISubprogram(name: "uart_irq_tx_enable", scope: !6023, file: !6023, line: 193, type: !2788, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6151)
!6151 = !{!6152}
!6152 = !DILocalVariable(name: "dev", arg: 1, scope: !6150, file: !6023, line: 193, type: !2737)
!6153 = !DILocation(line: 0, scope: !6150)
!6154 = !DILocation(line: 202, column: 2, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6150, file: !6023, line: 202, column: 2)
!6156 = !{i64 2155346086}
!6157 = !DILocation(line: 203, column: 2, scope: !6150)
!6158 = !DILocation(line: 204, column: 1, scope: !6150)
!6159 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_enable", scope: !212, file: !212, line: 857, type: !2788, scopeLine: 858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6160)
!6160 = !{!6161, !6162}
!6161 = !DILocalVariable(name: "dev", arg: 1, scope: !6159, file: !212, line: 857, type: !2737)
!6162 = !DILocalVariable(name: "api", scope: !6159, file: !212, line: 860, type: !2729)
!6163 = !DILocation(line: 0, scope: !6159)
!6164 = !DILocation(line: 861, column: 40, scope: !6159)
!6165 = !DILocation(line: 863, column: 11, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6159, file: !212, line: 863, column: 6)
!6167 = !DILocation(line: 863, column: 25, scope: !6166)
!6168 = !DILocation(line: 863, column: 6, scope: !6159)
!6169 = !DILocation(line: 864, column: 3, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6166, file: !212, line: 863, column: 34)
!6171 = !DILocation(line: 865, column: 2, scope: !6170)
!6172 = !DILocation(line: 869, column: 1, scope: !6159)
!6173 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !212, file: !212, line: 574, type: !2754, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6174)
!6174 = !{!6175, !6176, !6177}
!6175 = !DILocalVariable(name: "dev", arg: 1, scope: !6173, file: !212, line: 574, type: !2737)
!6176 = !DILocalVariable(name: "out_char", arg: 2, scope: !6173, file: !212, line: 575, type: !164)
!6177 = !DILocalVariable(name: "api", scope: !6173, file: !212, line: 577, type: !2729)
!6178 = !DILocation(line: 0, scope: !6173)
!6179 = !DILocation(line: 578, column: 40, scope: !6173)
!6180 = !DILocation(line: 580, column: 7, scope: !6173)
!6181 = !DILocation(line: 580, column: 2, scope: !6173)
!6182 = !DILocation(line: 581, column: 1, scope: !6173)
!6183 = distinct !DISubprogram(name: "tty_read", scope: !5934, file: !5934, line: 206, type: !6184, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6186)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{!5937, !5939, !102, !356}
!6186 = !{!6187, !6188, !6189, !6190, !6191, !6192}
!6187 = !DILocalVariable(name: "tty", arg: 1, scope: !6183, file: !5934, line: 206, type: !5939)
!6188 = !DILocalVariable(name: "buf", arg: 2, scope: !6183, file: !5934, line: 206, type: !102)
!6189 = !DILocalVariable(name: "size", arg: 3, scope: !6183, file: !5934, line: 206, type: !356)
!6190 = !DILocalVariable(name: "p", scope: !6183, file: !5934, line: 208, type: !270)
!6191 = !DILocalVariable(name: "out_size", scope: !6183, file: !5934, line: 209, type: !356)
!6192 = !DILocalVariable(name: "res", scope: !6183, file: !5934, line: 210, type: !103)
!6193 = !DILocation(line: 0, scope: !6183)
!6194 = !DILocation(line: 212, column: 11, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6183, file: !5934, line: 212, column: 6)
!6196 = !DILocation(line: 212, column: 25, scope: !6195)
!6197 = !DILocation(line: 212, column: 6, scope: !6183)
!6198 = !DILocation(line: 216, column: 2, scope: !6183)
!6199 = !DILocation(line: 213, column: 10, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6195, file: !5934, line: 212, column: 32)
!6201 = !DILocation(line: 213, column: 3, scope: !6200)
!6202 = !DILocation(line: 216, column: 13, scope: !6183)
!6203 = !DILocation(line: 217, column: 9, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6183, file: !5934, line: 216, column: 17)
!6205 = !DILocation(line: 218, column: 11, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6204, file: !5934, line: 218, column: 7)
!6207 = !DILocation(line: 218, column: 7, scope: !6204)
!6208 = !DILocation(line: 220, column: 17, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !5934, line: 220, column: 8)
!6210 = distinct !DILexicalBlock(scope: !6206, file: !5934, line: 218, column: 16)
!6211 = !DILocation(line: 220, column: 8, scope: !6210)
!6212 = !DILocation(line: 221, column: 13, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6209, file: !5934, line: 220, column: 23)
!6214 = !DILocation(line: 221, column: 5, scope: !6213)
!6215 = !DILocation(line: 221, column: 11, scope: !6213)
!6216 = !DILocation(line: 222, column: 5, scope: !6213)
!6217 = !DILocation(line: 234, column: 10, scope: !6204)
!6218 = !DILocation(line: 234, column: 5, scope: !6204)
!6219 = !DILocation(line: 234, column: 8, scope: !6204)
!6220 = !DILocation(line: 235, column: 11, scope: !6204)
!6221 = distinct !{!6221, !6198, !6222}
!6222 = !DILocation(line: 236, column: 2, scope: !6183)
!6223 = !DILocation(line: 239, column: 1, scope: !6183)
!6224 = distinct !DISubprogram(name: "tty_read_unbuf", scope: !5934, file: !5934, line: 162, type: !6184, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6225)
!6225 = !{!6226, !6227, !6228, !6229, !6230, !6231, !6232, !6233}
!6226 = !DILocalVariable(name: "tty", arg: 1, scope: !6224, file: !5934, line: 162, type: !5939)
!6227 = !DILocalVariable(name: "buf", arg: 2, scope: !6224, file: !5934, line: 162, type: !102)
!6228 = !DILocalVariable(name: "size", arg: 3, scope: !6224, file: !5934, line: 162, type: !356)
!6229 = !DILocalVariable(name: "p", scope: !6224, file: !5934, line: 164, type: !270)
!6230 = !DILocalVariable(name: "out_size", scope: !6224, file: !5934, line: 165, type: !356)
!6231 = !DILocalVariable(name: "res", scope: !6224, file: !5934, line: 166, type: !103)
!6232 = !DILocalVariable(name: "timeout", scope: !6224, file: !5934, line: 167, type: !132)
!6233 = !DILocalVariable(name: "c", scope: !6234, file: !5934, line: 170, type: !163)
!6234 = distinct !DILexicalBlock(scope: !6224, file: !5934, line: 169, column: 15)
!6235 = !DILocation(line: 0, scope: !6224)
!6236 = !DILocation(line: 169, column: 2, scope: !6224)
!6237 = !DILocation(line: 167, column: 26, scope: !6224)
!6238 = !DILocation(line: 170, column: 3, scope: !6234)
!6239 = !DILocation(line: 171, column: 27, scope: !6234)
!6240 = !DILocation(line: 0, scope: !6234)
!6241 = !DILocation(line: 171, column: 9, scope: !6234)
!6242 = !DILocation(line: 172, column: 11, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6234, file: !5934, line: 172, column: 7)
!6244 = !DILocation(line: 172, column: 7, scope: !6234)
!6245 = !DILocation(line: 177, column: 17, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6247, file: !5934, line: 177, column: 8)
!6247 = distinct !DILexicalBlock(scope: !6243, file: !5934, line: 172, column: 18)
!6248 = !DILocation(line: 177, column: 8, scope: !6247)
!6249 = !DILocation(line: 178, column: 5, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6246, file: !5934, line: 177, column: 23)
!6251 = !DILocation(line: 178, column: 11, scope: !6250)
!6252 = !DILocation(line: 201, column: 2, scope: !6224)
!6253 = !DILocation(line: 184, column: 11, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6234, file: !5934, line: 184, column: 7)
!6255 = !DILocation(line: 184, column: 7, scope: !6234)
!6256 = !DILocation(line: 185, column: 11, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6254, file: !5934, line: 184, column: 17)
!6258 = !DILocation(line: 185, column: 6, scope: !6257)
!6259 = !DILocation(line: 185, column: 9, scope: !6257)
!6260 = !DILocation(line: 186, column: 12, scope: !6257)
!6261 = !DILocation(line: 187, column: 8, scope: !6257)
!6262 = !DILocation(line: 190, column: 12, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6234, file: !5934, line: 190, column: 7)
!6264 = !DILocation(line: 190, column: 17, scope: !6263)
!6265 = !DILocation(line: 191, column: 17, scope: !6263)
!6266 = !DILocation(line: 191, column: 36, scope: !6263)
!6267 = !DILocation(line: 191, column: 46, scope: !6263)
!6268 = !DILocation(line: 191, column: 49, scope: !6263)
!6269 = !DILocation(line: 190, column: 7, scope: !6234)
!6270 = !DILocation(line: 198, column: 11, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6234, file: !5934, line: 198, column: 7)
!6272 = !DILocation(line: 198, column: 7, scope: !6234)
!6273 = !DILocation(line: 199, column: 12, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6271, file: !5934, line: 198, column: 18)
!6275 = !DILocation(line: 199, column: 4, scope: !6274)
!6276 = !DILocation(line: 200, column: 3, scope: !6274)
!6277 = !DILocation(line: 204, column: 1, scope: !6224)
!6278 = distinct !DISubprogram(name: "tty_getchar", scope: !5934, file: !5934, line: 141, type: !6279, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6281)
!6279 = !DISubroutineType(types: !6280)
!6280 = !{!103, !5939}
!6281 = !{!6282, !6283, !6284, !6285}
!6282 = !DILocalVariable(name: "tty", arg: 1, scope: !6278, file: !5934, line: 141, type: !5939)
!6283 = !DILocalVariable(name: "key", scope: !6278, file: !5934, line: 143, type: !32)
!6284 = !DILocalVariable(name: "c", scope: !6278, file: !5934, line: 144, type: !163)
!6285 = !DILocalVariable(name: "res", scope: !6278, file: !5934, line: 145, type: !103)
!6286 = !DILocation(line: 0, scope: !6278)
!6287 = !DILocation(line: 147, column: 25, scope: !6278)
!6288 = !DILocation(line: 147, column: 33, scope: !6278)
!6289 = !DILocation(line: 147, column: 8, scope: !6278)
!6290 = !DILocation(line: 148, column: 10, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6278, file: !5934, line: 148, column: 6)
!6292 = !DILocation(line: 148, column: 6, scope: !6278)
!6293 = !DILocation(line: 55, column: 2, scope: !6051, inlinedAt: !6294)
!6294 = distinct !DILocation(line: 152, column: 8, scope: !6278)
!6295 = !DILocation(line: 0, scope: !6051, inlinedAt: !6294)
!6296 = !DILocation(line: 153, column: 11, scope: !6278)
!6297 = !DILocation(line: 153, column: 27, scope: !6278)
!6298 = !DILocation(line: 153, column: 33, scope: !6278)
!6299 = !DILocation(line: 153, column: 6, scope: !6278)
!6300 = !DILocation(line: 154, column: 6, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6278, file: !5934, line: 154, column: 6)
!6302 = !DILocation(line: 154, column: 26, scope: !6301)
!6303 = !DILocation(line: 154, column: 18, scope: !6301)
!6304 = !DILocation(line: 154, column: 6, scope: !6278)
!6305 = !DILocation(line: 0, scope: !6071, inlinedAt: !6306)
!6306 = distinct !DILocation(line: 157, column: 2, scope: !6278)
!6307 = !DILocation(line: 95, column: 2, scope: !6071, inlinedAt: !6306)
!6308 = !DILocation(line: 159, column: 9, scope: !6278)
!6309 = !DILocation(line: 159, column: 2, scope: !6278)
!6310 = !DILocation(line: 160, column: 1, scope: !6278)
!6311 = distinct !DISubprogram(name: "uart_poll_in", scope: !6023, file: !6023, line: 47, type: !2735, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6312)
!6312 = !{!6313, !6314}
!6313 = !DILocalVariable(name: "dev", arg: 1, scope: !6311, file: !6023, line: 47, type: !2737)
!6314 = !DILocalVariable(name: "p_char", arg: 2, scope: !6311, file: !6023, line: 47, type: !233)
!6315 = !DILocation(line: 0, scope: !6311)
!6316 = !DILocation(line: 56, column: 2, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6311, file: !6023, line: 56, column: 2)
!6318 = !{i64 2155345678}
!6319 = !DILocation(line: 57, column: 9, scope: !6311)
!6320 = !DILocation(line: 57, column: 2, scope: !6311)
!6321 = distinct !DISubprogram(name: "k_sleep", scope: !3768, file: !3768, line: 91, type: !6322, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6324)
!6322 = !DISubroutineType(types: !6323)
!6323 = !{!344, !6137}
!6324 = !{!6325}
!6325 = !DILocalVariable(name: "timeout", arg: 1, scope: !6321, file: !3768, line: 91, type: !6137)
!6326 = !DILocation(line: 0, scope: !6321)
!6327 = !DILocation(line: 99, column: 2, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6321, file: !3768, line: 99, column: 2)
!6329 = !{i64 2155062145}
!6330 = !DILocation(line: 100, column: 9, scope: !6321)
!6331 = !DILocation(line: 100, column: 2, scope: !6321)
!6332 = distinct !DISubprogram(name: "z_impl_uart_poll_in", scope: !212, file: !212, line: 504, type: !2735, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6333)
!6333 = !{!6334, !6335, !6336}
!6334 = !DILocalVariable(name: "dev", arg: 1, scope: !6332, file: !212, line: 504, type: !2737)
!6335 = !DILocalVariable(name: "p_char", arg: 2, scope: !6332, file: !212, line: 505, type: !233)
!6336 = !DILocalVariable(name: "api", scope: !6332, file: !212, line: 507, type: !2729)
!6337 = !DILocation(line: 0, scope: !6332)
!6338 = !DILocation(line: 508, column: 40, scope: !6332)
!6339 = !DILocation(line: 510, column: 11, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6332, file: !212, line: 510, column: 6)
!6341 = !DILocation(line: 510, column: 19, scope: !6340)
!6342 = !DILocation(line: 510, column: 6, scope: !6332)
!6343 = !DILocation(line: 514, column: 9, scope: !6332)
!6344 = !DILocation(line: 514, column: 2, scope: !6332)
!6345 = !DILocation(line: 515, column: 1, scope: !6332)
!6346 = distinct !DISubprogram(name: "tty_init", scope: !5934, file: !5934, line: 241, type: !6347, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6349)
!6347 = !DISubroutineType(types: !6348)
!6348 = !{!103, !5939, !2737}
!6349 = !{!6350, !6351}
!6350 = !DILocalVariable(name: "tty", arg: 1, scope: !6346, file: !5934, line: 241, type: !5939)
!6351 = !DILocalVariable(name: "uart_dev", arg: 2, scope: !6346, file: !5934, line: 241, type: !2737)
!6352 = !DILocation(line: 0, scope: !6346)
!6353 = !DILocation(line: 243, column: 7, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6346, file: !5934, line: 243, column: 6)
!6355 = !DILocation(line: 243, column: 6, scope: !6346)
!6356 = !DILocation(line: 247, column: 7, scope: !6346)
!6357 = !DILocation(line: 247, column: 16, scope: !6346)
!6358 = !DILocation(line: 250, column: 7, scope: !6346)
!6359 = !DILocation(line: 250, column: 18, scope: !6346)
!6360 = !DILocation(line: 251, column: 7, scope: !6346)
!6361 = !DILocation(line: 251, column: 21, scope: !6346)
!6362 = !DILocation(line: 252, column: 7, scope: !6346)
!6363 = !DILocation(line: 252, column: 18, scope: !6346)
!6364 = !DILocation(line: 253, column: 7, scope: !6346)
!6365 = !DILocation(line: 253, column: 21, scope: !6346)
!6366 = !DILocation(line: 255, column: 49, scope: !6346)
!6367 = !DILocation(line: 255, column: 56, scope: !6346)
!6368 = !DILocation(line: 255, column: 35, scope: !6346)
!6369 = !DILocation(line: 255, column: 42, scope: !6346)
!6370 = !DILocation(line: 255, column: 21, scope: !6346)
!6371 = !DILocation(line: 255, column: 28, scope: !6346)
!6372 = !DILocation(line: 255, column: 7, scope: !6346)
!6373 = !DILocation(line: 255, column: 14, scope: !6346)
!6374 = !DILocation(line: 257, column: 7, scope: !6346)
!6375 = !DILocation(line: 257, column: 18, scope: !6346)
!6376 = !DILocation(line: 258, column: 7, scope: !6346)
!6377 = !DILocation(line: 258, column: 18, scope: !6346)
!6378 = !DILocation(line: 260, column: 58, scope: !6346)
!6379 = !DILocation(line: 260, column: 2, scope: !6346)
!6380 = !DILocation(line: 262, column: 2, scope: !6346)
!6381 = !DILocation(line: 263, column: 1, scope: !6346)
!6382 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !212, file: !212, line: 1163, type: !2802, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6383)
!6383 = !{!6384, !6385, !6386, !6387}
!6384 = !DILocalVariable(name: "dev", arg: 1, scope: !6382, file: !212, line: 1163, type: !2737)
!6385 = !DILocalVariable(name: "cb", arg: 2, scope: !6382, file: !212, line: 1164, type: !2804)
!6386 = !DILocalVariable(name: "user_data", arg: 3, scope: !6382, file: !212, line: 1165, type: !102)
!6387 = !DILocalVariable(name: "api", scope: !6382, file: !212, line: 1168, type: !2729)
!6388 = !DILocation(line: 0, scope: !6382)
!6389 = !DILocation(line: 1169, column: 40, scope: !6382)
!6390 = !DILocation(line: 1171, column: 11, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6382, file: !212, line: 1171, column: 6)
!6392 = !DILocation(line: 1171, column: 20, scope: !6391)
!6393 = !DILocation(line: 1171, column: 29, scope: !6391)
!6394 = !DILocation(line: 1171, column: 46, scope: !6391)
!6395 = !DILocation(line: 1171, column: 6, scope: !6382)
!6396 = !DILocation(line: 1172, column: 3, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6391, file: !212, line: 1171, column: 56)
!6398 = !DILocation(line: 1173, column: 2, scope: !6397)
!6399 = !DILocation(line: 1179, column: 1, scope: !6382)
!6400 = distinct !DISubprogram(name: "tty_uart_isr", scope: !5934, file: !5934, line: 15, type: !2806, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6401)
!6401 = !{!6402, !6403, !6404, !6405}
!6402 = !DILocalVariable(name: "dev", arg: 1, scope: !6400, file: !5934, line: 15, type: !2737)
!6403 = !DILocalVariable(name: "user_data", arg: 2, scope: !6400, file: !5934, line: 15, type: !102)
!6404 = !DILocalVariable(name: "tty", scope: !6400, file: !5934, line: 17, type: !5939)
!6405 = !DILocalVariable(name: "c", scope: !6406, file: !5934, line: 22, type: !163)
!6406 = distinct !DILexicalBlock(scope: !6407, file: !5934, line: 21, column: 30)
!6407 = distinct !DILexicalBlock(scope: !6400, file: !5934, line: 21, column: 6)
!6408 = !DILocation(line: 0, scope: !6400)
!6409 = !DILocation(line: 17, column: 27, scope: !6400)
!6410 = !DILocation(line: 19, column: 2, scope: !6400)
!6411 = !DILocation(line: 21, column: 6, scope: !6407)
!6412 = !DILocation(line: 21, column: 6, scope: !6400)
!6413 = !DILocation(line: 22, column: 3, scope: !6406)
!6414 = !DILocation(line: 0, scope: !6406)
!6415 = !DILocation(line: 25, column: 8, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6417, file: !5934, line: 25, column: 8)
!6417 = distinct !DILexicalBlock(scope: !6406, file: !5934, line: 24, column: 13)
!6418 = !DILocation(line: 25, column: 35, scope: !6416)
!6419 = !DILocation(line: 25, column: 8, scope: !6417)
!6420 = !DILocation(line: 28, column: 28, scope: !6417)
!6421 = !DILocation(line: 28, column: 4, scope: !6417)
!6422 = distinct !{!6422, !6423, !6424}
!6423 = !DILocation(line: 24, column: 3, scope: !6406)
!6424 = !DILocation(line: 29, column: 3, scope: !6406)
!6425 = !DILocation(line: 30, column: 2, scope: !6407)
!6426 = !DILocation(line: 30, column: 2, scope: !6406)
!6427 = !DILocation(line: 32, column: 6, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6400, file: !5934, line: 32, column: 6)
!6429 = !DILocation(line: 32, column: 6, scope: !6400)
!6430 = !DILocation(line: 33, column: 12, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6432, file: !5934, line: 33, column: 7)
!6432 = distinct !DILexicalBlock(scope: !6428, file: !5934, line: 32, column: 30)
!6433 = !DILocation(line: 33, column: 27, scope: !6431)
!6434 = !DILocation(line: 33, column: 19, scope: !6431)
!6435 = !DILocation(line: 33, column: 7, scope: !6432)
!6436 = !DILocation(line: 37, column: 4, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6431, file: !5934, line: 33, column: 35)
!6438 = !DILocation(line: 38, column: 3, scope: !6437)
!6439 = !DILocation(line: 33, column: 7, scope: !6431)
!6440 = !DILocation(line: 39, column: 30, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6431, file: !5934, line: 38, column: 10)
!6442 = !DILocation(line: 39, column: 52, scope: !6441)
!6443 = !DILocation(line: 39, column: 25, scope: !6441)
!6444 = !DILocation(line: 39, column: 4, scope: !6441)
!6445 = !DILocation(line: 40, column: 13, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6441, file: !5934, line: 40, column: 8)
!6447 = !DILocation(line: 40, column: 8, scope: !6446)
!6448 = !DILocation(line: 40, column: 28, scope: !6446)
!6449 = !DILocation(line: 40, column: 20, scope: !6446)
!6450 = !DILocation(line: 40, column: 8, scope: !6441)
!6451 = !DILocation(line: 41, column: 17, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6446, file: !5934, line: 40, column: 43)
!6453 = !DILocation(line: 42, column: 4, scope: !6452)
!6454 = !DILocation(line: 43, column: 21, scope: !6441)
!6455 = !DILocation(line: 43, column: 4, scope: !6441)
!6456 = !DILocation(line: 46, column: 1, scope: !6400)
!6457 = distinct !DISubprogram(name: "uart_irq_update", scope: !6023, file: !6023, line: 360, type: !2758, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6458)
!6458 = !{!6459}
!6459 = !DILocalVariable(name: "dev", arg: 1, scope: !6457, file: !6023, line: 360, type: !2737)
!6460 = !DILocation(line: 0, scope: !6457)
!6461 = !DILocation(line: 368, column: 2, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6457, file: !6023, line: 368, column: 2)
!6463 = !{i64 2155346562}
!6464 = !DILocation(line: 369, column: 9, scope: !6457)
!6465 = !DILocation(line: 369, column: 2, scope: !6457)
!6466 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !212, file: !212, line: 1024, type: !2758, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6467)
!6467 = !{!6468, !6469}
!6468 = !DILocalVariable(name: "dev", arg: 1, scope: !6466, file: !212, line: 1024, type: !2737)
!6469 = !DILocalVariable(name: "api", scope: !6466, file: !212, line: 1027, type: !2729)
!6470 = !DILocation(line: 0, scope: !6466)
!6471 = !DILocation(line: 1028, column: 40, scope: !6466)
!6472 = !DILocation(line: 1030, column: 11, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6466, file: !212, line: 1030, column: 6)
!6474 = !DILocation(line: 1030, column: 24, scope: !6473)
!6475 = !DILocation(line: 1030, column: 6, scope: !6466)
!6476 = !DILocation(line: 1033, column: 9, scope: !6466)
!6477 = !DILocation(line: 1033, column: 2, scope: !6466)
!6478 = !DILocation(line: 1038, column: 1, scope: !6466)
!6479 = distinct !DISubprogram(name: "uart_fifo_read", scope: !212, file: !212, line: 785, type: !2784, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6480)
!6480 = !{!6481, !6482, !6483, !6484}
!6481 = !DILocalVariable(name: "dev", arg: 1, scope: !6479, file: !212, line: 785, type: !2737)
!6482 = !DILocalVariable(name: "rx_data", arg: 2, scope: !6479, file: !212, line: 785, type: !270)
!6483 = !DILocalVariable(name: "size", arg: 3, scope: !6479, file: !212, line: 786, type: !271)
!6484 = !DILocalVariable(name: "api", scope: !6479, file: !212, line: 789, type: !2729)
!6485 = !DILocation(line: 0, scope: !6479)
!6486 = !DILocation(line: 790, column: 40, scope: !6479)
!6487 = !DILocation(line: 792, column: 11, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6479, file: !212, line: 792, column: 6)
!6489 = !DILocation(line: 792, column: 21, scope: !6488)
!6490 = !DILocation(line: 792, column: 6, scope: !6479)
!6491 = !DILocation(line: 796, column: 9, scope: !6479)
!6492 = !DILocation(line: 796, column: 2, scope: !6479)
!6493 = !DILocation(line: 803, column: 1, scope: !6479)
!6494 = distinct !DISubprogram(name: "tty_irq_input_hook", scope: !5934, file: !5934, line: 48, type: !6034, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6495)
!6495 = !{!6496, !6497, !6498}
!6496 = !DILocalVariable(name: "tty", arg: 1, scope: !6494, file: !5934, line: 48, type: !5939)
!6497 = !DILocalVariable(name: "c", arg: 2, scope: !6494, file: !5934, line: 48, type: !163)
!6498 = !DILocalVariable(name: "rx_next", scope: !6494, file: !5934, line: 50, type: !103)
!6499 = !DILocation(line: 0, scope: !6494)
!6500 = !DILocation(line: 50, column: 21, scope: !6494)
!6501 = !DILocation(line: 50, column: 16, scope: !6494)
!6502 = !DILocation(line: 50, column: 28, scope: !6494)
!6503 = !DILocation(line: 52, column: 22, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6494, file: !5934, line: 52, column: 6)
!6505 = !DILocation(line: 52, column: 14, scope: !6504)
!6506 = !DILocation(line: 52, column: 6, scope: !6494)
!6507 = !DILocation(line: 56, column: 22, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6494, file: !5934, line: 56, column: 6)
!6509 = !DILocation(line: 56, column: 17, scope: !6508)
!6510 = !DILocation(line: 56, column: 14, scope: !6508)
!6511 = !DILocation(line: 56, column: 6, scope: !6494)
!6512 = !DILocation(line: 58, column: 3, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6508, file: !5934, line: 56, column: 30)
!6514 = !DILocation(line: 59, column: 3, scope: !6513)
!6515 = !DILocation(line: 62, column: 7, scope: !6494)
!6516 = !DILocation(line: 62, column: 2, scope: !6494)
!6517 = !DILocation(line: 62, column: 31, scope: !6494)
!6518 = !DILocation(line: 63, column: 16, scope: !6494)
!6519 = !DILocation(line: 63, column: 14, scope: !6494)
!6520 = !DILocation(line: 64, column: 19, scope: !6494)
!6521 = !DILocation(line: 64, column: 2, scope: !6494)
!6522 = !DILocation(line: 66, column: 2, scope: !6494)
!6523 = !DILocation(line: 67, column: 1, scope: !6494)
!6524 = distinct !DISubprogram(name: "uart_irq_tx_ready", scope: !212, file: !212, line: 910, type: !2758, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6525)
!6525 = !{!6526, !6527}
!6526 = !DILocalVariable(name: "dev", arg: 1, scope: !6524, file: !212, line: 910, type: !2737)
!6527 = !DILocalVariable(name: "api", scope: !6524, file: !212, line: 913, type: !2729)
!6528 = !DILocation(line: 0, scope: !6524)
!6529 = !DILocation(line: 914, column: 40, scope: !6524)
!6530 = !DILocation(line: 916, column: 11, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6524, file: !212, line: 916, column: 6)
!6532 = !DILocation(line: 916, column: 24, scope: !6531)
!6533 = !DILocation(line: 916, column: 6, scope: !6524)
!6534 = !DILocation(line: 920, column: 9, scope: !6524)
!6535 = !DILocation(line: 920, column: 2, scope: !6524)
!6536 = !DILocation(line: 925, column: 1, scope: !6524)
!6537 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !6023, file: !6023, line: 217, type: !2788, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6538)
!6538 = !{!6539}
!6539 = !DILocalVariable(name: "dev", arg: 1, scope: !6537, file: !6023, line: 217, type: !2737)
!6540 = !DILocation(line: 0, scope: !6537)
!6541 = !DILocation(line: 226, column: 2, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6537, file: !6023, line: 226, column: 2)
!6543 = !{i64 2155346154}
!6544 = !DILocation(line: 227, column: 2, scope: !6537)
!6545 = !DILocation(line: 228, column: 1, scope: !6537)
!6546 = distinct !DISubprogram(name: "uart_fifo_fill", scope: !212, file: !212, line: 699, type: !2780, scopeLine: 702, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6547)
!6547 = !{!6548, !6549, !6550, !6551}
!6548 = !DILocalVariable(name: "dev", arg: 1, scope: !6546, file: !212, line: 699, type: !2737)
!6549 = !DILocalVariable(name: "tx_data", arg: 2, scope: !6546, file: !212, line: 700, type: !264)
!6550 = !DILocalVariable(name: "size", arg: 3, scope: !6546, file: !212, line: 701, type: !103)
!6551 = !DILocalVariable(name: "api", scope: !6546, file: !212, line: 704, type: !2729)
!6552 = !DILocation(line: 0, scope: !6546)
!6553 = !DILocation(line: 705, column: 40, scope: !6546)
!6554 = !DILocation(line: 707, column: 11, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6546, file: !212, line: 707, column: 6)
!6556 = !DILocation(line: 707, column: 21, scope: !6555)
!6557 = !DILocation(line: 707, column: 6, scope: !6546)
!6558 = !DILocation(line: 711, column: 9, scope: !6546)
!6559 = !DILocation(line: 711, column: 2, scope: !6546)
!6560 = !DILocation(line: 718, column: 1, scope: !6546)
!6561 = distinct !DISubprogram(name: "k_sem_give", scope: !3768, file: !3768, line: 1061, type: !6562, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6564)
!6562 = !DISubroutineType(types: !6563)
!6563 = !{null, !6136}
!6564 = !{!6565}
!6565 = !DILocalVariable(name: "sem", arg: 1, scope: !6561, file: !3768, line: 1061, type: !6136)
!6566 = !DILocation(line: 0, scope: !6561)
!6567 = !DILocation(line: 1070, column: 2, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6561, file: !3768, line: 1070, column: 2)
!6569 = !{i64 2155066057}
!6570 = !DILocation(line: 1071, column: 2, scope: !6561)
!6571 = !DILocation(line: 1072, column: 1, scope: !6561)
!6572 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !212, file: !212, line: 878, type: !2788, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6573)
!6573 = !{!6574, !6575}
!6574 = !DILocalVariable(name: "dev", arg: 1, scope: !6572, file: !212, line: 878, type: !2737)
!6575 = !DILocalVariable(name: "api", scope: !6572, file: !212, line: 881, type: !2729)
!6576 = !DILocation(line: 0, scope: !6572)
!6577 = !DILocation(line: 882, column: 40, scope: !6572)
!6578 = !DILocation(line: 884, column: 11, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6572, file: !212, line: 884, column: 6)
!6580 = !DILocation(line: 884, column: 26, scope: !6579)
!6581 = !DILocation(line: 884, column: 6, scope: !6572)
!6582 = !DILocation(line: 885, column: 3, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6579, file: !212, line: 884, column: 35)
!6584 = !DILocation(line: 886, column: 2, scope: !6583)
!6585 = !DILocation(line: 890, column: 1, scope: !6572)
!6586 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !212, file: !212, line: 1136, type: !2758, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6587)
!6587 = !{!6588, !6589}
!6588 = !DILocalVariable(name: "dev", arg: 1, scope: !6586, file: !212, line: 1136, type: !2737)
!6589 = !DILocalVariable(name: "api", scope: !6586, file: !212, line: 1139, type: !2729)
!6590 = !DILocation(line: 0, scope: !6586)
!6591 = !DILocation(line: 1140, column: 40, scope: !6586)
!6592 = !DILocation(line: 1142, column: 11, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6586, file: !212, line: 1142, column: 6)
!6594 = !DILocation(line: 1142, column: 22, scope: !6593)
!6595 = !DILocation(line: 1142, column: 6, scope: !6586)
!6596 = !DILocation(line: 1145, column: 9, scope: !6586)
!6597 = !DILocation(line: 1145, column: 2, scope: !6586)
!6598 = !DILocation(line: 1150, column: 1, scope: !6586)
!6599 = distinct !DISubprogram(name: "tty_set_rx_buf", scope: !5934, file: !5934, line: 265, type: !6600, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6602)
!6600 = !DISubroutineType(types: !6601)
!6601 = !{!103, !5939, !102, !356}
!6602 = !{!6603, !6604, !6605}
!6603 = !DILocalVariable(name: "tty", arg: 1, scope: !6599, file: !5934, line: 265, type: !5939)
!6604 = !DILocalVariable(name: "buf", arg: 2, scope: !6599, file: !5934, line: 265, type: !102)
!6605 = !DILocalVariable(name: "size", arg: 3, scope: !6599, file: !5934, line: 265, type: !356)
!6606 = !DILocation(line: 0, scope: !6599)
!6607 = !DILocation(line: 267, column: 27, scope: !6599)
!6608 = !DILocation(line: 267, column: 2, scope: !6599)
!6609 = !DILocation(line: 269, column: 7, scope: !6599)
!6610 = !DILocation(line: 269, column: 18, scope: !6599)
!6611 = !DILocation(line: 270, column: 7, scope: !6599)
!6612 = !DILocation(line: 270, column: 21, scope: !6599)
!6613 = !DILocation(line: 272, column: 11, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6599, file: !5934, line: 272, column: 6)
!6615 = !DILocation(line: 272, column: 6, scope: !6599)
!6616 = !DILocation(line: 273, column: 20, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6614, file: !5934, line: 272, column: 16)
!6618 = !DILocation(line: 273, column: 3, scope: !6617)
!6619 = !DILocation(line: 274, column: 27, scope: !6617)
!6620 = !DILocation(line: 274, column: 3, scope: !6617)
!6621 = !DILocation(line: 275, column: 2, scope: !6617)
!6622 = !DILocation(line: 277, column: 2, scope: !6599)
!6623 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !6023, file: !6023, line: 265, type: !2788, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6624)
!6624 = !{!6625}
!6625 = !DILocalVariable(name: "dev", arg: 1, scope: !6623, file: !6023, line: 265, type: !2737)
!6626 = !DILocation(line: 0, scope: !6623)
!6627 = !DILocation(line: 274, column: 2, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6623, file: !6023, line: 274, column: 2)
!6629 = !{i64 2155346290}
!6630 = !DILocation(line: 275, column: 2, scope: !6623)
!6631 = !DILocation(line: 276, column: 1, scope: !6623)
!6632 = distinct !DISubprogram(name: "k_sem_init", scope: !3768, file: !3768, line: 1026, type: !6633, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6635)
!6633 = !DISubroutineType(types: !6634)
!6634 = !{!103, !6136, !32, !32}
!6635 = !{!6636, !6637, !6638}
!6636 = !DILocalVariable(name: "sem", arg: 1, scope: !6632, file: !3768, line: 1026, type: !6136)
!6637 = !DILocalVariable(name: "initial_count", arg: 2, scope: !6632, file: !3768, line: 1026, type: !32)
!6638 = !DILocalVariable(name: "limit", arg: 3, scope: !6632, file: !3768, line: 1026, type: !32)
!6639 = !DILocation(line: 0, scope: !6632)
!6640 = !DILocation(line: 1036, column: 2, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6632, file: !3768, line: 1036, column: 2)
!6642 = !{i64 2155065921}
!6643 = !DILocation(line: 1037, column: 9, scope: !6632)
!6644 = !DILocation(line: 1037, column: 2, scope: !6632)
!6645 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !6023, file: !6023, line: 241, type: !2788, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6646)
!6646 = !{!6647}
!6647 = !DILocalVariable(name: "dev", arg: 1, scope: !6645, file: !6023, line: 241, type: !2737)
!6648 = !DILocation(line: 0, scope: !6645)
!6649 = !DILocation(line: 250, column: 2, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6645, file: !6023, line: 250, column: 2)
!6651 = !{i64 2155346222}
!6652 = !DILocation(line: 251, column: 2, scope: !6645)
!6653 = !DILocation(line: 252, column: 1, scope: !6645)
!6654 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !212, file: !212, line: 934, type: !2788, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6655)
!6655 = !{!6656, !6657}
!6656 = !DILocalVariable(name: "dev", arg: 1, scope: !6654, file: !212, line: 934, type: !2737)
!6657 = !DILocalVariable(name: "api", scope: !6654, file: !212, line: 937, type: !2729)
!6658 = !DILocation(line: 0, scope: !6654)
!6659 = !DILocation(line: 938, column: 40, scope: !6654)
!6660 = !DILocation(line: 940, column: 11, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6654, file: !212, line: 940, column: 6)
!6662 = !DILocation(line: 940, column: 25, scope: !6661)
!6663 = !DILocation(line: 940, column: 6, scope: !6654)
!6664 = !DILocation(line: 941, column: 3, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6661, file: !212, line: 940, column: 34)
!6666 = !DILocation(line: 942, column: 2, scope: !6665)
!6667 = !DILocation(line: 946, column: 1, scope: !6654)
!6668 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !212, file: !212, line: 955, type: !2788, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6669)
!6669 = !{!6670, !6671}
!6670 = !DILocalVariable(name: "dev", arg: 1, scope: !6668, file: !212, line: 955, type: !2737)
!6671 = !DILocalVariable(name: "api", scope: !6668, file: !212, line: 958, type: !2729)
!6672 = !DILocation(line: 0, scope: !6668)
!6673 = !DILocation(line: 959, column: 40, scope: !6668)
!6674 = !DILocation(line: 961, column: 11, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6668, file: !212, line: 961, column: 6)
!6676 = !DILocation(line: 961, column: 26, scope: !6675)
!6677 = !DILocation(line: 961, column: 6, scope: !6668)
!6678 = !DILocation(line: 962, column: 3, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6675, file: !212, line: 961, column: 35)
!6680 = !DILocation(line: 963, column: 2, scope: !6679)
!6681 = !DILocation(line: 967, column: 1, scope: !6668)
!6682 = distinct !DISubprogram(name: "tty_set_tx_buf", scope: !5934, file: !5934, line: 280, type: !6600, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6683)
!6683 = !{!6684, !6685, !6686}
!6684 = !DILocalVariable(name: "tty", arg: 1, scope: !6682, file: !5934, line: 280, type: !5939)
!6685 = !DILocalVariable(name: "buf", arg: 2, scope: !6682, file: !5934, line: 280, type: !102)
!6686 = !DILocalVariable(name: "size", arg: 3, scope: !6682, file: !5934, line: 280, type: !356)
!6687 = !DILocation(line: 0, scope: !6682)
!6688 = !DILocation(line: 282, column: 27, scope: !6682)
!6689 = !DILocation(line: 282, column: 2, scope: !6682)
!6690 = !DILocation(line: 284, column: 7, scope: !6682)
!6691 = !DILocation(line: 284, column: 18, scope: !6682)
!6692 = !DILocation(line: 285, column: 7, scope: !6682)
!6693 = !DILocation(line: 285, column: 21, scope: !6682)
!6694 = !DILocation(line: 287, column: 19, scope: !6682)
!6695 = !DILocation(line: 287, column: 32, scope: !6682)
!6696 = !DILocation(line: 287, column: 2, scope: !6682)
!6697 = !DILocation(line: 293, column: 2, scope: !6682)
!6698 = distinct !DISubprogram(name: "console_write", scope: !297, file: !297, line: 18, type: !6699, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6701)
!6699 = !DISubroutineType(types: !6700)
!6700 = !{!5937, !102, !13, !356}
!6701 = !{!6702, !6703, !6704}
!6702 = !DILocalVariable(name: "dummy", arg: 1, scope: !6698, file: !297, line: 18, type: !102)
!6703 = !DILocalVariable(name: "buf", arg: 2, scope: !6698, file: !297, line: 18, type: !13)
!6704 = !DILocalVariable(name: "size", arg: 3, scope: !6698, file: !297, line: 18, type: !356)
!6705 = !DILocation(line: 0, scope: !6698)
!6706 = !DILocation(line: 22, column: 9, scope: !6698)
!6707 = !DILocation(line: 22, column: 2, scope: !6698)
!6708 = distinct !DISubprogram(name: "console_read", scope: !297, file: !297, line: 25, type: !6709, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6711)
!6709 = !DISubroutineType(types: !6710)
!6710 = !{!5937, !102, !102, !356}
!6711 = !{!6712, !6713, !6714}
!6712 = !DILocalVariable(name: "dummy", arg: 1, scope: !6708, file: !297, line: 25, type: !102)
!6713 = !DILocalVariable(name: "buf", arg: 2, scope: !6708, file: !297, line: 25, type: !102)
!6714 = !DILocalVariable(name: "size", arg: 3, scope: !6708, file: !297, line: 25, type: !356)
!6715 = !DILocation(line: 0, scope: !6708)
!6716 = !DILocation(line: 29, column: 9, scope: !6708)
!6717 = !DILocation(line: 29, column: 2, scope: !6708)
!6718 = distinct !DISubprogram(name: "console_putchar", scope: !297, file: !297, line: 32, type: !1103, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6719)
!6719 = !{!6720}
!6720 = !DILocalVariable(name: "c", arg: 1, scope: !6718, file: !297, line: 32, type: !108)
!6721 = !DILocation(line: 0, scope: !6718)
!6722 = !DILocation(line: 34, column: 9, scope: !6718)
!6723 = !DILocation(line: 34, column: 2, scope: !6718)
!6724 = distinct !DISubprogram(name: "console_getchar", scope: !297, file: !297, line: 37, type: !6725, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6727)
!6725 = !DISubroutineType(types: !6726)
!6726 = !{!103}
!6727 = !{!6728, !6729}
!6728 = !DILocalVariable(name: "c", scope: !6724, file: !297, line: 39, type: !163)
!6729 = !DILocalVariable(name: "res", scope: !6724, file: !297, line: 40, type: !103)
!6730 = !DILocation(line: 39, column: 2, scope: !6724)
!6731 = !DILocation(line: 0, scope: !6724)
!6732 = !DILocation(line: 42, column: 8, scope: !6724)
!6733 = !DILocation(line: 43, column: 10, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6724, file: !297, line: 43, column: 6)
!6735 = !DILocation(line: 43, column: 6, scope: !6724)
!6736 = !DILocation(line: 48, column: 1, scope: !6724)
!6737 = distinct !DISubprogram(name: "console_init", scope: !297, file: !297, line: 50, type: !6725, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6738)
!6738 = !{!6739, !6740, !6741}
!6739 = !DILocalVariable(name: "uart_dev", scope: !6737, file: !297, line: 52, type: !218)
!6740 = !DILocalVariable(name: "ret", scope: !6737, file: !297, line: 53, type: !103)
!6741 = !DILocalVariable(name: "api", scope: !6742, file: !297, line: 68, type: !209)
!6742 = distinct !DILexicalBlock(scope: !6743, file: !297, line: 67, column: 71)
!6743 = distinct !DILexicalBlock(scope: !6737, file: !297, line: 67, column: 6)
!6744 = !DILocation(line: 0, scope: !6737)
!6745 = !DILocation(line: 56, column: 7, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6737, file: !297, line: 56, column: 6)
!6747 = !DILocation(line: 56, column: 6, scope: !6737)
!6748 = !DILocation(line: 60, column: 8, scope: !6737)
!6749 = !DILocation(line: 62, column: 6, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6737, file: !297, line: 62, column: 6)
!6751 = !DILocation(line: 62, column: 6, scope: !6737)
!6752 = !DILocation(line: 69, column: 46, scope: !6742)
!6753 = !DILocation(line: 0, scope: !6742)
!6754 = !DILocation(line: 70, column: 13, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6742, file: !297, line: 70, column: 7)
!6756 = !DILocation(line: 70, column: 8, scope: !6755)
!6757 = !DILocation(line: 75, column: 2, scope: !6737)
!6758 = !DILocation(line: 76, column: 2, scope: !6737)
!6759 = !DILocation(line: 78, column: 2, scope: !6737)
!6760 = !DILocation(line: 79, column: 1, scope: !6737)
!6761 = distinct !DISubprogram(name: "device_is_ready", scope: !6762, file: !6762, line: 47, type: !6763, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6765)
!6762 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!6763 = !DISubroutineType(types: !6764)
!6764 = !{!166, !218}
!6765 = !{!6766}
!6766 = !DILocalVariable(name: "dev", arg: 1, scope: !6761, file: !6762, line: 47, type: !218)
!6767 = !DILocation(line: 0, scope: !6761)
!6768 = !DILocation(line: 55, column: 2, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6761, file: !6762, line: 55, column: 2)
!6770 = !{i64 2155258503}
!6771 = !DILocation(line: 56, column: 9, scope: !6761)
!6772 = !DILocation(line: 56, column: 2, scope: !6761)
!6773 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !6763, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6774)
!6774 = !{!6775}
!6775 = !DILocalVariable(name: "dev", arg: 1, scope: !6773, file: !152, line: 730, type: !218)
!6776 = !DILocation(line: 0, scope: !6773)
!6777 = !DILocation(line: 732, column: 9, scope: !6773)
!6778 = !DILocation(line: 732, column: 2, scope: !6773)
!6779 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6780, file: !6780, line: 57, type: !6781, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !6827)
!6780 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6781 = !DISubroutineType(types: !6782)
!6782 = !{null, !32, !6783}
!6783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6784, size: 32)
!6784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6785)
!6785 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2928, line: 141, baseType: !6786)
!6786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2928, line: 97, size: 256, elements: !6787)
!6787 = !{!6788}
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6786, file: !2928, line: 107, baseType: !6789, size: 256)
!6789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2928, line: 98, size: 256, elements: !6790)
!6790 = !{!6791, !6796, !6801, !6806, !6811, !6816, !6821, !6826}
!6791 = !DIDerivedType(tag: DW_TAG_member, scope: !6789, file: !2928, line: 99, baseType: !6792, size: 32)
!6792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6789, file: !2928, line: 99, size: 32, elements: !6793)
!6793 = !{!6794, !6795}
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6792, file: !2928, line: 99, baseType: !132, size: 32)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6792, file: !2928, line: 99, baseType: !132, size: 32)
!6796 = !DIDerivedType(tag: DW_TAG_member, scope: !6789, file: !2928, line: 100, baseType: !6797, size: 32, offset: 32)
!6797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6789, file: !2928, line: 100, size: 32, elements: !6798)
!6798 = !{!6799, !6800}
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6797, file: !2928, line: 100, baseType: !132, size: 32)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6797, file: !2928, line: 100, baseType: !132, size: 32)
!6801 = !DIDerivedType(tag: DW_TAG_member, scope: !6789, file: !2928, line: 101, baseType: !6802, size: 32, offset: 64)
!6802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6789, file: !2928, line: 101, size: 32, elements: !6803)
!6803 = !{!6804, !6805}
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6802, file: !2928, line: 101, baseType: !132, size: 32)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6802, file: !2928, line: 101, baseType: !132, size: 32)
!6806 = !DIDerivedType(tag: DW_TAG_member, scope: !6789, file: !2928, line: 102, baseType: !6807, size: 32, offset: 96)
!6807 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6789, file: !2928, line: 102, size: 32, elements: !6808)
!6808 = !{!6809, !6810}
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6807, file: !2928, line: 102, baseType: !132, size: 32)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6807, file: !2928, line: 102, baseType: !132, size: 32)
!6811 = !DIDerivedType(tag: DW_TAG_member, scope: !6789, file: !2928, line: 103, baseType: !6812, size: 32, offset: 128)
!6812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6789, file: !2928, line: 103, size: 32, elements: !6813)
!6813 = !{!6814, !6815}
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6812, file: !2928, line: 103, baseType: !132, size: 32)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6812, file: !2928, line: 103, baseType: !132, size: 32)
!6816 = !DIDerivedType(tag: DW_TAG_member, scope: !6789, file: !2928, line: 104, baseType: !6817, size: 32, offset: 160)
!6817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6789, file: !2928, line: 104, size: 32, elements: !6818)
!6818 = !{!6819, !6820}
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6817, file: !2928, line: 104, baseType: !132, size: 32)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6817, file: !2928, line: 104, baseType: !132, size: 32)
!6821 = !DIDerivedType(tag: DW_TAG_member, scope: !6789, file: !2928, line: 105, baseType: !6822, size: 32, offset: 192)
!6822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6789, file: !2928, line: 105, size: 32, elements: !6823)
!6823 = !{!6824, !6825}
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6822, file: !2928, line: 105, baseType: !132, size: 32)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6822, file: !2928, line: 105, baseType: !132, size: 32)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6789, file: !2928, line: 106, baseType: !132, size: 32, offset: 224)
!6827 = !{!6828, !6829}
!6828 = !DILocalVariable(name: "reason", arg: 1, scope: !6779, file: !6780, line: 57, type: !32)
!6829 = !DILocalVariable(name: "esf", arg: 2, scope: !6779, file: !6780, line: 57, type: !6783)
!6830 = !DILocation(line: 0, scope: !6779)
!6831 = !DILocation(line: 63, column: 2, scope: !6779)
!6832 = !DILocation(line: 64, column: 1, scope: !6779)
!6833 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6780, file: !6780, line: 82, type: !6834, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !6849)
!6834 = !DISubroutineType(types: !6835)
!6835 = !{null, !6783, !6836}
!6836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6837, size: 32)
!6837 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !436, line: 37, baseType: !6838)
!6838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !6839)
!6839 = !{!6840, !6841, !6842, !6843, !6844, !6845, !6846, !6847, !6848}
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6838, file: !436, line: 26, baseType: !132, size: 32)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6838, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6838, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6838, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6838, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6838, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6838, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6838, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6838, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!6849 = !{!6850, !6851, !6852}
!6850 = !DILocalVariable(name: "esf", arg: 1, scope: !6833, file: !6780, line: 82, type: !6783)
!6851 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6833, file: !6780, line: 82, type: !6836)
!6852 = !DILocalVariable(name: "reason", scope: !6833, file: !6780, line: 88, type: !32)
!6853 = !DILocation(line: 0, scope: !6833)
!6854 = !DILocation(line: 88, column: 35, scope: !6833)
!6855 = !DILocation(line: 108, column: 2, scope: !6833)
!6856 = !DILocation(line: 131, column: 1, scope: !6833)
!6857 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6780, file: !6780, line: 133, type: !6858, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !6860)
!6858 = !DISubroutineType(types: !6859)
!6859 = !{null, !102}
!6860 = !{!6861, !6862, !6863}
!6861 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6857, file: !6780, line: 133, type: !102)
!6862 = !DILocalVariable(name: "ssf_contents", scope: !6857, file: !6780, line: 135, type: !873)
!6863 = !DILocalVariable(name: "oops_esf", scope: !6857, file: !6780, line: 136, type: !6785)
!6864 = !DILocation(line: 0, scope: !6857)
!6865 = !DILocation(line: 136, column: 2, scope: !6857)
!6866 = !DILocation(line: 136, column: 15, scope: !6857)
!6867 = !DILocation(line: 139, column: 22, scope: !6857)
!6868 = !DILocation(line: 139, column: 17, scope: !6857)
!6869 = !DILocation(line: 139, column: 20, scope: !6857)
!6870 = !DILocation(line: 141, column: 2, scope: !6857)
!6871 = !DILocation(line: 142, column: 2, scope: !6857)
!6872 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6873, file: !6873, line: 40, type: !5912, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !6874)
!6873 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6874 = !{!6875}
!6875 = !DILocalVariable(name: "irq", arg: 1, scope: !6872, file: !6873, line: 40, type: !32)
!6876 = !DILocation(line: 0, scope: !6872)
!6877 = !DILocation(line: 42, column: 2, scope: !6872)
!6878 = !DILocation(line: 43, column: 1, scope: !6872)
!6879 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !507, file: !507, line: 1684, type: !6880, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !6882)
!6880 = !DISubroutineType(types: !6881)
!6881 = !{null, !771}
!6882 = !{!6883}
!6883 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6879, file: !507, line: 1684, type: !771)
!6884 = !DILocation(line: 0, scope: !6879)
!6885 = !DILocation(line: 1686, column: 23, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6879, file: !507, line: 1686, column: 7)
!6887 = !DILocation(line: 1686, column: 7, scope: !6879)
!6888 = !DILocation(line: 1688, column: 5, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6886, file: !507, line: 1687, column: 3)
!6890 = !{i64 2151254433}
!6891 = !DILocation(line: 1689, column: 81, scope: !6889)
!6892 = !DILocation(line: 1689, column: 60, scope: !6889)
!6893 = !DILocation(line: 1689, column: 34, scope: !6889)
!6894 = !DILocation(line: 1689, column: 5, scope: !6889)
!6895 = !DILocation(line: 1689, column: 43, scope: !6889)
!6896 = !DILocation(line: 1690, column: 5, scope: !6889)
!6897 = !{i64 2151254547}
!6898 = !DILocation(line: 1691, column: 3, scope: !6889)
!6899 = !DILocation(line: 1692, column: 1, scope: !6879)
!6900 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6873, file: !6873, line: 45, type: !5912, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !6901)
!6901 = !{!6902}
!6902 = !DILocalVariable(name: "irq", arg: 1, scope: !6900, file: !6873, line: 45, type: !32)
!6903 = !DILocation(line: 0, scope: !6900)
!6904 = !DILocation(line: 47, column: 2, scope: !6900)
!6905 = !DILocation(line: 48, column: 1, scope: !6900)
!6906 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !507, file: !507, line: 1722, type: !6880, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !6907)
!6907 = !{!6908}
!6908 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6906, file: !507, line: 1722, type: !771)
!6909 = !DILocation(line: 0, scope: !6906)
!6910 = !DILocation(line: 1724, column: 23, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6906, file: !507, line: 1724, column: 7)
!6912 = !DILocation(line: 1724, column: 7, scope: !6906)
!6913 = !DILocation(line: 1726, column: 81, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6911, file: !507, line: 1725, column: 3)
!6915 = !DILocation(line: 1726, column: 60, scope: !6914)
!6916 = !DILocation(line: 1726, column: 34, scope: !6914)
!6917 = !DILocation(line: 1726, column: 5, scope: !6914)
!6918 = !DILocation(line: 1726, column: 43, scope: !6914)
!6919 = !DILocation(line: 271, column: 3, scope: !6920, inlinedAt: !6922)
!6920 = distinct !DISubprogram(name: "__DSB", scope: !6921, file: !6921, line: 269, type: !3328, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !473)
!6921 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6922 = distinct !DILocation(line: 1727, column: 5, scope: !6914)
!6923 = !{i64 3708816}
!6924 = !DILocation(line: 260, column: 3, scope: !6925, inlinedAt: !6926)
!6925 = distinct !DISubprogram(name: "__ISB", scope: !6921, file: !6921, line: 258, type: !3328, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !473)
!6926 = distinct !DILocation(line: 1728, column: 5, scope: !6914)
!6927 = !{i64 3708533}
!6928 = !DILocation(line: 1729, column: 3, scope: !6914)
!6929 = !DILocation(line: 1730, column: 1, scope: !6906)
!6930 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6873, file: !6873, line: 50, type: !6931, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !6933)
!6931 = !DISubroutineType(types: !6932)
!6932 = !{!103, !32}
!6933 = !{!6934}
!6934 = !DILocalVariable(name: "irq", arg: 1, scope: !6930, file: !6873, line: 50, type: !32)
!6935 = !DILocation(line: 0, scope: !6930)
!6936 = !DILocation(line: 52, column: 20, scope: !6930)
!6937 = !DILocation(line: 52, column: 9, scope: !6930)
!6938 = !DILocation(line: 52, column: 41, scope: !6930)
!6939 = !DILocation(line: 52, column: 39, scope: !6930)
!6940 = !DILocation(line: 52, column: 2, scope: !6930)
!6941 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6873, file: !6873, line: 64, type: !6942, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !6944)
!6942 = !DISubroutineType(types: !6943)
!6943 = !{null, !32, !32, !132}
!6944 = !{!6945, !6946, !6947}
!6945 = !DILocalVariable(name: "irq", arg: 1, scope: !6941, file: !6873, line: 64, type: !32)
!6946 = !DILocalVariable(name: "prio", arg: 2, scope: !6941, file: !6873, line: 64, type: !32)
!6947 = !DILocalVariable(name: "flags", arg: 3, scope: !6941, file: !6873, line: 64, type: !132)
!6948 = !DILocation(line: 0, scope: !6941)
!6949 = !DILocation(line: 83, column: 8, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !6873, line: 82, column: 9)
!6951 = distinct !DILexicalBlock(scope: !6941, file: !6873, line: 76, column: 6)
!6952 = !DILocation(line: 95, column: 2, scope: !6941)
!6953 = !DILocation(line: 96, column: 1, scope: !6941)
!6954 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6955, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !6957)
!6955 = !DISubroutineType(types: !6956)
!6956 = !{null, !771, !132}
!6957 = !{!6958, !6959}
!6958 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6954, file: !507, line: 1814, type: !771)
!6959 = !DILocalVariable(name: "priority", arg: 2, scope: !6954, file: !507, line: 1814, type: !132)
!6960 = !DILocation(line: 0, scope: !6954)
!6961 = !DILocation(line: 0, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6954, file: !507, line: 1816, column: 7)
!6963 = !DILocation(line: 1816, column: 7, scope: !6954)
!6964 = !DILocation(line: 1824, column: 1, scope: !6954)
!6965 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6873, file: !6873, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !6966)
!6966 = !{!6967}
!6967 = !DILocalVariable(name: "unused", arg: 1, scope: !6965, file: !6873, line: 155, type: !13)
!6968 = !DILocation(line: 0, scope: !6965)
!6969 = !DILocation(line: 159, column: 2, scope: !6965)
!6970 = !DILocation(line: 160, column: 1, scope: !6965)
!6971 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6972, file: !6972, line: 87, type: !3328, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !473)
!6972 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6973 = !DILocation(line: 89, column: 2, scope: !6971)
!6974 = !DILocation(line: 90, column: 2, scope: !6971)
!6975 = !DILocation(line: 91, column: 1, scope: !6971)
!6976 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6972, file: !6972, line: 23, type: !3328, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!6977 = !DISubprogram(name: "z_arm_int_exit", scope: !6978, file: !6978, line: 153, type: !3328, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!6978 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6979 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6980, file: !6980, line: 256, type: !3328, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !473)
!6980 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6981 = !DILocation(line: 258, column: 2, scope: !6979)
!6982 = !DILocation(line: 260, column: 2, scope: !6979)
!6983 = !DILocation(line: 262, column: 2, scope: !6979)
!6984 = !DILocation(line: 263, column: 2, scope: !6979)
!6985 = !DILocation(line: 267, column: 2, scope: !6979)
!6986 = !DILocation(line: 268, column: 2, scope: !6979)
!6987 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6980, file: !6980, line: 53, type: !3328, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !473)
!6988 = !DILocation(line: 55, column: 12, scope: !6987)
!6989 = !DILocation(line: 271, column: 3, scope: !6990, inlinedAt: !6991)
!6990 = distinct !DISubprogram(name: "__DSB", scope: !6921, file: !6921, line: 269, type: !3328, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !473)
!6991 = distinct !DILocation(line: 56, column: 2, scope: !6987)
!6992 = !{i64 3707487}
!6993 = !DILocation(line: 260, column: 3, scope: !6994, inlinedAt: !6995)
!6994 = distinct !DISubprogram(name: "__ISB", scope: !6921, file: !6921, line: 258, type: !3328, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !473)
!6995 = distinct !DILocation(line: 57, column: 2, scope: !6987)
!6996 = !{i64 3707204}
!6997 = !DILocation(line: 58, column: 1, scope: !6987)
!6998 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6980, file: !6980, line: 96, type: !3328, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !473)
!6999 = !DILocation(line: 103, column: 13, scope: !6998)
!7000 = !DILocation(line: 975, column: 3, scope: !7001, inlinedAt: !7006)
!7001 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6921, file: !6921, line: 971, type: !7002, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7004)
!7002 = !DISubroutineType(types: !7003)
!7003 = !{!132}
!7004 = !{!7005}
!7005 = !DILocalVariable(name: "result", scope: !7001, file: !6921, line: 973, type: !132)
!7006 = distinct !DILocation(line: 189, column: 16, scope: !6998)
!7007 = !{i64 3728317}
!7008 = !DILocation(line: 0, scope: !7001, inlinedAt: !7006)
!7009 = !DILocation(line: 189, column: 32, scope: !6998)
!7010 = !DILocalVariable(name: "control", arg: 1, scope: !7011, file: !6921, line: 1001, type: !132)
!7011 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6921, file: !6921, line: 1001, type: !7012, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7014)
!7012 = !DISubroutineType(types: !7013)
!7013 = !{null, !132}
!7014 = !{!7010}
!7015 = !DILocation(line: 0, scope: !7011, inlinedAt: !7016)
!7016 = distinct !DILocation(line: 189, column: 2, scope: !6998)
!7017 = !DILocation(line: 1003, column: 3, scope: !7011, inlinedAt: !7016)
!7018 = !{i64 3729037}
!7019 = !DILocation(line: 260, column: 3, scope: !6994, inlinedAt: !7020)
!7020 = distinct !DILocation(line: 1004, column: 3, scope: !7011, inlinedAt: !7016)
!7021 = !DILocation(line: 191, column: 1, scope: !6998)
!7022 = distinct !DISubprogram(name: "arch_swap", scope: !7023, file: !7023, line: 33, type: !6931, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7024)
!7023 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7024 = !{!7025}
!7025 = !DILocalVariable(name: "key", arg: 1, scope: !7022, file: !7023, line: 33, type: !32)
!7026 = !DILocation(line: 0, scope: !7022)
!7027 = !DILocation(line: 36, column: 2, scope: !7022)
!7028 = !DILocation(line: 36, column: 17, scope: !7022)
!7029 = !DILocation(line: 36, column: 25, scope: !7022)
!7030 = !DILocation(line: 37, column: 37, scope: !7022)
!7031 = !DILocation(line: 37, column: 17, scope: !7022)
!7032 = !DILocation(line: 37, column: 35, scope: !7022)
!7033 = !DILocation(line: 41, column: 12, scope: !7022)
!7034 = !DILocalVariable(name: "key", arg: 1, scope: !7035, file: !5901, line: 84, type: !32)
!7035 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5901, file: !5901, line: 84, type: !5912, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7036)
!7036 = !{!7034}
!7037 = !DILocation(line: 0, scope: !7035, inlinedAt: !7038)
!7038 = distinct !DILocation(line: 44, column: 2, scope: !7022)
!7039 = !DILocation(line: 95, column: 2, scope: !7035, inlinedAt: !7038)
!7040 = !{i64 2277988}
!7041 = !DILocation(line: 53, column: 9, scope: !7022)
!7042 = !DILocation(line: 53, column: 24, scope: !7022)
!7043 = !DILocation(line: 53, column: 2, scope: !7022)
!7044 = distinct !DISubprogram(name: "arch_new_thread", scope: !7045, file: !7045, line: 56, type: !7046, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7153)
!7045 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7046 = !DISubroutineType(types: !7047)
!7047 = !{null, !7048, !7148, !1097, !3646, !102, !102, !102}
!7048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7049, size: 32)
!7049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !7050)
!7050 = !{!7051, !7109, !7121, !7122, !7123, !7124, !7130, !7143}
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7049, file: !367, line: 247, baseType: !7052, size: 384)
!7052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !7053)
!7053 = !{!7054, !7078, !7085, !7086, !7087, !7096, !7097, !7098}
!7054 = !DIDerivedType(tag: DW_TAG_member, scope: !7052, file: !367, line: 60, baseType: !7055, size: 64)
!7055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7052, file: !367, line: 60, size: 64, elements: !7056)
!7056 = !{!7057, !7072}
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7055, file: !367, line: 61, baseType: !7058, size: 64)
!7058 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !7059)
!7059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !7060)
!7060 = !{!7061, !7067}
!7061 = !DIDerivedType(tag: DW_TAG_member, scope: !7059, file: !321, line: 38, baseType: !7062, size: 32)
!7062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7059, file: !321, line: 38, size: 32, elements: !7063)
!7063 = !{!7064, !7066}
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7062, file: !321, line: 39, baseType: !7065, size: 32)
!7065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7059, size: 32)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7062, file: !321, line: 40, baseType: !7065, size: 32)
!7067 = !DIDerivedType(tag: DW_TAG_member, scope: !7059, file: !321, line: 42, baseType: !7068, size: 32, offset: 32)
!7068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7059, file: !321, line: 42, size: 32, elements: !7069)
!7069 = !{!7070, !7071}
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7068, file: !321, line: 43, baseType: !7065, size: 32)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7068, file: !321, line: 44, baseType: !7065, size: 32)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7055, file: !367, line: 62, baseType: !7073, size: 64)
!7073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !7074)
!7074 = !{!7075}
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7073, file: !392, line: 50, baseType: !7076, size: 64)
!7076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7077, size: 64, elements: !397)
!7077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7073, size: 32)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7052, file: !367, line: 68, baseType: !7079, size: 32, offset: 64)
!7079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7080, size: 32)
!7080 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !7081)
!7081 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !7082)
!7082 = !{!7083}
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7081, file: !316, line: 232, baseType: !7084, size: 64)
!7084 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !7059)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7052, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7052, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!7087 = !DIDerivedType(tag: DW_TAG_member, scope: !7052, file: !367, line: 90, baseType: !7088, size: 16, offset: 112)
!7088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7052, file: !367, line: 90, size: 16, elements: !7089)
!7089 = !{!7090, !7095}
!7090 = !DIDerivedType(tag: DW_TAG_member, scope: !7088, file: !367, line: 91, baseType: !7091, size: 16)
!7091 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7088, file: !367, line: 91, size: 16, elements: !7092)
!7092 = !{!7093, !7094}
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7091, file: !367, line: 96, baseType: !415, size: 8)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7091, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7088, file: !367, line: 100, baseType: !340, size: 16)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7052, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7052, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7052, file: !367, line: 131, baseType: !7099, size: 192, offset: 192)
!7099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !7100)
!7100 = !{!7101, !7102, !7108}
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7099, file: !316, line: 245, baseType: !7058, size: 64)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7099, file: !316, line: 246, baseType: !7103, size: 32, offset: 64)
!7103 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !7104)
!7104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7105, size: 32)
!7105 = !DISubroutineType(types: !7106)
!7106 = !{null, !7107}
!7107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7099, size: 32)
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7099, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7049, file: !367, line: 250, baseType: !7110, size: 288, offset: 384)
!7110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !7111)
!7111 = !{!7112, !7113, !7114, !7115, !7116, !7117, !7118, !7119, !7120}
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7110, file: !436, line: 26, baseType: !132, size: 32)
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7110, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7110, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7110, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7110, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7110, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7110, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7110, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7110, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7049, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7049, file: !367, line: 256, baseType: !7080, size: 64, offset: 704)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7049, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7049, file: !367, line: 300, baseType: !7125, size: 96, offset: 800)
!7125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !7126)
!7126 = !{!7127, !7128, !7129}
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7125, file: !367, line: 153, baseType: !22, size: 32)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7125, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7125, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7049, file: !367, line: 325, baseType: !7131, size: 32, offset: 896)
!7131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7132, size: 32)
!7132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !7133)
!7133 = !{!7134, !7140, !7141}
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7132, file: !312, line: 5074, baseType: !7135, size: 96)
!7135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !7136)
!7136 = !{!7137, !7138, !7139}
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7135, file: !462, line: 57, baseType: !465, size: 32)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7135, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7135, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7132, file: !312, line: 5075, baseType: !7080, size: 64, offset: 96)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7132, file: !312, line: 5076, baseType: !7142, offset: 160)
!7142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7049, file: !367, line: 343, baseType: !7144, size: 64, offset: 928)
!7144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !7145)
!7145 = !{!7146, !7147}
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7144, file: !436, line: 63, baseType: !132, size: 32)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7144, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!7148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7149, size: 32)
!7149 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3647, line: 44, baseType: !7150)
!7150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2270, line: 47, size: 8, elements: !7151)
!7151 = !{!7152}
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7150, file: !2270, line: 48, baseType: !108, size: 8)
!7153 = !{!7154, !7155, !7156, !7157, !7158, !7159, !7160, !7161}
!7154 = !DILocalVariable(name: "thread", arg: 1, scope: !7044, file: !7045, line: 56, type: !7048)
!7155 = !DILocalVariable(name: "stack", arg: 2, scope: !7044, file: !7045, line: 56, type: !7148)
!7156 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7044, file: !7045, line: 57, type: !1097)
!7157 = !DILocalVariable(name: "entry", arg: 4, scope: !7044, file: !7045, line: 57, type: !3646)
!7158 = !DILocalVariable(name: "p1", arg: 5, scope: !7044, file: !7045, line: 58, type: !102)
!7159 = !DILocalVariable(name: "p2", arg: 6, scope: !7044, file: !7045, line: 58, type: !102)
!7160 = !DILocalVariable(name: "p3", arg: 7, scope: !7044, file: !7045, line: 58, type: !102)
!7161 = !DILocalVariable(name: "iframe", scope: !7044, file: !7045, line: 60, type: !2926)
!7162 = !DILocation(line: 0, scope: !7044)
!7163 = !DILocation(line: 85, column: 11, scope: !7044)
!7164 = !DILocation(line: 93, column: 10, scope: !7044)
!7165 = !DILocation(line: 98, column: 13, scope: !7044)
!7166 = !DILocation(line: 100, column: 15, scope: !7044)
!7167 = !DILocation(line: 100, column: 10, scope: !7044)
!7168 = !DILocation(line: 100, column: 13, scope: !7044)
!7169 = !DILocation(line: 101, column: 15, scope: !7044)
!7170 = !DILocation(line: 101, column: 10, scope: !7044)
!7171 = !DILocation(line: 101, column: 13, scope: !7044)
!7172 = !DILocation(line: 102, column: 15, scope: !7044)
!7173 = !DILocation(line: 102, column: 10, scope: !7044)
!7174 = !DILocation(line: 102, column: 13, scope: !7044)
!7175 = !DILocation(line: 103, column: 15, scope: !7044)
!7176 = !DILocation(line: 103, column: 10, scope: !7044)
!7177 = !DILocation(line: 103, column: 13, scope: !7044)
!7178 = !DILocation(line: 106, column: 10, scope: !7044)
!7179 = !DILocation(line: 106, column: 15, scope: !7044)
!7180 = !DILocation(line: 122, column: 29, scope: !7044)
!7181 = !DILocation(line: 122, column: 23, scope: !7044)
!7182 = !DILocation(line: 122, column: 27, scope: !7044)
!7183 = !DILocation(line: 123, column: 15, scope: !7044)
!7184 = !DILocation(line: 123, column: 23, scope: !7044)
!7185 = !DILocation(line: 143, column: 1, scope: !7044)
!7186 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7045, file: !7045, line: 385, type: !7187, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7190)
!7187 = !DISubroutineType(types: !7188)
!7188 = !{!132, !7189, !7189}
!7189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!7190 = !{!7191, !7192, !7193, !7196}
!7191 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7186, file: !7045, line: 385, type: !7189)
!7192 = !DILocalVariable(name: "psp", arg: 2, scope: !7186, file: !7045, line: 385, type: !7189)
!7193 = !DILocalVariable(name: "thread", scope: !7186, file: !7045, line: 388, type: !7194)
!7194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7195, size: 32)
!7195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7049)
!7196 = !DILocalVariable(name: "guard_len", scope: !7186, file: !7045, line: 405, type: !132)
!7197 = !DILocation(line: 0, scope: !7186)
!7198 = !DILocation(line: 388, column: 34, scope: !7186)
!7199 = !DILocation(line: 390, column: 13, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7186, file: !7045, line: 390, column: 6)
!7201 = !DILocation(line: 390, column: 6, scope: !7186)
!7202 = !DILocation(line: 438, column: 6, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7186, file: !7045, line: 438, column: 6)
!7204 = !DILocation(line: 438, column: 6, scope: !7186)
!7205 = !DILocation(line: 442, column: 3, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7203, file: !7045, line: 440, column: 22)
!7207 = !DILocation(line: 455, column: 1, scope: !7186)
!7208 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7045, file: !7045, line: 530, type: !7209, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7211)
!7209 = !DISubroutineType(types: !7210)
!7210 = !{null, !7048, !1097, !3646}
!7211 = !{!7212, !7213, !7214}
!7212 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7208, file: !7045, line: 530, type: !7048)
!7213 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7208, file: !7045, line: 530, type: !1097)
!7214 = !DILocalVariable(name: "_main", arg: 3, scope: !7208, file: !7045, line: 531, type: !3646)
!7215 = !DILocation(line: 0, scope: !7208)
!7216 = !DILocation(line: 535, column: 11, scope: !7208)
!7217 = !DILocation(line: 560, column: 2, scope: !7208)
!7218 = !DILocation(line: 576, column: 2, scope: !7208)
!7219 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7220 = !DILocation(line: 603, column: 2, scope: !7208)
!7221 = distinct !DISubprogram(name: "z_arm_fault", scope: !7222, file: !7222, line: 1036, type: !7223, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !7238)
!7222 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7223 = !DISubroutineType(types: !7224)
!7224 = !{null, !132, !132, !132, !7225}
!7225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7226, size: 32)
!7226 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !436, line: 37, baseType: !7227)
!7227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !7228)
!7228 = !{!7229, !7230, !7231, !7232, !7233, !7234, !7235, !7236, !7237}
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7227, file: !436, line: 26, baseType: !132, size: 32)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7227, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7227, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7227, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7227, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7227, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7227, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7227, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7227, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!7238 = !{!7239, !7240, !7241, !7242, !7243, !7244, !7245, !7246, !7247, !7248}
!7239 = !DILocalVariable(name: "msp", arg: 1, scope: !7221, file: !7222, line: 1036, type: !132)
!7240 = !DILocalVariable(name: "psp", arg: 2, scope: !7221, file: !7222, line: 1036, type: !132)
!7241 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7221, file: !7222, line: 1036, type: !132)
!7242 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7221, file: !7222, line: 1037, type: !7225)
!7243 = !DILocalVariable(name: "reason", scope: !7221, file: !7222, line: 1039, type: !132)
!7244 = !DILocalVariable(name: "fault", scope: !7221, file: !7222, line: 1040, type: !103)
!7245 = !DILocalVariable(name: "recoverable", scope: !7221, file: !7222, line: 1041, type: !166)
!7246 = !DILocalVariable(name: "nested_exc", scope: !7221, file: !7222, line: 1041, type: !166)
!7247 = !DILocalVariable(name: "esf", scope: !7221, file: !7222, line: 1042, type: !2994)
!7248 = !DILocalVariable(name: "esf_copy", scope: !7221, file: !7222, line: 1047, type: !2995)
!7249 = !DILocation(line: 0, scope: !7221)
!7250 = !DILocation(line: 1040, column: 19, scope: !7221)
!7251 = !DILocation(line: 1040, column: 24, scope: !7221)
!7252 = !DILocation(line: 1041, column: 2, scope: !7221)
!7253 = !DILocation(line: 1047, column: 2, scope: !7221)
!7254 = !DILocation(line: 1047, column: 15, scope: !7221)
!7255 = !DILocalVariable(name: "key", arg: 1, scope: !7256, file: !5901, line: 84, type: !32)
!7256 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5901, file: !5901, line: 84, type: !5912, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !7257)
!7257 = !{!7255}
!7258 = !DILocation(line: 0, scope: !7256, inlinedAt: !7259)
!7259 = distinct !DILocation(line: 1050, column: 2, scope: !7221)
!7260 = !DILocation(line: 95, column: 2, scope: !7256, inlinedAt: !7259)
!7261 = !{i64 2311232}
!7262 = !DILocation(line: 1055, column: 9, scope: !7221)
!7263 = !DILocation(line: 1063, column: 11, scope: !7221)
!7264 = !DILocation(line: 1064, column: 6, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7221, file: !7222, line: 1064, column: 6)
!7266 = !{i8 0, i8 2}
!7267 = !DILocation(line: 1064, column: 6, scope: !7221)
!7268 = !DILocation(line: 1070, column: 20, scope: !7221)
!7269 = !DILocation(line: 1070, column: 2, scope: !7221)
!7270 = !DILocation(line: 1089, column: 6, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7221, file: !7222, line: 1089, column: 6)
!7272 = !DILocation(line: 0, scope: !7271)
!7273 = !DILocation(line: 1089, column: 6, scope: !7221)
!7274 = !DILocation(line: 1090, column: 28, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7276, file: !7222, line: 1090, column: 7)
!7276 = distinct !DILexicalBlock(scope: !7271, file: !7222, line: 1089, column: 18)
!7277 = !DILocation(line: 1090, column: 44, scope: !7275)
!7278 = !DILocation(line: 1090, column: 7, scope: !7276)
!7279 = !DILocation(line: 1091, column: 24, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7275, file: !7222, line: 1090, column: 50)
!7281 = !DILocation(line: 1092, column: 3, scope: !7280)
!7282 = !DILocation(line: 1094, column: 23, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7271, file: !7222, line: 1093, column: 9)
!7284 = !DILocation(line: 1097, column: 2, scope: !7221)
!7285 = !DILocation(line: 1098, column: 1, scope: !7221)
!7286 = distinct !DISubprogram(name: "get_esf", scope: !7222, file: !7222, line: 894, type: !7287, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !7290)
!7287 = !DISubroutineType(types: !7288)
!7288 = !{!2994, !132, !132, !132, !7289}
!7289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!7290 = !{!7291, !7292, !7293, !7294, !7295, !7296}
!7291 = !DILocalVariable(name: "msp", arg: 1, scope: !7286, file: !7222, line: 894, type: !132)
!7292 = !DILocalVariable(name: "psp", arg: 2, scope: !7286, file: !7222, line: 894, type: !132)
!7293 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7286, file: !7222, line: 894, type: !132)
!7294 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7286, file: !7222, line: 895, type: !7289)
!7295 = !DILocalVariable(name: "alternative_state_exc", scope: !7286, file: !7222, line: 897, type: !166)
!7296 = !DILocalVariable(name: "ptr_esf", scope: !7286, file: !7222, line: 898, type: !2994)
!7297 = !DILocation(line: 0, scope: !7286)
!7298 = !DILocation(line: 900, column: 14, scope: !7286)
!7299 = !DILocation(line: 902, column: 49, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7286, file: !7222, line: 902, column: 6)
!7301 = !DILocation(line: 902, column: 6, scope: !7286)
!7302 = !DILocation(line: 983, column: 18, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7286, file: !7222, line: 983, column: 6)
!7304 = !DILocation(line: 991, column: 7, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7306, file: !7222, line: 990, column: 30)
!7306 = distinct !DILexicalBlock(scope: !7286, file: !7222, line: 990, column: 6)
!7307 = !DILocation(line: 998, column: 16, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7309, file: !7222, line: 995, column: 10)
!7309 = distinct !DILexicalBlock(scope: !7305, file: !7222, line: 991, column: 7)
!7310 = !DILocation(line: 1002, column: 2, scope: !7286)
!7311 = !DILocation(line: 1003, column: 1, scope: !7286)
!7312 = distinct !DISubprogram(name: "fault_handle", scope: !7222, file: !7222, line: 786, type: !7313, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !7315)
!7313 = !DISubroutineType(types: !7314)
!7314 = !{!132, !2994, !103, !7289}
!7315 = !{!7316, !7317, !7318, !7319}
!7316 = !DILocalVariable(name: "esf", arg: 1, scope: !7312, file: !7222, line: 786, type: !2994)
!7317 = !DILocalVariable(name: "fault", arg: 2, scope: !7312, file: !7222, line: 786, type: !103)
!7318 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7312, file: !7222, line: 786, type: !7289)
!7319 = !DILocalVariable(name: "reason", scope: !7312, file: !7222, line: 788, type: !132)
!7320 = !DILocation(line: 0, scope: !7312)
!7321 = !DILocation(line: 790, column: 15, scope: !7312)
!7322 = !DILocation(line: 792, column: 2, scope: !7312)
!7323 = !DILocation(line: 794, column: 12, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7312, file: !7222, line: 792, column: 17)
!7325 = !DILocation(line: 795, column: 3, scope: !7324)
!7326 = !DILocation(line: 800, column: 12, scope: !7324)
!7327 = !DILocation(line: 801, column: 3, scope: !7324)
!7328 = !DILocation(line: 803, column: 12, scope: !7324)
!7329 = !DILocation(line: 804, column: 3, scope: !7324)
!7330 = !DILocation(line: 806, column: 12, scope: !7324)
!7331 = !DILocation(line: 807, column: 3, scope: !7324)
!7332 = !DILocation(line: 814, column: 3, scope: !7324)
!7333 = !DILocation(line: 815, column: 3, scope: !7324)
!7334 = !DILocation(line: 829, column: 2, scope: !7312)
!7335 = distinct !DISubprogram(name: "hard_fault", scope: !7222, file: !7222, line: 709, type: !7336, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !7338)
!7336 = !DISubroutineType(types: !7337)
!7337 = !{!132, !2994, !7289}
!7338 = !{!7339, !7340, !7341}
!7339 = !DILocalVariable(name: "esf", arg: 1, scope: !7335, file: !7222, line: 709, type: !2994)
!7340 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7335, file: !7222, line: 709, type: !7289)
!7341 = !DILocalVariable(name: "reason", scope: !7335, file: !7222, line: 711, type: !132)
!7342 = !DILocation(line: 0, scope: !7335)
!7343 = !DILocation(line: 732, column: 15, scope: !7335)
!7344 = !DILocation(line: 734, column: 12, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7335, file: !7222, line: 734, column: 6)
!7346 = !DILocation(line: 734, column: 17, scope: !7345)
!7347 = !DILocation(line: 734, column: 41, scope: !7345)
!7348 = !DILocation(line: 734, column: 6, scope: !7335)
!7349 = !DILocation(line: 736, column: 19, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7345, file: !7222, line: 736, column: 13)
!7351 = !DILocation(line: 736, column: 49, scope: !7350)
!7352 = !DILocation(line: 736, column: 13, scope: !7345)
!7353 = !DILocation(line: 738, column: 19, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7350, file: !7222, line: 738, column: 13)
!7355 = !DILocation(line: 738, column: 24, scope: !7354)
!7356 = !DILocation(line: 738, column: 47, scope: !7354)
!7357 = !DILocation(line: 738, column: 13, scope: !7350)
!7358 = !DILocation(line: 740, column: 7, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7360, file: !7222, line: 740, column: 7)
!7360 = distinct !DILexicalBlock(scope: !7354, file: !7222, line: 738, column: 53)
!7361 = !DILocation(line: 740, column: 7, scope: !7360)
!7362 = !DILocation(line: 742, column: 24, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7359, file: !7222, line: 740, column: 38)
!7364 = !DILocation(line: 743, column: 3, scope: !7363)
!7365 = !DILocation(line: 743, column: 20, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7359, file: !7222, line: 743, column: 14)
!7367 = !DILocation(line: 743, column: 25, scope: !7366)
!7368 = !DILocation(line: 743, column: 52, scope: !7366)
!7369 = !DILocation(line: 743, column: 14, scope: !7359)
!7370 = !DILocation(line: 744, column: 13, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7366, file: !7222, line: 743, column: 58)
!7372 = !DILocation(line: 745, column: 3, scope: !7371)
!7373 = !DILocation(line: 745, column: 20, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7366, file: !7222, line: 745, column: 14)
!7375 = !DILocation(line: 745, column: 25, scope: !7374)
!7376 = !DILocation(line: 745, column: 52, scope: !7374)
!7377 = !DILocation(line: 745, column: 14, scope: !7366)
!7378 = !DILocation(line: 746, column: 13, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7374, file: !7222, line: 745, column: 58)
!7380 = !DILocation(line: 747, column: 3, scope: !7379)
!7381 = !DILocation(line: 747, column: 20, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7374, file: !7222, line: 747, column: 14)
!7383 = !DILocation(line: 747, column: 52, scope: !7382)
!7384 = !DILocation(line: 747, column: 14, scope: !7374)
!7385 = !DILocation(line: 748, column: 13, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7382, file: !7222, line: 747, column: 58)
!7387 = !DILocation(line: 753, column: 3, scope: !7386)
!7388 = !DILocation(line: 766, column: 2, scope: !7335)
!7389 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7222, file: !7222, line: 229, type: !7313, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !7390)
!7390 = !{!7391, !7392, !7393, !7394, !7395, !7396, !7399}
!7391 = !DILocalVariable(name: "esf", arg: 1, scope: !7389, file: !7222, line: 229, type: !2994)
!7392 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7389, file: !7222, line: 229, type: !103)
!7393 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7389, file: !7222, line: 230, type: !7289)
!7394 = !DILocalVariable(name: "reason", scope: !7389, file: !7222, line: 232, type: !132)
!7395 = !DILocalVariable(name: "mmfar", scope: !7389, file: !7222, line: 233, type: !132)
!7396 = !DILocalVariable(name: "temp", scope: !7397, file: !7222, line: 254, type: !132)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !7222, line: 244, column: 48)
!7398 = distinct !DILexicalBlock(scope: !7389, file: !7222, line: 244, column: 6)
!7399 = !DILocalVariable(name: "min_stack_ptr", scope: !7400, file: !7222, line: 309, type: !132)
!7400 = distinct !DILexicalBlock(scope: !7401, file: !7222, line: 308, column: 43)
!7401 = distinct !DILexicalBlock(scope: !7402, file: !7222, line: 308, column: 7)
!7402 = distinct !DILexicalBlock(scope: !7403, file: !7222, line: 289, column: 40)
!7403 = distinct !DILexicalBlock(scope: !7389, file: !7222, line: 288, column: 6)
!7404 = !DILocation(line: 0, scope: !7389)
!7405 = !DILocation(line: 237, column: 12, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7389, file: !7222, line: 237, column: 6)
!7407 = !DILocation(line: 241, column: 12, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7389, file: !7222, line: 241, column: 6)
!7409 = !DILocation(line: 244, column: 12, scope: !7398)
!7410 = !DILocation(line: 244, column: 17, scope: !7398)
!7411 = !DILocation(line: 244, column: 42, scope: !7398)
!7412 = !DILocation(line: 244, column: 6, scope: !7389)
!7413 = !DILocation(line: 254, column: 24, scope: !7397)
!7414 = !DILocation(line: 0, scope: !7397)
!7415 = !DILocation(line: 256, column: 13, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7397, file: !7222, line: 256, column: 7)
!7417 = !DILocation(line: 256, column: 18, scope: !7416)
!7418 = !DILocation(line: 256, column: 44, scope: !7416)
!7419 = !DILocation(line: 256, column: 7, scope: !7397)
!7420 = !DILocation(line: 259, column: 24, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7422, file: !7222, line: 259, column: 8)
!7422 = distinct !DILexicalBlock(scope: !7416, file: !7222, line: 256, column: 50)
!7423 = !DILocation(line: 259, column: 8, scope: !7422)
!7424 = !DILocation(line: 261, column: 15, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7421, file: !7222, line: 259, column: 30)
!7426 = !DILocation(line: 262, column: 4, scope: !7425)
!7427 = !DILocation(line: 265, column: 12, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7389, file: !7222, line: 265, column: 6)
!7429 = !DILocation(line: 269, column: 12, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7389, file: !7222, line: 269, column: 6)
!7431 = !DILocation(line: 288, column: 12, scope: !7403)
!7432 = !DILocation(line: 288, column: 17, scope: !7403)
!7433 = !DILocation(line: 288, column: 41, scope: !7403)
!7434 = !DILocation(line: 289, column: 9, scope: !7403)
!7435 = !DILocation(line: 289, column: 14, scope: !7403)
!7436 = !DILocation(line: 288, column: 6, scope: !7389)
!7437 = !DILocation(line: 308, column: 12, scope: !7401)
!7438 = !DILocation(line: 308, column: 17, scope: !7401)
!7439 = !DILocation(line: 308, column: 7, scope: !7402)
!7440 = !DILocation(line: 310, column: 6, scope: !7400)
!7441 = !DILocation(line: 309, column: 29, scope: !7400)
!7442 = !DILocation(line: 0, scope: !7400)
!7443 = !DILocation(line: 312, column: 8, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7400, file: !7222, line: 312, column: 8)
!7445 = !DILocation(line: 312, column: 8, scope: !7400)
!7446 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7447, file: !6921, line: 1099, type: !132)
!7447 = distinct !DISubprogram(name: "__set_PSP", scope: !6921, file: !6921, line: 1099, type: !7012, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !7448)
!7448 = !{!7446}
!7449 = !DILocation(line: 0, scope: !7447, inlinedAt: !7450)
!7450 = distinct !DILocation(line: 338, column: 5, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7444, file: !7222, line: 312, column: 23)
!7452 = !DILocation(line: 1101, column: 3, scope: !7447, inlinedAt: !7450)
!7453 = !{i64 3758456}
!7454 = !DILocation(line: 341, column: 4, scope: !7451)
!7455 = !DILocation(line: 360, column: 12, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7389, file: !7222, line: 360, column: 6)
!7457 = !DILocation(line: 360, column: 17, scope: !7456)
!7458 = !DILocation(line: 360, column: 41, scope: !7456)
!7459 = !DILocation(line: 360, column: 6, scope: !7389)
!7460 = !DILocation(line: 361, column: 14, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7456, file: !7222, line: 360, column: 47)
!7462 = !DILocation(line: 362, column: 2, scope: !7461)
!7463 = !DILocation(line: 366, column: 12, scope: !7389)
!7464 = !DILocation(line: 369, column: 15, scope: !7389)
!7465 = !DILocation(line: 371, column: 2, scope: !7389)
!7466 = distinct !DISubprogram(name: "bus_fault", scope: !7222, file: !7222, line: 383, type: !7467, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !7469)
!7467 = !DISubroutineType(types: !7468)
!7468 = !{!103, !2994, !103, !7289}
!7469 = !{!7470, !7471, !7472, !7473, !7474}
!7470 = !DILocalVariable(name: "esf", arg: 1, scope: !7466, file: !7222, line: 383, type: !2994)
!7471 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7466, file: !7222, line: 383, type: !103)
!7472 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7466, file: !7222, line: 383, type: !7289)
!7473 = !DILocalVariable(name: "reason", scope: !7466, file: !7222, line: 385, type: !132)
!7474 = !DILocalVariable(name: "bfar", scope: !7475, file: !7222, line: 405, type: !132)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !7222, line: 395, column: 42)
!7476 = distinct !DILexicalBlock(scope: !7466, file: !7222, line: 395, column: 6)
!7477 = !DILocation(line: 0, scope: !7466)
!7478 = !DILocation(line: 389, column: 11, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7466, file: !7222, line: 389, column: 6)
!7480 = !DILocation(line: 392, column: 11, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7466, file: !7222, line: 392, column: 6)
!7482 = !DILocation(line: 395, column: 11, scope: !7476)
!7483 = !DILocation(line: 395, column: 16, scope: !7476)
!7484 = !DILocation(line: 395, column: 6, scope: !7466)
!7485 = !DILocation(line: 405, column: 3, scope: !7475)
!7486 = !DILocation(line: 0, scope: !7475)
!7487 = !DILocation(line: 407, column: 13, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7475, file: !7222, line: 407, column: 7)
!7489 = !DILocation(line: 407, column: 18, scope: !7488)
!7490 = !DILocation(line: 407, column: 44, scope: !7488)
!7491 = !DILocation(line: 407, column: 7, scope: !7475)
!7492 = !DILocation(line: 411, column: 15, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7494, file: !7222, line: 409, column: 30)
!7494 = distinct !DILexicalBlock(scope: !7495, file: !7222, line: 409, column: 8)
!7495 = distinct !DILexicalBlock(scope: !7488, file: !7222, line: 407, column: 50)
!7496 = !DILocation(line: 412, column: 4, scope: !7493)
!7497 = !DILocation(line: 415, column: 11, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7466, file: !7222, line: 415, column: 6)
!7499 = !DILocation(line: 418, column: 12, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7466, file: !7222, line: 418, column: 6)
!7501 = !DILocation(line: 418, column: 17, scope: !7500)
!7502 = !DILocation(line: 418, column: 41, scope: !7500)
!7503 = !DILocation(line: 418, column: 6, scope: !7466)
!7504 = !DILocation(line: 423, column: 18, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7500, file: !7222, line: 423, column: 13)
!7506 = !DILocation(line: 524, column: 12, scope: !7466)
!7507 = !DILocation(line: 526, column: 15, scope: !7466)
!7508 = !DILocation(line: 528, column: 2, scope: !7466)
!7509 = distinct !DISubprogram(name: "usage_fault", scope: !7222, file: !7222, line: 539, type: !7510, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !7514)
!7510 = !DISubroutineType(types: !7511)
!7511 = !{!132, !7512}
!7512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7513, size: 32)
!7513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2995)
!7514 = !{!7515, !7516}
!7515 = !DILocalVariable(name: "esf", arg: 1, scope: !7509, file: !7222, line: 539, type: !7512)
!7516 = !DILocalVariable(name: "reason", scope: !7509, file: !7222, line: 541, type: !132)
!7517 = !DILocation(line: 0, scope: !7509)
!7518 = !DILocation(line: 546, column: 12, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7509, file: !7222, line: 546, column: 6)
!7520 = !DILocation(line: 549, column: 12, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7509, file: !7222, line: 549, column: 6)
!7522 = !DILocation(line: 567, column: 12, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7509, file: !7222, line: 567, column: 6)
!7524 = !DILocation(line: 570, column: 12, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7509, file: !7222, line: 570, column: 6)
!7526 = !DILocation(line: 573, column: 12, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7509, file: !7222, line: 573, column: 6)
!7528 = !DILocation(line: 576, column: 12, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7509, file: !7222, line: 576, column: 6)
!7530 = !DILocation(line: 581, column: 12, scope: !7509)
!7531 = !DILocation(line: 583, column: 2, scope: !7509)
!7532 = distinct !DISubprogram(name: "debug_monitor", scope: !7222, file: !7222, line: 632, type: !7533, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !7535)
!7533 = !DISubroutineType(types: !7534)
!7534 = !{null, !2994, !7289}
!7535 = !{!7536, !7537}
!7536 = !DILocalVariable(name: "esf", arg: 1, scope: !7532, file: !7222, line: 632, type: !2994)
!7537 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7532, file: !7222, line: 632, type: !7289)
!7538 = !DILocation(line: 0, scope: !7532)
!7539 = !DILocation(line: 634, column: 15, scope: !7532)
!7540 = !DILocation(line: 652, column: 1, scope: !7532)
!7541 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7222, file: !7222, line: 658, type: !7542, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !7544)
!7542 = !DISubroutineType(types: !7543)
!7543 = !{!166, !2994}
!7544 = !{!7545, !7546, !7547}
!7545 = !DILocalVariable(name: "esf", arg: 1, scope: !7541, file: !7222, line: 658, type: !2994)
!7546 = !DILocalVariable(name: "ret_addr", scope: !7541, file: !7222, line: 660, type: !2686)
!7547 = !DILocalVariable(name: "fault_insn", scope: !7541, file: !7222, line: 686, type: !340)
!7548 = !DILocation(line: 0, scope: !7541)
!7549 = !DILocation(line: 660, column: 46, scope: !7541)
!7550 = !DILocation(line: 660, column: 23, scope: !7541)
!7551 = !DILocation(line: 682, column: 11, scope: !7541)
!7552 = !DILocation(line: 271, column: 3, scope: !7553, inlinedAt: !7554)
!7553 = distinct !DISubprogram(name: "__DSB", scope: !6921, file: !6921, line: 269, type: !3328, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !473)
!7554 = distinct !DILocation(line: 683, column: 2, scope: !7541)
!7555 = !{i64 3734591}
!7556 = !DILocation(line: 260, column: 3, scope: !7557, inlinedAt: !7558)
!7557 = distinct !DISubprogram(name: "__ISB", scope: !6921, file: !6921, line: 258, type: !3328, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !473)
!7558 = distinct !DILocation(line: 684, column: 2, scope: !7541)
!7559 = !{i64 3734308}
!7560 = !DILocation(line: 686, column: 35, scope: !7541)
!7561 = !DILocation(line: 686, column: 24, scope: !7541)
!7562 = !DILocation(line: 688, column: 11, scope: !7541)
!7563 = !DILocation(line: 271, column: 3, scope: !7553, inlinedAt: !7564)
!7564 = distinct !DILocation(line: 689, column: 2, scope: !7541)
!7565 = !DILocation(line: 260, column: 3, scope: !7557, inlinedAt: !7566)
!7566 = distinct !DILocation(line: 690, column: 2, scope: !7541)
!7567 = !DILocation(line: 693, column: 45, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7541, file: !7222, line: 693, column: 6)
!7569 = !DILocation(line: 699, column: 1, scope: !7541)
!7570 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7222, file: !7222, line: 1107, type: !3328, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !473)
!7571 = !DILocation(line: 1111, column: 11, scope: !7570)
!7572 = !DILocation(line: 1136, column: 1, scope: !7570)
!7573 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7574, file: !7574, line: 26, type: !3328, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7575)
!7574 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7575 = !{!7576}
!7576 = !DILocalVariable(name: "irq", scope: !7573, file: !7574, line: 28, type: !103)
!7577 = !DILocation(line: 0, scope: !7573)
!7578 = !DILocation(line: 30, column: 2, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7573, file: !7574, line: 30, column: 2)
!7580 = !DILocation(line: 31, column: 3, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7582, file: !7574, line: 30, column: 39)
!7582 = distinct !DILexicalBlock(scope: !7579, file: !7574, line: 30, column: 2)
!7583 = !DILocation(line: 30, column: 35, scope: !7582)
!7584 = !DILocation(line: 30, column: 13, scope: !7582)
!7585 = distinct !{!7585, !7578, !7586}
!7586 = !DILocation(line: 32, column: 2, scope: !7579)
!7587 = !DILocation(line: 33, column: 1, scope: !7573)
!7588 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6955, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7589)
!7589 = !{!7590, !7591}
!7590 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7588, file: !507, line: 1814, type: !771)
!7591 = !DILocalVariable(name: "priority", arg: 2, scope: !7588, file: !507, line: 1814, type: !132)
!7592 = !DILocation(line: 0, scope: !7588)
!7593 = !DILocation(line: 1816, column: 7, scope: !7588)
!7594 = !DILocation(line: 0, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7588, file: !507, line: 1816, column: 7)
!7596 = !DILocation(line: 1824, column: 1, scope: !7588)
!7597 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7598, file: !7598, line: 27, type: !7599, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !7702)
!7598 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7599 = !DISubroutineType(types: !7600)
!7600 = !{null, !7601}
!7601 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !7602)
!7602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7603, size: 32)
!7603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !7604)
!7604 = !{!7605, !7663, !7675, !7676, !7677, !7678, !7684, !7697}
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7603, file: !367, line: 247, baseType: !7606, size: 384)
!7606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !7607)
!7607 = !{!7608, !7632, !7639, !7640, !7641, !7650, !7651, !7652}
!7608 = !DIDerivedType(tag: DW_TAG_member, scope: !7606, file: !367, line: 60, baseType: !7609, size: 64)
!7609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7606, file: !367, line: 60, size: 64, elements: !7610)
!7610 = !{!7611, !7626}
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7609, file: !367, line: 61, baseType: !7612, size: 64)
!7612 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !7613)
!7613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !7614)
!7614 = !{!7615, !7621}
!7615 = !DIDerivedType(tag: DW_TAG_member, scope: !7613, file: !321, line: 38, baseType: !7616, size: 32)
!7616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7613, file: !321, line: 38, size: 32, elements: !7617)
!7617 = !{!7618, !7620}
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7616, file: !321, line: 39, baseType: !7619, size: 32)
!7619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7613, size: 32)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7616, file: !321, line: 40, baseType: !7619, size: 32)
!7621 = !DIDerivedType(tag: DW_TAG_member, scope: !7613, file: !321, line: 42, baseType: !7622, size: 32, offset: 32)
!7622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7613, file: !321, line: 42, size: 32, elements: !7623)
!7623 = !{!7624, !7625}
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7622, file: !321, line: 43, baseType: !7619, size: 32)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7622, file: !321, line: 44, baseType: !7619, size: 32)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7609, file: !367, line: 62, baseType: !7627, size: 64)
!7627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !7628)
!7628 = !{!7629}
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7627, file: !392, line: 50, baseType: !7630, size: 64)
!7630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7631, size: 64, elements: !397)
!7631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7627, size: 32)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7606, file: !367, line: 68, baseType: !7633, size: 32, offset: 64)
!7633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7634, size: 32)
!7634 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !7635)
!7635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !7636)
!7636 = !{!7637}
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7635, file: !316, line: 232, baseType: !7638, size: 64)
!7638 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !7613)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7606, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7606, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!7641 = !DIDerivedType(tag: DW_TAG_member, scope: !7606, file: !367, line: 90, baseType: !7642, size: 16, offset: 112)
!7642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7606, file: !367, line: 90, size: 16, elements: !7643)
!7643 = !{!7644, !7649}
!7644 = !DIDerivedType(tag: DW_TAG_member, scope: !7642, file: !367, line: 91, baseType: !7645, size: 16)
!7645 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7642, file: !367, line: 91, size: 16, elements: !7646)
!7646 = !{!7647, !7648}
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7645, file: !367, line: 96, baseType: !415, size: 8)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7645, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7642, file: !367, line: 100, baseType: !340, size: 16)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7606, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7606, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7606, file: !367, line: 131, baseType: !7653, size: 192, offset: 192)
!7653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !7654)
!7654 = !{!7655, !7656, !7662}
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7653, file: !316, line: 245, baseType: !7612, size: 64)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7653, file: !316, line: 246, baseType: !7657, size: 32, offset: 64)
!7657 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !7658)
!7658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7659, size: 32)
!7659 = !DISubroutineType(types: !7660)
!7660 = !{null, !7661}
!7661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7653, size: 32)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7653, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7603, file: !367, line: 250, baseType: !7664, size: 288, offset: 384)
!7664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !7665)
!7665 = !{!7666, !7667, !7668, !7669, !7670, !7671, !7672, !7673, !7674}
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7664, file: !436, line: 26, baseType: !132, size: 32)
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7664, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7664, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7664, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7664, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7664, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7664, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7664, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7664, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7603, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7603, file: !367, line: 256, baseType: !7634, size: 64, offset: 704)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7603, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7603, file: !367, line: 300, baseType: !7679, size: 96, offset: 800)
!7679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !7680)
!7680 = !{!7681, !7682, !7683}
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7679, file: !367, line: 153, baseType: !22, size: 32)
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7679, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7679, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7603, file: !367, line: 325, baseType: !7685, size: 32, offset: 896)
!7685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7686, size: 32)
!7686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !7687)
!7687 = !{!7688, !7694, !7695}
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7686, file: !312, line: 5074, baseType: !7689, size: 96)
!7689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !7690)
!7690 = !{!7691, !7692, !7693}
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7689, file: !462, line: 57, baseType: !465, size: 32)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7689, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7689, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7686, file: !312, line: 5075, baseType: !7634, size: 64, offset: 96)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7686, file: !312, line: 5076, baseType: !7696, offset: 160)
!7696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7603, file: !367, line: 343, baseType: !7698, size: 64, offset: 928)
!7698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !7699)
!7699 = !{!7700, !7701}
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7698, file: !436, line: 63, baseType: !132, size: 32)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7698, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!7702 = !{!7703}
!7703 = !DILocalVariable(name: "thread", arg: 1, scope: !7597, file: !7598, line: 27, type: !7601)
!7704 = !DILocation(line: 0, scope: !7597)
!7705 = !DILocation(line: 29, column: 6, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7597, file: !7598, line: 29, column: 6)
!7707 = !DILocation(line: 29, column: 15, scope: !7706)
!7708 = !DILocation(line: 29, column: 6, scope: !7597)
!7709 = !DILocation(line: 1031, column: 3, scope: !7710, inlinedAt: !7713)
!7710 = distinct !DISubprogram(name: "__get_IPSR", scope: !6921, file: !6921, line: 1027, type: !7002, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !7711)
!7711 = !{!7712}
!7712 = !DILocalVariable(name: "result", scope: !7710, file: !6921, line: 1029, type: !132)
!7713 = distinct !DILocation(line: 48, column: 10, scope: !7714, inlinedAt: !7718)
!7714 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7715, file: !7715, line: 46, type: !7716, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !473)
!7715 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7716 = !DISubroutineType(types: !7717)
!7717 = !{!166}
!7718 = distinct !DILocation(line: 30, column: 7, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7720, file: !7598, line: 30, column: 7)
!7720 = distinct !DILexicalBlock(scope: !7706, file: !7598, line: 29, column: 26)
!7721 = !{i64 3723439}
!7722 = !DILocation(line: 0, scope: !7710, inlinedAt: !7713)
!7723 = !DILocation(line: 48, column: 9, scope: !7714, inlinedAt: !7718)
!7724 = !DILocation(line: 30, column: 7, scope: !7720)
!7725 = !DILocation(line: 42, column: 14, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7719, file: !7598, line: 30, column: 25)
!7727 = !DILocation(line: 48, column: 15, scope: !7726)
!7728 = !DILocation(line: 49, column: 3, scope: !7726)
!7729 = !DILocation(line: 52, column: 2, scope: !7597)
!7730 = !DILocation(line: 53, column: 1, scope: !7597)
!7731 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !362, file: !362, line: 127, type: !3328, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !353, retainedNodes: !473)
!7732 = !DILocation(line: 134, column: 2, scope: !7731)
!7733 = !DILocation(line: 156, column: 1, scope: !7731)
!7734 = !DILocation(line: 0, scope: !361)
!7735 = !DILocation(line: 289, column: 36, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !361, file: !362, line: 285, column: 2)
!7737 = !DILocation(line: 289, column: 42, scope: !7736)
!7738 = !DILocation(line: 300, column: 36, scope: !361)
!7739 = !DILocation(line: 301, column: 35, scope: !361)
!7740 = !DILocation(line: 302, column: 37, scope: !361)
!7741 = !DILocation(line: 311, column: 2, scope: !361)
!7742 = !DILocation(line: 316, column: 1, scope: !361)
!7743 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !535, file: !535, line: 180, type: !3328, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7744 = !DILocation(line: 188, column: 12, scope: !7743)
!7745 = !DILocation(line: 271, column: 3, scope: !7746, inlinedAt: !7747)
!7746 = distinct !DISubprogram(name: "__DSB", scope: !6921, file: !6921, line: 269, type: !3328, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7747 = distinct !DILocation(line: 192, column: 2, scope: !7743)
!7748 = !{i64 3911341}
!7749 = !DILocation(line: 260, column: 3, scope: !7750, inlinedAt: !7751)
!7750 = distinct !DISubprogram(name: "__ISB", scope: !6921, file: !6921, line: 258, type: !3328, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7751 = distinct !DILocation(line: 193, column: 2, scope: !7743)
!7752 = !{i64 3911058}
!7753 = !DILocation(line: 194, column: 1, scope: !7743)
!7754 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !535, file: !535, line: 199, type: !3328, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7755 = !DILocation(line: 282, column: 3, scope: !7756, inlinedAt: !7757)
!7756 = distinct !DISubprogram(name: "__DMB", scope: !6921, file: !6921, line: 280, type: !3328, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7757 = distinct !DILocation(line: 202, column: 2, scope: !7754)
!7758 = !{i64 3911617}
!7759 = !DILocation(line: 205, column: 12, scope: !7754)
!7760 = !DILocation(line: 206, column: 1, scope: !7754)
!7761 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !535, file: !535, line: 275, type: !7762, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7775)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{null, !7764, !265, !7189, !7189}
!7764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7765, size: 32)
!7765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7766)
!7766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !486, line: 52, size: 96, elements: !7767)
!7767 = !{!7768, !7769, !7770}
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7766, file: !486, line: 53, baseType: !22, size: 32)
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7766, file: !486, line: 54, baseType: !356, size: 32, offset: 32)
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7766, file: !486, line: 55, baseType: !7771, size: 32, offset: 64)
!7771 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !492, line: 151, baseType: !7772)
!7772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !492, line: 149, size: 32, elements: !7773)
!7773 = !{!7774}
!7774 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7772, file: !492, line: 150, baseType: !132, size: 32)
!7775 = !{!7776, !7777, !7778, !7779}
!7776 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7761, file: !535, line: 276, type: !7764)
!7777 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7761, file: !535, line: 276, type: !265)
!7778 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7761, file: !535, line: 277, type: !7189)
!7779 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7761, file: !535, line: 277, type: !7189)
!7780 = !DILocation(line: 0, scope: !7761)
!7781 = !DILocation(line: 279, column: 6, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7761, file: !535, line: 279, column: 6)
!7783 = !DILocation(line: 285, column: 1, scope: !7761)
!7784 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7785, file: !7785, line: 220, type: !7786, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7788)
!7785 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7786 = !DISubroutineType(types: !7787)
!7787 = !{!103, !7764, !265, !7189, !7189}
!7788 = !{!7789, !7790, !7791, !7792, !7793}
!7789 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7784, file: !7785, line: 221, type: !7764)
!7790 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7784, file: !7785, line: 221, type: !265)
!7791 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7784, file: !7785, line: 222, type: !7189)
!7792 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7784, file: !7785, line: 223, type: !7189)
!7793 = !DILocalVariable(name: "mpu_reg_index", scope: !7784, file: !7785, line: 225, type: !103)
!7794 = !DILocation(line: 0, scope: !7784)
!7795 = !DILocation(line: 225, column: 22, scope: !7784)
!7796 = !DILocation(line: 233, column: 18, scope: !7784)
!7797 = !DILocation(line: 236, column: 23, scope: !7784)
!7798 = !DILocation(line: 236, column: 21, scope: !7784)
!7799 = !DILocation(line: 238, column: 2, scope: !7784)
!7800 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !535, file: !535, line: 105, type: !7801, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7803)
!7801 = !DISubroutineType(types: !7802)
!7802 = !{!103, !7764, !163, !163, !166}
!7803 = !{!7804, !7805, !7806, !7807, !7808, !7809}
!7804 = !DILocalVariable(name: "regions", arg: 1, scope: !7800, file: !535, line: 106, type: !7764)
!7805 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7800, file: !535, line: 106, type: !163)
!7806 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7800, file: !535, line: 106, type: !163)
!7807 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7800, file: !535, line: 107, type: !166)
!7808 = !DILocalVariable(name: "i", scope: !7800, file: !535, line: 109, type: !103)
!7809 = !DILocalVariable(name: "reg_index", scope: !7800, file: !535, line: 110, type: !103)
!7810 = !DILocation(line: 0, scope: !7800)
!7811 = !DILocation(line: 110, column: 18, scope: !7800)
!7812 = !DILocation(line: 112, column: 16, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7814, file: !535, line: 112, column: 2)
!7814 = distinct !DILexicalBlock(scope: !7800, file: !535, line: 112, column: 2)
!7815 = !DILocation(line: 112, column: 2, scope: !7814)
!7816 = !DILocation(line: 113, column: 7, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7818, file: !535, line: 113, column: 7)
!7818 = distinct !DILexicalBlock(scope: !7813, file: !535, line: 112, column: 36)
!7819 = !DILocation(line: 113, column: 18, scope: !7817)
!7820 = !DILocation(line: 113, column: 23, scope: !7817)
!7821 = !DILocation(line: 113, column: 7, scope: !7818)
!7822 = !DILocation(line: 118, column: 23, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7818, file: !535, line: 118, column: 7)
!7824 = !DILocation(line: 119, column: 7, scope: !7823)
!7825 = !DILocation(line: 118, column: 7, scope: !7818)
!7826 = !DILocation(line: 124, column: 36, scope: !7818)
!7827 = !DILocation(line: 124, column: 15, scope: !7818)
!7828 = !DILocation(line: 126, column: 17, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7818, file: !535, line: 126, column: 7)
!7830 = !DILocation(line: 126, column: 7, scope: !7818)
!7831 = !DILocation(line: 131, column: 12, scope: !7818)
!7832 = !DILocation(line: 132, column: 2, scope: !7818)
!7833 = !DILocation(line: 112, column: 32, scope: !7813)
!7834 = distinct !{!7834, !7815, !7835}
!7835 = !DILocation(line: 132, column: 2, scope: !7814)
!7836 = !DILocation(line: 135, column: 1, scope: !7800)
!7837 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7785, file: !7785, line: 63, type: !7838, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7840)
!7838 = !DISubroutineType(types: !7839)
!7839 = !{!103, !7764}
!7840 = !{!7841, !7842}
!7841 = !DILocalVariable(name: "part", arg: 1, scope: !7837, file: !7785, line: 63, type: !7764)
!7842 = !DILocalVariable(name: "partition_is_valid", scope: !7837, file: !7785, line: 70, type: !103)
!7843 = !DILocation(line: 0, scope: !7837)
!7844 = !DILocation(line: 71, column: 11, scope: !7837)
!7845 = !DILocation(line: 71, column: 37, scope: !7837)
!7846 = !DILocation(line: 72, column: 3, scope: !7837)
!7847 = !DILocation(line: 71, column: 30, scope: !7837)
!7848 = !DILocation(line: 75, column: 11, scope: !7837)
!7849 = !DILocation(line: 75, column: 17, scope: !7837)
!7850 = !DILocation(line: 75, column: 38, scope: !7837)
!7851 = !DILocation(line: 77, column: 2, scope: !7837)
!7852 = distinct !DISubprogram(name: "mpu_configure_region", scope: !535, file: !535, line: 79, type: !7853, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7855)
!7853 = !DISubroutineType(types: !7854)
!7854 = !{!103, !265, !7764}
!7855 = !{!7856, !7857, !7858}
!7856 = !DILocalVariable(name: "index", arg: 1, scope: !7852, file: !535, line: 79, type: !265)
!7857 = !DILocalVariable(name: "new_region", arg: 2, scope: !7852, file: !535, line: 80, type: !7764)
!7858 = !DILocalVariable(name: "region_conf", scope: !7852, file: !535, line: 82, type: !524)
!7859 = !DILocation(line: 0, scope: !7852)
!7860 = !DILocation(line: 82, column: 2, scope: !7852)
!7861 = !DILocation(line: 82, column: 24, scope: !7852)
!7862 = !DILocation(line: 87, column: 33, scope: !7852)
!7863 = !DILocation(line: 87, column: 14, scope: !7852)
!7864 = !DILocation(line: 87, column: 19, scope: !7852)
!7865 = !DILocation(line: 91, column: 55, scope: !7852)
!7866 = !DILocation(line: 92, column: 16, scope: !7852)
!7867 = !DILocation(line: 92, column: 53, scope: !7852)
!7868 = !DILocation(line: 91, column: 2, scope: !7852)
!7869 = !DILocation(line: 95, column: 9, scope: !7852)
!7870 = !DILocation(line: 97, column: 1, scope: !7852)
!7871 = !DILocation(line: 95, column: 2, scope: !7852)
!7872 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7785, file: !7785, line: 113, type: !7873, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7878)
!7873 = !DISubroutineType(types: !7874)
!7874 = !{null, !7875, !7876, !132, !132}
!7875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!7876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7877, size: 32)
!7877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7771)
!7878 = !{!7879, !7880, !7881, !7882}
!7879 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7872, file: !7785, line: 114, type: !7875)
!7880 = !DILocalVariable(name: "attr", arg: 2, scope: !7872, file: !7785, line: 115, type: !7876)
!7881 = !DILocalVariable(name: "base", arg: 3, scope: !7872, file: !7785, line: 115, type: !132)
!7882 = !DILocalVariable(name: "size", arg: 4, scope: !7872, file: !7785, line: 115, type: !132)
!7883 = !DILocation(line: 0, scope: !7872)
!7884 = !DILocation(line: 127, column: 23, scope: !7872)
!7885 = !DILocation(line: 127, column: 35, scope: !7872)
!7886 = !DILocation(line: 127, column: 33, scope: !7872)
!7887 = !DILocation(line: 127, column: 10, scope: !7872)
!7888 = !DILocation(line: 127, column: 15, scope: !7872)
!7889 = !DILocation(line: 129, column: 1, scope: !7872)
!7890 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !535, file: !535, line: 57, type: !7891, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7893)
!7891 = !DISubroutineType(types: !7892)
!7892 = !{!103, !265, !522}
!7893 = !{!7894, !7895}
!7894 = !DILocalVariable(name: "index", arg: 1, scope: !7890, file: !535, line: 57, type: !265)
!7895 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7890, file: !535, line: 58, type: !522)
!7896 = !DILocation(line: 0, scope: !7890)
!7897 = !DILocation(line: 61, column: 6, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7890, file: !535, line: 61, column: 6)
!7899 = !DILocation(line: 61, column: 12, scope: !7898)
!7900 = !DILocation(line: 61, column: 6, scope: !7890)
!7901 = !DILocation(line: 71, column: 2, scope: !7890)
!7902 = !DILocation(line: 73, column: 2, scope: !7890)
!7903 = !DILocation(line: 74, column: 1, scope: !7890)
!7904 = distinct !DISubprogram(name: "region_init", scope: !7785, file: !7785, line: 29, type: !7905, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7907)
!7905 = !DISubroutineType(types: !7906)
!7906 = !{null, !7189, !522}
!7907 = !{!7908, !7909}
!7908 = !DILocalVariable(name: "index", arg: 1, scope: !7904, file: !7785, line: 29, type: !7189)
!7909 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7904, file: !7785, line: 30, type: !522)
!7910 = !DILocation(line: 0, scope: !7904)
!7911 = !DILocation(line: 33, column: 2, scope: !7904)
!7912 = !DILocation(line: 47, column: 28, scope: !7904)
!7913 = !DILocation(line: 47, column: 33, scope: !7904)
!7914 = !DILocation(line: 48, column: 26, scope: !7904)
!7915 = !DILocation(line: 47, column: 12, scope: !7904)
!7916 = !DILocation(line: 49, column: 32, scope: !7904)
!7917 = !DILocation(line: 49, column: 37, scope: !7904)
!7918 = !DILocation(line: 49, column: 12, scope: !7904)
!7919 = !DILocation(line: 53, column: 1, scope: !7904)
!7920 = distinct !DISubprogram(name: "set_region_number", scope: !7921, file: !7921, line: 32, type: !7012, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7922)
!7921 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7922 = !{!7923}
!7923 = !DILocalVariable(name: "index", arg: 1, scope: !7920, file: !7921, line: 32, type: !132)
!7924 = !DILocation(line: 0, scope: !7920)
!7925 = !DILocation(line: 34, column: 11, scope: !7920)
!7926 = !DILocation(line: 35, column: 1, scope: !7920)
!7927 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7785, file: !7785, line: 88, type: !7928, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7930)
!7928 = !DISubroutineType(types: !7929)
!7929 = !{!132, !132}
!7930 = !{!7931}
!7931 = !DILocalVariable(name: "size", arg: 1, scope: !7927, file: !7785, line: 88, type: !132)
!7932 = !DILocation(line: 0, scope: !7927)
!7933 = !DILocation(line: 91, column: 11, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7927, file: !7785, line: 91, column: 6)
!7935 = !DILocation(line: 91, column: 6, scope: !7927)
!7936 = !DILocation(line: 100, column: 11, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7927, file: !7785, line: 100, column: 6)
!7938 = !DILocation(line: 100, column: 6, scope: !7927)
!7939 = !DILocation(line: 104, column: 35, scope: !7927)
!7940 = !DILocation(line: 104, column: 16, scope: !7927)
!7941 = !DILocation(line: 104, column: 50, scope: !7927)
!7942 = !DILocation(line: 104, column: 72, scope: !7927)
!7943 = !DILocation(line: 104, column: 2, scope: !7927)
!7944 = !DILocation(line: 106, column: 1, scope: !7927)
!7945 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !535, file: !535, line: 307, type: !7946, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7948)
!7946 = !DISubroutineType(types: !7947)
!7947 = !{null, !7764, !163}
!7948 = !{!7949, !7950}
!7949 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7945, file: !535, line: 308, type: !7764)
!7950 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7945, file: !535, line: 308, type: !163)
!7951 = !DILocation(line: 0, scope: !7945)
!7952 = !DILocation(line: 310, column: 6, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7945, file: !535, line: 310, column: 6)
!7954 = !DILocation(line: 316, column: 1, scope: !7945)
!7955 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7785, file: !7785, line: 249, type: !7956, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7958)
!7956 = !DISubroutineType(types: !7957)
!7957 = !{!103, !7764, !163}
!7958 = !{!7959, !7960, !7961, !7962}
!7959 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7955, file: !7785, line: 250, type: !7764)
!7960 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7955, file: !7785, line: 250, type: !163)
!7961 = !DILocalVariable(name: "mpu_reg_index", scope: !7955, file: !7785, line: 252, type: !103)
!7962 = !DILocalVariable(name: "i", scope: !7963, file: !7785, line: 264, type: !103)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !7785, line: 264, column: 3)
!7964 = distinct !DILexicalBlock(scope: !7965, file: !7785, line: 261, column: 32)
!7965 = distinct !DILexicalBlock(scope: !7955, file: !7785, line: 261, column: 6)
!7966 = !DILocation(line: 0, scope: !7955)
!7967 = !DILocation(line: 252, column: 22, scope: !7955)
!7968 = !DILocation(line: 258, column: 18, scope: !7955)
!7969 = !DILocation(line: 261, column: 20, scope: !7965)
!7970 = !DILocation(line: 261, column: 6, scope: !7955)
!7971 = !DILocation(line: 0, scope: !7963)
!7972 = !DILocation(line: 265, column: 4, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !7785, line: 264, column: 59)
!7974 = distinct !DILexicalBlock(scope: !7963, file: !7785, line: 264, column: 3)
!7975 = !DILocation(line: 264, column: 55, scope: !7974)
!7976 = !DILocation(line: 264, column: 33, scope: !7974)
!7977 = !DILocation(line: 264, column: 3, scope: !7963)
!7978 = distinct !{!7978, !7977, !7979}
!7979 = !DILocation(line: 266, column: 3, scope: !7963)
!7980 = !DILocation(line: 269, column: 2, scope: !7955)
!7981 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7982, file: !7982, line: 218, type: !7012, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7983)
!7982 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7983 = !{!7984}
!7984 = !DILocalVariable(name: "rnr", arg: 1, scope: !7981, file: !7982, line: 218, type: !132)
!7985 = !DILocation(line: 0, scope: !7981)
!7986 = !DILocation(line: 220, column: 12, scope: !7981)
!7987 = !DILocation(line: 221, column: 13, scope: !7981)
!7988 = !DILocation(line: 222, column: 1, scope: !7981)
!7989 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !535, file: !535, line: 326, type: !6725, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7990)
!7990 = !{!7991}
!7991 = !DILocalVariable(name: "r_index", scope: !7989, file: !535, line: 328, type: !132)
!7992 = !DILocation(line: 330, column: 17, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7989, file: !535, line: 330, column: 6)
!7994 = !DILocation(line: 330, column: 29, scope: !7993)
!7995 = !DILocation(line: 330, column: 6, scope: !7989)
!7996 = !DILocation(line: 347, column: 2, scope: !7989)
!7997 = !DILocation(line: 0, scope: !7989)
!7998 = !DILocation(line: 364, column: 29, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !8000, file: !535, line: 364, column: 2)
!8000 = distinct !DILexicalBlock(scope: !7989, file: !535, line: 364, column: 2)
!8001 = !DILocation(line: 364, column: 2, scope: !8000)
!8002 = !DILocation(line: 365, column: 25, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7999, file: !535, line: 364, column: 66)
!8004 = !DILocation(line: 365, column: 3, scope: !8003)
!8005 = !DILocation(line: 364, column: 62, scope: !7999)
!8006 = distinct !{!8006, !8001, !8007}
!8007 = !DILocation(line: 366, column: 2, scope: !8000)
!8008 = !DILocation(line: 369, column: 23, scope: !7989)
!8009 = !DILocation(line: 369, column: 21, scope: !7989)
!8010 = !DILocation(line: 372, column: 2, scope: !7989)
!8011 = !DILocation(line: 443, column: 2, scope: !7989)
!8012 = !DILocation(line: 444, column: 1, scope: !7989)
!8013 = distinct !DISubprogram(name: "strcpy", scope: !8014, file: !8014, line: 20, type: !8015, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8019)
!8014 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8015 = !DISubroutineType(types: !8016)
!8016 = !{!1097, !8017, !8018}
!8017 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1097)
!8018 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !155)
!8019 = !{!8020, !8021, !8022}
!8020 = !DILocalVariable(name: "d", arg: 1, scope: !8013, file: !8014, line: 20, type: !8017)
!8021 = !DILocalVariable(name: "s", arg: 2, scope: !8013, file: !8014, line: 20, type: !8018)
!8022 = !DILocalVariable(name: "dest", scope: !8013, file: !8014, line: 22, type: !1097)
!8023 = !DILocation(line: 0, scope: !8013)
!8024 = !DILocation(line: 24, column: 9, scope: !8013)
!8025 = !DILocation(line: 24, column: 12, scope: !8013)
!8026 = !DILocation(line: 24, column: 2, scope: !8013)
!8027 = !DILocation(line: 25, column: 6, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8013, file: !8014, line: 24, column: 21)
!8029 = !DILocation(line: 26, column: 4, scope: !8028)
!8030 = !DILocation(line: 27, column: 4, scope: !8028)
!8031 = distinct !{!8031, !8026, !8032}
!8032 = !DILocation(line: 28, column: 2, scope: !8013)
!8033 = !DILocation(line: 30, column: 5, scope: !8013)
!8034 = !DILocation(line: 32, column: 2, scope: !8013)
!8035 = distinct !DISubprogram(name: "strncpy", scope: !8014, file: !8014, line: 42, type: !8036, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8038)
!8036 = !DISubroutineType(types: !8037)
!8037 = !{!1097, !8017, !8018, !356}
!8038 = !{!8039, !8040, !8041, !8042}
!8039 = !DILocalVariable(name: "d", arg: 1, scope: !8035, file: !8014, line: 42, type: !8017)
!8040 = !DILocalVariable(name: "s", arg: 2, scope: !8035, file: !8014, line: 42, type: !8018)
!8041 = !DILocalVariable(name: "n", arg: 3, scope: !8035, file: !8014, line: 42, type: !356)
!8042 = !DILocalVariable(name: "dest", scope: !8035, file: !8014, line: 44, type: !1097)
!8043 = !DILocation(line: 0, scope: !8035)
!8044 = !DILocation(line: 46, column: 12, scope: !8035)
!8045 = !DILocation(line: 46, column: 17, scope: !8035)
!8046 = !DILocation(line: 46, column: 20, scope: !8035)
!8047 = !DILocation(line: 46, column: 23, scope: !8035)
!8048 = !DILocation(line: 46, column: 2, scope: !8035)
!8049 = !DILocation(line: 47, column: 6, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8035, file: !8014, line: 46, column: 32)
!8051 = !DILocation(line: 48, column: 4, scope: !8050)
!8052 = !DILocation(line: 49, column: 4, scope: !8050)
!8053 = !DILocation(line: 50, column: 4, scope: !8050)
!8054 = distinct !{!8054, !8048, !8055}
!8055 = !DILocation(line: 51, column: 2, scope: !8035)
!8056 = !DILocation(line: 54, column: 6, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8035, file: !8014, line: 53, column: 16)
!8058 = !DILocation(line: 55, column: 4, scope: !8057)
!8059 = !DILocation(line: 56, column: 4, scope: !8057)
!8060 = !DILocation(line: 53, column: 11, scope: !8035)
!8061 = !DILocation(line: 53, column: 2, scope: !8035)
!8062 = distinct !{!8062, !8061, !8063}
!8063 = !DILocation(line: 57, column: 2, scope: !8035)
!8064 = !DILocation(line: 59, column: 2, scope: !8035)
!8065 = distinct !DISubprogram(name: "strchr", scope: !8014, file: !8014, line: 69, type: !8066, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8068)
!8066 = !DISubroutineType(types: !8067)
!8067 = !{!1097, !155, !103}
!8068 = !{!8069, !8070, !8071}
!8069 = !DILocalVariable(name: "s", arg: 1, scope: !8065, file: !8014, line: 69, type: !155)
!8070 = !DILocalVariable(name: "c", arg: 2, scope: !8065, file: !8014, line: 69, type: !103)
!8071 = !DILocalVariable(name: "tmp", scope: !8065, file: !8014, line: 71, type: !108)
!8072 = !DILocation(line: 0, scope: !8065)
!8073 = !DILocation(line: 73, column: 2, scope: !8065)
!8074 = !DILocation(line: 73, column: 10, scope: !8065)
!8075 = !DILocation(line: 73, column: 13, scope: !8065)
!8076 = !DILocation(line: 73, column: 21, scope: !8065)
!8077 = !DILocation(line: 74, column: 4, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8065, file: !8014, line: 73, column: 38)
!8079 = distinct !{!8079, !8073, !8080}
!8080 = !DILocation(line: 75, column: 2, scope: !8065)
!8081 = !DILocation(line: 77, column: 9, scope: !8065)
!8082 = !DILocation(line: 77, column: 2, scope: !8065)
!8083 = distinct !DISubprogram(name: "strrchr", scope: !8014, file: !8014, line: 87, type: !8066, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8084)
!8084 = !{!8085, !8086, !8087}
!8085 = !DILocalVariable(name: "s", arg: 1, scope: !8083, file: !8014, line: 87, type: !155)
!8086 = !DILocalVariable(name: "c", arg: 2, scope: !8083, file: !8014, line: 87, type: !103)
!8087 = !DILocalVariable(name: "match", scope: !8083, file: !8014, line: 89, type: !1097)
!8088 = !DILocation(line: 0, scope: !8083)
!8089 = !DILocation(line: 91, column: 2, scope: !8083)
!8090 = !DILocation(line: 92, column: 7, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8092, file: !8014, line: 92, column: 7)
!8092 = distinct !DILexicalBlock(scope: !8083, file: !8014, line: 91, column: 5)
!8093 = !DILocation(line: 92, column: 10, scope: !8091)
!8094 = !DILocation(line: 92, column: 7, scope: !8092)
!8095 = !DILocation(line: 95, column: 13, scope: !8083)
!8096 = !DILocation(line: 95, column: 2, scope: !8092)
!8097 = distinct !{!8097, !8089, !8098}
!8098 = !DILocation(line: 95, column: 15, scope: !8083)
!8099 = !DILocation(line: 97, column: 2, scope: !8083)
!8100 = distinct !DISubprogram(name: "strlen", scope: !8014, file: !8014, line: 107, type: !8101, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8103)
!8101 = !DISubroutineType(types: !8102)
!8102 = !{!356, !155}
!8103 = !{!8104, !8105}
!8104 = !DILocalVariable(name: "s", arg: 1, scope: !8100, file: !8014, line: 107, type: !155)
!8105 = !DILocalVariable(name: "n", scope: !8100, file: !8014, line: 109, type: !356)
!8106 = !DILocation(line: 0, scope: !8100)
!8107 = !DILocation(line: 111, column: 9, scope: !8100)
!8108 = !DILocation(line: 111, column: 12, scope: !8100)
!8109 = !DILocation(line: 111, column: 2, scope: !8100)
!8110 = !DILocation(line: 112, column: 4, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8100, file: !8014, line: 111, column: 21)
!8112 = !DILocation(line: 113, column: 4, scope: !8111)
!8113 = distinct !{!8113, !8109, !8114}
!8114 = !DILocation(line: 114, column: 2, scope: !8100)
!8115 = !DILocation(line: 116, column: 2, scope: !8100)
!8116 = distinct !DISubprogram(name: "strnlen", scope: !8014, file: !8014, line: 126, type: !8117, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8119)
!8117 = !DISubroutineType(types: !8118)
!8118 = !{!356, !155, !356}
!8119 = !{!8120, !8121, !8122}
!8120 = !DILocalVariable(name: "s", arg: 1, scope: !8116, file: !8014, line: 126, type: !155)
!8121 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8116, file: !8014, line: 126, type: !356)
!8122 = !DILocalVariable(name: "n", scope: !8116, file: !8014, line: 128, type: !356)
!8123 = !DILocation(line: 0, scope: !8116)
!8124 = !DILocation(line: 130, column: 9, scope: !8116)
!8125 = !DILocation(line: 130, column: 12, scope: !8116)
!8126 = !DILocation(line: 130, column: 20, scope: !8116)
!8127 = !DILocation(line: 130, column: 2, scope: !8116)
!8128 = !DILocation(line: 131, column: 4, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8116, file: !8014, line: 130, column: 35)
!8130 = !DILocation(line: 132, column: 4, scope: !8129)
!8131 = distinct !{!8131, !8127, !8132}
!8132 = !DILocation(line: 133, column: 2, scope: !8116)
!8133 = !DILocation(line: 135, column: 2, scope: !8116)
!8134 = distinct !DISubprogram(name: "strcmp", scope: !8014, file: !8014, line: 145, type: !8135, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8137)
!8135 = !DISubroutineType(types: !8136)
!8136 = !{!103, !155, !155}
!8137 = !{!8138, !8139}
!8138 = !DILocalVariable(name: "s1", arg: 1, scope: !8134, file: !8014, line: 145, type: !155)
!8139 = !DILocalVariable(name: "s2", arg: 2, scope: !8134, file: !8014, line: 145, type: !155)
!8140 = !DILocation(line: 0, scope: !8134)
!8141 = !DILocation(line: 147, column: 10, scope: !8134)
!8142 = !DILocation(line: 147, column: 17, scope: !8134)
!8143 = !DILocation(line: 147, column: 14, scope: !8134)
!8144 = !DILocation(line: 147, column: 22, scope: !8134)
!8145 = !DILocation(line: 148, column: 5, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8134, file: !8014, line: 147, column: 40)
!8147 = !DILocation(line: 149, column: 5, scope: !8146)
!8148 = distinct !{!8148, !8149, !8150}
!8149 = !DILocation(line: 147, column: 2, scope: !8134)
!8150 = !DILocation(line: 150, column: 2, scope: !8134)
!8151 = !DILocation(line: 152, column: 9, scope: !8134)
!8152 = !DILocation(line: 152, column: 15, scope: !8134)
!8153 = !DILocation(line: 152, column: 13, scope: !8134)
!8154 = !DILocation(line: 152, column: 2, scope: !8134)
!8155 = distinct !DISubprogram(name: "strncmp", scope: !8014, file: !8014, line: 162, type: !8156, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8158)
!8156 = !DISubroutineType(types: !8157)
!8157 = !{!103, !155, !155, !356}
!8158 = !{!8159, !8160, !8161}
!8159 = !DILocalVariable(name: "s1", arg: 1, scope: !8155, file: !8014, line: 162, type: !155)
!8160 = !DILocalVariable(name: "s2", arg: 2, scope: !8155, file: !8014, line: 162, type: !155)
!8161 = !DILocalVariable(name: "n", arg: 3, scope: !8155, file: !8014, line: 162, type: !356)
!8162 = !DILocation(line: 0, scope: !8155)
!8163 = !DILocation(line: 164, column: 17, scope: !8155)
!8164 = !DILocation(line: 164, column: 21, scope: !8155)
!8165 = !DILocation(line: 164, column: 28, scope: !8155)
!8166 = !DILocation(line: 164, column: 25, scope: !8155)
!8167 = !DILocation(line: 164, column: 33, scope: !8155)
!8168 = !DILocation(line: 165, column: 5, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8155, file: !8014, line: 164, column: 51)
!8170 = !DILocation(line: 166, column: 5, scope: !8169)
!8171 = !DILocation(line: 167, column: 4, scope: !8169)
!8172 = distinct !{!8172, !8173, !8174}
!8173 = !DILocation(line: 164, column: 2, scope: !8155)
!8174 = !DILocation(line: 168, column: 2, scope: !8155)
!8175 = !DILocation(line: 170, column: 25, scope: !8155)
!8176 = !DILocation(line: 170, column: 31, scope: !8155)
!8177 = !DILocation(line: 170, column: 29, scope: !8155)
!8178 = !DILocation(line: 170, column: 9, scope: !8155)
!8179 = !DILocation(line: 170, column: 2, scope: !8155)
!8180 = distinct !DISubprogram(name: "strtok_r", scope: !8014, file: !8014, line: 180, type: !8181, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8184)
!8181 = !DISubroutineType(types: !8182)
!8182 = !{!1097, !1097, !155, !8183}
!8183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!8184 = !{!8185, !8186, !8187, !8188, !8189}
!8185 = !DILocalVariable(name: "str", arg: 1, scope: !8180, file: !8014, line: 180, type: !1097)
!8186 = !DILocalVariable(name: "sep", arg: 2, scope: !8180, file: !8014, line: 180, type: !155)
!8187 = !DILocalVariable(name: "state", arg: 3, scope: !8180, file: !8014, line: 180, type: !8183)
!8188 = !DILocalVariable(name: "start", scope: !8180, file: !8014, line: 182, type: !1097)
!8189 = !DILocalVariable(name: "end", scope: !8180, file: !8014, line: 182, type: !1097)
!8190 = !DILocation(line: 0, scope: !8180)
!8191 = !DILocation(line: 184, column: 10, scope: !8180)
!8192 = !DILocation(line: 184, column: 22, scope: !8180)
!8193 = !DILocation(line: 187, column: 9, scope: !8180)
!8194 = !DILocation(line: 187, column: 16, scope: !8180)
!8195 = !DILocation(line: 187, column: 19, scope: !8180)
!8196 = !DILocation(line: 187, column: 2, scope: !8180)
!8197 = !DILocation(line: 188, column: 8, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8180, file: !8014, line: 187, column: 40)
!8199 = distinct !{!8199, !8196, !8200}
!8200 = !DILocation(line: 189, column: 2, scope: !8180)
!8201 = !DILocation(line: 198, column: 9, scope: !8180)
!8202 = !DILocation(line: 198, column: 18, scope: !8180)
!8203 = !DILocation(line: 198, column: 17, scope: !8180)
!8204 = !DILocation(line: 198, column: 2, scope: !8180)
!8205 = !DILocation(line: 199, column: 6, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8180, file: !8014, line: 198, column: 37)
!8207 = !DILocation(line: 198, column: 14, scope: !8180)
!8208 = distinct !{!8208, !8204, !8209}
!8209 = !DILocation(line: 200, column: 2, scope: !8180)
!8210 = !DILocation(line: 203, column: 8, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8212, file: !8014, line: 202, column: 20)
!8212 = distinct !DILexicalBlock(scope: !8180, file: !8014, line: 202, column: 6)
!8213 = !DILocation(line: 204, column: 16, scope: !8211)
!8214 = !DILocation(line: 205, column: 2, scope: !8211)
!8215 = !DILocation(line: 210, column: 1, scope: !8180)
!8216 = distinct !DISubprogram(name: "strcat", scope: !8014, file: !8014, line: 212, type: !8015, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8217)
!8217 = !{!8218, !8219}
!8218 = !DILocalVariable(name: "dest", arg: 1, scope: !8216, file: !8014, line: 212, type: !8017)
!8219 = !DILocalVariable(name: "src", arg: 2, scope: !8216, file: !8014, line: 212, type: !8018)
!8220 = !DILocation(line: 0, scope: !8216)
!8221 = !DILocation(line: 214, column: 16, scope: !8216)
!8222 = !DILocation(line: 214, column: 14, scope: !8216)
!8223 = !DILocation(line: 214, column: 2, scope: !8216)
!8224 = !DILocation(line: 215, column: 2, scope: !8216)
!8225 = distinct !DISubprogram(name: "strncat", scope: !8014, file: !8014, line: 218, type: !8036, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8226)
!8226 = !{!8227, !8228, !8229, !8230, !8231}
!8227 = !DILocalVariable(name: "dest", arg: 1, scope: !8225, file: !8014, line: 218, type: !8017)
!8228 = !DILocalVariable(name: "src", arg: 2, scope: !8225, file: !8014, line: 218, type: !8018)
!8229 = !DILocalVariable(name: "n", arg: 3, scope: !8225, file: !8014, line: 219, type: !356)
!8230 = !DILocalVariable(name: "orig_dest", scope: !8225, file: !8014, line: 221, type: !1097)
!8231 = !DILocalVariable(name: "len", scope: !8225, file: !8014, line: 222, type: !356)
!8232 = !DILocation(line: 0, scope: !8225)
!8233 = !DILocation(line: 222, column: 15, scope: !8225)
!8234 = !DILocation(line: 224, column: 7, scope: !8225)
!8235 = !DILocation(line: 225, column: 14, scope: !8225)
!8236 = !DILocation(line: 225, column: 19, scope: !8225)
!8237 = !DILocation(line: 225, column: 11, scope: !8225)
!8238 = !DILocation(line: 225, column: 23, scope: !8225)
!8239 = !DILocation(line: 225, column: 28, scope: !8225)
!8240 = !DILocation(line: 225, column: 2, scope: !8225)
!8241 = !DILocation(line: 226, column: 17, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8225, file: !8014, line: 225, column: 38)
!8243 = !DILocation(line: 226, column: 8, scope: !8242)
!8244 = !DILocation(line: 226, column: 11, scope: !8242)
!8245 = distinct !{!8245, !8240, !8246}
!8246 = !DILocation(line: 227, column: 2, scope: !8225)
!8247 = !DILocation(line: 228, column: 8, scope: !8225)
!8248 = !DILocation(line: 230, column: 2, scope: !8225)
!8249 = distinct !DISubprogram(name: "memcmp", scope: !8014, file: !8014, line: 239, type: !8250, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8252)
!8250 = !DISubroutineType(types: !8251)
!8251 = !{!103, !13, !13, !356}
!8252 = !{!8253, !8254, !8255, !8256, !8257}
!8253 = !DILocalVariable(name: "m1", arg: 1, scope: !8249, file: !8014, line: 239, type: !13)
!8254 = !DILocalVariable(name: "m2", arg: 2, scope: !8249, file: !8014, line: 239, type: !13)
!8255 = !DILocalVariable(name: "n", arg: 3, scope: !8249, file: !8014, line: 239, type: !356)
!8256 = !DILocalVariable(name: "c1", scope: !8249, file: !8014, line: 241, type: !155)
!8257 = !DILocalVariable(name: "c2", scope: !8249, file: !8014, line: 242, type: !155)
!8258 = !DILocation(line: 0, scope: !8249)
!8259 = !DILocation(line: 244, column: 7, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8249, file: !8014, line: 244, column: 6)
!8261 = !DILocation(line: 244, column: 6, scope: !8249)
!8262 = !DILocation(line: 248, column: 10, scope: !8249)
!8263 = !DILocation(line: 248, column: 14, scope: !8249)
!8264 = !DILocation(line: 248, column: 19, scope: !8249)
!8265 = !DILocation(line: 248, column: 2, scope: !8249)
!8266 = !DILocation(line: 248, column: 23, scope: !8249)
!8267 = !DILocation(line: 248, column: 30, scope: !8249)
!8268 = !DILocation(line: 248, column: 27, scope: !8249)
!8269 = !DILocation(line: 249, column: 5, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8249, file: !8014, line: 248, column: 36)
!8271 = !DILocation(line: 250, column: 5, scope: !8270)
!8272 = distinct !{!8272, !8265, !8273}
!8273 = !DILocation(line: 251, column: 2, scope: !8249)
!8274 = !DILocation(line: 253, column: 9, scope: !8249)
!8275 = !DILocation(line: 253, column: 15, scope: !8249)
!8276 = !DILocation(line: 253, column: 13, scope: !8249)
!8277 = !DILocation(line: 253, column: 2, scope: !8249)
!8278 = !DILocation(line: 254, column: 1, scope: !8249)
!8279 = distinct !DISubprogram(name: "memmove", scope: !8014, file: !8014, line: 263, type: !8280, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8282)
!8280 = !DISubroutineType(types: !8281)
!8281 = !{!102, !102, !13, !356}
!8282 = !{!8283, !8284, !8285, !8286, !8287}
!8283 = !DILocalVariable(name: "d", arg: 1, scope: !8279, file: !8014, line: 263, type: !102)
!8284 = !DILocalVariable(name: "s", arg: 2, scope: !8279, file: !8014, line: 263, type: !13)
!8285 = !DILocalVariable(name: "n", arg: 3, scope: !8279, file: !8014, line: 263, type: !356)
!8286 = !DILocalVariable(name: "dest", scope: !8279, file: !8014, line: 265, type: !1097)
!8287 = !DILocalVariable(name: "src", scope: !8279, file: !8014, line: 266, type: !155)
!8288 = !DILocation(line: 0, scope: !8279)
!8289 = !DILocation(line: 268, column: 21, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8279, file: !8014, line: 268, column: 6)
!8291 = !DILocation(line: 268, column: 28, scope: !8290)
!8292 = !DILocation(line: 268, column: 6, scope: !8279)
!8293 = !DILocation(line: 280, column: 12, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8290, file: !8014, line: 278, column: 9)
!8295 = !DILocation(line: 280, column: 3, scope: !8294)
!8296 = !DILocation(line: 275, column: 5, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8298, file: !8014, line: 274, column: 17)
!8298 = distinct !DILexicalBlock(scope: !8290, file: !8014, line: 268, column: 33)
!8299 = !DILocation(line: 276, column: 14, scope: !8297)
!8300 = !DILocation(line: 276, column: 4, scope: !8297)
!8301 = !DILocation(line: 276, column: 12, scope: !8297)
!8302 = !DILocation(line: 274, column: 12, scope: !8298)
!8303 = !DILocation(line: 274, column: 3, scope: !8298)
!8304 = distinct !{!8304, !8303, !8305}
!8305 = !DILocation(line: 277, column: 3, scope: !8298)
!8306 = !DILocation(line: 281, column: 12, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8294, file: !8014, line: 280, column: 17)
!8308 = !DILocation(line: 281, column: 10, scope: !8307)
!8309 = !DILocation(line: 282, column: 8, scope: !8307)
!8310 = !DILocation(line: 283, column: 7, scope: !8307)
!8311 = !DILocation(line: 284, column: 5, scope: !8307)
!8312 = distinct !{!8312, !8295, !8313}
!8313 = !DILocation(line: 285, column: 3, scope: !8294)
!8314 = !DILocation(line: 288, column: 2, scope: !8279)
!8315 = distinct !DISubprogram(name: "memcpy", scope: !8014, file: !8014, line: 298, type: !8316, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8320)
!8316 = !DISubroutineType(types: !8317)
!8317 = !{!102, !8318, !8319, !356}
!8318 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8319 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8320 = !{!8321, !8322, !8323, !8324, !8325}
!8321 = !DILocalVariable(name: "d", arg: 1, scope: !8315, file: !8014, line: 298, type: !8318)
!8322 = !DILocalVariable(name: "s", arg: 2, scope: !8315, file: !8014, line: 298, type: !8319)
!8323 = !DILocalVariable(name: "n", arg: 3, scope: !8315, file: !8014, line: 298, type: !356)
!8324 = !DILocalVariable(name: "d_byte", scope: !8315, file: !8014, line: 302, type: !233)
!8325 = !DILocalVariable(name: "s_byte", scope: !8315, file: !8014, line: 303, type: !3113)
!8326 = !DILocation(line: 0, scope: !8315)
!8327 = !DILocation(line: 337, column: 11, scope: !8315)
!8328 = !DILocation(line: 337, column: 2, scope: !8315)
!8329 = !DILocation(line: 338, column: 25, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8315, file: !8014, line: 337, column: 16)
!8331 = !DILocation(line: 338, column: 17, scope: !8330)
!8332 = !DILocation(line: 338, column: 11, scope: !8330)
!8333 = !DILocation(line: 338, column: 15, scope: !8330)
!8334 = !DILocation(line: 339, column: 4, scope: !8330)
!8335 = distinct !{!8335, !8328, !8336}
!8336 = !DILocation(line: 340, column: 2, scope: !8315)
!8337 = !DILocation(line: 342, column: 2, scope: !8315)
!8338 = distinct !DISubprogram(name: "memset", scope: !8014, file: !8014, line: 352, type: !8339, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8341)
!8339 = !DISubroutineType(types: !8340)
!8340 = !{!102, !102, !103, !356}
!8341 = !{!8342, !8343, !8344, !8345, !8346}
!8342 = !DILocalVariable(name: "buf", arg: 1, scope: !8338, file: !8014, line: 352, type: !102)
!8343 = !DILocalVariable(name: "c", arg: 2, scope: !8338, file: !8014, line: 352, type: !103)
!8344 = !DILocalVariable(name: "n", arg: 3, scope: !8338, file: !8014, line: 352, type: !356)
!8345 = !DILocalVariable(name: "d_byte", scope: !8338, file: !8014, line: 356, type: !233)
!8346 = !DILocalVariable(name: "c_byte", scope: !8338, file: !8014, line: 357, type: !164)
!8347 = !DILocation(line: 0, scope: !8338)
!8348 = !DILocation(line: 357, column: 25, scope: !8338)
!8349 = !DILocation(line: 389, column: 11, scope: !8338)
!8350 = !DILocation(line: 389, column: 2, scope: !8338)
!8351 = !DILocation(line: 390, column: 11, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8338, file: !8014, line: 389, column: 16)
!8353 = !DILocation(line: 390, column: 15, scope: !8352)
!8354 = !DILocation(line: 391, column: 4, scope: !8352)
!8355 = distinct !{!8355, !8350, !8356}
!8356 = !DILocation(line: 392, column: 2, scope: !8338)
!8357 = !DILocation(line: 394, column: 2, scope: !8338)
!8358 = distinct !DISubprogram(name: "memchr", scope: !8014, file: !8014, line: 404, type: !8359, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !8361)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{!102, !13, !103, !356}
!8361 = !{!8362, !8363, !8364, !8365}
!8362 = !DILocalVariable(name: "s", arg: 1, scope: !8358, file: !8014, line: 404, type: !13)
!8363 = !DILocalVariable(name: "c", arg: 2, scope: !8358, file: !8014, line: 404, type: !103)
!8364 = !DILocalVariable(name: "n", arg: 3, scope: !8358, file: !8014, line: 404, type: !356)
!8365 = !DILocalVariable(name: "p", scope: !8366, file: !8014, line: 407, type: !3113)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !8014, line: 406, column: 14)
!8367 = distinct !DILexicalBlock(scope: !8358, file: !8014, line: 406, column: 6)
!8368 = !DILocation(line: 0, scope: !8358)
!8369 = !DILocation(line: 406, column: 8, scope: !8367)
!8370 = !DILocation(line: 406, column: 6, scope: !8358)
!8371 = !DILocation(line: 409, column: 3, scope: !8366)
!8372 = !DILocation(line: 0, scope: !8366)
!8373 = !DILocation(line: 410, column: 8, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !8014, line: 410, column: 8)
!8375 = distinct !DILexicalBlock(scope: !8366, file: !8014, line: 409, column: 6)
!8376 = !DILocation(line: 410, column: 13, scope: !8374)
!8377 = !DILocation(line: 410, column: 8, scope: !8375)
!8378 = distinct !{!8378, !8371, !8379}
!8379 = !DILocation(line: 414, column: 20, scope: !8366)
!8380 = !DILocation(line: 417, column: 2, scope: !8358)
!8381 = !DILocation(line: 418, column: 1, scope: !8358)
!8382 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !545, file: !545, line: 23, type: !3466, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8383)
!8383 = !{!8384}
!8384 = !DILocalVariable(name: "hook", arg: 1, scope: !8382, file: !545, line: 23, type: !117)
!8385 = !DILocation(line: 0, scope: !8382)
!8386 = !DILocation(line: 25, column: 15, scope: !8382)
!8387 = !DILocation(line: 26, column: 1, scope: !8382)
!8388 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !545, file: !545, line: 14, type: !118, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8389)
!8389 = !{!8390}
!8390 = !DILocalVariable(name: "c", arg: 1, scope: !8388, file: !545, line: 14, type: !103)
!8391 = !DILocation(line: 0, scope: !8388)
!8392 = !DILocation(line: 18, column: 2, scope: !8388)
!8393 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !545, file: !545, line: 28, type: !8394, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8396)
!8394 = !DISubroutineType(types: !8395)
!8395 = !{!103, !103, !541}
!8396 = !{!8397, !8398}
!8397 = !DILocalVariable(name: "c", arg: 1, scope: !8393, file: !545, line: 28, type: !103)
!8398 = !DILocalVariable(name: "stream", arg: 2, scope: !8393, file: !545, line: 28, type: !541)
!8399 = !DILocation(line: 0, scope: !8393)
!8400 = !DILocation(line: 30, column: 27, scope: !8393)
!8401 = !DILocation(line: 30, column: 50, scope: !8393)
!8402 = !DILocation(line: 30, column: 9, scope: !8393)
!8403 = !DILocation(line: 30, column: 2, scope: !8393)
!8404 = distinct !DISubprogram(name: "fputc", scope: !545, file: !545, line: 41, type: !8394, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8405)
!8405 = !{!8406, !8407}
!8406 = !DILocalVariable(name: "c", arg: 1, scope: !8404, file: !545, line: 41, type: !103)
!8407 = !DILocalVariable(name: "stream", arg: 2, scope: !8404, file: !545, line: 41, type: !541)
!8408 = !DILocation(line: 0, scope: !8404)
!8409 = !DILocation(line: 43, column: 9, scope: !8404)
!8410 = !DILocation(line: 43, column: 2, scope: !8404)
!8411 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8412, file: !8412, line: 72, type: !8394, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8413)
!8412 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/console/echo")
!8413 = !{!8414, !8415}
!8414 = !DILocalVariable(name: "c", arg: 1, scope: !8411, file: !8412, line: 72, type: !103)
!8415 = !DILocalVariable(name: "stream", arg: 2, scope: !8411, file: !8412, line: 72, type: !541)
!8416 = !DILocation(line: 0, scope: !8411)
!8417 = !DILocation(line: 81, column: 2, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8411, file: !8412, line: 81, column: 2)
!8419 = !{i64 2155123564}
!8420 = !DILocation(line: 82, column: 9, scope: !8411)
!8421 = !DILocation(line: 82, column: 2, scope: !8411)
!8422 = distinct !DISubprogram(name: "fputs", scope: !545, file: !545, line: 46, type: !8423, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8426)
!8423 = !DISubroutineType(types: !8424)
!8424 = !{!103, !8018, !8425}
!8425 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !541)
!8426 = !{!8427, !8428, !8429, !8430}
!8427 = !DILocalVariable(name: "s", arg: 1, scope: !8422, file: !545, line: 46, type: !8018)
!8428 = !DILocalVariable(name: "stream", arg: 2, scope: !8422, file: !545, line: 46, type: !8425)
!8429 = !DILocalVariable(name: "len", scope: !8422, file: !545, line: 48, type: !103)
!8430 = !DILocalVariable(name: "ret", scope: !8422, file: !545, line: 49, type: !103)
!8431 = !DILocation(line: 0, scope: !8422)
!8432 = !DILocation(line: 48, column: 12, scope: !8422)
!8433 = !DILocation(line: 51, column: 8, scope: !8422)
!8434 = !DILocation(line: 53, column: 13, scope: !8422)
!8435 = !DILocation(line: 53, column: 9, scope: !8422)
!8436 = !DILocation(line: 53, column: 2, scope: !8422)
!8437 = distinct !DISubprogram(name: "fwrite", scope: !545, file: !545, line: 99, type: !8438, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8440)
!8438 = !DISubroutineType(types: !8439)
!8439 = !{!356, !8319, !356, !356, !8425}
!8440 = !{!8441, !8442, !8443, !8444}
!8441 = !DILocalVariable(name: "ptr", arg: 1, scope: !8437, file: !545, line: 99, type: !8319)
!8442 = !DILocalVariable(name: "size", arg: 2, scope: !8437, file: !545, line: 99, type: !356)
!8443 = !DILocalVariable(name: "nitems", arg: 3, scope: !8437, file: !545, line: 99, type: !356)
!8444 = !DILocalVariable(name: "stream", arg: 4, scope: !8437, file: !545, line: 100, type: !8425)
!8445 = !DILocation(line: 0, scope: !8437)
!8446 = !DILocation(line: 102, column: 9, scope: !8437)
!8447 = !DILocation(line: 102, column: 2, scope: !8437)
!8448 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8412, file: !8412, line: 96, type: !8438, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8449)
!8449 = !{!8450, !8451, !8452, !8453}
!8450 = !DILocalVariable(name: "ptr", arg: 1, scope: !8448, file: !8412, line: 96, type: !8319)
!8451 = !DILocalVariable(name: "size", arg: 2, scope: !8448, file: !8412, line: 96, type: !356)
!8452 = !DILocalVariable(name: "nitems", arg: 3, scope: !8448, file: !8412, line: 96, type: !356)
!8453 = !DILocalVariable(name: "stream", arg: 4, scope: !8448, file: !8412, line: 96, type: !8425)
!8454 = !DILocation(line: 0, scope: !8448)
!8455 = !DILocation(line: 107, column: 2, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8448, file: !8412, line: 107, column: 2)
!8457 = !{i64 2155123668}
!8458 = !DILocation(line: 108, column: 9, scope: !8448)
!8459 = !DILocation(line: 108, column: 2, scope: !8448)
!8460 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !545, file: !545, line: 56, type: !8438, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8461)
!8461 = !{!8462, !8463, !8464, !8465, !8466, !8467, !8468, !8469}
!8462 = !DILocalVariable(name: "ptr", arg: 1, scope: !8460, file: !545, line: 56, type: !8319)
!8463 = !DILocalVariable(name: "size", arg: 2, scope: !8460, file: !545, line: 56, type: !356)
!8464 = !DILocalVariable(name: "nitems", arg: 3, scope: !8460, file: !545, line: 57, type: !356)
!8465 = !DILocalVariable(name: "stream", arg: 4, scope: !8460, file: !545, line: 57, type: !8425)
!8466 = !DILocalVariable(name: "i", scope: !8460, file: !545, line: 59, type: !356)
!8467 = !DILocalVariable(name: "j", scope: !8460, file: !545, line: 60, type: !356)
!8468 = !DILocalVariable(name: "p", scope: !8460, file: !545, line: 61, type: !3113)
!8469 = !DILabel(scope: !8460, name: "done", file: !545, line: 82)
!8470 = !DILocation(line: 0, scope: !8460)
!8471 = !DILocation(line: 63, column: 14, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8460, file: !545, line: 63, column: 6)
!8473 = !DILocation(line: 63, column: 24, scope: !8472)
!8474 = !DILocation(line: 72, column: 3, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8460, file: !545, line: 70, column: 5)
!8476 = !DILocation(line: 0, scope: !8475)
!8477 = !DILocation(line: 73, column: 8, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8479, file: !545, line: 73, column: 8)
!8479 = distinct !DILexicalBlock(scope: !8475, file: !545, line: 72, column: 6)
!8480 = !DILocation(line: 73, column: 29, scope: !8478)
!8481 = !DILocation(line: 73, column: 27, scope: !8478)
!8482 = !DILocation(line: 73, column: 21, scope: !8478)
!8483 = !DILocation(line: 73, column: 33, scope: !8478)
!8484 = !DILocation(line: 73, column: 8, scope: !8479)
!8485 = !DILocation(line: 76, column: 5, scope: !8479)
!8486 = !DILocation(line: 77, column: 14, scope: !8475)
!8487 = !DILocation(line: 77, column: 3, scope: !8479)
!8488 = distinct !{!8488, !8474, !8489}
!8489 = !DILocation(line: 77, column: 17, scope: !8475)
!8490 = !DILocation(line: 79, column: 4, scope: !8475)
!8491 = !DILocation(line: 80, column: 13, scope: !8460)
!8492 = !DILocation(line: 80, column: 2, scope: !8475)
!8493 = distinct !{!8493, !8494, !8495}
!8494 = !DILocation(line: 70, column: 2, scope: !8460)
!8495 = !DILocation(line: 80, column: 16, scope: !8460)
!8496 = !DILocation(line: 82, column: 1, scope: !8460)
!8497 = !DILocation(line: 83, column: 17, scope: !8460)
!8498 = !DILocation(line: 83, column: 2, scope: !8460)
!8499 = !DILocation(line: 84, column: 1, scope: !8460)
!8500 = distinct !DISubprogram(name: "puts", scope: !545, file: !545, line: 106, type: !8501, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8503)
!8501 = !DISubroutineType(types: !8502)
!8502 = !{!103, !155}
!8503 = !{!8504}
!8504 = !DILocalVariable(name: "s", arg: 1, scope: !8500, file: !545, line: 106, type: !155)
!8505 = !DILocation(line: 0, scope: !8500)
!8506 = !DILocation(line: 108, column: 6, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8500, file: !545, line: 108, column: 6)
!8508 = !DILocation(line: 108, column: 23, scope: !8507)
!8509 = !DILocation(line: 108, column: 6, scope: !8500)
!8510 = !DILocation(line: 112, column: 9, scope: !8500)
!8511 = !DILocation(line: 112, column: 29, scope: !8500)
!8512 = !DILocation(line: 112, column: 2, scope: !8500)
!8513 = !DILocation(line: 113, column: 1, scope: !8500)
!8514 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !686, file: !686, line: 368, type: !739, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8515)
!8515 = !{!8516}
!8516 = !DILocalVariable(name: "dev", arg: 1, scope: !8514, file: !686, line: 368, type: !715)
!8517 = !DILocation(line: 0, scope: !8514)
!8518 = !DILocation(line: 370, column: 2, scope: !8514)
!8519 = !DILocation(line: 371, column: 1, scope: !8514)
!8520 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !686, file: !686, line: 243, type: !8521, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8523)
!8521 = !DISubroutineType(types: !8522)
!8522 = !{null, !103, !103, !715}
!8523 = !{!8524, !8525, !8526, !8527, !8529}
!8524 = !DILocalVariable(name: "min", arg: 1, scope: !8520, file: !686, line: 243, type: !103)
!8525 = !DILocalVariable(name: "max", arg: 2, scope: !8520, file: !686, line: 243, type: !103)
!8526 = !DILocalVariable(name: "dev", arg: 3, scope: !8520, file: !686, line: 243, type: !715)
!8527 = !DILocalVariable(name: "data", scope: !8520, file: !686, line: 245, type: !8528)
!8528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 32)
!8529 = !DILocalVariable(name: "line", scope: !8520, file: !686, line: 246, type: !103)
!8530 = !DILocation(line: 0, scope: !8520)
!8531 = !DILocation(line: 245, column: 38, scope: !8520)
!8532 = !DILocation(line: 249, column: 24, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8534, file: !686, line: 249, column: 2)
!8534 = distinct !DILexicalBlock(scope: !8520, file: !686, line: 249, column: 2)
!8535 = !DILocation(line: 249, column: 2, scope: !8534)
!8536 = !DILocation(line: 251, column: 7, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8538, file: !686, line: 251, column: 7)
!8538 = distinct !DILexicalBlock(scope: !8533, file: !686, line: 249, column: 39)
!8539 = !DILocation(line: 251, column: 7, scope: !8538)
!8540 = !DILocation(line: 253, column: 4, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8537, file: !686, line: 251, column: 36)
!8542 = !DILocation(line: 256, column: 24, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8541, file: !686, line: 256, column: 8)
!8544 = !DILocation(line: 256, column: 9, scope: !8543)
!8545 = !DILocation(line: 256, column: 8, scope: !8541)
!8546 = !DILocation(line: 260, column: 43, scope: !8541)
!8547 = !DILocation(line: 260, column: 4, scope: !8541)
!8548 = !DILocation(line: 261, column: 3, scope: !8541)
!8549 = !DILocation(line: 249, column: 35, scope: !8533)
!8550 = distinct !{!8550, !8535, !8551}
!8551 = !DILocation(line: 262, column: 2, scope: !8534)
!8552 = !DILocation(line: 263, column: 1, scope: !8520)
!8553 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !686, file: !686, line: 158, type: !118, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8554)
!8554 = !{!8555}
!8555 = !DILocalVariable(name: "line", arg: 1, scope: !8553, file: !686, line: 158, type: !103)
!8556 = !DILocation(line: 0, scope: !8553)
!8557 = !DILocation(line: 170, column: 38, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8559, file: !686, line: 160, column: 17)
!8559 = distinct !DILexicalBlock(scope: !8553, file: !686, line: 160, column: 6)
!8560 = !DILocation(line: 170, column: 10, scope: !8558)
!8561 = !DILocation(line: 176, column: 1, scope: !8553)
!8562 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !686, file: !686, line: 183, type: !8563, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8565)
!8563 = !DISubroutineType(types: !8564)
!8564 = !{null, !103}
!8565 = !{!8566}
!8566 = !DILocalVariable(name: "line", arg: 1, scope: !8562, file: !686, line: 183, type: !103)
!8567 = !DILocation(line: 0, scope: !8562)
!8568 = !DILocation(line: 195, column: 28, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8570, file: !686, line: 185, column: 17)
!8570 = distinct !DILexicalBlock(scope: !8562, file: !686, line: 185, column: 6)
!8571 = !DILocation(line: 195, column: 3, scope: !8569)
!8572 = !DILocation(line: 200, column: 1, scope: !8562)
!8573 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8574, file: !8574, line: 910, type: !7012, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8575)
!8574 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8575 = !{!8576}
!8576 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8573, file: !8574, line: 910, type: !132)
!8577 = !DILocation(line: 0, scope: !8573)
!8578 = !DILocation(line: 912, column: 3, scope: !8573)
!8579 = !DILocation(line: 913, column: 1, scope: !8573)
!8580 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8574, file: !8574, line: 834, type: !7928, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8581)
!8581 = !{!8582}
!8582 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8580, file: !8574, line: 834, type: !132)
!8583 = !DILocation(line: 0, scope: !8580)
!8584 = !DILocation(line: 836, column: 11, scope: !8580)
!8585 = !DILocation(line: 836, column: 40, scope: !8580)
!8586 = !DILocation(line: 836, column: 3, scope: !8580)
!8587 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !686, file: !686, line: 304, type: !739, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8588)
!8588 = !{!8589}
!8589 = !DILocalVariable(name: "dev", arg: 1, scope: !8587, file: !686, line: 304, type: !715)
!8590 = !DILocation(line: 0, scope: !8587)
!8591 = !DILocation(line: 306, column: 2, scope: !8587)
!8592 = !DILocation(line: 307, column: 1, scope: !8587)
!8593 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !686, file: !686, line: 299, type: !739, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8594)
!8594 = !{!8595}
!8595 = !DILocalVariable(name: "dev", arg: 1, scope: !8593, file: !686, line: 299, type: !715)
!8596 = !DILocation(line: 0, scope: !8593)
!8597 = !DILocation(line: 301, column: 2, scope: !8593)
!8598 = !DILocation(line: 302, column: 1, scope: !8593)
!8599 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !686, file: !686, line: 294, type: !739, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8600)
!8600 = !{!8601}
!8601 = !DILocalVariable(name: "dev", arg: 1, scope: !8599, file: !686, line: 294, type: !715)
!8602 = !DILocation(line: 0, scope: !8599)
!8603 = !DILocation(line: 296, column: 2, scope: !8599)
!8604 = !DILocation(line: 297, column: 1, scope: !8599)
!8605 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !686, file: !686, line: 397, type: !739, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8606)
!8606 = !{!8607}
!8607 = !DILocalVariable(name: "dev", arg: 1, scope: !8605, file: !686, line: 397, type: !715)
!8608 = !DILocation(line: 0, scope: !8605)
!8609 = !DILocation(line: 399, column: 2, scope: !8605)
!8610 = !DILocation(line: 400, column: 1, scope: !8605)
!8611 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !686, file: !686, line: 392, type: !739, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8612)
!8612 = !{!8613}
!8613 = !DILocalVariable(name: "dev", arg: 1, scope: !8611, file: !686, line: 392, type: !715)
!8614 = !DILocation(line: 0, scope: !8611)
!8615 = !DILocation(line: 394, column: 2, scope: !8611)
!8616 = !DILocation(line: 395, column: 1, scope: !8611)
!8617 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !686, file: !686, line: 289, type: !739, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8618)
!8618 = !{!8619}
!8619 = !DILocalVariable(name: "dev", arg: 1, scope: !8617, file: !686, line: 289, type: !715)
!8620 = !DILocation(line: 0, scope: !8617)
!8621 = !DILocation(line: 291, column: 2, scope: !8617)
!8622 = !DILocation(line: 292, column: 1, scope: !8617)
!8623 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !686, file: !686, line: 387, type: !739, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8624)
!8624 = !{!8625}
!8625 = !DILocalVariable(name: "dev", arg: 1, scope: !8623, file: !686, line: 387, type: !715)
!8626 = !DILocation(line: 0, scope: !8623)
!8627 = !DILocation(line: 389, column: 2, scope: !8623)
!8628 = !DILocation(line: 390, column: 1, scope: !8623)
!8629 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !686, file: !686, line: 382, type: !739, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8630)
!8630 = !{!8631}
!8631 = !DILocalVariable(name: "dev", arg: 1, scope: !8629, file: !686, line: 382, type: !715)
!8632 = !DILocation(line: 0, scope: !8629)
!8633 = !DILocation(line: 384, column: 2, scope: !8629)
!8634 = !DILocation(line: 385, column: 1, scope: !8629)
!8635 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !686, file: !686, line: 373, type: !739, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8636)
!8636 = !{!8637}
!8637 = !DILocalVariable(name: "dev", arg: 1, scope: !8635, file: !686, line: 373, type: !715)
!8638 = !DILocation(line: 0, scope: !8635)
!8639 = !DILocation(line: 375, column: 2, scope: !8635)
!8640 = !DILocation(line: 376, column: 1, scope: !8635)
!8641 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !686, file: !686, line: 284, type: !739, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8642)
!8642 = !{!8643}
!8643 = !DILocalVariable(name: "dev", arg: 1, scope: !8641, file: !686, line: 284, type: !715)
!8644 = !DILocation(line: 0, scope: !8641)
!8645 = !DILocation(line: 286, column: 2, scope: !8641)
!8646 = !DILocation(line: 287, column: 1, scope: !8641)
!8647 = distinct !DISubprogram(name: "stm32_exti_init", scope: !686, file: !686, line: 416, type: !713, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8648)
!8648 = !{!8649}
!8649 = !DILocalVariable(name: "dev", arg: 1, scope: !8647, file: !686, line: 416, type: !715)
!8650 = !DILocation(line: 0, scope: !8647)
!8651 = !DILocation(line: 418, column: 2, scope: !8647)
!8652 = !DILocation(line: 420, column: 2, scope: !8647)
!8653 = !DILocation(line: 0, scope: !738)
!8654 = !DILocation(line: 493, column: 2, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !738, file: !686, line: 493, column: 2)
!8656 = !DILocation(line: 497, column: 2, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !738, file: !686, line: 497, column: 2)
!8658 = !DILocation(line: 507, column: 2, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !738, file: !686, line: 507, column: 2)
!8660 = !DILocation(line: 512, column: 2, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !738, file: !686, line: 512, column: 2)
!8662 = !DILocation(line: 516, column: 2, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !738, file: !686, line: 516, column: 2)
!8664 = !DILocation(line: 523, column: 2, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !738, file: !686, line: 523, column: 2)
!8666 = !DILocation(line: 527, column: 2, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !738, file: !686, line: 527, column: 2)
!8668 = !DILocation(line: 581, column: 2, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !738, file: !686, line: 581, column: 2)
!8670 = !DILocation(line: 586, column: 2, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !738, file: !686, line: 586, column: 2)
!8672 = !DILocation(line: 591, column: 2, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !738, file: !686, line: 591, column: 2)
!8674 = !DILocation(line: 595, column: 2, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !738, file: !686, line: 595, column: 2)
!8676 = !DILocation(line: 607, column: 1, scope: !738)
!8677 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !686, file: !686, line: 112, type: !8563, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8678)
!8678 = !{!8679, !8680}
!8679 = !DILocalVariable(name: "line", arg: 1, scope: !8677, file: !686, line: 112, type: !103)
!8680 = !DILocalVariable(name: "irqnum", scope: !8677, file: !686, line: 114, type: !103)
!8681 = !DILocation(line: 0, scope: !8677)
!8682 = !DILocation(line: 121, column: 11, scope: !8677)
!8683 = !DILocation(line: 130, column: 26, scope: !8677)
!8684 = !DILocation(line: 130, column: 2, scope: !8677)
!8685 = !DILocation(line: 134, column: 2, scope: !8677)
!8686 = !DILocation(line: 135, column: 1, scope: !8677)
!8687 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8574, file: !8574, line: 268, type: !7012, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8688)
!8688 = !{!8689}
!8689 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8687, file: !8574, line: 268, type: !132)
!8690 = !DILocation(line: 0, scope: !8687)
!8691 = !DILocation(line: 270, column: 3, scope: !8687)
!8692 = !DILocation(line: 271, column: 1, scope: !8687)
!8693 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !686, file: !686, line: 137, type: !8563, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8694)
!8694 = !{!8695}
!8695 = !DILocalVariable(name: "line", arg: 1, scope: !8693, file: !686, line: 137, type: !103)
!8696 = !DILocation(line: 0, scope: !8693)
!8697 = !DILocation(line: 141, column: 11, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8693, file: !686, line: 141, column: 6)
!8699 = !DILocation(line: 141, column: 6, scope: !8693)
!8700 = !DILocation(line: 145, column: 28, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8698, file: !686, line: 141, column: 17)
!8702 = !DILocation(line: 145, column: 3, scope: !8701)
!8703 = !DILocation(line: 147, column: 2, scope: !8701)
!8704 = !DILocation(line: 151, column: 1, scope: !8693)
!8705 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8574, file: !8574, line: 309, type: !7012, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8706)
!8706 = !{!8707}
!8707 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8705, file: !8574, line: 309, type: !132)
!8708 = !DILocation(line: 0, scope: !8705)
!8709 = !DILocation(line: 311, column: 3, scope: !8705)
!8710 = !DILocation(line: 312, column: 1, scope: !8705)
!8711 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !686, file: !686, line: 202, type: !8712, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8714)
!8712 = !DISubroutineType(types: !8713)
!8713 = !{null, !103, !103}
!8714 = !{!8715, !8716}
!8715 = !DILocalVariable(name: "line", arg: 1, scope: !8711, file: !686, line: 202, type: !103)
!8716 = !DILocalVariable(name: "trigger", arg: 2, scope: !8711, file: !686, line: 202, type: !103)
!8717 = !DILocation(line: 0, scope: !8711)
!8718 = !DILocation(line: 211, column: 2, scope: !8711)
!8719 = !DILocation(line: 213, column: 36, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8711, file: !686, line: 211, column: 19)
!8721 = !DILocation(line: 213, column: 3, scope: !8720)
!8722 = !DILocation(line: 214, column: 3, scope: !8720)
!8723 = !DILocation(line: 215, column: 3, scope: !8720)
!8724 = !DILocation(line: 217, column: 35, scope: !8720)
!8725 = !DILocation(line: 217, column: 3, scope: !8720)
!8726 = !DILocation(line: 218, column: 3, scope: !8720)
!8727 = !DILocation(line: 219, column: 3, scope: !8720)
!8728 = !DILocation(line: 221, column: 36, scope: !8720)
!8729 = !DILocation(line: 221, column: 3, scope: !8720)
!8730 = !DILocation(line: 222, column: 3, scope: !8720)
!8731 = !DILocation(line: 223, column: 3, scope: !8720)
!8732 = !DILocation(line: 225, column: 35, scope: !8720)
!8733 = !DILocation(line: 225, column: 3, scope: !8720)
!8734 = !DILocation(line: 226, column: 3, scope: !8720)
!8735 = !DILocation(line: 227, column: 3, scope: !8720)
!8736 = !DILocation(line: 232, column: 1, scope: !8711)
!8737 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8574, file: !8574, line: 573, type: !7012, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8738)
!8738 = !{!8739}
!8739 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8737, file: !8574, line: 573, type: !132)
!8740 = !DILocation(line: 0, scope: !8737)
!8741 = !DILocation(line: 575, column: 3, scope: !8737)
!8742 = !DILocation(line: 577, column: 1, scope: !8737)
!8743 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8574, file: !8574, line: 703, type: !7012, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8744)
!8744 = !{!8745}
!8745 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8743, file: !8574, line: 703, type: !132)
!8746 = !DILocation(line: 0, scope: !8743)
!8747 = !DILocation(line: 705, column: 3, scope: !8743)
!8748 = !DILocation(line: 706, column: 1, scope: !8743)
!8749 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8574, file: !8574, line: 529, type: !7012, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8750)
!8750 = !{!8751}
!8751 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8749, file: !8574, line: 529, type: !132)
!8752 = !DILocation(line: 0, scope: !8749)
!8753 = !DILocation(line: 531, column: 3, scope: !8749)
!8754 = !DILocation(line: 533, column: 1, scope: !8749)
!8755 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8574, file: !8574, line: 661, type: !7012, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8756)
!8756 = !{!8757}
!8757 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8755, file: !8574, line: 661, type: !132)
!8758 = !DILocation(line: 0, scope: !8755)
!8759 = !DILocation(line: 663, column: 3, scope: !8755)
!8760 = !DILocation(line: 664, column: 1, scope: !8755)
!8761 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !686, file: !686, line: 433, type: !8762, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8764)
!8762 = !DISubroutineType(types: !8763)
!8763 = !{!103, !103, !726, !102}
!8764 = !{!8765, !8766, !8767, !8768, !8770}
!8765 = !DILocalVariable(name: "line", arg: 1, scope: !8761, file: !686, line: 433, type: !103)
!8766 = !DILocalVariable(name: "cb", arg: 2, scope: !8761, file: !686, line: 433, type: !726)
!8767 = !DILocalVariable(name: "arg", arg: 3, scope: !8761, file: !686, line: 433, type: !102)
!8768 = !DILocalVariable(name: "dev", scope: !8761, file: !686, line: 435, type: !8769)
!8769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !715)
!8770 = !DILocalVariable(name: "data", scope: !8761, file: !686, line: 436, type: !8528)
!8771 = !DILocation(line: 0, scope: !8761)
!8772 = !DILocation(line: 438, column: 21, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8761, file: !686, line: 438, column: 6)
!8774 = !DILocation(line: 438, column: 6, scope: !8773)
!8775 = !DILocation(line: 438, column: 6, scope: !8761)
!8776 = !DILocation(line: 442, column: 20, scope: !8761)
!8777 = !DILocation(line: 443, column: 17, scope: !8761)
!8778 = !DILocation(line: 443, column: 22, scope: !8761)
!8779 = !DILocation(line: 445, column: 2, scope: !8761)
!8780 = !DILocation(line: 446, column: 1, scope: !8761)
!8781 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !686, file: !686, line: 448, type: !8563, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8782)
!8782 = !{!8783, !8784, !8785}
!8783 = !DILocalVariable(name: "line", arg: 1, scope: !8781, file: !686, line: 448, type: !103)
!8784 = !DILocalVariable(name: "dev", scope: !8781, file: !686, line: 450, type: !8769)
!8785 = !DILocalVariable(name: "data", scope: !8781, file: !686, line: 451, type: !8528)
!8786 = !DILocation(line: 0, scope: !8781)
!8787 = !DILocation(line: 453, column: 17, scope: !8781)
!8788 = !DILocation(line: 453, column: 20, scope: !8781)
!8789 = !DILocation(line: 454, column: 17, scope: !8781)
!8790 = !DILocation(line: 454, column: 22, scope: !8781)
!8791 = !DILocation(line: 455, column: 1, scope: !8781)
!8792 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !877, file: !877, line: 183, type: !913, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !8793)
!8793 = !{!8794, !8795, !8796, !8797, !8798}
!8794 = !DILocalVariable(name: "dev", arg: 1, scope: !8792, file: !877, line: 183, type: !904)
!8795 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8792, file: !877, line: 184, type: !915)
!8796 = !DILocalVariable(name: "pclken", scope: !8792, file: !877, line: 186, type: !867)
!8797 = !DILocalVariable(name: "reg", scope: !8792, file: !877, line: 187, type: !1623)
!8798 = !DILocalVariable(name: "reg_val", scope: !8792, file: !877, line: 188, type: !132)
!8799 = !DILocation(line: 0, scope: !8792)
!8800 = !DILocation(line: 192, column: 6, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8792, file: !877, line: 192, column: 6)
!8802 = !DILocation(line: 192, column: 6, scope: !8792)
!8803 = !DILocation(line: 197, column: 52, scope: !8792)
!8804 = !DILocation(line: 197, column: 8, scope: !8792)
!8805 = !DILocation(line: 198, column: 12, scope: !8792)
!8806 = !DILocation(line: 199, column: 21, scope: !8792)
!8807 = !DILocation(line: 199, column: 10, scope: !8792)
!8808 = !DILocation(line: 200, column: 7, scope: !8792)
!8809 = !DILocation(line: 202, column: 2, scope: !8792)
!8810 = !DILocation(line: 203, column: 1, scope: !8792)
!8811 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !877, file: !877, line: 205, type: !913, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !8812)
!8812 = !{!8813, !8814, !8815, !8816, !8817}
!8813 = !DILocalVariable(name: "dev", arg: 1, scope: !8811, file: !877, line: 205, type: !904)
!8814 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8811, file: !877, line: 206, type: !915)
!8815 = !DILocalVariable(name: "pclken", scope: !8811, file: !877, line: 208, type: !867)
!8816 = !DILocalVariable(name: "reg", scope: !8811, file: !877, line: 209, type: !1623)
!8817 = !DILocalVariable(name: "reg_val", scope: !8811, file: !877, line: 210, type: !132)
!8818 = !DILocation(line: 0, scope: !8811)
!8819 = !DILocation(line: 214, column: 6, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8811, file: !877, line: 214, column: 6)
!8821 = !DILocation(line: 214, column: 6, scope: !8811)
!8822 = !DILocation(line: 219, column: 52, scope: !8811)
!8823 = !DILocation(line: 219, column: 8, scope: !8811)
!8824 = !DILocation(line: 220, column: 12, scope: !8811)
!8825 = !DILocation(line: 221, column: 22, scope: !8811)
!8826 = !DILocation(line: 221, column: 13, scope: !8811)
!8827 = !DILocation(line: 221, column: 10, scope: !8811)
!8828 = !DILocation(line: 222, column: 7, scope: !8811)
!8829 = !DILocation(line: 224, column: 2, scope: !8811)
!8830 = !DILocation(line: 225, column: 1, scope: !8811)
!8831 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !877, file: !877, line: 262, type: !929, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !8832)
!8832 = !{!8833, !8834, !8835, !8836, !8837, !8838, !8839, !8840}
!8833 = !DILocalVariable(name: "clock", arg: 1, scope: !8831, file: !877, line: 262, type: !904)
!8834 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8831, file: !877, line: 263, type: !915)
!8835 = !DILocalVariable(name: "rate", arg: 3, scope: !8831, file: !877, line: 264, type: !873)
!8836 = !DILocalVariable(name: "pclken", scope: !8831, file: !877, line: 266, type: !867)
!8837 = !DILocalVariable(name: "ahb_clock", scope: !8831, file: !877, line: 273, type: !132)
!8838 = !DILocalVariable(name: "apb1_clock", scope: !8831, file: !877, line: 274, type: !132)
!8839 = !DILocalVariable(name: "apb2_clock", scope: !8831, file: !877, line: 276, type: !132)
!8840 = !DILocalVariable(name: "ahb3_clock", scope: !8831, file: !877, line: 286, type: !132)
!8841 = !DILocation(line: 0, scope: !8831)
!8842 = !DILocation(line: 273, column: 23, scope: !8831)
!8843 = !DILocation(line: 299, column: 18, scope: !8831)
!8844 = !DILocation(line: 299, column: 2, scope: !8831)
!8845 = !DILocation(line: 274, column: 24, scope: !8831)
!8846 = !DILocation(line: 319, column: 3, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8831, file: !877, line: 299, column: 23)
!8848 = !DILocation(line: 276, column: 24, scope: !8831)
!8849 = !DILocation(line: 323, column: 3, scope: !8847)
!8850 = !DILocation(line: 346, column: 33, scope: !8847)
!8851 = !DILocation(line: 346, column: 11, scope: !8847)
!8852 = !DILocation(line: 350, column: 3, scope: !8847)
!8853 = !DILocation(line: 354, column: 33, scope: !8847)
!8854 = !DILocation(line: 354, column: 11, scope: !8847)
!8855 = !DILocation(line: 358, column: 3, scope: !8847)
!8856 = !DILocation(line: 374, column: 3, scope: !8847)
!8857 = !DILocation(line: 379, column: 3, scope: !8847)
!8858 = !DILocation(line: 0, scope: !8847)
!8859 = !DILocation(line: 396, column: 1, scope: !8831)
!8860 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !877, file: !877, line: 227, type: !945, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !8861)
!8861 = !{!8862, !8863, !8864, !8865, !8866, !8867, !8868, !8869}
!8862 = !DILocalVariable(name: "dev", arg: 1, scope: !8860, file: !877, line: 227, type: !904)
!8863 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8860, file: !877, line: 228, type: !915)
!8864 = !DILocalVariable(name: "data", arg: 3, scope: !8860, file: !877, line: 229, type: !102)
!8865 = !DILocalVariable(name: "pclken", scope: !8860, file: !877, line: 233, type: !867)
!8866 = !DILocalVariable(name: "reg", scope: !8860, file: !877, line: 234, type: !1623)
!8867 = !DILocalVariable(name: "reg_val", scope: !8860, file: !877, line: 235, type: !132)
!8868 = !DILocalVariable(name: "dt_val", scope: !8860, file: !877, line: 235, type: !132)
!8869 = !DILocalVariable(name: "err", scope: !8860, file: !877, line: 236, type: !103)
!8870 = !DILocation(line: 0, scope: !8860)
!8871 = !DILocation(line: 241, column: 30, scope: !8860)
!8872 = !DILocation(line: 241, column: 8, scope: !8860)
!8873 = !DILocation(line: 242, column: 10, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8860, file: !877, line: 242, column: 6)
!8875 = !DILocation(line: 242, column: 6, scope: !8860)
!8876 = !DILocation(line: 247, column: 11, scope: !8860)
!8877 = !DILocation(line: 248, column: 6, scope: !8860)
!8878 = !DILocation(line: 247, column: 44, scope: !8860)
!8879 = !DILocation(line: 250, column: 6, scope: !8860)
!8880 = !DILocation(line: 249, column: 52, scope: !8860)
!8881 = !DILocation(line: 249, column: 8, scope: !8860)
!8882 = !DILocation(line: 251, column: 12, scope: !8860)
!8883 = !DILocation(line: 252, column: 10, scope: !8860)
!8884 = !DILocation(line: 253, column: 7, scope: !8860)
!8885 = !DILocation(line: 255, column: 2, scope: !8860)
!8886 = !DILocation(line: 260, column: 1, scope: !8860)
!8887 = distinct !DISubprogram(name: "enabled_clock", scope: !877, file: !877, line: 100, type: !8888, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !8890)
!8888 = !DISubroutineType(types: !8889)
!8889 = !{!103, !132}
!8890 = !{!8891, !8892}
!8891 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8887, file: !877, line: 100, type: !132)
!8892 = !DILocalVariable(name: "r", scope: !8887, file: !877, line: 102, type: !103)
!8893 = !DILocation(line: 0, scope: !8887)
!8894 = !DILocation(line: 104, column: 2, scope: !8887)
!8895 = !DILocation(line: 180, column: 2, scope: !8887)
!8896 = !DILocation(line: 181, column: 1, scope: !8887)
!8897 = distinct !DISubprogram(name: "get_bus_clock", scope: !877, file: !877, line: 79, type: !8898, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !8900)
!8898 = !DISubroutineType(types: !8899)
!8899 = !{!132, !132, !132}
!8900 = !{!8901, !8902}
!8901 = !DILocalVariable(name: "clock", arg: 1, scope: !8897, file: !877, line: 79, type: !132)
!8902 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8897, file: !877, line: 79, type: !132)
!8903 = !DILocation(line: 0, scope: !8897)
!8904 = !DILocation(line: 81, column: 15, scope: !8897)
!8905 = !DILocation(line: 81, column: 2, scope: !8897)
!8906 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !877, file: !877, line: 68, type: !8907, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !8909)
!8907 = !DISubroutineType(types: !8908)
!8908 = !{!132, !132, !103, !103, !103}
!8909 = !{!8910, !8911, !8912, !8913}
!8910 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8906, file: !877, line: 68, type: !132)
!8911 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8906, file: !877, line: 69, type: !103)
!8912 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8906, file: !877, line: 70, type: !103)
!8913 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8906, file: !877, line: 71, type: !103)
!8914 = !DILocation(line: 0, scope: !8906)
!8915 = !DILocation(line: 75, column: 22, scope: !8906)
!8916 = !DILocation(line: 76, column: 13, scope: !8906)
!8917 = !DILocation(line: 75, column: 34, scope: !8906)
!8918 = !DILocation(line: 75, column: 2, scope: !8906)
!8919 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !877, file: !877, line: 641, type: !902, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !8920)
!8920 = !{!8921, !8922, !8923}
!8921 = !DILocalVariable(name: "dev", arg: 1, scope: !8919, file: !877, line: 641, type: !904)
!8922 = !DILocalVariable(name: "old_flash_freq", scope: !8919, file: !877, line: 664, type: !132)
!8923 = !DILocalVariable(name: "new_flash_freq", scope: !8919, file: !877, line: 665, type: !132)
!8924 = !DILocation(line: 0, scope: !8919)
!8925 = !DILocation(line: 646, column: 2, scope: !8919)
!8926 = !DILocation(line: 667, column: 19, scope: !8919)
!8927 = !DILocation(line: 674, column: 21, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8919, file: !877, line: 674, column: 6)
!8929 = !DILocation(line: 674, column: 6, scope: !8919)
!8930 = !DILocation(line: 675, column: 3, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8928, file: !877, line: 674, column: 59)
!8932 = !DILocation(line: 676, column: 2, scope: !8931)
!8933 = !DILocation(line: 680, column: 2, scope: !8919)
!8934 = !DILocation(line: 683, column: 2, scope: !8919)
!8935 = !DILocation(line: 690, column: 3, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8937, file: !877, line: 689, column: 9)
!8937 = distinct !DILexicalBlock(scope: !8919, file: !877, line: 685, column: 6)
!8938 = !DILocation(line: 695, column: 2, scope: !8919)
!8939 = !DILocation(line: 696, column: 2, scope: !8919)
!8940 = !DILocation(line: 696, column: 9, scope: !8919)
!8941 = !DILocation(line: 696, column: 34, scope: !8919)
!8942 = distinct !{!8942, !8939, !8943}
!8943 = !DILocation(line: 697, column: 2, scope: !8919)
!8944 = !DILocation(line: 720, column: 21, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8919, file: !877, line: 720, column: 6)
!8946 = !DILocation(line: 720, column: 6, scope: !8919)
!8947 = !DILocation(line: 721, column: 3, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8945, file: !877, line: 720, column: 60)
!8949 = !DILocation(line: 722, column: 2, scope: !8948)
!8950 = !DILocation(line: 725, column: 18, scope: !8919)
!8951 = !DILocation(line: 728, column: 2, scope: !8919)
!8952 = !DILocation(line: 730, column: 2, scope: !8919)
!8953 = !DILocation(line: 745, column: 2, scope: !8919)
!8954 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8955, file: !8955, line: 3275, type: !7002, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!8955 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8956 = !DILocation(line: 3277, column: 21, scope: !8954)
!8957 = !DILocation(line: 3277, column: 3, scope: !8954)
!8958 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !877, file: !877, line: 507, type: !3328, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!8959 = !DILocation(line: 516, column: 4, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !877, line: 515, column: 10)
!8961 = distinct !DILexicalBlock(scope: !8962, file: !877, line: 513, column: 7)
!8962 = distinct !DILexicalBlock(scope: !8963, file: !877, line: 510, column: 37)
!8963 = distinct !DILexicalBlock(scope: !8958, file: !877, line: 510, column: 6)
!8964 = !DILocation(line: 526, column: 3, scope: !8962)
!8965 = !DILocation(line: 527, column: 3, scope: !8962)
!8966 = !DILocation(line: 527, column: 10, scope: !8962)
!8967 = !DILocation(line: 527, column: 31, scope: !8962)
!8968 = distinct !{!8968, !8965, !8969}
!8969 = !DILocation(line: 529, column: 3, scope: !8962)
!8970 = !DILocation(line: 583, column: 3, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8972, file: !877, line: 577, column: 37)
!8972 = distinct !DILexicalBlock(scope: !8958, file: !877, line: 577, column: 6)
!8973 = !DILocation(line: 584, column: 3, scope: !8971)
!8974 = !DILocation(line: 584, column: 10, scope: !8971)
!8975 = !DILocation(line: 584, column: 31, scope: !8971)
!8976 = distinct !{!8976, !8973, !8977}
!8977 = !DILocation(line: 585, column: 3, scope: !8971)
!8978 = !DILocation(line: 627, column: 1, scope: !8958)
!8979 = distinct !DISubprogram(name: "set_up_plls", scope: !877, file: !877, line: 448, type: !3328, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!8980 = !DILocation(line: 460, column: 6, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8979, file: !877, line: 460, column: 6)
!8982 = !DILocation(line: 460, column: 31, scope: !8981)
!8983 = !DILocation(line: 460, column: 6, scope: !8979)
!8984 = !DILocation(line: 461, column: 3, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8981, file: !877, line: 460, column: 67)
!8986 = !DILocation(line: 462, column: 3, scope: !8985)
!8987 = !DILocation(line: 463, column: 2, scope: !8985)
!8988 = !DILocation(line: 464, column: 2, scope: !8979)
!8989 = !DILocation(line: 488, column: 2, scope: !8979)
!8990 = !DILocation(line: 492, column: 2, scope: !8979)
!8991 = !DILocation(line: 496, column: 2, scope: !8979)
!8992 = !DILocation(line: 499, column: 2, scope: !8979)
!8993 = !DILocation(line: 500, column: 2, scope: !8979)
!8994 = !DILocation(line: 500, column: 9, scope: !8979)
!8995 = !DILocation(line: 500, column: 30, scope: !8979)
!8996 = distinct !{!8996, !8993, !8997}
!8997 = !DILocation(line: 502, column: 2, scope: !8979)
!8998 = !DILocation(line: 505, column: 1, scope: !8979)
!8999 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8955, file: !8955, line: 3224, type: !7012, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !9000)
!9000 = !{!9001}
!9001 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8999, file: !8955, line: 3224, type: !132)
!9002 = !DILocation(line: 0, scope: !8999)
!9003 = !DILocation(line: 3226, column: 3, scope: !8999)
!9004 = !DILocation(line: 3227, column: 1, scope: !8999)
!9005 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8955, file: !8955, line: 3188, type: !7012, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !9006)
!9006 = !{!9007}
!9007 = !DILocalVariable(name: "Source", arg: 1, scope: !9005, file: !8955, line: 3188, type: !132)
!9008 = !DILocation(line: 0, scope: !9005)
!9009 = !DILocation(line: 3190, column: 3, scope: !9005)
!9010 = !DILocation(line: 3191, column: 1, scope: !9005)
!9011 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8955, file: !8955, line: 3204, type: !7002, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!9012 = !DILocation(line: 3206, column: 21, scope: !9011)
!9013 = !DILocation(line: 3206, column: 3, scope: !9011)
!9014 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8955, file: !8955, line: 3240, type: !7012, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !9015)
!9015 = !{!9016}
!9016 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9014, file: !8955, line: 3240, type: !132)
!9017 = !DILocation(line: 0, scope: !9014)
!9018 = !DILocation(line: 3242, column: 3, scope: !9014)
!9019 = !DILocation(line: 3243, column: 1, scope: !9014)
!9020 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8955, file: !8955, line: 3256, type: !7012, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !9021)
!9021 = !{!9022}
!9022 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9020, file: !8955, line: 3256, type: !132)
!9023 = !DILocation(line: 0, scope: !9020)
!9024 = !DILocation(line: 3258, column: 3, scope: !9020)
!9025 = !DILocation(line: 3259, column: 1, scope: !9020)
!9026 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !877, file: !877, line: 409, type: !3328, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!9027 = !DILocation(line: 412, column: 6, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9026, file: !877, line: 412, column: 6)
!9029 = !DILocation(line: 412, column: 27, scope: !9028)
!9030 = !DILocation(line: 412, column: 6, scope: !9026)
!9031 = !DILocation(line: 414, column: 3, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9028, file: !877, line: 412, column: 33)
!9033 = !DILocation(line: 415, column: 3, scope: !9032)
!9034 = !DILocation(line: 415, column: 10, scope: !9032)
!9035 = !DILocation(line: 415, column: 31, scope: !9032)
!9036 = distinct !{!9036, !9033, !9037}
!9037 = !DILocation(line: 417, column: 3, scope: !9032)
!9038 = !DILocation(line: 421, column: 2, scope: !9026)
!9039 = !DILocation(line: 422, column: 2, scope: !9026)
!9040 = !DILocation(line: 422, column: 9, scope: !9026)
!9041 = !DILocation(line: 422, column: 34, scope: !9026)
!9042 = distinct !{!9042, !9039, !9043}
!9043 = !DILocation(line: 423, column: 2, scope: !9026)
!9044 = !DILocation(line: 424, column: 1, scope: !9026)
!9045 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8955, file: !8955, line: 4195, type: !3328, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!9046 = !DILocation(line: 4197, column: 3, scope: !9045)
!9047 = !DILocation(line: 4198, column: 1, scope: !9045)
!9048 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8955, file: !8955, line: 4184, type: !3328, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!9049 = !DILocation(line: 4186, column: 3, scope: !9048)
!9050 = !DILocation(line: 4187, column: 1, scope: !9048)
!9051 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8955, file: !8955, line: 4205, type: !7002, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!9052 = !DILocation(line: 4207, column: 11, scope: !9051)
!9053 = !DILocation(line: 4207, column: 44, scope: !9051)
!9054 = !DILocation(line: 4207, column: 3, scope: !9051)
!9055 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8955, file: !8955, line: 3007, type: !7002, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!9056 = !DILocation(line: 3009, column: 11, scope: !9055)
!9057 = !DILocation(line: 3009, column: 44, scope: !9055)
!9058 = !DILocation(line: 3009, column: 3, scope: !9055)
!9059 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8955, file: !8955, line: 2987, type: !3328, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!9060 = !DILocation(line: 2989, column: 3, scope: !9059)
!9061 = !DILocation(line: 2990, column: 1, scope: !9059)
!9062 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8955, file: !8955, line: 2939, type: !3328, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!9063 = !DILocation(line: 2941, column: 3, scope: !9062)
!9064 = !DILocation(line: 2942, column: 1, scope: !9062)
!9065 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8955, file: !8955, line: 2949, type: !3328, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!9066 = !DILocation(line: 2951, column: 3, scope: !9065)
!9067 = !DILocation(line: 2952, column: 1, scope: !9065)
!9068 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8955, file: !8955, line: 2969, type: !7002, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!9069 = !DILocation(line: 2971, column: 11, scope: !9068)
!9070 = !DILocation(line: 2971, column: 44, scope: !9068)
!9071 = !DILocation(line: 2971, column: 3, scope: !9068)
!9072 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8955, file: !8955, line: 3143, type: !3328, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!9073 = !DILocation(line: 3145, column: 3, scope: !9072)
!9074 = !DILocation(line: 3146, column: 1, scope: !9072)
!9075 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8955, file: !8955, line: 3163, type: !7002, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !473)
!9076 = !DILocation(line: 3165, column: 11, scope: !9075)
!9077 = !DILocation(line: 3165, column: 46, scope: !9075)
!9078 = !DILocation(line: 3165, column: 3, scope: !9075)
!9079 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9080, file: !9080, line: 40, type: !7002, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !473)
!9080 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9081 = !DILocation(line: 45, column: 3, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9083, file: !9080, line: 44, column: 44)
!9083 = distinct !DILexicalBlock(scope: !9084, file: !9080, line: 44, column: 13)
!9084 = distinct !DILexicalBlock(scope: !9079, file: !9080, line: 42, column: 6)
!9085 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9080, file: !9080, line: 56, type: !3328, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !473)
!9086 = !DILocation(line: 58, column: 2, scope: !9085)
!9087 = !DILocation(line: 62, column: 1, scope: !9085)
!9088 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8955, file: !8955, line: 4304, type: !9089, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !9091)
!9089 = !DISubroutineType(types: !9090)
!9090 = !{null, !132, !132, !132, !132}
!9091 = !{!9092, !9093, !9094, !9095}
!9092 = !DILocalVariable(name: "Source", arg: 1, scope: !9088, file: !8955, line: 4304, type: !132)
!9093 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9088, file: !8955, line: 4304, type: !132)
!9094 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9088, file: !8955, line: 4304, type: !132)
!9095 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9088, file: !8955, line: 4304, type: !132)
!9096 = !DILocation(line: 0, scope: !9088)
!9097 = !DILocation(line: 4306, column: 3, scope: !9088)
!9098 = !DILocation(line: 4308, column: 3, scope: !9088)
!9099 = !DILocation(line: 4310, column: 3, scope: !9088)
!9100 = !DILocation(line: 4312, column: 1, scope: !9088)
!9101 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9080, file: !9080, line: 69, type: !3328, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !473)
!9102 = !DILocation(line: 72, column: 2, scope: !9101)
!9103 = !DILocation(line: 73, column: 1, scope: !9101)
!9104 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9105, file: !9105, line: 1185, type: !7012, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !9106)
!9105 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9106 = !{!9107, !9108}
!9107 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9104, file: !9105, line: 1185, type: !132)
!9108 = !DILocalVariable(name: "tmpreg", scope: !9104, file: !9105, line: 1187, type: !131)
!9109 = !DILocation(line: 0, scope: !9104)
!9110 = !DILocation(line: 1187, column: 3, scope: !9104)
!9111 = !DILocation(line: 1187, column: 17, scope: !9104)
!9112 = !DILocation(line: 1188, column: 3, scope: !9104)
!9113 = !DILocation(line: 1190, column: 12, scope: !9104)
!9114 = !DILocation(line: 1190, column: 10, scope: !9104)
!9115 = !DILocation(line: 1191, column: 9, scope: !9104)
!9116 = !DILocation(line: 1192, column: 1, scope: !9104)
!9117 = distinct !DISubprogram(name: "uart_console_init", scope: !953, file: !953, line: 588, type: !990, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9118)
!9118 = !{!9119}
!9119 = !DILocalVariable(name: "arg", arg: 1, scope: !9117, file: !953, line: 588, type: !969)
!9120 = !DILocation(line: 0, scope: !9117)
!9121 = !DILocation(line: 593, column: 7, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9117, file: !953, line: 593, column: 6)
!9123 = !DILocation(line: 593, column: 6, scope: !9117)
!9124 = !DILocation(line: 597, column: 2, scope: !9117)
!9125 = !DILocation(line: 599, column: 2, scope: !9117)
!9126 = !DILocation(line: 600, column: 1, scope: !9117)
!9127 = distinct !DISubprogram(name: "device_is_ready", scope: !6762, file: !6762, line: 47, type: !9128, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9130)
!9128 = !DISubroutineType(types: !9129)
!9129 = !{!166, !969}
!9130 = !{!9131}
!9131 = !DILocalVariable(name: "dev", arg: 1, scope: !9127, file: !6762, line: 47, type: !969)
!9132 = !DILocation(line: 0, scope: !9127)
!9133 = !DILocation(line: 55, column: 2, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9127, file: !6762, line: 55, column: 2)
!9135 = !{i64 2155286657}
!9136 = !DILocation(line: 56, column: 9, scope: !9127)
!9137 = !DILocation(line: 56, column: 2, scope: !9127)
!9138 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !953, file: !953, line: 573, type: !3328, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !473)
!9139 = !DILocation(line: 576, column: 2, scope: !9138)
!9140 = !DILocation(line: 579, column: 2, scope: !9138)
!9141 = !DILocation(line: 581, column: 1, scope: !9138)
!9142 = distinct !DISubprogram(name: "console_out", scope: !953, file: !953, line: 77, type: !118, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9143)
!9143 = !{!9144, !9145}
!9144 = !DILocalVariable(name: "c", arg: 1, scope: !9142, file: !953, line: 77, type: !103)
!9145 = !DILocalVariable(name: "handled_by_debug_server", scope: !9142, file: !953, line: 81, type: !103)
!9146 = !DILocation(line: 0, scope: !9142)
!9147 = !DILocation(line: 81, column: 32, scope: !9142)
!9148 = !DILocation(line: 83, column: 6, scope: !9142)
!9149 = !DILocation(line: 89, column: 11, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9142, file: !953, line: 89, column: 6)
!9151 = !DILocation(line: 89, column: 6, scope: !9142)
!9152 = !DILocation(line: 90, column: 3, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9150, file: !953, line: 89, column: 17)
!9154 = !DILocation(line: 91, column: 2, scope: !9153)
!9155 = !DILocation(line: 92, column: 2, scope: !9142)
!9156 = !DILocation(line: 94, column: 2, scope: !9142)
!9157 = !DILocation(line: 95, column: 1, scope: !9142)
!9158 = distinct !DISubprogram(name: "uart_poll_out", scope: !6023, file: !6023, line: 95, type: !986, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9159)
!9159 = !{!9160, !9161}
!9160 = !DILocalVariable(name: "dev", arg: 1, scope: !9158, file: !6023, line: 95, type: !969)
!9161 = !DILocalVariable(name: "out_char", arg: 2, scope: !9158, file: !6023, line: 95, type: !164)
!9162 = !DILocation(line: 0, scope: !9158)
!9163 = !DILocation(line: 105, column: 2, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9158, file: !6023, line: 105, column: 2)
!9165 = !{i64 2155369902}
!9166 = !DILocation(line: 106, column: 2, scope: !9158)
!9167 = !DILocation(line: 107, column: 1, scope: !9158)
!9168 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !212, file: !212, line: 574, type: !986, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9169)
!9169 = !{!9170, !9171, !9172}
!9170 = !DILocalVariable(name: "dev", arg: 1, scope: !9168, file: !212, line: 574, type: !969)
!9171 = !DILocalVariable(name: "out_char", arg: 2, scope: !9168, file: !212, line: 575, type: !164)
!9172 = !DILocalVariable(name: "api", scope: !9168, file: !212, line: 577, type: !961)
!9173 = !DILocation(line: 0, scope: !9168)
!9174 = !DILocation(line: 578, column: 40, scope: !9168)
!9175 = !DILocation(line: 580, column: 7, scope: !9168)
!9176 = !DILocation(line: 580, column: 2, scope: !9168)
!9177 = !DILocation(line: 581, column: 1, scope: !9168)
!9178 = distinct !DISubprogram(name: "debug_hook_out_nop", scope: !953, file: !953, line: 49, type: !1103, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9179)
!9179 = !{!9180}
!9180 = !DILocalVariable(name: "c", arg: 1, scope: !9178, file: !953, line: 49, type: !108)
!9181 = !DILocation(line: 0, scope: !9178)
!9182 = !DILocation(line: 51, column: 2, scope: !9178)
!9183 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !9128, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9184)
!9184 = !{!9185}
!9185 = !DILocalVariable(name: "dev", arg: 1, scope: !9183, file: !152, line: 730, type: !969)
!9186 = !DILocation(line: 0, scope: !9183)
!9187 = !DILocation(line: 732, column: 9, scope: !9183)
!9188 = !DILocation(line: 732, column: 2, scope: !9183)
!9189 = distinct !DISubprogram(name: "uart_console_in_debug_hook_install", scope: !953, file: !953, line: 44, type: !9190, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9192)
!9190 = !DISubroutineType(types: !9191)
!9191 = !{null, !1145}
!9192 = !{!9193}
!9193 = !DILocalVariable(name: "hook", arg: 1, scope: !9189, file: !953, line: 44, type: !1145)
!9194 = !DILocation(line: 0, scope: !9189)
!9195 = !DILocation(line: 46, column: 16, scope: !9189)
!9196 = !DILocation(line: 47, column: 1, scope: !9189)
!9197 = distinct !DISubprogram(name: "uart_console_out_debug_hook_install", scope: !953, file: !953, line: 55, type: !9198, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9200)
!9198 = !DISubroutineType(types: !9199)
!9199 = !{null, !1100}
!9200 = !{!9201}
!9201 = !DILocalVariable(name: "hook", arg: 1, scope: !9197, file: !953, line: 55, type: !1100)
!9202 = !DILocation(line: 0, scope: !9197)
!9203 = !DILocation(line: 57, column: 17, scope: !9197)
!9204 = !DILocation(line: 58, column: 1, scope: !9197)
!9205 = distinct !DISubprogram(name: "uart_register_input", scope: !953, file: !953, line: 549, type: !9206, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9208)
!9206 = !DISubroutineType(types: !9207)
!9207 = !{null, !1050, !1050, !1094}
!9208 = !{!9209, !9210, !9211}
!9209 = !DILocalVariable(name: "avail", arg: 1, scope: !9205, file: !953, line: 549, type: !1050)
!9210 = !DILocalVariable(name: "lines", arg: 2, scope: !9205, file: !953, line: 549, type: !1050)
!9211 = !DILocalVariable(name: "completion", arg: 3, scope: !9205, file: !953, line: 550, type: !1094)
!9212 = !DILocation(line: 0, scope: !9205)
!9213 = !DILocation(line: 552, column: 14, scope: !9205)
!9214 = !DILocation(line: 553, column: 14, scope: !9205)
!9215 = !DILocation(line: 554, column: 16, scope: !9205)
!9216 = !DILocation(line: 556, column: 2, scope: !9205)
!9217 = !DILocation(line: 557, column: 1, scope: !9205)
!9218 = distinct !DISubprogram(name: "console_input_init", scope: !953, file: !953, line: 532, type: !3328, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9219)
!9219 = !{!9220}
!9220 = !DILocalVariable(name: "c", scope: !9218, file: !953, line: 534, type: !163)
!9221 = !DILocation(line: 534, column: 2, scope: !9218)
!9222 = !DILocation(line: 536, column: 2, scope: !9218)
!9223 = !DILocation(line: 537, column: 2, scope: !9218)
!9224 = !DILocation(line: 539, column: 2, scope: !9218)
!9225 = !DILocation(line: 542, column: 9, scope: !9218)
!9226 = !DILocation(line: 542, column: 2, scope: !9218)
!9227 = !DILocation(line: 0, scope: !9218)
!9228 = !DILocation(line: 543, column: 3, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9218, file: !953, line: 542, column: 46)
!9230 = distinct !{!9230, !9226, !9231}
!9231 = !DILocation(line: 544, column: 2, scope: !9218)
!9232 = !DILocation(line: 546, column: 2, scope: !9218)
!9233 = !DILocation(line: 547, column: 1, scope: !9218)
!9234 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !6023, file: !6023, line: 265, type: !1020, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9235)
!9235 = !{!9236}
!9236 = !DILocalVariable(name: "dev", arg: 1, scope: !9234, file: !6023, line: 265, type: !969)
!9237 = !DILocation(line: 0, scope: !9234)
!9238 = !DILocation(line: 274, column: 2, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9234, file: !6023, line: 274, column: 2)
!9240 = !{i64 2155370378}
!9241 = !DILocation(line: 275, column: 2, scope: !9234)
!9242 = !DILocation(line: 276, column: 1, scope: !9234)
!9243 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !6023, file: !6023, line: 217, type: !1020, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9244)
!9244 = !{!9245}
!9245 = !DILocalVariable(name: "dev", arg: 1, scope: !9243, file: !6023, line: 217, type: !969)
!9246 = !DILocation(line: 0, scope: !9243)
!9247 = !DILocation(line: 226, column: 2, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9243, file: !6023, line: 226, column: 2)
!9249 = !{i64 2155370242}
!9250 = !DILocation(line: 227, column: 2, scope: !9243)
!9251 = !DILocation(line: 228, column: 1, scope: !9243)
!9252 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !212, file: !212, line: 1190, type: !9253, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9255)
!9253 = !DISubroutineType(types: !9254)
!9254 = !{null, !969, !1036}
!9255 = !{!9256, !9257}
!9256 = !DILocalVariable(name: "dev", arg: 1, scope: !9252, file: !212, line: 1190, type: !969)
!9257 = !DILocalVariable(name: "cb", arg: 2, scope: !9252, file: !212, line: 1191, type: !1036)
!9258 = !DILocation(line: 0, scope: !9252)
!9259 = !DILocation(line: 1193, column: 2, scope: !9252)
!9260 = !DILocation(line: 1194, column: 1, scope: !9252)
!9261 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !212, file: !212, line: 1024, type: !990, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9262)
!9262 = !{!9263, !9264}
!9263 = !DILocalVariable(name: "dev", arg: 1, scope: !9261, file: !212, line: 1024, type: !969)
!9264 = !DILocalVariable(name: "api", scope: !9261, file: !212, line: 1027, type: !961)
!9265 = !DILocation(line: 0, scope: !9261)
!9266 = !DILocation(line: 1028, column: 40, scope: !9261)
!9267 = !DILocation(line: 1030, column: 11, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9261, file: !212, line: 1030, column: 6)
!9269 = !DILocation(line: 1030, column: 24, scope: !9268)
!9270 = !DILocation(line: 1030, column: 6, scope: !9261)
!9271 = !DILocation(line: 1033, column: 9, scope: !9261)
!9272 = !DILocation(line: 1033, column: 2, scope: !9261)
!9273 = !DILocation(line: 1038, column: 1, scope: !9261)
!9274 = distinct !DISubprogram(name: "uart_fifo_read", scope: !212, file: !212, line: 785, type: !1016, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9275)
!9275 = !{!9276, !9277, !9278, !9279}
!9276 = !DILocalVariable(name: "dev", arg: 1, scope: !9274, file: !212, line: 785, type: !969)
!9277 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9274, file: !212, line: 785, type: !270)
!9278 = !DILocalVariable(name: "size", arg: 3, scope: !9274, file: !212, line: 786, type: !271)
!9279 = !DILocalVariable(name: "api", scope: !9274, file: !212, line: 789, type: !961)
!9280 = !DILocation(line: 0, scope: !9274)
!9281 = !DILocation(line: 790, column: 40, scope: !9274)
!9282 = !DILocation(line: 792, column: 11, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9274, file: !212, line: 792, column: 6)
!9284 = !DILocation(line: 792, column: 21, scope: !9283)
!9285 = !DILocation(line: 792, column: 6, scope: !9274)
!9286 = !DILocation(line: 796, column: 9, scope: !9274)
!9287 = !DILocation(line: 796, column: 2, scope: !9274)
!9288 = !DILocation(line: 803, column: 1, scope: !9274)
!9289 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !6023, file: !6023, line: 241, type: !1020, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9290)
!9290 = !{!9291}
!9291 = !DILocalVariable(name: "dev", arg: 1, scope: !9289, file: !6023, line: 241, type: !969)
!9292 = !DILocation(line: 0, scope: !9289)
!9293 = !DILocation(line: 250, column: 2, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9289, file: !6023, line: 250, column: 2)
!9295 = !{i64 2155370310}
!9296 = !DILocation(line: 251, column: 2, scope: !9289)
!9297 = !DILocation(line: 252, column: 1, scope: !9289)
!9298 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !212, file: !212, line: 934, type: !1020, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9299)
!9299 = !{!9300, !9301}
!9300 = !DILocalVariable(name: "dev", arg: 1, scope: !9298, file: !212, line: 934, type: !969)
!9301 = !DILocalVariable(name: "api", scope: !9298, file: !212, line: 937, type: !961)
!9302 = !DILocation(line: 0, scope: !9298)
!9303 = !DILocation(line: 938, column: 40, scope: !9298)
!9304 = !DILocation(line: 940, column: 11, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9298, file: !212, line: 940, column: 6)
!9306 = !DILocation(line: 940, column: 25, scope: !9305)
!9307 = !DILocation(line: 940, column: 6, scope: !9298)
!9308 = !DILocation(line: 941, column: 3, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9305, file: !212, line: 940, column: 34)
!9310 = !DILocation(line: 942, column: 2, scope: !9309)
!9311 = !DILocation(line: 946, column: 1, scope: !9298)
!9312 = !DILocation(line: 0, scope: !1110)
!9313 = !DILocation(line: 433, column: 9, scope: !1110)
!9314 = !DILocation(line: 433, column: 43, scope: !1110)
!9315 = !DILocation(line: 434, column: 9, scope: !1110)
!9316 = !DILocation(line: 433, column: 2, scope: !1110)
!9317 = !DILocation(line: 436, column: 3, scope: !1115)
!9318 = !DILocation(line: 439, column: 8, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !1115, file: !953, line: 439, column: 7)
!9320 = !DILocation(line: 439, column: 7, scope: !1115)
!9321 = distinct !{!9321, !9316, !9322}
!9322 = !DILocation(line: 529, column: 2, scope: !1110)
!9323 = !DILocation(line: 0, scope: !1115)
!9324 = !DILocation(line: 445, column: 8, scope: !1115)
!9325 = !DILocation(line: 446, column: 10, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !1115, file: !953, line: 446, column: 7)
!9327 = !DILocation(line: 446, column: 7, scope: !1115)
!9328 = !DILocation(line: 451, column: 7, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !1115, file: !953, line: 451, column: 7)
!9330 = !DILocation(line: 451, column: 21, scope: !9329)
!9331 = !DILocation(line: 451, column: 29, scope: !9329)
!9332 = !DILocation(line: 451, column: 46, scope: !9329)
!9333 = !DILocation(line: 451, column: 32, scope: !9329)
!9334 = !DILocation(line: 451, column: 52, scope: !9329)
!9335 = !DILocation(line: 451, column: 7, scope: !1115)
!9336 = !DILocation(line: 460, column: 8, scope: !1120)
!9337 = !DILocation(line: 460, column: 7, scope: !1115)
!9338 = !DILocation(line: 461, column: 10, scope: !1118)
!9339 = !DILocation(line: 0, scope: !1118)
!9340 = !DILocation(line: 461, column: 8, scope: !1119)
!9341 = !DILocation(line: 462, column: 9, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !1119, file: !953, line: 462, column: 8)
!9343 = !DILocation(line: 462, column: 8, scope: !1119)
!9344 = !DILocation(line: 477, column: 7, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !1115, file: !953, line: 477, column: 7)
!9346 = !DILocation(line: 477, column: 7, scope: !1115)
!9347 = !DILocation(line: 478, column: 16, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9345, file: !953, line: 477, column: 46)
!9349 = !DILocation(line: 478, column: 22, scope: !9348)
!9350 = !DILocation(line: 478, column: 4, scope: !9348)
!9351 = !DILocation(line: 479, column: 4, scope: !9348)
!9352 = !DILocation(line: 483, column: 7, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !1115, file: !953, line: 483, column: 7)
!9354 = !DILocation(line: 483, column: 7, scope: !1115)
!9355 = !DILocation(line: 484, column: 13, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9357, file: !953, line: 484, column: 8)
!9357 = distinct !DILexicalBlock(scope: !9353, file: !953, line: 483, column: 55)
!9358 = !DILocation(line: 484, column: 8, scope: !9357)
!9359 = !DILocation(line: 485, column: 5, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9356, file: !953, line: 484, column: 26)
!9361 = !DILocation(line: 486, column: 5, scope: !9360)
!9362 = !DILocation(line: 487, column: 4, scope: !9360)
!9363 = !DILocation(line: 493, column: 16, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !1115, file: !953, line: 493, column: 7)
!9365 = !DILocation(line: 493, column: 8, scope: !9364)
!9366 = !DILocation(line: 493, column: 7, scope: !1115)
!9367 = !DILocation(line: 494, column: 4, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9364, file: !953, line: 493, column: 23)
!9369 = !DILocation(line: 497, column: 9, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !953, line: 497, column: 9)
!9371 = distinct !DILexicalBlock(scope: !9368, file: !953, line: 494, column: 18)
!9372 = !DILocation(line: 497, column: 13, scope: !9370)
!9373 = !DILocation(line: 497, column: 9, scope: !9371)
!9374 = !DILocation(line: 498, column: 16, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9370, file: !953, line: 497, column: 18)
!9376 = !DILocation(line: 498, column: 26, scope: !9375)
!9377 = !DILocation(line: 498, column: 34, scope: !9375)
!9378 = !DILocation(line: 498, column: 6, scope: !9375)
!9379 = !DILocation(line: 499, column: 5, scope: !9375)
!9380 = !DILocation(line: 502, column: 5, scope: !9371)
!9381 = !DILocation(line: 503, column: 5, scope: !9371)
!9382 = !DILocation(line: 505, column: 5, scope: !9371)
!9383 = !DILocation(line: 505, column: 15, scope: !9371)
!9384 = !DILocation(line: 505, column: 21, scope: !9371)
!9385 = !DILocation(line: 505, column: 19, scope: !9371)
!9386 = !DILocation(line: 505, column: 26, scope: !9371)
!9387 = !DILocation(line: 506, column: 5, scope: !9371)
!9388 = !DILocation(line: 507, column: 5, scope: !9371)
!9389 = !DILocation(line: 508, column: 9, scope: !9371)
!9390 = !DILocation(line: 509, column: 9, scope: !9371)
!9391 = !DILocation(line: 510, column: 5, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9371, file: !953, line: 510, column: 5)
!9393 = !DILocation(line: 511, column: 9, scope: !9371)
!9394 = !DILocation(line: 512, column: 5, scope: !9371)
!9395 = !DILocation(line: 514, column: 9, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9371, file: !953, line: 514, column: 9)
!9397 = !DILocation(line: 514, column: 23, scope: !9396)
!9398 = !DILocation(line: 515, column: 27, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9396, file: !953, line: 514, column: 32)
!9400 = !DILocation(line: 515, column: 38, scope: !9399)
!9401 = !DILocation(line: 515, column: 13, scope: !9399)
!9402 = !DILocation(line: 515, column: 10, scope: !9399)
!9403 = !DILocation(line: 516, column: 5, scope: !9399)
!9404 = !DILocation(line: 526, column: 7, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !1115, file: !953, line: 526, column: 7)
!9406 = !DILocation(line: 526, column: 13, scope: !9405)
!9407 = !DILocation(line: 526, column: 11, scope: !9405)
!9408 = !DILocation(line: 526, column: 17, scope: !9405)
!9409 = !DILocation(line: 526, column: 7, scope: !1115)
!9410 = !DILocation(line: 527, column: 17, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9405, file: !953, line: 526, column: 42)
!9412 = !DILocation(line: 527, column: 30, scope: !9411)
!9413 = !DILocation(line: 527, column: 4, scope: !9411)
!9414 = !DILocation(line: 528, column: 3, scope: !9411)
!9415 = !DILocation(line: 530, column: 1, scope: !1110)
!9416 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !212, file: !212, line: 1163, type: !1034, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9417)
!9417 = !{!9418, !9419, !9420, !9421}
!9418 = !DILocalVariable(name: "dev", arg: 1, scope: !9416, file: !212, line: 1163, type: !969)
!9419 = !DILocalVariable(name: "cb", arg: 2, scope: !9416, file: !212, line: 1164, type: !1036)
!9420 = !DILocalVariable(name: "user_data", arg: 3, scope: !9416, file: !212, line: 1165, type: !102)
!9421 = !DILocalVariable(name: "api", scope: !9416, file: !212, line: 1168, type: !961)
!9422 = !DILocation(line: 0, scope: !9416)
!9423 = !DILocation(line: 1169, column: 40, scope: !9416)
!9424 = !DILocation(line: 1171, column: 11, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9416, file: !212, line: 1171, column: 6)
!9426 = !DILocation(line: 1171, column: 20, scope: !9425)
!9427 = !DILocation(line: 1171, column: 29, scope: !9425)
!9428 = !DILocation(line: 1171, column: 46, scope: !9425)
!9429 = !DILocation(line: 1171, column: 6, scope: !9416)
!9430 = !DILocation(line: 1172, column: 3, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9425, file: !212, line: 1171, column: 56)
!9432 = !DILocation(line: 1173, column: 2, scope: !9431)
!9433 = !DILocation(line: 1179, column: 1, scope: !9416)
!9434 = distinct !DISubprogram(name: "uart_irq_update", scope: !6023, file: !6023, line: 360, type: !990, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9435)
!9435 = !{!9436}
!9436 = !DILocalVariable(name: "dev", arg: 1, scope: !9434, file: !6023, line: 360, type: !969)
!9437 = !DILocation(line: 0, scope: !9434)
!9438 = !DILocation(line: 368, column: 2, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9434, file: !6023, line: 368, column: 2)
!9440 = !{i64 2155370650}
!9441 = !DILocation(line: 369, column: 9, scope: !9434)
!9442 = !DILocation(line: 369, column: 2, scope: !9434)
!9443 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !6023, file: !6023, line: 337, type: !990, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9444)
!9444 = !{!9445}
!9445 = !DILocalVariable(name: "dev", arg: 1, scope: !9443, file: !6023, line: 337, type: !969)
!9446 = !DILocation(line: 0, scope: !9443)
!9447 = !DILocation(line: 345, column: 2, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9443, file: !6023, line: 345, column: 2)
!9449 = !{i64 2155370582}
!9450 = !DILocation(line: 346, column: 9, scope: !9443)
!9451 = !DILocation(line: 346, column: 2, scope: !9443)
!9452 = distinct !DISubprogram(name: "read_uart", scope: !953, file: !953, line: 127, type: !9453, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9455)
!9453 = !DISubroutineType(types: !9454)
!9454 = !{!103, !969, !270, !32}
!9455 = !{!9456, !9457, !9458, !9459}
!9456 = !DILocalVariable(name: "uart", arg: 1, scope: !9452, file: !953, line: 127, type: !969)
!9457 = !DILocalVariable(name: "buf", arg: 2, scope: !9452, file: !953, line: 127, type: !270)
!9458 = !DILocalVariable(name: "size", arg: 3, scope: !9452, file: !953, line: 128, type: !32)
!9459 = !DILocalVariable(name: "rx", scope: !9452, file: !953, line: 130, type: !103)
!9460 = !DILocation(line: 0, scope: !9452)
!9461 = !DILocation(line: 132, column: 7, scope: !9452)
!9462 = !DILocation(line: 133, column: 9, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9452, file: !953, line: 133, column: 6)
!9464 = !DILocation(line: 133, column: 6, scope: !9452)
!9465 = !DILocation(line: 135, column: 3, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9463, file: !953, line: 133, column: 14)
!9467 = !DILocation(line: 137, column: 3, scope: !9466)
!9468 = !DILocation(line: 141, column: 1, scope: !9452)
!9469 = distinct !DISubprogram(name: "k_queue_get", scope: !3768, file: !3768, line: 649, type: !9470, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9477)
!9470 = !DISubroutineType(types: !9471)
!9471 = !{!102, !9472, !9473}
!9472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!9473 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1800, line: 67, baseType: !9474)
!9474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1800, line: 65, size: 64, elements: !9475)
!9475 = !{!9476}
!9476 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9474, file: !1800, line: 66, baseType: !1799, size: 64)
!9477 = !{!9478, !9479}
!9478 = !DILocalVariable(name: "queue", arg: 1, scope: !9469, file: !3768, line: 649, type: !9472)
!9479 = !DILocalVariable(name: "timeout", arg: 2, scope: !9469, file: !3768, line: 649, type: !9473)
!9480 = !DILocation(line: 0, scope: !9469)
!9481 = !DILocation(line: 658, column: 2, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9469, file: !3768, line: 658, column: 2)
!9483 = !{i64 2155071334}
!9484 = !DILocation(line: 659, column: 9, scope: !9469)
!9485 = !DILocation(line: 659, column: 2, scope: !9469)
!9486 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1136, file: !1136, line: 131, type: !9487, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9491)
!9487 = !DISubroutineType(types: !9488)
!9488 = !{!166, !9489, !103}
!9489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9490, size: 32)
!9490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1135)
!9491 = !{!9492, !9493, !9494}
!9492 = !DILocalVariable(name: "target", arg: 1, scope: !9486, file: !1136, line: 131, type: !9489)
!9493 = !DILocalVariable(name: "bit", arg: 2, scope: !9486, file: !1136, line: 131, type: !103)
!9494 = !DILocalVariable(name: "val", scope: !9486, file: !1136, line: 133, type: !9495)
!9495 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1136, line: 23, baseType: !1135)
!9496 = !DILocation(line: 0, scope: !9486)
!9497 = !DILocation(line: 133, column: 21, scope: !9486)
!9498 = !DILocation(line: 135, column: 27, scope: !9486)
!9499 = !DILocation(line: 135, column: 50, scope: !9486)
!9500 = !DILocation(line: 135, column: 2, scope: !9486)
!9501 = distinct !DISubprogram(name: "handle_ansi", scope: !953, file: !953, line: 232, type: !9502, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9504)
!9502 = !DISubroutineType(types: !9503)
!9503 = !{null, !163, !1097}
!9504 = !{!9505, !9506, !9507}
!9505 = !DILocalVariable(name: "byte", arg: 1, scope: !9501, file: !953, line: 232, type: !163)
!9506 = !DILocalVariable(name: "line", arg: 2, scope: !9501, file: !953, line: 232, type: !1097)
!9507 = !DILabel(scope: !9501, name: "ansi_cmd", file: !953, line: 268)
!9508 = !DILocation(line: 0, scope: !9501)
!9509 = !DILocation(line: 234, column: 6, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9501, file: !953, line: 234, column: 6)
!9511 = !DILocation(line: 234, column: 6, scope: !9501)
!9512 = !DILocation(line: 235, column: 16, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9514, file: !953, line: 235, column: 7)
!9514 = distinct !DILexicalBlock(scope: !9510, file: !953, line: 234, column: 61)
!9515 = !DILocation(line: 235, column: 8, scope: !9513)
!9516 = !DILocation(line: 235, column: 7, scope: !9514)
!9517 = !DILocation(line: 236, column: 13, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9513, file: !953, line: 235, column: 23)
!9519 = !DILocation(line: 237, column: 4, scope: !9518)
!9520 = !DILocation(line: 240, column: 3, scope: !9514)
!9521 = !DILocation(line: 241, column: 19, scope: !9514)
!9522 = !DILocation(line: 241, column: 12, scope: !9514)
!9523 = !DILocation(line: 242, column: 14, scope: !9514)
!9524 = !DILocation(line: 243, column: 3, scope: !9514)
!9525 = !DILocation(line: 246, column: 6, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9501, file: !953, line: 246, column: 6)
!9527 = !DILocation(line: 246, column: 6, scope: !9501)
!9528 = !DILocation(line: 247, column: 15, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9530, file: !953, line: 247, column: 7)
!9530 = distinct !DILexicalBlock(scope: !9526, file: !953, line: 246, column: 49)
!9531 = !DILocation(line: 247, column: 7, scope: !9529)
!9532 = !DILocation(line: 247, column: 7, scope: !9530)
!9533 = !DILocation(line: 248, column: 8, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9535, file: !953, line: 248, column: 8)
!9535 = distinct !DILexicalBlock(scope: !9529, file: !953, line: 247, column: 22)
!9536 = !DILocation(line: 248, column: 8, scope: !9535)
!9537 = !DILocation(line: 249, column: 16, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9534, file: !953, line: 248, column: 53)
!9539 = !DILocation(line: 250, column: 24, scope: !9538)
!9540 = !DILocation(line: 250, column: 16, scope: !9538)
!9541 = !DILocation(line: 251, column: 4, scope: !9538)
!9542 = !DILocation(line: 252, column: 14, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9534, file: !953, line: 251, column: 11)
!9544 = !DILocation(line: 253, column: 22, scope: !9543)
!9545 = !DILocation(line: 253, column: 14, scope: !9543)
!9546 = !DILocation(line: 259, column: 12, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9530, file: !953, line: 259, column: 7)
!9548 = !DILocation(line: 259, column: 19, scope: !9547)
!9549 = !DILocation(line: 260, column: 8, scope: !9547)
!9550 = !DILocation(line: 259, column: 7, scope: !9530)
!9551 = !DILocation(line: 264, column: 3, scope: !9530)
!9552 = !DILocation(line: 265, column: 3, scope: !9530)
!9553 = !DILocation(line: 266, column: 2, scope: !9530)
!9554 = !DILocation(line: 268, column: 1, scope: !9501)
!9555 = !DILocation(line: 269, column: 2, scope: !9501)
!9556 = !DILocation(line: 271, column: 7, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9558, file: !953, line: 271, column: 7)
!9558 = distinct !DILexicalBlock(scope: !9501, file: !953, line: 269, column: 16)
!9559 = !DILocation(line: 271, column: 18, scope: !9557)
!9560 = !DILocation(line: 271, column: 16, scope: !9557)
!9561 = !DILocation(line: 271, column: 7, scope: !9558)
!9562 = !DILocation(line: 275, column: 7, scope: !9558)
!9563 = !DILocation(line: 276, column: 7, scope: !9558)
!9564 = !DILocation(line: 277, column: 3, scope: !9558)
!9565 = !DILocation(line: 278, column: 3, scope: !9558)
!9566 = !DILocation(line: 280, column: 7, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9558, file: !953, line: 280, column: 7)
!9568 = !DILocation(line: 280, column: 18, scope: !9567)
!9569 = !DILocation(line: 280, column: 16, scope: !9567)
!9570 = !DILocation(line: 280, column: 7, scope: !9558)
!9571 = !DILocation(line: 284, column: 7, scope: !9558)
!9572 = !DILocation(line: 285, column: 7, scope: !9558)
!9573 = !DILocation(line: 286, column: 3, scope: !9558)
!9574 = !DILocation(line: 287, column: 3, scope: !9558)
!9575 = !DILocation(line: 289, column: 8, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9558, file: !953, line: 289, column: 7)
!9577 = !DILocation(line: 289, column: 7, scope: !9558)
!9578 = !DILocation(line: 293, column: 19, scope: !9558)
!9579 = !DILocation(line: 293, column: 3, scope: !9558)
!9580 = !DILocation(line: 294, column: 10, scope: !9558)
!9581 = !DILocation(line: 294, column: 7, scope: !9558)
!9582 = !DILocation(line: 295, column: 7, scope: !9558)
!9583 = !DILocation(line: 296, column: 3, scope: !9558)
!9584 = !DILocation(line: 298, column: 8, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9558, file: !953, line: 298, column: 7)
!9586 = !DILocation(line: 298, column: 7, scope: !9558)
!9587 = !DILocation(line: 302, column: 18, scope: !9558)
!9588 = !DILocation(line: 302, column: 3, scope: !9558)
!9589 = !DILocation(line: 303, column: 10, scope: !9558)
!9590 = !DILocation(line: 303, column: 7, scope: !9558)
!9591 = !DILocation(line: 304, column: 7, scope: !9558)
!9592 = !DILocation(line: 305, column: 3, scope: !9558)
!9593 = !DILocation(line: 307, column: 8, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9558, file: !953, line: 307, column: 7)
!9595 = !DILocation(line: 307, column: 7, scope: !9558)
!9596 = !DILocation(line: 311, column: 3, scope: !9558)
!9597 = !DILocation(line: 312, column: 18, scope: !9558)
!9598 = !DILocation(line: 312, column: 13, scope: !9558)
!9599 = !DILocation(line: 312, column: 24, scope: !9558)
!9600 = !DILocation(line: 312, column: 3, scope: !9558)
!9601 = !DILocation(line: 313, column: 3, scope: !9558)
!9602 = !DILocation(line: 318, column: 2, scope: !9501)
!9603 = !DILocation(line: 319, column: 1, scope: !9501)
!9604 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1136, file: !1136, line: 152, type: !9605, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9608)
!9605 = !DISubroutineType(types: !9606)
!9606 = !{!166, !9607, !103}
!9607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!9608 = !{!9609, !9610, !9611, !9612}
!9609 = !DILocalVariable(name: "target", arg: 1, scope: !9604, file: !1136, line: 152, type: !9607)
!9610 = !DILocalVariable(name: "bit", arg: 2, scope: !9604, file: !1136, line: 152, type: !103)
!9611 = !DILocalVariable(name: "mask", scope: !9604, file: !1136, line: 154, type: !9495)
!9612 = !DILocalVariable(name: "old", scope: !9604, file: !1136, line: 155, type: !9495)
!9613 = !DILocation(line: 0, scope: !9604)
!9614 = !DILocation(line: 154, column: 22, scope: !9604)
!9615 = !DILocation(line: 157, column: 45, scope: !9604)
!9616 = !DILocation(line: 157, column: 8, scope: !9604)
!9617 = !DILocation(line: 159, column: 14, scope: !9604)
!9618 = !DILocation(line: 159, column: 22, scope: !9604)
!9619 = !DILocation(line: 159, column: 2, scope: !9604)
!9620 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1136, file: !1136, line: 217, type: !9621, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9623)
!9621 = !DISubroutineType(types: !9622)
!9622 = !{null, !9607, !103}
!9623 = !{!9624, !9625, !9626}
!9624 = !DILocalVariable(name: "target", arg: 1, scope: !9620, file: !1136, line: 217, type: !9607)
!9625 = !DILocalVariable(name: "bit", arg: 2, scope: !9620, file: !1136, line: 217, type: !103)
!9626 = !DILocalVariable(name: "mask", scope: !9620, file: !1136, line: 219, type: !9495)
!9627 = !DILocation(line: 0, scope: !9620)
!9628 = !DILocation(line: 219, column: 22, scope: !9620)
!9629 = !DILocation(line: 221, column: 8, scope: !9620)
!9630 = !DILocation(line: 222, column: 1, scope: !9620)
!9631 = distinct !DISubprogram(name: "isprint", scope: !5085, file: !5085, line: 37, type: !118, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9632)
!9632 = !{!9633}
!9633 = !DILocalVariable(name: "c", arg: 1, scope: !9631, file: !5085, line: 37, type: !103)
!9634 = !DILocation(line: 0, scope: !9631)
!9635 = !DILocation(line: 39, column: 38, scope: !9631)
!9636 = !DILocation(line: 39, column: 2, scope: !9631)
!9637 = distinct !DISubprogram(name: "del_char", scope: !953, file: !953, line: 191, type: !9638, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9640)
!9638 = !DISubroutineType(types: !9639)
!9639 = !{null, !1097, !163}
!9640 = !{!9641, !9642}
!9641 = !DILocalVariable(name: "pos", arg: 1, scope: !9637, file: !953, line: 191, type: !1097)
!9642 = !DILocalVariable(name: "end", arg: 2, scope: !9637, file: !953, line: 191, type: !163)
!9643 = !DILocation(line: 0, scope: !9637)
!9644 = !DILocation(line: 193, column: 2, scope: !9637)
!9645 = !DILocation(line: 195, column: 10, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9637, file: !953, line: 195, column: 6)
!9647 = !DILocation(line: 195, column: 6, scope: !9637)
!9648 = !DILocation(line: 196, column: 3, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9646, file: !953, line: 195, column: 17)
!9650 = !DILocation(line: 197, column: 3, scope: !9649)
!9651 = !DILocation(line: 198, column: 3, scope: !9649)
!9652 = !DILocation(line: 201, column: 2, scope: !9637)
!9653 = !DILocation(line: 203, column: 2, scope: !9637)
!9654 = !DILocation(line: 203, column: 12, scope: !9637)
!9655 = !DILocation(line: 204, column: 16, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9637, file: !953, line: 203, column: 20)
!9657 = !DILocation(line: 204, column: 10, scope: !9656)
!9658 = !DILocation(line: 204, column: 8, scope: !9656)
!9659 = !DILocation(line: 205, column: 3, scope: !9656)
!9660 = !DILocation(line: 203, column: 15, scope: !9637)
!9661 = distinct !{!9661, !9653, !9662}
!9662 = !DILocation(line: 206, column: 2, scope: !9637)
!9663 = !DILocation(line: 208, column: 2, scope: !9637)
!9664 = !DILocation(line: 211, column: 2, scope: !9637)
!9665 = !DILocation(line: 212, column: 1, scope: !9637)
!9666 = !DISubprogram(name: "k_queue_append", scope: !312, file: !312, line: 1775, type: !9667, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!9667 = !DISubroutineType(types: !9668)
!9668 = !{null, !9472, !102}
!9669 = distinct !DISubprogram(name: "insert_char", scope: !953, file: !953, line: 163, type: !9670, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9672)
!9670 = !DISubroutineType(types: !9671)
!9671 = !{null, !1097, !108, !163}
!9672 = !{!9673, !9674, !9675, !9676}
!9673 = !DILocalVariable(name: "pos", arg: 1, scope: !9669, file: !953, line: 163, type: !1097)
!9674 = !DILocalVariable(name: "c", arg: 2, scope: !9669, file: !953, line: 163, type: !108)
!9675 = !DILocalVariable(name: "end", arg: 3, scope: !9669, file: !953, line: 163, type: !163)
!9676 = !DILocalVariable(name: "tmp", scope: !9669, file: !953, line: 165, type: !108)
!9677 = !DILocation(line: 0, scope: !9669)
!9678 = !DILocation(line: 168, column: 2, scope: !9669)
!9679 = !DILocation(line: 170, column: 10, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9669, file: !953, line: 170, column: 6)
!9681 = !DILocation(line: 170, column: 6, scope: !9669)
!9682 = !DILocation(line: 171, column: 8, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9680, file: !953, line: 170, column: 17)
!9684 = !DILocation(line: 172, column: 3, scope: !9683)
!9685 = !DILocation(line: 175, column: 8, scope: !9669)
!9686 = !DILocation(line: 176, column: 11, scope: !9669)
!9687 = !DILocation(line: 178, column: 2, scope: !9669)
!9688 = !DILocation(line: 180, column: 2, scope: !9669)
!9689 = !DILocation(line: 180, column: 12, scope: !9669)
!9690 = !DILocation(line: 181, column: 3, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9669, file: !953, line: 180, column: 20)
!9692 = !DILocation(line: 182, column: 7, scope: !9691)
!9693 = !DILocation(line: 183, column: 12, scope: !9691)
!9694 = !DILocation(line: 180, column: 15, scope: !9669)
!9695 = distinct !{!9695, !9688, !9696}
!9696 = !DILocation(line: 185, column: 2, scope: !9669)
!9697 = !DILocation(line: 188, column: 2, scope: !9669)
!9698 = !DILocation(line: 189, column: 1, scope: !9669)
!9699 = distinct !DISubprogram(name: "cursor_save", scope: !953, file: !953, line: 153, type: !3328, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !473)
!9700 = !DILocation(line: 155, column: 2, scope: !9699)
!9701 = !DILocation(line: 156, column: 1, scope: !9699)
!9702 = distinct !DISubprogram(name: "cursor_restore", scope: !953, file: !953, line: 158, type: !3328, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !473)
!9703 = !DILocation(line: 160, column: 2, scope: !9702)
!9704 = !DILocation(line: 161, column: 1, scope: !9702)
!9705 = distinct !DISubprogram(name: "atomic_or", scope: !9706, file: !9706, line: 279, type: !9707, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9709)
!9706 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9707 = !DISubroutineType(types: !9708)
!9708 = !{!9495, !9607, !9495}
!9709 = !{!9710, !9711}
!9710 = !DILocalVariable(name: "target", arg: 1, scope: !9705, file: !9706, line: 279, type: !9607)
!9711 = !DILocalVariable(name: "value", arg: 2, scope: !9705, file: !9706, line: 279, type: !9495)
!9712 = !DILocation(line: 0, scope: !9705)
!9713 = !DILocation(line: 281, column: 9, scope: !9705)
!9714 = !DILocation(line: 281, column: 2, scope: !9705)
!9715 = distinct !DISubprogram(name: "atomic_and", scope: !9706, file: !9706, line: 319, type: !9707, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9716)
!9716 = !{!9717, !9718}
!9717 = !DILocalVariable(name: "target", arg: 1, scope: !9715, file: !9706, line: 319, type: !9607)
!9718 = !DILocalVariable(name: "value", arg: 2, scope: !9715, file: !9706, line: 319, type: !9495)
!9719 = !DILocation(line: 0, scope: !9715)
!9720 = !DILocation(line: 321, column: 9, scope: !9715)
!9721 = !DILocation(line: 321, column: 2, scope: !9715)
!9722 = distinct !DISubprogram(name: "isdigit", scope: !5085, file: !5085, line: 43, type: !118, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9723)
!9723 = !{!9724}
!9724 = !DILocalVariable(name: "a", arg: 1, scope: !9722, file: !5085, line: 43, type: !103)
!9725 = !DILocation(line: 0, scope: !9722)
!9726 = !DILocation(line: 45, column: 29, scope: !9722)
!9727 = !DILocation(line: 45, column: 45, scope: !9722)
!9728 = !DILocation(line: 45, column: 2, scope: !9722)
!9729 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1136, file: !1136, line: 176, type: !9605, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9730)
!9730 = !{!9731, !9732, !9733, !9734}
!9731 = !DILocalVariable(name: "target", arg: 1, scope: !9729, file: !1136, line: 176, type: !9607)
!9732 = !DILocalVariable(name: "bit", arg: 2, scope: !9729, file: !1136, line: 176, type: !103)
!9733 = !DILocalVariable(name: "mask", scope: !9729, file: !1136, line: 178, type: !9495)
!9734 = !DILocalVariable(name: "old", scope: !9729, file: !1136, line: 179, type: !9495)
!9735 = !DILocation(line: 0, scope: !9729)
!9736 = !DILocation(line: 181, column: 8, scope: !9729)
!9737 = !DILocation(line: 183, column: 14, scope: !9729)
!9738 = !DILocation(line: 183, column: 22, scope: !9729)
!9739 = !DILocation(line: 183, column: 2, scope: !9729)
!9740 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1136, file: !1136, line: 198, type: !9621, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9741)
!9741 = !{!9742, !9743, !9744}
!9742 = !DILocalVariable(name: "target", arg: 1, scope: !9740, file: !1136, line: 198, type: !9607)
!9743 = !DILocalVariable(name: "bit", arg: 2, scope: !9740, file: !1136, line: 198, type: !103)
!9744 = !DILocalVariable(name: "mask", scope: !9740, file: !1136, line: 200, type: !9495)
!9745 = !DILocation(line: 0, scope: !9740)
!9746 = !DILocation(line: 200, column: 22, scope: !9740)
!9747 = !DILocation(line: 202, column: 45, scope: !9740)
!9748 = !DILocation(line: 202, column: 8, scope: !9740)
!9749 = !DILocation(line: 203, column: 1, scope: !9740)
!9750 = distinct !DISubprogram(name: "cursor_backward", scope: !953, file: !953, line: 148, type: !5912, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9751)
!9751 = !{!9752}
!9752 = !DILocalVariable(name: "count", arg: 1, scope: !9750, file: !953, line: 148, type: !32)
!9753 = !DILocation(line: 0, scope: !9750)
!9754 = !DILocation(line: 150, column: 2, scope: !9750)
!9755 = !DILocation(line: 151, column: 1, scope: !9750)
!9756 = distinct !DISubprogram(name: "cursor_forward", scope: !953, file: !953, line: 143, type: !5912, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9757)
!9757 = !{!9758}
!9758 = !DILocalVariable(name: "count", arg: 1, scope: !9756, file: !953, line: 143, type: !32)
!9759 = !DILocation(line: 0, scope: !9756)
!9760 = !DILocation(line: 145, column: 2, scope: !9756)
!9761 = !DILocation(line: 146, column: 1, scope: !9756)
!9762 = distinct !DISubprogram(name: "atomic_get", scope: !9706, file: !9706, line: 159, type: !9763, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9765)
!9763 = !DISubroutineType(types: !9764)
!9764 = !{!9495, !9489}
!9765 = !{!9766}
!9766 = !DILocalVariable(name: "target", arg: 1, scope: !9762, file: !9706, line: 159, type: !9489)
!9767 = !DILocation(line: 0, scope: !9762)
!9768 = !DILocation(line: 161, column: 9, scope: !9762)
!9769 = !DILocation(line: 161, column: 2, scope: !9762)
!9770 = !DISubprogram(name: "z_impl_k_queue_get", scope: !3768, file: !3768, line: 646, type: !9470, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!9771 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !212, file: !212, line: 1093, type: !990, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9772)
!9772 = !{!9773, !9774}
!9773 = !DILocalVariable(name: "dev", arg: 1, scope: !9771, file: !212, line: 1093, type: !969)
!9774 = !DILocalVariable(name: "api", scope: !9771, file: !212, line: 1096, type: !961)
!9775 = !DILocation(line: 0, scope: !9771)
!9776 = !DILocation(line: 1097, column: 40, scope: !9771)
!9777 = !DILocation(line: 1099, column: 11, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9771, file: !212, line: 1099, column: 6)
!9779 = !DILocation(line: 1099, column: 26, scope: !9778)
!9780 = !DILocation(line: 1099, column: 6, scope: !9771)
!9781 = !DILocation(line: 1102, column: 9, scope: !9771)
!9782 = !DILocation(line: 1102, column: 2, scope: !9771)
!9783 = !DILocation(line: 1107, column: 1, scope: !9771)
!9784 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !212, file: !212, line: 1136, type: !990, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9785)
!9785 = !{!9786, !9787}
!9786 = !DILocalVariable(name: "dev", arg: 1, scope: !9784, file: !212, line: 1136, type: !969)
!9787 = !DILocalVariable(name: "api", scope: !9784, file: !212, line: 1139, type: !961)
!9788 = !DILocation(line: 0, scope: !9784)
!9789 = !DILocation(line: 1140, column: 40, scope: !9784)
!9790 = !DILocation(line: 1142, column: 11, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9784, file: !212, line: 1142, column: 6)
!9792 = !DILocation(line: 1142, column: 22, scope: !9791)
!9793 = !DILocation(line: 1142, column: 6, scope: !9784)
!9794 = !DILocation(line: 1145, column: 9, scope: !9784)
!9795 = !DILocation(line: 1145, column: 2, scope: !9784)
!9796 = !DILocation(line: 1150, column: 1, scope: !9784)
!9797 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !212, file: !212, line: 878, type: !1020, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9798)
!9798 = !{!9799, !9800}
!9799 = !DILocalVariable(name: "dev", arg: 1, scope: !9797, file: !212, line: 878, type: !969)
!9800 = !DILocalVariable(name: "api", scope: !9797, file: !212, line: 881, type: !961)
!9801 = !DILocation(line: 0, scope: !9797)
!9802 = !DILocation(line: 882, column: 40, scope: !9797)
!9803 = !DILocation(line: 884, column: 11, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9797, file: !212, line: 884, column: 6)
!9805 = !DILocation(line: 884, column: 26, scope: !9804)
!9806 = !DILocation(line: 884, column: 6, scope: !9797)
!9807 = !DILocation(line: 885, column: 3, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9804, file: !212, line: 884, column: 35)
!9809 = !DILocation(line: 886, column: 2, scope: !9808)
!9810 = !DILocation(line: 890, column: 1, scope: !9797)
!9811 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !212, file: !212, line: 955, type: !1020, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !9812)
!9812 = !{!9813, !9814}
!9813 = !DILocalVariable(name: "dev", arg: 1, scope: !9811, file: !212, line: 955, type: !969)
!9814 = !DILocalVariable(name: "api", scope: !9811, file: !212, line: 958, type: !961)
!9815 = !DILocation(line: 0, scope: !9811)
!9816 = !DILocation(line: 959, column: 40, scope: !9811)
!9817 = !DILocation(line: 961, column: 11, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9811, file: !212, line: 961, column: 6)
!9819 = !DILocation(line: 961, column: 26, scope: !9818)
!9820 = !DILocation(line: 961, column: 6, scope: !9811)
!9821 = !DILocation(line: 962, column: 3, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9818, file: !212, line: 961, column: 35)
!9823 = !DILocation(line: 963, column: 2, scope: !9822)
!9824 = !DILocation(line: 967, column: 1, scope: !9811)
!9825 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1322, file: !1322, line: 523, type: !1178, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9826)
!9826 = !{!9827, !9828, !9829, !9830, !9831}
!9827 = !DILocalVariable(name: "dev", arg: 1, scope: !9825, file: !1322, line: 523, type: !1180)
!9828 = !DILocalVariable(name: "pin", arg: 2, scope: !9825, file: !1322, line: 524, type: !1195)
!9829 = !DILocalVariable(name: "flags", arg: 3, scope: !9825, file: !1322, line: 524, type: !1196)
!9830 = !DILocalVariable(name: "err", scope: !9825, file: !1322, line: 526, type: !103)
!9831 = !DILocalVariable(name: "pincfg", scope: !9825, file: !1322, line: 527, type: !103)
!9832 = !DILocation(line: 0, scope: !9825)
!9833 = !DILocation(line: 527, column: 2, scope: !9825)
!9834 = !DILocation(line: 532, column: 8, scope: !9825)
!9835 = !DILocation(line: 533, column: 10, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9825, file: !1322, line: 533, column: 6)
!9837 = !DILocation(line: 533, column: 6, scope: !9825)
!9838 = !DILocation(line: 543, column: 13, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9825, file: !1322, line: 543, column: 6)
!9840 = !DILocation(line: 543, column: 28, scope: !9839)
!9841 = !DILocation(line: 543, column: 6, scope: !9825)
!9842 = !DILocation(line: 544, column: 14, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9844, file: !1322, line: 544, column: 7)
!9844 = distinct !DILexicalBlock(scope: !9839, file: !1322, line: 543, column: 34)
!9845 = !DILocation(line: 544, column: 39, scope: !9843)
!9846 = !DILocation(line: 544, column: 7, scope: !9844)
!9847 = !DILocation(line: 545, column: 38, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9843, file: !1322, line: 544, column: 45)
!9849 = !DILocation(line: 545, column: 4, scope: !9848)
!9850 = !DILocation(line: 546, column: 3, scope: !9848)
!9851 = !DILocation(line: 546, column: 21, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9843, file: !1322, line: 546, column: 14)
!9853 = !DILocation(line: 546, column: 45, scope: !9852)
!9854 = !DILocation(line: 546, column: 14, scope: !9843)
!9855 = !DILocation(line: 547, column: 40, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9852, file: !1322, line: 546, column: 51)
!9857 = !DILocation(line: 547, column: 4, scope: !9856)
!9858 = !DILocation(line: 548, column: 3, scope: !9856)
!9859 = !DILocation(line: 551, column: 32, scope: !9825)
!9860 = !DILocation(line: 551, column: 37, scope: !9825)
!9861 = !DILocation(line: 551, column: 2, scope: !9825)
!9862 = !DILocation(line: 554, column: 6, scope: !9825)
!9863 = !DILocation(line: 562, column: 1, scope: !9825)
!9864 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1322, file: !1322, line: 410, type: !9865, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9867)
!9865 = !DISubroutineType(types: !9866)
!9866 = !{!103, !1180, !873}
!9867 = !{!9868, !9869, !9870, !9872}
!9868 = !DILocalVariable(name: "dev", arg: 1, scope: !9864, file: !1322, line: 410, type: !1180)
!9869 = !DILocalVariable(name: "value", arg: 2, scope: !9864, file: !1322, line: 410, type: !873)
!9870 = !DILocalVariable(name: "cfg", scope: !9864, file: !1322, line: 412, type: !9871)
!9871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 32)
!9872 = !DILocalVariable(name: "gpio", scope: !9864, file: !1322, line: 413, type: !1253)
!9873 = !DILocation(line: 0, scope: !9864)
!9874 = !DILocation(line: 412, column: 45, scope: !9864)
!9875 = !DILocation(line: 413, column: 44, scope: !9864)
!9876 = !DILocation(line: 415, column: 11, scope: !9864)
!9877 = !DILocation(line: 415, column: 9, scope: !9864)
!9878 = !DILocation(line: 417, column: 2, scope: !9864)
!9879 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1322, file: !1322, line: 420, type: !1205, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9880)
!9880 = !{!9881, !9882, !9883, !9884, !9885, !9886}
!9881 = !DILocalVariable(name: "dev", arg: 1, scope: !9879, file: !1322, line: 420, type: !1180)
!9882 = !DILocalVariable(name: "mask", arg: 2, scope: !9879, file: !1322, line: 421, type: !1207)
!9883 = !DILocalVariable(name: "value", arg: 3, scope: !9879, file: !1322, line: 422, type: !1202)
!9884 = !DILocalVariable(name: "cfg", scope: !9879, file: !1322, line: 424, type: !9871)
!9885 = !DILocalVariable(name: "gpio", scope: !9879, file: !1322, line: 425, type: !1253)
!9886 = !DILocalVariable(name: "port_value", scope: !9879, file: !1322, line: 426, type: !132)
!9887 = !DILocation(line: 0, scope: !9879)
!9888 = !DILocation(line: 424, column: 45, scope: !9879)
!9889 = !DILocation(line: 425, column: 44, scope: !9879)
!9890 = !DILocation(line: 430, column: 15, scope: !9879)
!9891 = !DILocation(line: 431, column: 46, scope: !9879)
!9892 = !DILocation(line: 431, column: 44, scope: !9879)
!9893 = !DILocation(line: 431, column: 61, scope: !9879)
!9894 = !DILocation(line: 431, column: 53, scope: !9879)
!9895 = !DILocation(line: 431, column: 2, scope: !9879)
!9896 = !DILocation(line: 435, column: 2, scope: !9879)
!9897 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1322, file: !1322, line: 438, type: !1210, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9898)
!9898 = !{!9899, !9900, !9901, !9902}
!9899 = !DILocalVariable(name: "dev", arg: 1, scope: !9897, file: !1322, line: 438, type: !1180)
!9900 = !DILocalVariable(name: "pins", arg: 2, scope: !9897, file: !1322, line: 439, type: !1207)
!9901 = !DILocalVariable(name: "cfg", scope: !9897, file: !1322, line: 441, type: !9871)
!9902 = !DILocalVariable(name: "gpio", scope: !9897, file: !1322, line: 442, type: !1253)
!9903 = !DILocation(line: 0, scope: !9897)
!9904 = !DILocation(line: 441, column: 45, scope: !9897)
!9905 = !DILocation(line: 442, column: 44, scope: !9897)
!9906 = !DILocation(line: 448, column: 2, scope: !9897)
!9907 = !DILocation(line: 450, column: 2, scope: !9897)
!9908 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1322, file: !1322, line: 453, type: !1210, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9909)
!9909 = !{!9910, !9911, !9912, !9913}
!9910 = !DILocalVariable(name: "dev", arg: 1, scope: !9908, file: !1322, line: 453, type: !1180)
!9911 = !DILocalVariable(name: "pins", arg: 2, scope: !9908, file: !1322, line: 454, type: !1207)
!9912 = !DILocalVariable(name: "cfg", scope: !9908, file: !1322, line: 456, type: !9871)
!9913 = !DILocalVariable(name: "gpio", scope: !9908, file: !1322, line: 457, type: !1253)
!9914 = !DILocation(line: 0, scope: !9908)
!9915 = !DILocation(line: 456, column: 45, scope: !9908)
!9916 = !DILocation(line: 457, column: 44, scope: !9908)
!9917 = !DILocation(line: 467, column: 2, scope: !9908)
!9918 = !DILocation(line: 470, column: 2, scope: !9908)
!9919 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1322, file: !1322, line: 473, type: !1210, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9920)
!9920 = !{!9921, !9922, !9923, !9924}
!9921 = !DILocalVariable(name: "dev", arg: 1, scope: !9919, file: !1322, line: 473, type: !1180)
!9922 = !DILocalVariable(name: "pins", arg: 2, scope: !9919, file: !1322, line: 474, type: !1207)
!9923 = !DILocalVariable(name: "cfg", scope: !9919, file: !1322, line: 476, type: !9871)
!9924 = !DILocalVariable(name: "gpio", scope: !9919, file: !1322, line: 477, type: !1253)
!9925 = !DILocation(line: 0, scope: !9919)
!9926 = !DILocation(line: 476, column: 45, scope: !9919)
!9927 = !DILocation(line: 477, column: 44, scope: !9919)
!9928 = !DILocation(line: 484, column: 2, scope: !9919)
!9929 = !DILocation(line: 487, column: 2, scope: !9919)
!9930 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1322, file: !1322, line: 594, type: !1216, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9931)
!9931 = !{!9932, !9933, !9934, !9935, !9936, !9937, !9939, !9940, !9941}
!9932 = !DILocalVariable(name: "dev", arg: 1, scope: !9930, file: !1322, line: 594, type: !1180)
!9933 = !DILocalVariable(name: "pin", arg: 2, scope: !9930, file: !1322, line: 595, type: !1195)
!9934 = !DILocalVariable(name: "mode", arg: 3, scope: !9930, file: !1322, line: 596, type: !1154)
!9935 = !DILocalVariable(name: "trig", arg: 4, scope: !9930, file: !1322, line: 597, type: !1160)
!9936 = !DILocalVariable(name: "cfg", scope: !9930, file: !1322, line: 599, type: !9871)
!9937 = !DILocalVariable(name: "data", scope: !9930, file: !1322, line: 600, type: !9938)
!9938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!9939 = !DILocalVariable(name: "edge", scope: !9930, file: !1322, line: 601, type: !103)
!9940 = !DILocalVariable(name: "err", scope: !9930, file: !1322, line: 602, type: !103)
!9941 = !DILabel(scope: !9930, name: "exit", file: !1322, line: 643)
!9942 = !DILocation(line: 0, scope: !9930)
!9943 = !DILocation(line: 599, column: 45, scope: !9930)
!9944 = !DILocation(line: 604, column: 6, scope: !9930)
!9945 = !DILocation(line: 605, column: 34, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9947, file: !1322, line: 605, column: 7)
!9947 = distinct !DILexicalBlock(scope: !9948, file: !1322, line: 604, column: 38)
!9948 = distinct !DILexicalBlock(scope: !9930, file: !1322, line: 604, column: 6)
!9949 = !DILocation(line: 605, column: 7, scope: !9946)
!9950 = !DILocation(line: 605, column: 47, scope: !9946)
!9951 = !DILocation(line: 605, column: 39, scope: !9946)
!9952 = !DILocation(line: 605, column: 7, scope: !9947)
!9953 = !DILocation(line: 606, column: 4, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9946, file: !1322, line: 605, column: 53)
!9955 = !DILocation(line: 607, column: 4, scope: !9954)
!9956 = !DILocation(line: 608, column: 4, scope: !9954)
!9957 = !DILocation(line: 609, column: 3, scope: !9954)
!9958 = !DILocation(line: 600, column: 38, scope: !9930)
!9959 = !DILocation(line: 620, column: 30, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9930, file: !1322, line: 620, column: 6)
!9961 = !DILocation(line: 620, column: 6, scope: !9960)
!9962 = !DILocation(line: 620, column: 57, scope: !9960)
!9963 = !DILocation(line: 620, column: 6, scope: !9930)
!9964 = !DILocation(line: 625, column: 29, scope: !9930)
!9965 = !DILocation(line: 625, column: 2, scope: !9930)
!9966 = !DILocation(line: 627, column: 2, scope: !9930)
!9967 = !DILocation(line: 630, column: 3, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9930, file: !1322, line: 627, column: 16)
!9969 = !DILocation(line: 633, column: 3, scope: !9968)
!9970 = !DILocation(line: 636, column: 3, scope: !9968)
!9971 = !DILocation(line: 639, column: 2, scope: !9930)
!9972 = !DILocation(line: 641, column: 2, scope: !9930)
!9973 = !DILocation(line: 643, column: 1, scope: !9930)
!9974 = !DILocation(line: 644, column: 2, scope: !9930)
!9975 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1322, file: !1322, line: 647, type: !1220, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9976)
!9976 = !{!9977, !9978, !9979, !9980}
!9977 = !DILocalVariable(name: "dev", arg: 1, scope: !9975, file: !1322, line: 647, type: !1180)
!9978 = !DILocalVariable(name: "callback", arg: 2, scope: !9975, file: !1322, line: 648, type: !1222)
!9979 = !DILocalVariable(name: "set", arg: 3, scope: !9975, file: !1322, line: 649, type: !166)
!9980 = !DILocalVariable(name: "data", scope: !9975, file: !1322, line: 651, type: !9938)
!9981 = !DILocation(line: 0, scope: !9975)
!9982 = !DILocation(line: 651, column: 38, scope: !9975)
!9983 = !DILocation(line: 653, column: 37, scope: !9975)
!9984 = !DILocation(line: 653, column: 9, scope: !9975)
!9985 = !DILocation(line: 653, column: 2, scope: !9975)
!9986 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9987, file: !9987, line: 38, type: !9988, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9991)
!9987 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9988 = !DISubroutineType(types: !9989)
!9989 = !{!103, !9990, !1222, !166}
!9990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!9991 = !{!9992, !9993, !9994}
!9992 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9986, file: !9987, line: 38, type: !9990)
!9993 = !DILocalVariable(name: "callback", arg: 2, scope: !9986, file: !9987, line: 39, type: !1222)
!9994 = !DILocalVariable(name: "set", arg: 3, scope: !9986, file: !9987, line: 40, type: !166)
!9995 = !DILocation(line: 0, scope: !9986)
!9996 = !DILocation(line: 45, column: 7, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9986, file: !9987, line: 45, column: 6)
!9998 = !DILocation(line: 45, column: 6, scope: !9986)
!9999 = !DILocation(line: 46, column: 56, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !10001, file: !9987, line: 46, column: 7)
!10001 = distinct !DILexicalBlock(scope: !9997, file: !9987, line: 45, column: 38)
!10002 = !DILocation(line: 46, column: 8, scope: !10000)
!10003 = !DILocation(line: 46, column: 7, scope: !10001)
!10004 = !DILocation(line: 51, column: 13, scope: !9997)
!10005 = !DILocation(line: 56, column: 43, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10007, file: !9987, line: 55, column: 11)
!10007 = distinct !DILexicalBlock(scope: !9986, file: !9987, line: 55, column: 6)
!10008 = !DILocation(line: 56, column: 3, scope: !10006)
!10009 = !DILocation(line: 57, column: 2, scope: !10006)
!10010 = !DILocation(line: 60, column: 1, scope: !9986)
!10011 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1227, file: !1227, line: 261, type: !10012, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10014)
!10012 = !DISubroutineType(types: !10013)
!10013 = !{!166, !9990}
!10014 = !{!10015}
!10015 = !DILocalVariable(name: "list", arg: 1, scope: !10011, file: !1227, line: 261, type: !9990)
!10016 = !DILocation(line: 0, scope: !10011)
!10017 = !DILocation(line: 261, column: 1, scope: !10011)
!10018 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1227, file: !1227, line: 417, type: !10019, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10021)
!10019 = !DISubroutineType(types: !10020)
!10020 = !{!166, !9990, !1395}
!10021 = !{!10022, !10023, !10024, !10025}
!10022 = !DILocalVariable(name: "list", arg: 1, scope: !10018, file: !1227, line: 417, type: !9990)
!10023 = !DILocalVariable(name: "node", arg: 2, scope: !10018, file: !1227, line: 417, type: !1395)
!10024 = !DILocalVariable(name: "prev", scope: !10018, file: !1227, line: 417, type: !1395)
!10025 = !DILocalVariable(name: "test", scope: !10018, file: !1227, line: 417, type: !1395)
!10026 = !DILocation(line: 0, scope: !10018)
!10027 = !DILocation(line: 417, column: 1, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10018, file: !1227, line: 417, column: 1)
!10029 = !DILocation(line: 417, column: 1, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10028, file: !1227, line: 417, column: 1)
!10031 = !DILocation(line: 417, column: 1, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10033, file: !1227, line: 417, column: 1)
!10033 = distinct !DILexicalBlock(scope: !10030, file: !1227, line: 417, column: 1)
!10034 = !DILocation(line: 417, column: 1, scope: !10033)
!10035 = distinct !{!10035, !10027, !10027}
!10036 = !DILocation(line: 417, column: 1, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10032, file: !1227, line: 417, column: 1)
!10038 = !DILocation(line: 417, column: 1, scope: !10018)
!10039 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1227, file: !1227, line: 298, type: !10040, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10042)
!10040 = !DISubroutineType(types: !10041)
!10041 = !{null, !9990, !1395}
!10042 = !{!10043, !10044}
!10043 = !DILocalVariable(name: "list", arg: 1, scope: !10039, file: !1227, line: 298, type: !9990)
!10044 = !DILocalVariable(name: "node", arg: 2, scope: !10039, file: !1227, line: 298, type: !1395)
!10045 = !DILocation(line: 0, scope: !10039)
!10046 = !DILocation(line: 298, column: 1, scope: !10039)
!10047 = !DILocation(line: 298, column: 1, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10039, file: !1227, line: 298, column: 1)
!10049 = !DILocation(line: 298, column: 1, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10048, file: !1227, line: 298, column: 1)
!10051 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1227, file: !1227, line: 231, type: !10052, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10054)
!10052 = !DISubroutineType(types: !10053)
!10053 = !{!1395, !9990}
!10054 = !{!10055}
!10055 = !DILocalVariable(name: "list", arg: 1, scope: !10051, file: !1227, line: 231, type: !9990)
!10056 = !DILocation(line: 0, scope: !10051)
!10057 = !DILocation(line: 233, column: 15, scope: !10051)
!10058 = !DILocation(line: 233, column: 2, scope: !10051)
!10059 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1227, file: !1227, line: 209, type: !10060, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10062)
!10060 = !DISubroutineType(types: !10061)
!10061 = !{null, !1395, !1395}
!10062 = !{!10063, !10064}
!10063 = !DILocalVariable(name: "parent", arg: 1, scope: !10059, file: !1227, line: 209, type: !1395)
!10064 = !DILocalVariable(name: "child", arg: 2, scope: !10059, file: !1227, line: 209, type: !1395)
!10065 = !DILocation(line: 0, scope: !10059)
!10066 = !DILocation(line: 211, column: 10, scope: !10059)
!10067 = !DILocation(line: 211, column: 15, scope: !10059)
!10068 = !DILocation(line: 212, column: 1, scope: !10059)
!10069 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1227, file: !1227, line: 214, type: !10040, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10070)
!10070 = !{!10071, !10072}
!10071 = !DILocalVariable(name: "list", arg: 1, scope: !10069, file: !1227, line: 214, type: !9990)
!10072 = !DILocalVariable(name: "node", arg: 2, scope: !10069, file: !1227, line: 214, type: !1395)
!10073 = !DILocation(line: 0, scope: !10069)
!10074 = !DILocation(line: 216, column: 8, scope: !10069)
!10075 = !DILocation(line: 216, column: 13, scope: !10069)
!10076 = !DILocation(line: 217, column: 1, scope: !10069)
!10077 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1227, file: !1227, line: 243, type: !10052, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10078)
!10078 = !{!10079}
!10079 = !DILocalVariable(name: "list", arg: 1, scope: !10077, file: !1227, line: 243, type: !9990)
!10080 = !DILocation(line: 0, scope: !10077)
!10081 = !DILocation(line: 245, column: 15, scope: !10077)
!10082 = !DILocation(line: 245, column: 2, scope: !10077)
!10083 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1227, file: !1227, line: 219, type: !10040, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10084)
!10084 = !{!10085, !10086}
!10085 = !DILocalVariable(name: "list", arg: 1, scope: !10083, file: !1227, line: 219, type: !9990)
!10086 = !DILocalVariable(name: "node", arg: 2, scope: !10083, file: !1227, line: 219, type: !1395)
!10087 = !DILocation(line: 0, scope: !10083)
!10088 = !DILocation(line: 221, column: 8, scope: !10083)
!10089 = !DILocation(line: 221, column: 13, scope: !10083)
!10090 = !DILocation(line: 222, column: 1, scope: !10083)
!10091 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1227, file: !1227, line: 401, type: !10092, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10094)
!10092 = !DISubroutineType(types: !10093)
!10093 = !{null, !9990, !1395, !1395}
!10094 = !{!10095, !10096, !10097}
!10095 = !DILocalVariable(name: "list", arg: 1, scope: !10091, file: !1227, line: 401, type: !9990)
!10096 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10091, file: !1227, line: 401, type: !1395)
!10097 = !DILocalVariable(name: "node", arg: 3, scope: !10091, file: !1227, line: 401, type: !1395)
!10098 = !DILocation(line: 0, scope: !10091)
!10099 = !DILocation(line: 401, column: 1, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10091, file: !1227, line: 401, column: 1)
!10101 = !DILocation(line: 0, scope: !10100)
!10102 = !DILocation(line: 401, column: 1, scope: !10091)
!10103 = !DILocation(line: 401, column: 1, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10100, file: !1227, line: 401, column: 1)
!10105 = !DILocation(line: 401, column: 1, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10104, file: !1227, line: 401, column: 1)
!10107 = !DILocation(line: 401, column: 1, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10106, file: !1227, line: 401, column: 1)
!10109 = !DILocation(line: 401, column: 1, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10100, file: !1227, line: 401, column: 1)
!10111 = !DILocation(line: 401, column: 1, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10110, file: !1227, line: 401, column: 1)
!10113 = !DILocation(line: 401, column: 1, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10112, file: !1227, line: 401, column: 1)
!10115 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1227, file: !1227, line: 285, type: !10116, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10118)
!10116 = !DISubroutineType(types: !10117)
!10117 = !{!1395, !1395}
!10118 = !{!10119}
!10119 = !DILocalVariable(name: "node", arg: 1, scope: !10115, file: !1227, line: 285, type: !1395)
!10120 = !DILocation(line: 0, scope: !10115)
!10121 = !DILocation(line: 285, column: 1, scope: !10115)
!10122 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1227, file: !1227, line: 274, type: !10116, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10123)
!10123 = !{!10124}
!10124 = !DILocalVariable(name: "node", arg: 1, scope: !10122, file: !1227, line: 274, type: !1395)
!10125 = !DILocation(line: 0, scope: !10122)
!10126 = !DILocation(line: 274, column: 1, scope: !10122)
!10127 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1227, file: !1227, line: 204, type: !10116, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10128)
!10128 = !{!10129}
!10129 = !DILocalVariable(name: "node", arg: 1, scope: !10127, file: !1227, line: 204, type: !1395)
!10130 = !DILocation(line: 0, scope: !10127)
!10131 = !DILocation(line: 206, column: 15, scope: !10127)
!10132 = !DILocation(line: 206, column: 2, scope: !10127)
!10133 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1322, file: !1322, line: 342, type: !118, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10134)
!10134 = !{!10135, !10136, !10137}
!10135 = !DILocalVariable(name: "pin", arg: 1, scope: !10133, file: !1322, line: 342, type: !103)
!10136 = !DILocalVariable(name: "line", scope: !10133, file: !1322, line: 344, type: !132)
!10137 = !DILocalVariable(name: "port", scope: !10133, file: !1322, line: 345, type: !103)
!10138 = !DILocation(line: 0, scope: !10133)
!10139 = !DILocation(line: 344, column: 18, scope: !10133)
!10140 = !{i32 983040, i32 0}
!10141 = !DILocation(line: 356, column: 9, scope: !10133)
!10142 = !DILocation(line: 370, column: 2, scope: !10133)
!10143 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1322, file: !1322, line: 37, type: !729, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10144)
!10144 = !{!10145, !10146, !10147}
!10145 = !DILocalVariable(name: "line", arg: 1, scope: !10143, file: !1322, line: 37, type: !103)
!10146 = !DILocalVariable(name: "arg", arg: 2, scope: !10143, file: !1322, line: 37, type: !102)
!10147 = !DILocalVariable(name: "data", scope: !10143, file: !1322, line: 39, type: !9938)
!10148 = !DILocation(line: 0, scope: !10143)
!10149 = !DILocation(line: 41, column: 29, scope: !10143)
!10150 = !DILocation(line: 41, column: 39, scope: !10143)
!10151 = !DILocation(line: 41, column: 44, scope: !10143)
!10152 = !DILocation(line: 41, column: 2, scope: !10143)
!10153 = !DILocation(line: 42, column: 1, scope: !10143)
!10154 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1322, file: !1322, line: 376, type: !10155, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10157)
!10155 = !DISubroutineType(types: !10156)
!10156 = !{!103, !103, !103}
!10157 = !{!10158, !10159, !10160, !10162, !10163}
!10158 = !DILocalVariable(name: "port", arg: 1, scope: !10154, file: !1322, line: 376, type: !103)
!10159 = !DILocalVariable(name: "pin", arg: 2, scope: !10154, file: !1322, line: 376, type: !103)
!10160 = !DILocalVariable(name: "clk", scope: !10154, file: !1322, line: 386, type: !10161)
!10161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1180)
!10162 = !DILocalVariable(name: "pclken", scope: !10154, file: !1322, line: 387, type: !1438)
!10163 = !DILocalVariable(name: "ret", scope: !10154, file: !1322, line: 396, type: !103)
!10164 = !DILocation(line: 0, scope: !10154)
!10165 = !DILocation(line: 387, column: 2, scope: !10154)
!10166 = !DILocation(line: 387, column: 22, scope: !10154)
!10167 = !DILocation(line: 399, column: 8, scope: !10154)
!10168 = !DILocation(line: 400, column: 10, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10154, file: !1322, line: 400, column: 6)
!10170 = !DILocation(line: 400, column: 6, scope: !10154)
!10171 = !DILocation(line: 405, column: 2, scope: !10154)
!10172 = !DILocation(line: 407, column: 2, scope: !10154)
!10173 = !DILocation(line: 408, column: 1, scope: !10154)
!10174 = distinct !DISubprogram(name: "clock_control_on", scope: !821, file: !821, line: 123, type: !1287, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10175)
!10175 = !{!10176, !10177, !10178}
!10176 = !DILocalVariable(name: "dev", arg: 1, scope: !10174, file: !821, line: 123, type: !1180)
!10177 = !DILocalVariable(name: "sys", arg: 2, scope: !10174, file: !821, line: 124, type: !915)
!10178 = !DILocalVariable(name: "api", scope: !10174, file: !821, line: 126, type: !1280)
!10179 = !DILocation(line: 0, scope: !10174)
!10180 = !DILocation(line: 127, column: 49, scope: !10174)
!10181 = !DILocation(line: 129, column: 14, scope: !10174)
!10182 = !DILocation(line: 129, column: 9, scope: !10174)
!10183 = !DILocation(line: 129, column: 2, scope: !10174)
!10184 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1322, file: !1322, line: 311, type: !8712, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10185)
!10185 = !{!10186, !10187, !10188}
!10186 = !DILocalVariable(name: "port", arg: 1, scope: !10184, file: !1322, line: 311, type: !103)
!10187 = !DILocalVariable(name: "pin", arg: 2, scope: !10184, file: !1322, line: 311, type: !103)
!10188 = !DILocalVariable(name: "line", scope: !10184, file: !1322, line: 313, type: !132)
!10189 = !DILocation(line: 0, scope: !10184)
!10190 = !DILocation(line: 313, column: 18, scope: !10184)
!10191 = !DILocation(line: 337, column: 2, scope: !10184)
!10192 = !DILocation(line: 340, column: 1, scope: !10184)
!10193 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1322, file: !1322, line: 295, type: !10194, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10196)
!10194 = !DISubroutineType(types: !10195)
!10195 = !{!132, !103}
!10196 = !{!10197}
!10197 = !DILocalVariable(name: "pin", arg: 1, scope: !10193, file: !1322, line: 295, type: !103)
!10198 = !DILocation(line: 0, scope: !10193)
!10199 = !DILocation(line: 307, column: 46, scope: !10193)
!10200 = !DILocation(line: 307, column: 27, scope: !10193)
!10201 = !DILocation(line: 307, column: 32, scope: !10193)
!10202 = !DILocation(line: 307, column: 14, scope: !10193)
!10203 = !DILocation(line: 307, column: 39, scope: !10193)
!10204 = !DILocation(line: 307, column: 2, scope: !10193)
!10205 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5922, file: !5922, line: 671, type: !10206, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10208)
!10206 = !DISubroutineType(types: !10207)
!10207 = !{null, !132, !132}
!10208 = !{!10209, !10210}
!10209 = !DILocalVariable(name: "Port", arg: 1, scope: !10205, file: !5922, line: 671, type: !132)
!10210 = !DILocalVariable(name: "Line", arg: 2, scope: !10205, file: !5922, line: 671, type: !132)
!10211 = !DILocation(line: 0, scope: !10205)
!10212 = !DILocation(line: 673, column: 3, scope: !10205)
!10213 = !DILocalVariable(name: "value", arg: 1, scope: !10214, file: !6921, line: 373, type: !132)
!10214 = distinct !DISubprogram(name: "__RBIT", scope: !6921, file: !6921, line: 373, type: !7928, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10215)
!10215 = !{!10213, !10216}
!10216 = !DILocalVariable(name: "result", scope: !10214, file: !6921, line: 375, type: !132)
!10217 = !DILocation(line: 0, scope: !10214, inlinedAt: !10218)
!10218 = distinct !DILocation(line: 673, column: 3, scope: !10205)
!10219 = !DILocation(line: 380, column: 4, scope: !10214, inlinedAt: !10218)
!10220 = !{i64 3730739}
!10221 = !DILocalVariable(name: "value", arg: 1, scope: !10222, file: !6921, line: 403, type: !132)
!10222 = distinct !DISubprogram(name: "__CLZ", scope: !6921, file: !6921, line: 403, type: !10223, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10225)
!10223 = !DISubroutineType(types: !10224)
!10224 = !{!163, !132}
!10225 = !{!10221}
!10226 = !DILocation(line: 0, scope: !10222, inlinedAt: !10227)
!10227 = distinct !DILocation(line: 673, column: 3, scope: !10205)
!10228 = !DILocation(line: 414, column: 7, scope: !10222, inlinedAt: !10227)
!10229 = !DILocation(line: 674, column: 1, scope: !10205)
!10230 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9987, file: !9987, line: 69, type: !10231, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10233)
!10231 = !DISubroutineType(types: !10232)
!10232 = !{null, !9990, !1180, !132}
!10233 = !{!10234, !10235, !10236, !10237, !10238}
!10234 = !DILocalVariable(name: "list", arg: 1, scope: !10230, file: !9987, line: 69, type: !9990)
!10235 = !DILocalVariable(name: "port", arg: 2, scope: !10230, file: !9987, line: 70, type: !1180)
!10236 = !DILocalVariable(name: "pins", arg: 3, scope: !10230, file: !9987, line: 71, type: !132)
!10237 = !DILocalVariable(name: "cb", scope: !10230, file: !9987, line: 73, type: !1222)
!10238 = !DILocalVariable(name: "tmp", scope: !10230, file: !9987, line: 73, type: !1222)
!10239 = !DILocation(line: 0, scope: !10230)
!10240 = !DILocation(line: 75, column: 2, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10230, file: !9987, line: 75, column: 2)
!10242 = !DILocation(line: 0, scope: !10241)
!10243 = !DILocation(line: 76, column: 11, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10245, file: !9987, line: 76, column: 7)
!10245 = distinct !DILexicalBlock(scope: !10246, file: !9987, line: 75, column: 57)
!10246 = distinct !DILexicalBlock(scope: !10241, file: !9987, line: 75, column: 2)
!10247 = !DILocation(line: 76, column: 20, scope: !10244)
!10248 = !DILocation(line: 76, column: 7, scope: !10245)
!10249 = !DILocation(line: 78, column: 8, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10244, file: !9987, line: 76, column: 28)
!10251 = !DILocation(line: 78, column: 4, scope: !10250)
!10252 = !DILocation(line: 79, column: 3, scope: !10250)
!10253 = !DILocation(line: 75, column: 2, scope: !10246)
!10254 = !DILocation(line: 81, column: 1, scope: !10230)
!10255 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5922, file: !5922, line: 710, type: !7928, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10256)
!10256 = !{!10257}
!10257 = !DILocalVariable(name: "Line", arg: 1, scope: !10255, file: !5922, line: 710, type: !132)
!10258 = !DILocation(line: 0, scope: !10255)
!10259 = !DILocation(line: 712, column: 21, scope: !10255)
!10260 = !DILocation(line: 0, scope: !10214, inlinedAt: !10261)
!10261 = distinct !DILocation(line: 712, column: 76, scope: !10255)
!10262 = !DILocation(line: 380, column: 4, scope: !10214, inlinedAt: !10261)
!10263 = !DILocation(line: 0, scope: !10222, inlinedAt: !10264)
!10264 = distinct !DILocation(line: 712, column: 76, scope: !10255)
!10265 = !DILocation(line: 414, column: 7, scope: !10222, inlinedAt: !10264)
!10266 = !DILocation(line: 712, column: 73, scope: !10255)
!10267 = !DILocation(line: 712, column: 3, scope: !10255)
!10268 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10269, file: !10269, line: 910, type: !10270, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10272)
!10269 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10270 = !DISubroutineType(types: !10271)
!10271 = !{null, !1253, !132}
!10272 = !{!10273, !10274}
!10273 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10268, file: !10269, line: 910, type: !1253)
!10274 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10268, file: !10269, line: 910, type: !132)
!10275 = !DILocation(line: 0, scope: !10268)
!10276 = !DILocation(line: 912, column: 3, scope: !10268)
!10277 = !DILocation(line: 913, column: 1, scope: !10268)
!10278 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10269, file: !10269, line: 823, type: !10279, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10281)
!10279 = !DISubroutineType(types: !10280)
!10280 = !{!132, !1253}
!10281 = !{!10282}
!10282 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10278, file: !10269, line: 823, type: !1253)
!10283 = !DILocation(line: 0, scope: !10278)
!10284 = !DILocation(line: 825, column: 21, scope: !10278)
!10285 = !DILocation(line: 825, column: 3, scope: !10278)
!10286 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10269, file: !10269, line: 812, type: !10270, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10287)
!10287 = !{!10288, !10289}
!10288 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10286, file: !10269, line: 812, type: !1253)
!10289 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10286, file: !10269, line: 812, type: !132)
!10290 = !DILocation(line: 0, scope: !10286)
!10291 = !DILocation(line: 814, column: 3, scope: !10286)
!10292 = !DILocation(line: 815, column: 1, scope: !10286)
!10293 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10269, file: !10269, line: 771, type: !10279, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10294)
!10294 = !{!10295}
!10295 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10293, file: !10269, line: 771, type: !1253)
!10296 = !DILocation(line: 0, scope: !10293)
!10297 = !DILocation(line: 773, column: 21, scope: !10293)
!10298 = !DILocation(line: 773, column: 3, scope: !10293)
!10299 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1322, file: !1322, line: 47, type: !10300, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10302)
!10300 = !DISubroutineType(types: !10301)
!10301 = !{!103, !1196, !2715}
!10302 = !{!10303, !10304}
!10303 = !DILocalVariable(name: "flags", arg: 1, scope: !10299, file: !1322, line: 47, type: !1196)
!10304 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10299, file: !1322, line: 47, type: !2715)
!10305 = !DILocation(line: 0, scope: !10299)
!10306 = !DILocation(line: 50, column: 13, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10299, file: !1322, line: 50, column: 6)
!10308 = !DILocation(line: 50, column: 28, scope: !10307)
!10309 = !DILocation(line: 50, column: 6, scope: !10299)
!10310 = !DILocation(line: 53, column: 11, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10307, file: !1322, line: 50, column: 34)
!10312 = !DILocation(line: 55, column: 14, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10311, file: !1322, line: 55, column: 7)
!10314 = !DILocation(line: 55, column: 35, scope: !10313)
!10315 = !DILocation(line: 55, column: 7, scope: !10311)
!10316 = !DILocation(line: 56, column: 14, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10318, file: !1322, line: 56, column: 8)
!10318 = distinct !DILexicalBlock(scope: !10313, file: !1322, line: 55, column: 41)
!10319 = !DILocation(line: 56, column: 8, scope: !10318)
!10320 = !DILocation(line: 0, scope: !10313)
!10321 = !DILocation(line: 66, column: 14, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10311, file: !1322, line: 66, column: 7)
!10323 = !DILocation(line: 66, column: 30, scope: !10322)
!10324 = !DILocation(line: 66, column: 7, scope: !10311)
!10325 = !DILocation(line: 67, column: 12, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10322, file: !1322, line: 66, column: 36)
!10327 = !DILocation(line: 68, column: 3, scope: !10326)
!10328 = !DILocation(line: 68, column: 21, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10322, file: !1322, line: 68, column: 14)
!10330 = !DILocation(line: 68, column: 39, scope: !10329)
!10331 = !DILocation(line: 68, column: 14, scope: !10322)
!10332 = !DILocation(line: 69, column: 12, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10329, file: !1322, line: 68, column: 45)
!10334 = !DILocation(line: 70, column: 3, scope: !10333)
!10335 = !DILocation(line: 72, column: 21, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10307, file: !1322, line: 72, column: 14)
!10337 = !DILocation(line: 72, column: 35, scope: !10336)
!10338 = !DILocation(line: 72, column: 14, scope: !10307)
!10339 = !DILocation(line: 77, column: 14, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10341, file: !1322, line: 77, column: 7)
!10341 = distinct !DILexicalBlock(scope: !10336, file: !1322, line: 72, column: 41)
!10342 = !DILocation(line: 77, column: 30, scope: !10340)
!10343 = !DILocation(line: 77, column: 7, scope: !10341)
!10344 = !DILocation(line: 0, scope: !10307)
!10345 = !DILocation(line: 90, column: 1, scope: !10299)
!10346 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1322, file: !1322, line: 157, type: !10347, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10349)
!10347 = !DISubroutineType(types: !10348)
!10348 = !{null, !1180, !103, !103, !103}
!10349 = !{!10350, !10351, !10352, !10353, !10354, !10355, !10356, !10357, !10358, !10359, !10360}
!10350 = !DILocalVariable(name: "dev", arg: 1, scope: !10346, file: !1322, line: 157, type: !1180)
!10351 = !DILocalVariable(name: "pin", arg: 2, scope: !10346, file: !1322, line: 157, type: !103)
!10352 = !DILocalVariable(name: "conf", arg: 3, scope: !10346, file: !1322, line: 158, type: !103)
!10353 = !DILocalVariable(name: "func", arg: 4, scope: !10346, file: !1322, line: 158, type: !103)
!10354 = !DILocalVariable(name: "cfg", scope: !10346, file: !1322, line: 160, type: !9871)
!10355 = !DILocalVariable(name: "gpio", scope: !10346, file: !1322, line: 161, type: !1253)
!10356 = !DILocalVariable(name: "pin_ll", scope: !10346, file: !1322, line: 163, type: !103)
!10357 = !DILocalVariable(name: "mode", scope: !10346, file: !1322, line: 227, type: !32)
!10358 = !DILocalVariable(name: "otype", scope: !10346, file: !1322, line: 227, type: !32)
!10359 = !DILocalVariable(name: "ospeed", scope: !10346, file: !1322, line: 227, type: !32)
!10360 = !DILocalVariable(name: "pupd", scope: !10346, file: !1322, line: 227, type: !32)
!10361 = !DILocation(line: 0, scope: !10346)
!10362 = !DILocation(line: 160, column: 45, scope: !10346)
!10363 = !DILocation(line: 161, column: 44, scope: !10346)
!10364 = !DILocation(line: 163, column: 15, scope: !10346)
!10365 = !DILocation(line: 229, column: 14, scope: !10346)
!10366 = !DILocation(line: 246, column: 47, scope: !10346)
!10367 = !DILocation(line: 246, column: 2, scope: !10346)
!10368 = !DILocation(line: 248, column: 43, scope: !10346)
!10369 = !DILocation(line: 248, column: 2, scope: !10346)
!10370 = !DILocation(line: 250, column: 40, scope: !10346)
!10371 = !DILocation(line: 250, column: 2, scope: !10346)
!10372 = !DILocation(line: 252, column: 11, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10346, file: !1322, line: 252, column: 6)
!10374 = !DILocation(line: 252, column: 6, scope: !10346)
!10375 = !DILocation(line: 253, column: 11, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10377, file: !1322, line: 253, column: 7)
!10377 = distinct !DILexicalBlock(scope: !10373, file: !1322, line: 252, column: 36)
!10378 = !DILocation(line: 253, column: 7, scope: !10377)
!10379 = !DILocation(line: 254, column: 4, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10376, file: !1322, line: 253, column: 16)
!10381 = !DILocation(line: 255, column: 3, scope: !10380)
!10382 = !DILocation(line: 256, column: 4, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10376, file: !1322, line: 255, column: 10)
!10384 = !DILocation(line: 260, column: 40, scope: !10346)
!10385 = !DILocation(line: 260, column: 2, scope: !10346)
!10386 = !DILocation(line: 265, column: 1, scope: !10346)
!10387 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1322, file: !1322, line: 137, type: !10194, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10388)
!10388 = !{!10389, !10390}
!10389 = !DILocalVariable(name: "pin", arg: 1, scope: !10387, file: !1322, line: 137, type: !103)
!10390 = !DILocalVariable(name: "pinval", scope: !10387, file: !1322, line: 139, type: !132)
!10391 = !DILocation(line: 0, scope: !10387)
!10392 = !DILocation(line: 149, column: 13, scope: !10387)
!10393 = !DILocation(line: 151, column: 2, scope: !10387)
!10394 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10269, file: !10269, line: 342, type: !10395, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10397)
!10395 = !DISubroutineType(types: !10396)
!10396 = !{null, !1253, !132, !132}
!10397 = !{!10398, !10399, !10400}
!10398 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10394, file: !10269, line: 342, type: !1253)
!10399 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10394, file: !10269, line: 342, type: !132)
!10400 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10394, file: !10269, line: 342, type: !132)
!10401 = !DILocation(line: 0, scope: !10394)
!10402 = !DILocation(line: 344, column: 3, scope: !10394)
!10403 = !DILocation(line: 345, column: 1, scope: !10394)
!10404 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10269, file: !10269, line: 413, type: !10395, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10405)
!10405 = !{!10406, !10407, !10408}
!10406 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10404, file: !10269, line: 413, type: !1253)
!10407 = !DILocalVariable(name: "Pin", arg: 2, scope: !10404, file: !10269, line: 413, type: !132)
!10408 = !DILocalVariable(name: "Speed", arg: 3, scope: !10404, file: !10269, line: 413, type: !132)
!10409 = !DILocation(line: 0, scope: !10404)
!10410 = !DILocation(line: 415, column: 3, scope: !10404)
!10411 = !DILocation(line: 0, scope: !10214, inlinedAt: !10412)
!10412 = distinct !DILocation(line: 415, column: 3, scope: !10404)
!10413 = !DILocation(line: 380, column: 4, scope: !10214, inlinedAt: !10412)
!10414 = !DILocation(line: 0, scope: !10222, inlinedAt: !10415)
!10415 = distinct !DILocation(line: 415, column: 3, scope: !10404)
!10416 = !DILocation(line: 414, column: 7, scope: !10222, inlinedAt: !10415)
!10417 = !DILocation(line: 0, scope: !10214, inlinedAt: !10418)
!10418 = distinct !DILocation(line: 415, column: 3, scope: !10404)
!10419 = !DILocation(line: 0, scope: !10222, inlinedAt: !10420)
!10420 = distinct !DILocation(line: 415, column: 3, scope: !10404)
!10421 = !DILocation(line: 417, column: 1, scope: !10404)
!10422 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10269, file: !10269, line: 484, type: !10395, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10423)
!10423 = !{!10424, !10425, !10426}
!10424 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10422, file: !10269, line: 484, type: !1253)
!10425 = !DILocalVariable(name: "Pin", arg: 2, scope: !10422, file: !10269, line: 484, type: !132)
!10426 = !DILocalVariable(name: "Pull", arg: 3, scope: !10422, file: !10269, line: 484, type: !132)
!10427 = !DILocation(line: 0, scope: !10422)
!10428 = !DILocation(line: 486, column: 3, scope: !10422)
!10429 = !DILocation(line: 0, scope: !10214, inlinedAt: !10430)
!10430 = distinct !DILocation(line: 486, column: 3, scope: !10422)
!10431 = !DILocation(line: 380, column: 4, scope: !10214, inlinedAt: !10430)
!10432 = !DILocation(line: 0, scope: !10222, inlinedAt: !10433)
!10433 = distinct !DILocation(line: 486, column: 3, scope: !10422)
!10434 = !DILocation(line: 414, column: 7, scope: !10222, inlinedAt: !10433)
!10435 = !DILocation(line: 0, scope: !10214, inlinedAt: !10436)
!10436 = distinct !DILocation(line: 486, column: 3, scope: !10422)
!10437 = !DILocation(line: 0, scope: !10222, inlinedAt: !10438)
!10438 = distinct !DILocation(line: 486, column: 3, scope: !10422)
!10439 = !DILocation(line: 487, column: 1, scope: !10422)
!10440 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10269, file: !10269, line: 556, type: !10395, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10441)
!10441 = !{!10442, !10443, !10444}
!10442 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10440, file: !10269, line: 556, type: !1253)
!10443 = !DILocalVariable(name: "Pin", arg: 2, scope: !10440, file: !10269, line: 556, type: !132)
!10444 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10440, file: !10269, line: 556, type: !132)
!10445 = !DILocation(line: 0, scope: !10440)
!10446 = !DILocation(line: 558, column: 3, scope: !10440)
!10447 = !DILocation(line: 0, scope: !10214, inlinedAt: !10448)
!10448 = distinct !DILocation(line: 558, column: 3, scope: !10440)
!10449 = !DILocation(line: 380, column: 4, scope: !10214, inlinedAt: !10448)
!10450 = !DILocation(line: 0, scope: !10222, inlinedAt: !10451)
!10451 = distinct !DILocation(line: 558, column: 3, scope: !10440)
!10452 = !DILocation(line: 414, column: 7, scope: !10222, inlinedAt: !10451)
!10453 = !DILocation(line: 0, scope: !10214, inlinedAt: !10454)
!10454 = distinct !DILocation(line: 558, column: 3, scope: !10440)
!10455 = !DILocation(line: 0, scope: !10222, inlinedAt: !10456)
!10456 = distinct !DILocation(line: 558, column: 3, scope: !10440)
!10457 = !DILocation(line: 560, column: 1, scope: !10440)
!10458 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10269, file: !10269, line: 633, type: !10395, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10459)
!10459 = !{!10460, !10461, !10462}
!10460 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10458, file: !10269, line: 633, type: !1253)
!10461 = !DILocalVariable(name: "Pin", arg: 2, scope: !10458, file: !10269, line: 633, type: !132)
!10462 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10458, file: !10269, line: 633, type: !132)
!10463 = !DILocation(line: 0, scope: !10458)
!10464 = !DILocation(line: 635, column: 3, scope: !10458)
!10465 = !DILocation(line: 0, scope: !10214, inlinedAt: !10466)
!10466 = distinct !DILocation(line: 635, column: 3, scope: !10458)
!10467 = !DILocation(line: 380, column: 4, scope: !10214, inlinedAt: !10466)
!10468 = !DILocation(line: 0, scope: !10222, inlinedAt: !10469)
!10469 = distinct !DILocation(line: 635, column: 3, scope: !10458)
!10470 = !DILocation(line: 414, column: 7, scope: !10222, inlinedAt: !10469)
!10471 = !DILocation(line: 0, scope: !10214, inlinedAt: !10472)
!10472 = distinct !DILocation(line: 635, column: 3, scope: !10458)
!10473 = !DILocation(line: 0, scope: !10222, inlinedAt: !10474)
!10474 = distinct !DILocation(line: 635, column: 3, scope: !10458)
!10475 = !DILocation(line: 637, column: 1, scope: !10458)
!10476 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10269, file: !10269, line: 273, type: !10395, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10477)
!10477 = !{!10478, !10479, !10480}
!10478 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10476, file: !10269, line: 273, type: !1253)
!10479 = !DILocalVariable(name: "Pin", arg: 2, scope: !10476, file: !10269, line: 273, type: !132)
!10480 = !DILocalVariable(name: "Mode", arg: 3, scope: !10476, file: !10269, line: 273, type: !132)
!10481 = !DILocation(line: 0, scope: !10476)
!10482 = !DILocation(line: 275, column: 3, scope: !10476)
!10483 = !DILocation(line: 0, scope: !10214, inlinedAt: !10484)
!10484 = distinct !DILocation(line: 275, column: 3, scope: !10476)
!10485 = !DILocation(line: 380, column: 4, scope: !10214, inlinedAt: !10484)
!10486 = !DILocation(line: 0, scope: !10222, inlinedAt: !10487)
!10487 = distinct !DILocation(line: 275, column: 3, scope: !10476)
!10488 = !DILocation(line: 414, column: 7, scope: !10222, inlinedAt: !10487)
!10489 = !DILocation(line: 0, scope: !10214, inlinedAt: !10490)
!10490 = distinct !DILocation(line: 275, column: 3, scope: !10476)
!10491 = !DILocation(line: 0, scope: !10222, inlinedAt: !10492)
!10492 = distinct !DILocation(line: 275, column: 3, scope: !10476)
!10493 = !DILocation(line: 276, column: 1, scope: !10476)
!10494 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1322, file: !1322, line: 698, type: !1335, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10495)
!10495 = !{!10496, !10497, !10498}
!10496 = !DILocalVariable(name: "dev", arg: 1, scope: !10494, file: !1322, line: 698, type: !1180)
!10497 = !DILocalVariable(name: "data", scope: !10494, file: !1322, line: 700, type: !9938)
!10498 = !DILocalVariable(name: "ret", scope: !10494, file: !1322, line: 701, type: !103)
!10499 = !DILocation(line: 0, scope: !10494)
!10500 = !DILocation(line: 700, column: 38, scope: !10494)
!10501 = !DILocation(line: 703, column: 8, scope: !10494)
!10502 = !DILocation(line: 703, column: 12, scope: !10494)
!10503 = !DILocation(line: 705, column: 7, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10494, file: !1322, line: 705, column: 6)
!10505 = !DILocation(line: 705, column: 6, scope: !10494)
!10506 = !DILocation(line: 722, column: 8, scope: !10494)
!10507 = !DILocation(line: 723, column: 10, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10494, file: !1322, line: 723, column: 6)
!10509 = !DILocation(line: 723, column: 6, scope: !10494)
!10510 = !DILocation(line: 731, column: 1, scope: !10494)
!10511 = distinct !DISubprogram(name: "device_is_ready", scope: !6762, file: !6762, line: 47, type: !10512, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10514)
!10512 = !DISubroutineType(types: !10513)
!10513 = !{!166, !1180}
!10514 = !{!10515}
!10515 = !DILocalVariable(name: "dev", arg: 1, scope: !10511, file: !6762, line: 47, type: !1180)
!10516 = !DILocation(line: 0, scope: !10511)
!10517 = !DILocation(line: 55, column: 2, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10511, file: !6762, line: 55, column: 2)
!10519 = !{i64 2155277864}
!10520 = !DILocation(line: 56, column: 9, scope: !10511)
!10521 = !DILocation(line: 56, column: 2, scope: !10511)
!10522 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1322, file: !1322, line: 270, type: !10523, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10525)
!10523 = !DISubroutineType(types: !10524)
!10524 = !{!103, !1180, !166}
!10525 = !{!10526, !10527, !10528, !10529, !10530}
!10526 = !DILocalVariable(name: "dev", arg: 1, scope: !10522, file: !1322, line: 270, type: !1180)
!10527 = !DILocalVariable(name: "on", arg: 2, scope: !10522, file: !1322, line: 270, type: !166)
!10528 = !DILocalVariable(name: "cfg", scope: !10522, file: !1322, line: 272, type: !9871)
!10529 = !DILocalVariable(name: "ret", scope: !10522, file: !1322, line: 273, type: !103)
!10530 = !DILocalVariable(name: "clk", scope: !10522, file: !1322, line: 278, type: !10161)
!10531 = !DILocation(line: 0, scope: !10522)
!10532 = !DILocation(line: 272, column: 45, scope: !10522)
!10533 = !DILocation(line: 282, column: 38, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10535, file: !1322, line: 280, column: 10)
!10535 = distinct !DILexicalBlock(scope: !10522, file: !1322, line: 280, column: 6)
!10536 = !DILocation(line: 282, column: 6, scope: !10534)
!10537 = !DILocation(line: 281, column: 9, scope: !10534)
!10538 = !DILocation(line: 293, column: 1, scope: !10522)
!10539 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !10512, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10540)
!10540 = !{!10541}
!10541 = !DILocalVariable(name: "dev", arg: 1, scope: !10539, file: !152, line: 730, type: !1180)
!10542 = !DILocation(line: 0, scope: !10539)
!10543 = !DILocation(line: 732, column: 9, scope: !10539)
!10544 = !DILocation(line: 732, column: 2, scope: !10539)
!10545 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1322, file: !1322, line: 496, type: !10546, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10548)
!10546 = !DISubroutineType(types: !10547)
!10547 = !{!103, !1180, !103, !103, !103}
!10548 = !{!10549, !10550, !10551, !10552, !10553, !10554}
!10549 = !DILocalVariable(name: "dev", arg: 1, scope: !10545, file: !1322, line: 496, type: !1180)
!10550 = !DILocalVariable(name: "pin", arg: 2, scope: !10545, file: !1322, line: 496, type: !103)
!10551 = !DILocalVariable(name: "conf", arg: 3, scope: !10545, file: !1322, line: 496, type: !103)
!10552 = !DILocalVariable(name: "func", arg: 4, scope: !10545, file: !1322, line: 496, type: !103)
!10553 = !DILocalVariable(name: "ret", scope: !10545, file: !1322, line: 498, type: !103)
!10554 = !DILocalVariable(name: "gpio_out", scope: !10555, file: !1322, line: 508, type: !132)
!10555 = distinct !DILexicalBlock(scope: !10556, file: !1322, line: 507, column: 27)
!10556 = distinct !DILexicalBlock(scope: !10545, file: !1322, line: 507, column: 6)
!10557 = !DILocation(line: 0, scope: !10545)
!10558 = !DILocation(line: 505, column: 2, scope: !10545)
!10559 = !DILocation(line: 507, column: 11, scope: !10556)
!10560 = !DILocation(line: 507, column: 6, scope: !10545)
!10561 = !DILocation(line: 508, column: 28, scope: !10555)
!10562 = !DILocation(line: 0, scope: !10555)
!10563 = !DILocation(line: 510, column: 16, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10555, file: !1322, line: 510, column: 7)
!10565 = !DILocation(line: 0, scope: !10564)
!10566 = !DILocation(line: 510, column: 7, scope: !10555)
!10567 = !DILocation(line: 511, column: 4, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10564, file: !1322, line: 510, column: 32)
!10569 = !DILocation(line: 512, column: 3, scope: !10568)
!10570 = !DILocation(line: 513, column: 4, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10572, file: !1322, line: 512, column: 39)
!10572 = distinct !DILexicalBlock(scope: !10564, file: !1322, line: 512, column: 14)
!10573 = !DILocation(line: 514, column: 3, scope: !10571)
!10574 = !DILocation(line: 518, column: 1, scope: !10545)
!10575 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1627, file: !1627, line: 526, type: !1498, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10576)
!10576 = !{!10577, !10578, !10579}
!10577 = !DILocalVariable(name: "dev", arg: 1, scope: !10575, file: !1627, line: 526, type: !1500)
!10578 = !DILocalVariable(name: "c", arg: 2, scope: !10575, file: !1627, line: 526, type: !233)
!10579 = !DILocalVariable(name: "config", scope: !10575, file: !1627, line: 528, type: !10580)
!10580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!10581 = !DILocation(line: 0, scope: !10575)
!10582 = !DILocation(line: 528, column: 48, scope: !10575)
!10583 = !DILocation(line: 531, column: 40, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10575, file: !1627, line: 531, column: 6)
!10585 = !DILocation(line: 531, column: 6, scope: !10584)
!10586 = !DILocation(line: 531, column: 6, scope: !10575)
!10587 = !DILocation(line: 532, column: 34, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10584, file: !1627, line: 531, column: 48)
!10589 = !DILocation(line: 532, column: 3, scope: !10588)
!10590 = !DILocation(line: 533, column: 2, scope: !10588)
!10591 = !DILocation(line: 539, column: 42, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10575, file: !1627, line: 539, column: 6)
!10593 = !DILocation(line: 539, column: 7, scope: !10592)
!10594 = !DILocation(line: 539, column: 6, scope: !10575)
!10595 = !DILocation(line: 543, column: 52, scope: !10575)
!10596 = !DILocation(line: 543, column: 22, scope: !10575)
!10597 = !DILocation(line: 543, column: 5, scope: !10575)
!10598 = !DILocation(line: 545, column: 2, scope: !10575)
!10599 = !DILocation(line: 546, column: 1, scope: !10575)
!10600 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1627, file: !1627, line: 548, type: !1517, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10601)
!10601 = !{!10602, !10603, !10604, !10605}
!10602 = !DILocalVariable(name: "dev", arg: 1, scope: !10600, file: !1627, line: 548, type: !1500)
!10603 = !DILocalVariable(name: "c", arg: 2, scope: !10600, file: !1627, line: 549, type: !164)
!10604 = !DILocalVariable(name: "config", scope: !10600, file: !1627, line: 551, type: !10580)
!10605 = !DILocalVariable(name: "key", scope: !10600, file: !1627, line: 555, type: !32)
!10606 = !DILocation(line: 0, scope: !10600)
!10607 = !DILocation(line: 551, column: 48, scope: !10600)
!10608 = !DILocation(line: 562, column: 2, scope: !10600)
!10609 = !DILocation(line: 563, column: 41, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10611, file: !1627, line: 563, column: 7)
!10611 = distinct !DILexicalBlock(scope: !10600, file: !1627, line: 562, column: 12)
!10612 = !DILocation(line: 563, column: 7, scope: !10610)
!10613 = !DILocation(line: 563, column: 7, scope: !10611)
!10614 = !DILocation(line: 55, column: 2, scope: !10615, inlinedAt: !10619)
!10615 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5901, file: !5901, line: 42, type: !5902, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10616)
!10616 = !{!10617, !10618}
!10617 = !DILocalVariable(name: "key", scope: !10615, file: !5901, line: 44, type: !32)
!10618 = !DILocalVariable(name: "tmp", scope: !10615, file: !5901, line: 53, type: !32)
!10619 = distinct !DILocation(line: 564, column: 10, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10610, file: !1627, line: 563, column: 49)
!10621 = !{i64 2327589}
!10622 = !DILocation(line: 0, scope: !10615, inlinedAt: !10619)
!10623 = !DILocation(line: 565, column: 42, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10620, file: !1627, line: 565, column: 8)
!10625 = !DILocation(line: 565, column: 8, scope: !10624)
!10626 = !DILocation(line: 565, column: 8, scope: !10620)
!10627 = !DILocalVariable(name: "key", arg: 1, scope: !10628, file: !5901, line: 84, type: !32)
!10628 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5901, file: !5901, line: 84, type: !5912, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10629)
!10629 = !{!10627}
!10630 = !DILocation(line: 0, scope: !10628, inlinedAt: !10631)
!10631 = distinct !DILocation(line: 568, column: 4, scope: !10620)
!10632 = !DILocation(line: 95, column: 2, scope: !10628, inlinedAt: !10631)
!10633 = !{i64 2328406}
!10634 = !DILocation(line: 569, column: 3, scope: !10620)
!10635 = distinct !{!10635, !10608, !10636}
!10636 = !DILocation(line: 570, column: 2, scope: !10600)
!10637 = !DILocation(line: 592, column: 33, scope: !10600)
!10638 = !DILocation(line: 592, column: 2, scope: !10600)
!10639 = !DILocation(line: 0, scope: !10628, inlinedAt: !10640)
!10640 = distinct !DILocation(line: 593, column: 2, scope: !10600)
!10641 = !DILocation(line: 95, column: 2, scope: !10628, inlinedAt: !10640)
!10642 = !DILocation(line: 594, column: 1, scope: !10600)
!10643 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1627, file: !1627, line: 596, type: !1521, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10644)
!10644 = !{!10645, !10646, !10647}
!10645 = !DILocalVariable(name: "dev", arg: 1, scope: !10643, file: !1627, line: 596, type: !1500)
!10646 = !DILocalVariable(name: "config", scope: !10643, file: !1627, line: 598, type: !10580)
!10647 = !DILocalVariable(name: "err", scope: !10643, file: !1627, line: 599, type: !132)
!10648 = !DILocation(line: 0, scope: !10643)
!10649 = !DILocation(line: 598, column: 48, scope: !10643)
!10650 = !DILocation(line: 606, column: 40, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10643, file: !1627, line: 606, column: 6)
!10652 = !DILocation(line: 606, column: 6, scope: !10651)
!10653 = !DILocation(line: 606, column: 6, scope: !10643)
!10654 = !DILocation(line: 610, column: 39, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10643, file: !1627, line: 610, column: 6)
!10656 = !DILocation(line: 610, column: 6, scope: !10655)
!10657 = !DILocation(line: 610, column: 6, scope: !10643)
!10658 = !DILocation(line: 614, column: 39, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10643, file: !1627, line: 614, column: 6)
!10660 = !DILocation(line: 614, column: 6, scope: !10659)
!10661 = !DILocation(line: 614, column: 6, scope: !10643)
!10662 = !DILocation(line: 619, column: 40, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10643, file: !1627, line: 619, column: 6)
!10664 = !DILocation(line: 619, column: 6, scope: !10663)
!10665 = !DILocation(line: 619, column: 6, scope: !10643)
!10666 = !DILocation(line: 623, column: 10, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10643, file: !1627, line: 623, column: 6)
!10668 = !DILocation(line: 623, column: 6, scope: !10643)
!10669 = !DILocation(line: 624, column: 34, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10667, file: !1627, line: 623, column: 24)
!10671 = !DILocation(line: 624, column: 3, scope: !10670)
!10672 = !DILocation(line: 625, column: 2, scope: !10670)
!10673 = !DILocation(line: 632, column: 10, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10643, file: !1627, line: 632, column: 6)
!10675 = !DILocation(line: 632, column: 6, scope: !10643)
!10676 = !DILocation(line: 633, column: 34, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10674, file: !1627, line: 632, column: 32)
!10678 = !DILocation(line: 633, column: 3, scope: !10677)
!10679 = !DILocation(line: 634, column: 2, scope: !10677)
!10680 = !DILocation(line: 636, column: 10, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10643, file: !1627, line: 636, column: 6)
!10682 = !DILocation(line: 636, column: 6, scope: !10643)
!10683 = !DILocation(line: 637, column: 33, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10681, file: !1627, line: 636, column: 31)
!10685 = !DILocation(line: 637, column: 3, scope: !10684)
!10686 = !DILocation(line: 638, column: 2, scope: !10684)
!10687 = !DILocation(line: 640, column: 10, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10643, file: !1627, line: 640, column: 6)
!10689 = !DILocation(line: 640, column: 6, scope: !10643)
!10690 = !DILocation(line: 641, column: 33, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10688, file: !1627, line: 640, column: 32)
!10692 = !DILocation(line: 641, column: 3, scope: !10691)
!10693 = !DILocation(line: 642, column: 2, scope: !10691)
!10694 = !DILocation(line: 646, column: 32, scope: !10643)
!10695 = !DILocation(line: 646, column: 2, scope: !10643)
!10696 = !DILocation(line: 648, column: 2, scope: !10643)
!10697 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1627, file: !1627, line: 419, type: !1525, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10698)
!10698 = !{!10699, !10700, !10701, !10702, !10704, !10705, !10706, !10707}
!10699 = !DILocalVariable(name: "dev", arg: 1, scope: !10697, file: !1627, line: 419, type: !1500)
!10700 = !DILocalVariable(name: "cfg", arg: 2, scope: !10697, file: !1627, line: 420, type: !1527)
!10701 = !DILocalVariable(name: "config", scope: !10697, file: !1627, line: 422, type: !10580)
!10702 = !DILocalVariable(name: "data", scope: !10697, file: !1627, line: 423, type: !10703)
!10703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!10704 = !DILocalVariable(name: "parity", scope: !10697, file: !1627, line: 424, type: !7189)
!10705 = !DILocalVariable(name: "stopbits", scope: !10697, file: !1627, line: 425, type: !7189)
!10706 = !DILocalVariable(name: "databits", scope: !10697, file: !1627, line: 426, type: !7189)
!10707 = !DILocalVariable(name: "flowctrl", scope: !10697, file: !1627, line: 428, type: !7189)
!10708 = !DILocation(line: 0, scope: !10697)
!10709 = !DILocation(line: 422, column: 48, scope: !10697)
!10710 = !DILocation(line: 423, column: 38, scope: !10697)
!10711 = !DILocation(line: 424, column: 56, scope: !10697)
!10712 = !DILocation(line: 424, column: 51, scope: !10697)
!10713 = !DILocation(line: 424, column: 26, scope: !10697)
!10714 = !DILocation(line: 425, column: 60, scope: !10697)
!10715 = !DILocation(line: 425, column: 55, scope: !10697)
!10716 = !DILocation(line: 425, column: 28, scope: !10697)
!10717 = !DILocation(line: 426, column: 60, scope: !10697)
!10718 = !DILocation(line: 426, column: 55, scope: !10697)
!10719 = !DILocation(line: 426, column: 28, scope: !10697)
!10720 = !DILocation(line: 428, column: 58, scope: !10697)
!10721 = !DILocation(line: 428, column: 53, scope: !10697)
!10722 = !DILocation(line: 428, column: 28, scope: !10697)
!10723 = !DILocation(line: 431, column: 44, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10697, file: !1627, line: 431, column: 6)
!10725 = !DILocation(line: 438, column: 22, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10697, file: !1627, line: 437, column: 6)
!10727 = !DILocation(line: 437, column: 6, scope: !10697)
!10728 = !DILocation(line: 448, column: 6, scope: !10697)
!10729 = !DILocation(line: 465, column: 47, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10697, file: !1627, line: 465, column: 6)
!10731 = !DILocation(line: 475, column: 21, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10697, file: !1627, line: 475, column: 6)
!10733 = !DILocation(line: 475, column: 6, scope: !10697)
!10734 = !DILocation(line: 476, column: 8, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10736, file: !1627, line: 476, column: 7)
!10736 = distinct !DILexicalBlock(scope: !10732, file: !1627, line: 475, column: 49)
!10737 = !DILocation(line: 477, column: 34, scope: !10735)
!10738 = !DILocation(line: 476, column: 7, scope: !10736)
!10739 = !DILocation(line: 482, column: 27, scope: !10697)
!10740 = !DILocation(line: 482, column: 2, scope: !10697)
!10741 = !DILocation(line: 484, column: 16, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10697, file: !1627, line: 484, column: 6)
!10743 = !DILocation(line: 484, column: 13, scope: !10742)
!10744 = !DILocation(line: 484, column: 6, scope: !10697)
!10745 = !DILocation(line: 485, column: 3, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10742, file: !1627, line: 484, column: 44)
!10747 = !DILocation(line: 486, column: 2, scope: !10746)
!10748 = !DILocation(line: 488, column: 18, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10697, file: !1627, line: 488, column: 6)
!10750 = !DILocation(line: 488, column: 15, scope: !10749)
!10751 = !DILocation(line: 488, column: 6, scope: !10697)
!10752 = !DILocation(line: 489, column: 3, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10749, file: !1627, line: 488, column: 48)
!10754 = !DILocation(line: 490, column: 2, scope: !10753)
!10755 = !DILocation(line: 492, column: 18, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10697, file: !1627, line: 492, column: 6)
!10757 = !DILocation(line: 492, column: 15, scope: !10756)
!10758 = !DILocation(line: 492, column: 6, scope: !10697)
!10759 = !DILocation(line: 493, column: 3, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10756, file: !1627, line: 492, column: 48)
!10761 = !DILocation(line: 494, column: 2, scope: !10760)
!10762 = !DILocation(line: 496, column: 18, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10697, file: !1627, line: 496, column: 6)
!10764 = !DILocation(line: 496, column: 15, scope: !10763)
!10765 = !DILocation(line: 496, column: 6, scope: !10697)
!10766 = !DILocation(line: 497, column: 3, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10763, file: !1627, line: 496, column: 46)
!10768 = !DILocation(line: 498, column: 2, scope: !10767)
!10769 = !DILocation(line: 500, column: 11, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10697, file: !1627, line: 500, column: 6)
!10771 = !DILocation(line: 500, column: 29, scope: !10770)
!10772 = !DILocation(line: 500, column: 20, scope: !10770)
!10773 = !DILocation(line: 500, column: 6, scope: !10697)
!10774 = !DILocation(line: 501, column: 3, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10770, file: !1627, line: 500, column: 40)
!10776 = !DILocation(line: 502, column: 26, scope: !10775)
!10777 = !DILocation(line: 502, column: 19, scope: !10775)
!10778 = !DILocation(line: 503, column: 2, scope: !10775)
!10779 = !DILocation(line: 505, column: 26, scope: !10697)
!10780 = !DILocation(line: 505, column: 2, scope: !10697)
!10781 = !DILocation(line: 506, column: 2, scope: !10697)
!10782 = !DILocation(line: 507, column: 1, scope: !10697)
!10783 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1627, file: !1627, line: 509, type: !1538, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10784)
!10784 = !{!10785, !10786, !10787}
!10785 = !DILocalVariable(name: "dev", arg: 1, scope: !10783, file: !1627, line: 509, type: !1500)
!10786 = !DILocalVariable(name: "cfg", arg: 2, scope: !10783, file: !1627, line: 510, type: !1540)
!10787 = !DILocalVariable(name: "data", scope: !10783, file: !1627, line: 512, type: !10703)
!10788 = !DILocation(line: 0, scope: !10783)
!10789 = !DILocation(line: 512, column: 38, scope: !10783)
!10790 = !DILocation(line: 514, column: 24, scope: !10783)
!10791 = !DILocation(line: 514, column: 7, scope: !10783)
!10792 = !DILocation(line: 514, column: 16, scope: !10783)
!10793 = !DILocation(line: 515, column: 41, scope: !10783)
!10794 = !{i32 0, i32 1537}
!10795 = !DILocation(line: 515, column: 16, scope: !10783)
!10796 = !DILocation(line: 515, column: 7, scope: !10783)
!10797 = !DILocation(line: 515, column: 14, scope: !10783)
!10798 = !DILocation(line: 517, column: 3, scope: !10783)
!10799 = !{i32 0, i32 12289}
!10800 = !DILocation(line: 516, column: 19, scope: !10783)
!10801 = !DILocation(line: 516, column: 7, scope: !10783)
!10802 = !DILocation(line: 516, column: 17, scope: !10783)
!10803 = !DILocation(line: 519, column: 3, scope: !10783)
!10804 = !DILocation(line: 519, column: 33, scope: !10783)
!10805 = !DILocation(line: 518, column: 19, scope: !10783)
!10806 = !DILocation(line: 518, column: 7, scope: !10783)
!10807 = !DILocation(line: 518, column: 17, scope: !10783)
!10808 = !DILocation(line: 521, column: 3, scope: !10783)
!10809 = !{i32 0, i32 769}
!10810 = !DILocation(line: 520, column: 19, scope: !10783)
!10811 = !DILocation(line: 520, column: 7, scope: !10783)
!10812 = !DILocation(line: 520, column: 17, scope: !10783)
!10813 = !DILocation(line: 522, column: 2, scope: !10783)
!10814 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1627, file: !1627, line: 661, type: !1543, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10815)
!10815 = !{!10816, !10817, !10818, !10819, !10820, !10821}
!10816 = !DILocalVariable(name: "dev", arg: 1, scope: !10814, file: !1627, line: 661, type: !1500)
!10817 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10814, file: !1627, line: 662, type: !264)
!10818 = !DILocalVariable(name: "size", arg: 3, scope: !10814, file: !1627, line: 663, type: !103)
!10819 = !DILocalVariable(name: "config", scope: !10814, file: !1627, line: 665, type: !10580)
!10820 = !DILocalVariable(name: "num_tx", scope: !10814, file: !1627, line: 666, type: !163)
!10821 = !DILocalVariable(name: "key", scope: !10814, file: !1627, line: 667, type: !32)
!10822 = !DILocation(line: 0, scope: !10814)
!10823 = !DILocation(line: 665, column: 48, scope: !10814)
!10824 = !DILocation(line: 669, column: 41, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10814, file: !1627, line: 669, column: 6)
!10826 = !DILocation(line: 669, column: 7, scope: !10825)
!10827 = !DILocation(line: 669, column: 6, scope: !10814)
!10828 = !DILocation(line: 55, column: 2, scope: !10615, inlinedAt: !10829)
!10829 = distinct !DILocation(line: 674, column: 8, scope: !10814)
!10830 = !DILocation(line: 0, scope: !10615, inlinedAt: !10829)
!10831 = !DILocation(line: 676, column: 24, scope: !10814)
!10832 = !DILocation(line: 676, column: 29, scope: !10814)
!10833 = !DILocation(line: 677, column: 43, scope: !10814)
!10834 = !DILocation(line: 677, column: 9, scope: !10814)
!10835 = !DILocation(line: 676, column: 2, scope: !10814)
!10836 = !DILocation(line: 681, column: 34, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10814, file: !1627, line: 677, column: 51)
!10838 = !DILocation(line: 681, column: 55, scope: !10837)
!10839 = !DILocation(line: 681, column: 41, scope: !10837)
!10840 = !DILocation(line: 681, column: 3, scope: !10837)
!10841 = !DILocation(line: 676, column: 17, scope: !10814)
!10842 = distinct !{!10842, !10835, !10843}
!10843 = !DILocation(line: 682, column: 2, scope: !10814)
!10844 = !DILocation(line: 0, scope: !10628, inlinedAt: !10845)
!10845 = distinct !DILocation(line: 684, column: 2, scope: !10814)
!10846 = !DILocation(line: 95, column: 2, scope: !10628, inlinedAt: !10845)
!10847 = !DILocation(line: 686, column: 2, scope: !10814)
!10848 = !DILocation(line: 687, column: 1, scope: !10814)
!10849 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1627, file: !1627, line: 689, type: !1547, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10850)
!10850 = !{!10851, !10852, !10853, !10854, !10855}
!10851 = !DILocalVariable(name: "dev", arg: 1, scope: !10849, file: !1627, line: 689, type: !1500)
!10852 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10849, file: !1627, line: 689, type: !270)
!10853 = !DILocalVariable(name: "size", arg: 3, scope: !10849, file: !1627, line: 690, type: !271)
!10854 = !DILocalVariable(name: "config", scope: !10849, file: !1627, line: 692, type: !10580)
!10855 = !DILocalVariable(name: "num_rx", scope: !10849, file: !1627, line: 693, type: !163)
!10856 = !DILocation(line: 0, scope: !10849)
!10857 = !DILocation(line: 692, column: 48, scope: !10849)
!10858 = !DILocation(line: 696, column: 44, scope: !10849)
!10859 = !DILocation(line: 695, column: 24, scope: !10849)
!10860 = !DILocation(line: 695, column: 29, scope: !10849)
!10861 = !DILocation(line: 696, column: 9, scope: !10849)
!10862 = !DILocation(line: 695, column: 2, scope: !10849)
!10863 = !DILocation(line: 700, column: 53, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10849, file: !1627, line: 696, column: 52)
!10865 = !DILocation(line: 700, column: 23, scope: !10864)
!10866 = !DILocation(line: 700, column: 17, scope: !10864)
!10867 = !DILocation(line: 700, column: 3, scope: !10864)
!10868 = !DILocation(line: 700, column: 21, scope: !10864)
!10869 = !DILocation(line: 703, column: 41, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10864, file: !1627, line: 703, column: 7)
!10871 = !DILocation(line: 703, column: 7, scope: !10870)
!10872 = !DILocation(line: 703, column: 7, scope: !10864)
!10873 = !DILocation(line: 704, column: 35, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10870, file: !1627, line: 703, column: 49)
!10875 = !DILocation(line: 704, column: 4, scope: !10874)
!10876 = !DILocation(line: 709, column: 3, scope: !10874)
!10877 = !DILocation(line: 695, column: 17, scope: !10849)
!10878 = distinct !{!10878, !10862, !10879}
!10879 = !DILocation(line: 710, column: 2, scope: !10849)
!10880 = !DILocation(line: 712, column: 2, scope: !10849)
!10881 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1627, file: !1627, line: 715, type: !1551, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10882)
!10882 = !{!10883, !10884}
!10883 = !DILocalVariable(name: "dev", arg: 1, scope: !10881, file: !1627, line: 715, type: !1500)
!10884 = !DILocalVariable(name: "config", scope: !10881, file: !1627, line: 717, type: !10580)
!10885 = !DILocation(line: 0, scope: !10881)
!10886 = !DILocation(line: 717, column: 48, scope: !10881)
!10887 = !DILocation(line: 729, column: 31, scope: !10881)
!10888 = !DILocation(line: 729, column: 2, scope: !10881)
!10889 = !DILocation(line: 734, column: 1, scope: !10881)
!10890 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1627, file: !1627, line: 736, type: !1551, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10891)
!10891 = !{!10892, !10893}
!10892 = !DILocalVariable(name: "dev", arg: 1, scope: !10890, file: !1627, line: 736, type: !1500)
!10893 = !DILocalVariable(name: "config", scope: !10890, file: !1627, line: 738, type: !10580)
!10894 = !DILocation(line: 0, scope: !10890)
!10895 = !DILocation(line: 738, column: 48, scope: !10890)
!10896 = !DILocation(line: 746, column: 32, scope: !10890)
!10897 = !DILocation(line: 746, column: 2, scope: !10890)
!10898 = !DILocation(line: 756, column: 1, scope: !10890)
!10899 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1627, file: !1627, line: 758, type: !1521, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10900)
!10900 = !{!10901, !10902}
!10901 = !DILocalVariable(name: "dev", arg: 1, scope: !10899, file: !1627, line: 758, type: !1500)
!10902 = !DILocalVariable(name: "config", scope: !10899, file: !1627, line: 760, type: !10580)
!10903 = !DILocation(line: 0, scope: !10899)
!10904 = !DILocation(line: 760, column: 48, scope: !10899)
!10905 = !DILocation(line: 762, column: 43, scope: !10899)
!10906 = !DILocation(line: 762, column: 9, scope: !10899)
!10907 = !DILocation(line: 762, column: 50, scope: !10899)
!10908 = !DILocation(line: 763, column: 35, scope: !10899)
!10909 = !DILocation(line: 763, column: 3, scope: !10899)
!10910 = !DILocation(line: 762, column: 2, scope: !10899)
!10911 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1627, file: !1627, line: 773, type: !1551, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10912)
!10912 = !{!10913, !10914}
!10913 = !DILocalVariable(name: "dev", arg: 1, scope: !10911, file: !1627, line: 773, type: !1500)
!10914 = !DILocalVariable(name: "config", scope: !10911, file: !1627, line: 775, type: !10580)
!10915 = !DILocation(line: 0, scope: !10911)
!10916 = !DILocation(line: 775, column: 48, scope: !10911)
!10917 = !DILocation(line: 777, column: 33, scope: !10911)
!10918 = !DILocation(line: 777, column: 2, scope: !10911)
!10919 = !DILocation(line: 778, column: 1, scope: !10911)
!10920 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1627, file: !1627, line: 780, type: !1551, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10921)
!10921 = !{!10922, !10923}
!10922 = !DILocalVariable(name: "dev", arg: 1, scope: !10920, file: !1627, line: 780, type: !1500)
!10923 = !DILocalVariable(name: "config", scope: !10920, file: !1627, line: 782, type: !10580)
!10924 = !DILocation(line: 0, scope: !10920)
!10925 = !DILocation(line: 782, column: 48, scope: !10920)
!10926 = !DILocation(line: 784, column: 34, scope: !10920)
!10927 = !DILocation(line: 784, column: 2, scope: !10920)
!10928 = !DILocation(line: 785, column: 1, scope: !10920)
!10929 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1627, file: !1627, line: 766, type: !1521, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10930)
!10930 = !{!10931, !10932}
!10931 = !DILocalVariable(name: "dev", arg: 1, scope: !10929, file: !1627, line: 766, type: !1500)
!10932 = !DILocalVariable(name: "config", scope: !10929, file: !1627, line: 768, type: !10580)
!10933 = !DILocation(line: 0, scope: !10929)
!10934 = !DILocation(line: 768, column: 48, scope: !10929)
!10935 = !DILocation(line: 770, column: 42, scope: !10929)
!10936 = !DILocation(line: 770, column: 9, scope: !10929)
!10937 = !DILocation(line: 770, column: 2, scope: !10929)
!10938 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1627, file: !1627, line: 787, type: !1521, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10939)
!10939 = !{!10940, !10941}
!10940 = !DILocalVariable(name: "dev", arg: 1, scope: !10938, file: !1627, line: 787, type: !1500)
!10941 = !DILocalVariable(name: "config", scope: !10938, file: !1627, line: 789, type: !10580)
!10942 = !DILocation(line: 0, scope: !10938)
!10943 = !DILocation(line: 789, column: 48, scope: !10938)
!10944 = !DILocation(line: 794, column: 44, scope: !10938)
!10945 = !DILocation(line: 794, column: 9, scope: !10938)
!10946 = !DILocation(line: 794, column: 2, scope: !10938)
!10947 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1627, file: !1627, line: 797, type: !1551, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10948)
!10948 = !{!10949, !10950}
!10949 = !DILocalVariable(name: "dev", arg: 1, scope: !10947, file: !1627, line: 797, type: !1500)
!10950 = !DILocalVariable(name: "config", scope: !10947, file: !1627, line: 799, type: !10580)
!10951 = !DILocation(line: 0, scope: !10947)
!10952 = !DILocation(line: 799, column: 48, scope: !10947)
!10953 = !DILocation(line: 802, column: 34, scope: !10947)
!10954 = !DILocation(line: 802, column: 2, scope: !10947)
!10955 = !DILocation(line: 805, column: 6, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10947, file: !1627, line: 805, column: 6)
!10957 = !DILocation(line: 806, column: 3, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10956, file: !1627, line: 805, column: 43)
!10959 = !DILocation(line: 810, column: 31, scope: !10947)
!10960 = !DILocation(line: 807, column: 2, scope: !10958)
!10961 = !DILocation(line: 810, column: 2, scope: !10947)
!10962 = !DILocation(line: 811, column: 1, scope: !10947)
!10963 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1627, file: !1627, line: 813, type: !1551, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10964)
!10964 = !{!10965, !10966}
!10965 = !DILocalVariable(name: "dev", arg: 1, scope: !10963, file: !1627, line: 813, type: !1500)
!10966 = !DILocalVariable(name: "config", scope: !10963, file: !1627, line: 815, type: !10580)
!10967 = !DILocation(line: 0, scope: !10963)
!10968 = !DILocation(line: 815, column: 48, scope: !10963)
!10969 = !DILocation(line: 818, column: 35, scope: !10963)
!10970 = !DILocation(line: 818, column: 2, scope: !10963)
!10971 = !DILocation(line: 821, column: 6, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10963, file: !1627, line: 821, column: 6)
!10973 = !DILocation(line: 822, column: 3, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10972, file: !1627, line: 821, column: 43)
!10975 = !DILocation(line: 826, column: 32, scope: !10963)
!10976 = !DILocation(line: 823, column: 2, scope: !10974)
!10977 = !DILocation(line: 826, column: 2, scope: !10963)
!10978 = !DILocation(line: 827, column: 1, scope: !10963)
!10979 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1627, file: !1627, line: 829, type: !1521, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10980)
!10980 = !{!10981, !10982}
!10981 = !DILocalVariable(name: "dev", arg: 1, scope: !10979, file: !1627, line: 829, type: !1500)
!10982 = !DILocalVariable(name: "config", scope: !10979, file: !1627, line: 831, type: !10580)
!10983 = !DILocation(line: 0, scope: !10979)
!10984 = !DILocation(line: 831, column: 48, scope: !10979)
!10985 = !DILocation(line: 833, column: 46, scope: !10979)
!10986 = !DILocation(line: 833, column: 11, scope: !10979)
!10987 = !DILocation(line: 833, column: 53, scope: !10979)
!10988 = !DILocation(line: 834, column: 38, scope: !10979)
!10989 = !DILocation(line: 834, column: 4, scope: !10979)
!10990 = !DILocation(line: 834, column: 46, scope: !10979)
!10991 = !DILocation(line: 835, column: 37, scope: !10979)
!10992 = !DILocation(line: 835, column: 4, scope: !10979)
!10993 = !DILocation(line: 835, column: 44, scope: !10979)
!10994 = !DILocation(line: 836, column: 36, scope: !10979)
!10995 = !DILocation(line: 836, column: 4, scope: !10979)
!10996 = !DILocation(line: 833, column: 2, scope: !10979)
!10997 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1627, file: !1627, line: 839, type: !1521, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10998)
!10998 = !{!10999}
!10999 = !DILocalVariable(name: "dev", arg: 1, scope: !10997, file: !1627, line: 839, type: !1500)
!11000 = !DILocation(line: 0, scope: !10997)
!11001 = !DILocation(line: 841, column: 2, scope: !10997)
!11002 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1627, file: !1627, line: 844, type: !1565, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11003)
!11003 = !{!11004, !11005, !11006, !11007}
!11004 = !DILocalVariable(name: "dev", arg: 1, scope: !11002, file: !1627, line: 844, type: !1500)
!11005 = !DILocalVariable(name: "cb", arg: 2, scope: !11002, file: !1627, line: 845, type: !1567)
!11006 = !DILocalVariable(name: "cb_data", arg: 3, scope: !11002, file: !1627, line: 846, type: !102)
!11007 = !DILocalVariable(name: "data", scope: !11002, file: !1627, line: 848, type: !10703)
!11008 = !DILocation(line: 0, scope: !11002)
!11009 = !DILocation(line: 848, column: 38, scope: !11002)
!11010 = !DILocation(line: 850, column: 8, scope: !11002)
!11011 = !DILocation(line: 850, column: 16, scope: !11002)
!11012 = !DILocation(line: 851, column: 8, scope: !11002)
!11013 = !DILocation(line: 851, column: 18, scope: !11002)
!11014 = !DILocation(line: 852, column: 1, scope: !11002)
!11015 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11016, file: !11016, line: 1792, type: !11017, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11019)
!11016 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11017 = !DISubroutineType(types: !11018)
!11018 = !{!132, !1571}
!11019 = !{!11020}
!11020 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11015, file: !11016, line: 1792, type: !1571)
!11021 = !DILocation(line: 0, scope: !11015)
!11022 = !DILocation(line: 1794, column: 11, scope: !11015)
!11023 = !DILocation(line: 1794, column: 47, scope: !11015)
!11024 = !DILocation(line: 1794, column: 3, scope: !11015)
!11025 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !11016, file: !11016, line: 2227, type: !11017, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11026)
!11026 = !{!11027}
!11027 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11025, file: !11016, line: 2227, type: !1571)
!11028 = !DILocation(line: 0, scope: !11025)
!11029 = !DILocation(line: 2229, column: 11, scope: !11025)
!11030 = !DILocation(line: 2229, column: 51, scope: !11025)
!11031 = !DILocation(line: 2229, column: 3, scope: !11025)
!11032 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !11016, file: !11016, line: 1803, type: !11017, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11033)
!11033 = !{!11034}
!11034 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11032, file: !11016, line: 1803, type: !1571)
!11035 = !DILocation(line: 0, scope: !11032)
!11036 = !DILocation(line: 1805, column: 11, scope: !11032)
!11037 = !DILocation(line: 1805, column: 45, scope: !11032)
!11038 = !DILocation(line: 1805, column: 3, scope: !11032)
!11039 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !11016, file: !11016, line: 2238, type: !11017, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11040)
!11040 = !{!11041}
!11041 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11039, file: !11016, line: 2238, type: !1571)
!11042 = !DILocation(line: 0, scope: !11039)
!11043 = !DILocation(line: 2240, column: 11, scope: !11039)
!11044 = !DILocation(line: 2240, column: 49, scope: !11039)
!11045 = !DILocation(line: 2240, column: 3, scope: !11039)
!11046 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !11016, file: !11016, line: 2192, type: !11047, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11049)
!11047 = !DISubroutineType(types: !11048)
!11048 = !{null, !1571}
!11049 = !{!11050, !11051}
!11050 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11046, file: !11016, line: 2192, type: !1571)
!11051 = !DILocalVariable(name: "val", scope: !11052, file: !11016, line: 2194, type: !132)
!11052 = distinct !DILexicalBlock(scope: !11046, file: !11016, line: 2194, column: 3)
!11053 = !DILocation(line: 0, scope: !11046)
!11054 = !DILocation(line: 2194, column: 3, scope: !11052)
!11055 = !DILocalVariable(name: "addr", arg: 1, scope: !11056, file: !6921, line: 476, type: !1623)
!11056 = distinct !DISubprogram(name: "__LDREXW", scope: !6921, file: !6921, line: 476, type: !11057, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11059)
!11057 = !DISubroutineType(types: !11058)
!11058 = !{!132, !1623}
!11059 = !{!11055, !11060}
!11060 = !DILocalVariable(name: "result", scope: !11056, file: !6921, line: 478, type: !132)
!11061 = !DILocation(line: 0, scope: !11056, inlinedAt: !11062)
!11062 = distinct !DILocation(line: 2194, column: 3, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11052, file: !11016, line: 2194, column: 3)
!11064 = !DILocation(line: 480, column: 4, scope: !11056, inlinedAt: !11062)
!11065 = !{i64 3758346}
!11066 = !DILocation(line: 2194, column: 3, scope: !11063)
!11067 = !DILocation(line: 0, scope: !11052)
!11068 = !DILocalVariable(name: "value", arg: 1, scope: !11069, file: !6921, line: 527, type: !132)
!11069 = distinct !DISubprogram(name: "__STREXW", scope: !6921, file: !6921, line: 527, type: !11070, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11072)
!11070 = !DISubroutineType(types: !11071)
!11071 = !{!132, !132, !1623}
!11072 = !{!11068, !11073, !11074}
!11073 = !DILocalVariable(name: "addr", arg: 2, scope: !11069, file: !6921, line: 527, type: !1623)
!11074 = !DILocalVariable(name: "result", scope: !11069, file: !6921, line: 529, type: !132)
!11075 = !DILocation(line: 0, scope: !11069, inlinedAt: !11076)
!11076 = distinct !DILocation(line: 2194, column: 3, scope: !11052)
!11077 = !DILocation(line: 531, column: 4, scope: !11069, inlinedAt: !11076)
!11078 = !{i64 3759782}
!11079 = distinct !{!11079, !11054, !11054}
!11080 = !DILocation(line: 2195, column: 1, scope: !11046)
!11081 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !11016, file: !11016, line: 2177, type: !11047, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11082)
!11082 = !{!11083}
!11083 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11081, file: !11016, line: 2177, type: !1571)
!11084 = !DILocation(line: 0, scope: !11081)
!11085 = !DILocation(line: 2179, column: 3, scope: !11081)
!11086 = !DILocation(line: 2180, column: 1, scope: !11081)
!11087 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !11016, file: !11016, line: 2164, type: !11047, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11088)
!11088 = !{!11089, !11090}
!11089 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11087, file: !11016, line: 2164, type: !1571)
!11090 = !DILocalVariable(name: "val", scope: !11091, file: !11016, line: 2166, type: !132)
!11091 = distinct !DILexicalBlock(scope: !11087, file: !11016, line: 2166, column: 3)
!11092 = !DILocation(line: 0, scope: !11087)
!11093 = !DILocation(line: 2166, column: 3, scope: !11091)
!11094 = !DILocation(line: 0, scope: !11056, inlinedAt: !11095)
!11095 = distinct !DILocation(line: 2166, column: 3, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11091, file: !11016, line: 2166, column: 3)
!11097 = !DILocation(line: 480, column: 4, scope: !11056, inlinedAt: !11095)
!11098 = !DILocation(line: 2166, column: 3, scope: !11096)
!11099 = !DILocation(line: 0, scope: !11091)
!11100 = !DILocation(line: 0, scope: !11069, inlinedAt: !11101)
!11101 = distinct !DILocation(line: 2166, column: 3, scope: !11091)
!11102 = !DILocation(line: 531, column: 4, scope: !11069, inlinedAt: !11101)
!11103 = distinct !{!11103, !11093, !11093}
!11104 = !DILocation(line: 2167, column: 1, scope: !11087)
!11105 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !11016, file: !11016, line: 2096, type: !11047, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11106)
!11106 = !{!11107, !11108}
!11107 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11105, file: !11016, line: 2096, type: !1571)
!11108 = !DILocalVariable(name: "val", scope: !11109, file: !11016, line: 2098, type: !132)
!11109 = distinct !DILexicalBlock(scope: !11105, file: !11016, line: 2098, column: 3)
!11110 = !DILocation(line: 0, scope: !11105)
!11111 = !DILocation(line: 2098, column: 3, scope: !11109)
!11112 = !DILocation(line: 0, scope: !11056, inlinedAt: !11113)
!11113 = distinct !DILocation(line: 2098, column: 3, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11109, file: !11016, line: 2098, column: 3)
!11115 = !DILocation(line: 480, column: 4, scope: !11056, inlinedAt: !11113)
!11116 = !DILocation(line: 2098, column: 3, scope: !11114)
!11117 = !DILocation(line: 0, scope: !11109)
!11118 = !DILocation(line: 0, scope: !11069, inlinedAt: !11119)
!11119 = distinct !DILocation(line: 2098, column: 3, scope: !11109)
!11120 = !DILocation(line: 531, column: 4, scope: !11069, inlinedAt: !11119)
!11121 = distinct !{!11121, !11111, !11111}
!11122 = !DILocation(line: 2099, column: 1, scope: !11105)
!11123 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !11016, file: !11016, line: 2081, type: !11047, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11124)
!11124 = !{!11125}
!11125 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11123, file: !11016, line: 2081, type: !1571)
!11126 = !DILocation(line: 0, scope: !11123)
!11127 = !DILocation(line: 2083, column: 3, scope: !11123)
!11128 = !DILocation(line: 2084, column: 1, scope: !11123)
!11129 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !11016, file: !11016, line: 2068, type: !11047, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11130)
!11130 = !{!11131, !11132}
!11131 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11129, file: !11016, line: 2068, type: !1571)
!11132 = !DILocalVariable(name: "val", scope: !11133, file: !11016, line: 2070, type: !132)
!11133 = distinct !DILexicalBlock(scope: !11129, file: !11016, line: 2070, column: 3)
!11134 = !DILocation(line: 0, scope: !11129)
!11135 = !DILocation(line: 2070, column: 3, scope: !11133)
!11136 = !DILocation(line: 0, scope: !11056, inlinedAt: !11137)
!11137 = distinct !DILocation(line: 2070, column: 3, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11133, file: !11016, line: 2070, column: 3)
!11139 = !DILocation(line: 480, column: 4, scope: !11056, inlinedAt: !11137)
!11140 = !DILocation(line: 2070, column: 3, scope: !11138)
!11141 = !DILocation(line: 0, scope: !11133)
!11142 = !DILocation(line: 0, scope: !11069, inlinedAt: !11143)
!11143 = distinct !DILocation(line: 2070, column: 3, scope: !11133)
!11144 = !DILocation(line: 531, column: 4, scope: !11069, inlinedAt: !11143)
!11145 = distinct !{!11145, !11135, !11135}
!11146 = !DILocation(line: 2071, column: 1, scope: !11129)
!11147 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !11016, file: !11016, line: 2131, type: !11047, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11148)
!11148 = !{!11149, !11150}
!11149 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11147, file: !11016, line: 2131, type: !1571)
!11150 = !DILocalVariable(name: "val", scope: !11151, file: !11016, line: 2133, type: !132)
!11151 = distinct !DILexicalBlock(scope: !11147, file: !11016, line: 2133, column: 3)
!11152 = !DILocation(line: 0, scope: !11147)
!11153 = !DILocation(line: 2133, column: 3, scope: !11151)
!11154 = !DILocation(line: 0, scope: !11056, inlinedAt: !11155)
!11155 = distinct !DILocation(line: 2133, column: 3, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11151, file: !11016, line: 2133, column: 3)
!11157 = !DILocation(line: 480, column: 4, scope: !11056, inlinedAt: !11155)
!11158 = !DILocation(line: 2133, column: 3, scope: !11156)
!11159 = !DILocation(line: 0, scope: !11151)
!11160 = !DILocation(line: 0, scope: !11069, inlinedAt: !11161)
!11161 = distinct !DILocation(line: 2133, column: 3, scope: !11151)
!11162 = !DILocation(line: 531, column: 4, scope: !11069, inlinedAt: !11161)
!11163 = distinct !{!11163, !11153, !11153}
!11164 = !DILocation(line: 2134, column: 1, scope: !11147)
!11165 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !11016, file: !11016, line: 2035, type: !11047, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11166)
!11166 = !{!11167, !11168}
!11167 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11165, file: !11016, line: 2035, type: !1571)
!11168 = !DILocalVariable(name: "val", scope: !11169, file: !11016, line: 2037, type: !132)
!11169 = distinct !DILexicalBlock(scope: !11165, file: !11016, line: 2037, column: 3)
!11170 = !DILocation(line: 0, scope: !11165)
!11171 = !DILocation(line: 2037, column: 3, scope: !11169)
!11172 = !DILocation(line: 0, scope: !11056, inlinedAt: !11173)
!11173 = distinct !DILocation(line: 2037, column: 3, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11169, file: !11016, line: 2037, column: 3)
!11175 = !DILocation(line: 480, column: 4, scope: !11056, inlinedAt: !11173)
!11176 = !DILocation(line: 2037, column: 3, scope: !11174)
!11177 = !DILocation(line: 0, scope: !11169)
!11178 = !DILocation(line: 0, scope: !11069, inlinedAt: !11179)
!11179 = distinct !DILocation(line: 2037, column: 3, scope: !11169)
!11180 = !DILocation(line: 531, column: 4, scope: !11069, inlinedAt: !11179)
!11181 = distinct !{!11181, !11171, !11171}
!11182 = !DILocation(line: 2038, column: 1, scope: !11165)
!11183 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11016, file: !11016, line: 1814, type: !11017, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11184)
!11184 = !{!11185}
!11185 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11183, file: !11016, line: 1814, type: !1571)
!11186 = !DILocation(line: 0, scope: !11183)
!11187 = !DILocation(line: 1816, column: 11, scope: !11183)
!11188 = !DILocation(line: 1816, column: 46, scope: !11183)
!11189 = !DILocation(line: 1816, column: 3, scope: !11183)
!11190 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !11016, file: !11016, line: 2142, type: !11047, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11191)
!11191 = !{!11192, !11193}
!11192 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11190, file: !11016, line: 2142, type: !1571)
!11193 = !DILocalVariable(name: "val", scope: !11194, file: !11016, line: 2144, type: !132)
!11194 = distinct !DILexicalBlock(scope: !11190, file: !11016, line: 2144, column: 3)
!11195 = !DILocation(line: 0, scope: !11190)
!11196 = !DILocation(line: 2144, column: 3, scope: !11194)
!11197 = !DILocation(line: 0, scope: !11056, inlinedAt: !11198)
!11198 = distinct !DILocation(line: 2144, column: 3, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11194, file: !11016, line: 2144, column: 3)
!11200 = !DILocation(line: 480, column: 4, scope: !11056, inlinedAt: !11198)
!11201 = !DILocation(line: 2144, column: 3, scope: !11199)
!11202 = !DILocation(line: 0, scope: !11194)
!11203 = !DILocation(line: 0, scope: !11069, inlinedAt: !11204)
!11204 = distinct !DILocation(line: 2144, column: 3, scope: !11194)
!11205 = !DILocation(line: 531, column: 4, scope: !11069, inlinedAt: !11204)
!11206 = distinct !{!11206, !11196, !11196}
!11207 = !DILocation(line: 2145, column: 1, scope: !11190)
!11208 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !11016, file: !11016, line: 2046, type: !11047, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11209)
!11209 = !{!11210, !11211}
!11210 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11208, file: !11016, line: 2046, type: !1571)
!11211 = !DILocalVariable(name: "val", scope: !11212, file: !11016, line: 2048, type: !132)
!11212 = distinct !DILexicalBlock(scope: !11208, file: !11016, line: 2048, column: 3)
!11213 = !DILocation(line: 0, scope: !11208)
!11214 = !DILocation(line: 2048, column: 3, scope: !11212)
!11215 = !DILocation(line: 0, scope: !11056, inlinedAt: !11216)
!11216 = distinct !DILocation(line: 2048, column: 3, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11212, file: !11016, line: 2048, column: 3)
!11218 = !DILocation(line: 480, column: 4, scope: !11056, inlinedAt: !11216)
!11219 = !DILocation(line: 2048, column: 3, scope: !11217)
!11220 = !DILocation(line: 0, scope: !11212)
!11221 = !DILocation(line: 0, scope: !11069, inlinedAt: !11222)
!11222 = distinct !DILocation(line: 2048, column: 3, scope: !11212)
!11223 = !DILocation(line: 531, column: 4, scope: !11069, inlinedAt: !11222)
!11224 = distinct !{!11224, !11214, !11214}
!11225 = !DILocation(line: 2049, column: 1, scope: !11208)
!11226 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11016, file: !11016, line: 2403, type: !11227, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11229)
!11227 = !DISubroutineType(types: !11228)
!11228 = !{!163, !1571}
!11229 = !{!11230}
!11230 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11226, file: !11016, line: 2403, type: !1571)
!11231 = !DILocation(line: 0, scope: !11226)
!11232 = !DILocation(line: 2405, column: 20, scope: !11226)
!11233 = !DILocation(line: 2405, column: 10, scope: !11226)
!11234 = !DILocation(line: 2405, column: 3, scope: !11226)
!11235 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11016, file: !11016, line: 1770, type: !11017, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11236)
!11236 = !{!11237}
!11237 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11235, file: !11016, line: 1770, type: !1571)
!11238 = !DILocation(line: 0, scope: !11235)
!11239 = !DILocation(line: 1772, column: 11, scope: !11235)
!11240 = !DILocation(line: 1772, column: 46, scope: !11235)
!11241 = !DILocation(line: 1772, column: 3, scope: !11235)
!11242 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11016, file: !11016, line: 1934, type: !11047, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11243)
!11243 = !{!11244, !11245}
!11244 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11242, file: !11016, line: 1934, type: !1571)
!11245 = !DILocalVariable(name: "tmpreg", scope: !11242, file: !11016, line: 1936, type: !131)
!11246 = !DILocation(line: 0, scope: !11242)
!11247 = !DILocation(line: 1936, column: 3, scope: !11242)
!11248 = !DILocation(line: 1936, column: 17, scope: !11242)
!11249 = !DILocation(line: 1937, column: 20, scope: !11242)
!11250 = !DILocation(line: 1937, column: 10, scope: !11242)
!11251 = !DILocation(line: 1938, column: 10, scope: !11242)
!11252 = !DILocation(line: 1939, column: 20, scope: !11242)
!11253 = !DILocation(line: 1939, column: 10, scope: !11242)
!11254 = !DILocation(line: 1940, column: 10, scope: !11242)
!11255 = !DILocation(line: 1941, column: 1, scope: !11242)
!11256 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11016, file: !11016, line: 2426, type: !11257, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11259)
!11257 = !DISubroutineType(types: !11258)
!11258 = !{null, !1571, !163}
!11259 = !{!11260, !11261}
!11260 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11256, file: !11016, line: 2426, type: !1571)
!11261 = !DILocalVariable(name: "Value", arg: 2, scope: !11256, file: !11016, line: 2426, type: !163)
!11262 = !DILocation(line: 0, scope: !11256)
!11263 = !DILocation(line: 2428, column: 16, scope: !11256)
!11264 = !DILocation(line: 2428, column: 11, scope: !11256)
!11265 = !DILocation(line: 2428, column: 14, scope: !11256)
!11266 = !DILocation(line: 2429, column: 1, scope: !11256)
!11267 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1627, file: !1627, line: 205, type: !11268, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11270)
!11268 = !DISubroutineType(types: !11269)
!11269 = !{!132, !1500}
!11270 = !{!11271, !11272}
!11271 = !DILocalVariable(name: "dev", arg: 1, scope: !11267, file: !1627, line: 205, type: !1500)
!11272 = !DILocalVariable(name: "config", scope: !11267, file: !1627, line: 207, type: !10580)
!11273 = !DILocation(line: 0, scope: !11267)
!11274 = !DILocation(line: 207, column: 48, scope: !11267)
!11275 = !DILocation(line: 209, column: 36, scope: !11267)
!11276 = !DILocation(line: 209, column: 9, scope: !11267)
!11277 = !DILocation(line: 209, column: 2, scope: !11267)
!11278 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1627, file: !1627, line: 270, type: !11279, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11281)
!11279 = !DISubroutineType(types: !11280)
!11280 = !{!1466, !132}
!11281 = !{!11282}
!11282 = !DILocalVariable(name: "parity", arg: 1, scope: !11278, file: !1627, line: 270, type: !132)
!11283 = !DILocation(line: 0, scope: !11278)
!11284 = !DILocation(line: 272, column: 2, scope: !11278)
!11285 = !DILocation(line: 281, column: 1, scope: !11278)
!11286 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1627, file: !1627, line: 220, type: !11268, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11287)
!11287 = !{!11288, !11289}
!11288 = !DILocalVariable(name: "dev", arg: 1, scope: !11286, file: !1627, line: 220, type: !1500)
!11289 = !DILocalVariable(name: "config", scope: !11286, file: !1627, line: 222, type: !10580)
!11290 = !DILocation(line: 0, scope: !11286)
!11291 = !DILocation(line: 222, column: 48, scope: !11286)
!11292 = !DILocation(line: 224, column: 44, scope: !11286)
!11293 = !DILocation(line: 224, column: 9, scope: !11286)
!11294 = !DILocation(line: 224, column: 2, scope: !11286)
!11295 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1627, file: !1627, line: 304, type: !11296, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11298)
!11296 = !DISubroutineType(types: !11297)
!11297 = !{!1480, !132}
!11298 = !{!11299}
!11299 = !DILocalVariable(name: "sb", arg: 1, scope: !11295, file: !1627, line: 304, type: !132)
!11300 = !DILocation(line: 0, scope: !11295)
!11301 = !DILocation(line: 306, column: 2, scope: !11295)
!11302 = !DILocation(line: 0, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11295, file: !1627, line: 306, column: 14)
!11304 = !DILocation(line: 323, column: 1, scope: !11295)
!11305 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1627, file: !1627, line: 235, type: !11268, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11306)
!11306 = !{!11307, !11308}
!11307 = !DILocalVariable(name: "dev", arg: 1, scope: !11305, file: !1627, line: 235, type: !1500)
!11308 = !DILocalVariable(name: "config", scope: !11305, file: !1627, line: 237, type: !10580)
!11309 = !DILocation(line: 0, scope: !11305)
!11310 = !DILocation(line: 237, column: 48, scope: !11305)
!11311 = !DILocation(line: 239, column: 39, scope: !11305)
!11312 = !DILocation(line: 239, column: 9, scope: !11305)
!11313 = !DILocation(line: 239, column: 2, scope: !11305)
!11314 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1627, file: !1627, line: 355, type: !11315, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11317)
!11315 = !DISubroutineType(types: !11316)
!11316 = !{!1473, !132, !132}
!11317 = !{!11318, !11319}
!11318 = !DILocalVariable(name: "db", arg: 1, scope: !11314, file: !1627, line: 355, type: !132)
!11319 = !DILocalVariable(name: "p", arg: 2, scope: !11314, file: !1627, line: 356, type: !132)
!11320 = !DILocation(line: 0, scope: !11314)
!11321 = !DILocation(line: 358, column: 2, scope: !11314)
!11322 = !DILocation(line: 384, column: 1, scope: !11314)
!11323 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1627, file: !1627, line: 250, type: !11268, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11324)
!11324 = !{!11325, !11326}
!11325 = !DILocalVariable(name: "dev", arg: 1, scope: !11323, file: !1627, line: 250, type: !1500)
!11326 = !DILocalVariable(name: "config", scope: !11323, file: !1627, line: 252, type: !10580)
!11327 = !DILocation(line: 0, scope: !11323)
!11328 = !DILocation(line: 252, column: 48, scope: !11323)
!11329 = !DILocation(line: 254, column: 40, scope: !11323)
!11330 = !DILocation(line: 254, column: 9, scope: !11323)
!11331 = !DILocation(line: 254, column: 2, scope: !11323)
!11332 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1627, file: !1627, line: 409, type: !11333, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11335)
!11333 = !DISubroutineType(types: !11334)
!11334 = !{!1486, !132}
!11335 = !{!11336}
!11336 = !DILocalVariable(name: "fc", arg: 1, scope: !11332, file: !1627, line: 409, type: !132)
!11337 = !DILocation(line: 0, scope: !11332)
!11338 = !DILocation(line: 411, column: 9, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11332, file: !1627, line: 411, column: 6)
!11340 = !DILocation(line: 416, column: 1, scope: !11332)
!11341 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11016, file: !11016, line: 967, type: !11017, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11342)
!11342 = !{!11343}
!11343 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11341, file: !11016, line: 967, type: !1571)
!11344 = !DILocation(line: 0, scope: !11341)
!11345 = !DILocation(line: 969, column: 21, scope: !11341)
!11346 = !DILocation(line: 969, column: 3, scope: !11341)
!11347 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11016, file: !11016, line: 601, type: !11017, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11348)
!11348 = !{!11349}
!11349 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11347, file: !11016, line: 601, type: !1571)
!11350 = !DILocation(line: 0, scope: !11347)
!11351 = !DILocation(line: 603, column: 21, scope: !11347)
!11352 = !DILocation(line: 603, column: 3, scope: !11347)
!11353 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11016, file: !11016, line: 820, type: !11017, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11354)
!11354 = !{!11355}
!11355 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11353, file: !11016, line: 820, type: !1571)
!11356 = !DILocation(line: 0, scope: !11353)
!11357 = !DILocation(line: 822, column: 21, scope: !11353)
!11358 = !DILocation(line: 822, column: 3, scope: !11353)
!11359 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11016, file: !11016, line: 547, type: !11017, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11360)
!11360 = !{!11361}
!11361 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11359, file: !11016, line: 547, type: !1571)
!11362 = !DILocation(line: 0, scope: !11359)
!11363 = !DILocation(line: 549, column: 21, scope: !11359)
!11364 = !DILocation(line: 549, column: 3, scope: !11359)
!11365 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1627, file: !1627, line: 257, type: !11366, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11368)
!11366 = !DISubroutineType(types: !11367)
!11367 = !{!132, !1466}
!11368 = !{!11369}
!11369 = !DILocalVariable(name: "parity", arg: 1, scope: !11365, file: !1627, line: 257, type: !1466)
!11370 = !DILocation(line: 0, scope: !11365)
!11371 = !DILocation(line: 259, column: 2, scope: !11365)
!11372 = !DILocation(line: 268, column: 1, scope: !11365)
!11373 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1627, file: !1627, line: 283, type: !11374, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11376)
!11374 = !DISubroutineType(types: !11375)
!11375 = !{!132, !1480}
!11376 = !{!11377}
!11377 = !DILocalVariable(name: "sb", arg: 1, scope: !11373, file: !1627, line: 283, type: !1480)
!11378 = !DILocation(line: 0, scope: !11373)
!11379 = !DILocation(line: 285, column: 2, scope: !11373)
!11380 = !DILocation(line: 0, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11373, file: !1627, line: 285, column: 14)
!11382 = !DILocation(line: 302, column: 1, scope: !11373)
!11383 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1627, file: !1627, line: 325, type: !11384, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11386)
!11384 = !DISubroutineType(types: !11385)
!11385 = !{!132, !1473, !1466}
!11386 = !{!11387, !11388}
!11387 = !DILocalVariable(name: "db", arg: 1, scope: !11383, file: !1627, line: 325, type: !1473)
!11388 = !DILocalVariable(name: "p", arg: 2, scope: !11383, file: !1627, line: 326, type: !1466)
!11389 = !DILocation(line: 0, scope: !11383)
!11390 = !DILocation(line: 328, column: 2, scope: !11383)
!11391 = !DILocation(line: 353, column: 1, scope: !11383)
!11392 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1627, file: !1627, line: 393, type: !11393, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11395)
!11393 = !DISubroutineType(types: !11394)
!11394 = !{!132, !1486}
!11395 = !{!11396}
!11396 = !DILocalVariable(name: "fc", arg: 1, scope: !11392, file: !1627, line: 393, type: !1486)
!11397 = !DILocation(line: 0, scope: !11392)
!11398 = !DILocation(line: 395, column: 9, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11392, file: !1627, line: 395, column: 6)
!11400 = !DILocation(line: 400, column: 1, scope: !11392)
!11401 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11016, file: !11016, line: 424, type: !11047, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11402)
!11402 = !{!11403}
!11403 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11401, file: !11016, line: 424, type: !1571)
!11404 = !DILocation(line: 0, scope: !11401)
!11405 = !DILocation(line: 426, column: 3, scope: !11401)
!11406 = !DILocation(line: 427, column: 1, scope: !11401)
!11407 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1627, file: !1627, line: 197, type: !11408, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11410)
!11408 = !DISubroutineType(types: !11409)
!11409 = !{null, !1500, !132}
!11410 = !{!11411, !11412, !11413}
!11411 = !DILocalVariable(name: "dev", arg: 1, scope: !11407, file: !1627, line: 197, type: !1500)
!11412 = !DILocalVariable(name: "parity", arg: 2, scope: !11407, file: !1627, line: 198, type: !132)
!11413 = !DILocalVariable(name: "config", scope: !11407, file: !1627, line: 200, type: !10580)
!11414 = !DILocation(line: 0, scope: !11407)
!11415 = !DILocation(line: 200, column: 48, scope: !11407)
!11416 = !DILocation(line: 202, column: 29, scope: !11407)
!11417 = !DILocation(line: 202, column: 2, scope: !11407)
!11418 = !DILocation(line: 203, column: 1, scope: !11407)
!11419 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1627, file: !1627, line: 212, type: !11408, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11420)
!11420 = !{!11421, !11422, !11423}
!11421 = !DILocalVariable(name: "dev", arg: 1, scope: !11419, file: !1627, line: 212, type: !1500)
!11422 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11419, file: !1627, line: 213, type: !132)
!11423 = !DILocalVariable(name: "config", scope: !11419, file: !1627, line: 215, type: !10580)
!11424 = !DILocation(line: 0, scope: !11419)
!11425 = !DILocation(line: 215, column: 48, scope: !11419)
!11426 = !DILocation(line: 217, column: 37, scope: !11419)
!11427 = !DILocation(line: 217, column: 2, scope: !11419)
!11428 = !DILocation(line: 218, column: 1, scope: !11419)
!11429 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1627, file: !1627, line: 227, type: !11408, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11430)
!11430 = !{!11431, !11432, !11433}
!11431 = !DILocalVariable(name: "dev", arg: 1, scope: !11429, file: !1627, line: 227, type: !1500)
!11432 = !DILocalVariable(name: "databits", arg: 2, scope: !11429, file: !1627, line: 228, type: !132)
!11433 = !DILocalVariable(name: "config", scope: !11429, file: !1627, line: 230, type: !10580)
!11434 = !DILocation(line: 0, scope: !11429)
!11435 = !DILocation(line: 230, column: 48, scope: !11429)
!11436 = !DILocation(line: 232, column: 32, scope: !11429)
!11437 = !DILocation(line: 232, column: 2, scope: !11429)
!11438 = !DILocation(line: 233, column: 1, scope: !11429)
!11439 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1627, file: !1627, line: 242, type: !11408, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11440)
!11440 = !{!11441, !11442, !11443}
!11441 = !DILocalVariable(name: "dev", arg: 1, scope: !11439, file: !1627, line: 242, type: !1500)
!11442 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11439, file: !1627, line: 243, type: !132)
!11443 = !DILocalVariable(name: "config", scope: !11439, file: !1627, line: 245, type: !10580)
!11444 = !DILocation(line: 0, scope: !11439)
!11445 = !DILocation(line: 245, column: 48, scope: !11439)
!11446 = !DILocation(line: 247, column: 33, scope: !11439)
!11447 = !DILocation(line: 247, column: 2, scope: !11439)
!11448 = !DILocation(line: 248, column: 1, scope: !11439)
!11449 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1627, file: !1627, line: 107, type: !11408, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11450)
!11450 = !{!11451, !11452, !11453, !11454, !11455}
!11451 = !DILocalVariable(name: "dev", arg: 1, scope: !11449, file: !1627, line: 107, type: !1500)
!11452 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11449, file: !1627, line: 107, type: !132)
!11453 = !DILocalVariable(name: "config", scope: !11449, file: !1627, line: 109, type: !10580)
!11454 = !DILocalVariable(name: "data", scope: !11449, file: !1627, line: 110, type: !10703)
!11455 = !DILocalVariable(name: "clock_rate", scope: !11449, file: !1627, line: 112, type: !132)
!11456 = !DILocation(line: 0, scope: !11449)
!11457 = !DILocation(line: 109, column: 48, scope: !11449)
!11458 = !DILocation(line: 110, column: 38, scope: !11449)
!11459 = !DILocation(line: 112, column: 2, scope: !11449)
!11460 = !DILocation(line: 123, column: 36, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !1627, line: 123, column: 7)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !1627, line: 122, column: 9)
!11463 = distinct !DILexicalBlock(scope: !11449, file: !1627, line: 115, column: 6)
!11464 = !DILocation(line: 124, column: 42, scope: !11461)
!11465 = !DILocation(line: 123, column: 7, scope: !11461)
!11466 = !DILocation(line: 125, column: 22, scope: !11461)
!11467 = !DILocation(line: 123, column: 7, scope: !11462)
!11468 = !DILocation(line: 176, column: 36, scope: !11449)
!11469 = !DILocation(line: 176, column: 3, scope: !11449)
!11470 = !DILocation(line: 179, column: 32, scope: !11449)
!11471 = !DILocation(line: 180, column: 10, scope: !11449)
!11472 = !DILocation(line: 179, column: 3, scope: !11449)
!11473 = !DILocation(line: 195, column: 1, scope: !11449)
!11474 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11016, file: !11016, line: 410, type: !11047, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11475)
!11475 = !{!11476}
!11476 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11474, file: !11016, line: 410, type: !1571)
!11477 = !DILocation(line: 0, scope: !11474)
!11478 = !DILocation(line: 412, column: 3, scope: !11474)
!11479 = !DILocation(line: 413, column: 1, scope: !11474)
!11480 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !821, file: !821, line: 216, type: !1604, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11481)
!11481 = !{!11482, !11483, !11484, !11485}
!11482 = !DILocalVariable(name: "dev", arg: 1, scope: !11480, file: !821, line: 216, type: !1500)
!11483 = !DILocalVariable(name: "sys", arg: 2, scope: !11480, file: !821, line: 217, type: !915)
!11484 = !DILocalVariable(name: "rate", arg: 3, scope: !11480, file: !821, line: 218, type: !873)
!11485 = !DILocalVariable(name: "api", scope: !11480, file: !821, line: 220, type: !1582)
!11486 = !DILocation(line: 0, scope: !11480)
!11487 = !DILocation(line: 221, column: 49, scope: !11480)
!11488 = !DILocation(line: 223, column: 11, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11480, file: !821, line: 223, column: 6)
!11490 = !DILocation(line: 223, column: 20, scope: !11489)
!11491 = !DILocation(line: 223, column: 6, scope: !11480)
!11492 = !DILocation(line: 227, column: 9, scope: !11480)
!11493 = !DILocation(line: 227, column: 2, scope: !11480)
!11494 = !DILocation(line: 228, column: 1, scope: !11480)
!11495 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11016, file: !11016, line: 615, type: !11496, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11498)
!11496 = !DISubroutineType(types: !11497)
!11497 = !{null, !1571, !132}
!11498 = !{!11499, !11500}
!11499 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11495, file: !11016, line: 615, type: !1571)
!11500 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11495, file: !11016, line: 615, type: !132)
!11501 = !DILocation(line: 0, scope: !11495)
!11502 = !DILocation(line: 617, column: 3, scope: !11495)
!11503 = !DILocation(line: 618, column: 1, scope: !11495)
!11504 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11016, file: !11016, line: 1020, type: !11505, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11507)
!11505 = !DISubroutineType(types: !11506)
!11506 = !{null, !1571, !132, !132, !132}
!11507 = !{!11508, !11509, !11510, !11511}
!11508 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11504, file: !11016, line: 1020, type: !1571)
!11509 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11504, file: !11016, line: 1020, type: !132)
!11510 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11504, file: !11016, line: 1020, type: !132)
!11511 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11504, file: !11016, line: 1021, type: !132)
!11512 = !DILocation(line: 0, scope: !11504)
!11513 = !DILocation(line: 1029, column: 30, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11515, file: !11016, line: 1028, column: 3)
!11515 = distinct !DILexicalBlock(scope: !11504, file: !11016, line: 1023, column: 7)
!11516 = !DILocation(line: 1029, column: 19, scope: !11514)
!11517 = !DILocation(line: 1029, column: 13, scope: !11514)
!11518 = !DILocation(line: 1029, column: 17, scope: !11514)
!11519 = !DILocation(line: 1031, column: 1, scope: !11504)
!11520 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11016, file: !11016, line: 949, type: !11496, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11521)
!11521 = !{!11522, !11523}
!11522 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11520, file: !11016, line: 949, type: !1571)
!11523 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11520, file: !11016, line: 949, type: !132)
!11524 = !DILocation(line: 0, scope: !11520)
!11525 = !DILocation(line: 951, column: 3, scope: !11520)
!11526 = !DILocation(line: 952, column: 1, scope: !11520)
!11527 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11016, file: !11016, line: 588, type: !11496, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11528)
!11528 = !{!11529, !11530}
!11529 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11527, file: !11016, line: 588, type: !1571)
!11530 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11527, file: !11016, line: 588, type: !132)
!11531 = !DILocation(line: 0, scope: !11527)
!11532 = !DILocation(line: 590, column: 3, scope: !11527)
!11533 = !DILocation(line: 591, column: 1, scope: !11527)
!11534 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11016, file: !11016, line: 805, type: !11496, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11535)
!11535 = !{!11536, !11537}
!11536 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11534, file: !11016, line: 805, type: !1571)
!11537 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11534, file: !11016, line: 805, type: !132)
!11538 = !DILocation(line: 0, scope: !11534)
!11539 = !DILocation(line: 807, column: 3, scope: !11534)
!11540 = !DILocation(line: 808, column: 1, scope: !11534)
!11541 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11016, file: !11016, line: 532, type: !11496, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11542)
!11542 = !{!11543, !11544}
!11543 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11541, file: !11016, line: 532, type: !1571)
!11544 = !DILocalVariable(name: "Parity", arg: 2, scope: !11541, file: !11016, line: 532, type: !132)
!11545 = !DILocation(line: 0, scope: !11541)
!11546 = !DILocation(line: 534, column: 3, scope: !11541)
!11547 = !DILocation(line: 535, column: 1, scope: !11541)
!11548 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11016, file: !11016, line: 1737, type: !11017, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11549)
!11549 = !{!11550}
!11550 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11548, file: !11016, line: 1737, type: !1571)
!11551 = !DILocation(line: 0, scope: !11548)
!11552 = !DILocation(line: 1739, column: 11, scope: !11548)
!11553 = !DILocation(line: 1739, column: 3, scope: !11548)
!11554 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11016, file: !11016, line: 1748, type: !11017, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11555)
!11555 = !{!11556}
!11556 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11554, file: !11016, line: 1748, type: !1571)
!11557 = !DILocation(line: 0, scope: !11554)
!11558 = !DILocation(line: 1750, column: 11, scope: !11554)
!11559 = !DILocation(line: 1750, column: 45, scope: !11554)
!11560 = !DILocation(line: 1750, column: 3, scope: !11554)
!11561 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11016, file: !11016, line: 1827, type: !11017, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11562)
!11562 = !{!11563}
!11563 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11561, file: !11016, line: 1827, type: !1571)
!11564 = !DILocation(line: 0, scope: !11561)
!11565 = !DILocation(line: 1829, column: 11, scope: !11561)
!11566 = !DILocation(line: 1829, column: 46, scope: !11561)
!11567 = !DILocation(line: 1829, column: 3, scope: !11561)
!11568 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11016, file: !11016, line: 1992, type: !11047, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11569)
!11569 = !{!11570}
!11570 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11568, file: !11016, line: 1992, type: !1571)
!11571 = !DILocation(line: 0, scope: !11568)
!11572 = !DILocation(line: 1994, column: 3, scope: !11568)
!11573 = !DILocation(line: 1995, column: 1, scope: !11568)
!11574 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11016, file: !11016, line: 1877, type: !11047, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11575)
!11575 = !{!11576, !11577}
!11576 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11574, file: !11016, line: 1877, type: !1571)
!11577 = !DILocalVariable(name: "tmpreg", scope: !11574, file: !11016, line: 1879, type: !131)
!11578 = !DILocation(line: 0, scope: !11574)
!11579 = !DILocation(line: 1879, column: 3, scope: !11574)
!11580 = !DILocation(line: 1879, column: 17, scope: !11574)
!11581 = !DILocation(line: 1880, column: 20, scope: !11574)
!11582 = !DILocation(line: 1880, column: 10, scope: !11574)
!11583 = !DILocation(line: 1881, column: 10, scope: !11574)
!11584 = !DILocation(line: 1882, column: 20, scope: !11574)
!11585 = !DILocation(line: 1882, column: 10, scope: !11574)
!11586 = !DILocation(line: 1883, column: 10, scope: !11574)
!11587 = !DILocation(line: 1884, column: 1, scope: !11574)
!11588 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11016, file: !11016, line: 1896, type: !11047, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11589)
!11589 = !{!11590, !11591}
!11590 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11588, file: !11016, line: 1896, type: !1571)
!11591 = !DILocalVariable(name: "tmpreg", scope: !11588, file: !11016, line: 1898, type: !131)
!11592 = !DILocation(line: 0, scope: !11588)
!11593 = !DILocation(line: 1898, column: 3, scope: !11588)
!11594 = !DILocation(line: 1898, column: 17, scope: !11588)
!11595 = !DILocation(line: 1899, column: 20, scope: !11588)
!11596 = !DILocation(line: 1899, column: 10, scope: !11588)
!11597 = !DILocation(line: 1900, column: 10, scope: !11588)
!11598 = !DILocation(line: 1901, column: 20, scope: !11588)
!11599 = !DILocation(line: 1901, column: 10, scope: !11588)
!11600 = !DILocation(line: 1902, column: 10, scope: !11588)
!11601 = !DILocation(line: 1903, column: 1, scope: !11588)
!11602 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11016, file: !11016, line: 1915, type: !11047, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11603)
!11603 = !{!11604, !11605}
!11604 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11602, file: !11016, line: 1915, type: !1571)
!11605 = !DILocalVariable(name: "tmpreg", scope: !11602, file: !11016, line: 1917, type: !131)
!11606 = !DILocation(line: 0, scope: !11602)
!11607 = !DILocation(line: 1917, column: 3, scope: !11602)
!11608 = !DILocation(line: 1917, column: 17, scope: !11602)
!11609 = !DILocation(line: 1918, column: 20, scope: !11602)
!11610 = !DILocation(line: 1918, column: 10, scope: !11602)
!11611 = !DILocation(line: 1919, column: 10, scope: !11602)
!11612 = !DILocation(line: 1920, column: 20, scope: !11602)
!11613 = !DILocation(line: 1920, column: 10, scope: !11602)
!11614 = !DILocation(line: 1921, column: 10, scope: !11602)
!11615 = !DILocation(line: 1922, column: 1, scope: !11602)
!11616 = !DILocation(line: 0, scope: !1705)
!11617 = !DILocation(line: 1914, column: 1, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !1705, file: !1627, line: 1914, column: 1)
!11619 = !DILocation(line: 1914, column: 1, scope: !1705)
!11620 = !DILocation(line: 0, scope: !1754)
!11621 = !DILocation(line: 1914, column: 1, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !1754, file: !1627, line: 1914, column: 1)
!11623 = !DILocation(line: 1914, column: 1, scope: !1754)
!11624 = !DILocation(line: 0, scope: !1771)
!11625 = !DILocation(line: 1914, column: 1, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !1771, file: !1627, line: 1914, column: 1)
!11627 = !DILocation(line: 1914, column: 1, scope: !1771)
!11628 = !DILocation(line: 0, scope: !1788)
!11629 = !DILocation(line: 1914, column: 1, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !1788, file: !1627, line: 1914, column: 1)
!11631 = !DILocation(line: 1914, column: 1, scope: !1788)
!11632 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1627, file: !1627, line: 987, type: !1551, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11633)
!11633 = !{!11634, !11635}
!11634 = !DILocalVariable(name: "dev", arg: 1, scope: !11632, file: !1627, line: 987, type: !1500)
!11635 = !DILocalVariable(name: "data", scope: !11632, file: !1627, line: 989, type: !10703)
!11636 = !DILocation(line: 0, scope: !11632)
!11637 = !DILocation(line: 989, column: 38, scope: !11632)
!11638 = !DILocation(line: 1014, column: 12, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11632, file: !1627, line: 1014, column: 6)
!11640 = !DILocation(line: 1014, column: 6, scope: !11639)
!11641 = !DILocation(line: 1014, column: 6, scope: !11632)
!11642 = !DILocation(line: 1015, column: 28, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11639, file: !1627, line: 1014, column: 21)
!11644 = !DILocation(line: 1015, column: 3, scope: !11643)
!11645 = !DILocation(line: 1016, column: 2, scope: !11643)
!11646 = !DILocation(line: 1059, column: 1, scope: !11632)
!11647 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1627, file: !1627, line: 1583, type: !1521, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11648)
!11648 = !{!11649, !11650, !11651, !11652, !11653, !11654}
!11649 = !DILocalVariable(name: "dev", arg: 1, scope: !11647, file: !1627, line: 1583, type: !1500)
!11650 = !DILocalVariable(name: "config", scope: !11647, file: !1627, line: 1585, type: !10580)
!11651 = !DILocalVariable(name: "data", scope: !11647, file: !1627, line: 1586, type: !10703)
!11652 = !DILocalVariable(name: "ll_parity", scope: !11647, file: !1627, line: 1587, type: !132)
!11653 = !DILocalVariable(name: "ll_datawidth", scope: !11647, file: !1627, line: 1588, type: !132)
!11654 = !DILocalVariable(name: "err", scope: !11647, file: !1627, line: 1589, type: !103)
!11655 = !DILocation(line: 0, scope: !11647)
!11656 = !DILocation(line: 1585, column: 48, scope: !11647)
!11657 = !DILocation(line: 1586, column: 38, scope: !11647)
!11658 = !DILocation(line: 1591, column: 2, scope: !11647)
!11659 = !DILocation(line: 1593, column: 29, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11647, file: !1627, line: 1593, column: 6)
!11661 = !DILocation(line: 1593, column: 7, scope: !11660)
!11662 = !DILocation(line: 1593, column: 6, scope: !11647)
!11663 = !DILocation(line: 1599, column: 31, scope: !11647)
!11664 = !DILocation(line: 1599, column: 71, scope: !11647)
!11665 = !DILocation(line: 1599, column: 8, scope: !11647)
!11666 = !DILocation(line: 1600, column: 10, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11647, file: !1627, line: 1600, column: 6)
!11668 = !DILocation(line: 1600, column: 6, scope: !11647)
!11669 = !DILocation(line: 1616, column: 36, scope: !11647)
!11670 = !DILocation(line: 1616, column: 8, scope: !11647)
!11671 = !DILocation(line: 1617, column: 10, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11647, file: !1627, line: 1617, column: 6)
!11673 = !DILocation(line: 1617, column: 6, scope: !11647)
!11674 = !DILocation(line: 1621, column: 27, scope: !11647)
!11675 = !DILocation(line: 1621, column: 2, scope: !11647)
!11676 = !DILocation(line: 1624, column: 40, scope: !11647)
!11677 = !DILocation(line: 1624, column: 2, scope: !11647)
!11678 = !DILocation(line: 1630, column: 14, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11647, file: !1627, line: 1630, column: 6)
!11680 = !DILocation(line: 1630, column: 6, scope: !11647)
!11681 = !DILocation(line: 1638, column: 2, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11683, file: !1627, line: 1634, column: 34)
!11683 = distinct !DILexicalBlock(scope: !11679, file: !1627, line: 1634, column: 13)
!11684 = !DILocation(line: 0, scope: !11679)
!11685 = !DILocation(line: 1649, column: 35, scope: !11647)
!11686 = !DILocation(line: 1649, column: 2, scope: !11647)
!11687 = !DILocation(line: 1654, column: 14, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11647, file: !1627, line: 1654, column: 6)
!11689 = !DILocation(line: 1654, column: 6, scope: !11647)
!11690 = !DILocation(line: 1655, column: 3, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11688, file: !1627, line: 1654, column: 31)
!11692 = !DILocation(line: 1656, column: 2, scope: !11691)
!11693 = !DILocation(line: 1659, column: 37, scope: !11647)
!11694 = !DILocation(line: 1659, column: 2, scope: !11647)
!11695 = !DILocation(line: 1662, column: 14, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11647, file: !1627, line: 1662, column: 6)
!11697 = !DILocation(line: 1662, column: 6, scope: !11647)
!11698 = !DILocation(line: 1663, column: 37, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11696, file: !1627, line: 1662, column: 27)
!11700 = !DILocation(line: 1663, column: 3, scope: !11699)
!11701 = !DILocation(line: 1664, column: 2, scope: !11699)
!11702 = !DILocation(line: 1684, column: 26, scope: !11647)
!11703 = !DILocation(line: 1684, column: 2, scope: !11647)
!11704 = !DILocation(line: 1701, column: 10, scope: !11647)
!11705 = !DILocation(line: 1701, column: 2, scope: !11647)
!11706 = !DILocation(line: 1722, column: 2, scope: !11647)
!11707 = !DILocation(line: 1724, column: 1, scope: !11647)
!11708 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1627, file: !1627, line: 651, type: !1551, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11709)
!11709 = !{!11710, !11711, !11712}
!11710 = !DILocalVariable(name: "dev", arg: 1, scope: !11708, file: !1627, line: 651, type: !1500)
!11711 = !DILocalVariable(name: "data", scope: !11708, file: !1627, line: 653, type: !10703)
!11712 = !DILocalVariable(name: "clk", scope: !11708, file: !1627, line: 654, type: !11713)
!11713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1500)
!11714 = !DILocation(line: 0, scope: !11708)
!11715 = !DILocation(line: 653, column: 38, scope: !11708)
!11716 = !DILocation(line: 656, column: 8, scope: !11708)
!11717 = !DILocation(line: 656, column: 14, scope: !11708)
!11718 = !DILocation(line: 657, column: 1, scope: !11708)
!11719 = distinct !DISubprogram(name: "device_is_ready", scope: !6762, file: !6762, line: 47, type: !11720, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11722)
!11720 = !DISubroutineType(types: !11721)
!11721 = !{!166, !1500}
!11722 = !{!11723}
!11723 = !DILocalVariable(name: "dev", arg: 1, scope: !11719, file: !6762, line: 47, type: !1500)
!11724 = !DILocation(line: 0, scope: !11719)
!11725 = !DILocation(line: 55, column: 2, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11719, file: !6762, line: 55, column: 2)
!11727 = !{i64 2155369027}
!11728 = !DILocation(line: 56, column: 9, scope: !11719)
!11729 = !DILocation(line: 56, column: 2, scope: !11719)
!11730 = distinct !DISubprogram(name: "clock_control_on", scope: !821, file: !821, line: 123, type: !1589, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11731)
!11731 = !{!11732, !11733, !11734}
!11732 = !DILocalVariable(name: "dev", arg: 1, scope: !11730, file: !821, line: 123, type: !1500)
!11733 = !DILocalVariable(name: "sys", arg: 2, scope: !11730, file: !821, line: 124, type: !915)
!11734 = !DILocalVariable(name: "api", scope: !11730, file: !821, line: 126, type: !1582)
!11735 = !DILocation(line: 0, scope: !11730)
!11736 = !DILocation(line: 127, column: 49, scope: !11730)
!11737 = !DILocation(line: 129, column: 14, scope: !11730)
!11738 = !DILocation(line: 129, column: 9, scope: !11730)
!11739 = !DILocation(line: 129, column: 2, scope: !11730)
!11740 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1678, file: !1678, line: 342, type: !11741, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11743)
!11741 = !DISubroutineType(types: !11742)
!11742 = !{!103, !1741, !163}
!11743 = !{!11744, !11745, !11746, !11747}
!11744 = !DILocalVariable(name: "config", arg: 1, scope: !11740, file: !1678, line: 342, type: !1741)
!11745 = !DILocalVariable(name: "id", arg: 2, scope: !11740, file: !1678, line: 343, type: !163)
!11746 = !DILocalVariable(name: "ret", scope: !11740, file: !1678, line: 345, type: !103)
!11747 = !DILocalVariable(name: "state", scope: !11740, file: !1678, line: 346, type: !1681)
!11748 = !DILocation(line: 0, scope: !11740)
!11749 = !DILocation(line: 346, column: 2, scope: !11740)
!11750 = !DILocation(line: 348, column: 8, scope: !11740)
!11751 = !DILocation(line: 349, column: 10, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11740, file: !1678, line: 349, column: 6)
!11753 = !DILocation(line: 349, column: 6, scope: !11740)
!11754 = !DILocation(line: 353, column: 44, scope: !11740)
!11755 = !DILocation(line: 353, column: 9, scope: !11740)
!11756 = !DILocation(line: 353, column: 2, scope: !11740)
!11757 = !DILocation(line: 354, column: 1, scope: !11740)
!11758 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11016, file: !11016, line: 497, type: !11496, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11759)
!11759 = !{!11760, !11761, !11762}
!11760 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11758, file: !11016, line: 497, type: !1571)
!11761 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11758, file: !11016, line: 497, type: !132)
!11762 = !DILocalVariable(name: "val", scope: !11763, file: !11016, line: 499, type: !132)
!11763 = distinct !DILexicalBlock(scope: !11758, file: !11016, line: 499, column: 3)
!11764 = !DILocation(line: 0, scope: !11758)
!11765 = !DILocation(line: 499, column: 3, scope: !11763)
!11766 = !DILocation(line: 0, scope: !11056, inlinedAt: !11767)
!11767 = distinct !DILocation(line: 499, column: 3, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11763, file: !11016, line: 499, column: 3)
!11769 = !DILocation(line: 480, column: 4, scope: !11056, inlinedAt: !11767)
!11770 = !DILocation(line: 499, column: 3, scope: !11768)
!11771 = !DILocation(line: 0, scope: !11763)
!11772 = !DILocation(line: 0, scope: !11069, inlinedAt: !11773)
!11773 = distinct !DILocation(line: 499, column: 3, scope: !11763)
!11774 = !DILocation(line: 531, column: 4, scope: !11069, inlinedAt: !11773)
!11775 = distinct !{!11775, !11765, !11765}
!11776 = !DILocation(line: 500, column: 1, scope: !11758)
!11777 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11016, file: !11016, line: 850, type: !11505, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11778)
!11778 = !{!11779, !11780, !11781, !11782}
!11779 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11777, file: !11016, line: 850, type: !1571)
!11780 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11777, file: !11016, line: 850, type: !132)
!11781 = !DILocalVariable(name: "Parity", arg: 3, scope: !11777, file: !11016, line: 850, type: !132)
!11782 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11777, file: !11016, line: 851, type: !132)
!11783 = !DILocation(line: 0, scope: !11777)
!11784 = !DILocation(line: 853, column: 3, scope: !11777)
!11785 = !DILocation(line: 854, column: 3, scope: !11777)
!11786 = !DILocation(line: 855, column: 1, scope: !11777)
!11787 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11016, file: !11016, line: 1337, type: !11047, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11788)
!11788 = !{!11789}
!11789 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11787, file: !11016, line: 1337, type: !1571)
!11790 = !DILocation(line: 0, scope: !11787)
!11791 = !DILocation(line: 1339, column: 3, scope: !11787)
!11792 = !DILocation(line: 1340, column: 1, scope: !11787)
!11793 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1678, file: !1678, line: 316, type: !11794, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11796)
!11794 = !DISubroutineType(types: !11795)
!11795 = !{!103, !1741, !1681}
!11796 = !{!11797, !11798, !11799}
!11797 = !DILocalVariable(name: "config", arg: 1, scope: !11793, file: !1678, line: 317, type: !1741)
!11798 = !DILocalVariable(name: "state", arg: 2, scope: !11793, file: !1678, line: 318, type: !1681)
!11799 = !DILocalVariable(name: "reg", scope: !11793, file: !1678, line: 320, type: !22)
!11800 = !DILocation(line: 0, scope: !11793)
!11801 = !DILocation(line: 329, column: 39, scope: !11793)
!11802 = !DILocation(line: 329, column: 52, scope: !11793)
!11803 = !DILocation(line: 329, column: 9, scope: !11793)
!11804 = !DILocation(line: 329, column: 2, scope: !11793)
!11805 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !11720, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11806)
!11806 = !{!11807}
!11807 = !DILocalVariable(name: "dev", arg: 1, scope: !11805, file: !152, line: 730, type: !1500)
!11808 = !DILocation(line: 0, scope: !11805)
!11809 = !DILocation(line: 732, column: 9, scope: !11805)
!11810 = !DILocation(line: 732, column: 2, scope: !11805)
!11811 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1875, file: !1875, line: 270, type: !1881, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !11812)
!11812 = !{!11813}
!11813 = !DILocalVariable(name: "dev", arg: 1, scope: !11811, file: !1875, line: 270, type: !1883)
!11814 = !DILocation(line: 0, scope: !11811)
!11815 = !DILocation(line: 274, column: 2, scope: !11811)
!11816 = !DILocation(line: 275, column: 12, scope: !11811)
!11817 = !DILocation(line: 276, column: 15, scope: !11811)
!11818 = !DILocation(line: 277, column: 16, scope: !11811)
!11819 = !DILocation(line: 278, column: 15, scope: !11811)
!11820 = !DILocation(line: 279, column: 16, scope: !11811)
!11821 = !DILocation(line: 282, column: 2, scope: !11811)
!11822 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6955, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !11823)
!11823 = !{!11824, !11825}
!11824 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11822, file: !507, line: 1814, type: !771)
!11825 = !DILocalVariable(name: "priority", arg: 2, scope: !11822, file: !507, line: 1814, type: !132)
!11826 = !DILocation(line: 0, scope: !11822)
!11827 = !DILocation(line: 1822, column: 46, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11829, file: !507, line: 1821, column: 3)
!11829 = distinct !DILexicalBlock(scope: !11822, file: !507, line: 1816, column: 7)
!11830 = !DILocation(line: 1824, column: 1, scope: !11822)
!11831 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1875, file: !1875, line: 118, type: !6858, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !11832)
!11832 = !{!11833, !11834}
!11833 = !DILocalVariable(name: "arg", arg: 1, scope: !11831, file: !1875, line: 118, type: !102)
!11834 = !DILocalVariable(name: "dticks", scope: !11831, file: !1875, line: 121, type: !132)
!11835 = !DILocation(line: 0, scope: !11831)
!11836 = !DILocation(line: 124, column: 2, scope: !11831)
!11837 = !DILocation(line: 129, column: 17, scope: !11831)
!11838 = !DILocation(line: 129, column: 14, scope: !11831)
!11839 = !DILocation(line: 130, column: 15, scope: !11831)
!11840 = !DILocation(line: 145, column: 27, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11842, file: !1875, line: 132, column: 16)
!11842 = distinct !DILexicalBlock(scope: !11831, file: !1875, line: 132, column: 6)
!11843 = !DILocation(line: 145, column: 25, scope: !11841)
!11844 = !DILocation(line: 145, column: 45, scope: !11841)
!11845 = !DILocation(line: 146, column: 30, scope: !11841)
!11846 = !DILocation(line: 146, column: 20, scope: !11841)
!11847 = !DILocation(line: 147, column: 3, scope: !11841)
!11848 = !DILocation(line: 151, column: 2, scope: !11831)
!11849 = !DILocation(line: 152, column: 1, scope: !11831)
!11850 = distinct !DISubprogram(name: "elapsed", scope: !1875, file: !1875, line: 85, type: !7002, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !11851)
!11851 = !{!11852, !11853, !11854}
!11852 = !DILocalVariable(name: "val1", scope: !11850, file: !1875, line: 87, type: !132)
!11853 = !DILocalVariable(name: "ctrl", scope: !11850, file: !1875, line: 88, type: !132)
!11854 = !DILocalVariable(name: "val2", scope: !11850, file: !1875, line: 89, type: !132)
!11855 = !DILocation(line: 87, column: 27, scope: !11850)
!11856 = !DILocation(line: 0, scope: !11850)
!11857 = !DILocation(line: 88, column: 27, scope: !11850)
!11858 = !DILocation(line: 89, column: 27, scope: !11850)
!11859 = !DILocation(line: 105, column: 12, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11850, file: !1875, line: 105, column: 6)
!11861 = !DILocation(line: 106, column: 6, scope: !11860)
!11862 = !DILocation(line: 107, column: 16, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11860, file: !1875, line: 106, column: 24)
!11864 = !DILocation(line: 111, column: 18, scope: !11863)
!11865 = !DILocation(line: 112, column: 2, scope: !11863)
!11866 = !DILocation(line: 114, column: 20, scope: !11850)
!11867 = !DILocation(line: 114, column: 30, scope: !11850)
!11868 = !DILocation(line: 114, column: 28, scope: !11850)
!11869 = !DILocation(line: 114, column: 2, scope: !11850)
!11870 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1875, file: !1875, line: 154, type: !11871, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !11873)
!11871 = !DISubroutineType(types: !11872)
!11872 = !{null, !344, !166}
!11873 = !{!11874, !11875, !11876, !11877, !11878, !11879, !11880, !11885, !11886}
!11874 = !DILocalVariable(name: "ticks", arg: 1, scope: !11870, file: !1875, line: 154, type: !344)
!11875 = !DILocalVariable(name: "idle", arg: 2, scope: !11870, file: !1875, line: 154, type: !166)
!11876 = !DILocalVariable(name: "delay", scope: !11870, file: !1875, line: 169, type: !132)
!11877 = !DILocalVariable(name: "val1", scope: !11870, file: !1875, line: 170, type: !132)
!11878 = !DILocalVariable(name: "val2", scope: !11870, file: !1875, line: 170, type: !132)
!11879 = !DILocalVariable(name: "last_load_", scope: !11870, file: !1875, line: 171, type: !132)
!11880 = !DILocalVariable(name: "key", scope: !11870, file: !1875, line: 176, type: !11881)
!11881 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !11882)
!11882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !11883)
!11883 = !{!11884}
!11884 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11882, file: !472, line: 33, baseType: !103, size: 32)
!11885 = !DILocalVariable(name: "pending", scope: !11870, file: !1875, line: 178, type: !132)
!11886 = !DILocalVariable(name: "unannounced", scope: !11870, file: !1875, line: 185, type: !132)
!11887 = !DILocation(line: 0, scope: !11870)
!11888 = !DILocation(line: 162, column: 49, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11870, file: !1875, line: 162, column: 6)
!11890 = !DILocation(line: 163, column: 17, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11889, file: !1875, line: 162, column: 78)
!11892 = !DILocation(line: 164, column: 13, scope: !11891)
!11893 = !DILocation(line: 165, column: 3, scope: !11891)
!11894 = !DILocation(line: 171, column: 24, scope: !11870)
!11895 = !DILocation(line: 173, column: 10, scope: !11870)
!11896 = !DILocation(line: 174, column: 10, scope: !11870)
!11897 = !DILocalVariable(name: "l", arg: 1, scope: !11898, file: !472, line: 136, type: !11901)
!11898 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !11899, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !11902)
!11899 = !DISubroutineType(types: !11900)
!11900 = !{!11881, !11901}
!11901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!11902 = !{!11897, !11903}
!11903 = !DILocalVariable(name: "k", scope: !11898, file: !472, line: 139, type: !11881)
!11904 = !DILocation(line: 0, scope: !11898, inlinedAt: !11905)
!11905 = distinct !DILocation(line: 176, column: 25, scope: !11870)
!11906 = !DILocation(line: 55, column: 2, scope: !11907, inlinedAt: !11911)
!11907 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5901, file: !5901, line: 42, type: !5902, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !11908)
!11908 = !{!11909, !11910}
!11909 = !DILocalVariable(name: "key", scope: !11907, file: !5901, line: 44, type: !32)
!11910 = !DILocalVariable(name: "tmp", scope: !11907, file: !5901, line: 53, type: !32)
!11911 = distinct !DILocation(line: 145, column: 10, scope: !11898, inlinedAt: !11905)
!11912 = !{i64 2279198}
!11913 = !DILocation(line: 0, scope: !11907, inlinedAt: !11911)
!11914 = !DILocation(line: 178, column: 21, scope: !11870)
!11915 = !DILocation(line: 180, column: 18, scope: !11870)
!11916 = !DILocation(line: 182, column: 14, scope: !11870)
!11917 = !DILocation(line: 183, column: 15, scope: !11870)
!11918 = !DILocation(line: 185, column: 39, scope: !11870)
!11919 = !DILocation(line: 185, column: 37, scope: !11870)
!11920 = !DILocation(line: 187, column: 27, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11870, file: !1875, line: 187, column: 6)
!11922 = !DILocation(line: 187, column: 6, scope: !11870)
!11923 = !DILocation(line: 202, column: 27, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11921, file: !1875, line: 195, column: 9)
!11925 = !DILocation(line: 202, column: 48, scope: !11924)
!11926 = !DILocation(line: 203, column: 9, scope: !11924)
!11927 = !DILocation(line: 204, column: 11, scope: !11924)
!11928 = !DILocation(line: 205, column: 13, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11924, file: !1875, line: 205, column: 7)
!11930 = !DILocation(line: 205, column: 7, scope: !11924)
!11931 = !DILocation(line: 0, scope: !11921)
!11932 = !DILocation(line: 212, column: 18, scope: !11870)
!11933 = !DILocation(line: 214, column: 28, scope: !11870)
!11934 = !DILocation(line: 214, column: 16, scope: !11870)
!11935 = !DILocation(line: 215, column: 15, scope: !11870)
!11936 = !DILocation(line: 227, column: 11, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11870, file: !1875, line: 227, column: 6)
!11938 = !DILocation(line: 227, column: 6, scope: !11870)
!11939 = !DILocation(line: 228, column: 15, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11937, file: !1875, line: 227, column: 19)
!11941 = !DILocation(line: 228, column: 38, scope: !11940)
!11942 = !DILocation(line: 228, column: 24, scope: !11940)
!11943 = !DILocation(line: 229, column: 2, scope: !11940)
!11944 = !DILocation(line: 230, column: 24, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11937, file: !1875, line: 229, column: 9)
!11946 = !DILocation(line: 230, column: 15, scope: !11945)
!11947 = !DILocation(line: 0, scope: !11937)
!11948 = !DILocalVariable(name: "key", arg: 2, scope: !11949, file: !472, line: 190, type: !11881)
!11949 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !11950, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !11952)
!11950 = !DISubroutineType(types: !11951)
!11951 = !{null, !11901, !11881}
!11952 = !{!11953, !11948}
!11953 = !DILocalVariable(name: "l", arg: 1, scope: !11949, file: !472, line: 189, type: !11901)
!11954 = !DILocation(line: 0, scope: !11949, inlinedAt: !11955)
!11955 = distinct !DILocation(line: 232, column: 2, scope: !11870)
!11956 = !DILocalVariable(name: "key", arg: 1, scope: !11957, file: !5901, line: 84, type: !32)
!11957 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5901, file: !5901, line: 84, type: !5912, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !11958)
!11958 = !{!11956}
!11959 = !DILocation(line: 0, scope: !11957, inlinedAt: !11960)
!11960 = distinct !DILocation(line: 215, column: 2, scope: !11949, inlinedAt: !11955)
!11961 = !DILocation(line: 95, column: 2, scope: !11957, inlinedAt: !11960)
!11962 = !{i64 2280015}
!11963 = !DILocation(line: 234, column: 1, scope: !11870)
!11964 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1875, file: !1875, line: 236, type: !7002, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !11965)
!11965 = !{!11966, !11967}
!11966 = !DILocalVariable(name: "key", scope: !11964, file: !1875, line: 242, type: !11881)
!11967 = !DILocalVariable(name: "cyc", scope: !11964, file: !1875, line: 243, type: !132)
!11968 = !DILocation(line: 0, scope: !11898, inlinedAt: !11969)
!11969 = distinct !DILocation(line: 242, column: 25, scope: !11964)
!11970 = !DILocation(line: 55, column: 2, scope: !11907, inlinedAt: !11971)
!11971 = distinct !DILocation(line: 145, column: 10, scope: !11898, inlinedAt: !11969)
!11972 = !DILocation(line: 0, scope: !11907, inlinedAt: !11971)
!11973 = !DILocation(line: 0, scope: !11964)
!11974 = !DILocation(line: 243, column: 17, scope: !11964)
!11975 = !DILocation(line: 243, column: 29, scope: !11964)
!11976 = !DILocation(line: 243, column: 27, scope: !11964)
!11977 = !DILocation(line: 243, column: 43, scope: !11964)
!11978 = !DILocation(line: 243, column: 41, scope: !11964)
!11979 = !DILocation(line: 0, scope: !11949, inlinedAt: !11980)
!11980 = distinct !DILocation(line: 245, column: 2, scope: !11964)
!11981 = !DILocation(line: 0, scope: !11957, inlinedAt: !11982)
!11982 = distinct !DILocation(line: 215, column: 2, scope: !11949, inlinedAt: !11980)
!11983 = !DILocation(line: 95, column: 2, scope: !11957, inlinedAt: !11982)
!11984 = !DILocation(line: 246, column: 13, scope: !11964)
!11985 = !DILocation(line: 246, column: 2, scope: !11964)
!11986 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1875, file: !1875, line: 249, type: !7002, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !11987)
!11987 = !{!11988, !11989}
!11988 = !DILocalVariable(name: "key", scope: !11986, file: !1875, line: 251, type: !11881)
!11989 = !DILocalVariable(name: "ret", scope: !11986, file: !1875, line: 252, type: !132)
!11990 = !DILocation(line: 0, scope: !11898, inlinedAt: !11991)
!11991 = distinct !DILocation(line: 251, column: 25, scope: !11986)
!11992 = !DILocation(line: 55, column: 2, scope: !11907, inlinedAt: !11993)
!11993 = distinct !DILocation(line: 145, column: 10, scope: !11898, inlinedAt: !11991)
!11994 = !DILocation(line: 0, scope: !11907, inlinedAt: !11993)
!11995 = !DILocation(line: 0, scope: !11986)
!11996 = !DILocation(line: 252, column: 17, scope: !11986)
!11997 = !DILocation(line: 252, column: 29, scope: !11986)
!11998 = !DILocation(line: 252, column: 27, scope: !11986)
!11999 = !DILocation(line: 0, scope: !11949, inlinedAt: !12000)
!12000 = distinct !DILocation(line: 254, column: 2, scope: !11986)
!12001 = !DILocation(line: 0, scope: !11957, inlinedAt: !12002)
!12002 = distinct !DILocation(line: 215, column: 2, scope: !11949, inlinedAt: !12000)
!12003 = !DILocation(line: 95, column: 2, scope: !11957, inlinedAt: !12002)
!12004 = !DILocation(line: 255, column: 2, scope: !11986)
!12005 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1875, file: !1875, line: 258, type: !3328, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !473)
!12006 = !DILocation(line: 260, column: 6, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12005, file: !1875, line: 260, column: 6)
!12008 = !DILocation(line: 260, column: 16, scope: !12007)
!12009 = !DILocation(line: 260, column: 6, scope: !12005)
!12010 = !DILocation(line: 261, column: 17, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12007, file: !1875, line: 260, column: 34)
!12012 = !DILocation(line: 262, column: 2, scope: !12011)
!12013 = !DILocation(line: 263, column: 1, scope: !12005)
!12014 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1875, file: !1875, line: 265, type: !3328, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !473)
!12015 = !DILocation(line: 267, column: 16, scope: !12014)
!12016 = !DILocation(line: 268, column: 1, scope: !12014)
!12017 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12018, file: !12018, line: 9, type: !12019, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3156, retainedNodes: !12042)
!12018 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12019 = !DISubroutineType(types: !12020)
!12020 = !{!103, !12021, !163, !12041}
!12021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12022, size: 32)
!12022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12023)
!12023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1678, line: 60, size: 64, elements: !12024)
!12024 = !{!12025, !12040}
!12025 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12023, file: !1678, line: 69, baseType: !12026, size: 32)
!12026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12027, size: 32)
!12027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12028)
!12028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1678, line: 50, size: 64, elements: !12029)
!12029 = !{!12030, !12038, !12039}
!12030 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12028, file: !1678, line: 52, baseType: !12031, size: 32)
!12031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12032, size: 32)
!12032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12033)
!12033 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1689, line: 37, baseType: !12034)
!12034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1689, line: 32, size: 64, elements: !12035)
!12035 = !{!12036, !12037}
!12036 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12034, file: !1689, line: 34, baseType: !132, size: 32)
!12037 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12034, file: !1689, line: 36, baseType: !132, size: 32, offset: 32)
!12038 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12028, file: !1678, line: 54, baseType: !163, size: 8, offset: 32)
!12039 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12028, file: !1678, line: 56, baseType: !163, size: 8, offset: 40)
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12023, file: !1678, line: 71, baseType: !163, size: 8, offset: 32)
!12041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12026, size: 32)
!12042 = !{!12043, !12044, !12045}
!12043 = !DILocalVariable(name: "config", arg: 1, scope: !12017, file: !12018, line: 9, type: !12021)
!12044 = !DILocalVariable(name: "id", arg: 2, scope: !12017, file: !12018, line: 9, type: !163)
!12045 = !DILocalVariable(name: "state", arg: 3, scope: !12017, file: !12018, line: 10, type: !12041)
!12046 = !DILocation(line: 0, scope: !12017)
!12047 = !DILocation(line: 12, column: 20, scope: !12017)
!12048 = !DILocation(line: 13, column: 27, scope: !12017)
!12049 = !DILocation(line: 13, column: 42, scope: !12017)
!12050 = !DILocation(line: 13, column: 19, scope: !12017)
!12051 = !DILocation(line: 13, column: 16, scope: !12017)
!12052 = !DILocation(line: 13, column: 2, scope: !12017)
!12053 = distinct !{!12053, !12052, !12054}
!12054 = !DILocation(line: 19, column: 2, scope: !12017)
!12055 = !DILocation(line: 14, column: 23, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12057, file: !12018, line: 14, column: 7)
!12057 = distinct !DILexicalBlock(scope: !12017, file: !12018, line: 13, column: 54)
!12058 = !DILocation(line: 14, column: 10, scope: !12056)
!12059 = !DILocation(line: 18, column: 11, scope: !12057)
!12060 = !DILocation(line: 14, column: 7, scope: !12057)
!12061 = !DILocation(line: 22, column: 1, scope: !12017)
!12062 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1992, file: !1992, line: 193, type: !12063, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !12072)
!12063 = !DISubroutineType(types: !12064)
!12064 = !{!103, !12065, !163, !22}
!12065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12066, size: 32)
!12066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12067)
!12067 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1689, line: 37, baseType: !12068)
!12068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1689, line: 32, size: 64, elements: !12069)
!12069 = !{!12070, !12071}
!12070 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12068, file: !1689, line: 34, baseType: !132, size: 32)
!12071 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12068, file: !1689, line: 36, baseType: !132, size: 32, offset: 32)
!12072 = !{!12073, !12074, !12075, !12076, !12077, !12078, !12079, !12080, !12082}
!12073 = !DILocalVariable(name: "pins", arg: 1, scope: !12062, file: !1992, line: 193, type: !12065)
!12074 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12062, file: !1992, line: 193, type: !163)
!12075 = !DILocalVariable(name: "reg", arg: 3, scope: !12062, file: !1992, line: 194, type: !22)
!12076 = !DILocalVariable(name: "pin", scope: !12062, file: !1992, line: 196, type: !132)
!12077 = !DILocalVariable(name: "mux", scope: !12062, file: !1992, line: 196, type: !132)
!12078 = !DILocalVariable(name: "pin_cgf", scope: !12062, file: !1992, line: 197, type: !132)
!12079 = !DILocalVariable(name: "ret", scope: !12062, file: !1992, line: 198, type: !103)
!12080 = !DILocalVariable(name: "i", scope: !12081, file: !1992, line: 209, type: !163)
!12081 = distinct !DILexicalBlock(scope: !12062, file: !1992, line: 209, column: 2)
!12082 = !DILocalVariable(name: "gpio_out", scope: !12083, file: !1992, line: 239, type: !132)
!12083 = distinct !DILexicalBlock(scope: !12084, file: !1992, line: 238, column: 55)
!12084 = distinct !DILexicalBlock(scope: !12085, file: !1992, line: 238, column: 14)
!12085 = distinct !DILexicalBlock(scope: !12086, file: !1992, line: 236, column: 14)
!12086 = distinct !DILexicalBlock(scope: !12087, file: !1992, line: 234, column: 7)
!12087 = distinct !DILexicalBlock(scope: !12088, file: !1992, line: 209, column: 41)
!12088 = distinct !DILexicalBlock(scope: !12081, file: !1992, line: 209, column: 2)
!12089 = !DILocation(line: 0, scope: !12062)
!12090 = !DILocation(line: 0, scope: !12081)
!12091 = !DILocation(line: 209, column: 25, scope: !12088)
!12092 = !DILocation(line: 209, column: 2, scope: !12081)
!12093 = distinct !{!12093, !12092, !12094}
!12094 = !DILocation(line: 259, column: 2, scope: !12081)
!12095 = !DILocation(line: 210, column: 17, scope: !12087)
!12096 = !DILocation(line: 234, column: 7, scope: !12086)
!12097 = !DILocation(line: 234, column: 33, scope: !12086)
!12098 = !DILocation(line: 234, column: 7, scope: !12087)
!12099 = !DILocation(line: 235, column: 22, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12086, file: !1992, line: 234, column: 49)
!12101 = !DILocation(line: 235, column: 29, scope: !12100)
!12102 = !DILocation(line: 236, column: 3, scope: !12100)
!12103 = !DILocation(line: 236, column: 14, scope: !12086)
!12104 = !DILocation(line: 239, column: 32, scope: !12083)
!12105 = !DILocation(line: 0, scope: !12083)
!12106 = !DILocation(line: 241, column: 8, scope: !12083)
!12107 = !DILocation(line: 246, column: 3, scope: !12083)
!12108 = !DILocation(line: 252, column: 9, scope: !12087)
!12109 = !DILocation(line: 255, column: 9, scope: !12087)
!12110 = !DILocation(line: 256, column: 11, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12087, file: !1992, line: 256, column: 7)
!12112 = !DILocation(line: 209, column: 37, scope: !12088)
!12113 = !DILocation(line: 256, column: 7, scope: !12087)
!12114 = !DILocation(line: 262, column: 1, scope: !12062)
!12115 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1992, file: !1992, line: 176, type: !12116, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !12118)
!12116 = !DISubroutineType(types: !12117)
!12117 = !{!103, !132, !132, !132}
!12118 = !{!12119, !12120, !12121, !12122}
!12119 = !DILocalVariable(name: "pin", arg: 1, scope: !12115, file: !1992, line: 176, type: !132)
!12120 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12115, file: !1992, line: 176, type: !132)
!12121 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12115, file: !1992, line: 176, type: !132)
!12122 = !DILocalVariable(name: "port_device", scope: !12115, file: !1992, line: 178, type: !1922)
!12123 = !DILocation(line: 0, scope: !12115)
!12124 = !DILocation(line: 180, column: 22, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12115, file: !1992, line: 180, column: 6)
!12126 = !DILocation(line: 180, column: 6, scope: !12115)
!12127 = !DILocation(line: 180, column: 6, scope: !12125)
!12128 = !DILocation(line: 184, column: 16, scope: !12115)
!12129 = !DILocation(line: 186, column: 19, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12115, file: !1992, line: 186, column: 6)
!12131 = !DILocation(line: 186, column: 28, scope: !12130)
!12132 = !DILocation(line: 186, column: 33, scope: !12130)
!12133 = !DILocation(line: 186, column: 6, scope: !12115)
!12134 = !DILocation(line: 190, column: 43, scope: !12115)
!12135 = !DILocation(line: 190, column: 9, scope: !12115)
!12136 = !DILocation(line: 190, column: 2, scope: !12115)
!12137 = !DILocation(line: 191, column: 1, scope: !12115)
!12138 = distinct !DISubprogram(name: "device_is_ready", scope: !6762, file: !6762, line: 47, type: !12139, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !12141)
!12139 = !DISubroutineType(types: !12140)
!12140 = !{!166, !1922}
!12141 = !{!12142}
!12142 = !DILocalVariable(name: "dev", arg: 1, scope: !12138, file: !6762, line: 47, type: !1922)
!12143 = !DILocation(line: 0, scope: !12138)
!12144 = !DILocation(line: 55, column: 2, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12138, file: !6762, line: 55, column: 2)
!12146 = !{i64 2149513207}
!12147 = !DILocation(line: 56, column: 9, scope: !12138)
!12148 = !DILocation(line: 56, column: 2, scope: !12138)
!12149 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !12139, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !12150)
!12150 = !{!12151}
!12151 = !DILocalVariable(name: "dev", arg: 1, scope: !12149, file: !152, line: 730, type: !1922)
!12152 = !DILocation(line: 0, scope: !12149)
!12153 = !DILocation(line: 732, column: 9, scope: !12149)
!12154 = !DILocation(line: 732, column: 2, scope: !12149)
!12155 = distinct !DISubprogram(name: "SystemInit", scope: !2044, file: !2044, line: 167, type: !3328, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !473)
!12156 = !DILocation(line: 182, column: 1, scope: !12155)
!12157 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2044, file: !2044, line: 220, type: !3328, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12158)
!12158 = !{!12159, !12160, !12161, !12162, !12163}
!12159 = !DILocalVariable(name: "tmp", scope: !12157, file: !2044, line: 222, type: !132)
!12160 = !DILocalVariable(name: "pllvco", scope: !12157, file: !2044, line: 222, type: !132)
!12161 = !DILocalVariable(name: "pllp", scope: !12157, file: !2044, line: 222, type: !132)
!12162 = !DILocalVariable(name: "pllsource", scope: !12157, file: !2044, line: 222, type: !132)
!12163 = !DILocalVariable(name: "pllm", scope: !12157, file: !2044, line: 222, type: !132)
!12164 = !DILocation(line: 0, scope: !12157)
!12165 = !DILocation(line: 225, column: 14, scope: !12157)
!12166 = !DILocation(line: 225, column: 19, scope: !12157)
!12167 = !DILocation(line: 227, column: 3, scope: !12157)
!12168 = !DILocation(line: 240, column: 25, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12157, file: !2044, line: 228, column: 3)
!12170 = !DILocation(line: 241, column: 19, scope: !12169)
!12171 = !DILocation(line: 241, column: 27, scope: !12169)
!12172 = !DILocation(line: 0, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12169, file: !2044, line: 243, column: 11)
!12174 = !DILocation(line: 254, column: 22, scope: !12169)
!12175 = !DILocation(line: 254, column: 62, scope: !12169)
!12176 = !DILocation(line: 255, column: 31, scope: !12169)
!12177 = !DILocation(line: 256, column: 7, scope: !12169)
!12178 = !DILocation(line: 0, scope: !12169)
!12179 = !DILocation(line: 263, column: 30, scope: !12157)
!12180 = !DILocation(line: 263, column: 52, scope: !12157)
!12181 = !DILocation(line: 263, column: 9, scope: !12157)
!12182 = !DILocation(line: 265, column: 19, scope: !12157)
!12183 = !DILocation(line: 266, column: 1, scope: !12157)
!12184 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !12185, file: !12185, line: 87, type: !12186, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !12225)
!12185 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12186 = !DISubroutineType(types: !12187)
!12187 = !{!12188, !12189}
!12188 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3162, line: 44, baseType: !3161)
!12189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12190, size: 32)
!12190 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !12191, line: 172, baseType: !12192)
!12191 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12191, line: 121, size: 736, elements: !12193)
!12193 = !{!12194, !12195, !12204, !12212, !12213, !12214, !12215, !12216, !12217, !12218, !12219, !12220, !12221, !12222, !12223, !12224}
!12194 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !12192, file: !12191, line: 123, baseType: !132, size: 32)
!12195 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !12192, file: !12191, line: 126, baseType: !12196, size: 160, offset: 32)
!12196 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !12191, line: 97, baseType: !12197)
!12197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12191, line: 79, size: 160, elements: !12198)
!12198 = !{!12199, !12200, !12201, !12202, !12203}
!12199 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !12197, file: !12191, line: 81, baseType: !132, size: 32)
!12200 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !12197, file: !12191, line: 84, baseType: !132, size: 32, offset: 32)
!12201 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !12197, file: !12191, line: 87, baseType: !132, size: 32, offset: 64)
!12202 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !12197, file: !12191, line: 90, baseType: !132, size: 32, offset: 96)
!12203 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !12197, file: !12191, line: 94, baseType: !132, size: 32, offset: 128)
!12204 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !12192, file: !12191, line: 129, baseType: !12205, size: 128, offset: 192)
!12205 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !12191, line: 116, baseType: !12206)
!12206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12191, line: 102, size: 128, elements: !12207)
!12207 = !{!12208, !12209, !12210, !12211}
!12208 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !12206, file: !12191, line: 104, baseType: !132, size: 32)
!12209 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !12206, file: !12191, line: 107, baseType: !132, size: 32, offset: 32)
!12210 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !12206, file: !12191, line: 110, baseType: !132, size: 32, offset: 64)
!12211 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !12206, file: !12191, line: 113, baseType: !132, size: 32, offset: 96)
!12212 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !12192, file: !12191, line: 132, baseType: !132, size: 32, offset: 320)
!12213 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !12192, file: !12191, line: 136, baseType: !132, size: 32, offset: 352)
!12214 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !12192, file: !12191, line: 140, baseType: !132, size: 32, offset: 384)
!12215 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !12192, file: !12191, line: 143, baseType: !132, size: 32, offset: 416)
!12216 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !12192, file: !12191, line: 146, baseType: !132, size: 32, offset: 448)
!12217 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !12192, file: !12191, line: 149, baseType: !132, size: 32, offset: 480)
!12218 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !12192, file: !12191, line: 152, baseType: !132, size: 32, offset: 512)
!12219 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !12192, file: !12191, line: 155, baseType: !132, size: 32, offset: 544)
!12220 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !12192, file: !12191, line: 158, baseType: !132, size: 32, offset: 576)
!12221 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !12192, file: !12191, line: 161, baseType: !132, size: 32, offset: 608)
!12222 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !12192, file: !12191, line: 164, baseType: !132, size: 32, offset: 640)
!12223 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !12192, file: !12191, line: 167, baseType: !132, size: 32, offset: 672)
!12224 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !12192, file: !12191, line: 170, baseType: !163, size: 8, offset: 704)
!12225 = !{!12226, !12227, !12228, !12229, !12230, !12231, !12232, !12233, !12234, !12235, !12236}
!12226 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12184, file: !12185, line: 87, type: !12189)
!12227 = !DILocalVariable(name: "tickstart", scope: !12184, file: !12185, line: 89, type: !132)
!12228 = !DILocalVariable(name: "tmpreg1", scope: !12184, file: !12185, line: 90, type: !132)
!12229 = !DILocalVariable(name: "plli2sp", scope: !12184, file: !12185, line: 91, type: !132)
!12230 = !DILocalVariable(name: "plli2sq", scope: !12184, file: !12185, line: 92, type: !132)
!12231 = !DILocalVariable(name: "plli2sr", scope: !12184, file: !12185, line: 93, type: !132)
!12232 = !DILocalVariable(name: "pllsaip", scope: !12184, file: !12185, line: 94, type: !132)
!12233 = !DILocalVariable(name: "pllsaiq", scope: !12184, file: !12185, line: 95, type: !132)
!12234 = !DILocalVariable(name: "plli2sused", scope: !12184, file: !12185, line: 96, type: !132)
!12235 = !DILocalVariable(name: "pllsaiused", scope: !12184, file: !12185, line: 97, type: !132)
!12236 = !DILocalVariable(name: "tmpreg", scope: !12237, file: !12185, line: 184, type: !131)
!12237 = distinct !DILexicalBlock(scope: !12238, file: !12185, line: 184, column: 5)
!12238 = distinct !DILexicalBlock(scope: !12239, file: !12185, line: 179, column: 3)
!12239 = distinct !DILexicalBlock(scope: !12184, file: !12185, line: 178, column: 6)
!12240 = !DILocation(line: 0, scope: !12184)
!12241 = !DILocation(line: 103, column: 23, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12184, file: !12185, line: 103, column: 6)
!12243 = !DILocation(line: 103, column: 45, scope: !12242)
!12244 = !DILocation(line: 103, column: 71, scope: !12242)
!12245 = !DILocation(line: 103, column: 6, scope: !12184)
!12246 = !DILocation(line: 109, column: 5, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12242, file: !12185, line: 104, column: 3)
!12248 = !DILocation(line: 111, column: 23, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12247, file: !12185, line: 111, column: 8)
!12250 = !DILocation(line: 111, column: 45, scope: !12249)
!12251 = !DILocation(line: 111, column: 8, scope: !12247)
!12252 = !DILocation(line: 119, column: 23, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12184, file: !12185, line: 119, column: 6)
!12254 = !DILocation(line: 119, column: 45, scope: !12253)
!12255 = !DILocation(line: 119, column: 71, scope: !12253)
!12256 = !DILocation(line: 119, column: 6, scope: !12184)
!12257 = !DILocation(line: 125, column: 5, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12253, file: !12185, line: 120, column: 3)
!12259 = !DILocation(line: 127, column: 23, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12258, file: !12185, line: 127, column: 8)
!12261 = !DILocation(line: 127, column: 45, scope: !12260)
!12262 = !DILocation(line: 127, column: 8, scope: !12258)
!12263 = !DILocation(line: 135, column: 23, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12184, file: !12185, line: 135, column: 6)
!12265 = !DILocation(line: 135, column: 45, scope: !12264)
!12266 = !DILocation(line: 135, column: 67, scope: !12264)
!12267 = !DILocation(line: 135, column: 6, scope: !12184)
!12268 = !DILocation(line: 141, column: 5, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12264, file: !12185, line: 136, column: 3)
!12270 = !DILocation(line: 143, column: 23, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12269, file: !12185, line: 143, column: 8)
!12272 = !DILocation(line: 143, column: 42, scope: !12271)
!12273 = !DILocation(line: 143, column: 8, scope: !12269)
!12274 = !DILocation(line: 148, column: 42, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12269, file: !12185, line: 148, column: 8)
!12276 = !DILocation(line: 148, column: 8, scope: !12269)
!12277 = !DILocation(line: 156, column: 23, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12184, file: !12185, line: 156, column: 6)
!12279 = !DILocation(line: 156, column: 45, scope: !12278)
!12280 = !DILocation(line: 156, column: 67, scope: !12278)
!12281 = !DILocation(line: 156, column: 6, scope: !12184)
!12282 = !DILocation(line: 162, column: 5, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12278, file: !12185, line: 157, column: 3)
!12284 = !DILocation(line: 165, column: 23, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12283, file: !12185, line: 165, column: 8)
!12286 = !DILocation(line: 165, column: 42, scope: !12285)
!12287 = !DILocation(line: 165, column: 8, scope: !12283)
!12288 = !DILocation(line: 170, column: 42, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12283, file: !12185, line: 170, column: 8)
!12290 = !DILocation(line: 170, column: 8, scope: !12283)
!12291 = !DILocation(line: 178, column: 23, scope: !12239)
!12292 = !DILocation(line: 178, column: 45, scope: !12239)
!12293 = !DILocation(line: 178, column: 66, scope: !12239)
!12294 = !DILocation(line: 178, column: 6, scope: !12184)
!12295 = !DILocation(line: 184, column: 5, scope: !12237)
!12296 = !DILocation(line: 184, column: 5, scope: !12238)
!12297 = !DILocation(line: 187, column: 13, scope: !12238)
!12298 = !DILocation(line: 190, column: 17, scope: !12238)
!12299 = !DILocation(line: 192, column: 5, scope: !12238)
!12300 = !DILocation(line: 192, column: 17, scope: !12238)
!12301 = !DILocation(line: 192, column: 20, scope: !12238)
!12302 = !DILocation(line: 192, column: 34, scope: !12238)
!12303 = !DILocation(line: 194, column: 11, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !12185, line: 194, column: 10)
!12305 = distinct !DILexicalBlock(scope: !12238, file: !12185, line: 193, column: 5)
!12306 = !DILocation(line: 194, column: 25, scope: !12304)
!12307 = !DILocation(line: 194, column: 39, scope: !12304)
!12308 = !DILocation(line: 194, column: 10, scope: !12305)
!12309 = distinct !{!12309, !12299, !12310}
!12310 = !DILocation(line: 198, column: 5, scope: !12238)
!12311 = !DILocation(line: 200, column: 21, scope: !12238)
!12312 = !DILocation(line: 200, column: 26, scope: !12238)
!12313 = !DILocation(line: 201, column: 17, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12238, file: !12185, line: 201, column: 8)
!12315 = !DILocation(line: 201, column: 33, scope: !12314)
!12316 = !DILocation(line: 201, column: 66, scope: !12314)
!12317 = !DILocation(line: 201, column: 84, scope: !12314)
!12318 = !DILocation(line: 201, column: 47, scope: !12314)
!12319 = !DILocation(line: 201, column: 8, scope: !12238)
!12320 = !DILocation(line: 204, column: 23, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12314, file: !12185, line: 202, column: 5)
!12322 = !DILocation(line: 204, column: 28, scope: !12321)
!12323 = !DILocation(line: 206, column: 7, scope: !12321)
!12324 = !DILocation(line: 207, column: 7, scope: !12321)
!12325 = !DILocation(line: 209, column: 17, scope: !12321)
!12326 = !DILocation(line: 212, column: 10, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12321, file: !12185, line: 212, column: 10)
!12328 = !DILocation(line: 212, column: 10, scope: !12321)
!12329 = !DILocation(line: 215, column: 21, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12327, file: !12185, line: 213, column: 7)
!12331 = !DILocation(line: 218, column: 9, scope: !12330)
!12332 = !DILocation(line: 218, column: 15, scope: !12330)
!12333 = !DILocation(line: 218, column: 51, scope: !12330)
!12334 = !DILocation(line: 220, column: 15, scope: !12335)
!12335 = distinct !DILexicalBlock(scope: !12336, file: !12185, line: 220, column: 14)
!12336 = distinct !DILexicalBlock(scope: !12330, file: !12185, line: 219, column: 9)
!12337 = !DILocation(line: 220, column: 29, scope: !12335)
!12338 = !DILocation(line: 220, column: 43, scope: !12335)
!12339 = !DILocation(line: 220, column: 14, scope: !12336)
!12340 = distinct !{!12340, !12331, !12341}
!12341 = !DILocation(line: 224, column: 9, scope: !12330)
!12342 = !DILocation(line: 227, column: 5, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12238, file: !12185, line: 227, column: 5)
!12344 = !DILocation(line: 232, column: 23, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12184, file: !12185, line: 232, column: 6)
!12346 = !DILocation(line: 228, column: 3, scope: !12238)
!12347 = !DILocation(line: 232, column: 45, scope: !12345)
!12348 = !DILocation(line: 232, column: 66, scope: !12345)
!12349 = !DILocation(line: 232, column: 6, scope: !12184)
!12350 = !DILocation(line: 235, column: 5, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12345, file: !12185, line: 233, column: 3)
!12352 = !DILocation(line: 240, column: 23, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12184, file: !12185, line: 240, column: 6)
!12354 = !DILocation(line: 236, column: 3, scope: !12351)
!12355 = !DILocation(line: 240, column: 45, scope: !12353)
!12356 = !DILocation(line: 240, column: 70, scope: !12353)
!12357 = !DILocation(line: 240, column: 6, scope: !12184)
!12358 = !DILocation(line: 246, column: 5, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12353, file: !12185, line: 241, column: 3)
!12360 = !DILocation(line: 251, column: 23, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12184, file: !12185, line: 251, column: 6)
!12362 = !DILocation(line: 247, column: 3, scope: !12359)
!12363 = !DILocation(line: 251, column: 45, scope: !12361)
!12364 = !DILocation(line: 251, column: 66, scope: !12361)
!12365 = !DILocation(line: 251, column: 6, scope: !12184)
!12366 = !DILocation(line: 257, column: 5, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12361, file: !12185, line: 252, column: 3)
!12368 = !DILocation(line: 262, column: 23, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12184, file: !12185, line: 262, column: 6)
!12370 = !DILocation(line: 258, column: 3, scope: !12367)
!12371 = !DILocation(line: 262, column: 45, scope: !12369)
!12372 = !DILocation(line: 262, column: 68, scope: !12369)
!12373 = !DILocation(line: 262, column: 6, scope: !12184)
!12374 = !DILocation(line: 268, column: 5, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12369, file: !12185, line: 263, column: 3)
!12376 = !DILocation(line: 271, column: 23, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12375, file: !12185, line: 271, column: 8)
!12378 = !DILocation(line: 271, column: 43, scope: !12377)
!12379 = !DILocation(line: 271, column: 8, scope: !12375)
!12380 = !DILocation(line: 279, column: 23, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12184, file: !12185, line: 279, column: 6)
!12382 = !DILocation(line: 279, column: 45, scope: !12381)
!12383 = !DILocation(line: 279, column: 67, scope: !12381)
!12384 = !DILocation(line: 279, column: 6, scope: !12184)
!12385 = !DILocation(line: 285, column: 5, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12381, file: !12185, line: 280, column: 3)
!12387 = !DILocation(line: 290, column: 23, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12184, file: !12185, line: 290, column: 6)
!12389 = !DILocation(line: 286, column: 3, scope: !12386)
!12390 = !DILocation(line: 290, column: 45, scope: !12388)
!12391 = !DILocation(line: 290, column: 70, scope: !12388)
!12392 = !DILocation(line: 290, column: 6, scope: !12184)
!12393 = !DILocation(line: 296, column: 5, scope: !12394)
!12394 = distinct !DILexicalBlock(scope: !12388, file: !12185, line: 291, column: 3)
!12395 = !DILocation(line: 298, column: 23, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12394, file: !12185, line: 298, column: 8)
!12397 = !DILocation(line: 298, column: 43, scope: !12396)
!12398 = !DILocation(line: 298, column: 8, scope: !12394)
!12399 = !DILocation(line: 308, column: 44, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12184, file: !12185, line: 308, column: 6)
!12401 = !DILocation(line: 308, column: 18, scope: !12400)
!12402 = !DILocation(line: 308, column: 25, scope: !12400)
!12403 = !DILocation(line: 308, column: 65, scope: !12400)
!12404 = !DILocation(line: 308, column: 6, scope: !12184)
!12405 = !DILocation(line: 311, column: 5, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12400, file: !12185, line: 309, column: 3)
!12407 = !DILocation(line: 313, column: 17, scope: !12406)
!12408 = !DILocation(line: 315, column: 5, scope: !12406)
!12409 = !DILocation(line: 315, column: 11, scope: !12406)
!12410 = !DILocation(line: 317, column: 11, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12412, file: !12185, line: 317, column: 10)
!12412 = distinct !DILexicalBlock(scope: !12406, file: !12185, line: 316, column: 5)
!12413 = !DILocation(line: 317, column: 25, scope: !12411)
!12414 = !DILocation(line: 317, column: 39, scope: !12411)
!12415 = !DILocation(line: 317, column: 10, scope: !12412)
!12416 = distinct !{!12416, !12408, !12417}
!12417 = !DILocation(line: 322, column: 5, scope: !12406)
!12418 = !DILocation(line: 329, column: 27, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12406, file: !12185, line: 329, column: 8)
!12420 = !DILocation(line: 329, column: 49, scope: !12419)
!12421 = !DILocation(line: 329, column: 75, scope: !12419)
!12422 = !DILocation(line: 329, column: 102, scope: !12419)
!12423 = !DILocation(line: 329, column: 121, scope: !12419)
!12424 = !DILocation(line: 329, column: 143, scope: !12419)
!12425 = !DILocation(line: 329, column: 176, scope: !12419)
!12426 = !DILocation(line: 330, column: 49, scope: !12419)
!12427 = !DILocation(line: 330, column: 75, scope: !12419)
!12428 = !DILocation(line: 330, column: 102, scope: !12419)
!12429 = !DILocation(line: 330, column: 121, scope: !12419)
!12430 = !DILocation(line: 330, column: 143, scope: !12419)
!12431 = !DILocation(line: 329, column: 8, scope: !12406)
!12432 = !DILocation(line: 336, column: 26, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12419, file: !12185, line: 331, column: 5)
!12434 = !DILocation(line: 336, column: 100, scope: !12433)
!12435 = !DILocation(line: 337, column: 24, scope: !12433)
!12436 = !DILocation(line: 337, column: 61, scope: !12433)
!12437 = !DILocation(line: 341, column: 7, scope: !12433)
!12438 = !DILocation(line: 345, column: 27, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12406, file: !12185, line: 345, column: 8)
!12440 = !DILocation(line: 342, column: 5, scope: !12433)
!12441 = !DILocation(line: 345, column: 49, scope: !12439)
!12442 = !DILocation(line: 345, column: 71, scope: !12439)
!12443 = !DILocation(line: 345, column: 94, scope: !12439)
!12444 = !DILocation(line: 345, column: 113, scope: !12439)
!12445 = !DILocation(line: 345, column: 132, scope: !12439)
!12446 = !DILocation(line: 345, column: 162, scope: !12439)
!12447 = !DILocation(line: 346, column: 49, scope: !12439)
!12448 = !DILocation(line: 346, column: 71, scope: !12439)
!12449 = !DILocation(line: 346, column: 94, scope: !12439)
!12450 = !DILocation(line: 346, column: 113, scope: !12439)
!12451 = !DILocation(line: 346, column: 132, scope: !12439)
!12452 = !DILocation(line: 345, column: 8, scope: !12406)
!12453 = !DILocation(line: 354, column: 26, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12439, file: !12185, line: 347, column: 5)
!12455 = !DILocation(line: 354, column: 100, scope: !12454)
!12456 = !DILocation(line: 355, column: 24, scope: !12454)
!12457 = !DILocation(line: 355, column: 61, scope: !12454)
!12458 = !DILocation(line: 360, column: 7, scope: !12454)
!12459 = !DILocation(line: 363, column: 7, scope: !12454)
!12460 = !DILocation(line: 367, column: 26, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12406, file: !12185, line: 367, column: 8)
!12462 = !DILocation(line: 364, column: 5, scope: !12454)
!12463 = !DILocation(line: 367, column: 48, scope: !12461)
!12464 = !DILocation(line: 367, column: 73, scope: !12461)
!12465 = !DILocation(line: 367, column: 99, scope: !12461)
!12466 = !DILocation(line: 367, column: 118, scope: !12461)
!12467 = !DILocation(line: 367, column: 138, scope: !12461)
!12468 = !DILocation(line: 367, column: 8, scope: !12406)
!12469 = !DILocation(line: 372, column: 26, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12461, file: !12185, line: 368, column: 5)
!12471 = !DILocation(line: 373, column: 24, scope: !12470)
!12472 = !DILocation(line: 373, column: 61, scope: !12470)
!12473 = !DILocation(line: 377, column: 7, scope: !12470)
!12474 = !DILocation(line: 381, column: 24, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12406, file: !12185, line: 381, column: 8)
!12476 = !DILocation(line: 378, column: 5, scope: !12470)
!12477 = !DILocation(line: 381, column: 45, scope: !12475)
!12478 = !DILocation(line: 381, column: 69, scope: !12475)
!12479 = !DILocation(line: 381, column: 8, scope: !12406)
!12480 = !DILocation(line: 390, column: 7, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12475, file: !12185, line: 382, column: 5)
!12482 = !DILocation(line: 391, column: 5, scope: !12481)
!12483 = !DILocation(line: 394, column: 5, scope: !12406)
!12484 = !DILocation(line: 396, column: 17, scope: !12406)
!12485 = !DILocation(line: 398, column: 5, scope: !12406)
!12486 = !DILocation(line: 398, column: 11, scope: !12406)
!12487 = !DILocation(line: 398, column: 51, scope: !12406)
!12488 = !DILocation(line: 400, column: 11, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12490, file: !12185, line: 400, column: 10)
!12490 = distinct !DILexicalBlock(scope: !12406, file: !12185, line: 399, column: 5)
!12491 = !DILocation(line: 400, column: 25, scope: !12489)
!12492 = !DILocation(line: 400, column: 39, scope: !12489)
!12493 = !DILocation(line: 400, column: 10, scope: !12490)
!12494 = distinct !{!12494, !12485, !12495}
!12495 = !DILocation(line: 405, column: 5, scope: !12406)
!12496 = !DILocation(line: 411, column: 17, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12184, file: !12185, line: 411, column: 6)
!12498 = !DILocation(line: 411, column: 6, scope: !12184)
!12499 = !DILocation(line: 414, column: 5, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12497, file: !12185, line: 412, column: 3)
!12501 = !DILocation(line: 416, column: 17, scope: !12500)
!12502 = !DILocation(line: 418, column: 5, scope: !12500)
!12503 = !DILocation(line: 418, column: 11, scope: !12500)
!12504 = !DILocation(line: 420, column: 11, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12506, file: !12185, line: 420, column: 10)
!12506 = distinct !DILexicalBlock(scope: !12500, file: !12185, line: 419, column: 5)
!12507 = !DILocation(line: 420, column: 25, scope: !12505)
!12508 = !DILocation(line: 420, column: 39, scope: !12505)
!12509 = !DILocation(line: 420, column: 10, scope: !12506)
!12510 = distinct !{!12510, !12502, !12511}
!12511 = !DILocation(line: 425, column: 5, scope: !12500)
!12512 = !DILocation(line: 432, column: 27, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12500, file: !12185, line: 432, column: 8)
!12514 = !DILocation(line: 432, column: 49, scope: !12513)
!12515 = !DILocation(line: 432, column: 71, scope: !12513)
!12516 = !DILocation(line: 432, column: 94, scope: !12513)
!12517 = !DILocation(line: 432, column: 113, scope: !12513)
!12518 = !DILocation(line: 432, column: 132, scope: !12513)
!12519 = !DILocation(line: 432, column: 162, scope: !12513)
!12520 = !DILocation(line: 433, column: 49, scope: !12513)
!12521 = !DILocation(line: 433, column: 71, scope: !12513)
!12522 = !DILocation(line: 433, column: 94, scope: !12513)
!12523 = !DILocation(line: 433, column: 113, scope: !12513)
!12524 = !DILocation(line: 433, column: 132, scope: !12513)
!12525 = !DILocation(line: 432, column: 8, scope: !12500)
!12526 = !DILocation(line: 441, column: 26, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12513, file: !12185, line: 434, column: 5)
!12528 = !DILocation(line: 441, column: 100, scope: !12527)
!12529 = !DILocation(line: 445, column: 7, scope: !12527)
!12530 = !DILocation(line: 448, column: 7, scope: !12527)
!12531 = !DILocation(line: 453, column: 26, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12500, file: !12185, line: 453, column: 8)
!12533 = !DILocation(line: 449, column: 5, scope: !12527)
!12534 = !DILocation(line: 453, column: 48, scope: !12532)
!12535 = !DILocation(line: 453, column: 71, scope: !12532)
!12536 = !DILocation(line: 453, column: 95, scope: !12532)
!12537 = !DILocation(line: 453, column: 114, scope: !12532)
!12538 = !DILocation(line: 453, column: 134, scope: !12532)
!12539 = !DILocation(line: 453, column: 8, scope: !12500)
!12540 = !DILocation(line: 458, column: 24, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12532, file: !12185, line: 454, column: 5)
!12542 = !DILocation(line: 458, column: 61, scope: !12541)
!12543 = !DILocation(line: 462, column: 7, scope: !12541)
!12544 = !DILocation(line: 463, column: 5, scope: !12541)
!12545 = !DILocation(line: 466, column: 5, scope: !12500)
!12546 = !DILocation(line: 468, column: 17, scope: !12500)
!12547 = !DILocation(line: 470, column: 5, scope: !12500)
!12548 = !DILocation(line: 470, column: 11, scope: !12500)
!12549 = !DILocation(line: 470, column: 39, scope: !12500)
!12550 = !DILocation(line: 472, column: 11, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12552, file: !12185, line: 472, column: 10)
!12552 = distinct !DILexicalBlock(scope: !12500, file: !12185, line: 471, column: 5)
!12553 = !DILocation(line: 472, column: 25, scope: !12551)
!12554 = !DILocation(line: 472, column: 39, scope: !12551)
!12555 = !DILocation(line: 472, column: 10, scope: !12552)
!12556 = distinct !{!12556, !12547, !12557}
!12557 = !DILocation(line: 477, column: 5, scope: !12500)
!12558 = !DILocation(line: 480, column: 1, scope: !12184)
!12559 = !DISubprogram(name: "HAL_GetTick", scope: !12560, file: !12560, line: 234, type: !7002, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!12560 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12561 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !12185, file: !12185, line: 489, type: !12562, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !12564)
!12562 = !DISubroutineType(types: !12563)
!12563 = !{null, !12189}
!12564 = !{!12565, !12566}
!12565 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12561, file: !12185, line: 489, type: !12189)
!12566 = !DILocalVariable(name: "tempreg", scope: !12561, file: !12185, line: 491, type: !132)
!12567 = !DILocation(line: 0, scope: !12561)
!12568 = !DILocation(line: 494, column: 18, scope: !12561)
!12569 = !DILocation(line: 494, column: 39, scope: !12561)
!12570 = !DILocation(line: 502, column: 52, scope: !12561)
!12571 = !DILocation(line: 502, column: 63, scope: !12561)
!12572 = !DILocation(line: 502, column: 25, scope: !12561)
!12573 = !DILocation(line: 502, column: 33, scope: !12561)
!12574 = !DILocation(line: 503, column: 52, scope: !12561)
!12575 = !DILocation(line: 503, column: 89, scope: !12561)
!12576 = !DILocation(line: 503, column: 25, scope: !12561)
!12577 = !DILocation(line: 503, column: 33, scope: !12561)
!12578 = !DILocation(line: 504, column: 54, scope: !12561)
!12579 = !DILocation(line: 504, column: 128, scope: !12561)
!12580 = !DILocation(line: 504, column: 25, scope: !12561)
!12581 = !DILocation(line: 504, column: 33, scope: !12561)
!12582 = !DILocation(line: 505, column: 52, scope: !12561)
!12583 = !DILocation(line: 505, column: 89, scope: !12561)
!12584 = !DILocation(line: 505, column: 25, scope: !12561)
!12585 = !DILocation(line: 505, column: 33, scope: !12561)
!12586 = !DILocation(line: 506, column: 52, scope: !12561)
!12587 = !DILocation(line: 506, column: 89, scope: !12561)
!12588 = !DILocation(line: 506, column: 25, scope: !12561)
!12589 = !DILocation(line: 506, column: 33, scope: !12561)
!12590 = !DILocation(line: 508, column: 52, scope: !12561)
!12591 = !DILocation(line: 508, column: 63, scope: !12561)
!12592 = !DILocation(line: 508, column: 25, scope: !12561)
!12593 = !DILocation(line: 508, column: 33, scope: !12561)
!12594 = !DILocation(line: 509, column: 52, scope: !12561)
!12595 = !DILocation(line: 509, column: 89, scope: !12561)
!12596 = !DILocation(line: 509, column: 25, scope: !12561)
!12597 = !DILocation(line: 509, column: 33, scope: !12561)
!12598 = !DILocation(line: 510, column: 54, scope: !12561)
!12599 = !DILocation(line: 510, column: 128, scope: !12561)
!12600 = !DILocation(line: 510, column: 25, scope: !12561)
!12601 = !DILocation(line: 510, column: 33, scope: !12561)
!12602 = !DILocation(line: 511, column: 52, scope: !12561)
!12603 = !DILocation(line: 511, column: 89, scope: !12561)
!12604 = !DILocation(line: 511, column: 25, scope: !12561)
!12605 = !DILocation(line: 511, column: 33, scope: !12561)
!12606 = !DILocation(line: 513, column: 48, scope: !12561)
!12607 = !DILocation(line: 513, column: 56, scope: !12561)
!12608 = !DILocation(line: 513, column: 18, scope: !12561)
!12609 = !DILocation(line: 513, column: 29, scope: !12561)
!12610 = !DILocation(line: 514, column: 48, scope: !12561)
!12611 = !DILocation(line: 514, column: 82, scope: !12561)
!12612 = !DILocation(line: 514, column: 18, scope: !12561)
!12613 = !DILocation(line: 514, column: 29, scope: !12561)
!12614 = !DILocation(line: 517, column: 39, scope: !12561)
!12615 = !DILocation(line: 517, column: 18, scope: !12561)
!12616 = !DILocation(line: 517, column: 37, scope: !12561)
!12617 = !DILocation(line: 520, column: 39, scope: !12561)
!12618 = !DILocation(line: 520, column: 18, scope: !12561)
!12619 = !DILocation(line: 520, column: 37, scope: !12561)
!12620 = !DILocation(line: 523, column: 42, scope: !12561)
!12621 = !DILocation(line: 523, column: 18, scope: !12561)
!12622 = !DILocation(line: 523, column: 40, scope: !12561)
!12623 = !DILocation(line: 526, column: 42, scope: !12561)
!12624 = !DILocation(line: 526, column: 18, scope: !12561)
!12625 = !DILocation(line: 526, column: 40, scope: !12561)
!12626 = !DILocation(line: 529, column: 19, scope: !12561)
!12627 = !DILocation(line: 529, column: 24, scope: !12561)
!12628 = !DILocation(line: 530, column: 67, scope: !12561)
!12629 = !DILocation(line: 530, column: 72, scope: !12561)
!12630 = !DILocation(line: 530, column: 59, scope: !12561)
!12631 = !DILocation(line: 530, column: 18, scope: !12561)
!12632 = !DILocation(line: 530, column: 36, scope: !12561)
!12633 = !DILocation(line: 533, column: 38, scope: !12561)
!12634 = !DILocation(line: 533, column: 18, scope: !12561)
!12635 = !DILocation(line: 533, column: 36, scope: !12561)
!12636 = !DILocation(line: 536, column: 42, scope: !12561)
!12637 = !DILocation(line: 536, column: 18, scope: !12561)
!12638 = !DILocation(line: 536, column: 40, scope: !12561)
!12639 = !DILocation(line: 539, column: 40, scope: !12561)
!12640 = !DILocation(line: 539, column: 18, scope: !12561)
!12641 = !DILocation(line: 539, column: 38, scope: !12561)
!12642 = !DILocation(line: 542, column: 39, scope: !12561)
!12643 = !DILocation(line: 542, column: 18, scope: !12561)
!12644 = !DILocation(line: 542, column: 37, scope: !12561)
!12645 = !DILocation(line: 545, column: 40, scope: !12561)
!12646 = !DILocation(line: 545, column: 18, scope: !12561)
!12647 = !DILocation(line: 545, column: 38, scope: !12561)
!12648 = !DILocation(line: 548, column: 13, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12561, file: !12185, line: 548, column: 7)
!12650 = !DILocation(line: 548, column: 7, scope: !12561)
!12651 = !DILocation(line: 550, column: 20, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12649, file: !12185, line: 549, column: 3)
!12653 = !DILocation(line: 550, column: 37, scope: !12652)
!12654 = !DILocation(line: 556, column: 1, scope: !12561)
!12655 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !12185, file: !12185, line: 569, type: !7928, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !12656)
!12656 = !{!12657, !12658, !12659, !12660, !12661, !12662, !12663}
!12657 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !12655, file: !12185, line: 569, type: !132)
!12658 = !DILocalVariable(name: "tmpreg1", scope: !12655, file: !12185, line: 571, type: !132)
!12659 = !DILocalVariable(name: "frequency", scope: !12655, file: !12185, line: 573, type: !132)
!12660 = !DILocalVariable(name: "vcoinput", scope: !12655, file: !12185, line: 575, type: !132)
!12661 = !DILocalVariable(name: "saiclocksource", scope: !12655, file: !12185, line: 577, type: !132)
!12662 = !DILocalVariable(name: "srcclk", scope: !12655, file: !12185, line: 578, type: !132)
!12663 = !DILocalVariable(name: "vcooutput", scope: !12655, file: !12185, line: 580, type: !132)
!12664 = !DILocation(line: 0, scope: !12655)
!12665 = !DILocation(line: 581, column: 3, scope: !12655)
!12666 = !DILocation(line: 586, column: 29, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !12185, line: 585, column: 5)
!12668 = distinct !DILexicalBlock(scope: !12655, file: !12185, line: 582, column: 3)
!12669 = !DILocation(line: 588, column: 7, scope: !12667)
!12670 = !DILocation(line: 594, column: 20, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12672, file: !12185, line: 594, column: 14)
!12672 = distinct !DILexicalBlock(scope: !12673, file: !12185, line: 591, column: 9)
!12673 = distinct !DILexicalBlock(scope: !12667, file: !12185, line: 589, column: 7)
!12674 = !DILocation(line: 0, scope: !12671)
!12675 = !DILocation(line: 606, column: 27, scope: !12672)
!12676 = !DILocation(line: 606, column: 64, scope: !12672)
!12677 = !DILocation(line: 607, column: 42, scope: !12672)
!12678 = !DILocation(line: 607, column: 79, scope: !12672)
!12679 = !DILocation(line: 607, column: 33, scope: !12672)
!12680 = !DILocation(line: 607, column: 86, scope: !12672)
!12681 = !DILocation(line: 610, column: 29, scope: !12672)
!12682 = !DILocation(line: 610, column: 63, scope: !12672)
!12683 = !DILocation(line: 610, column: 70, scope: !12672)
!12684 = !DILocation(line: 611, column: 32, scope: !12672)
!12685 = !DILocation(line: 612, column: 11, scope: !12672)
!12686 = !DILocation(line: 619, column: 20, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12688, file: !12185, line: 619, column: 14)
!12688 = distinct !DILexicalBlock(scope: !12673, file: !12185, line: 616, column: 9)
!12689 = !DILocation(line: 0, scope: !12687)
!12690 = !DILocation(line: 632, column: 27, scope: !12688)
!12691 = !DILocation(line: 632, column: 64, scope: !12688)
!12692 = !DILocation(line: 633, column: 42, scope: !12688)
!12693 = !DILocation(line: 633, column: 79, scope: !12688)
!12694 = !DILocation(line: 633, column: 33, scope: !12688)
!12695 = !DILocation(line: 633, column: 86, scope: !12688)
!12696 = !DILocation(line: 636, column: 28, scope: !12688)
!12697 = !DILocation(line: 636, column: 36, scope: !12688)
!12698 = !DILocation(line: 636, column: 62, scope: !12688)
!12699 = !DILocation(line: 637, column: 32, scope: !12688)
!12700 = !DILocation(line: 638, column: 11, scope: !12688)
!12701 = !DILocation(line: 645, column: 20, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12703, file: !12185, line: 645, column: 14)
!12703 = distinct !DILexicalBlock(scope: !12673, file: !12185, line: 642, column: 9)
!12704 = !DILocation(line: 0, scope: !12702)
!12705 = !DILocation(line: 658, column: 27, scope: !12703)
!12706 = !DILocation(line: 658, column: 55, scope: !12703)
!12707 = !DILocation(line: 659, column: 42, scope: !12703)
!12708 = !DILocation(line: 659, column: 70, scope: !12703)
!12709 = !DILocation(line: 659, column: 33, scope: !12703)
!12710 = !DILocation(line: 659, column: 77, scope: !12703)
!12711 = !DILocation(line: 660, column: 11, scope: !12703)
!12712 = !DILocation(line: 665, column: 11, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12673, file: !12185, line: 663, column: 9)
!12714 = !DILocation(line: 669, column: 20, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12716, file: !12185, line: 669, column: 14)
!12716 = distinct !DILexicalBlock(scope: !12673, file: !12185, line: 668, column: 9)
!12717 = !DILocation(line: 691, column: 16, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12668, file: !12185, line: 689, column: 5)
!12719 = !DILocation(line: 692, column: 7, scope: !12718)
!12720 = !DILocation(line: 706, column: 20, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12722, file: !12185, line: 706, column: 14)
!12722 = distinct !DILexicalBlock(scope: !12723, file: !12185, line: 703, column: 9)
!12723 = distinct !DILexicalBlock(scope: !12718, file: !12185, line: 693, column: 7)
!12724 = !DILocation(line: 0, scope: !12721)
!12725 = !DILocation(line: 718, column: 53, scope: !12722)
!12726 = !DILocation(line: 718, column: 90, scope: !12722)
!12727 = !DILocation(line: 718, column: 43, scope: !12722)
!12728 = !DILocation(line: 720, column: 53, scope: !12722)
!12729 = !DILocation(line: 720, column: 90, scope: !12722)
!12730 = !DILocation(line: 720, column: 44, scope: !12722)
!12731 = !DILocation(line: 721, column: 11, scope: !12722)
!12732 = !DILocation(line: 728, column: 20, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12734, file: !12185, line: 728, column: 14)
!12734 = distinct !DILexicalBlock(scope: !12723, file: !12185, line: 725, column: 9)
!12735 = !DILocation(line: 0, scope: !12733)
!12736 = !DILocation(line: 740, column: 53, scope: !12734)
!12737 = !DILocation(line: 740, column: 81, scope: !12734)
!12738 = !DILocation(line: 740, column: 43, scope: !12734)
!12739 = !DILocation(line: 742, column: 53, scope: !12734)
!12740 = !DILocation(line: 742, column: 81, scope: !12734)
!12741 = !DILocation(line: 742, column: 44, scope: !12734)
!12742 = !DILocation(line: 743, column: 11, scope: !12734)
!12743 = !DILocation(line: 748, column: 20, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12745, file: !12185, line: 748, column: 14)
!12745 = distinct !DILexicalBlock(scope: !12723, file: !12185, line: 747, column: 9)
!12746 = !DILocation(line: 770, column: 16, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12668, file: !12185, line: 768, column: 5)
!12748 = !DILocation(line: 771, column: 7, scope: !12747)
!12749 = !DILocation(line: 785, column: 20, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12751, file: !12185, line: 785, column: 14)
!12751 = distinct !DILexicalBlock(scope: !12752, file: !12185, line: 782, column: 9)
!12752 = distinct !DILexicalBlock(scope: !12747, file: !12185, line: 772, column: 7)
!12753 = !DILocation(line: 0, scope: !12750)
!12754 = !DILocation(line: 797, column: 53, scope: !12751)
!12755 = !DILocation(line: 797, column: 90, scope: !12751)
!12756 = !DILocation(line: 797, column: 43, scope: !12751)
!12757 = !DILocation(line: 799, column: 53, scope: !12751)
!12758 = !DILocation(line: 799, column: 90, scope: !12751)
!12759 = !DILocation(line: 799, column: 44, scope: !12751)
!12760 = !DILocation(line: 800, column: 11, scope: !12751)
!12761 = !DILocation(line: 807, column: 20, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12763, file: !12185, line: 807, column: 14)
!12763 = distinct !DILexicalBlock(scope: !12752, file: !12185, line: 804, column: 9)
!12764 = !DILocation(line: 0, scope: !12762)
!12765 = !DILocation(line: 819, column: 53, scope: !12763)
!12766 = !DILocation(line: 819, column: 81, scope: !12763)
!12767 = !DILocation(line: 819, column: 43, scope: !12763)
!12768 = !DILocation(line: 821, column: 53, scope: !12763)
!12769 = !DILocation(line: 821, column: 81, scope: !12763)
!12770 = !DILocation(line: 821, column: 44, scope: !12763)
!12771 = !DILocation(line: 822, column: 11, scope: !12763)
!12772 = !DILocation(line: 827, column: 20, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12774, file: !12185, line: 827, column: 14)
!12774 = distinct !DILexicalBlock(scope: !12752, file: !12185, line: 826, column: 9)
!12775 = !DILocation(line: 847, column: 3, scope: !12655)
!12776 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !12185, file: !12185, line: 2766, type: !12777, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !12779)
!12777 = !DISubroutineType(types: !12778)
!12778 = !{null, !163}
!12779 = !{!12780}
!12780 = !DILocalVariable(name: "Mode", arg: 1, scope: !12776, file: !12185, line: 2766, type: !163)
!12781 = !DILocation(line: 0, scope: !12776)
!12782 = !DILocation(line: 2770, column: 11, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12776, file: !12185, line: 2770, column: 6)
!12784 = !DILocation(line: 0, scope: !12783)
!12785 = !DILocation(line: 2770, column: 6, scope: !12776)
!12786 = !DILocation(line: 2778, column: 1, scope: !12776)
!12787 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !12185, file: !12185, line: 2803, type: !12788, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !12791)
!12788 = !DISubroutineType(types: !12789)
!12789 = !{!12188, !12790}
!12790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12196, size: 32)
!12791 = !{!12792, !12793}
!12792 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !12787, file: !12185, line: 2803, type: !12790)
!12793 = !DILocalVariable(name: "tickstart", scope: !12787, file: !12185, line: 2805, type: !132)
!12794 = !DILocation(line: 0, scope: !12787)
!12795 = !DILocation(line: 2821, column: 3, scope: !12787)
!12796 = !DILocation(line: 2824, column: 15, scope: !12787)
!12797 = !DILocation(line: 2825, column: 3, scope: !12787)
!12798 = !DILocation(line: 2825, column: 9, scope: !12787)
!12799 = !DILocation(line: 2827, column: 9, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12801, file: !12185, line: 2827, column: 8)
!12801 = distinct !DILexicalBlock(scope: !12787, file: !12185, line: 2826, column: 3)
!12802 = !DILocation(line: 2827, column: 23, scope: !12800)
!12803 = !DILocation(line: 2827, column: 37, scope: !12800)
!12804 = !DILocation(line: 2827, column: 8, scope: !12801)
!12805 = distinct !{!12805, !12797, !12806}
!12806 = !DILocation(line: 2832, column: 3, scope: !12787)
!12807 = !DILocation(line: 2840, column: 3, scope: !12787)
!12808 = !DILocation(line: 2866, column: 3, scope: !12787)
!12809 = !DILocation(line: 2869, column: 15, scope: !12787)
!12810 = !DILocation(line: 2870, column: 3, scope: !12787)
!12811 = !DILocation(line: 2870, column: 9, scope: !12787)
!12812 = !DILocation(line: 2870, column: 48, scope: !12787)
!12813 = !DILocation(line: 2872, column: 9, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12815, file: !12185, line: 2872, column: 8)
!12815 = distinct !DILexicalBlock(scope: !12787, file: !12185, line: 2871, column: 3)
!12816 = !DILocation(line: 2872, column: 23, scope: !12814)
!12817 = !DILocation(line: 2872, column: 37, scope: !12814)
!12818 = !DILocation(line: 2872, column: 8, scope: !12815)
!12819 = distinct !{!12819, !12810, !12820}
!12820 = !DILocation(line: 2877, column: 3, scope: !12787)
!12821 = !DILocation(line: 2880, column: 1, scope: !12787)
!12822 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !12185, file: !12185, line: 2886, type: !12823, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !12825)
!12823 = !DISubroutineType(types: !12824)
!12824 = !{!12188}
!12825 = !{!12826}
!12826 = !DILocalVariable(name: "tickstart", scope: !12822, file: !12185, line: 2888, type: !132)
!12827 = !DILocation(line: 2891, column: 3, scope: !12822)
!12828 = !DILocation(line: 2894, column: 15, scope: !12822)
!12829 = !DILocation(line: 0, scope: !12822)
!12830 = !DILocation(line: 2895, column: 3, scope: !12822)
!12831 = !DILocation(line: 2895, column: 9, scope: !12822)
!12832 = !DILocation(line: 2895, column: 45, scope: !12822)
!12833 = !DILocation(line: 2897, column: 9, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12835, file: !12185, line: 2897, column: 8)
!12835 = distinct !DILexicalBlock(scope: !12822, file: !12185, line: 2896, column: 3)
!12836 = !DILocation(line: 2897, column: 23, scope: !12834)
!12837 = !DILocation(line: 2897, column: 36, scope: !12834)
!12838 = !DILocation(line: 2897, column: 8, scope: !12835)
!12839 = distinct !{!12839, !12830, !12840}
!12840 = !DILocation(line: 2902, column: 3, scope: !12822)
!12841 = !DILocation(line: 2905, column: 1, scope: !12822)
!12842 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !12185, file: !12185, line: 2916, type: !12843, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !12846)
!12843 = !DISubroutineType(types: !12844)
!12844 = !{!12188, !12845}
!12845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12205, size: 32)
!12846 = !{!12847, !12848}
!12847 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !12842, file: !12185, line: 2916, type: !12845)
!12848 = !DILocalVariable(name: "tickstart", scope: !12842, file: !12185, line: 2918, type: !132)
!12849 = !DILocation(line: 0, scope: !12842)
!12850 = !DILocation(line: 2934, column: 3, scope: !12842)
!12851 = !DILocation(line: 2937, column: 15, scope: !12842)
!12852 = !DILocation(line: 2938, column: 3, scope: !12842)
!12853 = !DILocation(line: 2938, column: 9, scope: !12842)
!12854 = !DILocation(line: 2940, column: 9, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12856, file: !12185, line: 2940, column: 8)
!12856 = distinct !DILexicalBlock(scope: !12842, file: !12185, line: 2939, column: 3)
!12857 = !DILocation(line: 2940, column: 23, scope: !12855)
!12858 = !DILocation(line: 2940, column: 37, scope: !12855)
!12859 = !DILocation(line: 2940, column: 8, scope: !12856)
!12860 = distinct !{!12860, !12852, !12861}
!12861 = !DILocation(line: 2945, column: 3, scope: !12842)
!12862 = !DILocation(line: 2953, column: 3, scope: !12842)
!12863 = !DILocation(line: 2970, column: 3, scope: !12842)
!12864 = !DILocation(line: 2973, column: 15, scope: !12842)
!12865 = !DILocation(line: 2974, column: 3, scope: !12842)
!12866 = !DILocation(line: 2974, column: 9, scope: !12842)
!12867 = !DILocation(line: 2974, column: 37, scope: !12842)
!12868 = !DILocation(line: 2976, column: 9, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12870, file: !12185, line: 2976, column: 8)
!12870 = distinct !DILexicalBlock(scope: !12842, file: !12185, line: 2975, column: 3)
!12871 = !DILocation(line: 2976, column: 23, scope: !12869)
!12872 = !DILocation(line: 2976, column: 37, scope: !12869)
!12873 = !DILocation(line: 2976, column: 8, scope: !12870)
!12874 = distinct !{!12874, !12865, !12875}
!12875 = !DILocation(line: 2981, column: 3, scope: !12842)
!12876 = !DILocation(line: 2984, column: 1, scope: !12842)
!12877 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !12185, file: !12185, line: 2990, type: !12823, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !12878)
!12878 = !{!12879}
!12879 = !DILocalVariable(name: "tickstart", scope: !12877, file: !12185, line: 2992, type: !132)
!12880 = !DILocation(line: 2995, column: 3, scope: !12877)
!12881 = !DILocation(line: 2998, column: 15, scope: !12877)
!12882 = !DILocation(line: 0, scope: !12877)
!12883 = !DILocation(line: 2999, column: 3, scope: !12877)
!12884 = !DILocation(line: 2999, column: 9, scope: !12877)
!12885 = !DILocation(line: 3001, column: 9, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12887, file: !12185, line: 3001, column: 8)
!12887 = distinct !DILexicalBlock(scope: !12877, file: !12185, line: 3000, column: 3)
!12888 = !DILocation(line: 3001, column: 23, scope: !12886)
!12889 = !DILocation(line: 3001, column: 36, scope: !12886)
!12890 = !DILocation(line: 3001, column: 8, scope: !12887)
!12891 = distinct !{!12891, !12883, !12892}
!12892 = !DILocation(line: 3006, column: 3, scope: !12877)
!12893 = !DILocation(line: 3009, column: 1, scope: !12877)
!12894 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12185, file: !12185, line: 3051, type: !7002, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !12895)
!12895 = !{!12896, !12897, !12898, !12899, !12900}
!12896 = !DILocalVariable(name: "pllm", scope: !12894, file: !12185, line: 3053, type: !132)
!12897 = !DILocalVariable(name: "pllvco", scope: !12894, file: !12185, line: 3054, type: !132)
!12898 = !DILocalVariable(name: "pllp", scope: !12894, file: !12185, line: 3055, type: !132)
!12899 = !DILocalVariable(name: "pllr", scope: !12894, file: !12185, line: 3056, type: !132)
!12900 = !DILocalVariable(name: "sysclockfreq", scope: !12894, file: !12185, line: 3057, type: !132)
!12901 = !DILocation(line: 0, scope: !12894)
!12902 = !DILocation(line: 3060, column: 16, scope: !12894)
!12903 = !DILocation(line: 3060, column: 3, scope: !12894)
!12904 = !DILocation(line: 3076, column: 19, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12906, file: !12185, line: 3073, column: 5)
!12906 = distinct !DILexicalBlock(scope: !12894, file: !12185, line: 3061, column: 3)
!12907 = !DILocation(line: 3076, column: 27, scope: !12905)
!12908 = !DILocation(line: 3077, column: 10, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12905, file: !12185, line: 3077, column: 10)
!12910 = !DILocation(line: 0, scope: !12909)
!12911 = !DILocation(line: 3087, column: 23, scope: !12905)
!12912 = !DILocation(line: 3087, column: 82, scope: !12905)
!12913 = !DILocation(line: 3089, column: 28, scope: !12905)
!12914 = !DILocation(line: 3090, column: 7, scope: !12905)
!12915 = !DILocation(line: 3096, column: 19, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12906, file: !12185, line: 3093, column: 5)
!12917 = !DILocation(line: 3096, column: 27, scope: !12916)
!12918 = !DILocation(line: 3097, column: 10, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12916, file: !12185, line: 3097, column: 10)
!12920 = !DILocation(line: 0, scope: !12919)
!12921 = !DILocation(line: 3107, column: 21, scope: !12916)
!12922 = !DILocation(line: 3107, column: 49, scope: !12916)
!12923 = !DILocation(line: 3109, column: 28, scope: !12916)
!12924 = !DILocation(line: 3110, column: 7, scope: !12916)
!12925 = !DILocation(line: 0, scope: !12906)
!12926 = !DILocation(line: 3118, column: 3, scope: !12894)
!12927 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12185, file: !12185, line: 3143, type: !12823, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !12928)
!12928 = !{!12929}
!12929 = !DILocalVariable(name: "tickstart", scope: !12927, file: !12185, line: 3145, type: !132)
!12930 = !DILocation(line: 3148, column: 15, scope: !12927)
!12931 = !DILocation(line: 0, scope: !12927)
!12932 = !DILocation(line: 3151, column: 3, scope: !12927)
!12933 = !DILocation(line: 3154, column: 3, scope: !12927)
!12934 = !DILocation(line: 3154, column: 10, scope: !12927)
!12935 = !DILocation(line: 3154, column: 43, scope: !12927)
!12936 = !DILocation(line: 3156, column: 10, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12938, file: !12185, line: 3156, column: 9)
!12938 = distinct !DILexicalBlock(scope: !12927, file: !12185, line: 3155, column: 3)
!12939 = !DILocation(line: 3156, column: 24, scope: !12937)
!12940 = !DILocation(line: 3156, column: 37, scope: !12937)
!12941 = !DILocation(line: 3156, column: 9, scope: !12938)
!12942 = distinct !{!12942, !12933, !12943}
!12943 = !DILocation(line: 3160, column: 3, scope: !12927)
!12944 = !DILocation(line: 3163, column: 3, scope: !12927)
!12945 = !DILocation(line: 3166, column: 15, scope: !12927)
!12946 = !DILocation(line: 3169, column: 3, scope: !12927)
!12947 = !DILocation(line: 3172, column: 3, scope: !12927)
!12948 = !DILocation(line: 3172, column: 10, scope: !12927)
!12949 = !DILocation(line: 3172, column: 44, scope: !12927)
!12950 = !DILocation(line: 3174, column: 24, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12952, file: !12185, line: 3174, column: 9)
!12952 = distinct !DILexicalBlock(scope: !12927, file: !12185, line: 3173, column: 3)
!12953 = !DILocation(line: 3174, column: 37, scope: !12951)
!12954 = !DILocation(line: 3174, column: 9, scope: !12952)
!12955 = distinct !{!12955, !12947, !12956}
!12956 = !DILocation(line: 3178, column: 3, scope: !12927)
!12957 = !DILocation(line: 3184, column: 3, scope: !12927)
!12958 = !DILocation(line: 3187, column: 3, scope: !12927)
!12959 = !DILocation(line: 3187, column: 10, scope: !12927)
!12960 = !DILocation(line: 3187, column: 43, scope: !12927)
!12961 = !DILocation(line: 3189, column: 24, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12963, file: !12185, line: 3189, column: 9)
!12963 = distinct !DILexicalBlock(scope: !12927, file: !12185, line: 3188, column: 3)
!12964 = !DILocation(line: 3189, column: 37, scope: !12962)
!12965 = !DILocation(line: 3189, column: 9, scope: !12963)
!12966 = distinct !{!12966, !12958, !12967}
!12967 = !DILocation(line: 3193, column: 3, scope: !12927)
!12968 = !DILocation(line: 3199, column: 3, scope: !12927)
!12969 = !DILocation(line: 3202, column: 3, scope: !12927)
!12970 = !DILocation(line: 3202, column: 10, scope: !12927)
!12971 = !DILocation(line: 3202, column: 43, scope: !12927)
!12972 = !DILocation(line: 3204, column: 24, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !12974, file: !12185, line: 3204, column: 9)
!12974 = distinct !DILexicalBlock(scope: !12927, file: !12185, line: 3203, column: 3)
!12975 = !DILocation(line: 3204, column: 37, scope: !12973)
!12976 = !DILocation(line: 3204, column: 9, scope: !12974)
!12977 = distinct !{!12977, !12969, !12978}
!12978 = !DILocation(line: 3208, column: 3, scope: !12927)
!12979 = !DILocation(line: 3215, column: 3, scope: !12927)
!12980 = !DILocation(line: 3218, column: 3, scope: !12927)
!12981 = !DILocation(line: 3218, column: 10, scope: !12927)
!12982 = !DILocation(line: 3218, column: 46, scope: !12927)
!12983 = !DILocation(line: 3220, column: 24, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12985, file: !12185, line: 3220, column: 9)
!12985 = distinct !DILexicalBlock(scope: !12927, file: !12185, line: 3219, column: 3)
!12986 = !DILocation(line: 3220, column: 37, scope: !12984)
!12987 = !DILocation(line: 3220, column: 9, scope: !12985)
!12988 = distinct !{!12988, !12980, !12989}
!12989 = !DILocation(line: 3224, column: 3, scope: !12927)
!12990 = !DILocation(line: 3232, column: 3, scope: !12927)
!12991 = !DILocation(line: 3235, column: 3, scope: !12927)
!12992 = !DILocation(line: 3235, column: 10, scope: !12927)
!12993 = !DILocation(line: 3235, column: 46, scope: !12927)
!12994 = !DILocation(line: 3237, column: 10, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12996, file: !12185, line: 3237, column: 9)
!12996 = distinct !DILexicalBlock(scope: !12927, file: !12185, line: 3236, column: 3)
!12997 = !DILocation(line: 3237, column: 24, scope: !12995)
!12998 = !DILocation(line: 3237, column: 37, scope: !12995)
!12999 = !DILocation(line: 3237, column: 9, scope: !12996)
!13000 = distinct !{!13000, !12991, !13001}
!13001 = !DILocation(line: 3241, column: 3, scope: !12927)
!13002 = !DILocation(line: 3247, column: 16, scope: !12927)
!13003 = !DILocation(line: 3257, column: 19, scope: !12927)
!13004 = !DILocation(line: 3270, column: 19, scope: !12927)
!13005 = !DILocation(line: 3274, column: 3, scope: !12927)
!13006 = !DILocation(line: 3277, column: 3, scope: !12927)
!13007 = !DILocation(line: 3281, column: 3, scope: !12927)
!13008 = !DILocation(line: 3285, column: 3, scope: !12927)
!13009 = !DILocation(line: 3288, column: 3, scope: !12927)
!13010 = !DILocation(line: 3292, column: 3, scope: !12927)
!13011 = !DILocation(line: 3296, column: 3, scope: !12927)
!13012 = !DILocation(line: 3299, column: 3, scope: !12927)
!13013 = !DILocation(line: 3302, column: 19, scope: !12927)
!13014 = !DILocation(line: 3305, column: 19, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !12927, file: !12185, line: 3305, column: 6)
!13016 = !DILocation(line: 3305, column: 6, scope: !13015)
!13017 = !DILocation(line: 3305, column: 31, scope: !13015)
!13018 = !DILocation(line: 0, scope: !13015)
!13019 = !DILocation(line: 3313, column: 1, scope: !12927)
!13020 = !DISubprogram(name: "HAL_InitTick", scope: !12560, file: !12560, line: 223, type: !13021, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!13021 = !DISubroutineType(types: !13022)
!13022 = !{!12188, !132}
!13023 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12185, file: !12185, line: 3333, type: !13024, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !13048)
!13024 = !DISubroutineType(types: !13025)
!13025 = !{!12188, !13026}
!13026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13027, size: 32)
!13027 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13028, line: 70, baseType: !13029)
!13028 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13029 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13028, line: 49, size: 416, elements: !13030)
!13030 = !{!13031, !13032, !13033, !13034, !13035, !13036, !13037}
!13031 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13029, file: !13028, line: 51, baseType: !132, size: 32)
!13032 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13029, file: !13028, line: 54, baseType: !132, size: 32, offset: 32)
!13033 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13029, file: !13028, line: 57, baseType: !132, size: 32, offset: 64)
!13034 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13029, file: !13028, line: 60, baseType: !132, size: 32, offset: 96)
!13035 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13029, file: !13028, line: 63, baseType: !132, size: 32, offset: 128)
!13036 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13029, file: !13028, line: 66, baseType: !132, size: 32, offset: 160)
!13037 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13029, file: !13028, line: 69, baseType: !13038, size: 224, offset: 192)
!13038 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12191, line: 73, baseType: !13039)
!13039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12191, line: 45, size: 224, elements: !13040)
!13040 = !{!13041, !13042, !13043, !13044, !13045, !13046, !13047}
!13041 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13039, file: !12191, line: 47, baseType: !132, size: 32)
!13042 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13039, file: !12191, line: 50, baseType: !132, size: 32, offset: 32)
!13043 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13039, file: !12191, line: 53, baseType: !132, size: 32, offset: 64)
!13044 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13039, file: !12191, line: 56, baseType: !132, size: 32, offset: 96)
!13045 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13039, file: !12191, line: 60, baseType: !132, size: 32, offset: 128)
!13046 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !13039, file: !12191, line: 63, baseType: !132, size: 32, offset: 160)
!13047 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !13039, file: !12191, line: 68, baseType: !132, size: 32, offset: 192)
!13048 = !{!13049, !13050, !13051, !13052, !13056}
!13049 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13023, file: !12185, line: 3333, type: !13026)
!13050 = !DILocalVariable(name: "tickstart", scope: !13023, file: !12185, line: 3335, type: !132)
!13051 = !DILocalVariable(name: "pll_config", scope: !13023, file: !12185, line: 3335, type: !132)
!13052 = !DILocalVariable(name: "pwrclkchanged", scope: !13053, file: !12185, line: 3517, type: !13055)
!13053 = distinct !DILexicalBlock(scope: !13054, file: !12185, line: 3516, column: 3)
!13054 = distinct !DILexicalBlock(scope: !13023, file: !12185, line: 3515, column: 6)
!13055 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !816, line: 188, baseType: !3168)
!13056 = !DILocalVariable(name: "tmpreg", scope: !13057, file: !12185, line: 3526, type: !131)
!13057 = distinct !DILexicalBlock(scope: !13058, file: !12185, line: 3526, column: 7)
!13058 = distinct !DILexicalBlock(scope: !13059, file: !12185, line: 3525, column: 5)
!13059 = distinct !DILexicalBlock(scope: !13053, file: !12185, line: 3524, column: 8)
!13060 = !DILocation(line: 0, scope: !13023)
!13061 = !DILocation(line: 3338, column: 24, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13023, file: !12185, line: 3338, column: 6)
!13063 = !DILocation(line: 3338, column: 6, scope: !13023)
!13064 = !DILocation(line: 3346, column: 27, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13023, file: !12185, line: 3346, column: 6)
!13066 = !DILocation(line: 3346, column: 43, scope: !13065)
!13067 = !DILocation(line: 3346, column: 69, scope: !13065)
!13068 = !DILocation(line: 3346, column: 6, scope: !13023)
!13069 = !DILocation(line: 3352, column: 9, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13071, file: !12185, line: 3352, column: 8)
!13071 = distinct !DILexicalBlock(scope: !13065, file: !12185, line: 3347, column: 3)
!13072 = !DILocation(line: 3352, column: 39, scope: !13070)
!13073 = !DILocation(line: 3352, column: 128, scope: !13070)
!13074 = !DILocation(line: 3353, column: 9, scope: !13070)
!13075 = !DILocation(line: 3353, column: 39, scope: !13070)
!13076 = !DILocation(line: 3353, column: 60, scope: !13070)
!13077 = !DILocation(line: 3353, column: 70, scope: !13070)
!13078 = !DILocation(line: 3353, column: 78, scope: !13070)
!13079 = !DILocation(line: 3353, column: 100, scope: !13070)
!13080 = !DILocation(line: 3353, column: 128, scope: !13070)
!13081 = !DILocation(line: 3354, column: 9, scope: !13070)
!13082 = !DILocation(line: 3354, column: 39, scope: !13070)
!13083 = !DILocation(line: 3354, column: 61, scope: !13070)
!13084 = !DILocation(line: 3354, column: 71, scope: !13070)
!13085 = !DILocation(line: 3354, column: 79, scope: !13070)
!13086 = !DILocation(line: 3354, column: 101, scope: !13070)
!13087 = !DILocation(line: 3352, column: 8, scope: !13071)
!13088 = !DILocation(line: 3360, column: 11, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13090, file: !12185, line: 3360, column: 10)
!13090 = distinct !DILexicalBlock(scope: !13070, file: !12185, line: 3359, column: 5)
!13091 = !DILocation(line: 3360, column: 57, scope: !13089)
!13092 = !DILocation(line: 3360, column: 80, scope: !13089)
!13093 = !DILocation(line: 3360, column: 89, scope: !13089)
!13094 = !DILocation(line: 3360, column: 10, scope: !13090)
!13095 = !DILocation(line: 3368, column: 7, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13097, file: !12185, line: 3368, column: 7)
!13097 = distinct !DILexicalBlock(scope: !13098, file: !12185, line: 3368, column: 7)
!13098 = distinct !DILexicalBlock(scope: !13070, file: !12185, line: 3366, column: 5)
!13099 = !DILocation(line: 3368, column: 7, scope: !13097)
!13100 = !DILocation(line: 3368, column: 7, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13096, file: !12185, line: 3368, column: 7)
!13102 = !DILocation(line: 3368, column: 7, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13104, file: !12185, line: 3368, column: 7)
!13104 = distinct !DILexicalBlock(scope: !13096, file: !12185, line: 3368, column: 7)
!13105 = !DILocation(line: 3368, column: 7, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13104, file: !12185, line: 3368, column: 7)
!13107 = !DILocation(line: 0, scope: !13096)
!13108 = !DILocation(line: 3371, column: 30, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13098, file: !12185, line: 3371, column: 10)
!13110 = !DILocation(line: 3371, column: 40, scope: !13109)
!13111 = !DILocation(line: 0, scope: !13109)
!13112 = !DILocation(line: 3371, column: 10, scope: !13098)
!13113 = !DILocation(line: 3377, column: 15, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13109, file: !12185, line: 3372, column: 7)
!13115 = !DILocation(line: 3377, column: 51, scope: !13114)
!13116 = !DILocation(line: 3377, column: 9, scope: !13114)
!13117 = !DILocation(line: 3379, column: 15, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13119, file: !12185, line: 3379, column: 14)
!13119 = distinct !DILexicalBlock(scope: !13114, file: !12185, line: 3378, column: 9)
!13120 = !DILocation(line: 3379, column: 29, scope: !13118)
!13121 = !DILocation(line: 3379, column: 43, scope: !13118)
!13122 = !DILocation(line: 3379, column: 14, scope: !13119)
!13123 = distinct !{!13123, !13116, !13124}
!13124 = !DILocation(line: 3383, column: 9, scope: !13114)
!13125 = !DILocation(line: 3391, column: 15, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13109, file: !12185, line: 3386, column: 7)
!13127 = !DILocation(line: 3391, column: 9, scope: !13126)
!13128 = !DILocation(line: 3393, column: 15, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13130, file: !12185, line: 3393, column: 14)
!13130 = distinct !DILexicalBlock(scope: !13126, file: !12185, line: 3392, column: 9)
!13131 = !DILocation(line: 3393, column: 29, scope: !13129)
!13132 = !DILocation(line: 3393, column: 43, scope: !13129)
!13133 = !DILocation(line: 3393, column: 14, scope: !13130)
!13134 = distinct !{!13134, !13127, !13135}
!13135 = !DILocation(line: 3397, column: 9, scope: !13126)
!13136 = !DILocation(line: 3402, column: 27, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13023, file: !12185, line: 3402, column: 6)
!13138 = !DILocation(line: 3402, column: 43, scope: !13137)
!13139 = !DILocation(line: 3402, column: 69, scope: !13137)
!13140 = !DILocation(line: 3402, column: 6, scope: !13023)
!13141 = !DILocation(line: 3410, column: 9, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13143, file: !12185, line: 3410, column: 8)
!13143 = distinct !DILexicalBlock(scope: !13137, file: !12185, line: 3403, column: 3)
!13144 = !DILocation(line: 3410, column: 39, scope: !13142)
!13145 = !DILocation(line: 3410, column: 128, scope: !13142)
!13146 = !DILocation(line: 3411, column: 9, scope: !13142)
!13147 = !DILocation(line: 3411, column: 39, scope: !13142)
!13148 = !DILocation(line: 3411, column: 60, scope: !13142)
!13149 = !DILocation(line: 3411, column: 70, scope: !13142)
!13150 = !DILocation(line: 3411, column: 78, scope: !13142)
!13151 = !DILocation(line: 3411, column: 100, scope: !13142)
!13152 = !DILocation(line: 3411, column: 128, scope: !13142)
!13153 = !DILocation(line: 3412, column: 9, scope: !13142)
!13154 = !DILocation(line: 3412, column: 39, scope: !13142)
!13155 = !DILocation(line: 3412, column: 61, scope: !13142)
!13156 = !DILocation(line: 3412, column: 71, scope: !13142)
!13157 = !DILocation(line: 3412, column: 79, scope: !13142)
!13158 = !DILocation(line: 3412, column: 101, scope: !13142)
!13159 = !DILocation(line: 3410, column: 8, scope: !13143)
!13160 = !DILocation(line: 3419, column: 11, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13162, file: !12185, line: 3419, column: 10)
!13162 = distinct !DILexicalBlock(scope: !13142, file: !12185, line: 3417, column: 5)
!13163 = !DILocation(line: 3419, column: 57, scope: !13161)
!13164 = !DILocation(line: 3419, column: 80, scope: !13161)
!13165 = !DILocation(line: 3419, column: 89, scope: !13161)
!13166 = !DILocation(line: 3419, column: 10, scope: !13162)
!13167 = !DILocation(line: 3433, column: 30, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13169, file: !12185, line: 3433, column: 10)
!13169 = distinct !DILexicalBlock(scope: !13142, file: !12185, line: 3431, column: 5)
!13170 = !DILocation(line: 3433, column: 39, scope: !13168)
!13171 = !DILocation(line: 3433, column: 10, scope: !13169)
!13172 = !DILocation(line: 3436, column: 9, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13168, file: !12185, line: 3434, column: 7)
!13174 = !DILocation(line: 3439, column: 21, scope: !13173)
!13175 = !DILocation(line: 3442, column: 9, scope: !13173)
!13176 = !DILocation(line: 3442, column: 15, scope: !13173)
!13177 = !DILocation(line: 3442, column: 51, scope: !13173)
!13178 = !DILocation(line: 3444, column: 15, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13180, file: !12185, line: 3444, column: 14)
!13180 = distinct !DILexicalBlock(scope: !13173, file: !12185, line: 3443, column: 9)
!13181 = !DILocation(line: 3444, column: 29, scope: !13179)
!13182 = !DILocation(line: 3444, column: 43, scope: !13179)
!13183 = !DILocation(line: 3444, column: 14, scope: !13180)
!13184 = distinct !{!13184, !13175, !13185}
!13185 = !DILocation(line: 3448, column: 9, scope: !13173)
!13186 = !DILocation(line: 3456, column: 9, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13168, file: !12185, line: 3454, column: 7)
!13188 = !DILocation(line: 3459, column: 21, scope: !13187)
!13189 = !DILocation(line: 3462, column: 9, scope: !13187)
!13190 = !DILocation(line: 3462, column: 15, scope: !13187)
!13191 = !DILocation(line: 3464, column: 15, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13193, file: !12185, line: 3464, column: 14)
!13193 = distinct !DILexicalBlock(scope: !13187, file: !12185, line: 3463, column: 9)
!13194 = !DILocation(line: 3464, column: 29, scope: !13192)
!13195 = !DILocation(line: 3464, column: 43, scope: !13192)
!13196 = !DILocation(line: 3464, column: 14, scope: !13193)
!13197 = distinct !{!13197, !13189, !13198}
!13198 = !DILocation(line: 3468, column: 9, scope: !13187)
!13199 = !DILocation(line: 0, scope: !13142)
!13200 = !DILocation(line: 3473, column: 27, scope: !13201)
!13201 = distinct !DILexicalBlock(scope: !13023, file: !12185, line: 3473, column: 6)
!13202 = !DILocation(line: 3473, column: 43, scope: !13201)
!13203 = !DILocation(line: 3473, column: 69, scope: !13201)
!13204 = !DILocation(line: 3473, column: 6, scope: !13023)
!13205 = !DILocation(line: 3479, column: 28, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !13207, file: !12185, line: 3479, column: 8)
!13207 = distinct !DILexicalBlock(scope: !13201, file: !12185, line: 3474, column: 3)
!13208 = !DILocation(line: 3479, column: 37, scope: !13206)
!13209 = !DILocation(line: 3479, column: 8, scope: !13207)
!13210 = !DILocation(line: 3482, column: 7, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13206, file: !12185, line: 3480, column: 5)
!13212 = !DILocation(line: 3485, column: 19, scope: !13211)
!13213 = !DILocation(line: 3488, column: 7, scope: !13211)
!13214 = !DILocation(line: 3488, column: 13, scope: !13211)
!13215 = !DILocation(line: 3488, column: 49, scope: !13211)
!13216 = !DILocation(line: 3490, column: 13, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13218, file: !12185, line: 3490, column: 12)
!13218 = distinct !DILexicalBlock(scope: !13211, file: !12185, line: 3489, column: 7)
!13219 = !DILocation(line: 3490, column: 27, scope: !13217)
!13220 = !DILocation(line: 3490, column: 41, scope: !13217)
!13221 = !DILocation(line: 3490, column: 12, scope: !13218)
!13222 = distinct !{!13222, !13213, !13223}
!13223 = !DILocation(line: 3494, column: 7, scope: !13211)
!13224 = !DILocation(line: 3499, column: 7, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13206, file: !12185, line: 3497, column: 5)
!13226 = !DILocation(line: 3502, column: 19, scope: !13225)
!13227 = !DILocation(line: 3505, column: 7, scope: !13225)
!13228 = !DILocation(line: 3505, column: 13, scope: !13225)
!13229 = !DILocation(line: 3507, column: 13, scope: !13230)
!13230 = distinct !DILexicalBlock(scope: !13231, file: !12185, line: 3507, column: 12)
!13231 = distinct !DILexicalBlock(scope: !13225, file: !12185, line: 3506, column: 7)
!13232 = !DILocation(line: 3507, column: 27, scope: !13230)
!13233 = !DILocation(line: 3507, column: 41, scope: !13230)
!13234 = !DILocation(line: 3507, column: 12, scope: !13231)
!13235 = distinct !{!13235, !13227, !13236}
!13236 = !DILocation(line: 3511, column: 7, scope: !13225)
!13237 = !DILocation(line: 3515, column: 27, scope: !13054)
!13238 = !DILocation(line: 3515, column: 43, scope: !13054)
!13239 = !DILocation(line: 3515, column: 69, scope: !13054)
!13240 = !DILocation(line: 3515, column: 6, scope: !13023)
!13241 = !DILocation(line: 0, scope: !13053)
!13242 = !DILocation(line: 3524, column: 8, scope: !13059)
!13243 = !DILocation(line: 3524, column: 8, scope: !13053)
!13244 = !DILocation(line: 3526, column: 7, scope: !13057)
!13245 = !DILocation(line: 3526, column: 7, scope: !13058)
!13246 = !DILocation(line: 3528, column: 5, scope: !13058)
!13247 = !DILocation(line: 3530, column: 8, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13053, file: !12185, line: 3530, column: 8)
!13249 = !DILocation(line: 3530, column: 8, scope: !13053)
!13250 = !DILocation(line: 3533, column: 7, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13248, file: !12185, line: 3531, column: 5)
!13252 = !DILocation(line: 3536, column: 19, scope: !13251)
!13253 = !DILocation(line: 3538, column: 7, scope: !13251)
!13254 = !DILocation(line: 3538, column: 13, scope: !13251)
!13255 = !DILocation(line: 3540, column: 13, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13257, file: !12185, line: 3540, column: 12)
!13257 = distinct !DILexicalBlock(scope: !13251, file: !12185, line: 3539, column: 7)
!13258 = !DILocation(line: 3540, column: 27, scope: !13256)
!13259 = !DILocation(line: 3540, column: 40, scope: !13256)
!13260 = !DILocation(line: 3540, column: 12, scope: !13257)
!13261 = distinct !{!13261, !13253, !13262}
!13262 = !DILocation(line: 3544, column: 7, scope: !13251)
!13263 = !DILocation(line: 3548, column: 5, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !13265, file: !12185, line: 3548, column: 5)
!13265 = distinct !DILexicalBlock(scope: !13053, file: !12185, line: 3548, column: 5)
!13266 = !DILocation(line: 3548, column: 5, scope: !13265)
!13267 = !DILocation(line: 3548, column: 5, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13264, file: !12185, line: 3548, column: 5)
!13269 = !DILocation(line: 3548, column: 5, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13271, file: !12185, line: 3548, column: 5)
!13271 = distinct !DILexicalBlock(scope: !13264, file: !12185, line: 3548, column: 5)
!13272 = !DILocation(line: 3548, column: 5, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13271, file: !12185, line: 3548, column: 5)
!13274 = !DILocation(line: 0, scope: !13264)
!13275 = !DILocation(line: 3550, column: 28, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13053, file: !12185, line: 3550, column: 8)
!13277 = !DILocation(line: 3550, column: 38, scope: !13276)
!13278 = !DILocation(line: 0, scope: !13276)
!13279 = !DILocation(line: 3550, column: 8, scope: !13053)
!13280 = !DILocation(line: 3556, column: 13, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13276, file: !12185, line: 3551, column: 5)
!13282 = !DILocation(line: 3556, column: 49, scope: !13281)
!13283 = !DILocation(line: 3556, column: 7, scope: !13281)
!13284 = !DILocation(line: 3558, column: 13, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13286, file: !12185, line: 3558, column: 12)
!13286 = distinct !DILexicalBlock(scope: !13281, file: !12185, line: 3557, column: 7)
!13287 = !DILocation(line: 3558, column: 27, scope: !13285)
!13288 = !DILocation(line: 3558, column: 41, scope: !13285)
!13289 = !DILocation(line: 3558, column: 12, scope: !13286)
!13290 = distinct !{!13290, !13283, !13291}
!13291 = !DILocation(line: 3562, column: 7, scope: !13281)
!13292 = !DILocation(line: 3570, column: 13, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13276, file: !12185, line: 3565, column: 5)
!13294 = !DILocation(line: 3570, column: 7, scope: !13293)
!13295 = !DILocation(line: 3572, column: 13, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13297, file: !12185, line: 3572, column: 12)
!13297 = distinct !DILexicalBlock(scope: !13293, file: !12185, line: 3571, column: 7)
!13298 = !DILocation(line: 3572, column: 27, scope: !13296)
!13299 = !DILocation(line: 3572, column: 41, scope: !13296)
!13300 = !DILocation(line: 3572, column: 12, scope: !13297)
!13301 = distinct !{!13301, !13294, !13302}
!13302 = !DILocation(line: 3576, column: 7, scope: !13293)
!13303 = !DILocation(line: 3580, column: 8, scope: !13053)
!13304 = !DILocation(line: 3582, column: 7, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13306, file: !12185, line: 3581, column: 5)
!13306 = distinct !DILexicalBlock(scope: !13053, file: !12185, line: 3580, column: 8)
!13307 = !DILocation(line: 3583, column: 5, scope: !13305)
!13308 = !DILocation(line: 3588, column: 31, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13023, file: !12185, line: 3588, column: 7)
!13310 = !DILocation(line: 3588, column: 41, scope: !13309)
!13311 = !DILocation(line: 3588, column: 7, scope: !13023)
!13312 = !DILocation(line: 3591, column: 8, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13314, file: !12185, line: 3591, column: 8)
!13314 = distinct !DILexicalBlock(scope: !13309, file: !12185, line: 3589, column: 3)
!13315 = !DILocation(line: 3591, column: 38, scope: !13313)
!13316 = !DILocation(line: 3591, column: 8, scope: !13314)
!13317 = !DILocation(line: 3593, column: 44, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13319, file: !12185, line: 3593, column: 10)
!13319 = distinct !DILexicalBlock(scope: !13313, file: !12185, line: 3592, column: 5)
!13320 = !DILocation(line: 0, scope: !13318)
!13321 = !DILocation(line: 3593, column: 10, scope: !13319)
!13322 = !DILocation(line: 3610, column: 15, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13318, file: !12185, line: 3594, column: 7)
!13324 = !DILocation(line: 3610, column: 9, scope: !13323)
!13325 = !DILocation(line: 3612, column: 15, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13327, file: !12185, line: 3612, column: 14)
!13327 = distinct !DILexicalBlock(scope: !13323, file: !12185, line: 3611, column: 9)
!13328 = !DILocation(line: 3612, column: 29, scope: !13326)
!13329 = !DILocation(line: 3612, column: 43, scope: !13326)
!13330 = !DILocation(line: 3612, column: 14, scope: !13327)
!13331 = distinct !{!13331, !13324, !13332}
!13332 = !DILocation(line: 3616, column: 9, scope: !13323)
!13333 = !DILocation(line: 3619, column: 9, scope: !13323)
!13334 = !DILocation(line: 3626, column: 9, scope: !13323)
!13335 = !DILocation(line: 3629, column: 21, scope: !13323)
!13336 = !DILocation(line: 3632, column: 9, scope: !13323)
!13337 = !DILocation(line: 3632, column: 15, scope: !13323)
!13338 = !DILocation(line: 3632, column: 51, scope: !13323)
!13339 = !DILocation(line: 3634, column: 15, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13341, file: !12185, line: 3634, column: 14)
!13341 = distinct !DILexicalBlock(scope: !13323, file: !12185, line: 3633, column: 9)
!13342 = !DILocation(line: 3634, column: 29, scope: !13340)
!13343 = !DILocation(line: 3634, column: 43, scope: !13340)
!13344 = !DILocation(line: 3634, column: 14, scope: !13341)
!13345 = distinct !{!13345, !13336, !13346}
!13346 = !DILocation(line: 3638, column: 9, scope: !13323)
!13347 = !DILocation(line: 3649, column: 15, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13318, file: !12185, line: 3641, column: 7)
!13349 = !DILocation(line: 3649, column: 9, scope: !13348)
!13350 = !DILocation(line: 3651, column: 15, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13352, file: !12185, line: 3651, column: 14)
!13352 = distinct !DILexicalBlock(scope: !13348, file: !12185, line: 3650, column: 9)
!13353 = !DILocation(line: 3651, column: 29, scope: !13351)
!13354 = !DILocation(line: 3651, column: 43, scope: !13351)
!13355 = !DILocation(line: 3651, column: 14, scope: !13352)
!13356 = distinct !{!13356, !13349, !13357}
!13357 = !DILocation(line: 3655, column: 9, scope: !13348)
!13358 = !DILocation(line: 3661, column: 44, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13360, file: !12185, line: 3661, column: 10)
!13360 = distinct !DILexicalBlock(scope: !13313, file: !12185, line: 3659, column: 5)
!13361 = !DILocation(line: 3661, column: 10, scope: !13360)
!13362 = !DILocation(line: 3668, column: 27, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13359, file: !12185, line: 3666, column: 7)
!13364 = !DILocation(line: 3671, column: 14, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13363, file: !12185, line: 3670, column: 13)
!13366 = !DILocation(line: 3671, column: 81, scope: !13365)
!13367 = !DILocation(line: 3671, column: 55, scope: !13365)
!13368 = !DILocation(line: 3671, column: 92, scope: !13365)
!13369 = !DILocation(line: 3672, column: 14, scope: !13365)
!13370 = !DILocation(line: 3672, column: 80, scope: !13365)
!13371 = !DILocation(line: 3672, column: 53, scope: !13365)
!13372 = !DILocation(line: 3672, column: 111, scope: !13365)
!13373 = !DILocation(line: 3673, column: 14, scope: !13365)
!13374 = !DILocation(line: 3673, column: 80, scope: !13365)
!13375 = !DILocation(line: 3673, column: 86, scope: !13365)
!13376 = !DILocation(line: 3673, column: 53, scope: !13365)
!13377 = !DILocation(line: 3673, column: 111, scope: !13365)
!13378 = !DILocation(line: 3674, column: 14, scope: !13365)
!13379 = !DILocation(line: 3674, column: 82, scope: !13365)
!13380 = !DILocation(line: 3674, column: 101, scope: !13365)
!13381 = !DILocation(line: 3674, column: 53, scope: !13365)
!13382 = !DILocation(line: 3674, column: 126, scope: !13365)
!13383 = !DILocation(line: 3675, column: 14, scope: !13365)
!13384 = !DILocation(line: 3675, column: 80, scope: !13365)
!13385 = !DILocation(line: 3675, column: 85, scope: !13365)
!13386 = !DILocation(line: 3675, column: 53, scope: !13365)
!13387 = !DILocation(line: 3675, column: 111, scope: !13365)
!13388 = !DILocation(line: 3676, column: 14, scope: !13365)
!13389 = !DILocation(line: 3676, column: 80, scope: !13365)
!13390 = !DILocation(line: 3676, column: 85, scope: !13365)
!13391 = !DILocation(line: 3676, column: 53, scope: !13365)
!13392 = !DILocation(line: 3670, column: 13, scope: !13363)
!13393 = !DILocation(line: 3691, column: 3, scope: !13023)
!13394 = !DILocation(line: 3692, column: 1, scope: !13023)
!13395 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12185, file: !12185, line: 3703, type: !13396, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !13398)
!13396 = !DISubroutineType(types: !13397)
!13397 = !{null, !13026}
!13398 = !{!13399}
!13399 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13395, file: !12185, line: 3703, type: !13026)
!13400 = !DILocation(line: 0, scope: !13395)
!13401 = !DILocation(line: 3706, column: 22, scope: !13395)
!13402 = !DILocation(line: 3706, column: 37, scope: !13395)
!13403 = !DILocation(line: 3709, column: 12, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13395, file: !12185, line: 3709, column: 6)
!13405 = !DILocation(line: 3709, column: 15, scope: !13404)
!13406 = !DILocation(line: 3709, column: 31, scope: !13404)
!13407 = !DILocation(line: 3709, column: 6, scope: !13395)
!13408 = !DILocation(line: 3711, column: 24, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13404, file: !12185, line: 3710, column: 3)
!13410 = !DILocation(line: 3711, column: 33, scope: !13409)
!13411 = !DILocation(line: 3712, column: 3, scope: !13409)
!13412 = !DILocation(line: 3713, column: 17, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13404, file: !12185, line: 3713, column: 11)
!13414 = !DILocation(line: 3713, column: 20, scope: !13413)
!13415 = !DILocation(line: 3713, column: 35, scope: !13413)
!13416 = !DILocation(line: 0, scope: !13413)
!13417 = !DILocation(line: 3713, column: 11, scope: !13404)
!13418 = !DILocation(line: 3715, column: 33, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13413, file: !12185, line: 3714, column: 3)
!13420 = !DILocation(line: 3716, column: 3, scope: !13419)
!13421 = !DILocation(line: 3719, column: 33, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13413, file: !12185, line: 3718, column: 3)
!13423 = !DILocation(line: 3723, column: 12, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13395, file: !12185, line: 3723, column: 6)
!13425 = !DILocation(line: 3723, column: 15, scope: !13424)
!13426 = !DILocation(line: 3729, column: 24, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13424, file: !12185, line: 3728, column: 3)
!13428 = !DILocation(line: 3729, column: 33, scope: !13427)
!13429 = !DILocation(line: 3732, column: 61, scope: !13395)
!13430 = !DILocation(line: 3732, column: 81, scope: !13395)
!13431 = !DILocation(line: 3732, column: 22, scope: !13395)
!13432 = !DILocation(line: 3732, column: 42, scope: !13395)
!13433 = !DILocation(line: 3735, column: 12, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13395, file: !12185, line: 3735, column: 6)
!13435 = !DILocation(line: 3735, column: 17, scope: !13434)
!13436 = !DILocation(line: 3735, column: 35, scope: !13434)
!13437 = !DILocation(line: 3735, column: 6, scope: !13395)
!13438 = !DILocation(line: 3737, column: 24, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13434, file: !12185, line: 3736, column: 3)
!13440 = !DILocation(line: 3737, column: 33, scope: !13439)
!13441 = !DILocation(line: 3738, column: 3, scope: !13439)
!13442 = !DILocation(line: 3739, column: 17, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13434, file: !12185, line: 3739, column: 11)
!13444 = !DILocation(line: 3739, column: 22, scope: !13443)
!13445 = !DILocation(line: 3739, column: 39, scope: !13443)
!13446 = !DILocation(line: 0, scope: !13443)
!13447 = !DILocation(line: 3739, column: 11, scope: !13434)
!13448 = !DILocation(line: 3741, column: 33, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13443, file: !12185, line: 3740, column: 3)
!13450 = !DILocation(line: 3742, column: 3, scope: !13449)
!13451 = !DILocation(line: 3745, column: 33, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13443, file: !12185, line: 3744, column: 3)
!13453 = !DILocation(line: 3749, column: 12, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13395, file: !12185, line: 3749, column: 6)
!13455 = !DILocation(line: 3749, column: 16, scope: !13454)
!13456 = !DILocation(line: 3755, column: 24, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13454, file: !12185, line: 3754, column: 3)
!13458 = !DILocation(line: 3755, column: 33, scope: !13457)
!13459 = !DILocation(line: 3759, column: 12, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13395, file: !12185, line: 3759, column: 6)
!13461 = !DILocation(line: 3759, column: 15, scope: !13460)
!13462 = !DILocation(line: 3759, column: 30, scope: !13460)
!13463 = !DILocation(line: 3759, column: 6, scope: !13395)
!13464 = !DILocation(line: 3765, column: 28, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13460, file: !12185, line: 3764, column: 3)
!13466 = !DILocation(line: 3765, column: 37, scope: !13465)
!13467 = !DILocation(line: 3767, column: 54, scope: !13395)
!13468 = !DILocation(line: 3767, column: 62, scope: !13395)
!13469 = !DILocation(line: 3767, column: 26, scope: !13395)
!13470 = !DILocation(line: 3767, column: 36, scope: !13395)
!13471 = !DILocation(line: 3768, column: 49, scope: !13395)
!13472 = !DILocation(line: 3768, column: 57, scope: !13395)
!13473 = !DILocation(line: 3768, column: 26, scope: !13395)
!13474 = !DILocation(line: 3768, column: 31, scope: !13395)
!13475 = !DILocation(line: 3769, column: 50, scope: !13395)
!13476 = !DILocation(line: 3769, column: 78, scope: !13395)
!13477 = !DILocation(line: 3769, column: 26, scope: !13395)
!13478 = !DILocation(line: 3769, column: 31, scope: !13395)
!13479 = !DILocation(line: 3770, column: 52, scope: !13395)
!13480 = !DILocation(line: 3770, column: 102, scope: !13395)
!13481 = !DILocation(line: 3770, column: 109, scope: !13395)
!13482 = !DILocation(line: 3770, column: 26, scope: !13395)
!13483 = !DILocation(line: 3770, column: 31, scope: !13395)
!13484 = !DILocation(line: 3771, column: 50, scope: !13395)
!13485 = !DILocation(line: 3771, column: 78, scope: !13395)
!13486 = !DILocation(line: 3771, column: 26, scope: !13395)
!13487 = !DILocation(line: 3771, column: 31, scope: !13395)
!13488 = !DILocation(line: 3772, column: 50, scope: !13395)
!13489 = !DILocation(line: 3772, column: 78, scope: !13395)
!13490 = !DILocation(line: 3772, column: 26, scope: !13395)
!13491 = !DILocation(line: 3772, column: 31, scope: !13395)
!13492 = !DILocation(line: 3773, column: 1, scope: !13395)
!13493 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13494, file: !13494, line: 257, type: !7012, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13495)
!13494 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13495 = !{!13496}
!13496 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13493, file: !13494, line: 257, type: !132)
!13497 = !DILocation(line: 0, scope: !13493)
!13498 = !DILocation(line: 260, column: 3, scope: !13493)
!13499 = !DILocation(line: 261, column: 1, scope: !13493)
!13500 = distinct !DISubprogram(name: "LL_InitTick", scope: !13501, file: !13501, line: 260, type: !10206, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13502)
!13501 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13502 = !{!13503, !13504}
!13503 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13500, file: !13501, line: 260, type: !132)
!13504 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13500, file: !13501, line: 260, type: !132)
!13505 = !DILocation(line: 0, scope: !13500)
!13506 = !DILocation(line: 263, column: 46, scope: !13500)
!13507 = !DILocation(line: 263, column: 55, scope: !13500)
!13508 = !DILocation(line: 263, column: 18, scope: !13500)
!13509 = !DILocation(line: 264, column: 18, scope: !13500)
!13510 = !DILocation(line: 265, column: 18, scope: !13500)
!13511 = !DILocation(line: 267, column: 1, scope: !13500)
!13512 = distinct !DISubprogram(name: "LL_mDelay", scope: !13494, file: !13494, line: 273, type: !7012, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13513)
!13513 = !{!13514, !13515}
!13514 = !DILocalVariable(name: "Delay", arg: 1, scope: !13512, file: !13494, line: 273, type: !132)
!13515 = !DILocalVariable(name: "tmp", scope: !13512, file: !13494, line: 275, type: !131)
!13516 = !DILocation(line: 0, scope: !13512)
!13517 = !DILocation(line: 275, column: 3, scope: !13512)
!13518 = !DILocation(line: 275, column: 18, scope: !13512)
!13519 = !DILocation(line: 275, column: 33, scope: !13512)
!13520 = !DILocation(line: 277, column: 10, scope: !13512)
!13521 = !DILocation(line: 280, column: 12, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13512, file: !13494, line: 280, column: 6)
!13523 = !DILocation(line: 285, column: 3, scope: !13512)
!13524 = !DILocation(line: 287, column: 18, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13526, file: !13494, line: 287, column: 8)
!13526 = distinct !DILexicalBlock(scope: !13512, file: !13494, line: 286, column: 3)
!13527 = !DILocation(line: 292, column: 1, scope: !13512)
!13528 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13494, file: !13494, line: 323, type: !7012, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13529)
!13529 = !{!13530}
!13530 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13528, file: !13494, line: 323, type: !132)
!13531 = !DILocation(line: 0, scope: !13528)
!13532 = !DILocation(line: 326, column: 19, scope: !13528)
!13533 = !DILocation(line: 327, column: 1, scope: !13528)
!13534 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13494, file: !13494, line: 338, type: !13535, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13538)
!13535 = !DISubroutineType(types: !13536)
!13536 = !{!13537, !132}
!13537 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !816, line: 201, baseType: !815)
!13538 = !{!13539, !13540, !13541, !13542, !13543}
!13539 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13534, file: !13494, line: 338, type: !132)
!13540 = !DILocalVariable(name: "timeout", scope: !13534, file: !13494, line: 340, type: !132)
!13541 = !DILocalVariable(name: "getlatency", scope: !13534, file: !13494, line: 341, type: !132)
!13542 = !DILocalVariable(name: "latency", scope: !13534, file: !13494, line: 342, type: !132)
!13543 = !DILocalVariable(name: "status", scope: !13534, file: !13494, line: 343, type: !13537)
!13544 = !DILocation(line: 0, scope: !13534)
!13545 = !DILocation(line: 347, column: 21, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13534, file: !13494, line: 347, column: 6)
!13547 = !DILocation(line: 347, column: 6, scope: !13534)
!13548 = !DILocation(line: 353, column: 8, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13550, file: !13494, line: 353, column: 8)
!13550 = distinct !DILexicalBlock(scope: !13546, file: !13494, line: 352, column: 3)
!13551 = !DILocation(line: 353, column: 40, scope: !13549)
!13552 = !DILocation(line: 353, column: 8, scope: !13550)
!13553 = !DILocation(line: 356, column: 26, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13555, file: !13494, line: 356, column: 10)
!13555 = distinct !DILexicalBlock(scope: !13549, file: !13494, line: 354, column: 5)
!13556 = !DILocation(line: 356, column: 55, scope: !13554)
!13557 = !DILocation(line: 362, column: 55, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13555, file: !13494, line: 362, column: 10)
!13559 = !DILocation(line: 368, column: 55, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13555, file: !13494, line: 368, column: 10)
!13561 = !DILocation(line: 374, column: 26, scope: !13562)
!13562 = distinct !DILexicalBlock(scope: !13555, file: !13494, line: 374, column: 10)
!13563 = !DILocation(line: 374, column: 55, scope: !13562)
!13564 = !DILocation(line: 380, column: 28, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13566, file: !13494, line: 380, column: 12)
!13566 = distinct !DILexicalBlock(scope: !13562, file: !13494, line: 379, column: 7)
!13567 = !DILocation(line: 380, column: 57, scope: !13565)
!13568 = !DILocation(line: 387, column: 8, scope: !13569)
!13569 = distinct !DILexicalBlock(scope: !13550, file: !13494, line: 387, column: 8)
!13570 = !DILocation(line: 387, column: 40, scope: !13569)
!13571 = !DILocation(line: 387, column: 8, scope: !13550)
!13572 = !DILocation(line: 390, column: 26, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13574, file: !13494, line: 390, column: 10)
!13574 = distinct !DILexicalBlock(scope: !13569, file: !13494, line: 388, column: 5)
!13575 = !DILocation(line: 390, column: 55, scope: !13573)
!13576 = !DILocation(line: 396, column: 26, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13574, file: !13494, line: 396, column: 10)
!13578 = !DILocation(line: 396, column: 55, scope: !13577)
!13579 = !DILocation(line: 402, column: 26, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13574, file: !13494, line: 402, column: 10)
!13581 = !DILocation(line: 402, column: 55, scope: !13580)
!13582 = !DILocation(line: 407, column: 26, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13574, file: !13494, line: 407, column: 10)
!13584 = !DILocation(line: 407, column: 55, scope: !13583)
!13585 = !DILocation(line: 413, column: 28, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13587, file: !13494, line: 413, column: 12)
!13587 = distinct !DILexicalBlock(scope: !13583, file: !13494, line: 412, column: 7)
!13588 = !DILocation(line: 413, column: 57, scope: !13586)
!13589 = !DILocation(line: 0, scope: !13550)
!13590 = !DILocation(line: 420, column: 8, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13550, file: !13494, line: 420, column: 8)
!13592 = !DILocation(line: 420, column: 40, scope: !13591)
!13593 = !DILocation(line: 420, column: 8, scope: !13550)
!13594 = !DILocation(line: 423, column: 26, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13596, file: !13494, line: 423, column: 10)
!13596 = distinct !DILexicalBlock(scope: !13591, file: !13494, line: 421, column: 5)
!13597 = !DILocation(line: 423, column: 55, scope: !13595)
!13598 = !DILocation(line: 429, column: 26, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !13596, file: !13494, line: 429, column: 10)
!13600 = !DILocation(line: 429, column: 55, scope: !13599)
!13601 = !DILocation(line: 435, column: 28, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13603, file: !13494, line: 435, column: 12)
!13603 = distinct !DILexicalBlock(scope: !13599, file: !13494, line: 434, column: 7)
!13604 = !DILocation(line: 435, column: 57, scope: !13602)
!13605 = !DILocation(line: 444, column: 5, scope: !13550)
!13606 = !DILocation(line: 448, column: 5, scope: !13550)
!13607 = !DILocation(line: 451, column: 18, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13550, file: !13494, line: 449, column: 5)
!13609 = !DILocation(line: 452, column: 12, scope: !13608)
!13610 = !DILocation(line: 453, column: 26, scope: !13550)
!13611 = !DILocation(line: 453, column: 38, scope: !13550)
!13612 = !DILocation(line: 453, column: 5, scope: !13608)
!13613 = distinct !{!13613, !13606, !13614}
!13614 = !DILocation(line: 453, column: 54, scope: !13550)
!13615 = !DILocation(line: 0, scope: !13546)
!13616 = !DILocation(line: 464, column: 3, scope: !13534)
!13617 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13618, file: !13618, line: 519, type: !7002, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !473)
!13618 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13619 = !DILocation(line: 521, column: 21, scope: !13617)
!13620 = !DILocation(line: 521, column: 3, scope: !13617)
!13621 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5922, file: !5922, line: 1543, type: !7012, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13622)
!13622 = !{!13623}
!13623 = !DILocalVariable(name: "Latency", arg: 1, scope: !13621, file: !5922, line: 1543, type: !132)
!13624 = !DILocation(line: 0, scope: !13621)
!13625 = !DILocation(line: 1545, column: 3, scope: !13621)
!13626 = !DILocation(line: 1546, column: 1, scope: !13621)
!13627 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5922, file: !5922, line: 1569, type: !7002, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !473)
!13628 = !DILocation(line: 1571, column: 21, scope: !13627)
!13629 = !DILocation(line: 1571, column: 3, scope: !13627)
!13630 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13494, file: !13494, line: 483, type: !13631, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13647)
!13631 = !DISubroutineType(types: !13632)
!13632 = !{!13537, !13633, !13640}
!13633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13634, size: 32)
!13634 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13501, line: 114, baseType: !13635)
!13635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13501, line: 94, size: 96, elements: !13636)
!13636 = !{!13637, !13638, !13639}
!13637 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13635, file: !13501, line: 96, baseType: !132, size: 32)
!13638 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13635, file: !13501, line: 102, baseType: !132, size: 32, offset: 32)
!13639 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13635, file: !13501, line: 109, baseType: !132, size: 32, offset: 64)
!13640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13641, size: 32)
!13641 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13501, line: 139, baseType: !13642)
!13642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13501, line: 119, size: 96, elements: !13643)
!13643 = !{!13644, !13645, !13646}
!13644 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13642, file: !13501, line: 121, baseType: !132, size: 32)
!13645 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13642, file: !13501, line: 127, baseType: !132, size: 32, offset: 32)
!13646 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13642, file: !13501, line: 133, baseType: !132, size: 32, offset: 64)
!13647 = !{!13648, !13649, !13650, !13651}
!13648 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13630, file: !13494, line: 483, type: !13633)
!13649 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13630, file: !13494, line: 484, type: !13640)
!13650 = !DILocalVariable(name: "status", scope: !13630, file: !13494, line: 486, type: !13537)
!13651 = !DILocalVariable(name: "pllfreq", scope: !13630, file: !13494, line: 487, type: !132)
!13652 = !DILocation(line: 0, scope: !13630)
!13653 = !DILocation(line: 490, column: 6, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13630, file: !13494, line: 490, column: 6)
!13655 = !DILocation(line: 490, column: 25, scope: !13654)
!13656 = !DILocation(line: 490, column: 6, scope: !13630)
!13657 = !DILocation(line: 493, column: 15, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13654, file: !13494, line: 491, column: 3)
!13659 = !DILocation(line: 496, column: 8, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13658, file: !13494, line: 496, column: 8)
!13661 = !DILocation(line: 496, column: 29, scope: !13660)
!13662 = !DILocation(line: 496, column: 8, scope: !13658)
!13663 = !DILocation(line: 498, column: 7, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13660, file: !13494, line: 497, column: 5)
!13665 = !DILocation(line: 499, column: 7, scope: !13664)
!13666 = !DILocation(line: 499, column: 14, scope: !13664)
!13667 = !DILocation(line: 499, column: 35, scope: !13664)
!13668 = distinct !{!13668, !13665, !13669}
!13669 = !DILocation(line: 502, column: 7, scope: !13664)
!13670 = !DILocation(line: 506, column: 76, scope: !13658)
!13671 = !DILocation(line: 506, column: 103, scope: !13658)
!13672 = !DILocation(line: 507, column: 54, scope: !13658)
!13673 = !DILocation(line: 506, column: 5, scope: !13658)
!13674 = !DILocation(line: 510, column: 14, scope: !13658)
!13675 = !DILocation(line: 511, column: 3, scope: !13658)
!13676 = !DILocation(line: 0, scope: !13654)
!13677 = !DILocation(line: 518, column: 3, scope: !13630)
!13678 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13494, file: !13494, line: 642, type: !13679, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13681)
!13679 = !DISubroutineType(types: !13680)
!13680 = !{!13537}
!13681 = !{!13682}
!13682 = !DILocalVariable(name: "status", scope: !13678, file: !13494, line: 644, type: !13537)
!13683 = !DILocation(line: 0, scope: !13678)
!13684 = !DILocation(line: 647, column: 6, scope: !13685)
!13685 = distinct !DILexicalBlock(scope: !13678, file: !13494, line: 647, column: 6)
!13686 = !DILocation(line: 647, column: 27, scope: !13685)
!13687 = !DILocation(line: 655, column: 6, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13678, file: !13494, line: 655, column: 6)
!13689 = !DILocation(line: 655, column: 30, scope: !13688)
!13690 = !DILocation(line: 663, column: 6, scope: !13691)
!13691 = distinct !DILexicalBlock(scope: !13678, file: !13494, line: 663, column: 6)
!13692 = !DILocation(line: 663, column: 30, scope: !13691)
!13693 = !DILocation(line: 663, column: 6, scope: !13678)
!13694 = !DILocation(line: 669, column: 3, scope: !13678)
!13695 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13494, file: !13494, line: 611, type: !13696, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13698)
!13696 = !DISubroutineType(types: !13697)
!13697 = !{!132, !132, !13633}
!13698 = !{!13699, !13700, !13701}
!13699 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13695, file: !13494, line: 611, type: !132)
!13700 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13695, file: !13494, line: 611, type: !13633)
!13701 = !DILocalVariable(name: "pllfreq", scope: !13695, file: !13494, line: 613, type: !132)
!13702 = !DILocation(line: 0, scope: !13695)
!13703 = !DILocation(line: 622, column: 56, scope: !13695)
!13704 = !DILocation(line: 622, column: 61, scope: !13695)
!13705 = !DILocation(line: 622, column: 32, scope: !13695)
!13706 = !DILocation(line: 626, column: 45, scope: !13695)
!13707 = !DILocation(line: 626, column: 50, scope: !13695)
!13708 = !DILocation(line: 626, column: 21, scope: !13695)
!13709 = !DILocation(line: 630, column: 47, scope: !13695)
!13710 = !DILocation(line: 630, column: 82, scope: !13695)
!13711 = !DILocation(line: 630, column: 21, scope: !13695)
!13712 = !DILocation(line: 633, column: 3, scope: !13695)
!13713 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8955, file: !8955, line: 3007, type: !7002, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !473)
!13714 = !DILocation(line: 3009, column: 11, scope: !13713)
!13715 = !DILocation(line: 3009, column: 44, scope: !13713)
!13716 = !DILocation(line: 3009, column: 3, scope: !13713)
!13717 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8955, file: !8955, line: 2987, type: !3328, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !473)
!13718 = !DILocation(line: 2989, column: 3, scope: !13717)
!13719 = !DILocation(line: 2990, column: 1, scope: !13717)
!13720 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8955, file: !8955, line: 4304, type: !9089, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13721)
!13721 = !{!13722, !13723, !13724, !13725}
!13722 = !DILocalVariable(name: "Source", arg: 1, scope: !13720, file: !8955, line: 4304, type: !132)
!13723 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13720, file: !8955, line: 4304, type: !132)
!13724 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13720, file: !8955, line: 4304, type: !132)
!13725 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13720, file: !8955, line: 4304, type: !132)
!13726 = !DILocation(line: 0, scope: !13720)
!13727 = !DILocation(line: 4306, column: 3, scope: !13720)
!13728 = !DILocation(line: 4308, column: 3, scope: !13720)
!13729 = !DILocation(line: 4310, column: 3, scope: !13720)
!13730 = !DILocation(line: 4312, column: 1, scope: !13720)
!13731 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13494, file: !13494, line: 681, type: !13732, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13734)
!13732 = !DISubroutineType(types: !13733)
!13733 = !{!13537, !132, !13640}
!13734 = !{!13735, !13736, !13737, !13738}
!13735 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13731, file: !13494, line: 681, type: !132)
!13736 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13731, file: !13494, line: 681, type: !13640)
!13737 = !DILocalVariable(name: "status", scope: !13731, file: !13494, line: 683, type: !13537)
!13738 = !DILocalVariable(name: "hclk_frequency", scope: !13731, file: !13494, line: 684, type: !132)
!13739 = !DILocation(line: 0, scope: !13731)
!13740 = !DILocation(line: 691, column: 20, scope: !13731)
!13741 = !DILocation(line: 694, column: 6, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13731, file: !13494, line: 694, column: 6)
!13743 = !DILocation(line: 694, column: 22, scope: !13742)
!13744 = !DILocation(line: 694, column: 6, scope: !13731)
!13745 = !DILocation(line: 697, column: 14, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13742, file: !13494, line: 695, column: 3)
!13747 = !DILocation(line: 701, column: 13, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13731, file: !13494, line: 701, column: 6)
!13749 = !DILocation(line: 701, column: 6, scope: !13731)
!13750 = !DILocation(line: 704, column: 5, scope: !13751)
!13751 = distinct !DILexicalBlock(scope: !13748, file: !13494, line: 702, column: 3)
!13752 = !DILocation(line: 705, column: 5, scope: !13751)
!13753 = !DILocation(line: 705, column: 12, scope: !13751)
!13754 = !DILocation(line: 705, column: 33, scope: !13751)
!13755 = distinct !{!13755, !13752, !13756}
!13756 = !DILocation(line: 708, column: 5, scope: !13751)
!13757 = !DILocation(line: 711, column: 49, scope: !13751)
!13758 = !DILocation(line: 711, column: 5, scope: !13751)
!13759 = !DILocation(line: 712, column: 5, scope: !13751)
!13760 = !DILocation(line: 713, column: 5, scope: !13751)
!13761 = !DILocation(line: 713, column: 12, scope: !13751)
!13762 = !DILocation(line: 713, column: 37, scope: !13751)
!13763 = distinct !{!13763, !13760, !13764}
!13764 = !DILocation(line: 716, column: 5, scope: !13751)
!13765 = !DILocation(line: 719, column: 50, scope: !13751)
!13766 = !DILocation(line: 719, column: 5, scope: !13751)
!13767 = !DILocation(line: 720, column: 50, scope: !13751)
!13768 = !DILocation(line: 720, column: 5, scope: !13751)
!13769 = !DILocation(line: 721, column: 3, scope: !13751)
!13770 = !DILocation(line: 724, column: 6, scope: !13771)
!13771 = distinct !DILexicalBlock(scope: !13731, file: !13494, line: 724, column: 6)
!13772 = !DILocation(line: 724, column: 22, scope: !13771)
!13773 = !DILocation(line: 724, column: 6, scope: !13731)
!13774 = !DILocation(line: 727, column: 14, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13771, file: !13494, line: 725, column: 3)
!13776 = !DILocation(line: 728, column: 3, scope: !13775)
!13777 = !DILocation(line: 731, column: 13, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13731, file: !13494, line: 731, column: 6)
!13779 = !DILocation(line: 731, column: 6, scope: !13731)
!13780 = !DILocation(line: 733, column: 5, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13778, file: !13494, line: 732, column: 3)
!13782 = !DILocation(line: 734, column: 3, scope: !13781)
!13783 = !DILocation(line: 736, column: 3, scope: !13731)
!13784 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8955, file: !8955, line: 4184, type: !3328, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !473)
!13785 = !DILocation(line: 4186, column: 3, scope: !13784)
!13786 = !DILocation(line: 4187, column: 1, scope: !13784)
!13787 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8955, file: !8955, line: 4205, type: !7002, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !473)
!13788 = !DILocation(line: 4207, column: 11, scope: !13787)
!13789 = !DILocation(line: 4207, column: 44, scope: !13787)
!13790 = !DILocation(line: 4207, column: 3, scope: !13787)
!13791 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8955, file: !8955, line: 3224, type: !7012, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13792)
!13792 = !{!13793}
!13793 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13791, file: !8955, line: 3224, type: !132)
!13794 = !DILocation(line: 0, scope: !13791)
!13795 = !DILocation(line: 3226, column: 3, scope: !13791)
!13796 = !DILocation(line: 3227, column: 1, scope: !13791)
!13797 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8955, file: !8955, line: 3188, type: !7012, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13798)
!13798 = !{!13799}
!13799 = !DILocalVariable(name: "Source", arg: 1, scope: !13797, file: !8955, line: 3188, type: !132)
!13800 = !DILocation(line: 0, scope: !13797)
!13801 = !DILocation(line: 3190, column: 3, scope: !13797)
!13802 = !DILocation(line: 3191, column: 1, scope: !13797)
!13803 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8955, file: !8955, line: 3204, type: !7002, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !473)
!13804 = !DILocation(line: 3206, column: 21, scope: !13803)
!13805 = !DILocation(line: 3206, column: 3, scope: !13803)
!13806 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8955, file: !8955, line: 3240, type: !7012, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13807)
!13807 = !{!13808}
!13808 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13806, file: !8955, line: 3240, type: !132)
!13809 = !DILocation(line: 0, scope: !13806)
!13810 = !DILocation(line: 3242, column: 3, scope: !13806)
!13811 = !DILocation(line: 3243, column: 1, scope: !13806)
!13812 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8955, file: !8955, line: 3256, type: !7012, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13813)
!13813 = !{!13814}
!13814 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13812, file: !8955, line: 3256, type: !132)
!13815 = !DILocation(line: 0, scope: !13812)
!13816 = !DILocation(line: 3258, column: 3, scope: !13812)
!13817 = !DILocation(line: 3259, column: 1, scope: !13812)
!13818 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8955, file: !8955, line: 5969, type: !7002, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !473)
!13819 = !DILocation(line: 5971, column: 11, scope: !13818)
!13820 = !DILocation(line: 5971, column: 47, scope: !13818)
!13821 = !DILocation(line: 5971, column: 3, scope: !13818)
!13822 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8955, file: !8955, line: 5153, type: !7002, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !473)
!13823 = !DILocation(line: 5155, column: 11, scope: !13822)
!13824 = !DILocation(line: 5155, column: 47, scope: !13822)
!13825 = !DILocation(line: 5155, column: 3, scope: !13822)
!13826 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13494, file: !13494, line: 540, type: !13827, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !13829)
!13827 = !DISubroutineType(types: !13828)
!13828 = !{!13537, !132, !132, !13633, !13640}
!13829 = !{!13830, !13831, !13832, !13833, !13834, !13835}
!13830 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13826, file: !13494, line: 540, type: !132)
!13831 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13826, file: !13494, line: 540, type: !132)
!13832 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13826, file: !13494, line: 541, type: !13633)
!13833 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13826, file: !13494, line: 541, type: !13640)
!13834 = !DILocalVariable(name: "status", scope: !13826, file: !13494, line: 543, type: !13537)
!13835 = !DILocalVariable(name: "pllfreq", scope: !13826, file: !13494, line: 544, type: !132)
!13836 = !DILocation(line: 0, scope: !13826)
!13837 = !DILocation(line: 551, column: 6, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13826, file: !13494, line: 551, column: 6)
!13839 = !DILocation(line: 551, column: 25, scope: !13838)
!13840 = !DILocation(line: 551, column: 6, scope: !13826)
!13841 = !DILocation(line: 554, column: 15, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13838, file: !13494, line: 552, column: 3)
!13843 = !DILocation(line: 557, column: 8, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13842, file: !13494, line: 557, column: 8)
!13845 = !DILocation(line: 557, column: 29, scope: !13844)
!13846 = !DILocation(line: 557, column: 8, scope: !13842)
!13847 = !DILocation(line: 560, column: 20, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13849, file: !13494, line: 560, column: 10)
!13849 = distinct !DILexicalBlock(scope: !13844, file: !13494, line: 558, column: 5)
!13850 = !DILocation(line: 560, column: 10, scope: !13849)
!13851 = !DILocation(line: 562, column: 9, scope: !13852)
!13852 = distinct !DILexicalBlock(scope: !13848, file: !13494, line: 561, column: 7)
!13853 = !DILocation(line: 563, column: 7, scope: !13852)
!13854 = !DILocation(line: 566, column: 9, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13848, file: !13494, line: 565, column: 7)
!13856 = !DILocation(line: 570, column: 7, scope: !13849)
!13857 = !DILocation(line: 571, column: 7, scope: !13849)
!13858 = !DILocation(line: 571, column: 14, scope: !13849)
!13859 = !DILocation(line: 571, column: 35, scope: !13849)
!13860 = distinct !{!13860, !13857, !13861}
!13861 = !DILocation(line: 574, column: 7, scope: !13849)
!13862 = !DILocation(line: 578, column: 76, scope: !13842)
!13863 = !DILocation(line: 578, column: 103, scope: !13842)
!13864 = !DILocation(line: 579, column: 54, scope: !13842)
!13865 = !DILocation(line: 578, column: 5, scope: !13842)
!13866 = !DILocation(line: 582, column: 14, scope: !13842)
!13867 = !DILocation(line: 583, column: 3, scope: !13842)
!13868 = !DILocation(line: 0, scope: !13838)
!13869 = !DILocation(line: 590, column: 3, scope: !13826)
!13870 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8955, file: !8955, line: 2969, type: !7002, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !473)
!13871 = !DILocation(line: 2971, column: 11, scope: !13870)
!13872 = !DILocation(line: 2971, column: 44, scope: !13870)
!13873 = !DILocation(line: 2971, column: 3, scope: !13870)
!13874 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8955, file: !8955, line: 2929, type: !3328, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !473)
!13875 = !DILocation(line: 2931, column: 3, scope: !13874)
!13876 = !DILocation(line: 2932, column: 1, scope: !13874)
!13877 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8955, file: !8955, line: 2939, type: !3328, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !473)
!13878 = !DILocation(line: 2941, column: 3, scope: !13877)
!13879 = !DILocation(line: 2942, column: 1, scope: !13877)
!13880 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8955, file: !8955, line: 2949, type: !3328, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !473)
!13881 = !DILocation(line: 2951, column: 3, scope: !13880)
!13882 = !DILocation(line: 2952, column: 1, scope: !13880)
!13883 = distinct !DISubprogram(name: "z_device_state_init", scope: !13884, file: !13884, line: 23, type: !3328, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3288, retainedNodes: !13885)
!13884 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13885 = !{!13886}
!13886 = !DILocalVariable(name: "dev", scope: !13883, file: !13884, line: 25, type: !13887)
!13887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13888, size: 32)
!13888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13889)
!13889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !13890)
!13890 = !{!13891, !13892, !13893, !13894, !13900, !13901}
!13891 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13889, file: !152, line: 380, baseType: !155, size: 32)
!13892 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13889, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!13893 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13889, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!13894 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13889, file: !152, line: 386, baseType: !13895, size: 32, offset: 96)
!13895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13896, size: 32)
!13896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !13897)
!13897 = !{!13898, !13899}
!13898 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13896, file: !152, line: 359, baseType: !163, size: 8)
!13899 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13896, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13900 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13889, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!13901 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13889, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!13902 = !DILocation(line: 0, scope: !13883)
!13903 = !DILocation(line: 31, column: 1, scope: !13883)
!13904 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13884, file: !13884, line: 33, type: !13905, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3288, retainedNodes: !13907)
!13905 = !DISubroutineType(types: !13906)
!13906 = !{!13887, !155}
!13907 = !{!13908, !13909}
!13908 = !DILocalVariable(name: "name", arg: 1, scope: !13904, file: !13884, line: 33, type: !155)
!13909 = !DILocalVariable(name: "dev", scope: !13904, file: !13884, line: 35, type: !13887)
!13910 = !DILocation(line: 0, scope: !13904)
!13911 = !DILocation(line: 40, column: 12, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13904, file: !13884, line: 40, column: 6)
!13913 = !DILocation(line: 40, column: 21, scope: !13912)
!13914 = !DILocation(line: 40, column: 25, scope: !13912)
!13915 = !DILocation(line: 40, column: 33, scope: !13912)
!13916 = !DILocation(line: 40, column: 6, scope: !13904)
!13917 = !DILocation(line: 55, column: 2, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13904, file: !13884, line: 55, column: 2)
!13919 = !DILocation(line: 50, column: 7, scope: !13920)
!13920 = distinct !DILexicalBlock(scope: !13921, file: !13884, line: 50, column: 7)
!13921 = distinct !DILexicalBlock(scope: !13922, file: !13884, line: 49, column: 57)
!13922 = distinct !DILexicalBlock(scope: !13923, file: !13884, line: 49, column: 2)
!13923 = distinct !DILexicalBlock(scope: !13904, file: !13884, line: 49, column: 2)
!13924 = !DILocation(line: 50, column: 30, scope: !13920)
!13925 = !DILocation(line: 50, column: 39, scope: !13920)
!13926 = !DILocation(line: 50, column: 44, scope: !13920)
!13927 = !DILocation(line: 50, column: 7, scope: !13921)
!13928 = !DILocation(line: 49, column: 53, scope: !13922)
!13929 = !DILocation(line: 49, column: 33, scope: !13922)
!13930 = !DILocation(line: 49, column: 2, scope: !13923)
!13931 = distinct !{!13931, !13930, !13932}
!13932 = !DILocation(line: 53, column: 2, scope: !13923)
!13933 = !DILocation(line: 56, column: 7, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13935, file: !13884, line: 56, column: 7)
!13935 = distinct !DILexicalBlock(scope: !13936, file: !13884, line: 55, column: 57)
!13936 = distinct !DILexicalBlock(scope: !13918, file: !13884, line: 55, column: 2)
!13937 = !DILocation(line: 56, column: 30, scope: !13934)
!13938 = !DILocation(line: 56, column: 52, scope: !13934)
!13939 = !DILocation(line: 56, column: 34, scope: !13934)
!13940 = !DILocation(line: 56, column: 58, scope: !13934)
!13941 = !DILocation(line: 56, column: 7, scope: !13935)
!13942 = !DILocation(line: 55, column: 53, scope: !13936)
!13943 = !DILocation(line: 55, column: 33, scope: !13936)
!13944 = distinct !{!13944, !13917, !13945}
!13945 = !DILocation(line: 59, column: 2, scope: !13918)
!13946 = !DILocation(line: 62, column: 1, scope: !13904)
!13947 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13884, file: !13884, line: 93, type: !13948, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3288, retainedNodes: !13950)
!13948 = !DISubroutineType(types: !13949)
!13949 = !{!166, !13887}
!13950 = !{!13951}
!13951 = !DILocalVariable(name: "dev", arg: 1, scope: !13947, file: !13884, line: 93, type: !13887)
!13952 = !DILocation(line: 0, scope: !13947)
!13953 = !DILocation(line: 99, column: 10, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13947, file: !13884, line: 99, column: 6)
!13955 = !DILocation(line: 99, column: 6, scope: !13947)
!13956 = !DILocation(line: 103, column: 14, scope: !13947)
!13957 = !DILocation(line: 103, column: 21, scope: !13947)
!13958 = !DILocation(line: 103, column: 33, scope: !13947)
!13959 = !DILocation(line: 103, column: 49, scope: !13947)
!13960 = !DILocation(line: 103, column: 58, scope: !13947)
!13961 = !DILocation(line: 104, column: 1, scope: !13947)
!13962 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13884, file: !13884, line: 87, type: !13963, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3288, retainedNodes: !13966)
!13963 = !DISubroutineType(types: !13964)
!13964 = !{!356, !13965}
!13965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13887, size: 32)
!13966 = !{!13967}
!13967 = !DILocalVariable(name: "devices", arg: 1, scope: !13962, file: !13884, line: 87, type: !13965)
!13968 = !DILocation(line: 0, scope: !13962)
!13969 = !DILocation(line: 89, column: 11, scope: !13962)
!13970 = !DILocation(line: 90, column: 2, scope: !13962)
!13971 = distinct !DISubprogram(name: "device_required_foreach", scope: !13884, file: !13884, line: 125, type: !13972, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3288, retainedNodes: !13978)
!13972 = !DISubroutineType(types: !13973)
!13973 = !{!103, !13887, !13974, !102}
!13974 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !152, line: 471, baseType: !13975)
!13975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13976, size: 32)
!13976 = !DISubroutineType(types: !13977)
!13977 = !{!103, !13887, !102}
!13978 = !{!13979, !13980, !13981, !13982, !13983}
!13979 = !DILocalVariable(name: "dev", arg: 1, scope: !13971, file: !13884, line: 125, type: !13887)
!13980 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13971, file: !13884, line: 126, type: !13974)
!13981 = !DILocalVariable(name: "context", arg: 3, scope: !13971, file: !13884, line: 127, type: !102)
!13982 = !DILocalVariable(name: "handle_count", scope: !13971, file: !13884, line: 129, type: !356)
!13983 = !DILocalVariable(name: "handles", scope: !13971, file: !13884, line: 130, type: !169)
!13984 = !DILocation(line: 0, scope: !13971)
!13985 = !DILocation(line: 129, column: 2, scope: !13971)
!13986 = !DILocation(line: 129, column: 9, scope: !13971)
!13987 = !DILocation(line: 130, column: 35, scope: !13971)
!13988 = !DILocation(line: 132, column: 33, scope: !13971)
!13989 = !DILocation(line: 132, column: 9, scope: !13971)
!13990 = !DILocation(line: 133, column: 1, scope: !13971)
!13991 = !DILocation(line: 132, column: 2, scope: !13971)
!13992 = distinct !DISubprogram(name: "device_required_handles_get", scope: !152, file: !152, line: 493, type: !13993, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3288, retainedNodes: !13995)
!13993 = !DISubroutineType(types: !13994)
!13994 = !{!169, !13887, !2721}
!13995 = !{!13996, !13997, !13998, !13999}
!13996 = !DILocalVariable(name: "dev", arg: 1, scope: !13992, file: !152, line: 493, type: !13887)
!13997 = !DILocalVariable(name: "count", arg: 2, scope: !13992, file: !152, line: 493, type: !2721)
!13998 = !DILocalVariable(name: "rv", scope: !13992, file: !152, line: 495, type: !169)
!13999 = !DILocalVariable(name: "i", scope: !14000, file: !152, line: 498, type: !356)
!14000 = distinct !DILexicalBlock(scope: !14001, file: !152, line: 497, column: 18)
!14001 = distinct !DILexicalBlock(scope: !13992, file: !152, line: 497, column: 6)
!14002 = !DILocation(line: 0, scope: !13992)
!14003 = !DILocation(line: 495, column: 35, scope: !13992)
!14004 = !DILocation(line: 497, column: 9, scope: !14001)
!14005 = !DILocation(line: 497, column: 6, scope: !13992)
!14006 = !DILocation(line: 0, scope: !14000)
!14007 = !DILocation(line: 500, column: 11, scope: !14000)
!14008 = !DILocation(line: 500, column: 40, scope: !14000)
!14009 = !DILocation(line: 502, column: 4, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !14000, file: !152, line: 501, column: 40)
!14011 = distinct !{!14011, !14012, !14013}
!14012 = !DILocation(line: 500, column: 3, scope: !14000)
!14013 = !DILocation(line: 503, column: 3, scope: !14000)
!14014 = !DILocation(line: 504, column: 10, scope: !14000)
!14015 = !DILocation(line: 505, column: 2, scope: !14000)
!14016 = !DILocation(line: 507, column: 2, scope: !13992)
!14017 = distinct !DISubprogram(name: "device_visitor", scope: !13884, file: !13884, line: 106, type: !14018, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3288, retainedNodes: !14020)
!14018 = !DISubroutineType(types: !14019)
!14019 = !{!103, !169, !356, !13974, !102}
!14020 = !{!14021, !14022, !14023, !14024, !14025, !14027, !14030, !14031}
!14021 = !DILocalVariable(name: "handles", arg: 1, scope: !14017, file: !13884, line: 106, type: !169)
!14022 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14017, file: !13884, line: 107, type: !356)
!14023 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14017, file: !13884, line: 108, type: !13974)
!14024 = !DILocalVariable(name: "context", arg: 4, scope: !14017, file: !13884, line: 109, type: !102)
!14025 = !DILocalVariable(name: "i", scope: !14026, file: !13884, line: 112, type: !356)
!14026 = distinct !DILexicalBlock(scope: !14017, file: !13884, line: 112, column: 2)
!14027 = !DILocalVariable(name: "dh", scope: !14028, file: !13884, line: 113, type: !171)
!14028 = distinct !DILexicalBlock(scope: !14029, file: !13884, line: 112, column: 44)
!14029 = distinct !DILexicalBlock(scope: !14026, file: !13884, line: 112, column: 2)
!14030 = !DILocalVariable(name: "rdev", scope: !14028, file: !13884, line: 114, type: !13887)
!14031 = !DILocalVariable(name: "rc", scope: !14028, file: !13884, line: 115, type: !103)
!14032 = !DILocation(line: 0, scope: !14017)
!14033 = !DILocation(line: 0, scope: !14026)
!14034 = !DILocation(line: 112, column: 23, scope: !14029)
!14035 = !DILocation(line: 112, column: 2, scope: !14026)
!14036 = distinct !{!14036, !14035, !14037}
!14037 = !DILocation(line: 120, column: 2, scope: !14026)
!14038 = !DILocation(line: 113, column: 24, scope: !14028)
!14039 = !DILocation(line: 0, scope: !14028)
!14040 = !DILocation(line: 114, column: 31, scope: !14028)
!14041 = !DILocation(line: 115, column: 12, scope: !14028)
!14042 = !DILocation(line: 117, column: 10, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14028, file: !13884, line: 117, column: 7)
!14044 = !DILocation(line: 112, column: 39, scope: !14029)
!14045 = !DILocation(line: 123, column: 1, scope: !14017)
!14046 = distinct !DISubprogram(name: "device_from_handle", scope: !152, file: !152, line: 439, type: !14047, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3288, retainedNodes: !14049)
!14047 = !DISubroutineType(types: !14048)
!14048 = !{!13887, !171}
!14049 = !{!14050, !14051, !14052}
!14050 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14046, file: !152, line: 439, type: !171)
!14051 = !DILocalVariable(name: "dev", scope: !14046, file: !152, line: 443, type: !13887)
!14052 = !DILocalVariable(name: "numdev", scope: !14046, file: !152, line: 444, type: !356)
!14053 = !DILocation(line: 0, scope: !14046)
!14054 = !DILocation(line: 446, column: 7, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14046, file: !152, line: 446, column: 6)
!14056 = !DILocation(line: 446, column: 18, scope: !14055)
!14057 = !DILocation(line: 446, column: 23, scope: !14055)
!14058 = !DILocation(line: 450, column: 2, scope: !14046)
!14059 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13884, file: !13884, line: 135, type: !13972, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3288, retainedNodes: !14060)
!14060 = !{!14061, !14062, !14063, !14064, !14065}
!14061 = !DILocalVariable(name: "dev", arg: 1, scope: !14059, file: !13884, line: 135, type: !13887)
!14062 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14059, file: !13884, line: 136, type: !13974)
!14063 = !DILocalVariable(name: "context", arg: 3, scope: !14059, file: !13884, line: 137, type: !102)
!14064 = !DILocalVariable(name: "handle_count", scope: !14059, file: !13884, line: 139, type: !356)
!14065 = !DILocalVariable(name: "handles", scope: !14059, file: !13884, line: 140, type: !169)
!14066 = !DILocation(line: 0, scope: !14059)
!14067 = !DILocation(line: 139, column: 2, scope: !14059)
!14068 = !DILocation(line: 139, column: 9, scope: !14059)
!14069 = !DILocation(line: 140, column: 35, scope: !14059)
!14070 = !DILocation(line: 142, column: 33, scope: !14059)
!14071 = !DILocation(line: 142, column: 9, scope: !14059)
!14072 = !DILocation(line: 143, column: 1, scope: !14059)
!14073 = !DILocation(line: 142, column: 2, scope: !14059)
!14074 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !152, file: !152, line: 573, type: !13993, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3288, retainedNodes: !14075)
!14075 = !{!14076, !14077, !14078, !14079, !14080}
!14076 = !DILocalVariable(name: "dev", arg: 1, scope: !14074, file: !152, line: 573, type: !13887)
!14077 = !DILocalVariable(name: "count", arg: 2, scope: !14074, file: !152, line: 573, type: !2721)
!14078 = !DILocalVariable(name: "rv", scope: !14074, file: !152, line: 575, type: !169)
!14079 = !DILocalVariable(name: "region", scope: !14074, file: !152, line: 576, type: !356)
!14080 = !DILocalVariable(name: "i", scope: !14074, file: !152, line: 577, type: !356)
!14081 = !DILocation(line: 0, scope: !14074)
!14082 = !DILocation(line: 575, column: 35, scope: !14074)
!14083 = !DILocation(line: 579, column: 9, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14074, file: !152, line: 579, column: 6)
!14085 = !DILocation(line: 579, column: 6, scope: !14074)
!14086 = !DILocation(line: 582, column: 8, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14088, file: !152, line: 582, column: 8)
!14088 = distinct !DILexicalBlock(scope: !14089, file: !152, line: 581, column: 23)
!14089 = distinct !DILexicalBlock(scope: !14084, file: !152, line: 579, column: 18)
!14090 = !DILocation(line: 582, column: 12, scope: !14087)
!14091 = !DILocation(line: 585, column: 6, scope: !14088)
!14092 = !DILocation(line: 0, scope: !14089)
!14093 = !DILocation(line: 581, column: 17, scope: !14089)
!14094 = !DILocation(line: 581, column: 3, scope: !14089)
!14095 = !DILocation(line: 588, column: 10, scope: !14089)
!14096 = !DILocation(line: 588, column: 16, scope: !14089)
!14097 = !DILocation(line: 589, column: 4, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14089, file: !152, line: 588, column: 39)
!14099 = !DILocation(line: 588, column: 3, scope: !14089)
!14100 = distinct !{!14100, !14099, !14101}
!14101 = !DILocation(line: 590, column: 3, scope: !14089)
!14102 = !DILocation(line: 591, column: 10, scope: !14089)
!14103 = !DILocation(line: 592, column: 2, scope: !14089)
!14104 = !DILocation(line: 575, column: 25, scope: !14074)
!14105 = !DILocation(line: 594, column: 2, scope: !14074)
!14106 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2056, file: !2056, line: 49, type: !6093, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2053, retainedNodes: !473)
!14107 = !DILocation(line: 51, column: 10, scope: !14106)
!14108 = !DILocation(line: 51, column: 20, scope: !14106)
!14109 = !DILocation(line: 51, column: 2, scope: !14106)
!14110 = distinct !DISubprogram(name: "coredump", scope: !3295, file: !3295, line: 209, type: !14111, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !14257)
!14111 = !DISubroutineType(types: !14112)
!14112 = !{null, !32, !14113, !14157}
!14113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14114, size: 32)
!14114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14115)
!14115 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2928, line: 141, baseType: !14116)
!14116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2928, line: 97, size: 256, elements: !14117)
!14117 = !{!14118}
!14118 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14116, file: !2928, line: 107, baseType: !14119, size: 256)
!14119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2928, line: 98, size: 256, elements: !14120)
!14120 = !{!14121, !14126, !14131, !14136, !14141, !14146, !14151, !14156}
!14121 = !DIDerivedType(tag: DW_TAG_member, scope: !14119, file: !2928, line: 99, baseType: !14122, size: 32)
!14122 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14119, file: !2928, line: 99, size: 32, elements: !14123)
!14123 = !{!14124, !14125}
!14124 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14122, file: !2928, line: 99, baseType: !132, size: 32)
!14125 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14122, file: !2928, line: 99, baseType: !132, size: 32)
!14126 = !DIDerivedType(tag: DW_TAG_member, scope: !14119, file: !2928, line: 100, baseType: !14127, size: 32, offset: 32)
!14127 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14119, file: !2928, line: 100, size: 32, elements: !14128)
!14128 = !{!14129, !14130}
!14129 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14127, file: !2928, line: 100, baseType: !132, size: 32)
!14130 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14127, file: !2928, line: 100, baseType: !132, size: 32)
!14131 = !DIDerivedType(tag: DW_TAG_member, scope: !14119, file: !2928, line: 101, baseType: !14132, size: 32, offset: 64)
!14132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14119, file: !2928, line: 101, size: 32, elements: !14133)
!14133 = !{!14134, !14135}
!14134 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14132, file: !2928, line: 101, baseType: !132, size: 32)
!14135 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14132, file: !2928, line: 101, baseType: !132, size: 32)
!14136 = !DIDerivedType(tag: DW_TAG_member, scope: !14119, file: !2928, line: 102, baseType: !14137, size: 32, offset: 96)
!14137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14119, file: !2928, line: 102, size: 32, elements: !14138)
!14138 = !{!14139, !14140}
!14139 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14137, file: !2928, line: 102, baseType: !132, size: 32)
!14140 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14137, file: !2928, line: 102, baseType: !132, size: 32)
!14141 = !DIDerivedType(tag: DW_TAG_member, scope: !14119, file: !2928, line: 103, baseType: !14142, size: 32, offset: 128)
!14142 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14119, file: !2928, line: 103, size: 32, elements: !14143)
!14143 = !{!14144, !14145}
!14144 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14142, file: !2928, line: 103, baseType: !132, size: 32)
!14145 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14142, file: !2928, line: 103, baseType: !132, size: 32)
!14146 = !DIDerivedType(tag: DW_TAG_member, scope: !14119, file: !2928, line: 104, baseType: !14147, size: 32, offset: 160)
!14147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14119, file: !2928, line: 104, size: 32, elements: !14148)
!14148 = !{!14149, !14150}
!14149 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14147, file: !2928, line: 104, baseType: !132, size: 32)
!14150 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14147, file: !2928, line: 104, baseType: !132, size: 32)
!14151 = !DIDerivedType(tag: DW_TAG_member, scope: !14119, file: !2928, line: 105, baseType: !14152, size: 32, offset: 192)
!14152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14119, file: !2928, line: 105, size: 32, elements: !14153)
!14153 = !{!14154, !14155}
!14154 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14152, file: !2928, line: 105, baseType: !132, size: 32)
!14155 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14152, file: !2928, line: 105, baseType: !132, size: 32)
!14156 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14119, file: !2928, line: 106, baseType: !132, size: 32, offset: 224)
!14157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14158, size: 32)
!14158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !14159)
!14159 = !{!14160, !14218, !14230, !14231, !14232, !14233, !14239, !14252}
!14160 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14158, file: !367, line: 247, baseType: !14161, size: 384)
!14161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !14162)
!14162 = !{!14163, !14187, !14194, !14195, !14196, !14205, !14206, !14207}
!14163 = !DIDerivedType(tag: DW_TAG_member, scope: !14161, file: !367, line: 60, baseType: !14164, size: 64)
!14164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14161, file: !367, line: 60, size: 64, elements: !14165)
!14165 = !{!14166, !14181}
!14166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14164, file: !367, line: 61, baseType: !14167, size: 64)
!14167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !14168)
!14168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !14169)
!14169 = !{!14170, !14176}
!14170 = !DIDerivedType(tag: DW_TAG_member, scope: !14168, file: !321, line: 38, baseType: !14171, size: 32)
!14171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14168, file: !321, line: 38, size: 32, elements: !14172)
!14172 = !{!14173, !14175}
!14173 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14171, file: !321, line: 39, baseType: !14174, size: 32)
!14174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14168, size: 32)
!14175 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14171, file: !321, line: 40, baseType: !14174, size: 32)
!14176 = !DIDerivedType(tag: DW_TAG_member, scope: !14168, file: !321, line: 42, baseType: !14177, size: 32, offset: 32)
!14177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14168, file: !321, line: 42, size: 32, elements: !14178)
!14178 = !{!14179, !14180}
!14179 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14177, file: !321, line: 43, baseType: !14174, size: 32)
!14180 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14177, file: !321, line: 44, baseType: !14174, size: 32)
!14181 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14164, file: !367, line: 62, baseType: !14182, size: 64)
!14182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !14183)
!14183 = !{!14184}
!14184 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14182, file: !392, line: 50, baseType: !14185, size: 64)
!14185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14186, size: 64, elements: !397)
!14186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14182, size: 32)
!14187 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14161, file: !367, line: 68, baseType: !14188, size: 32, offset: 64)
!14188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14189, size: 32)
!14189 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !14190)
!14190 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !14191)
!14191 = !{!14192}
!14192 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14190, file: !316, line: 232, baseType: !14193, size: 64)
!14193 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !14168)
!14194 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14161, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!14195 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14161, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!14196 = !DIDerivedType(tag: DW_TAG_member, scope: !14161, file: !367, line: 90, baseType: !14197, size: 16, offset: 112)
!14197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14161, file: !367, line: 90, size: 16, elements: !14198)
!14198 = !{!14199, !14204}
!14199 = !DIDerivedType(tag: DW_TAG_member, scope: !14197, file: !367, line: 91, baseType: !14200, size: 16)
!14200 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14197, file: !367, line: 91, size: 16, elements: !14201)
!14201 = !{!14202, !14203}
!14202 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14200, file: !367, line: 96, baseType: !415, size: 8)
!14203 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14200, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!14204 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14197, file: !367, line: 100, baseType: !340, size: 16)
!14205 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14161, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!14206 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14161, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!14207 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14161, file: !367, line: 131, baseType: !14208, size: 192, offset: 192)
!14208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !14209)
!14209 = !{!14210, !14211, !14217}
!14210 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14208, file: !316, line: 245, baseType: !14167, size: 64)
!14211 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14208, file: !316, line: 246, baseType: !14212, size: 32, offset: 64)
!14212 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !14213)
!14213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14214, size: 32)
!14214 = !DISubroutineType(types: !14215)
!14215 = !{null, !14216}
!14216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14208, size: 32)
!14217 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14208, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!14218 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14158, file: !367, line: 250, baseType: !14219, size: 288, offset: 384)
!14219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !14220)
!14220 = !{!14221, !14222, !14223, !14224, !14225, !14226, !14227, !14228, !14229}
!14221 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14219, file: !436, line: 26, baseType: !132, size: 32)
!14222 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14219, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!14223 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14219, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!14224 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14219, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!14225 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14219, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!14226 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14219, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!14227 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14219, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!14228 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14219, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!14229 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14219, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!14230 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14158, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!14231 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14158, file: !367, line: 256, baseType: !14189, size: 64, offset: 704)
!14232 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14158, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!14233 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14158, file: !367, line: 300, baseType: !14234, size: 96, offset: 800)
!14234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !14235)
!14235 = !{!14236, !14237, !14238}
!14236 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14234, file: !367, line: 153, baseType: !22, size: 32)
!14237 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14234, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!14238 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14234, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!14239 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14158, file: !367, line: 325, baseType: !14240, size: 32, offset: 896)
!14240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14241, size: 32)
!14241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !14242)
!14242 = !{!14243, !14249, !14250}
!14243 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14241, file: !312, line: 5074, baseType: !14244, size: 96)
!14244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !14245)
!14245 = !{!14246, !14247, !14248}
!14246 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14244, file: !462, line: 57, baseType: !465, size: 32)
!14247 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14244, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!14248 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14244, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!14249 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14241, file: !312, line: 5075, baseType: !14189, size: 64, offset: 96)
!14250 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14241, file: !312, line: 5076, baseType: !14251, offset: 160)
!14251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!14252 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14158, file: !367, line: 343, baseType: !14253, size: 64, offset: 928)
!14253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !14254)
!14254 = !{!14255, !14256}
!14255 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14253, file: !436, line: 63, baseType: !132, size: 32)
!14256 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14253, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!14257 = !{!14258, !14259, !14260}
!14258 = !DILocalVariable(name: "reason", arg: 1, scope: !14110, file: !3295, line: 209, type: !32)
!14259 = !DILocalVariable(name: "esf", arg: 2, scope: !14110, file: !3295, line: 209, type: !14113)
!14260 = !DILocalVariable(name: "thread", arg: 3, scope: !14110, file: !3295, line: 210, type: !14157)
!14261 = !DILocation(line: 0, scope: !14110)
!14262 = !DILocation(line: 212, column: 1, scope: !14110)
!14263 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3295, file: !3295, line: 214, type: !14264, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !14266)
!14264 = !DISubroutineType(types: !14265)
!14265 = !{null, !22, !22}
!14266 = !{!14267, !14268}
!14267 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14263, file: !3295, line: 214, type: !22)
!14268 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14263, file: !3295, line: 214, type: !22)
!14269 = !DILocation(line: 0, scope: !14263)
!14270 = !DILocation(line: 216, column: 1, scope: !14263)
!14271 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3295, file: !3295, line: 218, type: !14272, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !14274)
!14272 = !DISubroutineType(types: !14273)
!14273 = !{null, !270, !356}
!14274 = !{!14275, !14276}
!14275 = !DILocalVariable(name: "buf", arg: 1, scope: !14271, file: !3295, line: 218, type: !270)
!14276 = !DILocalVariable(name: "buflen", arg: 2, scope: !14271, file: !3295, line: 218, type: !356)
!14277 = !DILocation(line: 0, scope: !14271)
!14278 = !DILocation(line: 220, column: 1, scope: !14271)
!14279 = distinct !DISubprogram(name: "coredump_query", scope: !3295, file: !3295, line: 222, type: !14280, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !14282)
!14280 = !DISubroutineType(types: !14281)
!14281 = !{!103, !3294, !102}
!14282 = !{!14283, !14284}
!14283 = !DILocalVariable(name: "query_id", arg: 1, scope: !14279, file: !3295, line: 222, type: !3294)
!14284 = !DILocalVariable(name: "arg", arg: 2, scope: !14279, file: !3295, line: 222, type: !102)
!14285 = !DILocation(line: 0, scope: !14279)
!14286 = !DILocation(line: 224, column: 2, scope: !14279)
!14287 = distinct !DISubprogram(name: "coredump_cmd", scope: !3295, file: !3295, line: 227, type: !14288, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !14290)
!14288 = !DISubroutineType(types: !14289)
!14289 = !{!103, !3301, !102}
!14290 = !{!14291, !14292}
!14291 = !DILocalVariable(name: "query_id", arg: 1, scope: !14287, file: !3295, line: 227, type: !3301)
!14292 = !DILocalVariable(name: "arg", arg: 2, scope: !14287, file: !3295, line: 227, type: !102)
!14293 = !DILocation(line: 0, scope: !14287)
!14294 = !DILocation(line: 229, column: 2, scope: !14287)
!14295 = distinct !DISubprogram(name: "arch_system_halt", scope: !14296, file: !14296, line: 23, type: !5912, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !14297)
!14296 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14297 = !{!14298}
!14298 = !DILocalVariable(name: "reason", arg: 1, scope: !14295, file: !14296, line: 23, type: !32)
!14299 = !DILocation(line: 0, scope: !14295)
!14300 = !DILocation(line: 55, column: 2, scope: !14301, inlinedAt: !14305)
!14301 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5901, file: !5901, line: 42, type: !5902, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !14302)
!14302 = !{!14303, !14304}
!14303 = !DILocalVariable(name: "key", scope: !14301, file: !5901, line: 44, type: !32)
!14304 = !DILocalVariable(name: "tmp", scope: !14301, file: !5901, line: 53, type: !32)
!14305 = distinct !DILocation(line: 31, column: 8, scope: !14295)
!14306 = !{i64 2280149}
!14307 = !DILocation(line: 0, scope: !14301, inlinedAt: !14305)
!14308 = !DILocation(line: 32, column: 2, scope: !14295)
!14309 = !DILocation(line: 32, column: 2, scope: !14310)
!14310 = distinct !DILexicalBlock(scope: !14311, file: !14296, line: 32, column: 2)
!14311 = distinct !DILexicalBlock(scope: !14295, file: !14296, line: 32, column: 2)
!14312 = distinct !{!14312, !14313, !14314}
!14313 = !DILocation(line: 32, column: 2, scope: !14311)
!14314 = !DILocation(line: 34, column: 2, scope: !14311)
!14315 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14296, file: !14296, line: 39, type: !14316, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !14318)
!14316 = !DISubroutineType(types: !14317)
!14317 = !{null, !32, !14113}
!14318 = !{!14319, !14320}
!14319 = !DILocalVariable(name: "reason", arg: 1, scope: !14315, file: !14296, line: 39, type: !32)
!14320 = !DILocalVariable(name: "esf", arg: 2, scope: !14315, file: !14296, line: 40, type: !14113)
!14321 = !DILocation(line: 0, scope: !14315)
!14322 = !DILocation(line: 46, column: 2, scope: !14315)
!14323 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14296, file: !14296, line: 81, type: !5912, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !14324)
!14324 = !{!14325}
!14325 = !DILocalVariable(name: "reason", arg: 1, scope: !14323, file: !14296, line: 81, type: !32)
!14326 = !DILocation(line: 0, scope: !14323)
!14327 = !DILocation(line: 83, column: 2, scope: !14323)
!14328 = distinct !DISubprogram(name: "z_fatal_error", scope: !14296, file: !14296, line: 96, type: !14316, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !14329)
!14329 = !{!14330, !14331, !14332, !14333}
!14330 = !DILocalVariable(name: "reason", arg: 1, scope: !14328, file: !14296, line: 96, type: !32)
!14331 = !DILocalVariable(name: "esf", arg: 2, scope: !14328, file: !14296, line: 96, type: !14113)
!14332 = !DILocalVariable(name: "key", scope: !14328, file: !14296, line: 102, type: !32)
!14333 = !DILocalVariable(name: "thread", scope: !14328, file: !14296, line: 103, type: !14157)
!14334 = !DILocation(line: 0, scope: !14328)
!14335 = !DILocation(line: 55, column: 2, scope: !14301, inlinedAt: !14336)
!14336 = distinct !DILocation(line: 102, column: 21, scope: !14328)
!14337 = !DILocation(line: 0, scope: !14301, inlinedAt: !14336)
!14338 = !DILocation(line: 119, column: 11, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14328, file: !14296, line: 119, column: 6)
!14340 = !DILocation(line: 119, column: 20, scope: !14339)
!14341 = !DILocation(line: 131, column: 2, scope: !14328)
!14342 = !DILocation(line: 151, column: 7, scope: !14343)
!14343 = distinct !DILexicalBlock(scope: !14344, file: !14296, line: 146, column: 32)
!14344 = distinct !DILexicalBlock(scope: !14328, file: !14296, line: 146, column: 6)
!14345 = !DILocation(line: 151, column: 21, scope: !14346)
!14346 = distinct !DILexicalBlock(scope: !14343, file: !14296, line: 151, column: 7)
!14347 = !DILocation(line: 104, column: 4, scope: !14328)
!14348 = !DILocalVariable(name: "key", arg: 1, scope: !14349, file: !5901, line: 84, type: !32)
!14349 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5901, file: !5901, line: 84, type: !5912, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !14350)
!14350 = !{!14348}
!14351 = !DILocation(line: 0, scope: !14349, inlinedAt: !14352)
!14352 = distinct !DILocation(line: 186, column: 2, scope: !14328)
!14353 = !DILocation(line: 95, column: 2, scope: !14349, inlinedAt: !14352)
!14354 = !{i64 2280966}
!14355 = !DILocation(line: 189, column: 3, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14357, file: !14296, line: 188, column: 41)
!14357 = distinct !DILexicalBlock(scope: !14328, file: !14296, line: 188, column: 6)
!14358 = !DILocation(line: 191, column: 1, scope: !14328)
!14359 = distinct !DISubprogram(name: "k_current_get", scope: !312, file: !312, line: 530, type: !14360, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !473)
!14360 = !DISubroutineType(types: !14361)
!14361 = !{!14362}
!14362 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !14157)
!14363 = !DILocation(line: 535, column: 9, scope: !14359)
!14364 = !DILocation(line: 535, column: 2, scope: !14359)
!14365 = distinct !DISubprogram(name: "k_thread_abort", scope: !3768, file: !3768, line: 188, type: !14366, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !14368)
!14366 = !DISubroutineType(types: !14367)
!14367 = !{null, !14362}
!14368 = !{!14369}
!14369 = !DILocalVariable(name: "thread", arg: 1, scope: !14365, file: !3768, line: 188, type: !14362)
!14370 = !DILocation(line: 0, scope: !14365)
!14371 = !DILocation(line: 197, column: 2, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14365, file: !3768, line: 197, column: 2)
!14373 = !{i64 2155061720}
!14374 = !DILocation(line: 198, column: 2, scope: !14365)
!14375 = !DILocation(line: 199, column: 1, scope: !14365)
!14376 = distinct !DISubprogram(name: "z_current_get", scope: !3768, file: !3768, line: 173, type: !14360, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3291, retainedNodes: !473)
!14377 = !DILocation(line: 180, column: 2, scope: !14378)
!14378 = distinct !DILexicalBlock(scope: !14376, file: !3768, line: 180, column: 2)
!14379 = !{i64 2155061652}
!14380 = !DILocation(line: 181, column: 9, scope: !14376)
!14381 = !DILocation(line: 181, column: 2, scope: !14376)
!14382 = distinct !DISubprogram(name: "z_early_memset", scope: !2063, file: !2063, line: 108, type: !14383, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14385)
!14383 = !DISubroutineType(types: !14384)
!14384 = !{null, !102, !103, !356}
!14385 = !{!14386, !14387, !14388}
!14386 = !DILocalVariable(name: "dst", arg: 1, scope: !14382, file: !2063, line: 108, type: !102)
!14387 = !DILocalVariable(name: "c", arg: 2, scope: !14382, file: !2063, line: 108, type: !103)
!14388 = !DILocalVariable(name: "n", arg: 3, scope: !14382, file: !2063, line: 108, type: !356)
!14389 = !DILocation(line: 0, scope: !14382)
!14390 = !DILocation(line: 110, column: 9, scope: !14382)
!14391 = !DILocation(line: 111, column: 1, scope: !14382)
!14392 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2063, file: !2063, line: 121, type: !14393, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14395)
!14393 = !DISubroutineType(types: !14394)
!14394 = !{null, !102, !13, !356}
!14395 = !{!14396, !14397, !14398}
!14396 = !DILocalVariable(name: "dst", arg: 1, scope: !14392, file: !2063, line: 121, type: !102)
!14397 = !DILocalVariable(name: "src", arg: 2, scope: !14392, file: !2063, line: 121, type: !13)
!14398 = !DILocalVariable(name: "n", arg: 3, scope: !14392, file: !2063, line: 121, type: !356)
!14399 = !DILocation(line: 0, scope: !14392)
!14400 = !DILocation(line: 123, column: 9, scope: !14392)
!14401 = !DILocation(line: 124, column: 1, scope: !14392)
!14402 = distinct !DISubprogram(name: "z_bss_zero", scope: !2063, file: !2063, line: 132, type: !3328, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !473)
!14403 = !DILocation(line: 143, column: 2, scope: !14402)
!14404 = !DILocation(line: 168, column: 1, scope: !14402)
!14405 = distinct !DISubprogram(name: "z_init_cpu", scope: !2063, file: !2063, line: 372, type: !8563, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14406)
!14406 = !{!14407}
!14407 = !DILocalVariable(name: "id", arg: 1, scope: !14405, file: !2063, line: 372, type: !103)
!14408 = !DILocation(line: 0, scope: !14405)
!14409 = !DILocation(line: 374, column: 2, scope: !14405)
!14410 = !DILocation(line: 375, column: 34, scope: !14405)
!14411 = !DILocation(line: 375, column: 19, scope: !14405)
!14412 = !DILocation(line: 375, column: 31, scope: !14405)
!14413 = !DILocation(line: 376, column: 24, scope: !14405)
!14414 = !DILocation(line: 376, column: 19, scope: !14405)
!14415 = !DILocation(line: 376, column: 22, scope: !14405)
!14416 = !DILocation(line: 378, column: 26, scope: !14405)
!14417 = !DILocation(line: 378, column: 4, scope: !14405)
!14418 = !DILocation(line: 378, column: 50, scope: !14405)
!14419 = !DILocation(line: 377, column: 19, scope: !14405)
!14420 = !DILocation(line: 377, column: 29, scope: !14405)
!14421 = !DILocation(line: 384, column: 1, scope: !14405)
!14422 = distinct !DISubprogram(name: "init_idle_thread", scope: !2063, file: !2063, line: 343, type: !8563, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14423)
!14423 = !{!14424, !14425, !14426, !14429}
!14424 = !DILocalVariable(name: "i", arg: 1, scope: !14422, file: !2063, line: 343, type: !103)
!14425 = !DILocalVariable(name: "thread", scope: !14422, file: !2063, line: 345, type: !2155)
!14426 = !DILocalVariable(name: "stack", scope: !14422, file: !2063, line: 346, type: !14427)
!14427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14428, size: 32)
!14428 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3647, line: 44, baseType: !2269)
!14429 = !DILocalVariable(name: "tname", scope: !14422, file: !2063, line: 358, type: !1097)
!14430 = !DILocation(line: 0, scope: !14422)
!14431 = !DILocation(line: 345, column: 29, scope: !14422)
!14432 = !DILocation(line: 346, column: 28, scope: !14422)
!14433 = !DILocation(line: 362, column: 37, scope: !14422)
!14434 = !DILocation(line: 362, column: 36, scope: !14422)
!14435 = !DILocation(line: 361, column: 2, scope: !14422)
!14436 = !DILocation(line: 365, column: 2, scope: !14422)
!14437 = !DILocation(line: 370, column: 1, scope: !14422)
!14438 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2270, file: !2270, line: 331, type: !14439, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14441)
!14439 = !DISubroutineType(types: !14440)
!14440 = !{!1097, !14427}
!14441 = !{!14442}
!14442 = !DILocalVariable(name: "sym", arg: 1, scope: !14438, file: !2270, line: 331, type: !14427)
!14443 = !DILocation(line: 0, scope: !14438)
!14444 = !DILocation(line: 333, column: 21, scope: !14438)
!14445 = !DILocation(line: 333, column: 2, scope: !14438)
!14446 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14447, file: !14447, line: 155, type: !14448, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14450)
!14447 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14448 = !DISubroutineType(types: !14449)
!14449 = !{null, !2155}
!14450 = !{!14451}
!14451 = !DILocalVariable(name: "thread", arg: 1, scope: !14446, file: !14447, line: 155, type: !2155)
!14452 = !DILocation(line: 0, scope: !14446)
!14453 = !DILocation(line: 157, column: 15, scope: !14446)
!14454 = !DILocation(line: 157, column: 28, scope: !14446)
!14455 = !DILocation(line: 158, column: 1, scope: !14446)
!14456 = distinct !DISubprogram(name: "z_cstart", scope: !2063, file: !2063, line: 501, type: !3328, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14457)
!14457 = !{!14458}
!14458 = !DILocalVariable(name: "dummy_thread", scope: !14456, file: !2063, line: 518, type: !2156)
!14459 = !DILocation(line: 507, column: 2, scope: !14456)
!14460 = !DILocation(line: 43, column: 14, scope: !14461, inlinedAt: !14465)
!14461 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14462, file: !14462, line: 40, type: !3328, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14463)
!14462 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14463 = !{!14464}
!14464 = !DILocalVariable(name: "msp", scope: !14461, file: !14462, line: 42, type: !132)
!14465 = distinct !DILocation(line: 44, column: 2, scope: !14466, inlinedAt: !14468)
!14466 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14467, file: !14467, line: 42, type: !3328, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !473)
!14467 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14468 = distinct !DILocation(line: 510, column: 2, scope: !14456)
!14469 = !DILocation(line: 43, column: 3, scope: !14461, inlinedAt: !14465)
!14470 = !DILocation(line: 43, column: 60, scope: !14461, inlinedAt: !14465)
!14471 = !DILocation(line: 0, scope: !14461, inlinedAt: !14465)
!14472 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14473, file: !6921, line: 1153, type: !132)
!14473 = distinct !DISubprogram(name: "__set_MSP", scope: !6921, file: !6921, line: 1153, type: !7012, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14474)
!14474 = !{!14472}
!14475 = !DILocation(line: 0, scope: !14473, inlinedAt: !14476)
!14476 = distinct !DILocation(line: 46, column: 2, scope: !14461, inlinedAt: !14465)
!14477 = !DILocation(line: 1155, column: 3, scope: !14473, inlinedAt: !14476)
!14478 = !{i64 3746088}
!14479 = !DILocation(line: 62, column: 11, scope: !14461, inlinedAt: !14465)
!14480 = !DILocation(line: 102, column: 2, scope: !14481, inlinedAt: !14482)
!14481 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7715, file: !7715, line: 97, type: !3328, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !473)
!14482 = distinct !DILocation(line: 45, column: 2, scope: !14466, inlinedAt: !14468)
!14483 = !DILocation(line: 108, column: 2, scope: !14481, inlinedAt: !14482)
!14484 = !DILocation(line: 112, column: 2, scope: !14481, inlinedAt: !14482)
!14485 = !DILocation(line: 113, column: 2, scope: !14481, inlinedAt: !14482)
!14486 = !DILocation(line: 114, column: 2, scope: !14481, inlinedAt: !14482)
!14487 = !DILocation(line: 116, column: 2, scope: !14481, inlinedAt: !14482)
!14488 = !DILocation(line: 123, column: 13, scope: !14481, inlinedAt: !14482)
!14489 = !DILocation(line: 46, column: 2, scope: !14466, inlinedAt: !14468)
!14490 = !DILocation(line: 47, column: 2, scope: !14466, inlinedAt: !14468)
!14491 = !DILocation(line: 174, column: 12, scope: !14492, inlinedAt: !14493)
!14492 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7715, file: !7715, line: 169, type: !3328, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !473)
!14493 = distinct !DILocation(line: 48, column: 2, scope: !14466, inlinedAt: !14468)
!14494 = !DILocation(line: 179, column: 12, scope: !14492, inlinedAt: !14493)
!14495 = !DILocation(line: 50, column: 2, scope: !14466, inlinedAt: !14468)
!14496 = !DILocation(line: 57, column: 2, scope: !14466, inlinedAt: !14468)
!14497 = !DILocation(line: 518, column: 2, scope: !14456)
!14498 = !DILocation(line: 518, column: 18, scope: !14456)
!14499 = !DILocation(line: 520, column: 2, scope: !14456)
!14500 = !DILocation(line: 523, column: 2, scope: !14456)
!14501 = !DILocation(line: 526, column: 2, scope: !14456)
!14502 = !DILocation(line: 527, column: 2, scope: !14456)
!14503 = !DILocation(line: 543, column: 24, scope: !14456)
!14504 = !DILocation(line: 543, column: 2, scope: !14456)
!14505 = !DILocation(line: 0, scope: !2289)
!14506 = !DILocation(line: 246, column: 15, scope: !2307)
!14507 = !DILocation(line: 246, column: 36, scope: !2306)
!14508 = !DILocation(line: 246, column: 2, scope: !2307)
!14509 = !DILocation(line: 247, column: 37, scope: !2305)
!14510 = !DILocation(line: 0, scope: !2305)
!14511 = !DILocation(line: 248, column: 19, scope: !2305)
!14512 = !DILocation(line: 248, column: 12, scope: !2305)
!14513 = !DILocation(line: 250, column: 11, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !2305, file: !2063, line: 250, column: 7)
!14515 = !DILocation(line: 250, column: 7, scope: !2305)
!14516 = !DILocation(line: 254, column: 11, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14518, file: !2063, line: 254, column: 8)
!14518 = distinct !DILexicalBlock(scope: !14514, file: !2063, line: 250, column: 20)
!14519 = !DILocation(line: 254, column: 8, scope: !14518)
!14520 = !DILocation(line: 255, column: 9, scope: !14521)
!14521 = distinct !DILexicalBlock(scope: !14517, file: !2063, line: 254, column: 17)
!14522 = !DILocation(line: 258, column: 9, scope: !14521)
!14523 = !DILocation(line: 261, column: 28, scope: !14521)
!14524 = !DILocation(line: 261, column: 10, scope: !14521)
!14525 = !DILocation(line: 261, column: 17, scope: !14521)
!14526 = !DILocation(line: 261, column: 26, scope: !14521)
!14527 = !DILocation(line: 262, column: 4, scope: !14521)
!14528 = !DILocation(line: 263, column: 9, scope: !14518)
!14529 = !DILocation(line: 263, column: 16, scope: !14518)
!14530 = !DILocation(line: 263, column: 28, scope: !14518)
!14531 = !DILocation(line: 264, column: 3, scope: !14518)
!14532 = !DILocation(line: 246, column: 60, scope: !2306)
!14533 = distinct !{!14533, !14508, !14534}
!14534 = !DILocation(line: 265, column: 2, scope: !2307)
!14535 = !DILocation(line: 266, column: 1, scope: !2289)
!14536 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6955, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14537)
!14537 = !{!14538, !14539}
!14538 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14536, file: !507, line: 1814, type: !771)
!14539 = !DILocalVariable(name: "priority", arg: 2, scope: !14536, file: !507, line: 1814, type: !132)
!14540 = !DILocation(line: 0, scope: !14536)
!14541 = !DILocation(line: 1822, column: 48, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14543, file: !507, line: 1821, column: 3)
!14543 = distinct !DILexicalBlock(scope: !14536, file: !507, line: 1816, column: 7)
!14544 = !DILocation(line: 1822, column: 32, scope: !14542)
!14545 = !DILocation(line: 1822, column: 40, scope: !14542)
!14546 = !DILocation(line: 1822, column: 5, scope: !14542)
!14547 = !DILocation(line: 1822, column: 46, scope: !14542)
!14548 = !DILocation(line: 1824, column: 1, scope: !14536)
!14549 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14467, file: !14467, line: 32, type: !3328, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!14550 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14551, file: !14551, line: 215, type: !14448, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14552)
!14551 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14552 = !{!14553}
!14553 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14550, file: !14551, line: 215, type: !2155)
!14554 = !DILocation(line: 0, scope: !14550)
!14555 = !DILocation(line: 217, column: 21, scope: !14550)
!14556 = !DILocation(line: 217, column: 34, scope: !14550)
!14557 = !DILocation(line: 221, column: 21, scope: !14550)
!14558 = !DILocation(line: 221, column: 34, scope: !14550)
!14559 = !DILocation(line: 223, column: 27, scope: !14550)
!14560 = !DILocation(line: 223, column: 33, scope: !14550)
!14561 = !DILocation(line: 224, column: 27, scope: !14550)
!14562 = !DILocation(line: 224, column: 32, scope: !14550)
!14563 = !DILocation(line: 232, column: 16, scope: !14550)
!14564 = !DILocation(line: 232, column: 30, scope: !14550)
!14565 = !DILocation(line: 239, column: 24, scope: !14550)
!14566 = !DILocation(line: 240, column: 1, scope: !14550)
!14567 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2063, file: !2063, line: 399, type: !14568, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14570)
!14568 = !DISubroutineType(types: !14569)
!14569 = !{!1097}
!14570 = !{!14571}
!14571 = !DILocalVariable(name: "stack_ptr", scope: !14567, file: !2063, line: 401, type: !1097)
!14572 = !DILocation(line: 404, column: 2, scope: !14567)
!14573 = !DILocation(line: 416, column: 24, scope: !14567)
!14574 = !DILocation(line: 418, column: 14, scope: !14567)
!14575 = !DILocation(line: 0, scope: !14567)
!14576 = !DILocation(line: 423, column: 2, scope: !14567)
!14577 = !DILocation(line: 424, column: 2, scope: !14567)
!14578 = !DILocation(line: 426, column: 2, scope: !14567)
!14579 = !DILocation(line: 428, column: 2, scope: !14567)
!14580 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2063, file: !2063, line: 432, type: !14581, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14583)
!14581 = !DISubroutineType(types: !14582)
!14582 = !{null, !1097}
!14583 = !{!14584}
!14584 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14580, file: !2063, line: 432, type: !1097)
!14585 = !DILocation(line: 0, scope: !14580)
!14586 = !DILocation(line: 435, column: 2, scope: !14580)
!14587 = !DILocation(line: 445, column: 2, scope: !14580)
!14588 = distinct !DISubprogram(name: "bg_thread_main", scope: !2063, file: !2063, line: 277, type: !3649, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2059, retainedNodes: !14589)
!14589 = !{!14590, !14591, !14592}
!14590 = !DILocalVariable(name: "unused1", arg: 1, scope: !14588, file: !2063, line: 277, type: !102)
!14591 = !DILocalVariable(name: "unused2", arg: 2, scope: !14588, file: !2063, line: 277, type: !102)
!14592 = !DILocalVariable(name: "unused3", arg: 3, scope: !14588, file: !2063, line: 277, type: !102)
!14593 = !DILocation(line: 0, scope: !14588)
!14594 = !DILocation(line: 291, column: 20, scope: !14588)
!14595 = !DILocation(line: 293, column: 2, scope: !14588)
!14596 = !DILocation(line: 297, column: 2, scope: !14588)
!14597 = !DILocation(line: 305, column: 2, scope: !14588)
!14598 = !DILocation(line: 307, column: 2, scope: !14588)
!14599 = !DILocation(line: 330, column: 8, scope: !14588)
!14600 = !DILocation(line: 333, column: 34, scope: !14588)
!14601 = !DILocation(line: 339, column: 1, scope: !14588)
!14602 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2318, file: !2318, line: 45, type: !14603, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14611)
!14603 = !DISubroutineType(types: !14604)
!14604 = !{null, !14605, !102}
!14605 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !312, line: 103, baseType: !14606)
!14606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14607, size: 32)
!14607 = !DISubroutineType(types: !14608)
!14608 = !{null, !14609, !102}
!14609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14610, size: 32)
!14610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2323)
!14611 = !{!14612, !14613}
!14612 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14602, file: !2318, line: 45, type: !14605)
!14613 = !DILocalVariable(name: "user_data", arg: 2, scope: !14602, file: !2318, line: 45, type: !102)
!14614 = !DILocation(line: 0, scope: !14602)
!14615 = !DILocation(line: 71, column: 1, scope: !14602)
!14616 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2318, file: !2318, line: 73, type: !14603, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14617)
!14617 = !{!14618, !14619}
!14618 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14616, file: !2318, line: 73, type: !14605)
!14619 = !DILocalVariable(name: "user_data", arg: 2, scope: !14616, file: !2318, line: 73, type: !102)
!14620 = !DILocation(line: 0, scope: !14616)
!14621 = !DILocation(line: 95, column: 1, scope: !14616)
!14622 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2318, file: !2318, line: 97, type: !7716, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !473)
!14623 = !DILocation(line: 1031, column: 3, scope: !14624, inlinedAt: !14627)
!14624 = distinct !DISubprogram(name: "__get_IPSR", scope: !6921, file: !6921, line: 1027, type: !7002, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14625)
!14625 = !{!14626}
!14626 = !DILocalVariable(name: "result", scope: !14624, file: !6921, line: 1029, type: !132)
!14627 = distinct !DILocation(line: 48, column: 10, scope: !14628, inlinedAt: !14629)
!14628 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7715, file: !7715, line: 46, type: !7716, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !473)
!14629 = distinct !DILocation(line: 99, column: 9, scope: !14622)
!14630 = !{i64 3751739}
!14631 = !DILocation(line: 0, scope: !14624, inlinedAt: !14627)
!14632 = !DILocation(line: 48, column: 9, scope: !14628, inlinedAt: !14629)
!14633 = !DILocation(line: 99, column: 2, scope: !14622)
!14634 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2318, file: !2318, line: 106, type: !3328, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !473)
!14635 = !DILocation(line: 108, column: 2, scope: !14634)
!14636 = !DILocation(line: 108, column: 17, scope: !14634)
!14637 = !DILocation(line: 108, column: 30, scope: !14634)
!14638 = !DILocation(line: 109, column: 1, scope: !14634)
!14639 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2318, file: !2318, line: 116, type: !3328, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !473)
!14640 = !DILocation(line: 118, column: 2, scope: !14639)
!14641 = !DILocation(line: 118, column: 17, scope: !14639)
!14642 = !DILocation(line: 118, column: 30, scope: !14639)
!14643 = !DILocation(line: 119, column: 1, scope: !14639)
!14644 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2318, file: !2318, line: 126, type: !7716, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !473)
!14645 = !DILocation(line: 128, column: 10, scope: !14644)
!14646 = !DILocation(line: 128, column: 25, scope: !14644)
!14647 = !DILocation(line: 128, column: 38, scope: !14644)
!14648 = !DILocation(line: 128, column: 53, scope: !14644)
!14649 = !DILocation(line: 128, column: 2, scope: !14644)
!14650 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2318, file: !2318, line: 187, type: !14651, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14653)
!14651 = !DISubroutineType(types: !14652)
!14652 = !{!103, !2322, !155}
!14653 = !{!14654, !14655}
!14654 = !DILocalVariable(name: "thread", arg: 1, scope: !14650, file: !2318, line: 187, type: !2322)
!14655 = !DILocalVariable(name: "value", arg: 2, scope: !14650, file: !2318, line: 187, type: !155)
!14656 = !DILocation(line: 0, scope: !14650)
!14657 = !DILocation(line: 206, column: 2, scope: !14650)
!14658 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2318, file: !2318, line: 238, type: !14659, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14661)
!14659 = !DISubroutineType(types: !14660)
!14660 = !{!155, !2322}
!14661 = !{!14662}
!14662 = !DILocalVariable(name: "thread", arg: 1, scope: !14658, file: !2318, line: 238, type: !2322)
!14663 = !DILocation(line: 0, scope: !14658)
!14664 = !DILocation(line: 244, column: 2, scope: !14658)
!14665 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2318, file: !2318, line: 248, type: !14666, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14668)
!14666 = !DISubroutineType(types: !14667)
!14667 = !{!103, !2321, !1097, !356}
!14668 = !{!14669, !14670, !14671}
!14669 = !DILocalVariable(name: "thread", arg: 1, scope: !14665, file: !2318, line: 248, type: !2321)
!14670 = !DILocalVariable(name: "buf", arg: 2, scope: !14665, file: !2318, line: 248, type: !1097)
!14671 = !DILocalVariable(name: "size", arg: 3, scope: !14665, file: !2318, line: 248, type: !356)
!14672 = !DILocation(line: 0, scope: !14665)
!14673 = !DILocation(line: 257, column: 2, scope: !14665)
!14674 = !DILocation(line: 0, scope: !2317)
!14675 = !DILocation(line: 281, column: 11, scope: !14676)
!14676 = distinct !DILexicalBlock(scope: !2317, file: !2318, line: 281, column: 6)
!14677 = !DILocation(line: 281, column: 20, scope: !14676)
!14678 = !DILocation(line: 275, column: 45, scope: !2317)
!14679 = !DILocation(line: 285, column: 10, scope: !2317)
!14680 = !DILocation(line: 0, scope: !2438)
!14681 = !DILocation(line: 293, column: 39, scope: !14682)
!14682 = distinct !DILexicalBlock(scope: !2438, file: !2318, line: 293, column: 2)
!14683 = !DILocation(line: 293, column: 2, scope: !2438)
!14684 = !DILocation(line: 273, column: 14, scope: !2317)
!14685 = !DILocation(line: 309, column: 2, scope: !2317)
!14686 = !DILocation(line: 309, column: 11, scope: !2317)
!14687 = !DILocation(line: 311, column: 2, scope: !2317)
!14688 = !DILocation(line: 293, column: 26, scope: !14682)
!14689 = !DILocation(line: 294, column: 9, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14682, file: !2318, line: 293, column: 54)
!14691 = !DILocation(line: 295, column: 21, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14690, file: !2318, line: 295, column: 7)
!14693 = !DILocation(line: 295, column: 28, scope: !14692)
!14694 = !DILocation(line: 295, column: 7, scope: !14690)
!14695 = !DILocation(line: 299, column: 25, scope: !14690)
!14696 = !DILocation(line: 299, column: 41, scope: !14690)
!14697 = !DILocation(line: 300, column: 7, scope: !14690)
!14698 = !DILocation(line: 300, column: 26, scope: !14690)
!14699 = !DILocation(line: 299, column: 10, scope: !14690)
!14700 = !DILocation(line: 299, column: 7, scope: !14690)
!14701 = !DILocation(line: 302, column: 16, scope: !14690)
!14702 = !DILocation(line: 304, column: 20, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14690, file: !2318, line: 304, column: 7)
!14704 = !DILocation(line: 304, column: 7, scope: !14690)
!14705 = !DILocation(line: 305, column: 26, scope: !14706)
!14706 = distinct !DILexicalBlock(scope: !14703, file: !2318, line: 304, column: 26)
!14707 = !DILocation(line: 305, column: 42, scope: !14706)
!14708 = !DILocation(line: 305, column: 11, scope: !14706)
!14709 = !DILocation(line: 305, column: 8, scope: !14706)
!14710 = !DILocation(line: 306, column: 3, scope: !14706)
!14711 = !DILocation(line: 293, column: 50, scope: !14682)
!14712 = !DILocation(line: 312, column: 1, scope: !2317)
!14713 = distinct !DISubprogram(name: "copy_bytes", scope: !2318, file: !2318, line: 261, type: !14714, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14716)
!14714 = !DISubroutineType(types: !14715)
!14715 = !{!356, !1097, !356, !155, !356}
!14716 = !{!14717, !14718, !14719, !14720, !14721}
!14717 = !DILocalVariable(name: "dest", arg: 1, scope: !14713, file: !2318, line: 261, type: !1097)
!14718 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14713, file: !2318, line: 261, type: !356)
!14719 = !DILocalVariable(name: "src", arg: 3, scope: !14713, file: !2318, line: 261, type: !155)
!14720 = !DILocalVariable(name: "src_size", arg: 4, scope: !14713, file: !2318, line: 261, type: !356)
!14721 = !DILocalVariable(name: "bytes_to_copy", scope: !14713, file: !2318, line: 263, type: !356)
!14722 = !DILocation(line: 0, scope: !14713)
!14723 = !DILocation(line: 265, column: 18, scope: !14713)
!14724 = !DILocation(line: 266, column: 2, scope: !14713)
!14725 = !DILocation(line: 268, column: 2, scope: !14713)
!14726 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2318, file: !2318, line: 383, type: !14727, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14729)
!14727 = !DISubroutineType(types: !14728)
!14728 = !{null, !2322}
!14729 = !{!14730}
!14730 = !DILocalVariable(name: "thread", arg: 1, scope: !14726, file: !2318, line: 383, type: !2322)
!14731 = !DILocation(line: 0, scope: !14726)
!14732 = !DILocation(line: 387, column: 2, scope: !14726)
!14733 = !DILocation(line: 388, column: 1, scope: !14726)
!14734 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2318, file: !2318, line: 528, type: !14735, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14742)
!14735 = !DISubroutineType(types: !14736)
!14736 = !{!1097, !2322, !14737, !356, !3646, !102, !102, !102, !103, !132, !155}
!14737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14738, size: 32)
!14738 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3647, line: 44, baseType: !14739)
!14739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2270, line: 47, size: 8, elements: !14740)
!14740 = !{!14741}
!14741 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14739, file: !2270, line: 48, baseType: !108, size: 8)
!14742 = !{!14743, !14744, !14745, !14746, !14747, !14748, !14749, !14750, !14751, !14752, !14753}
!14743 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14734, file: !2318, line: 528, type: !2322)
!14744 = !DILocalVariable(name: "stack", arg: 2, scope: !14734, file: !2318, line: 529, type: !14737)
!14745 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14734, file: !2318, line: 529, type: !356)
!14746 = !DILocalVariable(name: "entry", arg: 4, scope: !14734, file: !2318, line: 530, type: !3646)
!14747 = !DILocalVariable(name: "p1", arg: 5, scope: !14734, file: !2318, line: 531, type: !102)
!14748 = !DILocalVariable(name: "p2", arg: 6, scope: !14734, file: !2318, line: 531, type: !102)
!14749 = !DILocalVariable(name: "p3", arg: 7, scope: !14734, file: !2318, line: 531, type: !102)
!14750 = !DILocalVariable(name: "prio", arg: 8, scope: !14734, file: !2318, line: 532, type: !103)
!14751 = !DILocalVariable(name: "options", arg: 9, scope: !14734, file: !2318, line: 532, type: !132)
!14752 = !DILocalVariable(name: "name", arg: 10, scope: !14734, file: !2318, line: 532, type: !155)
!14753 = !DILocalVariable(name: "stack_ptr", scope: !14734, file: !2318, line: 534, type: !1097)
!14754 = !DILocation(line: 0, scope: !14734)
!14755 = !DILocation(line: 550, column: 28, scope: !14734)
!14756 = !DILocation(line: 550, column: 2, scope: !14734)
!14757 = !DILocation(line: 553, column: 34, scope: !14734)
!14758 = !DILocation(line: 553, column: 2, scope: !14734)
!14759 = !DILocation(line: 554, column: 14, scope: !14734)
!14760 = !DILocation(line: 564, column: 2, scope: !14734)
!14761 = !DILocation(line: 567, column: 14, scope: !14734)
!14762 = !DILocation(line: 567, column: 24, scope: !14734)
!14763 = !DILocation(line: 612, column: 7, scope: !14764)
!14764 = distinct !DILexicalBlock(scope: !14734, file: !2318, line: 612, column: 6)
!14765 = !DILocation(line: 612, column: 6, scope: !14734)
!14766 = !DILocation(line: 627, column: 40, scope: !14734)
!14767 = !DILocation(line: 637, column: 2, scope: !14734)
!14768 = !DILocation(line: 613, column: 15, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14764, file: !2318, line: 612, column: 17)
!14770 = !DILocation(line: 613, column: 29, scope: !14769)
!14771 = !DILocation(line: 638, column: 1, scope: !14734)
!14772 = distinct !DISubprogram(name: "z_waitq_init", scope: !14773, file: !14773, line: 47, type: !14774, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14776)
!14773 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14774 = !DISubroutineType(types: !14775)
!14775 = !{null, !2353}
!14776 = !{!14777}
!14777 = !DILocalVariable(name: "w", arg: 1, scope: !14772, file: !14773, line: 47, type: !2353)
!14778 = !DILocation(line: 0, scope: !14772)
!14779 = !DILocation(line: 49, column: 21, scope: !14772)
!14780 = !DILocation(line: 49, column: 2, scope: !14772)
!14781 = !DILocation(line: 50, column: 1, scope: !14772)
!14782 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2318, file: !2318, line: 791, type: !14783, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14786)
!14783 = !DISubroutineType(types: !14784)
!14784 = !{null, !14785, !103, !132, !32}
!14785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 32)
!14786 = !{!14787, !14788, !14789, !14790}
!14787 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14782, file: !2318, line: 791, type: !14785)
!14788 = !DILocalVariable(name: "priority", arg: 2, scope: !14782, file: !2318, line: 791, type: !103)
!14789 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14782, file: !2318, line: 792, type: !132)
!14790 = !DILocalVariable(name: "options", arg: 4, scope: !14782, file: !2318, line: 792, type: !32)
!14791 = !DILocation(line: 0, scope: !14782)
!14792 = !DILocation(line: 795, column: 15, scope: !14782)
!14793 = !DILocation(line: 795, column: 25, scope: !14782)
!14794 = !DILocation(line: 796, column: 30, scope: !14782)
!14795 = !DILocation(line: 796, column: 15, scope: !14782)
!14796 = !DILocation(line: 796, column: 28, scope: !14782)
!14797 = !DILocation(line: 797, column: 30, scope: !14782)
!14798 = !DILocation(line: 797, column: 15, scope: !14782)
!14799 = !DILocation(line: 797, column: 28, scope: !14782)
!14800 = !DILocation(line: 799, column: 22, scope: !14782)
!14801 = !DILocation(line: 799, column: 15, scope: !14782)
!14802 = !DILocation(line: 799, column: 20, scope: !14782)
!14803 = !DILocation(line: 801, column: 15, scope: !14782)
!14804 = !DILocation(line: 801, column: 28, scope: !14782)
!14805 = !DILocation(line: 814, column: 2, scope: !14782)
!14806 = !DILocation(line: 815, column: 1, scope: !14782)
!14807 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2318, file: !2318, line: 449, type: !14808, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14810)
!14808 = !DISubroutineType(types: !14809)
!14809 = !{!1097, !2322, !14737, !356}
!14810 = !{!14811, !14812, !14813, !14814, !14815, !14816, !14817, !14818}
!14811 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14807, file: !2318, line: 449, type: !2322)
!14812 = !DILocalVariable(name: "stack", arg: 2, scope: !14807, file: !2318, line: 450, type: !14737)
!14813 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14807, file: !2318, line: 450, type: !356)
!14814 = !DILocalVariable(name: "stack_obj_size", scope: !14807, file: !2318, line: 452, type: !356)
!14815 = !DILocalVariable(name: "stack_buf_size", scope: !14807, file: !2318, line: 452, type: !356)
!14816 = !DILocalVariable(name: "stack_ptr", scope: !14807, file: !2318, line: 453, type: !1097)
!14817 = !DILocalVariable(name: "stack_buf_start", scope: !14807, file: !2318, line: 453, type: !1097)
!14818 = !DILocalVariable(name: "delta", scope: !14807, file: !2318, line: 454, type: !356)
!14819 = !DILocation(line: 0, scope: !14807)
!14820 = !DILocation(line: 465, column: 20, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14807, file: !2318, line: 463, column: 2)
!14822 = !DILocation(line: 466, column: 21, scope: !14821)
!14823 = !DILocation(line: 473, column: 28, scope: !14807)
!14824 = !DILocation(line: 514, column: 33, scope: !14807)
!14825 = !DILocation(line: 514, column: 25, scope: !14807)
!14826 = !DILocation(line: 514, column: 31, scope: !14807)
!14827 = !DILocation(line: 515, column: 25, scope: !14807)
!14828 = !DILocation(line: 515, column: 30, scope: !14807)
!14829 = !DILocation(line: 516, column: 25, scope: !14807)
!14830 = !DILocation(line: 516, column: 31, scope: !14807)
!14831 = !DILocation(line: 520, column: 2, scope: !14807)
!14832 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2270, file: !2270, line: 331, type: !14833, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14835)
!14833 = !DISubroutineType(types: !14834)
!14834 = !{!1097, !14737}
!14835 = !{!14836}
!14836 = !DILocalVariable(name: "sym", arg: 1, scope: !14832, file: !2270, line: 331, type: !14737)
!14837 = !DILocation(line: 0, scope: !14832)
!14838 = !DILocation(line: 333, column: 21, scope: !14832)
!14839 = !DILocation(line: 333, column: 2, scope: !14832)
!14840 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14841, file: !14841, line: 40, type: !14842, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14844)
!14841 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14842 = !DISubroutineType(types: !14843)
!14843 = !{null, !14785}
!14844 = !{!14845}
!14845 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14840, file: !14841, line: 40, type: !14785)
!14846 = !DILocation(line: 0, scope: !14840)
!14847 = !DILocation(line: 42, column: 31, scope: !14840)
!14848 = !DILocation(line: 42, column: 2, scope: !14840)
!14849 = !DILocation(line: 43, column: 1, scope: !14840)
!14850 = distinct !DISubprogram(name: "z_init_timeout", scope: !14841, file: !14841, line: 25, type: !2379, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14851)
!14851 = !{!14852}
!14852 = !DILocalVariable(name: "to", arg: 1, scope: !14850, file: !14841, line: 25, type: !2381)
!14853 = !DILocation(line: 0, scope: !14850)
!14854 = !DILocation(line: 27, column: 22, scope: !14850)
!14855 = !DILocation(line: 27, column: 2, scope: !14850)
!14856 = !DILocation(line: 28, column: 1, scope: !14850)
!14857 = distinct !DISubprogram(name: "sys_dnode_init", scope: !321, file: !321, line: 211, type: !14858, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14860)
!14858 = !DISubroutineType(types: !14859)
!14859 = !{null, !2425}
!14860 = !{!14861}
!14861 = !DILocalVariable(name: "node", arg: 1, scope: !14857, file: !321, line: 211, type: !2425)
!14862 = !DILocation(line: 0, scope: !14857)
!14863 = !DILocation(line: 213, column: 8, scope: !14857)
!14864 = !DILocation(line: 213, column: 13, scope: !14857)
!14865 = !DILocation(line: 214, column: 8, scope: !14857)
!14866 = !DILocation(line: 214, column: 13, scope: !14857)
!14867 = !DILocation(line: 215, column: 1, scope: !14857)
!14868 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !14869, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14872)
!14869 = !DISubroutineType(types: !14870)
!14870 = !{null, !14871}
!14871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 32)
!14872 = !{!14873}
!14873 = !DILocalVariable(name: "list", arg: 1, scope: !14868, file: !321, line: 197, type: !14871)
!14874 = !DILocation(line: 0, scope: !14868)
!14875 = !DILocation(line: 199, column: 8, scope: !14868)
!14876 = !DILocation(line: 199, column: 13, scope: !14868)
!14877 = !DILocation(line: 200, column: 8, scope: !14868)
!14878 = !DILocation(line: 200, column: 13, scope: !14868)
!14879 = !DILocation(line: 201, column: 1, scope: !14868)
!14880 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2318, file: !2318, line: 641, type: !14881, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14887)
!14881 = !DISubroutineType(types: !14882)
!14882 = !{!2321, !2322, !14737, !356, !3646, !102, !102, !102, !103, !132, !14883}
!14883 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1800, line: 67, baseType: !14884)
!14884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1800, line: 65, size: 64, elements: !14885)
!14885 = !{!14886}
!14886 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14884, file: !1800, line: 66, baseType: !1799, size: 64)
!14887 = !{!14888, !14889, !14890, !14891, !14892, !14893, !14894, !14895, !14896, !14897}
!14888 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14880, file: !2318, line: 641, type: !2322)
!14889 = !DILocalVariable(name: "stack", arg: 2, scope: !14880, file: !2318, line: 642, type: !14737)
!14890 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14880, file: !2318, line: 643, type: !356)
!14891 = !DILocalVariable(name: "entry", arg: 4, scope: !14880, file: !2318, line: 643, type: !3646)
!14892 = !DILocalVariable(name: "p1", arg: 5, scope: !14880, file: !2318, line: 644, type: !102)
!14893 = !DILocalVariable(name: "p2", arg: 6, scope: !14880, file: !2318, line: 644, type: !102)
!14894 = !DILocalVariable(name: "p3", arg: 7, scope: !14880, file: !2318, line: 644, type: !102)
!14895 = !DILocalVariable(name: "prio", arg: 8, scope: !14880, file: !2318, line: 645, type: !103)
!14896 = !DILocalVariable(name: "options", arg: 9, scope: !14880, file: !2318, line: 645, type: !132)
!14897 = !DILocalVariable(name: "delay", arg: 10, scope: !14880, file: !2318, line: 645, type: !14883)
!14898 = !DILocation(line: 0, scope: !14880)
!14899 = !DILocation(line: 649, column: 2, scope: !14880)
!14900 = !DILocation(line: 652, column: 7, scope: !14901)
!14901 = distinct !DILexicalBlock(scope: !14880, file: !2318, line: 652, column: 6)
!14902 = !DILocation(line: 652, column: 6, scope: !14880)
!14903 = !DILocation(line: 653, column: 3, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14901, file: !2318, line: 652, column: 39)
!14905 = !DILocation(line: 654, column: 2, scope: !14904)
!14906 = !DILocation(line: 656, column: 2, scope: !14880)
!14907 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2318, file: !2318, line: 401, type: !14908, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14910)
!14908 = !DISubroutineType(types: !14909)
!14909 = !{null, !2322, !14883}
!14910 = !{!14911, !14912}
!14911 = !DILocalVariable(name: "thread", arg: 1, scope: !14907, file: !2318, line: 401, type: !2322)
!14912 = !DILocalVariable(name: "delay", arg: 2, scope: !14907, file: !2318, line: 401, type: !14883)
!14913 = !DILocation(line: 0, scope: !14907)
!14914 = !DILocation(line: 404, column: 6, scope: !14915)
!14915 = distinct !DILexicalBlock(scope: !14907, file: !2318, line: 404, column: 6)
!14916 = !DILocation(line: 404, column: 6, scope: !14907)
!14917 = !DILocation(line: 405, column: 3, scope: !14918)
!14918 = distinct !DILexicalBlock(scope: !14915, file: !2318, line: 404, column: 38)
!14919 = !DILocation(line: 406, column: 2, scope: !14918)
!14920 = !DILocation(line: 407, column: 3, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14915, file: !2318, line: 406, column: 9)
!14922 = !DILocation(line: 413, column: 1, scope: !14907)
!14923 = distinct !DISubprogram(name: "k_thread_start", scope: !3768, file: !3768, line: 205, type: !14924, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14926)
!14924 = !DISubroutineType(types: !14925)
!14925 = !{null, !2321}
!14926 = !{!14927}
!14927 = !DILocalVariable(name: "thread", arg: 1, scope: !14923, file: !3768, line: 205, type: !2321)
!14928 = !DILocation(line: 0, scope: !14923)
!14929 = !DILocation(line: 214, column: 2, scope: !14930)
!14930 = distinct !DILexicalBlock(scope: !14923, file: !3768, line: 214, column: 2)
!14931 = !{i64 2155086944}
!14932 = !DILocation(line: 215, column: 2, scope: !14923)
!14933 = !DILocation(line: 216, column: 1, scope: !14923)
!14934 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14841, file: !14841, line: 47, type: !14908, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14935)
!14935 = !{!14936, !14937}
!14936 = !DILocalVariable(name: "thread", arg: 1, scope: !14934, file: !14841, line: 47, type: !2322)
!14937 = !DILocalVariable(name: "ticks", arg: 2, scope: !14934, file: !14841, line: 47, type: !14883)
!14938 = !DILocation(line: 0, scope: !14934)
!14939 = !DILocation(line: 49, column: 30, scope: !14934)
!14940 = !DILocation(line: 49, column: 2, scope: !14934)
!14941 = !DILocation(line: 50, column: 1, scope: !14934)
!14942 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2318, file: !2318, line: 748, type: !3328, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !14943)
!14943 = !{!14944, !14962}
!14944 = !DILocalVariable(name: "thread_data", scope: !14945, file: !2318, line: 750, type: !14946)
!14945 = distinct !DILexicalBlock(scope: !14942, file: !2318, line: 750, column: 2)
!14946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14947, size: 32)
!14947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !312, line: 620, size: 384, elements: !14948)
!14948 = !{!14949, !14950, !14951, !14952, !14953, !14954, !14955, !14956, !14957, !14958, !14959, !14961}
!14949 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14947, file: !312, line: 621, baseType: !2322, size: 32)
!14950 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14947, file: !312, line: 622, baseType: !14737, size: 32, offset: 32)
!14951 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14947, file: !312, line: 623, baseType: !32, size: 32, offset: 64)
!14952 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14947, file: !312, line: 624, baseType: !3646, size: 32, offset: 96)
!14953 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14947, file: !312, line: 625, baseType: !102, size: 32, offset: 128)
!14954 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14947, file: !312, line: 626, baseType: !102, size: 32, offset: 160)
!14955 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14947, file: !312, line: 627, baseType: !102, size: 32, offset: 192)
!14956 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14947, file: !312, line: 628, baseType: !103, size: 32, offset: 224)
!14957 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14947, file: !312, line: 629, baseType: !132, size: 32, offset: 256)
!14958 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14947, file: !312, line: 630, baseType: !344, size: 32, offset: 288)
!14959 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14947, file: !312, line: 631, baseType: !14960, size: 32, offset: 320)
!14960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 32)
!14961 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14947, file: !312, line: 632, baseType: !155, size: 32, offset: 352)
!14962 = !DILocalVariable(name: "thread_data", scope: !14963, file: !2318, line: 781, type: !14946)
!14963 = distinct !DILexicalBlock(scope: !14942, file: !2318, line: 781, column: 2)
!14964 = !DILocation(line: 0, scope: !14945)
!14965 = !DILocation(line: 750, column: 2, scope: !14945)
!14966 = !DILocation(line: 780, column: 2, scope: !14942)
!14967 = !DILocation(line: 0, scope: !14963)
!14968 = !DILocation(line: 781, column: 2, scope: !14963)
!14969 = !DILocation(line: 752, column: 17, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14971, file: !2318, line: 750, column: 38)
!14971 = distinct !DILexicalBlock(scope: !14945, file: !2318, line: 750, column: 2)
!14972 = !DILocation(line: 753, column: 17, scope: !14970)
!14973 = !DILocation(line: 754, column: 17, scope: !14970)
!14974 = !DILocation(line: 755, column: 17, scope: !14970)
!14975 = !DILocation(line: 756, column: 17, scope: !14970)
!14976 = !DILocation(line: 757, column: 17, scope: !14970)
!14977 = !DILocation(line: 758, column: 17, scope: !14970)
!14978 = !DILocation(line: 759, column: 17, scope: !14970)
!14979 = !DILocation(line: 760, column: 17, scope: !14970)
!14980 = !DILocation(line: 751, column: 3, scope: !14970)
!14981 = !DILocation(line: 763, column: 16, scope: !14970)
!14982 = !DILocation(line: 763, column: 29, scope: !14970)
!14983 = !DILocation(line: 763, column: 39, scope: !14970)
!14984 = !DILocation(line: 750, column: 2, scope: !14971)
!14985 = !DILocation(line: 750, column: 2, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14971, file: !2318, line: 750, column: 2)
!14987 = distinct !{!14987, !14965, !14988}
!14988 = !DILocation(line: 764, column: 2, scope: !14945)
!14989 = !DILocation(line: 787, column: 2, scope: !14942)
!14990 = !DILocation(line: 788, column: 1, scope: !14942)
!14991 = !DILocation(line: 782, column: 20, scope: !14992)
!14992 = distinct !DILexicalBlock(scope: !14993, file: !2318, line: 782, column: 7)
!14993 = distinct !DILexicalBlock(scope: !14994, file: !2318, line: 781, column: 38)
!14994 = distinct !DILexicalBlock(scope: !14963, file: !2318, line: 781, column: 2)
!14995 = !DILocation(line: 782, column: 31, scope: !14992)
!14996 = !DILocation(line: 782, column: 7, scope: !14993)
!14997 = !DILocation(line: 783, column: 37, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !14992, file: !2318, line: 782, column: 51)
!14999 = !DILocation(line: 784, column: 10, scope: !14998)
!15000 = !DILocation(line: 783, column: 4, scope: !14998)
!15001 = !DILocation(line: 785, column: 3, scope: !14998)
!15002 = !DILocation(line: 781, column: 2, scope: !14994)
!15003 = !DILocation(line: 781, column: 2, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !14994, file: !2318, line: 781, column: 2)
!15005 = distinct !{!15005, !14968, !15006}
!15006 = !DILocation(line: 786, column: 2, scope: !14963)
!15007 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !6101, file: !6101, line: 403, type: !6102, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15008)
!15008 = !{!15009}
!15009 = !DILocalVariable(name: "t", arg: 1, scope: !15007, file: !6101, line: 403, type: !1621)
!15010 = !DILocation(line: 0, scope: !15007)
!15011 = !DILocalVariable(name: "t", arg: 1, scope: !15012, file: !6101, line: 102, type: !1621)
!15012 = distinct !DISubprogram(name: "z_tmcvt", scope: !6101, file: !6101, line: 102, type: !6109, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15013)
!15013 = !{!15011, !15014, !15015, !15016, !15017, !15018, !15019, !15020, !15021, !15022, !15023}
!15014 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15012, file: !6101, line: 102, type: !132)
!15015 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15012, file: !6101, line: 103, type: !132)
!15016 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15012, file: !6101, line: 103, type: !166)
!15017 = !DILocalVariable(name: "result32", arg: 5, scope: !15012, file: !6101, line: 104, type: !166)
!15018 = !DILocalVariable(name: "round_up", arg: 6, scope: !15012, file: !6101, line: 104, type: !166)
!15019 = !DILocalVariable(name: "round_off", arg: 7, scope: !15012, file: !6101, line: 105, type: !166)
!15020 = !DILocalVariable(name: "mul_ratio", scope: !15012, file: !6101, line: 107, type: !166)
!15021 = !DILocalVariable(name: "div_ratio", scope: !15012, file: !6101, line: 109, type: !166)
!15022 = !DILocalVariable(name: "off", scope: !15012, file: !6101, line: 116, type: !1621)
!15023 = !DILocalVariable(name: "rdivisor", scope: !15024, file: !6101, line: 119, type: !132)
!15024 = distinct !DILexicalBlock(scope: !15025, file: !6101, line: 118, column: 18)
!15025 = distinct !DILexicalBlock(scope: !15012, file: !6101, line: 118, column: 6)
!15026 = !DILocation(line: 0, scope: !15012, inlinedAt: !15027)
!15027 = distinct !DILocation(line: 406, column: 9, scope: !15007)
!15028 = !DILocation(line: 145, column: 13, scope: !15029, inlinedAt: !15027)
!15029 = distinct !DILexicalBlock(scope: !15030, file: !6101, line: 144, column: 10)
!15030 = distinct !DILexicalBlock(scope: !15031, file: !6101, line: 142, column: 7)
!15031 = distinct !DILexicalBlock(scope: !15032, file: !6101, line: 141, column: 24)
!15032 = distinct !DILexicalBlock(scope: !15033, file: !6101, line: 141, column: 13)
!15033 = distinct !DILexicalBlock(scope: !15012, file: !6101, line: 134, column: 6)
!15034 = !DILocation(line: 406, column: 2, scope: !15007)
!15035 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2318, file: !2318, line: 817, type: !3644, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15036)
!15036 = !{!15037, !15038, !15039, !15040}
!15037 = !DILocalVariable(name: "entry", arg: 1, scope: !15035, file: !2318, line: 817, type: !3646)
!15038 = !DILocalVariable(name: "p1", arg: 2, scope: !15035, file: !2318, line: 818, type: !102)
!15039 = !DILocalVariable(name: "p2", arg: 3, scope: !15035, file: !2318, line: 818, type: !102)
!15040 = !DILocalVariable(name: "p3", arg: 4, scope: !15035, file: !2318, line: 818, type: !102)
!15041 = !DILocation(line: 0, scope: !15035)
!15042 = !DILocation(line: 822, column: 2, scope: !15035)
!15043 = !DILocation(line: 822, column: 17, scope: !15035)
!15044 = !DILocation(line: 822, column: 30, scope: !15035)
!15045 = !DILocation(line: 823, column: 2, scope: !15035)
!15046 = !DILocation(line: 845, column: 2, scope: !15035)
!15047 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2318, file: !2318, line: 888, type: !15048, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15050)
!15048 = !DISubroutineType(types: !15049)
!15049 = !{!103, !2322}
!15050 = !{!15051}
!15051 = !DILocalVariable(name: "thread", arg: 1, scope: !15047, file: !2318, line: 888, type: !2322)
!15052 = !DILocation(line: 0, scope: !15047)
!15053 = !DILocation(line: 893, column: 2, scope: !15047)
!15054 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2318, file: !2318, line: 897, type: !15055, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15057)
!15055 = !DISubroutineType(types: !15056)
!15056 = !{!103, !2322, !32}
!15057 = !{!15058, !15059}
!15058 = !DILocalVariable(name: "thread", arg: 1, scope: !15054, file: !2318, line: 897, type: !2322)
!15059 = !DILocalVariable(name: "options", arg: 2, scope: !15054, file: !2318, line: 897, type: !32)
!15060 = !DILocation(line: 0, scope: !15054)
!15061 = !DILocation(line: 902, column: 2, scope: !15054)
!15062 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2318, file: !2318, line: 1072, type: !15063, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15068)
!15063 = !DISubroutineType(types: !15064)
!15064 = !{!103, !2321, !15065}
!15065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15066, size: 32)
!15066 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !367, line: 234, baseType: !15067)
!15067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !367, line: 192, elements: !473)
!15068 = !{!15069, !15070}
!15069 = !DILocalVariable(name: "thread", arg: 1, scope: !15062, file: !2318, line: 1072, type: !2321)
!15070 = !DILocalVariable(name: "stats", arg: 2, scope: !15062, file: !2318, line: 1073, type: !15065)
!15071 = !DILocation(line: 0, scope: !15062)
!15072 = !DILocation(line: 1075, column: 14, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15062, file: !2318, line: 1075, column: 6)
!15074 = !DILocation(line: 1075, column: 23, scope: !15073)
!15075 = !DILocation(line: 1086, column: 1, scope: !15062)
!15076 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2318, file: !2318, line: 1088, type: !15077, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15079)
!15077 = !DISubroutineType(types: !15078)
!15078 = !{!103, !15065}
!15079 = !{!15080}
!15080 = !DILocalVariable(name: "stats", arg: 1, scope: !15076, file: !2318, line: 1088, type: !15065)
!15081 = !DILocation(line: 0, scope: !15076)
!15082 = !DILocation(line: 1094, column: 12, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15076, file: !2318, line: 1094, column: 6)
!15084 = !DILocation(line: 1120, column: 1, scope: !15076)
!15085 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15086, file: !15086, line: 20, type: !3328, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3309, retainedNodes: !473)
!15086 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15087 = !DILocation(line: 30, column: 2, scope: !15085)
!15088 = !DILocation(line: 31, column: 1, scope: !15085)
!15089 = distinct !DISubprogram(name: "idle", scope: !15086, file: !15086, line: 33, type: !3649, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3309, retainedNodes: !15090)
!15090 = !{!15091, !15092, !15093}
!15091 = !DILocalVariable(name: "unused1", arg: 1, scope: !15089, file: !15086, line: 33, type: !102)
!15092 = !DILocalVariable(name: "unused2", arg: 2, scope: !15089, file: !15086, line: 33, type: !102)
!15093 = !DILocalVariable(name: "unused3", arg: 3, scope: !15089, file: !15086, line: 33, type: !102)
!15094 = !DILocation(line: 0, scope: !15089)
!15095 = !DILocation(line: 41, column: 2, scope: !15089)
!15096 = !DILocation(line: 55, column: 2, scope: !15097, inlinedAt: !15101)
!15097 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5901, file: !5901, line: 42, type: !5902, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3309, retainedNodes: !15098)
!15098 = !{!15099, !15100}
!15099 = !DILocalVariable(name: "key", scope: !15097, file: !5901, line: 44, type: !32)
!15100 = !DILocalVariable(name: "tmp", scope: !15097, file: !5901, line: 53, type: !32)
!15101 = distinct !DILocation(line: 62, column: 10, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15089, file: !15086, line: 41, column: 15)
!15103 = !{i64 2278491}
!15104 = !DILocation(line: 0, scope: !15097, inlinedAt: !15101)
!15105 = !DILocation(line: 86, column: 3, scope: !15102)
!15106 = distinct !{!15106, !15095, !15107}
!15107 = !DILocation(line: 105, column: 2, scope: !15089)
!15108 = distinct !DISubprogram(name: "k_cpu_idle", scope: !312, file: !312, line: 5627, type: !3328, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3309, retainedNodes: !473)
!15109 = !DILocation(line: 5629, column: 2, scope: !15108)
!15110 = !DILocation(line: 5630, column: 1, scope: !15108)
!15111 = !DISubprogram(name: "arch_cpu_idle", scope: !3647, file: !3647, line: 167, type: !3328, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!15112 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2461, file: !2461, line: 41, type: !15113, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2442, retainedNodes: !15126)
!15113 = !DISubroutineType(types: !15114)
!15114 = !{!103, !15115, !32, !32}
!15115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15116, size: 32)
!15116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !312, line: 2909, size: 128, elements: !15117)
!15117 = !{!15118, !15124, !15125}
!15118 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15116, file: !312, line: 2910, baseType: !15119, size: 64)
!15119 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !15120)
!15120 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !15121)
!15121 = !{!15122}
!15122 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15120, file: !316, line: 232, baseType: !15123, size: 64)
!15123 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2447)
!15124 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !15116, file: !312, line: 2911, baseType: !32, size: 32, offset: 64)
!15125 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !15116, file: !312, line: 2912, baseType: !32, size: 32, offset: 96)
!15126 = !{!15127, !15128, !15129}
!15127 = !DILocalVariable(name: "sem", arg: 1, scope: !15112, file: !2461, line: 41, type: !15115)
!15128 = !DILocalVariable(name: "initial_count", arg: 2, scope: !15112, file: !2461, line: 41, type: !32)
!15129 = !DILocalVariable(name: "limit", arg: 3, scope: !15112, file: !2461, line: 42, type: !32)
!15130 = !DILocation(line: 0, scope: !15112)
!15131 = !DILocation(line: 47, column: 2, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15112, file: !2461, line: 47, column: 2)
!15133 = !DILocation(line: 53, column: 7, scope: !15112)
!15134 = !DILocation(line: 53, column: 13, scope: !15112)
!15135 = !DILocation(line: 54, column: 7, scope: !15112)
!15136 = !DILocation(line: 54, column: 13, scope: !15112)
!15137 = !DILocation(line: 58, column: 21, scope: !15112)
!15138 = !DILocation(line: 58, column: 2, scope: !15112)
!15139 = !DILocation(line: 64, column: 2, scope: !15112)
!15140 = !DILocation(line: 65, column: 1, scope: !15112)
!15141 = distinct !DISubprogram(name: "z_waitq_init", scope: !14773, file: !14773, line: 47, type: !15142, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2442, retainedNodes: !15145)
!15142 = !DISubroutineType(types: !15143)
!15143 = !{null, !15144}
!15144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15119, size: 32)
!15145 = !{!15146}
!15146 = !DILocalVariable(name: "w", arg: 1, scope: !15141, file: !14773, line: 47, type: !15144)
!15147 = !DILocation(line: 0, scope: !15141)
!15148 = !DILocation(line: 49, column: 21, scope: !15141)
!15149 = !DILocation(line: 49, column: 2, scope: !15141)
!15150 = !DILocation(line: 50, column: 1, scope: !15141)
!15151 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !15152, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2442, retainedNodes: !15155)
!15152 = !DISubroutineType(types: !15153)
!15153 = !{null, !15154}
!15154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15123, size: 32)
!15155 = !{!15156}
!15156 = !DILocalVariable(name: "list", arg: 1, scope: !15151, file: !321, line: 197, type: !15154)
!15157 = !DILocation(line: 0, scope: !15151)
!15158 = !DILocation(line: 199, column: 8, scope: !15151)
!15159 = !DILocation(line: 199, column: 13, scope: !15151)
!15160 = !DILocation(line: 200, column: 8, scope: !15151)
!15161 = !DILocation(line: 200, column: 13, scope: !15151)
!15162 = !DILocation(line: 201, column: 1, scope: !15151)
!15163 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2461, file: !2461, line: 86, type: !15164, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2442, retainedNodes: !15166)
!15164 = !DISubroutineType(types: !15165)
!15165 = !{null, !15115}
!15166 = !{!15167, !15168, !15173}
!15167 = !DILocalVariable(name: "sem", arg: 1, scope: !15163, file: !2461, line: 86, type: !15115)
!15168 = !DILocalVariable(name: "key", scope: !15163, file: !2461, line: 88, type: !15169)
!15169 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !15170)
!15170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !15171)
!15171 = !{!15172}
!15172 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15170, file: !472, line: 33, baseType: !103, size: 32)
!15173 = !DILocalVariable(name: "thread", scope: !15163, file: !2461, line: 89, type: !15174)
!15174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15175, size: 32)
!15175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !15176)
!15176 = !{!15177, !15215, !15227, !15228, !15229, !15230, !15236, !15248}
!15177 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !15175, file: !367, line: 247, baseType: !15178, size: 384)
!15178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !15179)
!15179 = !{!15180, !15190, !15191, !15192, !15193, !15202, !15203, !15204}
!15180 = !DIDerivedType(tag: DW_TAG_member, scope: !15178, file: !367, line: 60, baseType: !15181, size: 64)
!15181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15178, file: !367, line: 60, size: 64, elements: !15182)
!15182 = !{!15183, !15184}
!15183 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !15181, file: !367, line: 61, baseType: !2446, size: 64)
!15184 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !15181, file: !367, line: 62, baseType: !15185, size: 64)
!15185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !15186)
!15186 = !{!15187}
!15187 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !15185, file: !392, line: 50, baseType: !15188, size: 64)
!15188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15189, size: 64, elements: !397)
!15189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15185, size: 32)
!15190 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !15178, file: !367, line: 68, baseType: !15144, size: 32, offset: 64)
!15191 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !15178, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!15192 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !15178, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!15193 = !DIDerivedType(tag: DW_TAG_member, scope: !15178, file: !367, line: 90, baseType: !15194, size: 16, offset: 112)
!15194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15178, file: !367, line: 90, size: 16, elements: !15195)
!15195 = !{!15196, !15201}
!15196 = !DIDerivedType(tag: DW_TAG_member, scope: !15194, file: !367, line: 91, baseType: !15197, size: 16)
!15197 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15194, file: !367, line: 91, size: 16, elements: !15198)
!15198 = !{!15199, !15200}
!15199 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15197, file: !367, line: 96, baseType: !415, size: 8)
!15200 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !15197, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!15201 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !15194, file: !367, line: 100, baseType: !340, size: 16)
!15202 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !15178, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!15203 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !15178, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!15204 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15178, file: !367, line: 131, baseType: !15205, size: 192, offset: 192)
!15205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !15206)
!15206 = !{!15207, !15208, !15214}
!15207 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !15205, file: !316, line: 245, baseType: !2446, size: 64)
!15208 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !15205, file: !316, line: 246, baseType: !15209, size: 32, offset: 64)
!15209 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !15210)
!15210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15211, size: 32)
!15211 = !DISubroutineType(types: !15212)
!15212 = !{null, !15213}
!15213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15205, size: 32)
!15214 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !15205, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!15215 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !15175, file: !367, line: 250, baseType: !15216, size: 288, offset: 384)
!15216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !15217)
!15217 = !{!15218, !15219, !15220, !15221, !15222, !15223, !15224, !15225, !15226}
!15218 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15216, file: !436, line: 26, baseType: !132, size: 32)
!15219 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15216, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!15220 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !15216, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!15221 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !15216, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!15222 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !15216, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!15223 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !15216, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!15224 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !15216, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!15225 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !15216, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!15226 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !15216, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!15227 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !15175, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!15228 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !15175, file: !367, line: 256, baseType: !15119, size: 64, offset: 704)
!15229 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !15175, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!15230 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !15175, file: !367, line: 300, baseType: !15231, size: 96, offset: 800)
!15231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !15232)
!15232 = !{!15233, !15234, !15235}
!15233 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !15231, file: !367, line: 153, baseType: !22, size: 32)
!15234 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15231, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!15235 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !15231, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!15236 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !15175, file: !367, line: 325, baseType: !15237, size: 32, offset: 896)
!15237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15238, size: 32)
!15238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !15239)
!15239 = !{!15240, !15246, !15247}
!15240 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15238, file: !312, line: 5074, baseType: !15241, size: 96)
!15241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !15242)
!15242 = !{!15243, !15244, !15245}
!15243 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15241, file: !462, line: 57, baseType: !465, size: 32)
!15244 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15241, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!15245 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15241, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!15246 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15238, file: !312, line: 5075, baseType: !15119, size: 64, offset: 96)
!15247 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15238, file: !312, line: 5076, baseType: !2462, offset: 160)
!15248 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !15175, file: !367, line: 343, baseType: !15249, size: 64, offset: 928)
!15249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !15250)
!15250 = !{!15251, !15252}
!15251 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !15249, file: !436, line: 63, baseType: !132, size: 32)
!15252 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !15249, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!15253 = !DILocation(line: 0, scope: !15163)
!15254 = !DILocalVariable(name: "l", arg: 1, scope: !15255, file: !472, line: 136, type: !15258)
!15255 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !15256, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2442, retainedNodes: !15259)
!15256 = !DISubroutineType(types: !15257)
!15257 = !{!15169, !15258}
!15258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 32)
!15259 = !{!15254, !15260}
!15260 = !DILocalVariable(name: "k", scope: !15255, file: !472, line: 139, type: !15169)
!15261 = !DILocation(line: 0, scope: !15255, inlinedAt: !15262)
!15262 = distinct !DILocation(line: 88, column: 25, scope: !15163)
!15263 = !DILocation(line: 55, column: 2, scope: !15264, inlinedAt: !15268)
!15264 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5901, file: !5901, line: 42, type: !5902, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2442, retainedNodes: !15265)
!15265 = !{!15266, !15267}
!15266 = !DILocalVariable(name: "key", scope: !15264, file: !5901, line: 44, type: !32)
!15267 = !DILocalVariable(name: "tmp", scope: !15264, file: !5901, line: 53, type: !32)
!15268 = distinct !DILocation(line: 145, column: 10, scope: !15255, inlinedAt: !15262)
!15269 = !{i64 2280053}
!15270 = !DILocation(line: 0, scope: !15264, inlinedAt: !15268)
!15271 = !DILocation(line: 93, column: 39, scope: !15163)
!15272 = !DILocation(line: 93, column: 11, scope: !15163)
!15273 = !DILocation(line: 95, column: 13, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15163, file: !2461, line: 95, column: 6)
!15275 = !DILocation(line: 95, column: 6, scope: !15163)
!15276 = !DILocalVariable(name: "thread", arg: 1, scope: !15277, file: !14467, line: 65, type: !15174)
!15277 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14467, file: !14467, line: 65, type: !15278, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2442, retainedNodes: !15280)
!15278 = !DISubroutineType(types: !15279)
!15279 = !{null, !15174, !32}
!15280 = !{!15276, !15281}
!15281 = !DILocalVariable(name: "value", arg: 2, scope: !15277, file: !14467, line: 65, type: !32)
!15282 = !DILocation(line: 0, scope: !15277, inlinedAt: !15283)
!15283 = distinct !DILocation(line: 96, column: 3, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15274, file: !2461, line: 95, column: 22)
!15285 = !DILocation(line: 67, column: 15, scope: !15277, inlinedAt: !15283)
!15286 = !DILocation(line: 67, column: 33, scope: !15277, inlinedAt: !15283)
!15287 = !DILocation(line: 97, column: 3, scope: !15284)
!15288 = !DILocation(line: 98, column: 2, scope: !15284)
!15289 = !DILocation(line: 99, column: 23, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15274, file: !2461, line: 98, column: 9)
!15291 = !DILocation(line: 99, column: 37, scope: !15290)
!15292 = !DILocation(line: 99, column: 29, scope: !15290)
!15293 = !DILocation(line: 99, column: 17, scope: !15290)
!15294 = !DILocation(line: 99, column: 14, scope: !15290)
!15295 = !DILocation(line: 103, column: 2, scope: !15163)
!15296 = !DILocation(line: 106, column: 1, scope: !15163)
!15297 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2461, file: !2461, line: 117, type: !15298, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2442, retainedNodes: !15304)
!15298 = !DISubroutineType(types: !15299)
!15299 = !{!103, !15115, !15300}
!15300 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1800, line: 67, baseType: !15301)
!15301 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1800, line: 65, size: 64, elements: !15302)
!15302 = !{!15303}
!15303 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15301, file: !1800, line: 66, baseType: !1799, size: 64)
!15304 = !{!15305, !15306, !15307, !15308, !15309}
!15305 = !DILocalVariable(name: "sem", arg: 1, scope: !15297, file: !2461, line: 117, type: !15115)
!15306 = !DILocalVariable(name: "timeout", arg: 2, scope: !15297, file: !2461, line: 117, type: !15300)
!15307 = !DILocalVariable(name: "ret", scope: !15297, file: !2461, line: 119, type: !103)
!15308 = !DILocalVariable(name: "key", scope: !15297, file: !2461, line: 124, type: !15169)
!15309 = !DILabel(scope: !15297, name: "out", file: !2461, line: 145)
!15310 = !DILocation(line: 0, scope: !15297)
!15311 = !DILocation(line: 0, scope: !15255, inlinedAt: !15312)
!15312 = distinct !DILocation(line: 124, column: 25, scope: !15297)
!15313 = !DILocation(line: 55, column: 2, scope: !15264, inlinedAt: !15314)
!15314 = distinct !DILocation(line: 145, column: 10, scope: !15255, inlinedAt: !15312)
!15315 = !DILocation(line: 0, scope: !15264, inlinedAt: !15314)
!15316 = !DILocation(line: 128, column: 6, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15297, file: !2461, line: 128, column: 6)
!15318 = !DILocation(line: 128, column: 6, scope: !15297)
!15319 = !{!"branch_weights", i32 1, i32 2000}
!15320 = !DILocation(line: 129, column: 13, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15317, file: !2461, line: 128, column: 31)
!15322 = !DILocalVariable(name: "key", arg: 2, scope: !15323, file: !472, line: 190, type: !15169)
!15323 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !15324, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2442, retainedNodes: !15326)
!15324 = !DISubroutineType(types: !15325)
!15325 = !{null, !15258, !15169}
!15326 = !{!15327, !15322}
!15327 = !DILocalVariable(name: "l", arg: 1, scope: !15323, file: !472, line: 189, type: !15258)
!15328 = !DILocation(line: 0, scope: !15323, inlinedAt: !15329)
!15329 = distinct !DILocation(line: 130, column: 3, scope: !15321)
!15330 = !DILocalVariable(name: "key", arg: 1, scope: !15331, file: !5901, line: 84, type: !32)
!15331 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5901, file: !5901, line: 84, type: !5912, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2442, retainedNodes: !15332)
!15332 = !{!15330}
!15333 = !DILocation(line: 0, scope: !15331, inlinedAt: !15334)
!15334 = distinct !DILocation(line: 215, column: 2, scope: !15323, inlinedAt: !15329)
!15335 = !DILocation(line: 95, column: 2, scope: !15331, inlinedAt: !15334)
!15336 = !{i64 2280870}
!15337 = !DILocation(line: 132, column: 3, scope: !15321)
!15338 = !DILocation(line: 135, column: 6, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15297, file: !2461, line: 135, column: 6)
!15340 = !DILocation(line: 135, column: 6, scope: !15297)
!15341 = !DILocation(line: 0, scope: !15323, inlinedAt: !15342)
!15342 = distinct !DILocation(line: 136, column: 3, scope: !15343)
!15343 = distinct !DILexicalBlock(scope: !15339, file: !2461, line: 135, column: 40)
!15344 = !DILocation(line: 0, scope: !15331, inlinedAt: !15345)
!15345 = distinct !DILocation(line: 215, column: 2, scope: !15323, inlinedAt: !15342)
!15346 = !DILocation(line: 95, column: 2, scope: !15331, inlinedAt: !15345)
!15347 = !DILocation(line: 138, column: 3, scope: !15343)
!15348 = !DILocation(line: 143, column: 38, scope: !15297)
!15349 = !DILocation(line: 143, column: 8, scope: !15297)
!15350 = !DILocation(line: 143, column: 2, scope: !15297)
!15351 = !DILocation(line: 145, column: 1, scope: !15297)
!15352 = !DILocation(line: 148, column: 2, scope: !15297)
!15353 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2461, file: !2461, line: 151, type: !15164, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2442, retainedNodes: !15354)
!15354 = !{!15355, !15356, !15357}
!15355 = !DILocalVariable(name: "sem", arg: 1, scope: !15353, file: !2461, line: 151, type: !15115)
!15356 = !DILocalVariable(name: "thread", scope: !15353, file: !2461, line: 153, type: !15174)
!15357 = !DILocalVariable(name: "key", scope: !15353, file: !2461, line: 154, type: !15169)
!15358 = !DILocation(line: 0, scope: !15353)
!15359 = !DILocation(line: 0, scope: !15255, inlinedAt: !15360)
!15360 = distinct !DILocation(line: 154, column: 25, scope: !15353)
!15361 = !DILocation(line: 55, column: 2, scope: !15264, inlinedAt: !15362)
!15362 = distinct !DILocation(line: 145, column: 10, scope: !15255, inlinedAt: !15360)
!15363 = !DILocation(line: 0, scope: !15264, inlinedAt: !15362)
!15364 = !DILocation(line: 157, column: 12, scope: !15365)
!15365 = distinct !DILexicalBlock(scope: !15353, file: !2461, line: 156, column: 15)
!15366 = !DILocation(line: 158, column: 14, scope: !15367)
!15367 = distinct !DILexicalBlock(scope: !15365, file: !2461, line: 158, column: 7)
!15368 = !DILocation(line: 158, column: 7, scope: !15365)
!15369 = !DILocation(line: 0, scope: !15277, inlinedAt: !15370)
!15370 = distinct !DILocation(line: 161, column: 3, scope: !15365)
!15371 = !DILocation(line: 67, column: 15, scope: !15277, inlinedAt: !15370)
!15372 = !DILocation(line: 67, column: 33, scope: !15277, inlinedAt: !15370)
!15373 = !DILocation(line: 162, column: 3, scope: !15365)
!15374 = distinct !{!15374, !15375, !15376}
!15375 = !DILocation(line: 156, column: 2, scope: !15353)
!15376 = !DILocation(line: 163, column: 2, scope: !15353)
!15377 = !DILocation(line: 164, column: 7, scope: !15353)
!15378 = !DILocation(line: 164, column: 13, scope: !15353)
!15379 = !DILocation(line: 170, column: 2, scope: !15353)
!15380 = !DILocation(line: 171, column: 1, scope: !15353)
!15381 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2573, file: !2573, line: 93, type: !15382, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15384)
!15382 = !DISubroutineType(types: !15383)
!15383 = !{!344, !2468, !2468}
!15384 = !{!15385, !15386, !15387, !15388}
!15385 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15381, file: !2573, line: 93, type: !2468)
!15386 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15381, file: !2573, line: 94, type: !2468)
!15387 = !DILocalVariable(name: "b1", scope: !15381, file: !2573, line: 97, type: !344)
!15388 = !DILocalVariable(name: "b2", scope: !15381, file: !2573, line: 98, type: !344)
!15389 = !DILocation(line: 0, scope: !15381)
!15390 = !DILocation(line: 97, column: 30, scope: !15381)
!15391 = !DILocation(line: 98, column: 30, scope: !15381)
!15392 = !DILocation(line: 100, column: 9, scope: !15393)
!15393 = distinct !DILexicalBlock(scope: !15381, file: !2573, line: 100, column: 6)
!15394 = !DILocation(line: 100, column: 6, scope: !15381)
!15395 = !DILocation(line: 125, column: 1, scope: !15381)
!15396 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2573, file: !2573, line: 428, type: !15397, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15399)
!15397 = !DISubroutineType(types: !15398)
!15398 = !{null, !2468}
!15399 = !{!15400}
!15400 = !DILocalVariable(name: "curr", arg: 1, scope: !15396, file: !2573, line: 428, type: !2468)
!15401 = !DILocation(line: 0, scope: !15396)
!15402 = !DILocation(line: 434, column: 6, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15396, file: !2573, line: 434, column: 6)
!15404 = !DILocation(line: 434, column: 23, scope: !15403)
!15405 = !DILocation(line: 434, column: 6, scope: !15396)
!15406 = !DILocation(line: 435, column: 50, scope: !15407)
!15407 = distinct !DILexicalBlock(scope: !15403, file: !2573, line: 434, column: 29)
!15408 = !DILocation(line: 435, column: 48, scope: !15407)
!15409 = !DILocation(line: 435, column: 29, scope: !15407)
!15410 = !DILocation(line: 436, column: 24, scope: !15407)
!15411 = !DILocation(line: 436, column: 3, scope: !15407)
!15412 = !DILocation(line: 437, column: 2, scope: !15407)
!15413 = !DILocation(line: 438, column: 1, scope: !15396)
!15414 = distinct !DISubprogram(name: "slice_time", scope: !2573, file: !2573, line: 407, type: !15415, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15417)
!15415 = !DISubroutineType(types: !15416)
!15416 = !{!103, !2468}
!15417 = !{!15418, !15419}
!15418 = !DILocalVariable(name: "curr", arg: 1, scope: !15414, file: !2573, line: 407, type: !2468)
!15419 = !DILocalVariable(name: "ret", scope: !15414, file: !2573, line: 409, type: !103)
!15420 = !DILocation(line: 0, scope: !15414)
!15421 = !DILocation(line: 409, column: 12, scope: !15414)
!15422 = !DILocation(line: 416, column: 2, scope: !15414)
!15423 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2573, file: !2573, line: 440, type: !15424, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15426)
!15424 = !DISubroutineType(types: !15425)
!15425 = !{null, !344, !103}
!15426 = !{!15427, !15428, !15429, !15435}
!15427 = !DILocalVariable(name: "slice", arg: 1, scope: !15423, file: !2573, line: 440, type: !344)
!15428 = !DILocalVariable(name: "prio", arg: 2, scope: !15423, file: !2573, line: 440, type: !103)
!15429 = !DILocalVariable(name: "__i", scope: !15430, file: !2573, line: 442, type: !15431)
!15430 = distinct !DILexicalBlock(scope: !15423, file: !2573, line: 442, column: 2)
!15431 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !15432)
!15432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !15433)
!15433 = !{!15434}
!15434 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15432, file: !472, line: 33, baseType: !103, size: 32)
!15435 = !DILocalVariable(name: "__key", scope: !15430, file: !2573, line: 442, type: !15431)
!15436 = !DILocation(line: 0, scope: !15423)
!15437 = !DILocation(line: 0, scope: !15430)
!15438 = !DILocalVariable(name: "l", arg: 1, scope: !15439, file: !472, line: 136, type: !15442)
!15439 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !15440, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15443)
!15440 = !DISubroutineType(types: !15441)
!15441 = !{!15431, !15442}
!15442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!15443 = !{!15438, !15444}
!15444 = !DILocalVariable(name: "k", scope: !15439, file: !472, line: 139, type: !15431)
!15445 = !DILocation(line: 0, scope: !15439, inlinedAt: !15446)
!15446 = distinct !DILocation(line: 442, column: 2, scope: !15430)
!15447 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !15452)
!15448 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5901, file: !5901, line: 42, type: !5902, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15449)
!15449 = !{!15450, !15451}
!15450 = !DILocalVariable(name: "key", scope: !15448, file: !5901, line: 44, type: !32)
!15451 = !DILocalVariable(name: "tmp", scope: !15448, file: !5901, line: 53, type: !32)
!15452 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !15446)
!15453 = !{i64 2322462}
!15454 = !DILocation(line: 0, scope: !15448, inlinedAt: !15452)
!15455 = !DILocation(line: 443, column: 29, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15457, file: !2573, line: 442, column: 26)
!15457 = distinct !DILexicalBlock(scope: !15430, file: !2573, line: 442, column: 2)
!15458 = !DILocation(line: 444, column: 17, scope: !15456)
!15459 = !DILocation(line: 445, column: 51, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !15456, file: !2573, line: 445, column: 7)
!15461 = !DILocation(line: 445, column: 7, scope: !15456)
!15462 = !DILocation(line: 0, scope: !15456)
!15463 = !DILocation(line: 451, column: 18, scope: !15456)
!15464 = !DILocation(line: 452, column: 3, scope: !15456)
!15465 = !DILocalVariable(name: "key", arg: 2, scope: !15466, file: !472, line: 190, type: !15431)
!15466 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !15467, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15469)
!15467 = !DISubroutineType(types: !15468)
!15468 = !{null, !15442, !15431}
!15469 = !{!15470, !15465}
!15470 = !DILocalVariable(name: "l", arg: 1, scope: !15466, file: !472, line: 189, type: !15442)
!15471 = !DILocation(line: 0, scope: !15466, inlinedAt: !15472)
!15472 = distinct !DILocation(line: 442, column: 2, scope: !15457)
!15473 = !DILocalVariable(name: "key", arg: 1, scope: !15474, file: !5901, line: 84, type: !32)
!15474 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5901, file: !5901, line: 84, type: !5912, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15475)
!15475 = !{!15473}
!15476 = !DILocation(line: 0, scope: !15474, inlinedAt: !15477)
!15477 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !15472)
!15478 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !15477)
!15479 = !{i64 2323279}
!15480 = !DILocation(line: 454, column: 1, scope: !15423)
!15481 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !6101, file: !6101, line: 389, type: !7928, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15482)
!15482 = !{!15483}
!15483 = !DILocalVariable(name: "t", arg: 1, scope: !15481, file: !6101, line: 389, type: !132)
!15484 = !DILocation(line: 0, scope: !15481)
!15485 = !DILocalVariable(name: "t", arg: 1, scope: !15486, file: !6101, line: 102, type: !1621)
!15486 = distinct !DISubprogram(name: "z_tmcvt", scope: !6101, file: !6101, line: 102, type: !6109, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15487)
!15487 = !{!15485, !15488, !15489, !15490, !15491, !15492, !15493, !15494, !15495, !15496, !15497}
!15488 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15486, file: !6101, line: 102, type: !132)
!15489 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15486, file: !6101, line: 103, type: !132)
!15490 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15486, file: !6101, line: 103, type: !166)
!15491 = !DILocalVariable(name: "result32", arg: 5, scope: !15486, file: !6101, line: 104, type: !166)
!15492 = !DILocalVariable(name: "round_up", arg: 6, scope: !15486, file: !6101, line: 104, type: !166)
!15493 = !DILocalVariable(name: "round_off", arg: 7, scope: !15486, file: !6101, line: 105, type: !166)
!15494 = !DILocalVariable(name: "mul_ratio", scope: !15486, file: !6101, line: 107, type: !166)
!15495 = !DILocalVariable(name: "div_ratio", scope: !15486, file: !6101, line: 109, type: !166)
!15496 = !DILocalVariable(name: "off", scope: !15486, file: !6101, line: 116, type: !1621)
!15497 = !DILocalVariable(name: "rdivisor", scope: !15498, file: !6101, line: 119, type: !132)
!15498 = distinct !DILexicalBlock(scope: !15499, file: !6101, line: 118, column: 18)
!15499 = distinct !DILexicalBlock(scope: !15486, file: !6101, line: 118, column: 6)
!15500 = !DILocation(line: 0, scope: !15486, inlinedAt: !15501)
!15501 = distinct !DILocation(line: 392, column: 9, scope: !15481)
!15502 = !DILocation(line: 143, column: 25, scope: !15503, inlinedAt: !15501)
!15503 = distinct !DILexicalBlock(scope: !15504, file: !6101, line: 142, column: 17)
!15504 = distinct !DILexicalBlock(scope: !15505, file: !6101, line: 142, column: 7)
!15505 = distinct !DILexicalBlock(scope: !15506, file: !6101, line: 141, column: 24)
!15506 = distinct !DILexicalBlock(scope: !15507, file: !6101, line: 141, column: 13)
!15507 = distinct !DILexicalBlock(scope: !15486, file: !6101, line: 134, column: 6)
!15508 = !DILocation(line: 392, column: 2, scope: !15481)
!15509 = distinct !DISubprogram(name: "z_time_slice", scope: !2573, file: !2573, line: 502, type: !8563, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15510)
!15510 = !{!15511, !15512}
!15511 = !DILocalVariable(name: "ticks", arg: 1, scope: !15509, file: !2573, line: 502, type: !103)
!15512 = !DILocalVariable(name: "key", scope: !15509, file: !2573, line: 511, type: !15431)
!15513 = !DILocation(line: 0, scope: !15509)
!15514 = !DILocation(line: 0, scope: !15439, inlinedAt: !15515)
!15515 = distinct !DILocation(line: 511, column: 25, scope: !15509)
!15516 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !15517)
!15517 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !15515)
!15518 = !DILocation(line: 0, scope: !15448, inlinedAt: !15517)
!15519 = !DILocation(line: 514, column: 6, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15509, file: !2573, line: 514, column: 6)
!15521 = !DILocation(line: 514, column: 25, scope: !15520)
!15522 = !DILocation(line: 514, column: 22, scope: !15520)
!15523 = !DILocation(line: 514, column: 6, scope: !15509)
!15524 = !DILocation(line: 515, column: 3, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15520, file: !2573, line: 514, column: 35)
!15526 = !DILocation(line: 0, scope: !15466, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 516, column: 3, scope: !15525)
!15528 = !DILocation(line: 0, scope: !15474, inlinedAt: !15529)
!15529 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !15527)
!15530 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !15529)
!15531 = !DILocation(line: 517, column: 3, scope: !15525)
!15532 = !DILocation(line: 519, column: 18, scope: !15509)
!15533 = !DILocation(line: 522, column: 6, scope: !15534)
!15534 = distinct !DILexicalBlock(scope: !15509, file: !2573, line: 522, column: 6)
!15535 = !DILocation(line: 522, column: 27, scope: !15534)
!15536 = !DILocation(line: 522, column: 30, scope: !15534)
!15537 = !DILocation(line: 522, column: 6, scope: !15509)
!15538 = !DILocation(line: 523, column: 30, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15540, file: !2573, line: 523, column: 7)
!15540 = distinct !DILexicalBlock(scope: !15534, file: !2573, line: 522, column: 51)
!15541 = !DILocation(line: 523, column: 13, scope: !15539)
!15542 = !DILocation(line: 523, column: 7, scope: !15540)
!15543 = !DILocation(line: 530, column: 10, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15539, file: !2573, line: 523, column: 43)
!15545 = !DILocation(line: 531, column: 3, scope: !15544)
!15546 = !DILocation(line: 532, column: 30, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15539, file: !2573, line: 531, column: 10)
!15548 = !DILocation(line: 535, column: 29, scope: !15549)
!15549 = distinct !DILexicalBlock(scope: !15534, file: !2573, line: 534, column: 9)
!15550 = !DILocation(line: 0, scope: !15466, inlinedAt: !15551)
!15551 = distinct !DILocation(line: 537, column: 2, scope: !15509)
!15552 = !DILocation(line: 0, scope: !15474, inlinedAt: !15553)
!15553 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !15551)
!15554 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !15553)
!15555 = !DILocation(line: 538, column: 1, scope: !15509)
!15556 = distinct !DISubprogram(name: "sliceable", scope: !2573, file: !2573, line: 468, type: !15557, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15559)
!15557 = !DISubroutineType(types: !15558)
!15558 = !{!166, !2468}
!15559 = !{!15560, !15561}
!15560 = !DILocalVariable(name: "thread", arg: 1, scope: !15556, file: !2573, line: 468, type: !2468)
!15561 = !DILocalVariable(name: "ret", scope: !15556, file: !2573, line: 470, type: !166)
!15562 = !DILocation(line: 0, scope: !15556)
!15563 = !DILocation(line: 470, column: 13, scope: !15556)
!15564 = !DILocation(line: 471, column: 3, scope: !15556)
!15565 = !DILocation(line: 471, column: 7, scope: !15556)
!15566 = !DILocation(line: 472, column: 3, scope: !15556)
!15567 = !DILocation(line: 472, column: 37, scope: !15556)
!15568 = !DILocation(line: 472, column: 24, scope: !15556)
!15569 = !DILocation(line: 472, column: 43, scope: !15556)
!15570 = !DILocation(line: 472, column: 7, scope: !15556)
!15571 = !DILocation(line: 473, column: 3, scope: !15556)
!15572 = !DILocation(line: 473, column: 7, scope: !15556)
!15573 = !DILocation(line: 473, column: 6, scope: !15556)
!15574 = !DILocation(line: 479, column: 2, scope: !15556)
!15575 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2573, file: !2573, line: 482, type: !15576, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15578)
!15576 = !DISubroutineType(types: !15577)
!15577 = !{!15431, !15431}
!15578 = !{!15579, !15580}
!15579 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15575, file: !2573, line: 482, type: !15431)
!15580 = !DILocalVariable(name: "curr", scope: !15575, file: !2573, line: 484, type: !2468)
!15581 = !DILocation(line: 0, scope: !15575)
!15582 = !DILocation(line: 484, column: 26, scope: !15575)
!15583 = !DILocation(line: 493, column: 7, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15575, file: !2573, line: 493, column: 6)
!15585 = !DILocation(line: 493, column: 6, scope: !15575)
!15586 = !DILocation(line: 494, column: 3, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15584, file: !2573, line: 493, column: 49)
!15588 = !DILocation(line: 495, column: 2, scope: !15587)
!15589 = !DILocation(line: 496, column: 2, scope: !15575)
!15590 = !DILocation(line: 499, column: 1, scope: !15575)
!15591 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14447, file: !14447, line: 106, type: !15557, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15592)
!15592 = !{!15593, !15594}
!15593 = !DILocalVariable(name: "thread", arg: 1, scope: !15591, file: !14447, line: 106, type: !2468)
!15594 = !DILocalVariable(name: "state", scope: !15591, file: !14447, line: 108, type: !163)
!15595 = !DILocation(line: 0, scope: !15591)
!15596 = !DILocation(line: 108, column: 31, scope: !15591)
!15597 = !DILocation(line: 110, column: 16, scope: !15591)
!15598 = !DILocation(line: 111, column: 41, scope: !15591)
!15599 = !DILocation(line: 110, column: 2, scope: !15591)
!15600 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2573, file: !2573, line: 393, type: !15397, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15601)
!15601 = !{!15602}
!15602 = !DILocalVariable(name: "thread", arg: 1, scope: !15600, file: !2573, line: 393, type: !2468)
!15603 = !DILocation(line: 0, scope: !15600)
!15604 = !DILocation(line: 395, column: 6, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15600, file: !2573, line: 395, column: 6)
!15606 = !DILocation(line: 395, column: 6, scope: !15600)
!15607 = !DILocalVariable(name: "thread", arg: 1, scope: !15608, file: !2573, line: 264, type: !2468)
!15608 = distinct !DISubprogram(name: "dequeue_thread", scope: !2573, file: !2573, line: 264, type: !15397, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15609)
!15609 = !{!15607}
!15610 = !DILocation(line: 0, scope: !15608, inlinedAt: !15611)
!15611 = distinct !DILocation(line: 396, column: 3, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !15605, file: !2573, line: 395, column: 34)
!15613 = !DILocation(line: 266, column: 15, scope: !15608, inlinedAt: !15611)
!15614 = !DILocation(line: 266, column: 28, scope: !15608, inlinedAt: !15611)
!15615 = !DILocalVariable(name: "thread", arg: 1, scope: !15616, file: !2573, line: 232, type: !2468)
!15616 = distinct !DISubprogram(name: "runq_remove", scope: !2573, file: !2573, line: 232, type: !15397, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15617)
!15617 = !{!15615}
!15618 = !DILocation(line: 0, scope: !15616, inlinedAt: !15619)
!15619 = distinct !DILocation(line: 268, column: 3, scope: !15620, inlinedAt: !15611)
!15620 = distinct !DILexicalBlock(scope: !15621, file: !2573, line: 267, column: 35)
!15621 = distinct !DILexicalBlock(scope: !15608, file: !2573, line: 267, column: 6)
!15622 = !DILocation(line: 234, column: 2, scope: !15616, inlinedAt: !15619)
!15623 = !DILocation(line: 397, column: 2, scope: !15612)
!15624 = !DILocalVariable(name: "thread", arg: 1, scope: !15625, file: !2573, line: 250, type: !2468)
!15625 = distinct !DISubprogram(name: "queue_thread", scope: !2573, file: !2573, line: 250, type: !15397, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15626)
!15626 = !{!15624}
!15627 = !DILocation(line: 0, scope: !15625, inlinedAt: !15628)
!15628 = distinct !DILocation(line: 398, column: 2, scope: !15600)
!15629 = !DILocation(line: 252, column: 15, scope: !15625, inlinedAt: !15628)
!15630 = !DILocation(line: 252, column: 28, scope: !15625, inlinedAt: !15628)
!15631 = !DILocalVariable(name: "thread", arg: 1, scope: !15632, file: !2573, line: 227, type: !2468)
!15632 = distinct !DISubprogram(name: "runq_add", scope: !2573, file: !2573, line: 227, type: !15397, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15633)
!15633 = !{!15631}
!15634 = !DILocation(line: 0, scope: !15632, inlinedAt: !15635)
!15635 = distinct !DILocation(line: 254, column: 3, scope: !15636, inlinedAt: !15628)
!15636 = distinct !DILexicalBlock(scope: !15637, file: !2573, line: 253, column: 35)
!15637 = distinct !DILexicalBlock(scope: !15625, file: !2573, line: 253, column: 6)
!15638 = !DILocalVariable(name: "pq", arg: 1, scope: !15639, file: !2573, line: 181, type: !15642)
!15639 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2573, file: !2573, line: 181, type: !15640, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15643)
!15640 = !DISubroutineType(types: !15641)
!15641 = !{null, !15642, !2468}
!15642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 32)
!15643 = !{!15638, !15644, !15645}
!15644 = !DILocalVariable(name: "thread", arg: 2, scope: !15639, file: !2573, line: 182, type: !2468)
!15645 = !DILocalVariable(name: "t", scope: !15639, file: !2573, line: 184, type: !2468)
!15646 = !DILocation(line: 0, scope: !15639, inlinedAt: !15647)
!15647 = distinct !DILocation(line: 229, column: 2, scope: !15632, inlinedAt: !15635)
!15648 = !DILocation(line: 188, column: 2, scope: !15649, inlinedAt: !15647)
!15649 = distinct !DILexicalBlock(scope: !15639, file: !2573, line: 188, column: 2)
!15650 = !DILocation(line: 188, column: 2, scope: !15651, inlinedAt: !15647)
!15651 = distinct !DILexicalBlock(scope: !15649, file: !2573, line: 188, column: 2)
!15652 = !DILocation(line: 0, scope: !15649, inlinedAt: !15647)
!15653 = !DILocation(line: 189, column: 7, scope: !15654, inlinedAt: !15647)
!15654 = distinct !DILexicalBlock(scope: !15655, file: !2573, line: 189, column: 7)
!15655 = distinct !DILexicalBlock(scope: !15651, file: !2573, line: 188, column: 56)
!15656 = !DILocation(line: 189, column: 35, scope: !15654, inlinedAt: !15647)
!15657 = !DILocation(line: 189, column: 7, scope: !15655, inlinedAt: !15647)
!15658 = !DILocation(line: 191, column: 21, scope: !15659, inlinedAt: !15647)
!15659 = distinct !DILexicalBlock(scope: !15654, file: !2573, line: 189, column: 40)
!15660 = !DILocation(line: 190, column: 4, scope: !15659, inlinedAt: !15647)
!15661 = !DILocation(line: 192, column: 4, scope: !15659, inlinedAt: !15647)
!15662 = distinct !{!15662, !15648, !15663}
!15663 = !DILocation(line: 194, column: 2, scope: !15649, inlinedAt: !15647)
!15664 = !DILocation(line: 196, column: 37, scope: !15639, inlinedAt: !15647)
!15665 = !DILocation(line: 196, column: 2, scope: !15639, inlinedAt: !15647)
!15666 = !DILocation(line: 197, column: 1, scope: !15639, inlinedAt: !15647)
!15667 = !DILocation(line: 399, column: 25, scope: !15600)
!15668 = !DILocation(line: 399, column: 22, scope: !15600)
!15669 = !DILocation(line: 399, column: 2, scope: !15600)
!15670 = !DILocation(line: 400, column: 1, scope: !15600)
!15671 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14447, file: !14447, line: 136, type: !15557, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15672)
!15672 = !{!15673}
!15673 = !DILocalVariable(name: "thread", arg: 1, scope: !15671, file: !14447, line: 136, type: !2468)
!15674 = !DILocation(line: 0, scope: !15671)
!15675 = !DILocation(line: 138, column: 9, scope: !15671)
!15676 = !DILocation(line: 138, column: 2, scope: !15671)
!15677 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2573, file: !2573, line: 1137, type: !15640, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15678)
!15678 = !{!15679, !15680}
!15679 = !DILocalVariable(name: "pq", arg: 1, scope: !15677, file: !2573, line: 1137, type: !15642)
!15680 = !DILocalVariable(name: "thread", arg: 2, scope: !15677, file: !2573, line: 1137, type: !2468)
!15681 = !DILocation(line: 0, scope: !15677)
!15682 = !DILocation(line: 1141, column: 33, scope: !15677)
!15683 = !DILocation(line: 1141, column: 2, scope: !15677)
!15684 = !DILocation(line: 1142, column: 1, scope: !15677)
!15685 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !321, file: !321, line: 294, type: !15686, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15688)
!15686 = !DISubroutineType(types: !15687)
!15687 = !{!2569, !15642}
!15688 = !{!15689}
!15689 = !DILocalVariable(name: "list", arg: 1, scope: !15685, file: !321, line: 294, type: !15642)
!15690 = !DILocation(line: 0, scope: !15685)
!15691 = !DILocation(line: 296, column: 9, scope: !15685)
!15692 = !DILocation(line: 296, column: 49, scope: !15685)
!15693 = !DILocation(line: 296, column: 2, scope: !15685)
!15694 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !321, file: !321, line: 443, type: !15695, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15697)
!15695 = !DISubroutineType(types: !15696)
!15696 = !{null, !2569, !2569}
!15697 = !{!15698, !15699, !15700}
!15698 = !DILocalVariable(name: "successor", arg: 1, scope: !15694, file: !321, line: 443, type: !2569)
!15699 = !DILocalVariable(name: "node", arg: 2, scope: !15694, file: !321, line: 443, type: !2569)
!15700 = !DILocalVariable(name: "prev", scope: !15694, file: !321, line: 445, type: !15701)
!15701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2569)
!15702 = !DILocation(line: 0, scope: !15694)
!15703 = !DILocation(line: 445, column: 39, scope: !15694)
!15704 = !DILocation(line: 447, column: 8, scope: !15694)
!15705 = !DILocation(line: 447, column: 13, scope: !15694)
!15706 = !DILocation(line: 448, column: 8, scope: !15694)
!15707 = !DILocation(line: 448, column: 13, scope: !15694)
!15708 = !DILocation(line: 449, column: 8, scope: !15694)
!15709 = !DILocation(line: 449, column: 13, scope: !15694)
!15710 = !DILocation(line: 450, column: 18, scope: !15694)
!15711 = !DILocation(line: 451, column: 1, scope: !15694)
!15712 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !321, file: !321, line: 341, type: !15713, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15715)
!15713 = !DISubroutineType(types: !15714)
!15714 = !{!2569, !15642, !2569}
!15715 = !{!15716, !15717}
!15716 = !DILocalVariable(name: "list", arg: 1, scope: !15712, file: !321, line: 341, type: !15642)
!15717 = !DILocalVariable(name: "node", arg: 2, scope: !15712, file: !321, line: 342, type: !2569)
!15718 = !DILocation(line: 0, scope: !15712)
!15719 = !DILocation(line: 344, column: 15, scope: !15712)
!15720 = !DILocation(line: 344, column: 9, scope: !15712)
!15721 = !DILocation(line: 344, column: 26, scope: !15712)
!15722 = !DILocation(line: 344, column: 2, scope: !15712)
!15723 = distinct !DISubprogram(name: "sys_dlist_append", scope: !321, file: !321, line: 404, type: !15724, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15726)
!15724 = !DISubroutineType(types: !15725)
!15725 = !{null, !15642, !2569}
!15726 = !{!15727, !15728, !15729}
!15727 = !DILocalVariable(name: "list", arg: 1, scope: !15723, file: !321, line: 404, type: !15642)
!15728 = !DILocalVariable(name: "node", arg: 2, scope: !15723, file: !321, line: 404, type: !2569)
!15729 = !DILocalVariable(name: "tail", scope: !15723, file: !321, line: 406, type: !15701)
!15730 = !DILocation(line: 0, scope: !15723)
!15731 = !DILocation(line: 406, column: 34, scope: !15723)
!15732 = !DILocation(line: 408, column: 8, scope: !15723)
!15733 = !DILocation(line: 408, column: 13, scope: !15723)
!15734 = !DILocation(line: 409, column: 8, scope: !15723)
!15735 = !DILocation(line: 409, column: 13, scope: !15723)
!15736 = !DILocation(line: 411, column: 8, scope: !15723)
!15737 = !DILocation(line: 411, column: 13, scope: !15723)
!15738 = !DILocation(line: 412, column: 13, scope: !15723)
!15739 = !DILocation(line: 413, column: 1, scope: !15723)
!15740 = distinct !DISubprogram(name: "update_cache", scope: !2573, file: !2573, line: 559, type: !8563, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15741)
!15741 = !{!15742, !15743}
!15742 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15740, file: !2573, line: 559, type: !103)
!15743 = !DILocalVariable(name: "thread", scope: !15740, file: !2573, line: 562, type: !2468)
!15744 = !DILocation(line: 0, scope: !15740)
!15745 = !DILocation(line: 239, column: 9, scope: !15746, inlinedAt: !15749)
!15746 = distinct !DISubprogram(name: "runq_best", scope: !2573, file: !2573, line: 237, type: !15747, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!15747 = !DISubroutineType(types: !15748)
!15748 = !{!2468}
!15749 = distinct !DILocation(line: 314, column: 28, scope: !15750, inlinedAt: !15753)
!15750 = distinct !DISubprogram(name: "next_up", scope: !2573, file: !2573, line: 312, type: !15747, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15751)
!15751 = !{!15752}
!15752 = !DILocalVariable(name: "thread", scope: !15750, file: !2573, line: 314, type: !2468)
!15753 = distinct !DILocation(line: 562, column: 28, scope: !15740)
!15754 = !DILocation(line: 0, scope: !15750, inlinedAt: !15753)
!15755 = !DILocation(line: 340, column: 17, scope: !15750, inlinedAt: !15753)
!15756 = !DILocation(line: 340, column: 9, scope: !15750, inlinedAt: !15753)
!15757 = !DILocalVariable(name: "thread", arg: 1, scope: !15758, file: !2573, line: 127, type: !2468)
!15758 = distinct !DISubprogram(name: "should_preempt", scope: !2573, file: !2573, line: 127, type: !15759, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15761)
!15759 = !DISubroutineType(types: !15760)
!15760 = !{!166, !2468, !103}
!15761 = !{!15757, !15762}
!15762 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15758, file: !2573, line: 128, type: !103)
!15763 = !DILocation(line: 0, scope: !15758, inlinedAt: !15764)
!15764 = distinct !DILocation(line: 564, column: 6, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15740, file: !2573, line: 564, column: 6)
!15766 = !DILocation(line: 133, column: 17, scope: !15767, inlinedAt: !15764)
!15767 = distinct !DILexicalBlock(scope: !15758, file: !2573, line: 133, column: 6)
!15768 = !DILocation(line: 0, scope: !15765)
!15769 = !DILocation(line: 133, column: 6, scope: !15758, inlinedAt: !15764)
!15770 = !DILocation(line: 140, column: 6, scope: !15771, inlinedAt: !15764)
!15771 = distinct !DILexicalBlock(scope: !15758, file: !2573, line: 140, column: 6)
!15772 = !DILocation(line: 140, column: 6, scope: !15758, inlinedAt: !15764)
!15773 = !DILocation(line: 150, column: 9, scope: !15774, inlinedAt: !15764)
!15774 = distinct !DILexicalBlock(scope: !15758, file: !2573, line: 149, column: 6)
!15775 = !DILocation(line: 149, column: 6, scope: !15758, inlinedAt: !15764)
!15776 = !DILocation(line: 157, column: 6, scope: !15777, inlinedAt: !15764)
!15777 = distinct !DILexicalBlock(scope: !15758, file: !2573, line: 157, column: 6)
!15778 = !DILocation(line: 564, column: 6, scope: !15740)
!15779 = !DILocation(line: 566, column: 14, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !15781, file: !2573, line: 566, column: 7)
!15781 = distinct !DILexicalBlock(scope: !15765, file: !2573, line: 564, column: 42)
!15782 = !DILocation(line: 566, column: 7, scope: !15781)
!15783 = !DILocation(line: 567, column: 4, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !15780, file: !2573, line: 566, column: 27)
!15785 = !DILocation(line: 568, column: 3, scope: !15784)
!15786 = !DILocation(line: 585, column: 1, scope: !15740)
!15787 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2573, file: !2573, line: 1144, type: !15788, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15790)
!15788 = !DISubroutineType(types: !15789)
!15789 = !{!2468, !15642}
!15790 = !{!15791, !15792, !15793}
!15791 = !DILocalVariable(name: "pq", arg: 1, scope: !15787, file: !2573, line: 1144, type: !15642)
!15792 = !DILocalVariable(name: "thread", scope: !15787, file: !2573, line: 1146, type: !2468)
!15793 = !DILocalVariable(name: "n", scope: !15787, file: !2573, line: 1147, type: !2569)
!15794 = !DILocation(line: 0, scope: !15787)
!15795 = !DILocation(line: 1147, column: 19, scope: !15787)
!15796 = !DILocation(line: 1152, column: 2, scope: !15787)
!15797 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14447, file: !14447, line: 115, type: !15557, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15798)
!15798 = !{!15799}
!15799 = !DILocalVariable(name: "thread", arg: 1, scope: !15797, file: !14447, line: 115, type: !2468)
!15800 = !DILocation(line: 0, scope: !15797)
!15801 = !DILocation(line: 117, column: 46, scope: !15797)
!15802 = !DILocation(line: 117, column: 10, scope: !15797)
!15803 = !DILocation(line: 117, column: 9, scope: !15797)
!15804 = !DILocation(line: 117, column: 2, scope: !15797)
!15805 = distinct !DISubprogram(name: "is_preempt", scope: !2573, file: !2573, line: 62, type: !15415, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15806)
!15806 = !{!15807}
!15807 = !DILocalVariable(name: "thread", arg: 1, scope: !15805, file: !2573, line: 62, type: !2468)
!15808 = !DILocation(line: 0, scope: !15805)
!15809 = !DILocation(line: 65, column: 22, scope: !15805)
!15810 = !DILocation(line: 65, column: 30, scope: !15805)
!15811 = !DILocation(line: 65, column: 2, scope: !15805)
!15812 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14841, file: !14841, line: 35, type: !15813, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15817)
!15813 = !DISubroutineType(types: !15814)
!15814 = !{!166, !15815}
!15815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15816, size: 32)
!15816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2519)
!15817 = !{!15818}
!15818 = !DILocalVariable(name: "to", arg: 1, scope: !15812, file: !14841, line: 35, type: !15815)
!15819 = !DILocation(line: 0, scope: !15812)
!15820 = !DILocation(line: 37, column: 35, scope: !15812)
!15821 = !DILocation(line: 37, column: 10, scope: !15812)
!15822 = !DILocation(line: 37, column: 9, scope: !15812)
!15823 = !DILocation(line: 37, column: 2, scope: !15812)
!15824 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !321, file: !321, line: 225, type: !15825, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15829)
!15825 = !DISubroutineType(types: !15826)
!15826 = !{!166, !15827}
!15827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15828, size: 32)
!15828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2478)
!15829 = !{!15830}
!15830 = !DILocalVariable(name: "node", arg: 1, scope: !15824, file: !321, line: 225, type: !15827)
!15831 = !DILocation(line: 0, scope: !15824)
!15832 = !DILocation(line: 227, column: 15, scope: !15824)
!15833 = !DILocation(line: 227, column: 20, scope: !15824)
!15834 = !DILocation(line: 227, column: 2, scope: !15824)
!15835 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !321, file: !321, line: 325, type: !15713, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15836)
!15836 = !{!15837, !15838}
!15837 = !DILocalVariable(name: "list", arg: 1, scope: !15835, file: !321, line: 325, type: !15642)
!15838 = !DILocalVariable(name: "node", arg: 2, scope: !15835, file: !321, line: 326, type: !2569)
!15839 = !DILocation(line: 0, scope: !15835)
!15840 = !DILocation(line: 328, column: 24, scope: !15835)
!15841 = !DILocation(line: 328, column: 15, scope: !15835)
!15842 = !DILocation(line: 328, column: 9, scope: !15835)
!15843 = !DILocation(line: 328, column: 45, scope: !15835)
!15844 = !DILocation(line: 328, column: 2, scope: !15835)
!15845 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !321, file: !321, line: 266, type: !15846, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15848)
!15846 = !DISubroutineType(types: !15847)
!15847 = !{!166, !15642}
!15848 = !{!15849}
!15849 = !DILocalVariable(name: "list", arg: 1, scope: !15845, file: !321, line: 266, type: !15642)
!15850 = !DILocation(line: 0, scope: !15845)
!15851 = !DILocation(line: 268, column: 15, scope: !15845)
!15852 = !DILocation(line: 268, column: 20, scope: !15845)
!15853 = !DILocation(line: 268, column: 2, scope: !15845)
!15854 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !321, file: !321, line: 496, type: !15855, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15857)
!15855 = !DISubroutineType(types: !15856)
!15856 = !{null, !2569}
!15857 = !{!15858, !15859, !15860}
!15858 = !DILocalVariable(name: "node", arg: 1, scope: !15854, file: !321, line: 496, type: !2569)
!15859 = !DILocalVariable(name: "prev", scope: !15854, file: !321, line: 498, type: !15701)
!15860 = !DILocalVariable(name: "next", scope: !15854, file: !321, line: 499, type: !15701)
!15861 = !DILocation(line: 0, scope: !15854)
!15862 = !DILocation(line: 498, column: 34, scope: !15854)
!15863 = !DILocation(line: 499, column: 34, scope: !15854)
!15864 = !DILocation(line: 501, column: 8, scope: !15854)
!15865 = !DILocation(line: 501, column: 13, scope: !15854)
!15866 = !DILocation(line: 502, column: 8, scope: !15854)
!15867 = !DILocation(line: 502, column: 13, scope: !15854)
!15868 = !DILocation(line: 503, column: 2, scope: !15854)
!15869 = !DILocation(line: 504, column: 1, scope: !15854)
!15870 = distinct !DISubprogram(name: "sys_dnode_init", scope: !321, file: !321, line: 211, type: !15855, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15871)
!15871 = !{!15872}
!15872 = !DILocalVariable(name: "node", arg: 1, scope: !15870, file: !321, line: 211, type: !2569)
!15873 = !DILocation(line: 0, scope: !15870)
!15874 = !DILocation(line: 213, column: 8, scope: !15870)
!15875 = !DILocation(line: 213, column: 13, scope: !15870)
!15876 = !DILocation(line: 214, column: 8, scope: !15870)
!15877 = !DILocation(line: 214, column: 13, scope: !15870)
!15878 = !DILocation(line: 215, column: 1, scope: !15870)
!15879 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14447, file: !14447, line: 131, type: !15880, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15882)
!15880 = !DISubroutineType(types: !15881)
!15881 = !{!166, !2468, !132}
!15882 = !{!15883, !15884}
!15883 = !DILocalVariable(name: "thread", arg: 1, scope: !15879, file: !14447, line: 131, type: !2468)
!15884 = !DILocalVariable(name: "state", arg: 2, scope: !15879, file: !14447, line: 131, type: !132)
!15885 = !DILocation(line: 0, scope: !15879)
!15886 = !DILocation(line: 133, column: 23, scope: !15879)
!15887 = !DILocation(line: 133, column: 45, scope: !15879)
!15888 = !DILocation(line: 133, column: 2, scope: !15879)
!15889 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14447, file: !14447, line: 211, type: !15890, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15892)
!15890 = !DISubroutineType(types: !15891)
!15891 = !{!166, !103, !103}
!15892 = !{!15893, !15894}
!15893 = !DILocalVariable(name: "prio", arg: 1, scope: !15889, file: !14447, line: 211, type: !103)
!15894 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15889, file: !14447, line: 211, type: !103)
!15895 = !DILocation(line: 0, scope: !15889)
!15896 = !DILocation(line: 213, column: 9, scope: !15889)
!15897 = !DILocation(line: 213, column: 2, scope: !15889)
!15898 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14447, file: !14447, line: 83, type: !15557, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15899)
!15899 = !{!15900}
!15900 = !DILocalVariable(name: "thread", arg: 1, scope: !15898, file: !14447, line: 83, type: !2468)
!15901 = !DILocation(line: 0, scope: !15898)
!15902 = !DILocation(line: 89, column: 16, scope: !15898)
!15903 = !DILocation(line: 89, column: 2, scope: !15898)
!15904 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14447, file: !14447, line: 206, type: !15890, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15905)
!15905 = !{!15906, !15907}
!15906 = !DILocalVariable(name: "prio1", arg: 1, scope: !15904, file: !14447, line: 206, type: !103)
!15907 = !DILocalVariable(name: "prio2", arg: 2, scope: !15904, file: !14447, line: 206, type: !103)
!15908 = !DILocation(line: 0, scope: !15904)
!15909 = !DILocation(line: 208, column: 15, scope: !15904)
!15910 = !DILocation(line: 208, column: 2, scope: !15904)
!15911 = distinct !DISubprogram(name: "z_ready_thread", scope: !2573, file: !2573, line: 635, type: !15397, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15912)
!15912 = !{!15913, !15914, !15916}
!15913 = !DILocalVariable(name: "thread", arg: 1, scope: !15911, file: !2573, line: 635, type: !2468)
!15914 = !DILocalVariable(name: "__i", scope: !15915, file: !2573, line: 637, type: !15431)
!15915 = distinct !DILexicalBlock(scope: !15911, file: !2573, line: 637, column: 2)
!15916 = !DILocalVariable(name: "__key", scope: !15915, file: !2573, line: 637, type: !15431)
!15917 = !DILocation(line: 0, scope: !15911)
!15918 = !DILocation(line: 0, scope: !15915)
!15919 = !DILocation(line: 0, scope: !15439, inlinedAt: !15920)
!15920 = distinct !DILocation(line: 637, column: 2, scope: !15915)
!15921 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !15920)
!15923 = !DILocation(line: 0, scope: !15448, inlinedAt: !15922)
!15924 = !DILocation(line: 639, column: 4, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15926, file: !2573, line: 638, column: 41)
!15926 = distinct !DILexicalBlock(scope: !15927, file: !2573, line: 638, column: 7)
!15927 = distinct !DILexicalBlock(scope: !15928, file: !2573, line: 637, column: 26)
!15928 = distinct !DILexicalBlock(scope: !15915, file: !2573, line: 637, column: 2)
!15929 = !DILocation(line: 0, scope: !15466, inlinedAt: !15930)
!15930 = distinct !DILocation(line: 637, column: 2, scope: !15928)
!15931 = !DILocation(line: 0, scope: !15474, inlinedAt: !15932)
!15932 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !15930)
!15933 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !15932)
!15934 = !DILocation(line: 642, column: 1, scope: !15911)
!15935 = distinct !DISubprogram(name: "ready_thread", scope: !2573, file: !2573, line: 617, type: !15397, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15936)
!15936 = !{!15937}
!15937 = !DILocalVariable(name: "thread", arg: 1, scope: !15935, file: !2573, line: 617, type: !2468)
!15938 = !DILocation(line: 0, scope: !15935)
!15939 = !DILocation(line: 626, column: 7, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15935, file: !2573, line: 626, column: 6)
!15941 = !DILocation(line: 626, column: 34, scope: !15940)
!15942 = !DILocation(line: 626, column: 37, scope: !15940)
!15943 = !DILocation(line: 626, column: 6, scope: !15935)
!15944 = !DILocation(line: 0, scope: !15625, inlinedAt: !15945)
!15945 = distinct !DILocation(line: 629, column: 3, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15940, file: !2573, line: 626, column: 64)
!15947 = !DILocation(line: 252, column: 15, scope: !15625, inlinedAt: !15945)
!15948 = !DILocation(line: 252, column: 28, scope: !15625, inlinedAt: !15945)
!15949 = !DILocation(line: 0, scope: !15632, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 254, column: 3, scope: !15636, inlinedAt: !15945)
!15951 = !DILocation(line: 0, scope: !15639, inlinedAt: !15952)
!15952 = distinct !DILocation(line: 229, column: 2, scope: !15632, inlinedAt: !15950)
!15953 = !DILocation(line: 188, column: 2, scope: !15649, inlinedAt: !15952)
!15954 = !DILocation(line: 188, column: 2, scope: !15651, inlinedAt: !15952)
!15955 = !DILocation(line: 0, scope: !15649, inlinedAt: !15952)
!15956 = !DILocation(line: 189, column: 7, scope: !15654, inlinedAt: !15952)
!15957 = !DILocation(line: 189, column: 35, scope: !15654, inlinedAt: !15952)
!15958 = !DILocation(line: 189, column: 7, scope: !15655, inlinedAt: !15952)
!15959 = !DILocation(line: 191, column: 21, scope: !15659, inlinedAt: !15952)
!15960 = !DILocation(line: 190, column: 4, scope: !15659, inlinedAt: !15952)
!15961 = !DILocation(line: 192, column: 4, scope: !15659, inlinedAt: !15952)
!15962 = distinct !{!15962, !15953, !15963}
!15963 = !DILocation(line: 194, column: 2, scope: !15649, inlinedAt: !15952)
!15964 = !DILocation(line: 196, column: 37, scope: !15639, inlinedAt: !15952)
!15965 = !DILocation(line: 196, column: 2, scope: !15639, inlinedAt: !15952)
!15966 = !DILocation(line: 197, column: 1, scope: !15639, inlinedAt: !15952)
!15967 = !DILocation(line: 630, column: 3, scope: !15946)
!15968 = !DILocation(line: 632, column: 2, scope: !15946)
!15969 = !DILocation(line: 633, column: 1, scope: !15935)
!15970 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14447, file: !14447, line: 120, type: !15557, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15971)
!15971 = !{!15972}
!15972 = !DILocalVariable(name: "thread", arg: 1, scope: !15970, file: !14447, line: 120, type: !2468)
!15973 = !DILocation(line: 0, scope: !15970)
!15974 = !DILocation(line: 122, column: 12, scope: !15970)
!15975 = !DILocation(line: 122, column: 62, scope: !15970)
!15976 = !DILocation(line: 123, column: 4, scope: !15970)
!15977 = !DILocation(line: 122, column: 2, scope: !15970)
!15978 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2573, file: !2573, line: 644, type: !15397, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !15979)
!15979 = !{!15980, !15981, !15983}
!15980 = !DILocalVariable(name: "thread", arg: 1, scope: !15978, file: !2573, line: 644, type: !2468)
!15981 = !DILocalVariable(name: "__i", scope: !15982, file: !2573, line: 646, type: !15431)
!15982 = distinct !DILexicalBlock(scope: !15978, file: !2573, line: 646, column: 2)
!15983 = !DILocalVariable(name: "__key", scope: !15982, file: !2573, line: 646, type: !15431)
!15984 = !DILocation(line: 0, scope: !15978)
!15985 = !DILocation(line: 0, scope: !15982)
!15986 = !DILocation(line: 0, scope: !15439, inlinedAt: !15987)
!15987 = distinct !DILocation(line: 646, column: 2, scope: !15982)
!15988 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !15989)
!15989 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !15987)
!15990 = !DILocation(line: 0, scope: !15448, inlinedAt: !15989)
!15991 = !DILocation(line: 647, column: 3, scope: !15992)
!15992 = distinct !DILexicalBlock(scope: !15993, file: !2573, line: 646, column: 26)
!15993 = distinct !DILexicalBlock(scope: !15982, file: !2573, line: 646, column: 2)
!15994 = !DILocation(line: 0, scope: !15466, inlinedAt: !15995)
!15995 = distinct !DILocation(line: 646, column: 2, scope: !15993)
!15996 = !DILocation(line: 0, scope: !15474, inlinedAt: !15997)
!15997 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !15995)
!15998 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !15997)
!15999 = !DILocation(line: 649, column: 1, scope: !15978)
!16000 = distinct !DISubprogram(name: "z_sched_start", scope: !2573, file: !2573, line: 651, type: !15397, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16001)
!16001 = !{!16002, !16003}
!16002 = !DILocalVariable(name: "thread", arg: 1, scope: !16000, file: !2573, line: 651, type: !2468)
!16003 = !DILocalVariable(name: "key", scope: !16000, file: !2573, line: 653, type: !15431)
!16004 = !DILocation(line: 0, scope: !16000)
!16005 = !DILocation(line: 0, scope: !15439, inlinedAt: !16006)
!16006 = distinct !DILocation(line: 653, column: 25, scope: !16000)
!16007 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16008)
!16008 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16006)
!16009 = !DILocation(line: 0, scope: !15448, inlinedAt: !16008)
!16010 = !DILocation(line: 655, column: 6, scope: !16011)
!16011 = distinct !DILexicalBlock(scope: !16000, file: !2573, line: 655, column: 6)
!16012 = !DILocation(line: 655, column: 6, scope: !16000)
!16013 = !DILocation(line: 0, scope: !15466, inlinedAt: !16014)
!16014 = distinct !DILocation(line: 656, column: 3, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !16011, file: !2573, line: 655, column: 36)
!16016 = !DILocation(line: 0, scope: !15474, inlinedAt: !16017)
!16017 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16014)
!16018 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16017)
!16019 = !DILocation(line: 657, column: 3, scope: !16015)
!16020 = !DILocation(line: 660, column: 2, scope: !16000)
!16021 = !DILocation(line: 661, column: 2, scope: !16000)
!16022 = !DILocation(line: 662, column: 2, scope: !16000)
!16023 = !DILocation(line: 663, column: 1, scope: !16000)
!16024 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14447, file: !14447, line: 126, type: !15557, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16025)
!16025 = !{!16026}
!16026 = !DILocalVariable(name: "thread", arg: 1, scope: !16024, file: !14447, line: 126, type: !2468)
!16027 = !DILocation(line: 0, scope: !16024)
!16028 = !DILocation(line: 128, column: 23, scope: !16024)
!16029 = !DILocation(line: 128, column: 36, scope: !16024)
!16030 = !DILocation(line: 128, column: 56, scope: !16024)
!16031 = !DILocation(line: 128, column: 2, scope: !16024)
!16032 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14447, file: !14447, line: 155, type: !15397, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16033)
!16033 = !{!16034}
!16034 = !DILocalVariable(name: "thread", arg: 1, scope: !16032, file: !14447, line: 155, type: !2468)
!16035 = !DILocation(line: 0, scope: !16032)
!16036 = !DILocation(line: 157, column: 15, scope: !16032)
!16037 = !DILocation(line: 157, column: 28, scope: !16032)
!16038 = !DILocation(line: 158, column: 1, scope: !16032)
!16039 = distinct !DISubprogram(name: "z_reschedule", scope: !2573, file: !2573, line: 967, type: !15467, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16040)
!16040 = !{!16041, !16042}
!16041 = !DILocalVariable(name: "lock", arg: 1, scope: !16039, file: !2573, line: 967, type: !15442)
!16042 = !DILocalVariable(name: "key", arg: 2, scope: !16039, file: !2573, line: 967, type: !15431)
!16043 = !DILocation(line: 0, scope: !16039)
!16044 = !DILocation(line: 969, column: 6, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !16039, file: !2573, line: 969, column: 6)
!16046 = !DILocation(line: 969, column: 23, scope: !16045)
!16047 = !DILocation(line: 969, column: 26, scope: !16045)
!16048 = !DILocation(line: 969, column: 6, scope: !16039)
!16049 = !DILocalVariable(name: "key", arg: 2, scope: !16050, file: !14551, line: 193, type: !15431)
!16050 = distinct !DISubprogram(name: "z_swap", scope: !14551, file: !14551, line: 193, type: !16051, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16053)
!16051 = !DISubroutineType(types: !16052)
!16052 = !{!103, !15442, !15431}
!16053 = !{!16054, !16049}
!16054 = !DILocalVariable(name: "lock", arg: 1, scope: !16050, file: !14551, line: 193, type: !15442)
!16055 = !DILocation(line: 0, scope: !16050, inlinedAt: !16056)
!16056 = distinct !DILocation(line: 970, column: 3, scope: !16057)
!16057 = distinct !DILexicalBlock(scope: !16045, file: !2573, line: 969, column: 39)
!16058 = !DILocation(line: 196, column: 9, scope: !16050, inlinedAt: !16056)
!16059 = !DILocation(line: 971, column: 2, scope: !16057)
!16060 = !DILocation(line: 0, scope: !15466, inlinedAt: !16061)
!16061 = distinct !DILocation(line: 972, column: 3, scope: !16062)
!16062 = distinct !DILexicalBlock(scope: !16045, file: !2573, line: 971, column: 9)
!16063 = !DILocation(line: 0, scope: !15474, inlinedAt: !16064)
!16064 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16061)
!16065 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16064)
!16066 = !DILocation(line: 975, column: 1, scope: !16039)
!16067 = distinct !DISubprogram(name: "resched", scope: !2573, file: !2573, line: 940, type: !16068, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16070)
!16068 = !DISubroutineType(types: !16069)
!16069 = !{!166, !132}
!16070 = !{!16071}
!16071 = !DILocalVariable(name: "key", arg: 1, scope: !16067, file: !2573, line: 940, type: !132)
!16072 = !DILocation(line: 0, scope: !16067)
!16073 = !DILocalVariable(name: "key", arg: 1, scope: !16074, file: !5901, line: 112, type: !32)
!16074 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5901, file: !5901, line: 112, type: !16075, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16077)
!16075 = !DISubroutineType(types: !16076)
!16076 = !{!166, !32}
!16077 = !{!16073}
!16078 = !DILocation(line: 0, scope: !16074, inlinedAt: !16079)
!16079 = distinct !DILocation(line: 946, column: 9, scope: !16067)
!16080 = !DILocation(line: 115, column: 13, scope: !16074, inlinedAt: !16079)
!16081 = !DILocation(line: 946, column: 32, scope: !16067)
!16082 = !DILocation(line: 1031, column: 3, scope: !16083, inlinedAt: !16086)
!16083 = distinct !DISubprogram(name: "__get_IPSR", scope: !6921, file: !6921, line: 1027, type: !7002, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16084)
!16084 = !{!16085}
!16085 = !DILocalVariable(name: "result", scope: !16083, file: !6921, line: 1029, type: !132)
!16086 = distinct !DILocation(line: 48, column: 10, scope: !16087, inlinedAt: !16088)
!16087 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7715, file: !7715, line: 46, type: !7716, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!16088 = distinct !DILocation(line: 946, column: 36, scope: !16067)
!16089 = !{i64 3768896}
!16090 = !DILocation(line: 0, scope: !16083, inlinedAt: !16086)
!16091 = !DILocation(line: 48, column: 9, scope: !16087, inlinedAt: !16088)
!16092 = !DILocation(line: 946, column: 2, scope: !16067)
!16093 = distinct !DISubprogram(name: "need_swap", scope: !2573, file: !2573, line: 953, type: !7716, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16094)
!16094 = !{!16095}
!16095 = !DILocalVariable(name: "new_thread", scope: !16093, file: !2573, line: 959, type: !2468)
!16096 = !DILocation(line: 962, column: 31, scope: !16093)
!16097 = !DILocation(line: 0, scope: !16093)
!16098 = !DILocation(line: 963, column: 23, scope: !16093)
!16099 = !DILocation(line: 963, column: 20, scope: !16093)
!16100 = !DILocation(line: 963, column: 2, scope: !16093)
!16101 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14551, file: !14551, line: 181, type: !6931, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16102)
!16102 = !{!16103, !16104}
!16103 = !DILocalVariable(name: "key", arg: 1, scope: !16101, file: !14551, line: 181, type: !32)
!16104 = !DILocalVariable(name: "ret", scope: !16101, file: !14551, line: 183, type: !103)
!16105 = !DILocation(line: 0, scope: !16101)
!16106 = !DILocation(line: 185, column: 8, scope: !16101)
!16107 = !DILocation(line: 186, column: 2, scope: !16101)
!16108 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2573, file: !2573, line: 665, type: !15397, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16109)
!16109 = !{!16110, !16111, !16113}
!16110 = !DILocalVariable(name: "thread", arg: 1, scope: !16108, file: !2573, line: 665, type: !2468)
!16111 = !DILocalVariable(name: "__i", scope: !16112, file: !2573, line: 671, type: !15431)
!16112 = distinct !DILexicalBlock(scope: !16108, file: !2573, line: 671, column: 2)
!16113 = !DILocalVariable(name: "__key", scope: !16112, file: !2573, line: 671, type: !15431)
!16114 = !DILocation(line: 0, scope: !16108)
!16115 = !DILocation(line: 669, column: 8, scope: !16108)
!16116 = !DILocation(line: 0, scope: !16112)
!16117 = !DILocation(line: 0, scope: !15439, inlinedAt: !16118)
!16118 = distinct !DILocation(line: 671, column: 2, scope: !16112)
!16119 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16120)
!16120 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16118)
!16121 = !DILocation(line: 0, scope: !15448, inlinedAt: !16120)
!16122 = !DILocation(line: 672, column: 7, scope: !16123)
!16123 = distinct !DILexicalBlock(scope: !16124, file: !2573, line: 672, column: 7)
!16124 = distinct !DILexicalBlock(scope: !16125, file: !2573, line: 671, column: 26)
!16125 = distinct !DILexicalBlock(scope: !16112, file: !2573, line: 671, column: 2)
!16126 = !DILocation(line: 672, column: 7, scope: !16124)
!16127 = !DILocation(line: 0, scope: !15608, inlinedAt: !16128)
!16128 = distinct !DILocation(line: 673, column: 4, scope: !16129)
!16129 = distinct !DILexicalBlock(scope: !16123, file: !2573, line: 672, column: 35)
!16130 = !DILocation(line: 266, column: 15, scope: !15608, inlinedAt: !16128)
!16131 = !DILocation(line: 266, column: 28, scope: !15608, inlinedAt: !16128)
!16132 = !DILocation(line: 0, scope: !15616, inlinedAt: !16133)
!16133 = distinct !DILocation(line: 268, column: 3, scope: !15620, inlinedAt: !16128)
!16134 = !DILocation(line: 234, column: 2, scope: !15616, inlinedAt: !16133)
!16135 = !DILocation(line: 674, column: 3, scope: !16129)
!16136 = !DILocation(line: 675, column: 3, scope: !16124)
!16137 = !DILocation(line: 676, column: 26, scope: !16124)
!16138 = !DILocation(line: 676, column: 23, scope: !16124)
!16139 = !DILocation(line: 676, column: 3, scope: !16124)
!16140 = !DILocation(line: 0, scope: !15466, inlinedAt: !16141)
!16141 = distinct !DILocation(line: 671, column: 2, scope: !16125)
!16142 = !DILocation(line: 0, scope: !15474, inlinedAt: !16143)
!16143 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16141)
!16144 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16143)
!16145 = !DILocation(line: 679, column: 16, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16108, file: !2573, line: 679, column: 6)
!16147 = !DILocation(line: 679, column: 13, scope: !16146)
!16148 = !DILocation(line: 679, column: 6, scope: !16108)
!16149 = !DILocation(line: 680, column: 3, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16146, file: !2573, line: 679, column: 26)
!16151 = !DILocation(line: 681, column: 2, scope: !16150)
!16152 = !DILocation(line: 684, column: 1, scope: !16108)
!16153 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14841, file: !14841, line: 52, type: !15415, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16154)
!16154 = !{!16155}
!16155 = !DILocalVariable(name: "thread", arg: 1, scope: !16153, file: !14841, line: 52, type: !2468)
!16156 = !DILocation(line: 0, scope: !16153)
!16157 = !DILocation(line: 54, column: 39, scope: !16153)
!16158 = !DILocation(line: 54, column: 9, scope: !16153)
!16159 = !DILocation(line: 54, column: 2, scope: !16153)
!16160 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14447, file: !14447, line: 141, type: !15397, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16161)
!16161 = !{!16162}
!16162 = !DILocalVariable(name: "thread", arg: 1, scope: !16160, file: !14447, line: 141, type: !2468)
!16163 = !DILocation(line: 0, scope: !16160)
!16164 = !DILocation(line: 143, column: 15, scope: !16160)
!16165 = !DILocation(line: 143, column: 28, scope: !16160)
!16166 = !DILocation(line: 146, column: 1, scope: !16160)
!16167 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14447, file: !14447, line: 73, type: !3328, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!16168 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16169)
!16169 = distinct !DILocation(line: 75, column: 30, scope: !16167)
!16170 = !DILocation(line: 0, scope: !15448, inlinedAt: !16169)
!16171 = !DILocation(line: 75, column: 9, scope: !16167)
!16172 = !DILocation(line: 76, column: 1, scope: !16167)
!16173 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2573, file: !2573, line: 977, type: !7012, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16174)
!16174 = !{!16175}
!16175 = !DILocalVariable(name: "key", arg: 1, scope: !16173, file: !2573, line: 977, type: !132)
!16176 = !DILocation(line: 0, scope: !16173)
!16177 = !DILocation(line: 979, column: 6, scope: !16178)
!16178 = distinct !DILexicalBlock(scope: !16173, file: !2573, line: 979, column: 6)
!16179 = !DILocation(line: 979, column: 6, scope: !16173)
!16180 = !DILocation(line: 980, column: 3, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16178, file: !2573, line: 979, column: 20)
!16182 = !DILocation(line: 981, column: 2, scope: !16181)
!16183 = !DILocation(line: 0, scope: !15474, inlinedAt: !16184)
!16184 = distinct !DILocation(line: 982, column: 3, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !16178, file: !2573, line: 981, column: 9)
!16186 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16184)
!16187 = !DILocation(line: 985, column: 1, scope: !16173)
!16188 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2573, file: !2573, line: 695, type: !15397, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16189)
!16189 = !{!16190, !16191}
!16190 = !DILocalVariable(name: "thread", arg: 1, scope: !16188, file: !2573, line: 695, type: !2468)
!16191 = !DILocalVariable(name: "key", scope: !16188, file: !2573, line: 699, type: !15431)
!16192 = !DILocation(line: 0, scope: !16188)
!16193 = !DILocation(line: 0, scope: !15439, inlinedAt: !16194)
!16194 = distinct !DILocation(line: 699, column: 25, scope: !16188)
!16195 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16196)
!16196 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16194)
!16197 = !DILocation(line: 0, scope: !15448, inlinedAt: !16196)
!16198 = !DILocation(line: 702, column: 7, scope: !16199)
!16199 = distinct !DILexicalBlock(scope: !16188, file: !2573, line: 702, column: 6)
!16200 = !DILocation(line: 702, column: 6, scope: !16188)
!16201 = !DILocation(line: 0, scope: !15466, inlinedAt: !16202)
!16202 = distinct !DILocation(line: 703, column: 3, scope: !16203)
!16203 = distinct !DILexicalBlock(scope: !16199, file: !2573, line: 702, column: 38)
!16204 = !DILocation(line: 0, scope: !15474, inlinedAt: !16205)
!16205 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16202)
!16206 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16205)
!16207 = !DILocation(line: 704, column: 3, scope: !16203)
!16208 = !DILocation(line: 707, column: 2, scope: !16188)
!16209 = !DILocation(line: 708, column: 2, scope: !16188)
!16210 = !DILocation(line: 710, column: 2, scope: !16188)
!16211 = !DILocation(line: 713, column: 1, scope: !16188)
!16212 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14447, file: !14447, line: 96, type: !15557, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16213)
!16213 = !{!16214}
!16214 = !DILocalVariable(name: "thread", arg: 1, scope: !16212, file: !14447, line: 96, type: !2468)
!16215 = !DILocation(line: 0, scope: !16212)
!16216 = !DILocation(line: 98, column: 23, scope: !16212)
!16217 = !DILocation(line: 98, column: 36, scope: !16212)
!16218 = !DILocation(line: 98, column: 57, scope: !16212)
!16219 = !DILocation(line: 98, column: 2, scope: !16212)
!16220 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14447, file: !14447, line: 148, type: !15397, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16221)
!16221 = !{!16222}
!16222 = !DILocalVariable(name: "thread", arg: 1, scope: !16220, file: !14447, line: 148, type: !2468)
!16223 = !DILocation(line: 0, scope: !16220)
!16224 = !DILocation(line: 150, column: 15, scope: !16220)
!16225 = !DILocation(line: 150, column: 28, scope: !16220)
!16226 = !DILocation(line: 153, column: 1, scope: !16220)
!16227 = distinct !DISubprogram(name: "z_pend_thread", scope: !2573, file: !2573, line: 770, type: !16228, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16234)
!16228 = !DISubroutineType(types: !16229)
!16229 = !{null, !2468, !2499, !16230}
!16230 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1800, line: 67, baseType: !16231)
!16231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1800, line: 65, size: 64, elements: !16232)
!16232 = !{!16233}
!16233 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16231, file: !1800, line: 66, baseType: !1799, size: 64)
!16234 = !{!16235, !16236, !16237, !16238, !16240}
!16235 = !DILocalVariable(name: "thread", arg: 1, scope: !16227, file: !2573, line: 770, type: !2468)
!16236 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16227, file: !2573, line: 770, type: !2499)
!16237 = !DILocalVariable(name: "timeout", arg: 3, scope: !16227, file: !2573, line: 771, type: !16230)
!16238 = !DILocalVariable(name: "__i", scope: !16239, file: !2573, line: 774, type: !15431)
!16239 = distinct !DILexicalBlock(scope: !16227, file: !2573, line: 774, column: 2)
!16240 = !DILocalVariable(name: "__key", scope: !16239, file: !2573, line: 774, type: !15431)
!16241 = !DILocation(line: 0, scope: !16227)
!16242 = !DILocation(line: 0, scope: !16239)
!16243 = !DILocation(line: 0, scope: !15439, inlinedAt: !16244)
!16244 = distinct !DILocation(line: 774, column: 2, scope: !16239)
!16245 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16246)
!16246 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16244)
!16247 = !DILocation(line: 0, scope: !15448, inlinedAt: !16246)
!16248 = !DILocation(line: 775, column: 3, scope: !16249)
!16249 = distinct !DILexicalBlock(scope: !16250, file: !2573, line: 774, column: 26)
!16250 = distinct !DILexicalBlock(scope: !16239, file: !2573, line: 774, column: 2)
!16251 = !DILocation(line: 0, scope: !15466, inlinedAt: !16252)
!16252 = distinct !DILocation(line: 774, column: 2, scope: !16250)
!16253 = !DILocation(line: 0, scope: !15474, inlinedAt: !16254)
!16254 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16252)
!16255 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16254)
!16256 = !DILocation(line: 777, column: 1, scope: !16227)
!16257 = distinct !DISubprogram(name: "pend_locked", scope: !2573, file: !2573, line: 760, type: !16228, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16258)
!16258 = !{!16259, !16260, !16261}
!16259 = !DILocalVariable(name: "thread", arg: 1, scope: !16257, file: !2573, line: 760, type: !2468)
!16260 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16257, file: !2573, line: 760, type: !2499)
!16261 = !DILocalVariable(name: "timeout", arg: 3, scope: !16257, file: !2573, line: 761, type: !16230)
!16262 = !DILocation(line: 0, scope: !16257)
!16263 = !DILocation(line: 766, column: 2, scope: !16257)
!16264 = !DILocation(line: 767, column: 2, scope: !16257)
!16265 = !DILocation(line: 768, column: 1, scope: !16257)
!16266 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2573, file: !2573, line: 740, type: !16267, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16269)
!16267 = !DISubroutineType(types: !16268)
!16268 = !{null, !2468, !2499}
!16269 = !{!16270, !16271}
!16270 = !DILocalVariable(name: "thread", arg: 1, scope: !16266, file: !2573, line: 740, type: !2468)
!16271 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16266, file: !2573, line: 740, type: !2499)
!16272 = !DILocation(line: 0, scope: !16266)
!16273 = !DILocation(line: 742, column: 2, scope: !16266)
!16274 = !DILocation(line: 743, column: 2, scope: !16266)
!16275 = !DILocation(line: 747, column: 13, scope: !16276)
!16276 = distinct !DILexicalBlock(scope: !16266, file: !2573, line: 747, column: 6)
!16277 = !DILocation(line: 747, column: 6, scope: !16266)
!16278 = !DILocation(line: 748, column: 16, scope: !16279)
!16279 = distinct !DILexicalBlock(scope: !16276, file: !2573, line: 747, column: 22)
!16280 = !DILocation(line: 748, column: 26, scope: !16279)
!16281 = !DILocation(line: 749, column: 28, scope: !16279)
!16282 = !DILocation(line: 0, scope: !15639, inlinedAt: !16283)
!16283 = distinct !DILocation(line: 749, column: 3, scope: !16279)
!16284 = !DILocation(line: 188, column: 2, scope: !15649, inlinedAt: !16283)
!16285 = !DILocation(line: 188, column: 2, scope: !15651, inlinedAt: !16283)
!16286 = !DILocation(line: 0, scope: !15649, inlinedAt: !16283)
!16287 = !DILocation(line: 189, column: 7, scope: !15654, inlinedAt: !16283)
!16288 = !DILocation(line: 189, column: 35, scope: !15654, inlinedAt: !16283)
!16289 = !DILocation(line: 189, column: 7, scope: !15655, inlinedAt: !16283)
!16290 = !DILocation(line: 191, column: 21, scope: !15659, inlinedAt: !16283)
!16291 = !DILocation(line: 190, column: 4, scope: !15659, inlinedAt: !16283)
!16292 = !DILocation(line: 192, column: 4, scope: !15659, inlinedAt: !16283)
!16293 = distinct !{!16293, !16284, !16294}
!16294 = !DILocation(line: 194, column: 2, scope: !15649, inlinedAt: !16283)
!16295 = !DILocation(line: 196, column: 37, scope: !15639, inlinedAt: !16283)
!16296 = !DILocation(line: 196, column: 2, scope: !15639, inlinedAt: !16283)
!16297 = !DILocation(line: 197, column: 1, scope: !15639, inlinedAt: !16283)
!16298 = !DILocation(line: 751, column: 1, scope: !16266)
!16299 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2573, file: !2573, line: 753, type: !16300, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16302)
!16300 = !DISubroutineType(types: !16301)
!16301 = !{null, !2468, !16230}
!16302 = !{!16303, !16304}
!16303 = !DILocalVariable(name: "thread", arg: 1, scope: !16299, file: !2573, line: 753, type: !2468)
!16304 = !DILocalVariable(name: "timeout", arg: 2, scope: !16299, file: !2573, line: 753, type: !16230)
!16305 = !DILocation(line: 0, scope: !16299)
!16306 = !DILocation(line: 755, column: 7, scope: !16307)
!16307 = distinct !DILexicalBlock(scope: !16299, file: !2573, line: 755, column: 6)
!16308 = !DILocation(line: 755, column: 6, scope: !16299)
!16309 = !DILocation(line: 756, column: 3, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16307, file: !2573, line: 755, column: 41)
!16311 = !DILocation(line: 757, column: 2, scope: !16310)
!16312 = !DILocation(line: 758, column: 1, scope: !16299)
!16313 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14841, file: !14841, line: 47, type: !16300, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16314)
!16314 = !{!16315, !16316}
!16315 = !DILocalVariable(name: "thread", arg: 1, scope: !16313, file: !14841, line: 47, type: !2468)
!16316 = !DILocalVariable(name: "ticks", arg: 2, scope: !16313, file: !14841, line: 47, type: !16230)
!16317 = !DILocation(line: 0, scope: !16313)
!16318 = !DILocation(line: 49, column: 30, scope: !16313)
!16319 = !DILocation(line: 49, column: 2, scope: !16313)
!16320 = !DILocation(line: 50, column: 1, scope: !16313)
!16321 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2573, file: !2573, line: 795, type: !2525, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16322)
!16322 = !{!16323, !16324, !16325, !16327, !16328}
!16323 = !DILocalVariable(name: "timeout", arg: 1, scope: !16321, file: !2573, line: 795, type: !2527)
!16324 = !DILocalVariable(name: "thread", scope: !16321, file: !2573, line: 797, type: !2468)
!16325 = !DILocalVariable(name: "__i", scope: !16326, file: !2573, line: 800, type: !15431)
!16326 = distinct !DILexicalBlock(scope: !16321, file: !2573, line: 800, column: 2)
!16327 = !DILocalVariable(name: "__key", scope: !16326, file: !2573, line: 800, type: !15431)
!16328 = !DILocalVariable(name: "killed", scope: !16329, file: !2573, line: 801, type: !166)
!16329 = distinct !DILexicalBlock(scope: !16330, file: !2573, line: 800, column: 26)
!16330 = distinct !DILexicalBlock(scope: !16326, file: !2573, line: 800, column: 2)
!16331 = !DILocation(line: 0, scope: !16321)
!16332 = !DILocation(line: 797, column: 28, scope: !16321)
!16333 = !DILocation(line: 0, scope: !16326)
!16334 = !DILocation(line: 0, scope: !15439, inlinedAt: !16335)
!16335 = distinct !DILocation(line: 800, column: 2, scope: !16326)
!16336 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16337)
!16337 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16335)
!16338 = !DILocation(line: 0, scope: !15448, inlinedAt: !16337)
!16339 = !DILocation(line: 801, column: 27, scope: !16329)
!16340 = !DILocation(line: 801, column: 32, scope: !16329)
!16341 = !DILocation(line: 801, column: 61, scope: !16329)
!16342 = !DILocation(line: 0, scope: !16329)
!16343 = !DILocation(line: 804, column: 7, scope: !16329)
!16344 = !DILocation(line: 805, column: 21, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16346, file: !2573, line: 805, column: 8)
!16346 = distinct !DILexicalBlock(scope: !16347, file: !2573, line: 804, column: 16)
!16347 = distinct !DILexicalBlock(scope: !16329, file: !2573, line: 804, column: 7)
!16348 = !DILocation(line: 805, column: 31, scope: !16345)
!16349 = !DILocation(line: 805, column: 8, scope: !16346)
!16350 = !DILocation(line: 806, column: 5, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !16345, file: !2573, line: 805, column: 40)
!16352 = !DILocation(line: 807, column: 4, scope: !16351)
!16353 = !DILocation(line: 808, column: 4, scope: !16346)
!16354 = !DILocation(line: 809, column: 4, scope: !16346)
!16355 = !DILocation(line: 810, column: 4, scope: !16346)
!16356 = !DILocation(line: 811, column: 3, scope: !16346)
!16357 = !DILocation(line: 0, scope: !15466, inlinedAt: !16358)
!16358 = distinct !DILocation(line: 800, column: 2, scope: !16330)
!16359 = !DILocation(line: 0, scope: !15474, inlinedAt: !16360)
!16360 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16358)
!16361 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16360)
!16362 = !DILocation(line: 813, column: 1, scope: !16321)
!16363 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2573, file: !2573, line: 779, type: !15397, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16364)
!16364 = !{!16365}
!16365 = !DILocalVariable(name: "thread", arg: 1, scope: !16363, file: !2573, line: 779, type: !2468)
!16366 = !DILocation(line: 0, scope: !16363)
!16367 = !DILocation(line: 781, column: 2, scope: !16363)
!16368 = !DILocation(line: 782, column: 2, scope: !16363)
!16369 = !DILocation(line: 783, column: 15, scope: !16363)
!16370 = !DILocation(line: 783, column: 25, scope: !16363)
!16371 = !DILocation(line: 784, column: 1, scope: !16363)
!16372 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14447, file: !14447, line: 165, type: !15397, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16373)
!16373 = !{!16374}
!16374 = !DILocalVariable(name: "thread", arg: 1, scope: !16372, file: !14447, line: 165, type: !2468)
!16375 = !DILocation(line: 0, scope: !16372)
!16376 = !DILocation(line: 167, column: 15, scope: !16372)
!16377 = !DILocation(line: 167, column: 28, scope: !16372)
!16378 = !DILocation(line: 168, column: 1, scope: !16372)
!16379 = distinct !DISubprogram(name: "unready_thread", scope: !2573, file: !2573, line: 731, type: !15397, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16380)
!16380 = !{!16381}
!16381 = !DILocalVariable(name: "thread", arg: 1, scope: !16379, file: !2573, line: 731, type: !2468)
!16382 = !DILocation(line: 0, scope: !16379)
!16383 = !DILocation(line: 733, column: 6, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !16379, file: !2573, line: 733, column: 6)
!16385 = !DILocation(line: 733, column: 6, scope: !16379)
!16386 = !DILocation(line: 0, scope: !15608, inlinedAt: !16387)
!16387 = distinct !DILocation(line: 734, column: 3, scope: !16388)
!16388 = distinct !DILexicalBlock(scope: !16384, file: !2573, line: 733, column: 34)
!16389 = !DILocation(line: 266, column: 15, scope: !15608, inlinedAt: !16387)
!16390 = !DILocation(line: 266, column: 28, scope: !15608, inlinedAt: !16387)
!16391 = !DILocation(line: 0, scope: !15616, inlinedAt: !16392)
!16392 = distinct !DILocation(line: 268, column: 3, scope: !15620, inlinedAt: !16387)
!16393 = !DILocation(line: 234, column: 2, scope: !15616, inlinedAt: !16392)
!16394 = !DILocation(line: 735, column: 2, scope: !16388)
!16395 = !DILocation(line: 736, column: 25, scope: !16379)
!16396 = !DILocation(line: 736, column: 22, scope: !16379)
!16397 = !DILocation(line: 736, column: 2, scope: !16379)
!16398 = !DILocation(line: 737, column: 1, scope: !16379)
!16399 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14447, file: !14447, line: 160, type: !15397, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16400)
!16400 = !{!16401}
!16401 = !DILocalVariable(name: "thread", arg: 1, scope: !16399, file: !14447, line: 160, type: !2468)
!16402 = !DILocation(line: 0, scope: !16399)
!16403 = !DILocation(line: 162, column: 15, scope: !16399)
!16404 = !DILocation(line: 162, column: 28, scope: !16399)
!16405 = !DILocation(line: 163, column: 1, scope: !16399)
!16406 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2573, file: !2573, line: 786, type: !15397, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16407)
!16407 = !{!16408, !16409, !16411}
!16408 = !DILocalVariable(name: "thread", arg: 1, scope: !16406, file: !2573, line: 786, type: !2468)
!16409 = !DILocalVariable(name: "__i", scope: !16410, file: !2573, line: 788, type: !15431)
!16410 = distinct !DILexicalBlock(scope: !16406, file: !2573, line: 788, column: 2)
!16411 = !DILocalVariable(name: "__key", scope: !16410, file: !2573, line: 788, type: !15431)
!16412 = !DILocation(line: 0, scope: !16406)
!16413 = !DILocation(line: 0, scope: !16410)
!16414 = !DILocation(line: 0, scope: !15439, inlinedAt: !16415)
!16415 = distinct !DILocation(line: 788, column: 2, scope: !16410)
!16416 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16417)
!16417 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16415)
!16418 = !DILocation(line: 0, scope: !15448, inlinedAt: !16417)
!16419 = !DILocation(line: 789, column: 3, scope: !16420)
!16420 = distinct !DILexicalBlock(scope: !16421, file: !2573, line: 788, column: 26)
!16421 = distinct !DILexicalBlock(scope: !16410, file: !2573, line: 788, column: 2)
!16422 = !DILocation(line: 0, scope: !15466, inlinedAt: !16423)
!16423 = distinct !DILocation(line: 788, column: 2, scope: !16421)
!16424 = !DILocation(line: 0, scope: !15474, inlinedAt: !16425)
!16425 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16423)
!16426 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16425)
!16427 = !DILocation(line: 791, column: 1, scope: !16406)
!16428 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2573, file: !2573, line: 816, type: !16429, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16431)
!16429 = !DISubroutineType(types: !16430)
!16430 = !{!103, !132, !2499, !16230}
!16431 = !{!16432, !16433, !16434, !16435, !16436, !16438}
!16432 = !DILocalVariable(name: "key", arg: 1, scope: !16428, file: !2573, line: 816, type: !132)
!16433 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16428, file: !2573, line: 816, type: !2499)
!16434 = !DILocalVariable(name: "timeout", arg: 3, scope: !16428, file: !2573, line: 816, type: !16230)
!16435 = !DILocalVariable(name: "ret", scope: !16428, file: !2573, line: 828, type: !103)
!16436 = !DILocalVariable(name: "__i", scope: !16437, file: !2573, line: 829, type: !15431)
!16437 = distinct !DILexicalBlock(scope: !16428, file: !2573, line: 829, column: 2)
!16438 = !DILocalVariable(name: "__key", scope: !16437, file: !2573, line: 829, type: !15431)
!16439 = !DILocation(line: 0, scope: !16428)
!16440 = !DILocation(line: 823, column: 14, scope: !16428)
!16441 = !DILocation(line: 823, column: 2, scope: !16428)
!16442 = !DILocation(line: 826, column: 20, scope: !16428)
!16443 = !DILocation(line: 826, column: 18, scope: !16428)
!16444 = !DILocation(line: 828, column: 12, scope: !16428)
!16445 = !DILocation(line: 0, scope: !16437)
!16446 = !DILocation(line: 0, scope: !15439, inlinedAt: !16447)
!16447 = distinct !DILocation(line: 829, column: 2, scope: !16437)
!16448 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16449)
!16449 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16447)
!16450 = !DILocation(line: 0, scope: !15448, inlinedAt: !16449)
!16451 = !DILocation(line: 830, column: 7, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16453, file: !2573, line: 830, column: 7)
!16453 = distinct !DILexicalBlock(scope: !16454, file: !2573, line: 829, column: 26)
!16454 = distinct !DILexicalBlock(scope: !16437, file: !2573, line: 829, column: 2)
!16455 = !DILocation(line: 830, column: 26, scope: !16452)
!16456 = !DILocation(line: 830, column: 23, scope: !16452)
!16457 = !DILocation(line: 830, column: 7, scope: !16453)
!16458 = !DILocation(line: 831, column: 20, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16452, file: !2573, line: 830, column: 36)
!16460 = !DILocation(line: 832, column: 3, scope: !16459)
!16461 = !DILocation(line: 0, scope: !15466, inlinedAt: !16462)
!16462 = distinct !DILocation(line: 829, column: 2, scope: !16454)
!16463 = !DILocation(line: 0, scope: !15474, inlinedAt: !16464)
!16464 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16462)
!16465 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16464)
!16466 = !DILocation(line: 834, column: 2, scope: !16428)
!16467 = distinct !DISubprogram(name: "z_pend_curr", scope: !2573, file: !2573, line: 840, type: !16468, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16470)
!16468 = !DISubroutineType(types: !16469)
!16469 = !{!103, !15442, !15431, !2499, !16230}
!16470 = !{!16471, !16472, !16473, !16474}
!16471 = !DILocalVariable(name: "lock", arg: 1, scope: !16467, file: !2573, line: 840, type: !15442)
!16472 = !DILocalVariable(name: "key", arg: 2, scope: !16467, file: !2573, line: 840, type: !15431)
!16473 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16467, file: !2573, line: 841, type: !2499)
!16474 = !DILocalVariable(name: "timeout", arg: 4, scope: !16467, file: !2573, line: 841, type: !16230)
!16475 = !DILocation(line: 0, scope: !16467)
!16476 = !DILocation(line: 844, column: 20, scope: !16467)
!16477 = !DILocation(line: 844, column: 18, scope: !16467)
!16478 = !DILocation(line: 0, scope: !15439, inlinedAt: !16479)
!16479 = distinct !DILocation(line: 856, column: 9, scope: !16467)
!16480 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16481)
!16481 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16479)
!16482 = !DILocation(line: 0, scope: !15448, inlinedAt: !16481)
!16483 = !DILocation(line: 857, column: 14, scope: !16467)
!16484 = !DILocation(line: 857, column: 2, scope: !16467)
!16485 = !DILocation(line: 0, scope: !16050, inlinedAt: !16486)
!16486 = distinct !DILocation(line: 859, column: 9, scope: !16467)
!16487 = !DILocation(line: 196, column: 9, scope: !16050, inlinedAt: !16486)
!16488 = !DILocation(line: 859, column: 2, scope: !16467)
!16489 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2573, file: !2573, line: 862, type: !16490, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16492)
!16490 = !DISubroutineType(types: !16491)
!16491 = !{!2468, !2499}
!16492 = !{!16493, !16494, !16495, !16497}
!16493 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16489, file: !2573, line: 862, type: !2499)
!16494 = !DILocalVariable(name: "thread", scope: !16489, file: !2573, line: 864, type: !2468)
!16495 = !DILocalVariable(name: "__i", scope: !16496, file: !2573, line: 866, type: !15431)
!16496 = distinct !DILexicalBlock(scope: !16489, file: !2573, line: 866, column: 2)
!16497 = !DILocalVariable(name: "__key", scope: !16496, file: !2573, line: 866, type: !15431)
!16498 = !DILocation(line: 0, scope: !16489)
!16499 = !DILocation(line: 0, scope: !16496)
!16500 = !DILocation(line: 0, scope: !15439, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 866, column: 2, scope: !16496)
!16502 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16503)
!16503 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16501)
!16504 = !DILocation(line: 0, scope: !15448, inlinedAt: !16503)
!16505 = !DILocation(line: 867, column: 12, scope: !16506)
!16506 = distinct !DILexicalBlock(scope: !16507, file: !2573, line: 866, column: 26)
!16507 = distinct !DILexicalBlock(scope: !16496, file: !2573, line: 866, column: 2)
!16508 = !DILocation(line: 869, column: 14, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !16506, file: !2573, line: 869, column: 7)
!16510 = !DILocation(line: 869, column: 7, scope: !16506)
!16511 = !DILocation(line: 870, column: 4, scope: !16512)
!16512 = distinct !DILexicalBlock(scope: !16509, file: !2573, line: 869, column: 23)
!16513 = !DILocation(line: 871, column: 3, scope: !16512)
!16514 = !DILocation(line: 0, scope: !15466, inlinedAt: !16515)
!16515 = distinct !DILocation(line: 866, column: 2, scope: !16507)
!16516 = !DILocation(line: 0, scope: !15474, inlinedAt: !16517)
!16517 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16515)
!16518 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16517)
!16519 = !DILocation(line: 874, column: 2, scope: !16489)
!16520 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2573, file: !2573, line: 877, type: !16490, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16521)
!16521 = !{!16522, !16523, !16524, !16526}
!16522 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16520, file: !2573, line: 877, type: !2499)
!16523 = !DILocalVariable(name: "thread", scope: !16520, file: !2573, line: 879, type: !2468)
!16524 = !DILocalVariable(name: "__i", scope: !16525, file: !2573, line: 881, type: !15431)
!16525 = distinct !DILexicalBlock(scope: !16520, file: !2573, line: 881, column: 2)
!16526 = !DILocalVariable(name: "__key", scope: !16525, file: !2573, line: 881, type: !15431)
!16527 = !DILocation(line: 0, scope: !16520)
!16528 = !DILocation(line: 0, scope: !16525)
!16529 = !DILocation(line: 0, scope: !15439, inlinedAt: !16530)
!16530 = distinct !DILocation(line: 881, column: 2, scope: !16525)
!16531 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16532)
!16532 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16530)
!16533 = !DILocation(line: 0, scope: !15448, inlinedAt: !16532)
!16534 = !DILocation(line: 882, column: 12, scope: !16535)
!16535 = distinct !DILexicalBlock(scope: !16536, file: !2573, line: 881, column: 26)
!16536 = distinct !DILexicalBlock(scope: !16525, file: !2573, line: 881, column: 2)
!16537 = !DILocation(line: 884, column: 14, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16535, file: !2573, line: 884, column: 7)
!16539 = !DILocation(line: 884, column: 7, scope: !16535)
!16540 = !DILocation(line: 885, column: 4, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16538, file: !2573, line: 884, column: 23)
!16542 = !DILocation(line: 886, column: 10, scope: !16541)
!16543 = !DILocation(line: 887, column: 3, scope: !16541)
!16544 = !DILocation(line: 0, scope: !15466, inlinedAt: !16545)
!16545 = distinct !DILocation(line: 881, column: 2, scope: !16536)
!16546 = !DILocation(line: 0, scope: !15474, inlinedAt: !16547)
!16547 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16545)
!16548 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16547)
!16549 = !DILocation(line: 890, column: 2, scope: !16520)
!16550 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2573, file: !2573, line: 893, type: !15397, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16551)
!16551 = !{!16552}
!16552 = !DILocalVariable(name: "thread", arg: 1, scope: !16550, file: !2573, line: 893, type: !2468)
!16553 = !DILocation(line: 0, scope: !16550)
!16554 = !DILocation(line: 0, scope: !16406, inlinedAt: !16555)
!16555 = distinct !DILocation(line: 895, column: 2, scope: !16550)
!16556 = !DILocation(line: 0, scope: !16410, inlinedAt: !16555)
!16557 = !DILocation(line: 0, scope: !15439, inlinedAt: !16558)
!16558 = distinct !DILocation(line: 788, column: 2, scope: !16410, inlinedAt: !16555)
!16559 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16560)
!16560 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16558)
!16561 = !DILocation(line: 0, scope: !15448, inlinedAt: !16560)
!16562 = !DILocation(line: 789, column: 3, scope: !16420, inlinedAt: !16555)
!16563 = !DILocation(line: 0, scope: !15466, inlinedAt: !16564)
!16564 = distinct !DILocation(line: 788, column: 2, scope: !16421, inlinedAt: !16555)
!16565 = !DILocation(line: 0, scope: !15474, inlinedAt: !16566)
!16566 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16564)
!16567 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16566)
!16568 = !DILocation(line: 896, column: 8, scope: !16550)
!16569 = !DILocation(line: 897, column: 1, scope: !16550)
!16570 = distinct !DISubprogram(name: "z_set_prio", scope: !2573, file: !2573, line: 902, type: !15759, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16571)
!16571 = !{!16572, !16573, !16574, !16575, !16577}
!16572 = !DILocalVariable(name: "thread", arg: 1, scope: !16570, file: !2573, line: 902, type: !2468)
!16573 = !DILocalVariable(name: "prio", arg: 2, scope: !16570, file: !2573, line: 902, type: !103)
!16574 = !DILocalVariable(name: "need_sched", scope: !16570, file: !2573, line: 904, type: !166)
!16575 = !DILocalVariable(name: "__i", scope: !16576, file: !2573, line: 906, type: !15431)
!16576 = distinct !DILexicalBlock(scope: !16570, file: !2573, line: 906, column: 2)
!16577 = !DILocalVariable(name: "__key", scope: !16576, file: !2573, line: 906, type: !15431)
!16578 = !DILocation(line: 0, scope: !16570)
!16579 = !DILocation(line: 0, scope: !16576)
!16580 = !DILocation(line: 0, scope: !15439, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 906, column: 2, scope: !16576)
!16582 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16583)
!16583 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16581)
!16584 = !DILocation(line: 0, scope: !15448, inlinedAt: !16583)
!16585 = !DILocation(line: 907, column: 16, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16587, file: !2573, line: 906, column: 26)
!16587 = distinct !DILexicalBlock(scope: !16576, file: !2573, line: 906, column: 2)
!16588 = !DILocation(line: 909, column: 7, scope: !16586)
!16589 = !DILocation(line: 0, scope: !15608, inlinedAt: !16590)
!16590 = distinct !DILocation(line: 912, column: 5, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16592, file: !2573, line: 911, column: 63)
!16592 = distinct !DILexicalBlock(scope: !16593, file: !2573, line: 911, column: 8)
!16593 = distinct !DILexicalBlock(scope: !16594, file: !2573, line: 909, column: 19)
!16594 = distinct !DILexicalBlock(scope: !16586, file: !2573, line: 909, column: 7)
!16595 = !DILocation(line: 266, column: 28, scope: !15608, inlinedAt: !16590)
!16596 = !DILocation(line: 0, scope: !15616, inlinedAt: !16597)
!16597 = distinct !DILocation(line: 268, column: 3, scope: !15620, inlinedAt: !16590)
!16598 = !DILocation(line: 234, column: 2, scope: !15616, inlinedAt: !16597)
!16599 = !DILocation(line: 913, column: 23, scope: !16591)
!16600 = !DILocation(line: 0, scope: !15625, inlinedAt: !16601)
!16601 = distinct !DILocation(line: 914, column: 5, scope: !16591)
!16602 = !DILocation(line: 252, column: 28, scope: !15625, inlinedAt: !16601)
!16603 = !DILocation(line: 0, scope: !15632, inlinedAt: !16604)
!16604 = distinct !DILocation(line: 254, column: 3, scope: !15636, inlinedAt: !16601)
!16605 = !DILocation(line: 0, scope: !15639, inlinedAt: !16606)
!16606 = distinct !DILocation(line: 229, column: 2, scope: !15632, inlinedAt: !16604)
!16607 = !DILocation(line: 188, column: 2, scope: !15649, inlinedAt: !16606)
!16608 = !DILocation(line: 188, column: 2, scope: !15651, inlinedAt: !16606)
!16609 = !DILocation(line: 0, scope: !15649, inlinedAt: !16606)
!16610 = !DILocation(line: 189, column: 7, scope: !15654, inlinedAt: !16606)
!16611 = !DILocation(line: 189, column: 35, scope: !15654, inlinedAt: !16606)
!16612 = !DILocation(line: 189, column: 7, scope: !15655, inlinedAt: !16606)
!16613 = !DILocation(line: 190, column: 4, scope: !15659, inlinedAt: !16606)
!16614 = !DILocation(line: 192, column: 4, scope: !15659, inlinedAt: !16606)
!16615 = distinct !{!16615, !16607, !16616}
!16616 = !DILocation(line: 194, column: 2, scope: !15649, inlinedAt: !16606)
!16617 = !DILocation(line: 196, column: 2, scope: !15639, inlinedAt: !16606)
!16618 = !DILocation(line: 197, column: 1, scope: !15639, inlinedAt: !16606)
!16619 = !DILocation(line: 918, column: 4, scope: !16593)
!16620 = !DILocation(line: 919, column: 3, scope: !16593)
!16621 = !DILocation(line: 920, column: 22, scope: !16622)
!16622 = distinct !DILexicalBlock(scope: !16594, file: !2573, line: 919, column: 10)
!16623 = !DILocation(line: 0, scope: !15466, inlinedAt: !16624)
!16624 = distinct !DILocation(line: 906, column: 2, scope: !16587)
!16625 = !DILocation(line: 0, scope: !15474, inlinedAt: !16626)
!16626 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16624)
!16627 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16626)
!16628 = !DILocation(line: 926, column: 2, scope: !16570)
!16629 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2573, file: !2573, line: 929, type: !16630, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16632)
!16630 = !DISubroutineType(types: !16631)
!16631 = !{null, !2468, !103}
!16632 = !{!16633, !16634, !16635}
!16633 = !DILocalVariable(name: "thread", arg: 1, scope: !16629, file: !2573, line: 929, type: !2468)
!16634 = !DILocalVariable(name: "prio", arg: 2, scope: !16629, file: !2573, line: 929, type: !103)
!16635 = !DILocalVariable(name: "need_sched", scope: !16629, file: !2573, line: 931, type: !166)
!16636 = !DILocation(line: 0, scope: !16629)
!16637 = !DILocation(line: 931, column: 20, scope: !16629)
!16638 = !DILocation(line: 935, column: 17, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16629, file: !2573, line: 935, column: 6)
!16640 = !DILocation(line: 935, column: 20, scope: !16639)
!16641 = !DILocation(line: 935, column: 35, scope: !16639)
!16642 = !DILocation(line: 935, column: 48, scope: !16639)
!16643 = !DILocation(line: 935, column: 6, scope: !16629)
!16644 = !DILocation(line: 936, column: 3, scope: !16645)
!16645 = distinct !DILexicalBlock(scope: !16639, file: !2573, line: 935, column: 55)
!16646 = !DILocation(line: 937, column: 2, scope: !16645)
!16647 = !DILocation(line: 938, column: 1, scope: !16629)
!16648 = distinct !DISubprogram(name: "k_sched_lock", scope: !2573, file: !2573, line: 987, type: !3328, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16649)
!16649 = !{!16650, !16652}
!16650 = !DILocalVariable(name: "__i", scope: !16651, file: !2573, line: 989, type: !15431)
!16651 = distinct !DILexicalBlock(scope: !16648, file: !2573, line: 989, column: 2)
!16652 = !DILocalVariable(name: "__key", scope: !16651, file: !2573, line: 989, type: !15431)
!16653 = !DILocation(line: 0, scope: !16651)
!16654 = !DILocation(line: 0, scope: !15439, inlinedAt: !16655)
!16655 = distinct !DILocation(line: 989, column: 2, scope: !16651)
!16656 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16657)
!16657 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16655)
!16658 = !DILocation(line: 0, scope: !15448, inlinedAt: !16657)
!16659 = !DILocation(line: 992, column: 3, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16661, file: !2573, line: 989, column: 26)
!16661 = distinct !DILexicalBlock(scope: !16651, file: !2573, line: 989, column: 2)
!16662 = !DILocation(line: 0, scope: !15466, inlinedAt: !16663)
!16663 = distinct !DILocation(line: 989, column: 2, scope: !16661)
!16664 = !DILocation(line: 0, scope: !15474, inlinedAt: !16665)
!16665 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16663)
!16666 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16665)
!16667 = !DILocation(line: 994, column: 1, scope: !16648)
!16668 = distinct !DISubprogram(name: "z_sched_lock", scope: !14447, file: !14447, line: 251, type: !3328, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!16669 = !DILocation(line: 256, column: 4, scope: !16668)
!16670 = !DILocation(line: 256, column: 19, scope: !16668)
!16671 = !DILocation(line: 256, column: 2, scope: !16668)
!16672 = !DILocation(line: 258, column: 2, scope: !16673)
!16673 = distinct !DILexicalBlock(scope: !16668, file: !14447, line: 258, column: 2)
!16674 = !{i64 2155186120}
!16675 = !DILocation(line: 259, column: 1, scope: !16668)
!16676 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2573, file: !2573, line: 996, type: !3328, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16677)
!16677 = !{!16678, !16680}
!16678 = !DILocalVariable(name: "__i", scope: !16679, file: !2573, line: 998, type: !15431)
!16679 = distinct !DILexicalBlock(scope: !16676, file: !2573, line: 998, column: 2)
!16680 = !DILocalVariable(name: "__key", scope: !16679, file: !2573, line: 998, type: !15431)
!16681 = !DILocation(line: 0, scope: !16679)
!16682 = !DILocation(line: 0, scope: !15439, inlinedAt: !16683)
!16683 = distinct !DILocation(line: 998, column: 2, scope: !16679)
!16684 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16685)
!16685 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16683)
!16686 = !DILocation(line: 0, scope: !15448, inlinedAt: !16685)
!16687 = !DILocation(line: 1002, column: 5, scope: !16688)
!16688 = distinct !DILexicalBlock(scope: !16689, file: !2573, line: 998, column: 26)
!16689 = distinct !DILexicalBlock(scope: !16679, file: !2573, line: 998, column: 2)
!16690 = !DILocation(line: 1002, column: 20, scope: !16688)
!16691 = !DILocation(line: 1002, column: 3, scope: !16688)
!16692 = !DILocation(line: 1003, column: 3, scope: !16688)
!16693 = !DILocation(line: 0, scope: !15466, inlinedAt: !16694)
!16694 = distinct !DILocation(line: 998, column: 2, scope: !16689)
!16695 = !DILocation(line: 0, scope: !15474, inlinedAt: !16696)
!16696 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !16694)
!16697 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !16696)
!16698 = !DILocation(line: 1011, column: 2, scope: !16676)
!16699 = !DILocation(line: 1012, column: 1, scope: !16676)
!16700 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2573, file: !2573, line: 1014, type: !15747, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!16701 = !DILocation(line: 1028, column: 25, scope: !16700)
!16702 = !DILocation(line: 1028, column: 2, scope: !16700)
!16703 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2573, file: !2573, line: 1155, type: !16704, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16706)
!16704 = !DISubroutineType(types: !16705)
!16705 = !{!166, !2497, !2497}
!16706 = !{!16707, !16708, !16709, !16710, !16711}
!16707 = !DILocalVariable(name: "a", arg: 1, scope: !16703, file: !2573, line: 1155, type: !2497)
!16708 = !DILocalVariable(name: "b", arg: 2, scope: !16703, file: !2573, line: 1155, type: !2497)
!16709 = !DILocalVariable(name: "thread_a", scope: !16703, file: !2573, line: 1157, type: !2468)
!16710 = !DILocalVariable(name: "thread_b", scope: !16703, file: !2573, line: 1157, type: !2468)
!16711 = !DILocalVariable(name: "cmp", scope: !16703, file: !2573, line: 1158, type: !344)
!16712 = !DILocation(line: 0, scope: !16703)
!16713 = !DILocation(line: 1160, column: 13, scope: !16703)
!16714 = !DILocation(line: 1161, column: 13, scope: !16703)
!16715 = !DILocation(line: 1163, column: 8, scope: !16703)
!16716 = !DILocation(line: 1165, column: 10, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16703, file: !2573, line: 1165, column: 6)
!16718 = !DILocation(line: 1165, column: 6, scope: !16703)
!16719 = !DILocation(line: 1167, column: 17, scope: !16720)
!16720 = distinct !DILexicalBlock(scope: !16717, file: !2573, line: 1167, column: 13)
!16721 = !DILocation(line: 1167, column: 13, scope: !16717)
!16722 = !DILocation(line: 1170, column: 25, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16720, file: !2573, line: 1169, column: 9)
!16724 = !DILocation(line: 1170, column: 52, scope: !16723)
!16725 = !DILocation(line: 1170, column: 35, scope: !16723)
!16726 = !DILocation(line: 1170, column: 3, scope: !16723)
!16727 = !DILocation(line: 0, scope: !16717)
!16728 = !DILocation(line: 1173, column: 1, scope: !16703)
!16729 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2573, file: !2573, line: 1175, type: !16730, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16745)
!16730 = !DISubroutineType(types: !16731)
!16731 = !{null, !16732, !2468}
!16732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16733, size: 32)
!16733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16734, line: 37, size: 128, elements: !16735)
!16734 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16735 = !{!16736, !16744}
!16736 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16733, file: !16734, line: 38, baseType: !16737, size: 96)
!16737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !392, line: 83, size: 96, elements: !16738)
!16738 = !{!16739, !16740, !16743}
!16739 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16737, file: !392, line: 84, baseType: !2497, size: 32)
!16740 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16737, file: !392, line: 85, baseType: !16741, size: 32, offset: 32)
!16741 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !392, line: 81, baseType: !16742)
!16742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16704, size: 32)
!16743 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16737, file: !392, line: 86, baseType: !103, size: 32, offset: 64)
!16744 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16733, file: !16734, line: 39, baseType: !103, size: 32, offset: 96)
!16745 = !{!16746, !16747, !16748, !16749, !16758}
!16746 = !DILocalVariable(name: "pq", arg: 1, scope: !16729, file: !2573, line: 1175, type: !16732)
!16747 = !DILocalVariable(name: "thread", arg: 2, scope: !16729, file: !2573, line: 1175, type: !2468)
!16748 = !DILocalVariable(name: "t", scope: !16729, file: !2573, line: 1177, type: !2468)
!16749 = !DILocalVariable(name: "__f", scope: !16750, file: !2573, line: 1190, type: !16753)
!16750 = distinct !DILexicalBlock(scope: !16751, file: !2573, line: 1190, column: 3)
!16751 = distinct !DILexicalBlock(scope: !16752, file: !2573, line: 1189, column: 27)
!16752 = distinct !DILexicalBlock(scope: !16729, file: !2573, line: 1189, column: 6)
!16753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !392, line: 155, size: 96, elements: !16754)
!16754 = !{!16755, !16756, !16757}
!16755 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16753, file: !392, line: 156, baseType: !2568, size: 32)
!16756 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16753, file: !392, line: 157, baseType: !270, size: 32, offset: 32)
!16757 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16753, file: !392, line: 158, baseType: !344, size: 32, offset: 64)
!16758 = !DILocalVariable(name: "n", scope: !16759, file: !2573, line: 1190, type: !2497)
!16759 = distinct !DILexicalBlock(scope: !16760, file: !2573, line: 1190, column: 3)
!16760 = distinct !DILexicalBlock(scope: !16750, file: !2573, line: 1190, column: 3)
!16761 = !DILocation(line: 0, scope: !16729)
!16762 = !DILocation(line: 1181, column: 31, scope: !16729)
!16763 = !DILocation(line: 1181, column: 45, scope: !16729)
!16764 = !DILocation(line: 1181, column: 15, scope: !16729)
!16765 = !DILocation(line: 1181, column: 25, scope: !16729)
!16766 = !DILocation(line: 1189, column: 11, scope: !16752)
!16767 = !DILocation(line: 1189, column: 7, scope: !16752)
!16768 = !DILocation(line: 1189, column: 6, scope: !16729)
!16769 = !DILocation(line: 1190, column: 3, scope: !16750)
!16770 = !DILocation(line: 1190, column: 3, scope: !16759)
!16771 = !DILocation(line: 0, scope: !16759)
!16772 = !DILocation(line: 1190, column: 3, scope: !16760)
!16773 = !DILocation(line: 1193, column: 2, scope: !16751)
!16774 = !DILocation(line: 1191, column: 42, scope: !16775)
!16775 = distinct !DILexicalBlock(scope: !16760, file: !2573, line: 1190, column: 54)
!16776 = !DILocation(line: 1191, column: 12, scope: !16775)
!16777 = !DILocation(line: 1191, column: 22, scope: !16775)
!16778 = distinct !{!16778, !16769, !16779}
!16779 = !DILocation(line: 1192, column: 3, scope: !16750)
!16780 = !DILocation(line: 1195, column: 17, scope: !16729)
!16781 = !DILocation(line: 1195, column: 37, scope: !16729)
!16782 = !DILocation(line: 1195, column: 2, scope: !16729)
!16783 = !DILocation(line: 1196, column: 1, scope: !16729)
!16784 = !DISubprogram(name: "z_rb_foreach_next", scope: !392, file: !392, line: 176, type: !16785, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16785 = !DISubroutineType(types: !16786)
!16786 = !{!2497, !16787, !16788}
!16787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16737, size: 32)
!16788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16753, size: 32)
!16789 = !DISubprogram(name: "rb_insert", scope: !392, file: !392, line: 105, type: !16790, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16790 = !DISubroutineType(types: !16791)
!16791 = !{null, !16787, !2497}
!16792 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2573, file: !2573, line: 1198, type: !16730, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16793)
!16793 = !{!16794, !16795}
!16794 = !DILocalVariable(name: "pq", arg: 1, scope: !16792, file: !2573, line: 1198, type: !16732)
!16795 = !DILocalVariable(name: "thread", arg: 2, scope: !16792, file: !2573, line: 1198, type: !2468)
!16796 = !DILocation(line: 0, scope: !16792)
!16797 = !DILocation(line: 1202, column: 17, scope: !16792)
!16798 = !DILocation(line: 1202, column: 37, scope: !16792)
!16799 = !DILocation(line: 1202, column: 2, scope: !16792)
!16800 = !DILocation(line: 1204, column: 16, scope: !16801)
!16801 = distinct !DILexicalBlock(scope: !16792, file: !2573, line: 1204, column: 6)
!16802 = !DILocation(line: 1204, column: 7, scope: !16801)
!16803 = !DILocation(line: 1204, column: 6, scope: !16792)
!16804 = !DILocation(line: 1205, column: 7, scope: !16805)
!16805 = distinct !DILexicalBlock(scope: !16801, file: !2573, line: 1204, column: 22)
!16806 = !DILocation(line: 1205, column: 22, scope: !16805)
!16807 = !DILocation(line: 1206, column: 2, scope: !16805)
!16808 = !DILocation(line: 1207, column: 1, scope: !16792)
!16809 = !DISubprogram(name: "rb_remove", scope: !392, file: !392, line: 110, type: !16790, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16810 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2573, file: !2573, line: 1209, type: !16811, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16813)
!16811 = !DISubroutineType(types: !16812)
!16812 = !{!2468, !16732}
!16813 = !{!16814, !16815, !16816}
!16814 = !DILocalVariable(name: "pq", arg: 1, scope: !16810, file: !2573, line: 1209, type: !16732)
!16815 = !DILocalVariable(name: "thread", scope: !16810, file: !2573, line: 1211, type: !2468)
!16816 = !DILocalVariable(name: "n", scope: !16810, file: !2573, line: 1212, type: !2497)
!16817 = !DILocation(line: 0, scope: !16810)
!16818 = !DILocation(line: 1212, column: 37, scope: !16810)
!16819 = !DILocation(line: 1212, column: 21, scope: !16810)
!16820 = !DILocation(line: 1217, column: 2, scope: !16810)
!16821 = distinct !DISubprogram(name: "rb_get_min", scope: !392, file: !392, line: 115, type: !16822, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16824)
!16822 = !DISubroutineType(types: !16823)
!16823 = !{!2497, !16787}
!16824 = !{!16825}
!16825 = !DILocalVariable(name: "tree", arg: 1, scope: !16821, file: !392, line: 115, type: !16787)
!16826 = !DILocation(line: 0, scope: !16821)
!16827 = !DILocation(line: 117, column: 9, scope: !16821)
!16828 = !DILocation(line: 117, column: 2, scope: !16821)
!16829 = !DISubprogram(name: "z_rb_get_minmax", scope: !392, file: !392, line: 100, type: !16830, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16830 = !DISubroutineType(types: !16831)
!16831 = !{!2497, !16787, !163}
!16832 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2573, file: !2573, line: 1246, type: !16833, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16843)
!16833 = !DISubroutineType(types: !16834)
!16834 = !{!2468, !16835}
!16835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16836, size: 32)
!16836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16734, line: 53, size: 2080, elements: !16837)
!16837 = !{!16838, !16842}
!16838 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16836, file: !16734, line: 54, baseType: !16839, size: 2048)
!16839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2504, size: 2048, elements: !16840)
!16840 = !{!16841}
!16841 = !DISubrange(count: 32)
!16842 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16836, file: !16734, line: 55, baseType: !32, size: 32, offset: 2048)
!16843 = !{!16844, !16845, !16846, !16847}
!16844 = !DILocalVariable(name: "pq", arg: 1, scope: !16832, file: !2573, line: 1246, type: !16835)
!16845 = !DILocalVariable(name: "thread", scope: !16832, file: !2573, line: 1252, type: !2468)
!16846 = !DILocalVariable(name: "l", scope: !16832, file: !2573, line: 1253, type: !15642)
!16847 = !DILocalVariable(name: "n", scope: !16832, file: !2573, line: 1254, type: !2569)
!16848 = !DILocation(line: 0, scope: !16832)
!16849 = !DILocation(line: 1248, column: 11, scope: !16850)
!16850 = distinct !DILexicalBlock(scope: !16832, file: !2573, line: 1248, column: 6)
!16851 = !DILocation(line: 1248, column: 7, scope: !16850)
!16852 = !DILocation(line: 1248, column: 6, scope: !16832)
!16853 = !DILocation(line: 1253, column: 31, scope: !16832)
!16854 = !DILocation(line: 1253, column: 20, scope: !16832)
!16855 = !DILocation(line: 1254, column: 19, scope: !16832)
!16856 = !DILocation(line: 1260, column: 1, scope: !16832)
!16857 = distinct !DISubprogram(name: "z_unpend_all", scope: !2573, file: !2573, line: 1262, type: !16858, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16860)
!16858 = !DISubroutineType(types: !16859)
!16859 = !{!103, !2499}
!16860 = !{!16861, !16862, !16863}
!16861 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16857, file: !2573, line: 1262, type: !2499)
!16862 = !DILocalVariable(name: "need_sched", scope: !16857, file: !2573, line: 1264, type: !103)
!16863 = !DILocalVariable(name: "thread", scope: !16857, file: !2573, line: 1265, type: !2468)
!16864 = !DILocation(line: 0, scope: !16857)
!16865 = !DILocation(line: 1267, column: 19, scope: !16857)
!16866 = !DILocation(line: 1267, column: 41, scope: !16857)
!16867 = !DILocation(line: 1267, column: 2, scope: !16857)
!16868 = !DILocation(line: 1268, column: 3, scope: !16869)
!16869 = distinct !DILexicalBlock(scope: !16857, file: !2573, line: 1267, column: 50)
!16870 = !DILocation(line: 1269, column: 3, scope: !16869)
!16871 = distinct !{!16871, !16867, !16872}
!16872 = !DILocation(line: 1271, column: 2, scope: !16857)
!16873 = !DILocation(line: 1273, column: 2, scope: !16857)
!16874 = distinct !DISubprogram(name: "z_waitq_head", scope: !14773, file: !14773, line: 52, type: !16490, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16875)
!16875 = !{!16876}
!16876 = !DILocalVariable(name: "w", arg: 1, scope: !16874, file: !14773, line: 52, type: !2499)
!16877 = !DILocation(line: 0, scope: !16874)
!16878 = !DILocation(line: 54, column: 52, scope: !16874)
!16879 = !DILocation(line: 54, column: 28, scope: !16874)
!16880 = !DILocation(line: 54, column: 9, scope: !16874)
!16881 = !DILocation(line: 54, column: 2, scope: !16874)
!16882 = distinct !DISubprogram(name: "init_ready_q", scope: !2573, file: !2573, line: 1276, type: !16883, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16890)
!16883 = !DISubroutineType(types: !16884)
!16884 = !{null, !16885}
!16885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16886, size: 32)
!16886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !316, line: 83, size: 96, elements: !16887)
!16887 = !{!16888, !16889}
!16888 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16886, file: !316, line: 86, baseType: !2468, size: 32)
!16889 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16886, file: !316, line: 90, baseType: !2504, size: 64, offset: 32)
!16890 = !{!16891}
!16891 = !DILocalVariable(name: "rq", arg: 1, scope: !16882, file: !2573, line: 1276, type: !16885)
!16892 = !DILocation(line: 0, scope: !16882)
!16893 = !DILocation(line: 1289, column: 22, scope: !16882)
!16894 = !DILocation(line: 1289, column: 2, scope: !16882)
!16895 = !DILocation(line: 1291, column: 1, scope: !16882)
!16896 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !16897, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16899)
!16897 = !DISubroutineType(types: !16898)
!16898 = !{null, !15642}
!16899 = !{!16900}
!16900 = !DILocalVariable(name: "list", arg: 1, scope: !16896, file: !321, line: 197, type: !15642)
!16901 = !DILocation(line: 0, scope: !16896)
!16902 = !DILocation(line: 199, column: 8, scope: !16896)
!16903 = !DILocation(line: 199, column: 13, scope: !16896)
!16904 = !DILocation(line: 200, column: 8, scope: !16896)
!16905 = !DILocation(line: 200, column: 13, scope: !16896)
!16906 = !DILocation(line: 201, column: 1, scope: !16896)
!16907 = distinct !DISubprogram(name: "z_sched_init", scope: !2573, file: !2573, line: 1293, type: !3328, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!16908 = !DILocation(line: 1302, column: 2, scope: !16907)
!16909 = !DILocation(line: 1306, column: 2, scope: !16907)
!16910 = !DILocation(line: 1309, column: 1, scope: !16907)
!16911 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2573, file: !2573, line: 1311, type: !16912, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16915)
!16912 = !DISubroutineType(types: !16913)
!16913 = !{!103, !16914}
!16914 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !2468)
!16915 = !{!16916}
!16916 = !DILocalVariable(name: "thread", arg: 1, scope: !16911, file: !2573, line: 1311, type: !16914)
!16917 = !DILocation(line: 0, scope: !16911)
!16918 = !DILocation(line: 1313, column: 22, scope: !16911)
!16919 = !DILocation(line: 1313, column: 9, scope: !16911)
!16920 = !DILocation(line: 1313, column: 2, scope: !16911)
!16921 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2573, file: !2573, line: 1325, type: !16922, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16924)
!16922 = !DISubroutineType(types: !16923)
!16923 = !{null, !16914, !103}
!16924 = !{!16925, !16926, !16927}
!16925 = !DILocalVariable(name: "thread", arg: 1, scope: !16921, file: !2573, line: 1325, type: !16914)
!16926 = !DILocalVariable(name: "prio", arg: 2, scope: !16921, file: !2573, line: 1325, type: !103)
!16927 = !DILocalVariable(name: "th", scope: !16921, file: !2573, line: 1334, type: !2468)
!16928 = !DILocation(line: 0, scope: !16921)
!16929 = !DILocation(line: 1336, column: 2, scope: !16921)
!16930 = !DILocation(line: 1337, column: 1, scope: !16921)
!16931 = distinct !DISubprogram(name: "k_can_yield", scope: !2573, file: !2573, line: 1384, type: !7716, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!16932 = !DILocation(line: 1386, column: 11, scope: !16931)
!16933 = !DILocation(line: 1386, column: 29, scope: !16931)
!16934 = !DILocation(line: 1386, column: 32, scope: !16931)
!16935 = !DILocation(line: 1386, column: 46, scope: !16931)
!16936 = !DILocation(line: 1387, column: 28, scope: !16931)
!16937 = !DILocation(line: 1387, column: 4, scope: !16931)
!16938 = !DILocation(line: 1386, column: 2, scope: !16931)
!16939 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !312, file: !312, line: 989, type: !7716, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!16940 = !DILocation(line: 993, column: 10, scope: !16939)
!16941 = !DILocation(line: 993, column: 2, scope: !16939)
!16942 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2573, file: !2573, line: 1390, type: !3328, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16943)
!16943 = !{!16944}
!16944 = !DILocalVariable(name: "key", scope: !16942, file: !2573, line: 1396, type: !15431)
!16945 = !DILocation(line: 0, scope: !15439, inlinedAt: !16946)
!16946 = distinct !DILocation(line: 1396, column: 25, scope: !16942)
!16947 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !16948)
!16948 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !16946)
!16949 = !DILocation(line: 0, scope: !15448, inlinedAt: !16948)
!16950 = !DILocation(line: 0, scope: !16942)
!16951 = !DILocation(line: 1400, column: 18, scope: !16952)
!16952 = distinct !DILexicalBlock(scope: !16953, file: !2573, line: 1399, column: 36)
!16953 = distinct !DILexicalBlock(scope: !16942, file: !2573, line: 1398, column: 6)
!16954 = !DILocation(line: 0, scope: !15608, inlinedAt: !16955)
!16955 = distinct !DILocation(line: 1400, column: 3, scope: !16952)
!16956 = !DILocation(line: 266, column: 15, scope: !15608, inlinedAt: !16955)
!16957 = !DILocation(line: 266, column: 28, scope: !15608, inlinedAt: !16955)
!16958 = !DILocation(line: 0, scope: !15616, inlinedAt: !16959)
!16959 = distinct !DILocation(line: 268, column: 3, scope: !15620, inlinedAt: !16955)
!16960 = !DILocation(line: 234, column: 2, scope: !15616, inlinedAt: !16959)
!16961 = !DILocation(line: 1402, column: 15, scope: !16942)
!16962 = !DILocation(line: 0, scope: !15625, inlinedAt: !16963)
!16963 = distinct !DILocation(line: 1402, column: 2, scope: !16942)
!16964 = !DILocation(line: 252, column: 15, scope: !15625, inlinedAt: !16963)
!16965 = !DILocation(line: 252, column: 28, scope: !15625, inlinedAt: !16963)
!16966 = !DILocation(line: 0, scope: !15632, inlinedAt: !16967)
!16967 = distinct !DILocation(line: 254, column: 3, scope: !15636, inlinedAt: !16963)
!16968 = !DILocation(line: 0, scope: !15639, inlinedAt: !16969)
!16969 = distinct !DILocation(line: 229, column: 2, scope: !15632, inlinedAt: !16967)
!16970 = !DILocation(line: 188, column: 2, scope: !15649, inlinedAt: !16969)
!16971 = !DILocation(line: 188, column: 2, scope: !15651, inlinedAt: !16969)
!16972 = !DILocation(line: 0, scope: !15649, inlinedAt: !16969)
!16973 = !DILocation(line: 189, column: 7, scope: !15654, inlinedAt: !16969)
!16974 = !DILocation(line: 189, column: 35, scope: !15654, inlinedAt: !16969)
!16975 = !DILocation(line: 189, column: 7, scope: !15655, inlinedAt: !16969)
!16976 = !DILocation(line: 191, column: 21, scope: !15659, inlinedAt: !16969)
!16977 = !DILocation(line: 190, column: 4, scope: !15659, inlinedAt: !16969)
!16978 = !DILocation(line: 192, column: 4, scope: !15659, inlinedAt: !16969)
!16979 = distinct !{!16979, !16970, !16980}
!16980 = !DILocation(line: 194, column: 2, scope: !15649, inlinedAt: !16969)
!16981 = !DILocation(line: 196, column: 37, scope: !15639, inlinedAt: !16969)
!16982 = !DILocation(line: 196, column: 2, scope: !15639, inlinedAt: !16969)
!16983 = !DILocation(line: 197, column: 1, scope: !15639, inlinedAt: !16969)
!16984 = !DILocation(line: 1403, column: 2, scope: !16942)
!16985 = !DILocation(line: 0, scope: !16050, inlinedAt: !16986)
!16986 = distinct !DILocation(line: 1404, column: 2, scope: !16942)
!16987 = !DILocation(line: 196, column: 9, scope: !16050, inlinedAt: !16986)
!16988 = !DILocation(line: 1405, column: 1, scope: !16942)
!16989 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2573, file: !2573, line: 1459, type: !16990, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16992)
!16990 = !DISubroutineType(types: !16991)
!16991 = !{!344, !16230}
!16992 = !{!16993, !16994, !16995}
!16993 = !DILocalVariable(name: "timeout", arg: 1, scope: !16989, file: !2573, line: 1459, type: !16230)
!16994 = !DILocalVariable(name: "ticks", scope: !16989, file: !2573, line: 1461, type: !1799)
!16995 = !DILocalVariable(name: "ret", scope: !16989, file: !2573, line: 1480, type: !344)
!16996 = !DILocation(line: 0, scope: !16989)
!16997 = !DILocation(line: 1468, column: 6, scope: !16998)
!16998 = distinct !DILexicalBlock(scope: !16989, file: !2573, line: 1468, column: 6)
!16999 = !DILocation(line: 1468, column: 6, scope: !16989)
!17000 = !DILocation(line: 1469, column: 20, scope: !17001)
!17001 = distinct !DILexicalBlock(scope: !16998, file: !2573, line: 1468, column: 40)
!17002 = !DILocation(line: 1469, column: 3, scope: !17001)
!17003 = !DILocation(line: 1473, column: 3, scope: !17001)
!17004 = !DILocation(line: 1478, column: 10, scope: !16989)
!17005 = !DILocation(line: 1480, column: 16, scope: !16989)
!17006 = !DILocation(line: 1485, column: 1, scope: !16989)
!17007 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3768, file: !3768, line: 310, type: !17008, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17010)
!17008 = !DISubroutineType(types: !17009)
!17009 = !{null, !16914}
!17010 = !{!17011}
!17011 = !DILocalVariable(name: "thread", arg: 1, scope: !17007, file: !3768, line: 310, type: !16914)
!17012 = !DILocation(line: 0, scope: !17007)
!17013 = !DILocation(line: 319, column: 2, scope: !17014)
!17014 = distinct !DILexicalBlock(scope: !17007, file: !3768, line: 319, column: 2)
!17015 = !{i64 2155104509}
!17016 = !DILocation(line: 320, column: 2, scope: !17007)
!17017 = !DILocation(line: 321, column: 1, scope: !17007)
!17018 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2573, file: !2573, line: 1415, type: !17019, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17021)
!17019 = !DISubroutineType(types: !17020)
!17020 = !{!344, !1799}
!17021 = !{!17022, !17023, !17024, !17025}
!17022 = !DILocalVariable(name: "ticks", arg: 1, scope: !17018, file: !2573, line: 1415, type: !1799)
!17023 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17018, file: !2573, line: 1418, type: !132)
!17024 = !DILocalVariable(name: "timeout", scope: !17018, file: !2573, line: 1430, type: !16230)
!17025 = !DILocalVariable(name: "key", scope: !17018, file: !2573, line: 1437, type: !15431)
!17026 = !DILocation(line: 0, scope: !17018)
!17027 = !DILocation(line: 1425, column: 12, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !17018, file: !2573, line: 1425, column: 6)
!17029 = !DILocation(line: 1425, column: 6, scope: !17018)
!17030 = !DILocation(line: 1426, column: 3, scope: !17031)
!17031 = distinct !DILexicalBlock(scope: !17028, file: !2573, line: 1425, column: 18)
!17032 = !DILocation(line: 1427, column: 3, scope: !17031)
!17033 = !DILocation(line: 1431, column: 24, scope: !17034)
!17034 = distinct !DILexicalBlock(scope: !17018, file: !2573, line: 1431, column: 6)
!17035 = !DILocation(line: 1431, column: 6, scope: !17018)
!17036 = !DILocation(line: 1432, column: 35, scope: !17037)
!17037 = distinct !DILexicalBlock(scope: !17034, file: !2573, line: 1431, column: 30)
!17038 = !DILocation(line: 1432, column: 27, scope: !17037)
!17039 = !DILocation(line: 1433, column: 2, scope: !17037)
!17040 = !DILocation(line: 1434, column: 27, scope: !17041)
!17041 = distinct !DILexicalBlock(scope: !17034, file: !2573, line: 1433, column: 9)
!17042 = !DILocation(line: 0, scope: !17034)
!17043 = !DILocation(line: 0, scope: !15439, inlinedAt: !17044)
!17044 = distinct !DILocation(line: 1437, column: 25, scope: !17018)
!17045 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !17046)
!17046 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !17044)
!17047 = !DILocation(line: 0, scope: !15448, inlinedAt: !17046)
!17048 = !DILocation(line: 1440, column: 20, scope: !17018)
!17049 = !DILocation(line: 1440, column: 18, scope: !17018)
!17050 = !DILocation(line: 1442, column: 2, scope: !17018)
!17051 = !DILocation(line: 1443, column: 23, scope: !17018)
!17052 = !DILocation(line: 1443, column: 2, scope: !17018)
!17053 = !DILocation(line: 1444, column: 29, scope: !17018)
!17054 = !DILocation(line: 1444, column: 2, scope: !17018)
!17055 = !DILocation(line: 0, scope: !16050, inlinedAt: !17056)
!17056 = distinct !DILocation(line: 1446, column: 8, scope: !17018)
!17057 = !DILocation(line: 196, column: 9, scope: !16050, inlinedAt: !17056)
!17058 = !DILocation(line: 1450, column: 10, scope: !17018)
!17059 = !DILocation(line: 1450, column: 45, scope: !17018)
!17060 = !DILocation(line: 1450, column: 43, scope: !17018)
!17061 = !DILocation(line: 1451, column: 6, scope: !17018)
!17062 = !DILocation(line: 1457, column: 1, scope: !17018)
!17063 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !6101, file: !6101, line: 1103, type: !6102, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17064)
!17064 = !{!17065}
!17065 = !DILocalVariable(name: "t", arg: 1, scope: !17063, file: !6101, line: 1103, type: !1621)
!17066 = !DILocation(line: 0, scope: !17063)
!17067 = !DILocation(line: 0, scope: !15486, inlinedAt: !17068)
!17068 = distinct !DILocation(line: 1106, column: 9, scope: !17063)
!17069 = !DILocation(line: 139, column: 13, scope: !17070, inlinedAt: !17068)
!17070 = distinct !DILexicalBlock(scope: !17071, file: !6101, line: 138, column: 10)
!17071 = distinct !DILexicalBlock(scope: !17072, file: !6101, line: 136, column: 7)
!17072 = distinct !DILexicalBlock(scope: !15507, file: !6101, line: 134, column: 17)
!17073 = !DILocation(line: 1106, column: 2, scope: !17063)
!17074 = distinct !DISubprogram(name: "k_yield", scope: !3768, file: !3768, line: 140, type: !3328, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!17075 = !DILocation(line: 148, column: 2, scope: !17076)
!17076 = distinct !DILexicalBlock(scope: !17074, file: !3768, line: 148, column: 2)
!17077 = !{i64 2155103829}
!17078 = !DILocation(line: 149, column: 2, scope: !17074)
!17079 = !DILocation(line: 150, column: 1, scope: !17074)
!17080 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2573, file: !2573, line: 1495, type: !17081, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17083)
!17081 = !DISubroutineType(types: !17082)
!17082 = !{!344, !103}
!17083 = !{!17084, !17085}
!17084 = !DILocalVariable(name: "us", arg: 1, scope: !17080, file: !2573, line: 1495, type: !103)
!17085 = !DILocalVariable(name: "ticks", scope: !17080, file: !2573, line: 1497, type: !344)
!17086 = !DILocation(line: 0, scope: !17080)
!17087 = !DILocation(line: 1501, column: 31, scope: !17080)
!17088 = !DILocation(line: 1501, column: 10, scope: !17080)
!17089 = !DILocation(line: 1502, column: 23, scope: !17080)
!17090 = !DILocation(line: 1502, column: 10, scope: !17080)
!17091 = !DILocation(line: 1506, column: 31, scope: !17080)
!17092 = !DILocation(line: 1506, column: 9, scope: !17080)
!17093 = !DILocation(line: 1506, column: 2, scope: !17080)
!17094 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !6101, file: !6101, line: 571, type: !6102, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17095)
!17095 = !{!17096}
!17096 = !DILocalVariable(name: "t", arg: 1, scope: !17094, file: !6101, line: 571, type: !1621)
!17097 = !DILocation(line: 0, scope: !17094)
!17098 = !DILocation(line: 0, scope: !15486, inlinedAt: !17099)
!17099 = distinct !DILocation(line: 574, column: 9, scope: !17094)
!17100 = !DILocation(line: 135, column: 5, scope: !17072, inlinedAt: !17099)
!17101 = !DILocation(line: 139, column: 13, scope: !17070, inlinedAt: !17099)
!17102 = !DILocation(line: 574, column: 2, scope: !17094)
!17103 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !6101, file: !6101, line: 1187, type: !6102, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17104)
!17104 = !{!17105}
!17105 = !DILocalVariable(name: "t", arg: 1, scope: !17103, file: !6101, line: 1187, type: !1621)
!17106 = !DILocation(line: 0, scope: !17103)
!17107 = !DILocation(line: 0, scope: !15486, inlinedAt: !17108)
!17108 = distinct !DILocation(line: 1190, column: 9, scope: !17103)
!17109 = !DILocation(line: 145, column: 13, scope: !17110, inlinedAt: !17108)
!17110 = distinct !DILexicalBlock(scope: !15504, file: !6101, line: 144, column: 10)
!17111 = !DILocation(line: 1190, column: 2, scope: !17103)
!17112 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2573, file: !2573, line: 1517, type: !17008, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17113)
!17113 = !{!17114}
!17114 = !DILocalVariable(name: "thread", arg: 1, scope: !17112, file: !2573, line: 1517, type: !16914)
!17115 = !DILocation(line: 0, scope: !17112)
!17116 = !DILocation(line: 1521, column: 6, scope: !17117)
!17117 = distinct !DILexicalBlock(scope: !17112, file: !2573, line: 1521, column: 6)
!17118 = !DILocation(line: 1521, column: 6, scope: !17112)
!17119 = !DILocation(line: 1525, column: 6, scope: !17120)
!17120 = distinct !DILexicalBlock(scope: !17112, file: !2573, line: 1525, column: 6)
!17121 = !DILocation(line: 1525, column: 37, scope: !17120)
!17122 = !DILocation(line: 1525, column: 6, scope: !17112)
!17123 = !DILocation(line: 1527, column: 20, scope: !17124)
!17124 = distinct !DILexicalBlock(scope: !17125, file: !2573, line: 1527, column: 7)
!17125 = distinct !DILexicalBlock(scope: !17120, file: !2573, line: 1525, column: 42)
!17126 = !DILocation(line: 1527, column: 33, scope: !17124)
!17127 = !DILocation(line: 1527, column: 7, scope: !17125)
!17128 = !DILocation(line: 1532, column: 2, scope: !17112)
!17129 = !DILocation(line: 1533, column: 2, scope: !17112)
!17130 = !DILocation(line: 1031, column: 3, scope: !16083, inlinedAt: !17131)
!17131 = distinct !DILocation(line: 48, column: 10, scope: !16087, inlinedAt: !17132)
!17132 = distinct !DILocation(line: 1537, column: 7, scope: !17133)
!17133 = distinct !DILexicalBlock(scope: !17112, file: !2573, line: 1537, column: 6)
!17134 = !DILocation(line: 0, scope: !16083, inlinedAt: !17131)
!17135 = !DILocation(line: 48, column: 9, scope: !16087, inlinedAt: !17132)
!17136 = !DILocation(line: 1537, column: 6, scope: !17112)
!17137 = !DILocation(line: 1538, column: 3, scope: !17138)
!17138 = distinct !DILexicalBlock(scope: !17133, file: !2573, line: 1537, column: 25)
!17139 = !DILocation(line: 1539, column: 2, scope: !17138)
!17140 = !DILocation(line: 1540, column: 1, scope: !17112)
!17141 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14447, file: !14447, line: 101, type: !15557, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17142)
!17142 = !{!17143}
!17143 = !DILocalVariable(name: "thread", arg: 1, scope: !17141, file: !14447, line: 101, type: !2468)
!17144 = !DILocation(line: 0, scope: !17141)
!17145 = !DILocation(line: 103, column: 23, scope: !17141)
!17146 = !DILocation(line: 103, column: 36, scope: !17141)
!17147 = !DILocation(line: 103, column: 55, scope: !17141)
!17148 = !DILocation(line: 103, column: 2, scope: !17141)
!17149 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2573, file: !2573, line: 1567, type: !17150, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17152)
!17150 = !DISubroutineType(types: !17151)
!17151 = !{!16914}
!17152 = !{!17153}
!17153 = !DILocalVariable(name: "ret", scope: !17149, file: !2573, line: 1577, type: !16914)
!17154 = !DILocation(line: 1577, column: 30, scope: !17149)
!17155 = !DILocation(line: 0, scope: !17149)
!17156 = !DILocation(line: 1582, column: 2, scope: !17149)
!17157 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2573, file: !2573, line: 1593, type: !6725, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!17158 = !DILocation(line: 1031, column: 3, scope: !16083, inlinedAt: !17159)
!17159 = distinct !DILocation(line: 48, column: 10, scope: !16087, inlinedAt: !17160)
!17160 = distinct !DILocation(line: 1595, column: 10, scope: !17157)
!17161 = !DILocation(line: 0, scope: !16083, inlinedAt: !17159)
!17162 = !DILocation(line: 48, column: 9, scope: !16087, inlinedAt: !17160)
!17163 = !DILocation(line: 1595, column: 27, scope: !17157)
!17164 = !DILocation(line: 1595, column: 41, scope: !17157)
!17165 = !DILocation(line: 1595, column: 30, scope: !17157)
!17166 = !DILocation(line: 1595, column: 2, scope: !17157)
!17167 = distinct !DISubprogram(name: "z_thread_abort", scope: !2573, file: !2573, line: 1725, type: !15397, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17168)
!17168 = !{!17169, !17170}
!17169 = !DILocalVariable(name: "thread", arg: 1, scope: !17167, file: !2573, line: 1725, type: !2468)
!17170 = !DILocalVariable(name: "key", scope: !17167, file: !2573, line: 1727, type: !15431)
!17171 = !DILocation(line: 0, scope: !17167)
!17172 = !DILocation(line: 0, scope: !15439, inlinedAt: !17173)
!17173 = distinct !DILocation(line: 1727, column: 25, scope: !17167)
!17174 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !17175)
!17175 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !17173)
!17176 = !DILocation(line: 0, scope: !15448, inlinedAt: !17175)
!17177 = !DILocation(line: 1729, column: 20, scope: !17178)
!17178 = distinct !DILexicalBlock(scope: !17167, file: !2573, line: 1729, column: 6)
!17179 = !DILocation(line: 1729, column: 33, scope: !17178)
!17180 = !DILocation(line: 1729, column: 48, scope: !17178)
!17181 = !DILocation(line: 1729, column: 6, scope: !17167)
!17182 = !DILocation(line: 0, scope: !15466, inlinedAt: !17183)
!17183 = distinct !DILocation(line: 1730, column: 3, scope: !17184)
!17184 = distinct !DILexicalBlock(scope: !17178, file: !2573, line: 1729, column: 54)
!17185 = !DILocation(line: 0, scope: !15474, inlinedAt: !17186)
!17186 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !17183)
!17187 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !17186)
!17188 = !DILocation(line: 1732, column: 3, scope: !17189)
!17189 = distinct !DILexicalBlock(scope: !17184, file: !2573, line: 1732, column: 3)
!17190 = !{i64 2155841239, i64 2155841255, i64 2155841281, i64 2155841309, i64 2155841329}
!17191 = !DILocation(line: 1733, column: 3, scope: !17184)
!17192 = !DILocation(line: 1736, column: 20, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !17167, file: !2573, line: 1736, column: 6)
!17194 = !DILocation(line: 1736, column: 33, scope: !17193)
!17195 = !DILocation(line: 1736, column: 49, scope: !17193)
!17196 = !DILocation(line: 1736, column: 6, scope: !17167)
!17197 = !DILocation(line: 0, scope: !15466, inlinedAt: !17198)
!17198 = distinct !DILocation(line: 1737, column: 3, scope: !17199)
!17199 = distinct !DILexicalBlock(scope: !17193, file: !2573, line: 1736, column: 56)
!17200 = !DILocation(line: 0, scope: !15474, inlinedAt: !17201)
!17201 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !17198)
!17202 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !17201)
!17203 = !DILocation(line: 1738, column: 3, scope: !17199)
!17204 = !DILocation(line: 1775, column: 2, scope: !17167)
!17205 = !DILocation(line: 1776, column: 16, scope: !17206)
!17206 = distinct !DILexicalBlock(scope: !17167, file: !2573, line: 1776, column: 6)
!17207 = !DILocation(line: 1776, column: 13, scope: !17206)
!17208 = !DILocation(line: 1776, column: 25, scope: !17206)
!17209 = !DILocation(line: 1031, column: 3, scope: !16083, inlinedAt: !17210)
!17210 = distinct !DILocation(line: 48, column: 10, scope: !16087, inlinedAt: !17211)
!17211 = distinct !DILocation(line: 1776, column: 29, scope: !17206)
!17212 = !DILocation(line: 0, scope: !16083, inlinedAt: !17210)
!17213 = !DILocation(line: 48, column: 9, scope: !16087, inlinedAt: !17211)
!17214 = !DILocation(line: 1776, column: 6, scope: !17167)
!17215 = !DILocation(line: 0, scope: !16050, inlinedAt: !17216)
!17216 = distinct !DILocation(line: 1777, column: 3, scope: !17217)
!17217 = distinct !DILexicalBlock(scope: !17206, file: !2573, line: 1776, column: 47)
!17218 = !DILocation(line: 196, column: 9, scope: !16050, inlinedAt: !17216)
!17219 = !DILocation(line: 1779, column: 2, scope: !17217)
!17220 = !DILocation(line: 0, scope: !15466, inlinedAt: !17221)
!17221 = distinct !DILocation(line: 1780, column: 2, scope: !17167)
!17222 = !DILocation(line: 0, scope: !15474, inlinedAt: !17223)
!17223 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !17221)
!17224 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !17223)
!17225 = !DILocation(line: 1781, column: 1, scope: !17167)
!17226 = distinct !DISubprogram(name: "end_thread", scope: !2573, file: !2573, line: 1690, type: !15397, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17227)
!17227 = !{!17228}
!17228 = !DILocalVariable(name: "thread", arg: 1, scope: !17226, file: !2573, line: 1690, type: !2468)
!17229 = !DILocation(line: 0, scope: !17226)
!17230 = !DILocation(line: 1695, column: 20, scope: !17231)
!17231 = distinct !DILexicalBlock(scope: !17226, file: !2573, line: 1695, column: 6)
!17232 = !DILocation(line: 1695, column: 33, scope: !17231)
!17233 = !DILocation(line: 1695, column: 49, scope: !17231)
!17234 = !DILocation(line: 1695, column: 6, scope: !17226)
!17235 = !DILocation(line: 1697, column: 29, scope: !17236)
!17236 = distinct !DILexicalBlock(scope: !17231, file: !2573, line: 1695, column: 56)
!17237 = !DILocation(line: 1698, column: 7, scope: !17238)
!17238 = distinct !DILexicalBlock(scope: !17236, file: !2573, line: 1698, column: 7)
!17239 = !DILocation(line: 1698, column: 7, scope: !17236)
!17240 = !DILocation(line: 0, scope: !15608, inlinedAt: !17241)
!17241 = distinct !DILocation(line: 1699, column: 4, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17238, file: !2573, line: 1698, column: 35)
!17243 = !DILocation(line: 266, column: 28, scope: !15608, inlinedAt: !17241)
!17244 = !DILocation(line: 0, scope: !15616, inlinedAt: !17245)
!17245 = distinct !DILocation(line: 268, column: 3, scope: !15620, inlinedAt: !17241)
!17246 = !DILocation(line: 234, column: 2, scope: !15616, inlinedAt: !17245)
!17247 = !DILocation(line: 1700, column: 3, scope: !17242)
!17248 = !DILocation(line: 1701, column: 20, scope: !17249)
!17249 = distinct !DILexicalBlock(scope: !17236, file: !2573, line: 1701, column: 7)
!17250 = !DILocation(line: 1701, column: 30, scope: !17249)
!17251 = !DILocation(line: 1701, column: 7, scope: !17236)
!17252 = !DILocation(line: 1702, column: 4, scope: !17253)
!17253 = distinct !DILexicalBlock(scope: !17249, file: !2573, line: 1701, column: 39)
!17254 = !DILocation(line: 1703, column: 3, scope: !17253)
!17255 = !DILocation(line: 1704, column: 9, scope: !17236)
!17256 = !DILocation(line: 1705, column: 23, scope: !17236)
!17257 = !DILocation(line: 1705, column: 3, scope: !17236)
!17258 = !DILocation(line: 1706, column: 3, scope: !17236)
!17259 = !DILocation(line: 1722, column: 2, scope: !17236)
!17260 = !DILocation(line: 1723, column: 1, scope: !17226)
!17261 = distinct !DISubprogram(name: "unpend_all", scope: !2573, file: !2573, line: 1674, type: !17262, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17264)
!17262 = !DISubroutineType(types: !17263)
!17263 = !{null, !2499}
!17264 = !{!17265, !17266}
!17265 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17261, file: !2573, line: 1674, type: !2499)
!17266 = !DILocalVariable(name: "thread", scope: !17261, file: !2573, line: 1676, type: !2468)
!17267 = !DILocation(line: 0, scope: !17261)
!17268 = !DILocation(line: 1678, column: 19, scope: !17261)
!17269 = !DILocation(line: 1678, column: 41, scope: !17261)
!17270 = !DILocation(line: 1678, column: 2, scope: !17261)
!17271 = !DILocation(line: 1679, column: 3, scope: !17272)
!17272 = distinct !DILexicalBlock(scope: !17261, file: !2573, line: 1678, column: 50)
!17273 = !DILocation(line: 1680, column: 9, scope: !17272)
!17274 = !DILocalVariable(name: "thread", arg: 1, scope: !17275, file: !14467, line: 65, type: !2468)
!17275 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14467, file: !14467, line: 65, type: !17276, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17278)
!17276 = !DISubroutineType(types: !17277)
!17277 = !{null, !2468, !32}
!17278 = !{!17274, !17279}
!17279 = !DILocalVariable(name: "value", arg: 2, scope: !17275, file: !14467, line: 65, type: !32)
!17280 = !DILocation(line: 0, scope: !17275, inlinedAt: !17281)
!17281 = distinct !DILocation(line: 1681, column: 3, scope: !17272)
!17282 = !DILocation(line: 67, column: 15, scope: !17275, inlinedAt: !17281)
!17283 = !DILocation(line: 67, column: 33, scope: !17275, inlinedAt: !17281)
!17284 = !DILocation(line: 1682, column: 3, scope: !17272)
!17285 = distinct !{!17285, !17270, !17286}
!17286 = !DILocation(line: 1683, column: 2, scope: !17261)
!17287 = !DILocation(line: 1684, column: 1, scope: !17261)
!17288 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2573, file: !2573, line: 1794, type: !17289, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17291)
!17289 = !DISubroutineType(types: !17290)
!17290 = !{!103, !2468, !16230}
!17291 = !{!17292, !17293, !17294, !17295}
!17292 = !DILocalVariable(name: "thread", arg: 1, scope: !17288, file: !2573, line: 1794, type: !2468)
!17293 = !DILocalVariable(name: "timeout", arg: 2, scope: !17288, file: !2573, line: 1794, type: !16230)
!17294 = !DILocalVariable(name: "key", scope: !17288, file: !2573, line: 1796, type: !15431)
!17295 = !DILocalVariable(name: "ret", scope: !17288, file: !2573, line: 1797, type: !103)
!17296 = !DILocation(line: 0, scope: !17288)
!17297 = !DILocation(line: 0, scope: !15439, inlinedAt: !17298)
!17298 = distinct !DILocation(line: 1796, column: 25, scope: !17288)
!17299 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !17300)
!17300 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !17298)
!17301 = !DILocation(line: 0, scope: !15448, inlinedAt: !17300)
!17302 = !DILocation(line: 1801, column: 20, scope: !17303)
!17303 = distinct !DILexicalBlock(scope: !17288, file: !2573, line: 1801, column: 6)
!17304 = !DILocation(line: 1801, column: 33, scope: !17303)
!17305 = !DILocation(line: 1801, column: 49, scope: !17303)
!17306 = !DILocation(line: 1801, column: 6, scope: !17288)
!17307 = !DILocation(line: 1803, column: 13, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !17303, file: !2573, line: 1803, column: 13)
!17309 = !DILocation(line: 1803, column: 13, scope: !17303)
!17310 = !DILocation(line: 1805, column: 24, scope: !17311)
!17311 = distinct !DILexicalBlock(scope: !17308, file: !2573, line: 1805, column: 13)
!17312 = !DILocation(line: 1805, column: 21, scope: !17311)
!17313 = !DILocation(line: 1805, column: 34, scope: !17311)
!17314 = !DILocation(line: 1806, column: 20, scope: !17311)
!17315 = !DILocation(line: 1806, column: 44, scope: !17311)
!17316 = !DILocation(line: 1806, column: 30, scope: !17311)
!17317 = !DILocation(line: 1805, column: 13, scope: !17308)
!17318 = !DILocation(line: 1810, column: 42, scope: !17319)
!17319 = distinct !DILexicalBlock(scope: !17311, file: !2573, line: 1808, column: 9)
!17320 = !DILocation(line: 1810, column: 3, scope: !17319)
!17321 = !DILocation(line: 1811, column: 22, scope: !17319)
!17322 = !DILocation(line: 1811, column: 3, scope: !17319)
!17323 = !DILocation(line: 0, scope: !16050, inlinedAt: !17324)
!17324 = distinct !DILocation(line: 1814, column: 9, scope: !17319)
!17325 = !DILocation(line: 196, column: 9, scope: !16050, inlinedAt: !17324)
!17326 = !DILocation(line: 1817, column: 3, scope: !17319)
!17327 = !DILocation(line: 0, scope: !17303)
!17328 = !DILocation(line: 0, scope: !15466, inlinedAt: !17329)
!17329 = distinct !DILocation(line: 1822, column: 2, scope: !17288)
!17330 = !DILocation(line: 0, scope: !15474, inlinedAt: !17331)
!17331 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !17329)
!17332 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !17331)
!17333 = !DILocation(line: 1823, column: 2, scope: !17288)
!17334 = !DILocation(line: 1824, column: 1, scope: !17288)
!17335 = distinct !DISubprogram(name: "z_sched_wake", scope: !2573, file: !2573, line: 1882, type: !17336, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17338)
!17336 = !DISubroutineType(types: !17337)
!17337 = !{!166, !2499, !103, !102}
!17338 = !{!17339, !17340, !17341, !17342, !17343, !17344, !17346}
!17339 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17335, file: !2573, line: 1882, type: !2499)
!17340 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17335, file: !2573, line: 1882, type: !103)
!17341 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17335, file: !2573, line: 1882, type: !102)
!17342 = !DILocalVariable(name: "thread", scope: !17335, file: !2573, line: 1884, type: !2468)
!17343 = !DILocalVariable(name: "ret", scope: !17335, file: !2573, line: 1885, type: !166)
!17344 = !DILocalVariable(name: "__i", scope: !17345, file: !2573, line: 1887, type: !15431)
!17345 = distinct !DILexicalBlock(scope: !17335, file: !2573, line: 1887, column: 2)
!17346 = !DILocalVariable(name: "__key", scope: !17345, file: !2573, line: 1887, type: !15431)
!17347 = !DILocation(line: 0, scope: !17335)
!17348 = !DILocation(line: 0, scope: !17345)
!17349 = !DILocation(line: 0, scope: !15439, inlinedAt: !17350)
!17350 = distinct !DILocation(line: 1887, column: 2, scope: !17345)
!17351 = !DILocation(line: 55, column: 2, scope: !15448, inlinedAt: !17352)
!17352 = distinct !DILocation(line: 145, column: 10, scope: !15439, inlinedAt: !17350)
!17353 = !DILocation(line: 0, scope: !15448, inlinedAt: !17352)
!17354 = !DILocation(line: 1888, column: 12, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !17356, file: !2573, line: 1887, column: 26)
!17356 = distinct !DILexicalBlock(scope: !17345, file: !2573, line: 1887, column: 2)
!17357 = !DILocation(line: 1890, column: 14, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17355, file: !2573, line: 1890, column: 7)
!17359 = !DILocation(line: 1890, column: 7, scope: !17355)
!17360 = !DILocalVariable(name: "thread", arg: 1, scope: !17361, file: !17362, line: 134, type: !2468)
!17361 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !17362, file: !17362, line: 134, type: !17363, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17365)
!17362 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17363 = !DISubroutineType(types: !17364)
!17364 = !{null, !2468, !32, !102}
!17365 = !{!17360, !17366, !17367}
!17366 = !DILocalVariable(name: "value", arg: 2, scope: !17361, file: !17362, line: 135, type: !32)
!17367 = !DILocalVariable(name: "data", arg: 3, scope: !17361, file: !17362, line: 136, type: !102)
!17368 = !DILocation(line: 0, scope: !17361, inlinedAt: !17369)
!17369 = distinct !DILocation(line: 1891, column: 4, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17358, file: !2573, line: 1890, column: 23)
!17371 = !DILocation(line: 0, scope: !17275, inlinedAt: !17372)
!17372 = distinct !DILocation(line: 138, column: 2, scope: !17361, inlinedAt: !17369)
!17373 = !DILocation(line: 67, column: 15, scope: !17275, inlinedAt: !17372)
!17374 = !DILocation(line: 67, column: 33, scope: !17275, inlinedAt: !17372)
!17375 = !DILocation(line: 139, column: 15, scope: !17361, inlinedAt: !17369)
!17376 = !DILocation(line: 139, column: 25, scope: !17361, inlinedAt: !17369)
!17377 = !DILocation(line: 1894, column: 4, scope: !17370)
!17378 = !DILocation(line: 1895, column: 10, scope: !17370)
!17379 = !DILocation(line: 1896, column: 4, scope: !17370)
!17380 = !DILocation(line: 1898, column: 3, scope: !17370)
!17381 = !DILocation(line: 0, scope: !15466, inlinedAt: !17382)
!17382 = distinct !DILocation(line: 1887, column: 2, scope: !17356)
!17383 = !DILocation(line: 0, scope: !15474, inlinedAt: !17384)
!17384 = distinct !DILocation(line: 215, column: 2, scope: !15466, inlinedAt: !17382)
!17385 = !DILocation(line: 95, column: 2, scope: !15474, inlinedAt: !17384)
!17386 = !DILocation(line: 1901, column: 2, scope: !17335)
!17387 = distinct !DISubprogram(name: "z_sched_wait", scope: !2573, file: !2573, line: 1904, type: !17388, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17391)
!17388 = !DISubroutineType(types: !17389)
!17389 = !{!103, !15442, !15431, !2499, !16230, !17390}
!17390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!17391 = !{!17392, !17393, !17394, !17395, !17396, !17397}
!17392 = !DILocalVariable(name: "lock", arg: 1, scope: !17387, file: !2573, line: 1904, type: !15442)
!17393 = !DILocalVariable(name: "key", arg: 2, scope: !17387, file: !2573, line: 1904, type: !15431)
!17394 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17387, file: !2573, line: 1905, type: !2499)
!17395 = !DILocalVariable(name: "timeout", arg: 4, scope: !17387, file: !2573, line: 1905, type: !16230)
!17396 = !DILocalVariable(name: "data", arg: 5, scope: !17387, file: !2573, line: 1905, type: !17390)
!17397 = !DILocalVariable(name: "ret", scope: !17387, file: !2573, line: 1907, type: !103)
!17398 = !DILocation(line: 0, scope: !17387)
!17399 = !DILocation(line: 1907, column: 12, scope: !17387)
!17400 = !DILocation(line: 1909, column: 11, scope: !17401)
!17401 = distinct !DILexicalBlock(scope: !17387, file: !2573, line: 1909, column: 6)
!17402 = !DILocation(line: 1909, column: 6, scope: !17387)
!17403 = !DILocation(line: 1910, column: 11, scope: !17404)
!17404 = distinct !DILexicalBlock(scope: !17401, file: !2573, line: 1909, column: 20)
!17405 = !DILocation(line: 1910, column: 26, scope: !17404)
!17406 = !DILocation(line: 1910, column: 9, scope: !17404)
!17407 = !DILocation(line: 1911, column: 2, scope: !17404)
!17408 = !DILocation(line: 1912, column: 2, scope: !17387)
!17409 = distinct !DISubprogram(name: "z_data_copy", scope: !17410, file: !17410, line: 22, type: !3328, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3311, retainedNodes: !473)
!17410 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17411 = !DILocation(line: 24, column: 2, scope: !17409)
!17412 = !DILocation(line: 27, column: 2, scope: !17409)
!17413 = !DILocation(line: 71, column: 1, scope: !17409)
!17414 = distinct !DISubprogram(name: "z_add_timeout", scope: !2610, file: !2610, line: 88, type: !17415, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17421)
!17415 = !DISubroutineType(types: !17416)
!17416 = !{null, !2583, !2602, !17417}
!17417 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1800, line: 67, baseType: !17418)
!17418 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1800, line: 65, size: 64, elements: !17419)
!17419 = !{!17420}
!17420 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17418, file: !1800, line: 66, baseType: !1799, size: 64)
!17421 = !{!17422, !17423, !17424, !17425, !17431, !17432, !17435, !17438}
!17422 = !DILocalVariable(name: "to", arg: 1, scope: !17414, file: !2610, line: 88, type: !2583)
!17423 = !DILocalVariable(name: "fn", arg: 2, scope: !17414, file: !2610, line: 88, type: !2602)
!17424 = !DILocalVariable(name: "timeout", arg: 3, scope: !17414, file: !2610, line: 89, type: !17417)
!17425 = !DILocalVariable(name: "__i", scope: !17426, file: !2610, line: 102, type: !17427)
!17426 = distinct !DILexicalBlock(scope: !17414, file: !2610, line: 102, column: 2)
!17427 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !17428)
!17428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !17429)
!17429 = !{!17430}
!17430 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17428, file: !472, line: 33, baseType: !103, size: 32)
!17431 = !DILocalVariable(name: "__key", scope: !17426, file: !2610, line: 102, type: !17427)
!17432 = !DILocalVariable(name: "t", scope: !17433, file: !2610, line: 103, type: !2583)
!17433 = distinct !DILexicalBlock(scope: !17434, file: !2610, line: 102, column: 24)
!17434 = distinct !DILexicalBlock(scope: !17426, file: !2610, line: 102, column: 2)
!17435 = !DILocalVariable(name: "ticks", scope: !17436, file: !2610, line: 107, type: !1799)
!17436 = distinct !DILexicalBlock(scope: !17437, file: !2610, line: 106, column: 39)
!17437 = distinct !DILexicalBlock(scope: !17433, file: !2610, line: 105, column: 7)
!17438 = !DILocalVariable(name: "next_time", scope: !17439, file: !2610, line: 137, type: !344)
!17439 = distinct !DILexicalBlock(scope: !17440, file: !2610, line: 127, column: 22)
!17440 = distinct !DILexicalBlock(scope: !17433, file: !2610, line: 127, column: 7)
!17441 = !DILocation(line: 0, scope: !17414)
!17442 = !DILocation(line: 91, column: 6, scope: !17443)
!17443 = distinct !DILexicalBlock(scope: !17414, file: !2610, line: 91, column: 6)
!17444 = !DILocation(line: 91, column: 6, scope: !17414)
!17445 = !DILocation(line: 100, column: 6, scope: !17414)
!17446 = !DILocation(line: 100, column: 9, scope: !17414)
!17447 = !DILocation(line: 0, scope: !17426)
!17448 = !DILocalVariable(name: "l", arg: 1, scope: !17449, file: !472, line: 136, type: !17452)
!17449 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !17450, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17453)
!17450 = !DISubroutineType(types: !17451)
!17451 = !{!17427, !17452}
!17452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!17453 = !{!17448, !17454}
!17454 = !DILocalVariable(name: "k", scope: !17449, file: !472, line: 139, type: !17427)
!17455 = !DILocation(line: 0, scope: !17449, inlinedAt: !17456)
!17456 = distinct !DILocation(line: 102, column: 2, scope: !17426)
!17457 = !DILocation(line: 55, column: 2, scope: !17458, inlinedAt: !17462)
!17458 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5901, file: !5901, line: 42, type: !5902, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17459)
!17459 = !{!17460, !17461}
!17460 = !DILocalVariable(name: "key", scope: !17458, file: !5901, line: 44, type: !32)
!17461 = !DILocalVariable(name: "tmp", scope: !17458, file: !5901, line: 53, type: !32)
!17462 = distinct !DILocation(line: 145, column: 10, scope: !17449, inlinedAt: !17456)
!17463 = !{i64 2284004}
!17464 = !DILocation(line: 0, scope: !17458, inlinedAt: !17462)
!17465 = !DILocation(line: 106, column: 33, scope: !17437)
!17466 = !DILocation(line: 105, column: 7, scope: !17433)
!17467 = !DILocation(line: 107, column: 50, scope: !17436)
!17468 = !DILocation(line: 107, column: 48, scope: !17436)
!17469 = !DILocation(line: 0, scope: !17436)
!17470 = !DILocation(line: 109, column: 17, scope: !17436)
!17471 = !DILocation(line: 110, column: 3, scope: !17436)
!17472 = !DILocation(line: 111, column: 31, scope: !17473)
!17473 = distinct !DILexicalBlock(scope: !17437, file: !2610, line: 110, column: 10)
!17474 = !DILocation(line: 111, column: 37, scope: !17473)
!17475 = !DILocation(line: 111, column: 35, scope: !17473)
!17476 = !DILocation(line: 0, scope: !17437)
!17477 = !DILocation(line: 109, column: 8, scope: !17436)
!17478 = !DILocation(line: 109, column: 15, scope: !17436)
!17479 = !DILocation(line: 114, column: 12, scope: !17480)
!17480 = distinct !DILexicalBlock(scope: !17433, file: !2610, line: 114, column: 3)
!17481 = !DILocation(line: 0, scope: !17433)
!17482 = !DILocation(line: 114, column: 3, scope: !17480)
!17483 = !DILocation(line: 115, column: 24, scope: !17484)
!17484 = distinct !DILexicalBlock(scope: !17485, file: !2610, line: 115, column: 8)
!17485 = distinct !DILexicalBlock(scope: !17486, file: !2610, line: 114, column: 45)
!17486 = distinct !DILexicalBlock(scope: !17480, file: !2610, line: 114, column: 3)
!17487 = !DILocation(line: 115, column: 11, scope: !17484)
!17488 = !DILocation(line: 115, column: 18, scope: !17484)
!17489 = !DILocation(line: 115, column: 8, scope: !17485)
!17490 = !DILocation(line: 116, column: 15, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17484, file: !2610, line: 115, column: 32)
!17492 = !DILocation(line: 117, column: 26, scope: !17491)
!17493 = !DILocation(line: 117, column: 37, scope: !17491)
!17494 = !DILocation(line: 117, column: 5, scope: !17491)
!17495 = !DILocation(line: 123, column: 7, scope: !17433)
!17496 = !DILocation(line: 120, column: 15, scope: !17485)
!17497 = !DILocation(line: 114, column: 36, scope: !17486)
!17498 = distinct !{!17498, !17482, !17499}
!17499 = !DILocation(line: 121, column: 3, scope: !17480)
!17500 = !DILocation(line: 124, column: 41, scope: !17501)
!17501 = distinct !DILexicalBlock(scope: !17502, file: !2610, line: 123, column: 18)
!17502 = distinct !DILexicalBlock(scope: !17433, file: !2610, line: 123, column: 7)
!17503 = !DILocation(line: 124, column: 4, scope: !17501)
!17504 = !DILocation(line: 125, column: 3, scope: !17501)
!17505 = !DILocation(line: 127, column: 13, scope: !17440)
!17506 = !DILocation(line: 127, column: 10, scope: !17440)
!17507 = !DILocation(line: 127, column: 7, scope: !17433)
!17508 = !DILocation(line: 137, column: 24, scope: !17439)
!17509 = !DILocation(line: 0, scope: !17439)
!17510 = !DILocation(line: 139, column: 18, scope: !17511)
!17511 = distinct !DILexicalBlock(scope: !17439, file: !2610, line: 139, column: 8)
!17512 = !DILocation(line: 139, column: 23, scope: !17511)
!17513 = !DILocation(line: 141, column: 5, scope: !17514)
!17514 = distinct !DILexicalBlock(scope: !17511, file: !2610, line: 140, column: 48)
!17515 = !DILocation(line: 142, column: 4, scope: !17514)
!17516 = !DILocalVariable(name: "key", arg: 2, scope: !17517, file: !472, line: 190, type: !17427)
!17517 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !17518, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17520)
!17518 = !DISubroutineType(types: !17519)
!17519 = !{null, !17452, !17427}
!17520 = !{!17521, !17516}
!17521 = !DILocalVariable(name: "l", arg: 1, scope: !17517, file: !472, line: 189, type: !17452)
!17522 = !DILocation(line: 0, scope: !17517, inlinedAt: !17523)
!17523 = distinct !DILocation(line: 102, column: 2, scope: !17434)
!17524 = !DILocalVariable(name: "key", arg: 1, scope: !17525, file: !5901, line: 84, type: !32)
!17525 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5901, file: !5901, line: 84, type: !5912, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17526)
!17526 = !{!17524}
!17527 = !DILocation(line: 0, scope: !17525, inlinedAt: !17528)
!17528 = distinct !DILocation(line: 215, column: 2, scope: !17517, inlinedAt: !17523)
!17529 = !DILocation(line: 95, column: 2, scope: !17525, inlinedAt: !17528)
!17530 = !{i64 2284821}
!17531 = !DILocation(line: 148, column: 1, scope: !17414)
!17532 = distinct !DISubprogram(name: "elapsed", scope: !2610, file: !2610, line: 62, type: !17533, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !473)
!17533 = !DISubroutineType(types: !17534)
!17534 = !{!344}
!17535 = !DILocation(line: 64, column: 9, scope: !17532)
!17536 = !DILocation(line: 64, column: 28, scope: !17532)
!17537 = !DILocation(line: 64, column: 35, scope: !17532)
!17538 = !DILocation(line: 64, column: 2, scope: !17532)
!17539 = distinct !DISubprogram(name: "first", scope: !2610, file: !2610, line: 39, type: !17540, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17542)
!17540 = !DISubroutineType(types: !17541)
!17541 = !{!2583}
!17542 = !{!17543}
!17543 = !DILocalVariable(name: "t", scope: !17539, file: !2610, line: 41, type: !17544)
!17544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 32)
!17545 = !DILocation(line: 41, column: 19, scope: !17539)
!17546 = !DILocation(line: 0, scope: !17539)
!17547 = !DILocation(line: 43, column: 9, scope: !17539)
!17548 = !DILocation(line: 43, column: 2, scope: !17539)
!17549 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !321, file: !321, line: 443, type: !17550, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17552)
!17550 = !DISubroutineType(types: !17551)
!17551 = !{null, !17544, !17544}
!17552 = !{!17553, !17554, !17555}
!17553 = !DILocalVariable(name: "successor", arg: 1, scope: !17549, file: !321, line: 443, type: !17544)
!17554 = !DILocalVariable(name: "node", arg: 2, scope: !17549, file: !321, line: 443, type: !17544)
!17555 = !DILocalVariable(name: "prev", scope: !17549, file: !321, line: 445, type: !17556)
!17556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17544)
!17557 = !DILocation(line: 0, scope: !17549)
!17558 = !DILocation(line: 445, column: 39, scope: !17549)
!17559 = !DILocation(line: 447, column: 8, scope: !17549)
!17560 = !DILocation(line: 447, column: 13, scope: !17549)
!17561 = !DILocation(line: 448, column: 8, scope: !17549)
!17562 = !DILocation(line: 448, column: 13, scope: !17549)
!17563 = !DILocation(line: 449, column: 8, scope: !17549)
!17564 = !DILocation(line: 449, column: 13, scope: !17549)
!17565 = !DILocation(line: 450, column: 18, scope: !17549)
!17566 = !DILocation(line: 451, column: 1, scope: !17549)
!17567 = distinct !DISubprogram(name: "next", scope: !2610, file: !2610, line: 46, type: !17568, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17570)
!17568 = !DISubroutineType(types: !17569)
!17569 = !{!2583, !2583}
!17570 = !{!17571, !17572}
!17571 = !DILocalVariable(name: "t", arg: 1, scope: !17567, file: !2610, line: 46, type: !2583)
!17572 = !DILocalVariable(name: "n", scope: !17567, file: !2610, line: 48, type: !17544)
!17573 = !DILocation(line: 0, scope: !17567)
!17574 = !DILocation(line: 48, column: 58, scope: !17567)
!17575 = !DILocation(line: 48, column: 19, scope: !17567)
!17576 = !DILocation(line: 50, column: 9, scope: !17567)
!17577 = !DILocation(line: 50, column: 2, scope: !17567)
!17578 = distinct !DISubprogram(name: "sys_dlist_append", scope: !321, file: !321, line: 404, type: !17579, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17582)
!17579 = !DISubroutineType(types: !17580)
!17580 = !{null, !17581, !17544}
!17581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 32)
!17582 = !{!17583, !17584, !17585}
!17583 = !DILocalVariable(name: "list", arg: 1, scope: !17578, file: !321, line: 404, type: !17581)
!17584 = !DILocalVariable(name: "node", arg: 2, scope: !17578, file: !321, line: 404, type: !17544)
!17585 = !DILocalVariable(name: "tail", scope: !17578, file: !321, line: 406, type: !17556)
!17586 = !DILocation(line: 0, scope: !17578)
!17587 = !DILocation(line: 406, column: 34, scope: !17578)
!17588 = !DILocation(line: 408, column: 8, scope: !17578)
!17589 = !DILocation(line: 408, column: 13, scope: !17578)
!17590 = !DILocation(line: 409, column: 8, scope: !17578)
!17591 = !DILocation(line: 409, column: 13, scope: !17578)
!17592 = !DILocation(line: 411, column: 8, scope: !17578)
!17593 = !DILocation(line: 411, column: 13, scope: !17578)
!17594 = !DILocation(line: 412, column: 13, scope: !17578)
!17595 = !DILocation(line: 413, column: 1, scope: !17578)
!17596 = distinct !DISubprogram(name: "next_timeout", scope: !2610, file: !2610, line: 67, type: !17533, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17597)
!17597 = !{!17598, !17599, !17600}
!17598 = !DILocalVariable(name: "to", scope: !17596, file: !2610, line: 69, type: !2583)
!17599 = !DILocalVariable(name: "ticks_elapsed", scope: !17596, file: !2610, line: 70, type: !344)
!17600 = !DILocalVariable(name: "ret", scope: !17596, file: !2610, line: 71, type: !344)
!17601 = !DILocation(line: 69, column: 24, scope: !17596)
!17602 = !DILocation(line: 0, scope: !17596)
!17603 = !DILocation(line: 70, column: 26, scope: !17596)
!17604 = !DILocation(line: 73, column: 10, scope: !17605)
!17605 = distinct !DILexicalBlock(scope: !17596, file: !2610, line: 73, column: 6)
!17606 = !DILocation(line: 73, column: 19, scope: !17605)
!17607 = !DILocation(line: 74, column: 21, scope: !17605)
!17608 = !DILocation(line: 74, column: 30, scope: !17605)
!17609 = !DILocation(line: 74, column: 28, scope: !17605)
!17610 = !DILocation(line: 74, column: 45, scope: !17605)
!17611 = !DILocation(line: 73, column: 6, scope: !17596)
!17612 = !DILocation(line: 77, column: 9, scope: !17613)
!17613 = distinct !DILexicalBlock(scope: !17605, file: !2610, line: 76, column: 9)
!17614 = !DILocation(line: 0, scope: !17605)
!17615 = !DILocation(line: 81, column: 20, scope: !17616)
!17616 = distinct !DILexicalBlock(scope: !17596, file: !2610, line: 81, column: 6)
!17617 = !DILocation(line: 81, column: 6, scope: !17616)
!17618 = !DILocation(line: 81, column: 32, scope: !17616)
!17619 = !DILocation(line: 85, column: 2, scope: !17596)
!17620 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !321, file: !321, line: 341, type: !17621, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17623)
!17621 = !DISubroutineType(types: !17622)
!17622 = !{!17544, !17581, !17544}
!17623 = !{!17624, !17625}
!17624 = !DILocalVariable(name: "list", arg: 1, scope: !17620, file: !321, line: 341, type: !17581)
!17625 = !DILocalVariable(name: "node", arg: 2, scope: !17620, file: !321, line: 342, type: !17544)
!17626 = !DILocation(line: 0, scope: !17620)
!17627 = !DILocation(line: 344, column: 15, scope: !17620)
!17628 = !DILocation(line: 344, column: 9, scope: !17620)
!17629 = !DILocation(line: 344, column: 26, scope: !17620)
!17630 = !DILocation(line: 344, column: 2, scope: !17620)
!17631 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !321, file: !321, line: 325, type: !17621, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17632)
!17632 = !{!17633, !17634}
!17633 = !DILocalVariable(name: "list", arg: 1, scope: !17631, file: !321, line: 325, type: !17581)
!17634 = !DILocalVariable(name: "node", arg: 2, scope: !17631, file: !321, line: 326, type: !17544)
!17635 = !DILocation(line: 0, scope: !17631)
!17636 = !DILocation(line: 328, column: 24, scope: !17631)
!17637 = !DILocation(line: 328, column: 15, scope: !17631)
!17638 = !DILocation(line: 328, column: 9, scope: !17631)
!17639 = !DILocation(line: 328, column: 45, scope: !17631)
!17640 = !DILocation(line: 328, column: 2, scope: !17631)
!17641 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !321, file: !321, line: 294, type: !17642, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17644)
!17642 = !DISubroutineType(types: !17643)
!17643 = !{!17544, !17581}
!17644 = !{!17645}
!17645 = !DILocalVariable(name: "list", arg: 1, scope: !17641, file: !321, line: 294, type: !17581)
!17646 = !DILocation(line: 0, scope: !17641)
!17647 = !DILocation(line: 296, column: 9, scope: !17641)
!17648 = !DILocation(line: 296, column: 2, scope: !17641)
!17649 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !321, file: !321, line: 266, type: !17650, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17652)
!17650 = !DISubroutineType(types: !17651)
!17651 = !{!166, !17581}
!17652 = !{!17653}
!17653 = !DILocalVariable(name: "list", arg: 1, scope: !17649, file: !321, line: 266, type: !17581)
!17654 = !DILocation(line: 0, scope: !17649)
!17655 = !DILocation(line: 268, column: 15, scope: !17649)
!17656 = !DILocation(line: 268, column: 20, scope: !17649)
!17657 = !DILocation(line: 268, column: 2, scope: !17649)
!17658 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2610, file: !2610, line: 150, type: !17659, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17661)
!17659 = !DISubroutineType(types: !17660)
!17660 = !{!103, !2583}
!17661 = !{!17662, !17663, !17664, !17666}
!17662 = !DILocalVariable(name: "to", arg: 1, scope: !17658, file: !2610, line: 150, type: !2583)
!17663 = !DILocalVariable(name: "ret", scope: !17658, file: !2610, line: 152, type: !103)
!17664 = !DILocalVariable(name: "__i", scope: !17665, file: !2610, line: 154, type: !17427)
!17665 = distinct !DILexicalBlock(scope: !17658, file: !2610, line: 154, column: 2)
!17666 = !DILocalVariable(name: "__key", scope: !17665, file: !2610, line: 154, type: !17427)
!17667 = !DILocation(line: 0, scope: !17658)
!17668 = !DILocation(line: 0, scope: !17665)
!17669 = !DILocation(line: 0, scope: !17449, inlinedAt: !17670)
!17670 = distinct !DILocation(line: 154, column: 2, scope: !17665)
!17671 = !DILocation(line: 55, column: 2, scope: !17458, inlinedAt: !17672)
!17672 = distinct !DILocation(line: 145, column: 10, scope: !17449, inlinedAt: !17670)
!17673 = !DILocation(line: 0, scope: !17458, inlinedAt: !17672)
!17674 = !DILocation(line: 155, column: 7, scope: !17675)
!17675 = distinct !DILexicalBlock(scope: !17676, file: !2610, line: 155, column: 7)
!17676 = distinct !DILexicalBlock(scope: !17677, file: !2610, line: 154, column: 24)
!17677 = distinct !DILexicalBlock(scope: !17665, file: !2610, line: 154, column: 2)
!17678 = !DILocation(line: 155, column: 7, scope: !17676)
!17679 = !DILocation(line: 156, column: 4, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17675, file: !2610, line: 155, column: 39)
!17681 = !DILocation(line: 158, column: 3, scope: !17680)
!17682 = !DILocation(line: 0, scope: !17517, inlinedAt: !17683)
!17683 = distinct !DILocation(line: 154, column: 2, scope: !17677)
!17684 = !DILocation(line: 0, scope: !17525, inlinedAt: !17685)
!17685 = distinct !DILocation(line: 215, column: 2, scope: !17517, inlinedAt: !17683)
!17686 = !DILocation(line: 95, column: 2, scope: !17525, inlinedAt: !17685)
!17687 = !DILocation(line: 161, column: 2, scope: !17658)
!17688 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !321, file: !321, line: 225, type: !17689, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17693)
!17689 = !DISubroutineType(types: !17690)
!17690 = !{!166, !17691}
!17691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17692, size: 32)
!17692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2587)
!17693 = !{!17694}
!17694 = !DILocalVariable(name: "node", arg: 1, scope: !17688, file: !321, line: 225, type: !17691)
!17695 = !DILocation(line: 0, scope: !17688)
!17696 = !DILocation(line: 227, column: 15, scope: !17688)
!17697 = !DILocation(line: 227, column: 20, scope: !17688)
!17698 = !DILocation(line: 227, column: 2, scope: !17688)
!17699 = distinct !DISubprogram(name: "remove_timeout", scope: !2610, file: !2610, line: 53, type: !2604, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17700)
!17700 = !{!17701}
!17701 = !DILocalVariable(name: "t", arg: 1, scope: !17699, file: !2610, line: 53, type: !2583)
!17702 = !DILocation(line: 0, scope: !17699)
!17703 = !DILocation(line: 55, column: 6, scope: !17704)
!17704 = distinct !DILexicalBlock(scope: !17699, file: !2610, line: 55, column: 6)
!17705 = !DILocation(line: 55, column: 14, scope: !17704)
!17706 = !DILocation(line: 55, column: 6, scope: !17699)
!17707 = !DILocation(line: 56, column: 25, scope: !17708)
!17708 = distinct !DILexicalBlock(scope: !17704, file: !2610, line: 55, column: 23)
!17709 = !DILocation(line: 56, column: 12, scope: !17708)
!17710 = !DILocation(line: 56, column: 19, scope: !17708)
!17711 = !DILocation(line: 57, column: 2, scope: !17708)
!17712 = !DILocation(line: 59, column: 23, scope: !17699)
!17713 = !DILocation(line: 59, column: 2, scope: !17699)
!17714 = !DILocation(line: 60, column: 1, scope: !17699)
!17715 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !321, file: !321, line: 496, type: !17716, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17718)
!17716 = !DISubroutineType(types: !17717)
!17717 = !{null, !17544}
!17718 = !{!17719, !17720, !17721}
!17719 = !DILocalVariable(name: "node", arg: 1, scope: !17715, file: !321, line: 496, type: !17544)
!17720 = !DILocalVariable(name: "prev", scope: !17715, file: !321, line: 498, type: !17556)
!17721 = !DILocalVariable(name: "next", scope: !17715, file: !321, line: 499, type: !17556)
!17722 = !DILocation(line: 0, scope: !17715)
!17723 = !DILocation(line: 498, column: 34, scope: !17715)
!17724 = !DILocation(line: 499, column: 34, scope: !17715)
!17725 = !DILocation(line: 501, column: 8, scope: !17715)
!17726 = !DILocation(line: 501, column: 13, scope: !17715)
!17727 = !DILocation(line: 502, column: 8, scope: !17715)
!17728 = !DILocation(line: 502, column: 13, scope: !17715)
!17729 = !DILocation(line: 503, column: 2, scope: !17715)
!17730 = !DILocation(line: 504, column: 1, scope: !17715)
!17731 = distinct !DISubprogram(name: "sys_dnode_init", scope: !321, file: !321, line: 211, type: !17716, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17732)
!17732 = !{!17733}
!17733 = !DILocalVariable(name: "node", arg: 1, scope: !17731, file: !321, line: 211, type: !17544)
!17734 = !DILocation(line: 0, scope: !17731)
!17735 = !DILocation(line: 213, column: 8, scope: !17731)
!17736 = !DILocation(line: 213, column: 13, scope: !17731)
!17737 = !DILocation(line: 214, column: 8, scope: !17731)
!17738 = !DILocation(line: 214, column: 13, scope: !17731)
!17739 = !DILocation(line: 215, column: 1, scope: !17731)
!17740 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2610, file: !2610, line: 183, type: !17741, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17745)
!17741 = !DISubroutineType(types: !17742)
!17742 = !{!1799, !17743}
!17743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17744, size: 32)
!17744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2584)
!17745 = !{!17746, !17747, !17748, !17750}
!17746 = !DILocalVariable(name: "timeout", arg: 1, scope: !17740, file: !2610, line: 183, type: !17743)
!17747 = !DILocalVariable(name: "ticks", scope: !17740, file: !2610, line: 185, type: !1799)
!17748 = !DILocalVariable(name: "__i", scope: !17749, file: !2610, line: 187, type: !17427)
!17749 = distinct !DILexicalBlock(scope: !17740, file: !2610, line: 187, column: 2)
!17750 = !DILocalVariable(name: "__key", scope: !17749, file: !2610, line: 187, type: !17427)
!17751 = !DILocation(line: 0, scope: !17740)
!17752 = !DILocation(line: 0, scope: !17749)
!17753 = !DILocation(line: 0, scope: !17449, inlinedAt: !17754)
!17754 = distinct !DILocation(line: 187, column: 2, scope: !17749)
!17755 = !DILocation(line: 55, column: 2, scope: !17458, inlinedAt: !17756)
!17756 = distinct !DILocation(line: 145, column: 10, scope: !17449, inlinedAt: !17754)
!17757 = !DILocation(line: 0, scope: !17458, inlinedAt: !17756)
!17758 = !DILocation(line: 188, column: 11, scope: !17759)
!17759 = distinct !DILexicalBlock(scope: !17760, file: !2610, line: 187, column: 24)
!17760 = distinct !DILexicalBlock(scope: !17749, file: !2610, line: 187, column: 2)
!17761 = !DILocation(line: 0, scope: !17517, inlinedAt: !17762)
!17762 = distinct !DILocation(line: 187, column: 2, scope: !17760)
!17763 = !DILocation(line: 0, scope: !17525, inlinedAt: !17764)
!17764 = distinct !DILocation(line: 215, column: 2, scope: !17517, inlinedAt: !17762)
!17765 = !DILocation(line: 95, column: 2, scope: !17525, inlinedAt: !17764)
!17766 = !DILocation(line: 191, column: 2, scope: !17740)
!17767 = distinct !DISubprogram(name: "timeout_rem", scope: !2610, file: !2610, line: 165, type: !17741, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17768)
!17768 = !{!17769, !17770, !17771}
!17769 = !DILocalVariable(name: "timeout", arg: 1, scope: !17767, file: !2610, line: 165, type: !17743)
!17770 = !DILocalVariable(name: "ticks", scope: !17767, file: !2610, line: 167, type: !1799)
!17771 = !DILocalVariable(name: "t", scope: !17772, file: !2610, line: 173, type: !2583)
!17772 = distinct !DILexicalBlock(scope: !17767, file: !2610, line: 173, column: 2)
!17773 = !DILocation(line: 0, scope: !17767)
!17774 = !DILocation(line: 169, column: 6, scope: !17775)
!17775 = distinct !DILexicalBlock(scope: !17767, file: !2610, line: 169, column: 6)
!17776 = !DILocation(line: 169, column: 6, scope: !17767)
!17777 = !DILocation(line: 173, column: 28, scope: !17772)
!17778 = !DILocation(line: 0, scope: !17772)
!17779 = !DILocation(line: 173, column: 39, scope: !17780)
!17780 = distinct !DILexicalBlock(scope: !17772, file: !2610, line: 173, column: 2)
!17781 = !DILocation(line: 173, column: 2, scope: !17772)
!17782 = !DILocation(line: 174, column: 15, scope: !17783)
!17783 = distinct !DILexicalBlock(scope: !17780, file: !2610, line: 173, column: 61)
!17784 = !DILocation(line: 174, column: 9, scope: !17783)
!17785 = !DILocation(line: 175, column: 15, scope: !17786)
!17786 = distinct !DILexicalBlock(scope: !17783, file: !2610, line: 175, column: 7)
!17787 = !DILocation(line: 175, column: 7, scope: !17783)
!17788 = !DILocation(line: 173, column: 52, scope: !17780)
!17789 = distinct !{!17789, !17781, !17790}
!17790 = !DILocation(line: 178, column: 2, scope: !17772)
!17791 = !DILocation(line: 180, column: 17, scope: !17767)
!17792 = !DILocation(line: 180, column: 15, scope: !17767)
!17793 = !DILocation(line: 180, column: 2, scope: !17767)
!17794 = !DILocation(line: 181, column: 1, scope: !17767)
!17795 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14841, file: !14841, line: 35, type: !17796, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17798)
!17796 = !DISubroutineType(types: !17797)
!17797 = !{!166, !17743}
!17798 = !{!17799}
!17799 = !DILocalVariable(name: "to", arg: 1, scope: !17795, file: !14841, line: 35, type: !17743)
!17800 = !DILocation(line: 0, scope: !17795)
!17801 = !DILocation(line: 37, column: 35, scope: !17795)
!17802 = !DILocation(line: 37, column: 10, scope: !17795)
!17803 = !DILocation(line: 37, column: 9, scope: !17795)
!17804 = !DILocation(line: 37, column: 2, scope: !17795)
!17805 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2610, file: !2610, line: 194, type: !17741, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17806)
!17806 = !{!17807, !17808, !17809, !17811}
!17807 = !DILocalVariable(name: "timeout", arg: 1, scope: !17805, file: !2610, line: 194, type: !17743)
!17808 = !DILocalVariable(name: "ticks", scope: !17805, file: !2610, line: 196, type: !1799)
!17809 = !DILocalVariable(name: "__i", scope: !17810, file: !2610, line: 198, type: !17427)
!17810 = distinct !DILexicalBlock(scope: !17805, file: !2610, line: 198, column: 2)
!17811 = !DILocalVariable(name: "__key", scope: !17810, file: !2610, line: 198, type: !17427)
!17812 = !DILocation(line: 0, scope: !17805)
!17813 = !DILocation(line: 0, scope: !17810)
!17814 = !DILocation(line: 0, scope: !17449, inlinedAt: !17815)
!17815 = distinct !DILocation(line: 198, column: 2, scope: !17810)
!17816 = !DILocation(line: 55, column: 2, scope: !17458, inlinedAt: !17817)
!17817 = distinct !DILocation(line: 145, column: 10, scope: !17449, inlinedAt: !17815)
!17818 = !DILocation(line: 0, scope: !17458, inlinedAt: !17817)
!17819 = !DILocation(line: 199, column: 11, scope: !17820)
!17820 = distinct !DILexicalBlock(scope: !17821, file: !2610, line: 198, column: 24)
!17821 = distinct !DILexicalBlock(scope: !17810, file: !2610, line: 198, column: 2)
!17822 = !DILocation(line: 199, column: 23, scope: !17820)
!17823 = !DILocation(line: 0, scope: !17517, inlinedAt: !17824)
!17824 = distinct !DILocation(line: 198, column: 2, scope: !17821)
!17825 = !DILocation(line: 0, scope: !17525, inlinedAt: !17826)
!17826 = distinct !DILocation(line: 215, column: 2, scope: !17517, inlinedAt: !17824)
!17827 = !DILocation(line: 95, column: 2, scope: !17525, inlinedAt: !17826)
!17828 = !DILocation(line: 199, column: 21, scope: !17820)
!17829 = !DILocation(line: 202, column: 2, scope: !17805)
!17830 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2610, file: !2610, line: 205, type: !17533, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17831)
!17831 = !{!17832, !17833, !17835}
!17832 = !DILocalVariable(name: "ret", scope: !17830, file: !2610, line: 207, type: !344)
!17833 = !DILocalVariable(name: "__i", scope: !17834, file: !2610, line: 209, type: !17427)
!17834 = distinct !DILexicalBlock(scope: !17830, file: !2610, line: 209, column: 2)
!17835 = !DILocalVariable(name: "__key", scope: !17834, file: !2610, line: 209, type: !17427)
!17836 = !DILocation(line: 0, scope: !17830)
!17837 = !DILocation(line: 0, scope: !17834)
!17838 = !DILocation(line: 0, scope: !17449, inlinedAt: !17839)
!17839 = distinct !DILocation(line: 209, column: 2, scope: !17834)
!17840 = !DILocation(line: 55, column: 2, scope: !17458, inlinedAt: !17841)
!17841 = distinct !DILocation(line: 145, column: 10, scope: !17449, inlinedAt: !17839)
!17842 = !DILocation(line: 0, scope: !17458, inlinedAt: !17841)
!17843 = !DILocation(line: 210, column: 9, scope: !17844)
!17844 = distinct !DILexicalBlock(scope: !17845, file: !2610, line: 209, column: 24)
!17845 = distinct !DILexicalBlock(scope: !17834, file: !2610, line: 209, column: 2)
!17846 = !DILocation(line: 0, scope: !17517, inlinedAt: !17847)
!17847 = distinct !DILocation(line: 209, column: 2, scope: !17845)
!17848 = !DILocation(line: 0, scope: !17525, inlinedAt: !17849)
!17849 = distinct !DILocation(line: 215, column: 2, scope: !17517, inlinedAt: !17847)
!17850 = !DILocation(line: 95, column: 2, scope: !17525, inlinedAt: !17849)
!17851 = !DILocation(line: 212, column: 2, scope: !17830)
!17852 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2610, file: !2610, line: 215, type: !11871, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17853)
!17853 = !{!17854, !17855, !17856, !17858, !17859, !17862, !17863}
!17854 = !DILocalVariable(name: "ticks", arg: 1, scope: !17852, file: !2610, line: 215, type: !344)
!17855 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17852, file: !2610, line: 215, type: !166)
!17856 = !DILocalVariable(name: "__i", scope: !17857, file: !2610, line: 217, type: !17427)
!17857 = distinct !DILexicalBlock(scope: !17852, file: !2610, line: 217, column: 2)
!17858 = !DILocalVariable(name: "__key", scope: !17857, file: !2610, line: 217, type: !17427)
!17859 = !DILocalVariable(name: "next_to", scope: !17860, file: !2610, line: 218, type: !103)
!17860 = distinct !DILexicalBlock(scope: !17861, file: !2610, line: 217, column: 24)
!17861 = distinct !DILexicalBlock(scope: !17857, file: !2610, line: 217, column: 2)
!17862 = !DILocalVariable(name: "sooner", scope: !17860, file: !2610, line: 219, type: !166)
!17863 = !DILocalVariable(name: "imminent", scope: !17860, file: !2610, line: 221, type: !166)
!17864 = !DILocation(line: 0, scope: !17852)
!17865 = !DILocation(line: 0, scope: !17857)
!17866 = !DILocation(line: 0, scope: !17449, inlinedAt: !17867)
!17867 = distinct !DILocation(line: 217, column: 2, scope: !17857)
!17868 = !DILocation(line: 55, column: 2, scope: !17458, inlinedAt: !17869)
!17869 = distinct !DILocation(line: 145, column: 10, scope: !17449, inlinedAt: !17867)
!17870 = !DILocation(line: 0, scope: !17458, inlinedAt: !17869)
!17871 = !DILocation(line: 218, column: 17, scope: !17860)
!17872 = !DILocation(line: 0, scope: !17860)
!17873 = !DILocation(line: 221, column: 27, scope: !17860)
!17874 = !DILocation(line: 233, column: 17, scope: !17875)
!17875 = distinct !DILexicalBlock(scope: !17860, file: !2610, line: 233, column: 7)
!17876 = !DILocation(line: 234, column: 26, scope: !17877)
!17877 = distinct !DILexicalBlock(scope: !17875, file: !2610, line: 233, column: 56)
!17878 = !DILocation(line: 234, column: 4, scope: !17877)
!17879 = !DILocation(line: 235, column: 3, scope: !17877)
!17880 = !DILocation(line: 0, scope: !17517, inlinedAt: !17881)
!17881 = distinct !DILocation(line: 217, column: 2, scope: !17861)
!17882 = !DILocation(line: 0, scope: !17525, inlinedAt: !17883)
!17883 = distinct !DILocation(line: 215, column: 2, scope: !17517, inlinedAt: !17881)
!17884 = !DILocation(line: 95, column: 2, scope: !17525, inlinedAt: !17883)
!17885 = !DILocation(line: 237, column: 1, scope: !17852)
!17886 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2610, file: !2610, line: 239, type: !17887, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17889)
!17887 = !DISubroutineType(types: !17888)
!17888 = !{null, !344}
!17889 = !{!17890, !17891, !17892, !17894}
!17890 = !DILocalVariable(name: "ticks", arg: 1, scope: !17886, file: !2610, line: 239, type: !344)
!17891 = !DILocalVariable(name: "key", scope: !17886, file: !2610, line: 245, type: !17427)
!17892 = !DILocalVariable(name: "t", scope: !17893, file: !2610, line: 262, type: !2583)
!17893 = distinct !DILexicalBlock(scope: !17886, file: !2610, line: 261, column: 67)
!17894 = !DILocalVariable(name: "dt", scope: !17893, file: !2610, line: 263, type: !103)
!17895 = !DILocation(line: 0, scope: !17886)
!17896 = !DILocation(line: 242, column: 2, scope: !17886)
!17897 = !DILocation(line: 0, scope: !17449, inlinedAt: !17898)
!17898 = distinct !DILocation(line: 245, column: 25, scope: !17886)
!17899 = !DILocation(line: 55, column: 2, scope: !17458, inlinedAt: !17900)
!17900 = distinct !DILocation(line: 145, column: 10, scope: !17449, inlinedAt: !17898)
!17901 = !DILocation(line: 0, scope: !17458, inlinedAt: !17900)
!17902 = !DILocation(line: 261, column: 9, scope: !17886)
!17903 = !DILocation(line: 261, column: 17, scope: !17886)
!17904 = !DILocation(line: 261, column: 25, scope: !17886)
!17905 = !DILocation(line: 261, column: 37, scope: !17886)
!17906 = !DILocation(line: 261, column: 47, scope: !17886)
!17907 = !DILocation(line: 261, column: 44, scope: !17886)
!17908 = !DILocation(line: 261, column: 2, scope: !17886)
!17909 = !DILocation(line: 0, scope: !17893)
!17910 = !DILocation(line: 263, column: 12, scope: !17893)
!17911 = !DILocation(line: 265, column: 16, scope: !17893)
!17912 = !DILocation(line: 265, column: 13, scope: !17893)
!17913 = !DILocation(line: 266, column: 13, scope: !17893)
!17914 = !DILocation(line: 267, column: 3, scope: !17893)
!17915 = !DILocation(line: 0, scope: !17517, inlinedAt: !17916)
!17916 = distinct !DILocation(line: 269, column: 3, scope: !17893)
!17917 = !DILocation(line: 0, scope: !17525, inlinedAt: !17918)
!17918 = distinct !DILocation(line: 215, column: 2, scope: !17517, inlinedAt: !17916)
!17919 = !DILocation(line: 95, column: 2, scope: !17525, inlinedAt: !17918)
!17920 = !DILocation(line: 270, column: 6, scope: !17893)
!17921 = !DILocation(line: 270, column: 3, scope: !17893)
!17922 = !DILocation(line: 0, scope: !17449, inlinedAt: !17923)
!17923 = distinct !DILocation(line: 271, column: 9, scope: !17893)
!17924 = !DILocation(line: 55, column: 2, scope: !17458, inlinedAt: !17925)
!17925 = distinct !DILocation(line: 145, column: 10, scope: !17449, inlinedAt: !17923)
!17926 = !DILocation(line: 0, scope: !17458, inlinedAt: !17925)
!17927 = !DILocation(line: 272, column: 22, scope: !17893)
!17928 = distinct !{!17928, !17908, !17929}
!17929 = !DILocation(line: 273, column: 2, scope: !17886)
!17930 = !DILocation(line: 276, column: 19, scope: !17931)
!17931 = distinct !DILexicalBlock(scope: !17932, file: !2610, line: 275, column: 23)
!17932 = distinct !DILexicalBlock(scope: !17886, file: !2610, line: 275, column: 6)
!17933 = !DILocation(line: 277, column: 2, scope: !17931)
!17934 = !DILocation(line: 279, column: 15, scope: !17886)
!17935 = !DILocation(line: 279, column: 12, scope: !17886)
!17936 = !DILocation(line: 280, column: 21, scope: !17886)
!17937 = !DILocation(line: 282, column: 24, scope: !17886)
!17938 = !DILocation(line: 282, column: 2, scope: !17886)
!17939 = !DILocation(line: 0, scope: !17517, inlinedAt: !17940)
!17940 = distinct !DILocation(line: 284, column: 2, scope: !17886)
!17941 = !DILocation(line: 0, scope: !17525, inlinedAt: !17942)
!17942 = distinct !DILocation(line: 215, column: 2, scope: !17517, inlinedAt: !17940)
!17943 = !DILocation(line: 95, column: 2, scope: !17525, inlinedAt: !17942)
!17944 = !DILocation(line: 285, column: 1, scope: !17886)
!17945 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2610, file: !2610, line: 287, type: !17946, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17948)
!17946 = !DISubroutineType(types: !17947)
!17947 = !{!432}
!17948 = !{!17949, !17950, !17952}
!17949 = !DILocalVariable(name: "t", scope: !17945, file: !2610, line: 289, type: !1621)
!17950 = !DILocalVariable(name: "__i", scope: !17951, file: !2610, line: 291, type: !17427)
!17951 = distinct !DILexicalBlock(scope: !17945, file: !2610, line: 291, column: 2)
!17952 = !DILocalVariable(name: "__key", scope: !17951, file: !2610, line: 291, type: !17427)
!17953 = !DILocation(line: 0, scope: !17945)
!17954 = !DILocation(line: 0, scope: !17951)
!17955 = !DILocation(line: 0, scope: !17449, inlinedAt: !17956)
!17956 = distinct !DILocation(line: 291, column: 2, scope: !17951)
!17957 = !DILocation(line: 55, column: 2, scope: !17458, inlinedAt: !17958)
!17958 = distinct !DILocation(line: 145, column: 10, scope: !17449, inlinedAt: !17956)
!17959 = !DILocation(line: 0, scope: !17458, inlinedAt: !17958)
!17960 = !DILocation(line: 292, column: 7, scope: !17961)
!17961 = distinct !DILexicalBlock(scope: !17962, file: !2610, line: 291, column: 24)
!17962 = distinct !DILexicalBlock(scope: !17951, file: !2610, line: 291, column: 2)
!17963 = !DILocation(line: 292, column: 19, scope: !17961)
!17964 = !DILocation(line: 0, scope: !17517, inlinedAt: !17965)
!17965 = distinct !DILocation(line: 291, column: 2, scope: !17962)
!17966 = !DILocation(line: 0, scope: !17525, inlinedAt: !17967)
!17967 = distinct !DILocation(line: 215, column: 2, scope: !17517, inlinedAt: !17965)
!17968 = !DILocation(line: 95, column: 2, scope: !17525, inlinedAt: !17967)
!17969 = !DILocation(line: 292, column: 17, scope: !17961)
!17970 = !DILocation(line: 294, column: 2, scope: !17945)
!17971 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2610, file: !2610, line: 297, type: !7002, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !473)
!17972 = !DILocation(line: 300, column: 19, scope: !17971)
!17973 = !DILocation(line: 300, column: 9, scope: !17971)
!17974 = !DILocation(line: 300, column: 2, scope: !17971)
!17975 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2610, file: !2610, line: 306, type: !17946, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !473)
!17976 = !DILocation(line: 308, column: 9, scope: !17975)
!17977 = !DILocation(line: 308, column: 2, scope: !17975)
!17978 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2610, file: !2610, line: 319, type: !7012, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !17979)
!17979 = !{!17980, !17981, !17982, !17983}
!17980 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17978, file: !2610, line: 319, type: !132)
!17981 = !DILocalVariable(name: "start_cycles", scope: !17978, file: !2610, line: 328, type: !132)
!17982 = !DILocalVariable(name: "cycles_to_wait", scope: !17978, file: !2610, line: 331, type: !132)
!17983 = !DILocalVariable(name: "current_cycles", scope: !17984, file: !2610, line: 338, type: !132)
!17984 = distinct !DILexicalBlock(scope: !17985, file: !2610, line: 337, column: 11)
!17985 = distinct !DILexicalBlock(scope: !17986, file: !2610, line: 337, column: 2)
!17986 = distinct !DILexicalBlock(scope: !17978, file: !2610, line: 337, column: 2)
!17987 = !DILocation(line: 0, scope: !17978)
!17988 = !DILocation(line: 322, column: 19, scope: !17989)
!17989 = distinct !DILexicalBlock(scope: !17978, file: !2610, line: 322, column: 6)
!17990 = !DILocation(line: 322, column: 6, scope: !17978)
!17991 = !DILocation(line: 328, column: 26, scope: !17978)
!17992 = !DILocation(line: 333, column: 43, scope: !17978)
!17993 = !DILocation(line: 337, column: 2, scope: !17978)
!17994 = !DILocation(line: 338, column: 29, scope: !17984)
!17995 = !DILocation(line: 0, scope: !17984)
!17996 = !DILocation(line: 341, column: 23, scope: !17997)
!17997 = distinct !DILexicalBlock(scope: !17984, file: !2610, line: 341, column: 7)
!17998 = !DILocation(line: 341, column: 39, scope: !17997)
!17999 = !DILocation(line: 349, column: 1, scope: !17978)
!18000 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !312, file: !312, line: 1675, type: !7002, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !473)
!18001 = !DILocation(line: 1677, column: 9, scope: !18000)
!18002 = !DILocation(line: 1677, column: 2, scope: !18000)
!18003 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18004, file: !18004, line: 24, type: !7002, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !473)
!18004 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18005 = !DILocation(line: 26, column: 9, scope: !18003)
!18006 = !DILocation(line: 26, column: 2, scope: !18003)
!18007 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2610, file: !2610, line: 364, type: !18008, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !18010)
!18008 = !DISubroutineType(types: !18009)
!18009 = !{!1621, !17417}
!18010 = !{!18011, !18012}
!18011 = !DILocalVariable(name: "timeout", arg: 1, scope: !18007, file: !2610, line: 364, type: !17417)
!18012 = !DILocalVariable(name: "dt", scope: !18007, file: !2610, line: 366, type: !1799)
!18013 = !DILocation(line: 0, scope: !18007)
!18014 = !DILocation(line: 368, column: 6, scope: !18007)
!18015 = !DILocation(line: 371, column: 10, scope: !18016)
!18016 = distinct !DILexicalBlock(scope: !18017, file: !2610, line: 370, column: 47)
!18017 = distinct !DILexicalBlock(scope: !18018, file: !2610, line: 370, column: 13)
!18018 = distinct !DILexicalBlock(scope: !18007, file: !2610, line: 368, column: 6)
!18019 = !DILocation(line: 371, column: 3, scope: !18016)
!18020 = !DILocation(line: 376, column: 58, scope: !18021)
!18021 = distinct !DILexicalBlock(scope: !18022, file: !2610, line: 376, column: 7)
!18022 = distinct !DILexicalBlock(scope: !18017, file: !2610, line: 372, column: 9)
!18023 = !DILocation(line: 376, column: 7, scope: !18022)
!18024 = !DILocation(line: 376, column: 43, scope: !18021)
!18025 = !DILocation(line: 377, column: 4, scope: !18026)
!18026 = distinct !DILexicalBlock(scope: !18021, file: !2610, line: 376, column: 64)
!18027 = !DILocation(line: 379, column: 10, scope: !18022)
!18028 = !DILocation(line: 379, column: 33, scope: !18022)
!18029 = !DILocation(line: 379, column: 31, scope: !18022)
!18030 = !DILocation(line: 379, column: 3, scope: !18022)
!18031 = !DILocation(line: 0, scope: !18018)
!18032 = !DILocation(line: 381, column: 1, scope: !18007)
!18033 = distinct !DISubprogram(name: "boot_banner", scope: !18034, file: !18034, line: 26, type: !3328, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !473)
!18034 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18035 = !DILocation(line: 34, column: 2, scope: !18033)
!18036 = !DILocation(line: 36, column: 1, scope: !18033)
!18037 = distinct !DISubprogram(name: "statics_init", scope: !2638, file: !2638, line: 21, type: !2644, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !18038)
!18038 = !{!18039, !18040}
!18039 = !DILocalVariable(name: "unused", arg: 1, scope: !18037, file: !2638, line: 21, type: !2646)
!18040 = !DILocalVariable(name: "h", scope: !18041, file: !2638, line: 24, type: !18042)
!18041 = distinct !DILexicalBlock(scope: !18037, file: !2638, line: 24, column: 2)
!18042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18043, size: 32)
!18043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !18044)
!18044 = !{!18045, !18051, !18057}
!18045 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18043, file: !312, line: 5074, baseType: !18046, size: 96)
!18046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !18047)
!18047 = !{!18048, !18049, !18050}
!18048 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18046, file: !462, line: 57, baseType: !465, size: 32)
!18049 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18046, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!18050 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18046, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!18051 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18043, file: !312, line: 5075, baseType: !18052, size: 64, offset: 96)
!18052 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !18053)
!18053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !18054)
!18054 = !{!18055}
!18055 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18053, file: !316, line: 232, baseType: !18056, size: 64)
!18056 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2624)
!18057 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18043, file: !312, line: 5076, baseType: !18058, offset: 160)
!18058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!18059 = !DILocation(line: 0, scope: !18037)
!18060 = !DILocation(line: 0, scope: !18041)
!18061 = !DILocation(line: 24, column: 2, scope: !18041)
!18062 = !DILocation(line: 52, column: 2, scope: !18037)
!18063 = !DILocation(line: 49, column: 27, scope: !18064)
!18064 = distinct !DILexicalBlock(scope: !18065, file: !2638, line: 48, column: 3)
!18065 = distinct !DILexicalBlock(scope: !18066, file: !2638, line: 24, column: 36)
!18066 = distinct !DILexicalBlock(scope: !18041, file: !2638, line: 24, column: 2)
!18067 = !DILocation(line: 49, column: 45, scope: !18064)
!18068 = !DILocation(line: 49, column: 4, scope: !18064)
!18069 = !DILocation(line: 24, column: 2, scope: !18066)
!18070 = !DILocation(line: 24, column: 2, scope: !18071)
!18071 = distinct !DILexicalBlock(scope: !18066, file: !2638, line: 24, column: 2)
!18072 = distinct !{!18072, !18061, !18073}
!18073 = !DILocation(line: 51, column: 2, scope: !18041)
!18074 = distinct !DISubprogram(name: "k_heap_init", scope: !2638, file: !2638, line: 13, type: !18075, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !18077)
!18075 = !DISubroutineType(types: !18076)
!18076 = !{null, !18042, !102, !356}
!18077 = !{!18078, !18079, !18080}
!18078 = !DILocalVariable(name: "h", arg: 1, scope: !18074, file: !2638, line: 13, type: !18042)
!18079 = !DILocalVariable(name: "mem", arg: 2, scope: !18074, file: !2638, line: 13, type: !102)
!18080 = !DILocalVariable(name: "bytes", arg: 3, scope: !18074, file: !2638, line: 13, type: !356)
!18081 = !DILocation(line: 0, scope: !18074)
!18082 = !DILocation(line: 15, column: 19, scope: !18074)
!18083 = !DILocation(line: 15, column: 2, scope: !18074)
!18084 = !DILocation(line: 16, column: 20, scope: !18074)
!18085 = !DILocation(line: 16, column: 2, scope: !18074)
!18086 = !DILocation(line: 19, column: 1, scope: !18074)
!18087 = distinct !DISubprogram(name: "z_waitq_init", scope: !14773, file: !14773, line: 47, type: !18088, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !18091)
!18088 = !DISubroutineType(types: !18089)
!18089 = !{null, !18090}
!18090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18052, size: 32)
!18091 = !{!18092}
!18092 = !DILocalVariable(name: "w", arg: 1, scope: !18087, file: !14773, line: 47, type: !18090)
!18093 = !DILocation(line: 0, scope: !18087)
!18094 = !DILocation(line: 49, column: 21, scope: !18087)
!18095 = !DILocation(line: 49, column: 2, scope: !18087)
!18096 = !DILocation(line: 50, column: 1, scope: !18087)
!18097 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !18098, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !18101)
!18098 = !DISubroutineType(types: !18099)
!18099 = !{null, !18100}
!18100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18056, size: 32)
!18101 = !{!18102}
!18102 = !DILocalVariable(name: "list", arg: 1, scope: !18097, file: !321, line: 197, type: !18100)
!18103 = !DILocation(line: 0, scope: !18097)
!18104 = !DILocation(line: 199, column: 8, scope: !18097)
!18105 = !DILocation(line: 199, column: 13, scope: !18097)
!18106 = !DILocation(line: 200, column: 8, scope: !18097)
!18107 = !DILocation(line: 200, column: 13, scope: !18097)
!18108 = !DILocation(line: 201, column: 1, scope: !18097)
!18109 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2638, file: !2638, line: 64, type: !18110, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !18116)
!18110 = !DISubroutineType(types: !18111)
!18111 = !{!102, !18042, !356, !356, !18112}
!18112 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1800, line: 67, baseType: !18113)
!18113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1800, line: 65, size: 64, elements: !18114)
!18114 = !{!18115}
!18115 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18113, file: !1800, line: 66, baseType: !1799, size: 64)
!18116 = !{!18117, !18118, !18119, !18120, !18121, !18122, !18123, !18124, !18129}
!18117 = !DILocalVariable(name: "h", arg: 1, scope: !18109, file: !2638, line: 64, type: !18042)
!18118 = !DILocalVariable(name: "align", arg: 2, scope: !18109, file: !2638, line: 64, type: !356)
!18119 = !DILocalVariable(name: "bytes", arg: 3, scope: !18109, file: !2638, line: 64, type: !356)
!18120 = !DILocalVariable(name: "timeout", arg: 4, scope: !18109, file: !2638, line: 65, type: !18112)
!18121 = !DILocalVariable(name: "now", scope: !18109, file: !2638, line: 67, type: !432)
!18122 = !DILocalVariable(name: "end", scope: !18109, file: !2638, line: 67, type: !432)
!18123 = !DILocalVariable(name: "ret", scope: !18109, file: !2638, line: 68, type: !102)
!18124 = !DILocalVariable(name: "key", scope: !18109, file: !2638, line: 72, type: !18125)
!18125 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !18126)
!18126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !18127)
!18127 = !{!18128}
!18128 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18126, file: !472, line: 33, baseType: !103, size: 32)
!18129 = !DILocalVariable(name: "blocked_alloc", scope: !18109, file: !2638, line: 78, type: !166)
!18130 = !DILocation(line: 0, scope: !18109)
!18131 = !DILocation(line: 67, column: 21, scope: !18109)
!18132 = !DILocation(line: 70, column: 8, scope: !18109)
!18133 = !DILocation(line: 72, column: 41, scope: !18109)
!18134 = !DILocalVariable(name: "l", arg: 1, scope: !18135, file: !472, line: 136, type: !18138)
!18135 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !18136, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !18139)
!18136 = !DISubroutineType(types: !18137)
!18137 = !{!18125, !18138}
!18138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18058, size: 32)
!18139 = !{!18134, !18140}
!18140 = !DILocalVariable(name: "k", scope: !18135, file: !472, line: 139, type: !18125)
!18141 = !DILocation(line: 0, scope: !18135, inlinedAt: !18142)
!18142 = distinct !DILocation(line: 72, column: 25, scope: !18109)
!18143 = !DILocation(line: 55, column: 2, scope: !18144, inlinedAt: !18148)
!18144 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5901, file: !5901, line: 42, type: !5902, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !18145)
!18145 = !{!18146, !18147}
!18146 = !DILocalVariable(name: "key", scope: !18144, file: !5901, line: 44, type: !32)
!18147 = !DILocalVariable(name: "tmp", scope: !18144, file: !5901, line: 53, type: !32)
!18148 = distinct !DILocation(line: 145, column: 10, scope: !18135, inlinedAt: !18142)
!18149 = !{i64 2279058}
!18150 = !DILocation(line: 0, scope: !18144, inlinedAt: !18148)
!18151 = !DILocation(line: 81, column: 9, scope: !18152)
!18152 = distinct !DILexicalBlock(scope: !18109, file: !2638, line: 80, column: 22)
!18153 = !DILocation(line: 83, column: 9, scope: !18152)
!18154 = !DILocation(line: 85, column: 12, scope: !18155)
!18155 = distinct !DILexicalBlock(scope: !18152, file: !2638, line: 84, column: 7)
!18156 = !DILocation(line: 85, column: 21, scope: !18155)
!18157 = !DILocation(line: 85, column: 30, scope: !18155)
!18158 = !DILocation(line: 85, column: 37, scope: !18155)
!18159 = !DILocation(line: 84, column: 7, scope: !18152)
!18160 = !DILocation(line: 99, column: 10, scope: !18152)
!18161 = !DILocation(line: 0, scope: !18135, inlinedAt: !18162)
!18162 = distinct !DILocation(line: 101, column: 9, scope: !18152)
!18163 = !DILocation(line: 55, column: 2, scope: !18144, inlinedAt: !18164)
!18164 = distinct !DILocation(line: 145, column: 10, scope: !18135, inlinedAt: !18162)
!18165 = !DILocation(line: 0, scope: !18144, inlinedAt: !18164)
!18166 = distinct !{!18166, !18167, !18168}
!18167 = !DILocation(line: 80, column: 2, scope: !18109)
!18168 = !DILocation(line: 102, column: 2, scope: !18109)
!18169 = !DILocalVariable(name: "key", arg: 2, scope: !18170, file: !472, line: 190, type: !18125)
!18170 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !18171, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !18173)
!18171 = !DISubroutineType(types: !18172)
!18172 = !{null, !18138, !18125}
!18173 = !{!18174, !18169}
!18174 = !DILocalVariable(name: "l", arg: 1, scope: !18170, file: !472, line: 189, type: !18138)
!18175 = !DILocation(line: 0, scope: !18170, inlinedAt: !18176)
!18176 = distinct !DILocation(line: 106, column: 2, scope: !18109)
!18177 = !DILocalVariable(name: "key", arg: 1, scope: !18178, file: !5901, line: 84, type: !32)
!18178 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5901, file: !5901, line: 84, type: !5912, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !18179)
!18179 = !{!18177}
!18180 = !DILocation(line: 0, scope: !18178, inlinedAt: !18181)
!18181 = distinct !DILocation(line: 215, column: 2, scope: !18170, inlinedAt: !18176)
!18182 = !DILocation(line: 95, column: 2, scope: !18178, inlinedAt: !18181)
!18183 = !{i64 2279875}
!18184 = !DILocation(line: 107, column: 2, scope: !18109)
!18185 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2638, file: !2638, line: 110, type: !18186, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !18188)
!18186 = !DISubroutineType(types: !18187)
!18187 = !{!102, !18042, !356, !18112}
!18188 = !{!18189, !18190, !18191, !18192}
!18189 = !DILocalVariable(name: "h", arg: 1, scope: !18185, file: !2638, line: 110, type: !18042)
!18190 = !DILocalVariable(name: "bytes", arg: 2, scope: !18185, file: !2638, line: 110, type: !356)
!18191 = !DILocalVariable(name: "timeout", arg: 3, scope: !18185, file: !2638, line: 110, type: !18112)
!18192 = !DILocalVariable(name: "ret", scope: !18185, file: !2638, line: 114, type: !102)
!18193 = !DILocation(line: 0, scope: !18185)
!18194 = !DILocation(line: 114, column: 14, scope: !18185)
!18195 = !DILocation(line: 118, column: 2, scope: !18185)
!18196 = distinct !DISubprogram(name: "k_heap_free", scope: !2638, file: !2638, line: 121, type: !18197, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !18199)
!18197 = !DISubroutineType(types: !18198)
!18198 = !{null, !18042, !102}
!18199 = !{!18200, !18201, !18202}
!18200 = !DILocalVariable(name: "h", arg: 1, scope: !18196, file: !2638, line: 121, type: !18042)
!18201 = !DILocalVariable(name: "mem", arg: 2, scope: !18196, file: !2638, line: 121, type: !102)
!18202 = !DILocalVariable(name: "key", scope: !18196, file: !2638, line: 123, type: !18125)
!18203 = !DILocation(line: 0, scope: !18196)
!18204 = !DILocation(line: 0, scope: !18135, inlinedAt: !18205)
!18205 = distinct !DILocation(line: 123, column: 25, scope: !18196)
!18206 = !DILocation(line: 55, column: 2, scope: !18144, inlinedAt: !18207)
!18207 = distinct !DILocation(line: 145, column: 10, scope: !18135, inlinedAt: !18205)
!18208 = !DILocation(line: 0, scope: !18144, inlinedAt: !18207)
!18209 = !DILocation(line: 125, column: 20, scope: !18196)
!18210 = !DILocation(line: 125, column: 2, scope: !18196)
!18211 = !DILocation(line: 128, column: 60, scope: !18212)
!18212 = distinct !DILexicalBlock(scope: !18196, file: !2638, line: 128, column: 6)
!18213 = !DILocation(line: 128, column: 43, scope: !18212)
!18214 = !DILocation(line: 128, column: 68, scope: !18212)
!18215 = !DILocation(line: 128, column: 6, scope: !18196)
!18216 = !DILocation(line: 123, column: 41, scope: !18196)
!18217 = !DILocation(line: 129, column: 3, scope: !18218)
!18218 = distinct !DILexicalBlock(scope: !18212, file: !2638, line: 128, column: 74)
!18219 = !DILocation(line: 130, column: 2, scope: !18218)
!18220 = !DILocation(line: 0, scope: !18170, inlinedAt: !18221)
!18221 = distinct !DILocation(line: 131, column: 3, scope: !18222)
!18222 = distinct !DILexicalBlock(scope: !18212, file: !2638, line: 130, column: 9)
!18223 = !DILocation(line: 0, scope: !18178, inlinedAt: !18224)
!18224 = distinct !DILocation(line: 215, column: 2, scope: !18170, inlinedAt: !18221)
!18225 = !DILocation(line: 95, column: 2, scope: !18178, inlinedAt: !18224)
!18226 = !DILocation(line: 133, column: 1, scope: !18196)
