; ModuleID = 'build/96b_stm32_sensor_mez/metairq_dispatch/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.k_sem = type { %union.anon, i32, i32 }
%struct.thread_rec = type { %struct.k_thread, %struct.k_msgq, [16 x %struct.msg] }
%struct.k_msgq = type { %union.anon, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.msg = type { i32, i32, i32, i32, i32 }
%struct.anon.3 = type { i32, [40 x i32], [4 x %struct.anon.4] }
%struct.anon.4 = type { i32, [20 x i32] }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.msg, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238740 to i8*), void (i8*)* inttoptr (i32 134237327 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238740 to i8*), void (i8*)* inttoptr (i32 134237307 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238740 to i8*), void (i8*)* inttoptr (i32 134237297 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238740 to i8*), void (i8*)* inttoptr (i32 134237397 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238740 to i8*), void (i8*)* inttoptr (i32 134237387 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238740 to i8*), void (i8*)* inttoptr (i32 134237377 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238740 to i8*), void (i8*)* inttoptr (i32 134237367 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238740 to i8*), void (i8*)* inttoptr (i32 134237357 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238740 to i8*), void (i8*)* inttoptr (i32 134237347 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238740 to i8*), void (i8*)* inttoptr (i32 134237337 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238740 to i8*), void (i8*)* inttoptr (i32 134237317 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [52 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_metairq_thread to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.k_sem* @report_cookie to i8*), i8* bitcast (%struct.k_msgq* @hw_msgs to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 3 }, section ".log_const_main", align 4, !dbg !25
@_k_thread_obj_metairq_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !324
@_k_thread_stack_metairq_thread = dso_local global [2112 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !320
@.str.1 = private unnamed_addr constant [15 x i8] c"metairq_thread\00", align 1
@_k_thread_data_metairq_thread = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_metairq_thread, %struct.z_thread_stack_element* getelementptr inbounds ([2112 x %struct.z_thread_stack_element], [2112 x %struct.z_thread_stack_element]* @_k_thread_stack_metairq_thread, i32 0, i32 0), i32 2048, void (i8*, i8*, i8*)* @metairq_fn, i8* null, i8* null, i8* null, i32 -16, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_metairq_thread", align 4, !dbg !118
@metairq_thread = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_metairq_thread, align 4, !dbg !271
@report_cookie = dso_local global %struct.k_sem { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) } } }, i32 1, i32 1 }, section "._k_sem.static.report_cookie", align 4, !dbg !275
@threads = internal global [4 x %struct.thread_rec] zeroinitializer, align 8, !dbg !282
@thread_stacks = dso_local global [4 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !315
@stats = dso_local global %struct.anon.3 zeroinitializer, align 4, !dbg !326
@.str.2 = private unnamed_addr constant [46 x i8] c"%c: Thread %d queue full, message %d dropped\0A\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"%c: Starting Thread%d at priority %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"%c: M%d T%d mirq %d disp %d proc %d real %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"%c:         ---------- Latency (cyc) ----------\0A\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"%c:             Best    Worst     Mean    Stdev\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"%c: MetaIRQ %8d %8d %8d %8d\0A\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"%c: No events for thread %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"%c: Thread%d %8d %8d %8d %8d\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: MetaIRQ Test Complete\0A\00", align 1
@hw_msgs = dso_local global %struct.k_msgq { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 20, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i64 1, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.hw_msgs", align 4, !dbg !352
@_k_fifo_buf_hw_msgs = internal global [40 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/msgdev.c\22.0", align 4, !dbg !389
@max_duty_cyc = dso_local local_unnamed_addr global i32 0, align 4, !dbg !385
@timeout = internal global %struct._timeout zeroinitializer, align 8, !dbg !358
@.str.14 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.24 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.2.16 = private unnamed_addr constant [30 x i8] c"CMAKE_SOURCE_DIR/src/msgdev.c\00", align 1
@msg_seq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !387
@.str.3.15 = private unnamed_addr constant [14 x i8] c"t == &timeout\00", align 1
@.str.4.19 = private unnamed_addr constant [35 x i8] c"ERROR: Queue full, event dropped!\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 0, align 8, !dbg !392
@.str.25 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !418
@.str.1.27 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.28 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.29 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.30 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.31 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.32 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.33 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.34 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.35 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.36 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11.37 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12.38 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !440
@.str.43 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.45 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.46 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.47 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.48 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.49 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.50 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.52 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.53 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.54 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.55 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13.56 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !450
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !501
@.str.69 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.71 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.72 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.70 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.74 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.75 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.73 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.76 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.78 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.79 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.80 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.81 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.82 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.83 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.86 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.87 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.88 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.89 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.101 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.93 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.94 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.95 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.96 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.97 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.98 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.99 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.100 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.91 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14.92 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25.90 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !530
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !663
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !536
@.str.113 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.114 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.115 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.116 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.121 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.122 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !672
@.str.6.123 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.124 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.117 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.118 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !708
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.134, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !718
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !723
@.str.133 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.134 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.137 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.138 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.139 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !743
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !942
@.str.4.135 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !904
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !887
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.135, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !860
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !876
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !906
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !919
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !921
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !923
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !925
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !927
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !929
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !931
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !933
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !935
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !937
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !947
@.str.140 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !980
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1078
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1067
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1119
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !967
@.str.149 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1185
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1463
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1433
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1419
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1364
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !965
@.str.1.157 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1465
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1437
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1435
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1378
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !963
@.str.2.158 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1478
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1441
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1439
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1384
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !961
@.str.3.159 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1480
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1445
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1443
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1393
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !959
@.str.4.160 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1482
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1449
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1447
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1399
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !957
@.str.5.161 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1484
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1453
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1451
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1405
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !955
@.str.6.162 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1486
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1457
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1455
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1411
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !953
@.str.7.163 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1488
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1461
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1459
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1417
@.str.8.150 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.156 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.152 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.155 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.151 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.153 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.154 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.167 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.167, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1490
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !975
@.str.1.168 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1670
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1725
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1662
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1727
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.168, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1635
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1637
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !973
@.str.2.175 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1733
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1664
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1743
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.175, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1646
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1648
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !971
@.str.3.176 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1745
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1666
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1755
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.176, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1652
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1654
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !969
@.str.4.179 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1757
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1668
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1767
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.179, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1658
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1660
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1714
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1717
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1719
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1722
@.str.5.170 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.6.171 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.7.172 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.8.173 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.9.174 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.10.182 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.11.184 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.12.185 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.140, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1051
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1735
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1737
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1739
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1741
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1747
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1749
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1751
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1753
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1759
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1761
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1763
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1765
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.13 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1774
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1885
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1887
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1883
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1878
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1852
@.str.189 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.190 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.191 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.192 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.193 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.194 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1889
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1362
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.157, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1376
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.158, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1382
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.159, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1391
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.160, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1397
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.161, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1403
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.162, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1409
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.163, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1415
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1979
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2023
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2026
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2031
@.str.228 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.232 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.233 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.234 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.235 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.236 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.237 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.238 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.242 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.243 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.244 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.245 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.246 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.241 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.240 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.242, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.243, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.244, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.245, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.246, i32 0, i32 0)], align 4
@.str.248 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.248, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2038
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2263
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2250
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2258
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2269
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2274
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.257 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.265, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.266, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.267, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.261, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.268, i32 0, i32 0)], align 4, !dbg !2304
@.str.262 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.263 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.264 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.265 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.266 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.267 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.261 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.268 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2418
@.str.8.260 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.271 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.272 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.273 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.274 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.278 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.279 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.282 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.283 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.292 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.293 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.294 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.301 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.302 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.303 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.304 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.305 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.306 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.307 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.308 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.309 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@lock.314 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2431
@.str.315 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.321 = private unnamed_addr constant [78 x i8] c"((arch_is_in_isr() == 0) || ((timeout).ticks == (((k_timeout_t) {0})).ticks))\00", align 1
@.str.2.322 = private unnamed_addr constant [25 x i8] c"ZEPHYR_BASE/kernel/sem.c\00", align 1
@.str.3.323 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.316 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.317 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.318 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.324 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.325 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2456
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2566
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2569
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2571
@.str.326 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.346 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.333 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.353 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.363 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.336 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.358 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.332 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.370 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.371 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.379 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.380 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.381 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.382 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.327 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.328 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.329 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.330 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.331 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.335 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.350 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.359 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.360 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2260
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2267
@.str.23.374 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.388 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.389 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.390 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.391 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2573
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2603
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2608
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2125
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2606
@.str.4.392 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.393 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.394 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.398 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.399 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.419 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2614
@.str.421 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.430 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.423 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.431 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.422 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.424 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.427 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.428 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.429 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.432 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.433 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3349 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #26, !dbg !3351, !srcloc !3352
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #26, !dbg !3353, !srcloc !3354
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #26, !dbg !3355, !srcloc !3356
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -26) #26, !dbg !3357, !srcloc !3358
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -29) #26, !dbg !3359, !srcloc !3360
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #26, !dbg !3361, !srcloc !3362
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -29) #26, !dbg !3363, !srcloc !3364
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #26, !dbg !3365, !srcloc !3366
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -41) #26, !dbg !3367, !srcloc !3368
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #26, !dbg !3369, !srcloc !3370
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #26, !dbg !3371, !srcloc !3372
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #26, !dbg !3373, !srcloc !3374
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #26, !dbg !3375, !srcloc !3376
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #26, !dbg !3377, !srcloc !3378
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #26, !dbg !3379, !srcloc !3380
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #26, !dbg !3381, !srcloc !3382
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #26, !dbg !3383, !srcloc !3384
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #26, !dbg !3385, !srcloc !3386
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3387, !srcloc !3388
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #26, !dbg !3389, !srcloc !3390
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #26, !dbg !3391, !srcloc !3392
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3393, !srcloc !3394
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #26, !dbg !3395, !srcloc !3396
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #26, !dbg !3397, !srcloc !3398
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #26, !dbg !3399, !srcloc !3400
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #26, !dbg !3401, !srcloc !3402
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #26, !dbg !3403, !srcloc !3404
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #26, !dbg !3405, !srcloc !3408
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #26, !dbg !3409, !srcloc !3410
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3411, !srcloc !3412
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3413, !srcloc !3414
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3415, !srcloc !3416
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3417, !srcloc !3418
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #26, !dbg !3419, !srcloc !3420
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #26, !dbg !3421, !srcloc !3422
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #26, !dbg !3423, !srcloc !3424
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #26, !dbg !3425, !srcloc !3426
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3427, !srcloc !3428
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3429, !srcloc !3430
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3431, !srcloc !3432
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3433, !srcloc !3434
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3435, !srcloc !3436
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3437, !srcloc !3438
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #26, !dbg !3439, !srcloc !3440
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #26, !dbg !3441, !srcloc !3442
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #26, !dbg !3443, !srcloc !3444
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #26, !dbg !3445, !srcloc !3446
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #26, !dbg !3447, !srcloc !3448
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #26, !dbg !3449, !srcloc !3450
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3451, !srcloc !3452
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #26, !dbg !3453, !srcloc !3454
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3455, !srcloc !3456
  ret void, !dbg !3457
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @metairq_fn(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3460 {
  %4 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3462, metadata !DIExpression()), !dbg !3468
  call void @llvm.dbg.value(metadata i8* %1, metadata !3463, metadata !DIExpression()), !dbg !3468
  call void @llvm.dbg.value(metadata i8* %2, metadata !3464, metadata !DIExpression()), !dbg !3468
  %5 = bitcast %struct.msg* %4 to i8*
  %6 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %8 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  br label %10, !dbg !3469

10:                                               ; preds = %3, %23
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #26, !dbg !3470
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3465, metadata !DIExpression()), !dbg !3471
  call void @message_dev_fetch(%struct.msg* noundef nonnull %4) #27, !dbg !3472
  %11 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3473
  %12 = load i32, i32* %6, align 4, !dbg !3474
  %13 = sub i32 %11, %12, !dbg !3475
  store i32 %13, i32* %7, align 4, !dbg !3476
  %14 = load i32, i32* %8, align 4, !dbg !3477
  %15 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %14, i32 1, !dbg !3478
  %16 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %15, i8* noundef nonnull %5) #28, !dbg !3479
  call void @llvm.dbg.value(metadata i32 %16, metadata !3467, metadata !DIExpression()), !dbg !3480
  %17 = icmp eq i32 %16, 0, !dbg !3481
  br i1 %17, label %23, label %18, !dbg !3483

18:                                               ; preds = %10
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3484
  %20 = zext i8 %19 to i32, !dbg !3484
  %21 = load i32, i32* %8, align 4, !dbg !3484
  %22 = load i32, i32* %9, align 4, !dbg !3484
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0), i32 noundef %20, i32 noundef %21, i32 noundef %22) #27, !dbg !3484
  br label %23, !dbg !3490

23:                                               ; preds = %18, %10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #26, !dbg !3491
  br label %10, !dbg !3469, !llvm.loop !3492
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !3493 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #28, !dbg !3494
  ret i32 %1, !dbg !3495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3496 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3508, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3506, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i8* %1, metadata !3507, metadata !DIExpression()), !dbg !3509
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3510, !srcloc !3512
  %3 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] zeroinitializer) #27, !dbg !3513
  ret i32 %3, !dbg !3514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3520, metadata !DIExpression()), !dbg !3521
  %2 = icmp eq i32 %0, 2, !dbg !3522
  %3 = select i1 %2, i8 87, i8 63, !dbg !3522
  %4 = icmp eq i32 %0, 3, !dbg !3522
  %5 = select i1 %4, i8 73, i8 %3, !dbg !3522
  ret i8 %5, !dbg !3523
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !3524 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !3526
  ret i32 %1, !dbg !3527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3528 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3530, metadata !DIExpression()), !dbg !3535
  br label %2, !dbg !3536

1:                                                ; preds = %2
  tail call void @message_dev_init() #27, !dbg !3537
  ret void, !dbg !3538

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %11, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3530, metadata !DIExpression()), !dbg !3535
  %4 = add nsw i32 %3, -2, !dbg !3539
  call void @llvm.dbg.value(metadata i32 %4, metadata !3532, metadata !DIExpression()), !dbg !3540
  %5 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 1, !dbg !3541
  %6 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 2, i32 0, !dbg !3542
  %7 = bitcast %struct.msg* %6 to i8*, !dbg !3543
  tail call void @k_msgq_init(%struct.k_msgq* noundef nonnull %5, i8* noundef nonnull %7, i32 noundef 20, i32 noundef 16) #27, !dbg !3544
  %8 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 0, !dbg !3545
  %9 = getelementptr inbounds [4 x [2112 x %struct.z_thread_stack_element]], [4 x [2112 x %struct.z_thread_stack_element]]* @thread_stacks, i32 0, i32 %3, i32 0, !dbg !3546
  %10 = inttoptr i32 %3 to i8*, !dbg !3547
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %8, %struct.z_thread_stack_element* noundef nonnull %9, i8* noundef %10, i32 noundef %4) #28, !dbg !3548
  %11 = add nuw nsw i32 %3, 1, !dbg !3549
  call void @llvm.dbg.value(metadata i32 %11, metadata !3530, metadata !DIExpression()), !dbg !3535
  %12 = icmp eq i32 %11, 4, !dbg !3550
  br i1 %12, label %1, label %2, !dbg !3536, !llvm.loop !3551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3553 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3566, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3557, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3558, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata i32 2048, metadata !3559, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @thread_fn, metadata !3560, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata i8* %2, metadata !3561, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata i8* null, metadata !3562, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata i8* null, metadata !3563, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata i32 %3, metadata !3564, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata i32 0, metadata !3565, metadata !DIExpression()), !dbg !3567
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3568, !srcloc !3570
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @thread_fn, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef %3, i32 noundef 0, [1 x i64] zeroinitializer) #27, !dbg !3571
  ret void, !dbg !3572
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @thread_fn(i8* noundef %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3573 {
  %4 = alloca %struct.msg, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3575, metadata !DIExpression()), !dbg !3588
  call void @llvm.dbg.value(metadata i8* %1, metadata !3576, metadata !DIExpression()), !dbg !3588
  call void @llvm.dbg.value(metadata i8* %2, metadata !3577, metadata !DIExpression()), !dbg !3588
  %6 = ptrtoint i8* %0 to i32, !dbg !3589
  call void @llvm.dbg.value(metadata i32 %6, metadata !3578, metadata !DIExpression()), !dbg !3588
  %7 = bitcast %struct.msg* %4 to i8*, !dbg !3590
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3590
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3579, metadata !DIExpression()), !dbg !3591
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3592
  %9 = zext i8 %8 to i32, !dbg !3592
  %10 = tail call fastcc %struct.k_thread* @k_current_get() #29, !dbg !3592
  %11 = tail call fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %10) #28, !dbg !3592
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i32 0, i32 0), i32 noundef %9, i32 noundef %6, i32 noundef %11) #27, !dbg !3592
  %12 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %6, i32 1
  %13 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #28, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %13, metadata !3580, metadata !DIExpression()), !dbg !3598
  %14 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3599
  call void @llvm.dbg.value(metadata i32 %14, metadata !3582, metadata !DIExpression()), !dbg !3598
  %15 = icmp eq i32 %13, 0, !dbg !3600
  br i1 %15, label %16, label %28, !dbg !3603

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  %19 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %21 = bitcast i32* %5 to i8*
  br label %22, !dbg !3603

22:                                               ; preds = %16, %42
  %23 = phi i32 [ %14, %16 ], [ %53, %42 ]
  %24 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3604
  %25 = sub i32 %24, %23, !dbg !3605
  %26 = load i32, i32* %17, align 4, !dbg !3606
  %27 = icmp ult i32 %25, %26, !dbg !3607
  br i1 %27, label %29, label %42, !dbg !3608

28:                                               ; preds = %42, %3
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #27, !dbg !3609
  call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #27, !dbg !3609
  unreachable, !dbg !3609

29:                                               ; preds = %22, %32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !3611
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3583, metadata !DIExpression()), !dbg !3612
  store volatile i32 0, i32* %5, align 4, !dbg !3612
  %30 = load volatile i32, i32* %5, align 4, !dbg !3613
  %31 = icmp slt i32 %30, 100, !dbg !3615
  br i1 %31, label %37, label %32, !dbg !3616

32:                                               ; preds = %37, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !3617
  %33 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3604
  %34 = sub i32 %33, %23, !dbg !3605
  %35 = load i32, i32* %17, align 4, !dbg !3606
  %36 = icmp ult i32 %34, %35, !dbg !3607
  br i1 %36, label %29, label %42, !dbg !3608, !llvm.loop !3618

37:                                               ; preds = %29, %37
  %38 = load volatile i32, i32* %5, align 4, !dbg !3620
  %39 = add nsw i32 %38, 1, !dbg !3620
  store volatile i32 %39, i32* %5, align 4, !dbg !3620
  %40 = load volatile i32, i32* %5, align 4, !dbg !3613
  %41 = icmp slt i32 %40, 100, !dbg !3615
  br i1 %41, label %37, label %32, !dbg !3616, !llvm.loop !3621

42:                                               ; preds = %32, %22
  %43 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3623
  %44 = sub i32 %43, %23, !dbg !3624
  call void @llvm.dbg.value(metadata i32 %44, metadata !3587, metadata !DIExpression()), !dbg !3598
  %45 = load i32, i32* %18, align 4, !dbg !3625
  %46 = load i32, i32* %19, align 4, !dbg !3625
  %47 = load i32, i32* %20, align 4, !dbg !3625
  %48 = sub i32 %23, %47, !dbg !3625
  %49 = load i32, i32* %17, align 4, !dbg !3625
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i32 0, i32 0), i32 noundef %9, i32 noundef %45, i32 noundef %6, i32 noundef %46, i32 noundef %48, i32 noundef %49, i32 noundef %44) #27, !dbg !3625
  %50 = load i32, i32* %20, align 4, !dbg !3630
  %51 = sub i32 %23, %50, !dbg !3631
  call fastcc void @record_latencies(%struct.msg* noundef nonnull %4, i32 noundef %51) #28, !dbg !3632
  %52 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #28, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %52, metadata !3580, metadata !DIExpression()), !dbg !3598
  %53 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3599
  call void @llvm.dbg.value(metadata i32 %53, metadata !3582, metadata !DIExpression()), !dbg !3598
  %54 = icmp eq i32 %52, 0, !dbg !3600
  br i1 %54, label %22, label %28, !dbg !3603, !llvm.loop !3633
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #6 !dbg !3636 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #29, !dbg !3639
  ret %struct.k_thread* %1, !dbg !3640
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3645, metadata !DIExpression()), !dbg !3646
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3647, !srcloc !3649
  %2 = tail call i32 @z_impl_k_thread_priority_get(%struct.k_thread* noundef %0) #27, !dbg !3650
  ret i32 %2, !dbg !3651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3652 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3658, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3656, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata i8* %1, metadata !3657, metadata !DIExpression()), !dbg !3659
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3660, !srcloc !3662
  %3 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] [i64 -1]) #27, !dbg !3663
  ret i32 %3, !dbg !3664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @record_latencies(%struct.msg* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !3665 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3670, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.value(metadata i32 %1, metadata !3671, metadata !DIExpression()), !dbg !3683
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !3684
  %8 = load i32, i32* %7, align 4, !dbg !3684
  %9 = icmp ugt i32 %8, 39, !dbg !3686
  br i1 %9, label %60, label %10, !dbg !3687

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !3688
  %12 = load i32, i32* %11, align 4, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %12, metadata !3672, metadata !DIExpression()), !dbg !3683
  %13 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 0, !dbg !3689
  %14 = load i32, i32* %13, align 4, !dbg !3690
  %15 = add i32 %14, 1, !dbg !3690
  store i32 %15, i32* %13, align 4, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %14, metadata !3673, metadata !DIExpression()), !dbg !3683
  %16 = icmp ult i32 %14, 20, !dbg !3691
  br i1 %16, label %17, label %19, !dbg !3693

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 1, i32 %14, !dbg !3694
  store i32 %1, i32* %18, align 4, !dbg !3696
  br label %19, !dbg !3697

19:                                               ; preds = %17, %10
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !3698
  %21 = load i32, i32* %20, align 4, !dbg !3698
  %22 = tail call fastcc i32 @atomic_inc() #28, !dbg !3699
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 %22, !dbg !3700
  store i32 %21, i32* %23, align 4, !dbg !3701
  %24 = load i32, i32* %7, align 4, !dbg !3702
  %25 = icmp eq i32 %24, 39, !dbg !3703
  br i1 %25, label %26, label %60, !dbg !3704

26:                                               ; preds = %19
  %27 = bitcast i32* %3 to i8*, !dbg !3705
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #26, !dbg !3705
  %28 = bitcast i32* %4 to i8*, !dbg !3705
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #26, !dbg !3705
  %29 = bitcast i32* %5 to i8*, !dbg !3705
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #26, !dbg !3705
  %30 = bitcast i32* %6 to i8*, !dbg !3705
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #26, !dbg !3705
  %31 = tail call fastcc i32 @k_sem_take() #28, !dbg !3706
  call void @llvm.dbg.value(metadata i32 %31, metadata !3680, metadata !DIExpression()), !dbg !3707
  %32 = icmp eq i32 %31, 0, !dbg !3708
  br i1 %32, label %34, label %33, !dbg !3711

33:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #27, !dbg !3712
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #27, !dbg !3712
  unreachable, !dbg !3712

34:                                               ; preds = %26
  tail call fastcc void @k_msleep() #28, !dbg !3714
  %35 = load i32, i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), align 4, !dbg !3715
  call void @llvm.dbg.value(metadata i32* %3, metadata !3674, metadata !DIExpression(DW_OP_deref)), !dbg !3707
  call void @llvm.dbg.value(metadata i32* %4, metadata !3677, metadata !DIExpression(DW_OP_deref)), !dbg !3707
  call void @llvm.dbg.value(metadata i32* %5, metadata !3678, metadata !DIExpression(DW_OP_deref)), !dbg !3707
  call void @llvm.dbg.value(metadata i32* %6, metadata !3679, metadata !DIExpression(DW_OP_deref)), !dbg !3707
  call fastcc void @calc_stats(i32* noundef getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 0), i32 noundef %35, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #28, !dbg !3716
  %36 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3717
  %37 = zext i8 %36 to i32, !dbg !3717
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i32 0, i32 0), i32 noundef %37) #27, !dbg !3717
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 noundef %37) #27, !dbg !3722
  %38 = load i32, i32* %4, align 4, !dbg !3727
  call void @llvm.dbg.value(metadata i32 %38, metadata !3677, metadata !DIExpression()), !dbg !3707
  %39 = load i32, i32* %3, align 4, !dbg !3727
  call void @llvm.dbg.value(metadata i32 %39, metadata !3674, metadata !DIExpression()), !dbg !3707
  %40 = load i32, i32* %5, align 4, !dbg !3727
  call void @llvm.dbg.value(metadata i32 %40, metadata !3678, metadata !DIExpression()), !dbg !3707
  %41 = load i32, i32* %6, align 4, !dbg !3727
  call void @llvm.dbg.value(metadata i32 %41, metadata !3679, metadata !DIExpression()), !dbg !3707
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0), i32 noundef %37, i32 noundef %38, i32 noundef %39, i32 noundef %40, i32 noundef %41) #27, !dbg !3727
  call void @llvm.dbg.value(metadata i32 0, metadata !3681, metadata !DIExpression()), !dbg !3732
  br label %43, !dbg !3733

42:                                               ; preds = %57
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef %37) #27, !dbg !3734
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #26, !dbg !3739
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #26, !dbg !3739
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #26, !dbg !3739
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #26, !dbg !3739
  br label %60, !dbg !3740

43:                                               ; preds = %34, %57
  %44 = phi i32 [ 0, %34 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i32 %44, metadata !3681, metadata !DIExpression()), !dbg !3732
  %45 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 0, !dbg !3741
  %46 = load i32, i32* %45, align 4, !dbg !3741
  %47 = icmp eq i32 %46, 0, !dbg !3745
  br i1 %47, label %48, label %51, !dbg !3746

48:                                               ; preds = %43
  %49 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 2) #28, !dbg !3747
  %50 = zext i8 %49 to i32, !dbg !3747
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i32 0, i32 0), i32 noundef %50, i32 noundef %44) #27, !dbg !3747
  br label %57, !dbg !3753

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 1, i32 0, !dbg !3754
  call void @llvm.dbg.value(metadata i32* %3, metadata !3674, metadata !DIExpression(DW_OP_deref)), !dbg !3707
  call void @llvm.dbg.value(metadata i32* %4, metadata !3677, metadata !DIExpression(DW_OP_deref)), !dbg !3707
  call void @llvm.dbg.value(metadata i32* %5, metadata !3678, metadata !DIExpression(DW_OP_deref)), !dbg !3707
  call void @llvm.dbg.value(metadata i32* %6, metadata !3679, metadata !DIExpression(DW_OP_deref)), !dbg !3707
  call fastcc void @calc_stats(i32* noundef nonnull %52, i32 noundef %46, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #28, !dbg !3755
  %53 = load i32, i32* %4, align 4, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %53, metadata !3677, metadata !DIExpression()), !dbg !3707
  %54 = load i32, i32* %3, align 4, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %54, metadata !3674, metadata !DIExpression()), !dbg !3707
  %55 = load i32, i32* %5, align 4, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %55, metadata !3678, metadata !DIExpression()), !dbg !3707
  %56 = load i32, i32* %6, align 4, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %56, metadata !3679, metadata !DIExpression()), !dbg !3707
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i32 noundef %37, i32 noundef %44, i32 noundef %53, i32 noundef %54, i32 noundef %55, i32 noundef %56) #27, !dbg !3756
  br label %57, !dbg !3761

57:                                               ; preds = %51, %48
  %58 = add nuw nsw i32 %44, 1, !dbg !3762
  call void @llvm.dbg.value(metadata i32 %58, metadata !3681, metadata !DIExpression()), !dbg !3732
  %59 = icmp eq i32 %58, 4, !dbg !3763
  br i1 %59, label %42, label %43, !dbg !3733, !llvm.loop !3764

60:                                               ; preds = %19, %42, %2
  ret void, !dbg !3766
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_inc() unnamed_addr #7 !dbg !3767 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3774, metadata !DIExpression()), !dbg !3775
  %1 = tail call fastcc i32 @atomic_add() #28, !dbg !3776
  ret i32 %1, !dbg !3777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take() unnamed_addr #1 !dbg !3778 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3784, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata %struct.k_sem* @report_cookie, metadata !3783, metadata !DIExpression()), !dbg !3785
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3786, !srcloc !3788
  %1 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef nonnull @report_cookie, [1 x i64] [i64 -1]) #27, !dbg !3789
  ret i32 %1, !dbg !3790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3791 {
  call void @llvm.dbg.value(metadata i32 100, metadata !3795, metadata !DIExpression()), !dbg !3796
  tail call fastcc void @k_sleep([1 x i64] [i64 1000]) #28, !dbg !3797
  ret void, !dbg !3798
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc void @calc_stats(i32* nocapture noundef readonly %0, i32 noundef %1, i32* nocapture noundef %2, i32* nocapture noundef %3, i32* nocapture noundef %4, i32* nocapture noundef writeonly %5) unnamed_addr #8 !dbg !3799 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3805, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %1, metadata !3806, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32* %2, metadata !3807, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32* %3, metadata !3808, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32* %4, metadata !3809, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32* %5, metadata !3810, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i64 0, metadata !3811, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i64 0, metadata !3812, metadata !DIExpression()), !dbg !3820
  store i32 2147483647, i32* %2, align 4, !dbg !3821
  store i32 0, i32* %3, align 4, !dbg !3822
  call void @llvm.dbg.value(metadata i32 0, metadata !3813, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata i64 0, metadata !3811, metadata !DIExpression()), !dbg !3820
  %7 = icmp eq i32 %1, 0, !dbg !3824
  br i1 %7, label %8, label %21, !dbg !3826

8:                                                ; preds = %6
  %9 = lshr i32 %1, 1, !dbg !3827
  %10 = trunc i32 %9 to i8, !dbg !3828
  %11 = trunc i32 %1 to i8, !dbg !3828
  %12 = udiv i8 %10, %11, !dbg !3828
  %13 = zext i8 %12 to i32, !dbg !3829
  store i32 %13, i32* %4, align 4, !dbg !3830
  call void @llvm.dbg.value(metadata i32 0, metadata !3815, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.value(metadata i64 0, metadata !3812, metadata !DIExpression()), !dbg !3820
  br label %38, !dbg !3832

14:                                               ; preds = %21
  %15 = lshr i32 %1, 1, !dbg !3827
  %16 = zext i32 %15 to i64, !dbg !3833
  %17 = add i64 %35, %16, !dbg !3834
  %18 = zext i32 %1 to i64, !dbg !3835
  %19 = udiv i64 %17, %18, !dbg !3828
  %20 = trunc i64 %19 to i32, !dbg !3829
  store i32 %20, i32* %4, align 4, !dbg !3830
  call void @llvm.dbg.value(metadata i32 0, metadata !3815, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.value(metadata i64 0, metadata !3812, metadata !DIExpression()), !dbg !3820
  br i1 %7, label %38, label %45, !dbg !3832

21:                                               ; preds = %6, %21
  %22 = phi i64 [ %35, %21 ], [ 0, %6 ]
  %23 = phi i32 [ %36, %21 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3811, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %23, metadata !3813, metadata !DIExpression()), !dbg !3823
  %24 = load i32, i32* %2, align 4, !dbg !3836
  %25 = getelementptr inbounds i32, i32* %0, i32 %23, !dbg !3836
  %26 = load i32, i32* %25, align 4, !dbg !3836
  %27 = icmp ult i32 %24, %26, !dbg !3836
  %28 = select i1 %27, i32 %24, i32 %26, !dbg !3836
  store i32 %28, i32* %2, align 4, !dbg !3838
  %29 = load i32, i32* %3, align 4, !dbg !3839
  %30 = load i32, i32* %25, align 4, !dbg !3839
  %31 = icmp ugt i32 %29, %30, !dbg !3839
  %32 = select i1 %31, i32 %29, i32 %30, !dbg !3839
  store i32 %32, i32* %3, align 4, !dbg !3840
  %33 = load i32, i32* %25, align 4, !dbg !3841
  %34 = zext i32 %33 to i64, !dbg !3841
  %35 = add i64 %22, %34, !dbg !3842
  call void @llvm.dbg.value(metadata i64 %35, metadata !3811, metadata !DIExpression()), !dbg !3820
  %36 = add nuw nsw i32 %23, 1, !dbg !3843
  call void @llvm.dbg.value(metadata i32 %36, metadata !3813, metadata !DIExpression()), !dbg !3823
  %37 = icmp eq i32 %36, %1, !dbg !3824
  br i1 %37, label %14, label %21, !dbg !3826, !llvm.loop !3844

38:                                               ; preds = %45, %8, %14
  %39 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %18, %45 ]
  %40 = phi i64 [ %16, %14 ], [ 0, %8 ], [ %16, %45 ]
  %41 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %53, %45 ], !dbg !3820
  %42 = add i64 %41, %40, !dbg !3846
  %43 = udiv i64 %42, %39, !dbg !3847
  %44 = tail call fastcc i32 @isqrt(i64 noundef %43) #28, !dbg !3848
  store i32 %44, i32* %5, align 4, !dbg !3849
  ret void, !dbg !3850

45:                                               ; preds = %14, %45
  %46 = phi i32 [ %54, %45 ], [ 0, %14 ]
  %47 = phi i64 [ %53, %45 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !3815, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.value(metadata i64 %47, metadata !3812, metadata !DIExpression()), !dbg !3820
  %48 = getelementptr inbounds i32, i32* %0, i32 %46, !dbg !3851
  %49 = load i32, i32* %48, align 4, !dbg !3851
  %50 = sub i32 %49, %20, !dbg !3852
  %51 = sext i32 %50 to i64, !dbg !3853
  call void @llvm.dbg.value(metadata i64 %51, metadata !3817, metadata !DIExpression()), !dbg !3854
  %52 = mul nsw i64 %51, %51, !dbg !3855
  %53 = add i64 %52, %47, !dbg !3856
  call void @llvm.dbg.value(metadata i64 %53, metadata !3812, metadata !DIExpression()), !dbg !3820
  %54 = add nuw nsw i32 %46, 1, !dbg !3857
  call void @llvm.dbg.value(metadata i32 %54, metadata !3815, metadata !DIExpression()), !dbg !3831
  %55 = icmp eq i32 %54, %1, !dbg !3858
  br i1 %55, label %38, label %45, !dbg !3832, !llvm.loop !3859
}

; Function Attrs: nofree noinline nosync nounwind optsize readnone
define internal fastcc i32 @isqrt(i64 noundef %0) unnamed_addr #9 !dbg !3861 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3865, metadata !DIExpression()), !dbg !3870
  %2 = icmp ugt i64 %0, 1, !dbg !3871
  %3 = trunc i64 %0 to i32, !dbg !3872
  br i1 %2, label %6, label %4, !dbg !3872

4:                                                ; preds = %1, %6
  %5 = phi i32 [ %15, %6 ], [ %3, %1 ]
  ret i32 %5, !dbg !3873

6:                                                ; preds = %1
  %7 = lshr i64 %0, 2, !dbg !3874
  %8 = tail call fastcc i32 @isqrt(i64 noundef %7) #28, !dbg !3875
  %9 = shl i32 %8, 1, !dbg !3876
  %10 = zext i32 %9 to i64, !dbg !3875
  call void @llvm.dbg.value(metadata i64 %10, metadata !3866, metadata !DIExpression()), !dbg !3877
  %11 = or i64 %10, 1, !dbg !3878
  call void @llvm.dbg.value(metadata i64 %11, metadata !3869, metadata !DIExpression()), !dbg !3877
  %12 = mul nuw i64 %11, %11, !dbg !3879
  %13 = icmp ugt i64 %12, %0, !dbg !3880
  %14 = select i1 %13, i64 %10, i64 %11, !dbg !3881
  %15 = trunc i64 %14 to i32
  br label %4
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3882 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3886, metadata !DIExpression()), !dbg !3887
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3888, !srcloc !3890
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #27, !dbg !3891
  ret void, !dbg !3892
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_add() unnamed_addr #7 !dbg !3893 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3897, metadata !DIExpression()), !dbg !3899
  call void @llvm.dbg.value(metadata i32 1, metadata !3898, metadata !DIExpression()), !dbg !3899
  %1 = atomicrmw add i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), i32 1 seq_cst, align 4, !dbg !3900
  ret i32 %1, !dbg !3901
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #6 !dbg !3902 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3903, !srcloc !3905
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3906
  ret %struct.k_thread* %1, !dbg !3907
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_init() local_unnamed_addr #1 !dbg !3908 {
  call void @llvm.dbg.value(metadata i64 8400, metadata !3910, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata i64 4, metadata !3911, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata i64 33600, metadata !3912, metadata !DIExpression()), !dbg !3913
  store i32 40320, i32* @max_duty_cyc, align 4, !dbg !3914
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] zeroinitializer) #27, !dbg !3915
  ret void, !dbg !3916
}

; Function Attrs: noinline nounwind optsize
define internal void @dev_timer_expired(%struct._timeout* noundef readnone %0) #1 !dbg !3917 {
  %2 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !3919, metadata !DIExpression()), !dbg !3930
  %3 = icmp eq %struct._timeout* %0, @timeout, !dbg !3931
  br i1 %3, label %5, label %4, !dbg !3934

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #27, !dbg !3935
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #27, !dbg !3935
  unreachable, !dbg !3935

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @k_cycle_get_32.17() #28, !dbg !3937
  call void @llvm.dbg.value(metadata i32 %6, metadata !3920, metadata !DIExpression()), !dbg !3930
  %7 = bitcast %struct.msg* %2 to i8*, !dbg !3938
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3938
  call void @llvm.dbg.declare(metadata %struct.msg* %2, metadata !3921, metadata !DIExpression()), !dbg !3939
  %8 = load i32, i32* @msg_seq, align 4, !dbg !3940
  %9 = add i32 %8, 1, !dbg !3940
  store i32 %9, i32* @msg_seq, align 4, !dbg !3940
  %10 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 0, !dbg !3941
  store i32 %8, i32* %10, align 4, !dbg !3942
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 1, !dbg !3943
  store i32 %6, i32* %11, align 4, !dbg !3944
  %12 = tail call fastcc i32 @rand32() #28, !dbg !3945
  %13 = and i32 %12, 3, !dbg !3946
  %14 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 2, !dbg !3947
  store i32 %13, i32* %14, align 4, !dbg !3948
  %15 = tail call fastcc i32 @rand32() #28, !dbg !3949
  %16 = load i32, i32* @max_duty_cyc, align 4, !dbg !3950
  %17 = urem i32 %15, %16, !dbg !3951
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 3, !dbg !3952
  store i32 %17, i32* %18, align 4, !dbg !3953
  %19 = call fastcc i32 @k_msgq_put.18(i8* noundef nonnull %7) #28, !dbg !3954
  call void @llvm.dbg.value(metadata i32 %19, metadata !3929, metadata !DIExpression()), !dbg !3930
  %20 = icmp eq i32 %19, 0, !dbg !3955
  br i1 %20, label %22, label %21, !dbg !3957

21:                                               ; preds = %5
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.19, i32 0, i32 0)) #27, !dbg !3958
  br label %22, !dbg !3960

22:                                               ; preds = %21, %5
  %23 = load i32, i32* %10, align 4, !dbg !3961
  %24 = icmp ult i32 %23, 40, !dbg !3963
  br i1 %24, label %25, label %26, !dbg !3964

25:                                               ; preds = %22
  call fastcc void @timeout_reset() #28, !dbg !3965
  br label %26, !dbg !3967

26:                                               ; preds = %25, %22
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3968
  ret void, !dbg !3968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.17() unnamed_addr #1 !dbg !3969 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.20() #28, !dbg !3970
  ret i32 %1, !dbg !3971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @rand32() unnamed_addr #1 !dbg !394 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !3972
  %2 = icmp eq i64 %1, 0, !dbg !3972
  br i1 %2, label %3, label %7, !dbg !3974

3:                                                ; preds = %0
  %4 = tail call fastcc i32 @k_cycle_get_32.17() #28, !dbg !3975
  %5 = zext i32 %4 to i64, !dbg !3977
  %6 = shl nuw nsw i64 %5, 16, !dbg !3978
  br label %7, !dbg !3979

7:                                                ; preds = %3, %0
  %8 = phi i64 [ %6, %3 ], [ %1, %0 ], !dbg !3980
  %9 = mul i64 %8, 6364136223846793005, !dbg !3981
  %10 = add i64 %9, 1442695040888963407, !dbg !3982
  store i64 %10, i64* @rand32.state, align 8, !dbg !3983
  %11 = lshr i64 %10, 32, !dbg !3984
  %12 = trunc i64 %11 to i32, !dbg !3985
  ret i32 %12, !dbg !3986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put.18(i8* noundef %0) unnamed_addr #1 !dbg !3987 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3998, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3996, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i8* %0, metadata !3997, metadata !DIExpression()), !dbg !3999
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !4000, !srcloc !4002
  %2 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] zeroinitializer) #27, !dbg !4003
  ret i32 %2, !dbg !4004
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @timeout_reset() unnamed_addr #1 !dbg !4005 {
  %1 = tail call fastcc i32 @rand32() #28, !dbg !4008
  %2 = and i32 %1, 7, !dbg !4009
  call void @llvm.dbg.value(metadata i32 %2, metadata !4007, metadata !DIExpression()), !dbg !4010
  %3 = zext i32 %2 to i64, !dbg !4011
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !4012
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] %4) #27, !dbg !4012
  ret void, !dbg !4013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.20() unnamed_addr #1 !dbg !4014 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !4015
  ret i32 %1, !dbg !4016
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_fetch(%struct.msg* noundef %0) local_unnamed_addr #1 !dbg !4017 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !4022, metadata !DIExpression()), !dbg !4024
  %2 = bitcast %struct.msg* %0 to i8*, !dbg !4025
  %3 = tail call fastcc i32 @k_msgq_get.23(i8* noundef %2) #28, !dbg !4026
  call void @llvm.dbg.value(metadata i32 %3, metadata !4023, metadata !DIExpression()), !dbg !4024
  %4 = icmp eq i32 %3, 0, !dbg !4027
  br i1 %4, label %6, label %5, !dbg !4030

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #27, !dbg !4031
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #27, !dbg !4031
  unreachable, !dbg !4031

6:                                                ; preds = %1
  ret void, !dbg !4033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get.23(i8* noundef %0) unnamed_addr #1 !dbg !4034 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !4040, metadata !DIExpression()), !dbg !4041
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !4038, metadata !DIExpression()), !dbg !4041
  call void @llvm.dbg.value(metadata i8* %0, metadata !4039, metadata !DIExpression()), !dbg !4041
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !4042, !srcloc !4044
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] [i64 -1]) #27, !dbg !4045
  ret i32 %2, !dbg !4046
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4047 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4062, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %0, metadata !4058, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %1, metadata !4059, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %2, metadata !4060, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %3, metadata !4061, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %0, metadata !4063, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %0, metadata !4064, metadata !DIExpression()), !dbg !4125
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4126
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4126
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4067, metadata !DIExpression()), !dbg !4127
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4128
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4128
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4069, metadata !DIExpression()), !dbg !4129
  call void @llvm.dbg.value(metadata i32 0, metadata !4070, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 0, metadata !4071, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 0, metadata !4072, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 -1, metadata !4073, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8 0, metadata !4076, metadata !DIExpression()), !dbg !4125
  %12 = and i32 %2, 4, !dbg !4130
  %13 = icmp eq i32 %12, 0, !dbg !4131
  call void @llvm.dbg.value(metadata i1 %13, metadata !4077, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4125
  %14 = lshr i32 %2, 3, !dbg !4132
  %15 = and i32 %14, 7, !dbg !4132
  %16 = add nuw nsw i32 %15, 1, !dbg !4133
  call void @llvm.dbg.value(metadata i32 %16, metadata !4078, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8 0, metadata !4079, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %0, metadata !4080, metadata !DIExpression()), !dbg !4125
  %17 = ptrtoint i8* %0 to i32, !dbg !4134
  %18 = and i32 %17, 3, !dbg !4136
  %19 = icmp eq i32 %18, 0, !dbg !4136
  br i1 %19, label %20, label %320, !dbg !4137

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4138
  call void @llvm.dbg.value(metadata i8* %21, metadata !4064, metadata !DIExpression()), !dbg !4125
  %22 = icmp eq i8* %0, null, !dbg !4139
  %23 = and i32 %1, 7, !dbg !4141
  %24 = sub nuw nsw i32 8, %23, !dbg !4141
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4141
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4141
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4141
  call void @llvm.dbg.value(metadata i32 %27, metadata !4059, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %26, metadata !4064, metadata !DIExpression()), !dbg !4125
  br i1 %22, label %33, label %28, !dbg !4142

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4144
  %30 = sub i32 4, %17, !dbg !4144
  %31 = add i32 %30, %29, !dbg !4145
  %32 = icmp ugt i32 %31, %27, !dbg !4146
  br i1 %32, label %320, label %33, !dbg !4147

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4148
  call void @llvm.dbg.value(metadata i8* %34, metadata !4061, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %3, metadata !4075, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 4, metadata !4066, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 4, metadata !4065, metadata !DIExpression()), !dbg !4125
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4149

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4062, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %42, metadata !4061, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %43, metadata !4064, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %44, metadata !4065, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %45, metadata !4066, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %72, metadata !4073, metadata !DIExpression()), !dbg !4125
  br i1 %46, label %73, label %47, !dbg !4150

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4151
  %49 = zext i1 %48 to i32, !dbg !4155
  %50 = add nsw i32 %72, %49, !dbg !4155
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4155
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4155
  call void @llvm.dbg.value(metadata i32 %52, metadata !4065, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %51, metadata !4066, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8 poison, metadata !4076, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %50, metadata !4073, metadata !DIExpression()), !dbg !4125
  br label %53, !dbg !4156

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4062, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %40, metadata !4061, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %58, metadata !4064, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %57, metadata !4065, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %56, metadata !4066, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8 poison, metadata !4076, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %54, metadata !4073, metadata !DIExpression()), !dbg !4125
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4157
  call void @llvm.dbg.value(metadata i8* %60, metadata !4061, metadata !DIExpression()), !dbg !4125
  %61 = load i8, i8* %60, align 1, !dbg !4159
  %62 = icmp eq i8 %61, 0, !dbg !4160
  br i1 %62, label %226, label %63, !dbg !4161, !llvm.loop !4162

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !4150

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4165

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4076, metadata !DIExpression()), !dbg !4125
  %75 = add nsw i32 %72, -1, !dbg !4166
  call void @llvm.dbg.value(metadata i32 %75, metadata !4073, metadata !DIExpression()), !dbg !4125
  br label %53, !dbg !4167

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4168

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4066, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 4, metadata !4065, metadata !DIExpression()), !dbg !4125
  br label %53, !dbg !4169

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4066, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 4, metadata !4065, metadata !DIExpression()), !dbg !4125
  br label %53, !dbg !4170

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4171
  %81 = icmp eq i8 %80, 108, !dbg !4173
  br i1 %81, label %82, label %109, !dbg !4174

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4175
  %84 = load i8, i8* %83, align 1, !dbg !4175
  %85 = icmp eq i8 %84, 108, !dbg !4178
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4179
  %89 = add i32 %88, 7, !dbg !4179
  %90 = and i32 %89, -8, !dbg !4179
  %91 = inttoptr i32 %90 to i8*, !dbg !4179
  %92 = inttoptr i32 %90 to double*, !dbg !4179
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4179
  %94 = load double, double* %92, align 8, !dbg !4179
  call void @llvm.dbg.value(metadata i8* %93, metadata !4062, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 8, metadata !4065, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 8, metadata !4066, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata double %94, metadata !4093, metadata !DIExpression()), !dbg !4181
  %95 = ptrtoint i8* %43 to i32, !dbg !4182
  %96 = add i32 %95, 7, !dbg !4182
  %97 = and i32 %96, -8, !dbg !4182
  %98 = inttoptr i32 %97 to i8*, !dbg !4183
  call void @llvm.dbg.value(metadata i8* %98, metadata !4064, metadata !DIExpression()), !dbg !4125
  br i1 %22, label %104, label %99, !dbg !4184

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4185
  %101 = icmp ugt i32 %100, %196, !dbg !4189
  br i1 %101, label %320, label %102, !dbg !4190

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4191
  store double %94, double* %103, align 8, !dbg !4191
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4194
  call void @llvm.dbg.value(metadata i8* %105, metadata !4064, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8 poison, metadata !4076, metadata !DIExpression()), !dbg !4125
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4076, metadata !DIExpression()), !dbg !4125
  br label %53, !dbg !4195

107:                                              ; preds = %73, %73
  br label %109, !dbg !4196

108:                                              ; preds = %73
  br label %109, !dbg !4196

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4125
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4125
  call void @llvm.dbg.value(metadata i32 %113, metadata !4065, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %112, metadata !4066, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8 poison, metadata !4079, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8 poison, metadata !4076, metadata !DIExpression()), !dbg !4125
  %114 = ptrtoint i8* %43 to i32, !dbg !4196
  %115 = add i32 %114, -1, !dbg !4196
  %116 = add i32 %115, %112, !dbg !4196
  %117 = sub i32 0, %112, !dbg !4196
  %118 = and i32 %116, %117, !dbg !4196
  %119 = inttoptr i32 %118 to i8*, !dbg !4197
  call void @llvm.dbg.value(metadata i8* %119, metadata !4064, metadata !DIExpression()), !dbg !4125
  br i1 %22, label %124, label %120, !dbg !4198

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4200
  %122 = add i32 %121, %118, !dbg !4201
  %123 = icmp ugt i32 %122, %196, !dbg !4202
  br i1 %123, label %320, label %124, !dbg !4203

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4204

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4197
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4205
  call void @llvm.dbg.value(metadata i8* %127, metadata !4062, metadata !DIExpression()), !dbg !4125
  %128 = bitcast i8* %41 to i8**, !dbg !4205
  %129 = load i8*, i8** %128, align 4, !dbg !4205
  call void @llvm.dbg.value(metadata i8* %129, metadata !4075, metadata !DIExpression()), !dbg !4125
  br label %130, !dbg !4206

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4125
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4207
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4125
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4208
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4125
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !4125
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4125
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4125
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4125
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4125
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4209
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4062, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %142, metadata !4059, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %141, metadata !4061, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %140, metadata !4064, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %139, metadata !4065, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %138, metadata !4066, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %137, metadata !4070, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %136, metadata !4078, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %135, metadata !4071, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8 poison, metadata !4076, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %133, metadata !4075, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %132, metadata !4073, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %131, metadata !4072, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.label(metadata !4124), !dbg !4211
  br i1 %22, label %146, label %144, !dbg !4212

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4213
  store i8* %133, i8** %145, align 4, !dbg !4216
  br label %146, !dbg !4217

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4218
  call void @llvm.dbg.value(metadata i32 %147, metadata !4078, metadata !DIExpression()), !dbg !4125
  %148 = icmp sgt i32 %136, 0, !dbg !4219
  br i1 %148, label %152, label %149, !dbg !4220

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #28, !dbg !4221
  %151 = zext i1 %150 to i32, !dbg !4221
  br label %152, !dbg !4220

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4220
  %154 = icmp eq i32 %153, 0, !dbg !4220
  call void @llvm.dbg.value(metadata i1 %154, metadata !4102, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4222
  call void @llvm.dbg.value(metadata i1 %36, metadata !4105, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4222
  %155 = or i1 %36, %154, !dbg !4223
  br i1 %155, label %156, label %192, !dbg !4223

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4224
  %158 = sub i32 %157, %17, !dbg !4224
  %159 = lshr i32 %158, 2, !dbg !4225
  call void @llvm.dbg.value(metadata i32 %159, metadata !4106, metadata !DIExpression()), !dbg !4226
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4227
  br i1 %161, label %162, label %163, !dbg !4227

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #27, !dbg !4229
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.30, i32 0, i32 0)) #27, !dbg !4229
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #27, !dbg !4229
  unreachable, !dbg !4229

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4234
  br i1 %164, label %165, label %166, !dbg !4236

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #27, !dbg !4237
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.31, i32 0, i32 0)) #27, !dbg !4237
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #27, !dbg !4237
  unreachable, !dbg !4237

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4242

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4243
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4246
  store i8 %168, i8* %169, align 1, !dbg !4247
  %170 = trunc i32 %132 to i8, !dbg !4248
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4249
  store i8 %170, i8* %171, align 1, !dbg !4250
  br i1 %154, label %175, label %172, !dbg !4251

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4252
  store i8 %173, i8* %169, align 1, !dbg !4252
  %174 = add i32 %131, 1, !dbg !4255
  call void @llvm.dbg.value(metadata i32 %174, metadata !4072, metadata !DIExpression()), !dbg !4125
  br label %187, !dbg !4256

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4257
  call void @llvm.dbg.value(metadata i32 %176, metadata !4071, metadata !DIExpression()), !dbg !4125
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4259

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4260
  call void @llvm.dbg.value(metadata i32 %179, metadata !4059, metadata !DIExpression()), !dbg !4125
  br label %187, !dbg !4263

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4264

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4265
  call void @llvm.dbg.value(metadata i32 %182, metadata !4059, metadata !DIExpression()), !dbg !4125
  br label %187, !dbg !4268

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !4269
  %185 = add i32 %142, 2, !dbg !4271
  %186 = add i32 %185, %184, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %186, metadata !4059, metadata !DIExpression()), !dbg !4125
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !4125
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !4125
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !4125
  call void @llvm.dbg.value(metadata i32 %190, metadata !4059, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %189, metadata !4071, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %188, metadata !4072, metadata !DIExpression()), !dbg !4125
  %191 = add nuw nsw i32 %137, 1, !dbg !4273
  call void @llvm.dbg.value(metadata i32 %191, metadata !4070, metadata !DIExpression()), !dbg !4125
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !4125
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4208
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !4125
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4209
  call void @llvm.dbg.value(metadata i32 %196, metadata !4059, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %195, metadata !4070, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %194, metadata !4071, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %193, metadata !4072, metadata !DIExpression()), !dbg !4125
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4274
  call void @llvm.dbg.value(metadata i8* %197, metadata !4064, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %143, metadata !4062, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %141, metadata !4061, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %139, metadata !4065, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %138, metadata !4066, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8 poison, metadata !4079, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8 poison, metadata !4076, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %132, metadata !4073, metadata !DIExpression()), !dbg !4125
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4157
  call void @llvm.dbg.value(metadata i8* %198, metadata !4061, metadata !DIExpression()), !dbg !4125
  %199 = load i8, i8* %198, align 1, !dbg !4159
  %200 = icmp eq i8 %199, 0, !dbg !4160
  br i1 %200, label %226, label %63, !dbg !4161

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4275

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4276
  call void @llvm.dbg.value(metadata i8* %203, metadata !4062, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 undef, metadata !4109, metadata !DIExpression()), !dbg !4277
  br i1 %22, label %219, label %204, !dbg !4278

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4276
  %206 = load i32, i32* %205, align 4, !dbg !4276
  call void @llvm.dbg.value(metadata i32 %206, metadata !4109, metadata !DIExpression()), !dbg !4277
  %207 = inttoptr i32 %118 to i32*, !dbg !4279
  store i32 %206, i32* %207, align 4, !dbg !4282
  br label %219, !dbg !4283

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4284
  %210 = add i32 %209, 7, !dbg !4284
  %211 = and i32 %210, -8, !dbg !4284
  %212 = inttoptr i32 %211 to i8*, !dbg !4284
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4284
  call void @llvm.dbg.value(metadata i8* %213, metadata !4062, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i64 undef, metadata !4115, metadata !DIExpression()), !dbg !4285
  br i1 %22, label %219, label %214, !dbg !4286

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4284
  %216 = load i64, i64* %215, align 8, !dbg !4284
  call void @llvm.dbg.value(metadata i64 %216, metadata !4115, metadata !DIExpression()), !dbg !4285
  %217 = inttoptr i32 %118 to i64*, !dbg !4287
  store i64 %216, i64* %217, align 8, !dbg !4292
  br label %219, !dbg !4293

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #27, !dbg !4294
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.32, i32 0, i32 0), i32 noundef %113) #27, !dbg !4294
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #27, !dbg !4294
  unreachable, !dbg !4294

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4299
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4299
  call void @llvm.dbg.value(metadata i8* %221, metadata !4062, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %40, metadata !4061, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %222, metadata !4064, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %113, metadata !4065, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %112, metadata !4066, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8 poison, metadata !4079, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8 poison, metadata !4076, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %72, metadata !4073, metadata !DIExpression()), !dbg !4125
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4157
  call void @llvm.dbg.value(metadata i8* %223, metadata !4061, metadata !DIExpression()), !dbg !4125
  %224 = load i8, i8* %223, align 1, !dbg !4159
  %225 = icmp eq i8 %224, 0, !dbg !4160
  br i1 %225, label %226, label %38, !dbg !4161

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4300
  %228 = ptrtoint i8* %227 to i32, !dbg !4301
  %229 = sub i32 %228, %17, !dbg !4301
  %230 = lshr i32 %229, 2, !dbg !4303
  %231 = icmp ugt i32 %229, 1023, !dbg !4304
  br i1 %231, label %232, label %233, !dbg !4305

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #27, !dbg !4306
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.33, i32 0, i32 0)) #27, !dbg !4306
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #27, !dbg !4306
  unreachable, !dbg !4306

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4311

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4312
  %236 = add i32 %235, %229, !dbg !4315
  br label %320, !dbg !4316

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4317
  store i8 %238, i8* %0, align 1, !dbg !4318
  %239 = trunc i32 %194 to i8, !dbg !4319
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4321
  store i8 %240, i8* %242, align 1, !dbg !4323
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4324
  store i8 %241, i8* %243, align 1, !dbg !4325
  %244 = trunc i32 %193 to i8, !dbg !4326
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4327
  store i8 %244, i8* %245, align 1, !dbg !4328
  %246 = icmp eq i32 %193, 0, !dbg !4329
  %247 = xor i1 %246, true, !dbg !4330
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4330
  call void @llvm.dbg.value(metadata i8* %227, metadata !4064, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 0, metadata !4074, metadata !DIExpression()), !dbg !4125
  br i1 %249, label %250, label %269, !dbg !4330

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4331

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !4064, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %254, metadata !4074, metadata !DIExpression()), !dbg !4125
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4332
  %256 = load i8, i8* %255, align 1, !dbg !4332
  %257 = icmp sgt i8 %256, -1, !dbg !4334
  br i1 %257, label %265, label %258, !dbg !4335

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !4118, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4336
  %259 = ptrtoint i8* %253 to i32, !dbg !4337
  %260 = add i32 %251, %259, !dbg !4339
  %261 = icmp ugt i32 %260, %196, !dbg !4340
  br i1 %261, label %320, label %262, !dbg !4341

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4342
  call void @llvm.dbg.value(metadata i8 %263, metadata !4118, metadata !DIExpression()), !dbg !4336
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4343
  call void @llvm.dbg.value(metadata i8* %264, metadata !4064, metadata !DIExpression()), !dbg !4125
  store i8 %263, i8* %253, align 1, !dbg !4344
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4274
  call void @llvm.dbg.value(metadata i8* %266, metadata !4064, metadata !DIExpression()), !dbg !4125
  %267 = add nuw i32 %254, 1, !dbg !4345
  call void @llvm.dbg.value(metadata i32 %267, metadata !4074, metadata !DIExpression()), !dbg !4125
  %268 = icmp eq i32 %267, %195, !dbg !4346
  br i1 %268, label %269, label %252, !dbg !4331, !llvm.loop !4347

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4274
  call void @llvm.dbg.value(metadata i8* %270, metadata !4064, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 0, metadata !4074, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %133, metadata !4075, metadata !DIExpression()), !dbg !4125
  %271 = icmp eq i32 %195, 0, !dbg !4349
  br i1 %271, label %316, label %272, !dbg !4352

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4352

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !4064, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %276, metadata !4075, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %277, metadata !4074, metadata !DIExpression()), !dbg !4125
  br i1 %246, label %282, label %278, !dbg !4353

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4356
  %280 = load i8, i8* %279, align 1, !dbg !4356
  %281 = icmp sgt i8 %280, -1, !dbg !4357
  br i1 %281, label %282, label %311, !dbg !4358

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4359

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !4065, metadata !DIExpression()), !dbg !4125
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4360
  %285 = load i8, i8* %284, align 1, !dbg !4360
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4363
  call void @llvm.dbg.value(metadata i8* %286, metadata !4064, metadata !DIExpression()), !dbg !4125
  store i8 %285, i8* %275, align 1, !dbg !4364
  br label %297, !dbg !4365

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4366
  %289 = load i8, i8* %288, align 1, !dbg !4366
  %290 = zext i8 %289 to i32, !dbg !4366
  %291 = shl nuw nsw i32 %290, 2, !dbg !4368
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4369
  %293 = bitcast i8* %292 to i8**, !dbg !4370
  %294 = load i8*, i8** %293, align 4, !dbg !4370
  call void @llvm.dbg.value(metadata i8* %294, metadata !4075, metadata !DIExpression()), !dbg !4125
  store i8* null, i8** %293, align 4, !dbg !4371
  %295 = tail call i32 @strlen(i8* noundef %294) #27, !dbg !4372
  %296 = add i32 %295, 1, !dbg !4373
  call void @llvm.dbg.value(metadata i32 %296, metadata !4065, metadata !DIExpression()), !dbg !4125
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !4125
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4374
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !4125
  call void @llvm.dbg.value(metadata i8* %300, metadata !4064, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %299, metadata !4065, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %298, metadata !4075, metadata !DIExpression()), !dbg !4125
  %301 = ptrtoint i8* %300 to i32, !dbg !4375
  %302 = add i32 %273, %299, !dbg !4377
  %303 = add i32 %302, %301, !dbg !4378
  %304 = icmp ugt i32 %303, %196, !dbg !4379
  br i1 %304, label %320, label %305, !dbg !4380

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4381
  %307 = load i8, i8* %306, align 1, !dbg !4381
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4382
  call void @llvm.dbg.value(metadata i8* %308, metadata !4064, metadata !DIExpression()), !dbg !4125
  store i8 %307, i8* %300, align 1, !dbg !4383
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #27, !dbg !4384
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4385
  call void @llvm.dbg.value(metadata i8* %310, metadata !4064, metadata !DIExpression()), !dbg !4125
  br label %311, !dbg !4386

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4387
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !4125
  call void @llvm.dbg.value(metadata i8* %313, metadata !4064, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %312, metadata !4075, metadata !DIExpression()), !dbg !4125
  %314 = add nuw i32 %277, 1, !dbg !4388
  call void @llvm.dbg.value(metadata i32 %314, metadata !4074, metadata !DIExpression()), !dbg !4125
  %315 = icmp eq i32 %314, %195, !dbg !4349
  br i1 %315, label %316, label %274, !dbg !4352, !llvm.loop !4389

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4274
  %318 = ptrtoint i8* %317 to i32, !dbg !4391
  %319 = sub i32 %318, %17, !dbg !4391
  br label %320, !dbg !4392

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4393
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4393
  ret i32 %321, !dbg !4393
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4394 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4398, metadata !DIExpression()), !dbg !4399
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #28, !dbg !4400
  ret i1 %2, !dbg !4401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4402 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4407, metadata !DIExpression()), !dbg !4408
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4409
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4410
  %4 = and i1 %2, %3, !dbg !4410
  ret i1 %4, !dbg !4411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4412 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4416, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata i32 %1, metadata !4417, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata i32 %2, metadata !4418, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata i8* %3, metadata !4419, metadata !DIExpression()), !dbg !4422
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4423
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4423
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4420, metadata !DIExpression()), !dbg !4424
  call void @llvm.va_start(i8* nonnull %6), !dbg !4425
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4426
  %8 = load i32, i32* %7, align 4, !dbg !4426
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4426
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #28, !dbg !4426
  call void @llvm.dbg.value(metadata i32 %10, metadata !4421, metadata !DIExpression()), !dbg !4422
  call void @llvm.va_end(i8* nonnull %6), !dbg !4427
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4428
  ret i32 %10, !dbg !4429
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #10

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4430 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4442, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4443, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata i8* %2, metadata !4444, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata i8* %3, metadata !4445, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata i8* %3, metadata !4446, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata i8* %3, metadata !4447, metadata !DIExpression()), !dbg !4461
  %5 = icmp eq i8* %3, null, !dbg !4462
  br i1 %5, label %45, label %6, !dbg !4464

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4456, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4461
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4465
  %8 = load i8, i8* %7, align 1, !dbg !4465
  %9 = zext i8 %8 to i32, !dbg !4466
  call void @llvm.dbg.value(metadata i32 %9, metadata !4457, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata i8 undef, metadata !4458, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4461
  call void @llvm.dbg.value(metadata i8 undef, metadata !4459, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4461
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4453, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4461
  call void @llvm.dbg.value(metadata i32 0, metadata !4455, metadata !DIExpression()), !dbg !4461
  %10 = icmp eq i8 %8, 0, !dbg !4467
  br i1 %10, label %39, label %11, !dbg !4470

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4471
  call void @llvm.dbg.value(metadata i8 %12, metadata !4456, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4461
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4453, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4461
  %13 = zext i8 %12 to i32, !dbg !4472
  call void @llvm.dbg.value(metadata i32 %13, metadata !4456, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4461
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4453, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4461
  %14 = shl nuw nsw i32 %13, 2, !dbg !4473
  call void @llvm.dbg.value(metadata i32 %14, metadata !4456, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4453, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4461
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4474
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4453, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4461
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4475
  %17 = load i8, i8* %16, align 1, !dbg !4475
  call void @llvm.dbg.value(metadata i8 %17, metadata !4458, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4461
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4453, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4461
  %18 = zext i8 %17 to i32, !dbg !4476
  call void @llvm.dbg.value(metadata i32 %18, metadata !4458, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4453, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4461
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4477
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4453, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4461
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4478
  %21 = load i8, i8* %20, align 1, !dbg !4478
  call void @llvm.dbg.value(metadata i8 %21, metadata !4459, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4461
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4453, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4461
  %22 = zext i8 %21 to i32, !dbg !4479
  call void @llvm.dbg.value(metadata i32 %22, metadata !4459, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4453, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4461
  %23 = shl nuw nsw i32 %22, 1, !dbg !4480
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4453, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4461
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4481
  call void @llvm.dbg.value(metadata i8* %24, metadata !4453, metadata !DIExpression()), !dbg !4461
  br label %25, !dbg !4470

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4453, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata i32 %27, metadata !4455, metadata !DIExpression()), !dbg !4461
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4482
  call void @llvm.dbg.value(metadata i8* %28, metadata !4453, metadata !DIExpression()), !dbg !4461
  %29 = load i8, i8* %26, align 1, !dbg !4484
  %30 = zext i8 %29 to i32, !dbg !4484
  call void @llvm.dbg.value(metadata i32 %30, metadata !4460, metadata !DIExpression()), !dbg !4461
  %31 = shl nuw nsw i32 %30, 2, !dbg !4485
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4486
  %33 = bitcast i8* %32 to i8**, !dbg !4487
  call void @llvm.dbg.value(metadata i8** %33, metadata !4454, metadata !DIExpression()), !dbg !4461
  store i8* %28, i8** %33, align 4, !dbg !4488
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4489
  %35 = add i32 %34, 1, !dbg !4490
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4491
  call void @llvm.dbg.value(metadata i8* %36, metadata !4453, metadata !DIExpression()), !dbg !4461
  %37 = add nuw nsw i32 %27, 1, !dbg !4492
  call void @llvm.dbg.value(metadata i32 %37, metadata !4455, metadata !DIExpression()), !dbg !4461
  %38 = icmp eq i32 %37, %9, !dbg !4467
  br i1 %38, label %39, label %25, !dbg !4470, !llvm.loop !4493

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4495
  call void @llvm.dbg.value(metadata i8* %40, metadata !4446, metadata !DIExpression()), !dbg !4461
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4496
  %42 = bitcast i8* %41 to i8**, !dbg !4496
  %43 = load i8*, i8** %42, align 1, !dbg !4496
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #28, !dbg !4497
  br label %45, !dbg !4498

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4461
  ret i32 %46, !dbg !4499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4500 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4504, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4505, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i8* %2, metadata !4506, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i8* %3, metadata !4507, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i8* %4, metadata !4508, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i8* %4, metadata !4509, metadata !DIExpression()), !dbg !4514
  %6 = ptrtoint i8* %4 to i32, !dbg !4515
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4515
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4515
  ret i32 %8, !dbg !4516
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !4517 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4521, metadata !DIExpression()), !dbg !4526
  call void @llvm.dbg.value(metadata i32 %1, metadata !4522, metadata !DIExpression()), !dbg !4526
  call void @llvm.dbg.value(metadata i8 0, metadata !4524, metadata !DIExpression()), !dbg !4526
  call void @llvm.dbg.value(metadata i32 0, metadata !4525, metadata !DIExpression()), !dbg !4526
  call void @llvm.dbg.value(metadata i8 poison, metadata !4524, metadata !DIExpression()), !dbg !4526
  call void @llvm.dbg.value(metadata i8* %0, metadata !4521, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4526
  %3 = load i8, i8* %0, align 1, !dbg !4527
  call void @llvm.dbg.value(metadata i8 %3, metadata !4523, metadata !DIExpression()), !dbg !4526
  %4 = icmp eq i8 %3, 0, !dbg !4528
  br i1 %4, label %29, label %5, !dbg !4529

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4530
  call void @llvm.dbg.value(metadata i32 %8, metadata !4525, metadata !DIExpression()), !dbg !4526
  br i1 %9, label %11, label %22, !dbg !4531

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4533
  br i1 %12, label %13, label %17, !dbg !4537

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4538
  br i1 %14, label %29, label %15, !dbg !4541

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #28, !dbg !4542
  br i1 %16, label %29, label %22, !dbg !4544

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #28, !dbg !4545
  %19 = xor i1 %18, true, !dbg !4547
  %20 = zext i1 %18 to i32, !dbg !4547
  %21 = add nsw i32 %8, %20, !dbg !4547
  br label %22, !dbg !4547

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4526
  call void @llvm.dbg.value(metadata i32 %24, metadata !4525, metadata !DIExpression()), !dbg !4526
  call void @llvm.dbg.value(metadata i8 poison, metadata !4524, metadata !DIExpression()), !dbg !4526
  %25 = icmp eq i8 %6, 37, !dbg !4548
  %26 = xor i1 %25, %23, !dbg !4550
  call void @llvm.dbg.value(metadata i8* %10, metadata !4521, metadata !DIExpression()), !dbg !4526
  call void @llvm.dbg.value(metadata i8* %10, metadata !4521, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4526
  %27 = load i8, i8* %10, align 1, !dbg !4527
  call void @llvm.dbg.value(metadata i8 %27, metadata !4523, metadata !DIExpression()), !dbg !4526
  %28 = icmp eq i8 %27, 0, !dbg !4528
  br i1 %28, label %29, label %5, !dbg !4529, !llvm.loop !4551

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4526
  ret i1 %30, !dbg !4553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4554 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4558, metadata !DIExpression()), !dbg !4559
  %2 = add i8 %0, -64, !dbg !4560
  %3 = icmp ult i8 %2, 59, !dbg !4560
  ret i1 %3, !dbg !4561
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4562 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4570, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 %1, metadata !4571, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4572, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8* %3, metadata !4573, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 %4, metadata !4574, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i16* %5, metadata !4575, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 %6, metadata !4576, metadata !DIExpression()), !dbg !4639
  %11 = icmp eq i8* %0, null, !dbg !4640
  br i1 %11, label %12, label %13, !dbg !4643

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #27, !dbg !4644
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #27, !dbg !4644
  unreachable, !dbg !4644

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4577, metadata !DIExpression()), !dbg !4639
  %14 = bitcast i8* %0 to i32*, !dbg !4646
  call void @llvm.dbg.value(metadata i32* %14, metadata !4578, metadata !DIExpression()), !dbg !4639
  %15 = and i32 %4, 8, !dbg !4647
  %16 = icmp eq i32 %15, 0, !dbg !4648
  call void @llvm.dbg.value(metadata i1 %16, metadata !4582, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4639
  call void @llvm.dbg.value(metadata i8* %0, metadata !4585, metadata !DIExpression()), !dbg !4639
  %17 = icmp eq i32 %1, 0, !dbg !4649
  br i1 %17, label %18, label %20, !dbg !4650

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #28, !dbg !4651
  br label %20, !dbg !4650

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4650
  call void @llvm.dbg.value(metadata i32 %21, metadata !4571, metadata !DIExpression()), !dbg !4639
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4652
  %23 = load i8, i8* %22, align 1, !dbg !4652
  %24 = zext i8 %23 to i32, !dbg !4653
  call void @llvm.dbg.value(metadata i32 %24, metadata !4580, metadata !DIExpression()), !dbg !4639
  %25 = icmp ne i8 %23, 0, !dbg !4654
  %26 = and i32 %4, 1, !dbg !4655
  %27 = icmp ne i32 %26, 0, !dbg !4655
  %28 = and i1 %27, %25, !dbg !4655
  call void @llvm.dbg.value(metadata i1 %28, metadata !4584, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4639
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4656
  %30 = load i8, i8* %29, align 1, !dbg !4656
  %31 = zext i8 %30 to i32, !dbg !4657
  call void @llvm.dbg.value(metadata i32 %31, metadata !4581, metadata !DIExpression()), !dbg !4639
  %32 = icmp ne i8 %30, 0, !dbg !4658
  %33 = and i32 %4, 2, !dbg !4659
  %34 = icmp ne i32 %33, 0, !dbg !4659
  %35 = and i1 %34, %32, !dbg !4659
  call void @llvm.dbg.value(metadata i1 %35, metadata !4583, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4639
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4660
  br i1 %36, label %41, label %37, !dbg !4660

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4662
  br i1 %38, label %287, label %39, !dbg !4665

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #27, !dbg !4666
  br label %287, !dbg !4668

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4669
  %43 = zext i8 %42 to i32, !dbg !4670
  %44 = shl nuw nsw i32 %43, 2, !dbg !4671
  call void @llvm.dbg.value(metadata i32 %44, metadata !4579, metadata !DIExpression()), !dbg !4639
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4672
  %46 = bitcast i8* %45 to i8**, !dbg !4673
  %47 = load i8*, i8** %46, align 4, !dbg !4673
  call void @llvm.dbg.value(metadata i8* %47, metadata !4588, metadata !DIExpression()), !dbg !4639
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4674
  call void @llvm.dbg.value(metadata i8* %48, metadata !4589, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 0, metadata !4590, metadata !DIExpression()), !dbg !4639
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4675
  br i1 %49, label %50, label %135, !dbg !4676

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4587, metadata !DIExpression()), !dbg !4639
  br i1 %28, label %51, label %76, !dbg !4677

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4587, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8* %48, metadata !4589, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 0, metadata !4590, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 0, metadata !4591, metadata !DIExpression()), !dbg !4678
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4679

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4587, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8* %55, metadata !4589, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 %56, metadata !4590, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 %57, metadata !4591, metadata !DIExpression()), !dbg !4678
  %58 = load i8, i8* %55, align 1, !dbg !4680
  %59 = zext i8 %58 to i32, !dbg !4681
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4681
  %61 = bitcast i32* %60 to i8**, !dbg !4682
  %62 = load i8*, i8** %61, align 4, !dbg !4682
  call void @llvm.dbg.value(metadata i8* %62, metadata !4597, metadata !DIExpression()), !dbg !4683
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #28, !dbg !4684
  call void @llvm.dbg.value(metadata i32 %63, metadata !4600, metadata !DIExpression()), !dbg !4683
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4685
  br i1 %65, label %66, label %70, !dbg !4685

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4687
  %68 = add nuw i32 %56, 1, !dbg !4689
  call void @llvm.dbg.value(metadata i32 %68, metadata !4590, metadata !DIExpression()), !dbg !4639
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4690
  store i16 %67, i16* %69, align 2, !dbg !4691
  br label %70, !dbg !4692

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4639
  call void @llvm.dbg.value(metadata i32 %71, metadata !4590, metadata !DIExpression()), !dbg !4639
  %72 = add nsw i32 %63, %54, !dbg !4693
  call void @llvm.dbg.value(metadata i32 %72, metadata !4587, metadata !DIExpression()), !dbg !4639
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4694
  call void @llvm.dbg.value(metadata i8* %73, metadata !4589, metadata !DIExpression()), !dbg !4639
  %74 = add nuw nsw i32 %57, 1, !dbg !4695
  call void @llvm.dbg.value(metadata i32 %74, metadata !4591, metadata !DIExpression()), !dbg !4678
  %75 = icmp eq i32 %74, %24, !dbg !4696
  br i1 %75, label %82, label %53, !dbg !4679, !llvm.loop !4697

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4699
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4699
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4699
  br label %82, !dbg !4699

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4702
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4639
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4703
  call void @llvm.dbg.value(metadata i1 undef, metadata !4601, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4704
  call void @llvm.dbg.value(metadata i32 0, metadata !4602, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i32 %85, metadata !4587, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8* %84, metadata !4589, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 %83, metadata !4590, metadata !DIExpression()), !dbg !4639
  %86 = icmp eq i8 %30, 0, !dbg !4706
  br i1 %86, label %287, label %87, !dbg !4707

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4708
  %89 = icmp eq i32 %88, 0, !dbg !4709
  call void @llvm.dbg.value(metadata i1 %89, metadata !4601, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4704
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4707

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4587, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8* %96, metadata !4589, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 %97, metadata !4590, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 %98, metadata !4602, metadata !DIExpression()), !dbg !4705
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4710
  call void @llvm.dbg.value(metadata i8* %99, metadata !4589, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8 undef, metadata !4604, metadata !DIExpression()), !dbg !4711
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4712
  call void @llvm.dbg.value(metadata i8* %100, metadata !4589, metadata !DIExpression()), !dbg !4639
  %101 = load i8, i8* %99, align 1, !dbg !4713
  call void @llvm.dbg.value(metadata i8 %101, metadata !4607, metadata !DIExpression()), !dbg !4711
  %102 = zext i8 %101 to i32, !dbg !4714
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4714
  %104 = bitcast i32* %103 to i8**, !dbg !4715
  %105 = load i8*, i8** %104, align 4, !dbg !4715
  call void @llvm.dbg.value(metadata i8* %105, metadata !4608, metadata !DIExpression()), !dbg !4711
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #28, !dbg !4716
  call void @llvm.dbg.value(metadata i1 %106, metadata !4609, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4711
  br i1 %16, label %113, label %107, !dbg !4717

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4719
  call void @llvm.dbg.value(metadata i8 %108, metadata !4604, metadata !DIExpression()), !dbg !4711
  %109 = zext i8 %108 to i32, !dbg !4720
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #28, !dbg !4721
  br i1 %110, label %111, label %113, !dbg !4722

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.35, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #27, !dbg !4723
  %112 = add nsw i32 %95, -2, !dbg !4729
  call void @llvm.dbg.value(metadata i32 %112, metadata !4587, metadata !DIExpression()), !dbg !4639
  br label %130, !dbg !4730

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4731

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4732

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4734
  call void @llvm.dbg.value(metadata i32 %116, metadata !4587, metadata !DIExpression()), !dbg !4639
  br label %130, !dbg !4737

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4738

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4635), !dbg !4739
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #28, !dbg !4740
  call void @llvm.dbg.value(metadata i32 %119, metadata !4610, metadata !DIExpression()), !dbg !4711
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4741
  br i1 %121, label %122, label %126, !dbg !4741

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4743
  %124 = add nuw i32 %97, 1, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %124, metadata !4590, metadata !DIExpression()), !dbg !4639
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4746
  store i16 %123, i16* %125, align 2, !dbg !4747
  br label %126, !dbg !4748

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4639
  call void @llvm.dbg.value(metadata i32 %127, metadata !4590, metadata !DIExpression()), !dbg !4639
  %128 = add i32 %95, -1, !dbg !4749
  %129 = add i32 %128, %119, !dbg !4750
  call void @llvm.dbg.value(metadata i32 %129, metadata !4587, metadata !DIExpression()), !dbg !4639
  br label %130, !dbg !4751

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4639
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4711
  call void @llvm.dbg.value(metadata i32 %132, metadata !4587, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 %131, metadata !4590, metadata !DIExpression()), !dbg !4639
  %133 = add nuw nsw i32 %98, 1, !dbg !4752
  call void @llvm.dbg.value(metadata i8* %100, metadata !4589, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 %133, metadata !4602, metadata !DIExpression()), !dbg !4705
  %134 = icmp eq i32 %133, %31, !dbg !4706
  br i1 %134, label %287, label %94, !dbg !4707, !llvm.loop !4753

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4612, metadata !DIExpression()), !dbg !4755
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4613, metadata !DIExpression()), !dbg !4756
  br i1 %28, label %136, label %138, !dbg !4757

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4614, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8 0, metadata !4615, metadata !DIExpression()), !dbg !4639
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4758
  call void @llvm.dbg.value(metadata i8* %137, metadata !4616, metadata !DIExpression()), !dbg !4639
  br label %143, !dbg !4761

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4762
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4762

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4616, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8 undef, metadata !4615, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8 0, metadata !4614, metadata !DIExpression()), !dbg !4639
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #27, !dbg !4764
  br label %148, !dbg !4767

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4768
  call void @llvm.dbg.value(metadata i8* %151, metadata !4589, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 0, metadata !4618, metadata !DIExpression()), !dbg !4769
  call void @llvm.dbg.value(metadata i8 %149, metadata !4615, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8 %150, metadata !4614, metadata !DIExpression()), !dbg !4639
  %152 = icmp eq i8 %30, 0, !dbg !4770
  br i1 %152, label %153, label %155, !dbg !4771

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4772
  br label %160, !dbg !4771

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4771

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4772
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4773
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4774
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4639
  call void @llvm.dbg.value(metadata i8 undef, metadata !4611, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4639
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4775
  %166 = load i8, i8* %165, align 1, !dbg !4775
  %167 = zext i8 %162 to i32, !dbg !4776
  %168 = add i8 %166, %162, !dbg !4777
  call void @llvm.dbg.value(metadata i8 %168, metadata !4611, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4639
  %169 = icmp eq i32 %33, 0, !dbg !4778
  %170 = lshr i8 %163, 1, !dbg !4779
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4779
  call void @llvm.dbg.value(metadata i8 %171, metadata !4611, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4639
  %172 = icmp eq i32 %26, 0, !dbg !4780
  %173 = icmp eq i32 %161, 0, !dbg !4772
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4772
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4772
  call void @llvm.dbg.value(metadata i8 %175, metadata !4611, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4639
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4626, metadata !DIExpression()), !dbg !4781
  %176 = load i32, i32* %14, align 1, !dbg !4782
  store i8 %168, i8* %165, align 1, !dbg !4783
  store i8 %175, i8* %22, align 1, !dbg !4783
  store i8 %171, i8* %29, align 1, !dbg !4783
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #27, !dbg !4784
  call void @llvm.dbg.value(metadata i32 %177, metadata !4617, metadata !DIExpression()), !dbg !4639
  %178 = icmp slt i32 %177, 0, !dbg !4785
  br i1 %178, label %287, label %240, !dbg !4787

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4589, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 %181, metadata !4618, metadata !DIExpression()), !dbg !4769
  call void @llvm.dbg.value(metadata i8 %182, metadata !4615, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8 %183, metadata !4614, metadata !DIExpression()), !dbg !4639
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4788
  call void @llvm.dbg.value(metadata i8* %184, metadata !4589, metadata !DIExpression()), !dbg !4639
  %185 = load i8, i8* %180, align 1, !dbg !4789
  call void @llvm.dbg.value(metadata i8 %185, metadata !4620, metadata !DIExpression()), !dbg !4790
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4791
  call void @llvm.dbg.value(metadata i8* %186, metadata !4589, metadata !DIExpression()), !dbg !4639
  %187 = load i8, i8* %184, align 1, !dbg !4792
  call void @llvm.dbg.value(metadata i8 %187, metadata !4623, metadata !DIExpression()), !dbg !4790
  %188 = zext i8 %187 to i32, !dbg !4793
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4793
  %190 = bitcast i32* %189 to i8**, !dbg !4794
  %191 = load i8*, i8** %190, align 4, !dbg !4794
  call void @llvm.dbg.value(metadata i8* %191, metadata !4624, metadata !DIExpression()), !dbg !4790
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #28, !dbg !4795
  call void @llvm.dbg.value(metadata i1 %192, metadata !4625, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4790
  br i1 %16, label %196, label %193, !dbg !4796

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4798
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #28, !dbg !4799
  br i1 %195, label %235, label %196, !dbg !4800

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4801

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4802

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4805
  br i1 %199, label %201, label %200, !dbg !4810

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #27, !dbg !4811
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #27, !dbg !4811
  unreachable, !dbg !4811

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4805
  %203 = add nuw nsw i8 %183, 1, !dbg !4813
  call void @llvm.dbg.value(metadata i8 %203, metadata !4614, metadata !DIExpression()), !dbg !4639
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4814
  br label %231, !dbg !4815

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4816

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4817
  br i1 %207, label %209, label %208, !dbg !4822

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #27, !dbg !4823
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #27, !dbg !4823
  unreachable, !dbg !4823

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4817
  %211 = add nuw nsw i8 %182, 1, !dbg !4825
  call void @llvm.dbg.value(metadata i8 %211, metadata !4615, metadata !DIExpression()), !dbg !4639
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4826
  br label %231, !dbg !4827

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4828

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4830
  br i1 %215, label %217, label %216, !dbg !4835

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #27, !dbg !4836
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #27, !dbg !4836
  unreachable, !dbg !4836

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4830
  %219 = add nuw nsw i8 %183, 1, !dbg !4838
  call void @llvm.dbg.value(metadata i8 %219, metadata !4614, metadata !DIExpression()), !dbg !4639
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4839
  br label %231, !dbg !4840

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4841
  br i1 %222, label %224, label %223, !dbg !4845

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #27, !dbg !4846
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #27, !dbg !4846
  unreachable, !dbg !4846

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4841
  %226 = add nuw nsw i8 %182, 1, !dbg !4848
  call void @llvm.dbg.value(metadata i8 %226, metadata !4615, metadata !DIExpression()), !dbg !4639
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4849
  store i8 %185, i8* %227, align 1, !dbg !4850
  %228 = add nuw nsw i8 %182, 2, !dbg !4851
  call void @llvm.dbg.value(metadata i8 %228, metadata !4615, metadata !DIExpression()), !dbg !4639
  %229 = zext i8 %226 to i32, !dbg !4852
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4852
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4853
  br label %235, !dbg !4854

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4639
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4774
  call void @llvm.dbg.value(metadata i8 %237, metadata !4615, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8 %236, metadata !4614, metadata !DIExpression()), !dbg !4639
  %238 = add nuw nsw i32 %181, 1, !dbg !4854
  call void @llvm.dbg.value(metadata i8* %186, metadata !4589, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 %238, metadata !4618, metadata !DIExpression()), !dbg !4769
  %239 = icmp eq i32 %238, %31, !dbg !4770
  br i1 %239, label %160, label %179, !dbg !4771, !llvm.loop !4855

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4779
  call void @llvm.dbg.value(metadata i32 %177, metadata !4587, metadata !DIExpression()), !dbg !4639
  store i32 %176, i32* %14, align 1, !dbg !4857
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4858
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #27, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %243, metadata !4617, metadata !DIExpression()), !dbg !4639
  %244 = icmp slt i32 %243, 0, !dbg !4860
  br i1 %244, label %287, label %245, !dbg !4862

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4587, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4639
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4863
  %248 = add nuw nsw i32 %44, %24, !dbg !4863
  %249 = sub i32 %247, %248, !dbg !4863
  call void @llvm.dbg.value(metadata i32 %249, metadata !4627, metadata !DIExpression()), !dbg !4639
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #27, !dbg !4864
  call void @llvm.dbg.value(metadata i32 %250, metadata !4617, metadata !DIExpression()), !dbg !4639
  %251 = icmp slt i32 %250, 0, !dbg !4865
  br i1 %251, label %287, label %252, !dbg !4867

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4868
  call void @llvm.dbg.value(metadata i32 %253, metadata !4587, metadata !DIExpression()), !dbg !4639
  %254 = add nuw nsw i32 %253, %250, !dbg !4869
  call void @llvm.dbg.value(metadata i32 %254, metadata !4587, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 0, metadata !4628, metadata !DIExpression()), !dbg !4870
  %255 = icmp eq i8 %162, 0, !dbg !4871
  br i1 %255, label %284, label %256, !dbg !4872

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4872

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4628, metadata !DIExpression()), !dbg !4870
  call void @llvm.dbg.value(metadata i32 %260, metadata !4587, metadata !DIExpression()), !dbg !4639
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4873
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4874
  %262 = load i8, i8* %261, align 1, !dbg !4874
  call void @llvm.dbg.value(metadata i8 %262, metadata !4630, metadata !DIExpression()), !dbg !4875
  store i8 %262, i8* %10, align 1, !dbg !4876
  %263 = zext i8 %262 to i32, !dbg !4877
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4877
  %265 = bitcast i32* %264 to i8**, !dbg !4878
  %266 = load i8*, i8** %265, align 4, !dbg !4878
  call void @llvm.dbg.value(metadata i8* %266, metadata !4633, metadata !DIExpression()), !dbg !4875
  br i1 %257, label %270, label %267, !dbg !4879

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4880
  %269 = load i16, i16* %268, align 2, !dbg !4880
  br label %270, !dbg !4879

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4879
  call void @llvm.dbg.value(metadata i32 undef, metadata !4634, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4875
  call void @llvm.dbg.value(metadata i8* %10, metadata !4630, metadata !DIExpression(DW_OP_deref)), !dbg !4875
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4881
  call void @llvm.dbg.value(metadata i32 %272, metadata !4617, metadata !DIExpression()), !dbg !4639
  %273 = icmp slt i32 %272, 0, !dbg !4882
  br i1 %273, label %277, label %274, !dbg !4884

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4634, metadata !DIExpression()), !dbg !4875
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4587, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4639
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #28, !dbg !4885
  call void @llvm.dbg.value(metadata i32 %275, metadata !4617, metadata !DIExpression()), !dbg !4639
  %276 = icmp slt i32 %275, 0, !dbg !4886
  br i1 %276, label %277, label %279, !dbg !4888

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4587, metadata !DIExpression()), !dbg !4639
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4889
  call void @llvm.dbg.value(metadata i32 undef, metadata !4587, metadata !DIExpression()), !dbg !4639
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4890
  call void @llvm.dbg.value(metadata i32 %280, metadata !4587, metadata !DIExpression()), !dbg !4639
  %281 = add nsw i32 %280, %275, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %281, metadata !4587, metadata !DIExpression()), !dbg !4639
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4889
  %282 = add nuw nsw i32 %259, 1, !dbg !4892
  call void @llvm.dbg.value(metadata i32 %282, metadata !4628, metadata !DIExpression()), !dbg !4870
  %283 = icmp eq i32 %282, %167, !dbg !4871
  br i1 %283, label %284, label %258, !dbg !4872, !llvm.loop !4893

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4869
  call void @llvm.dbg.value(metadata i32 %285, metadata !4587, metadata !DIExpression()), !dbg !4639
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4895
  br label %287, !dbg !4896

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4639
  ret i32 %288, !dbg !4897
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4898 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4902, metadata !DIExpression()), !dbg !4910
  %2 = icmp eq i8* %0, null, !dbg !4911
  br i1 %2, label %3, label %4, !dbg !4914

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #27, !dbg !4915
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #27, !dbg !4915
  unreachable, !dbg !4915

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4903, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata i8* %0, metadata !4904, metadata !DIExpression()), !dbg !4910
  %5 = load i8, i8* %0, align 1, !dbg !4917
  %6 = zext i8 %5 to i32, !dbg !4917
  %7 = shl nuw nsw i32 %6, 2, !dbg !4918
  call void @llvm.dbg.value(metadata i32 %7, metadata !4905, metadata !DIExpression()), !dbg !4910
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4919
  %9 = load i8, i8* %8, align 1, !dbg !4919
  %10 = zext i8 %9 to i32, !dbg !4919
  call void @llvm.dbg.value(metadata i32 %10, metadata !4906, metadata !DIExpression()), !dbg !4910
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4920
  %12 = load i8, i8* %11, align 1, !dbg !4920
  %13 = zext i8 %12 to i32, !dbg !4920
  call void @llvm.dbg.value(metadata i32 %13, metadata !4907, metadata !DIExpression()), !dbg !4910
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4921
  call void @llvm.dbg.value(metadata i8* %14, metadata !4903, metadata !DIExpression()), !dbg !4910
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4922
  call void @llvm.dbg.value(metadata i8* %15, metadata !4903, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata i32 0, metadata !4908, metadata !DIExpression()), !dbg !4923
  %16 = icmp eq i8 %9, 0, !dbg !4924
  br i1 %16, label %17, label %22, !dbg !4926

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4910
  %19 = ptrtoint i8* %18 to i32, !dbg !4927
  %20 = ptrtoint i8* %0 to i32, !dbg !4927
  %21 = sub i32 %19, %20, !dbg !4927
  ret i32 %21, !dbg !4928

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4908, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.value(metadata i8* %24, metadata !4903, metadata !DIExpression()), !dbg !4910
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4929
  call void @llvm.dbg.value(metadata i8* %25, metadata !4903, metadata !DIExpression()), !dbg !4910
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #27, !dbg !4931
  %27 = add i32 %26, 1, !dbg !4932
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4933
  call void @llvm.dbg.value(metadata i8* %28, metadata !4903, metadata !DIExpression()), !dbg !4910
  %29 = add nuw nsw i32 %23, 1, !dbg !4934
  call void @llvm.dbg.value(metadata i32 %29, metadata !4908, metadata !DIExpression()), !dbg !4923
  %30 = icmp eq i32 %29, %10, !dbg !4924
  br i1 %30, label %17, label %22, !dbg !4926, !llvm.loop !4935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4937 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4941, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i8* %1, metadata !4942, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i8* %2, metadata !4943, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i16 %3, metadata !4944, metadata !DIExpression()), !dbg !4945
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4946
  br i1 %5, label %6, label %9, !dbg !4948

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4949
  %8 = add i32 %7, 1, !dbg !4951
  br label %20, !dbg !4952

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4953
  br i1 %10, label %13, label %11, !dbg !4954

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4954
  br label %16, !dbg !4954

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4955
  %15 = add i32 %14, 1, !dbg !4956
  br label %16, !dbg !4954

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4954
  %18 = and i32 %17, 65535, !dbg !4957
  call void @llvm.dbg.value(metadata i32 %17, metadata !4944, metadata !DIExpression()), !dbg !4945
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !4958
  br label %20, !dbg !4959

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4945
  ret i32 %21, !dbg !4960
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4963, metadata !DIExpression()), !dbg !4964
  ret i32 0, !dbg !4965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !4966 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4970, metadata !DIExpression()), !dbg !4971
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4972
  ret void, !dbg !4973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #13 !dbg !4974 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4977
  ret i8* %1, !dbg !4978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4979 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4990, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.value(metadata i8* %0, metadata !4989, metadata !DIExpression()), !dbg !4999
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #28, !dbg !5000
  ret void, !dbg !5002
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5007, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i8* %1, metadata !5008, metadata !DIExpression()), !dbg !5009
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5010
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !5010
  ret i32 %4, !dbg !5011
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5012 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5019, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5016, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i8* %1, metadata !5017, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i8* %2, metadata !5018, metadata !DIExpression()), !dbg !5020
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !5021
  ret void, !dbg !5022
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5023 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5027, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i32 %1, metadata !5028, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i32 0, metadata !5029, metadata !DIExpression()), !dbg !5030
  %3 = icmp eq i32 %1, 0, !dbg !5031
  br i1 %3, label %13, label %4, !dbg !5034

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5029, metadata !DIExpression()), !dbg !5030
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5035
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5037
  %8 = load i8, i8* %7, align 1, !dbg !5037
  %9 = zext i8 %8 to i32, !dbg !5037
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !5035
  %11 = add nuw i32 %5, 1, !dbg !5038
  call void @llvm.dbg.value(metadata i32 %11, metadata !5029, metadata !DIExpression()), !dbg !5030
  %12 = icmp eq i32 %11, %1, !dbg !5031
  br i1 %12, label %13, label %4, !dbg !5034, !llvm.loop !5039

13:                                               ; preds = %4, %2
  ret void, !dbg !5041
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5042 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5046, metadata !DIExpression()), !dbg !5048
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5049
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !5049
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5047, metadata !DIExpression()), !dbg !5050
  call void @llvm.va_start(i8* nonnull %3), !dbg !5051
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5052
  %5 = load i32, i32* %4, align 4, !dbg !5052
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5052
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #28, !dbg !5052
  call void @llvm.va_end(i8* nonnull %3), !dbg !5053
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !5054
  ret void, !dbg !5054
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5055 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5059, metadata !DIExpression()), !dbg !5064
  call void @llvm.dbg.value(metadata i32 %1, metadata !5060, metadata !DIExpression()), !dbg !5064
  call void @llvm.dbg.value(metadata i8* %2, metadata !5061, metadata !DIExpression()), !dbg !5064
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5065
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !5065
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5062, metadata !DIExpression()), !dbg !5066
  call void @llvm.va_start(i8* nonnull %5), !dbg !5067
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5068
  %7 = load i32, i32* %6, align 4, !dbg !5068
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5068
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #28, !dbg !5068
  call void @llvm.dbg.value(metadata i32 %9, metadata !5063, metadata !DIExpression()), !dbg !5064
  call void @llvm.va_end(i8* nonnull %5), !dbg !5069
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !5070
  ret i32 %9, !dbg !5071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5072 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5079, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8* %0, metadata !5076, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i32 %1, metadata !5077, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8* %2, metadata !5078, metadata !DIExpression()), !dbg !5086
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5087
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #26, !dbg !5087
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5080, metadata !DIExpression()), !dbg !5088
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5089
  store i8* %0, i8** %7, align 4, !dbg !5089
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5089
  store i32 %1, i32* %8, align 4, !dbg !5089
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5089
  store i32 0, i32* %9, align 4, !dbg !5089
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #28, !dbg !5090
  %10 = load i32, i32* %9, align 4, !dbg !5091
  %11 = load i32, i32* %8, align 4, !dbg !5093
  %12 = icmp slt i32 %10, %11, !dbg !5094
  br i1 %12, label %13, label %15, !dbg !5095

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5096
  store i8 0, i8* %14, align 1, !dbg !5098
  br label %15, !dbg !5099

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #26, !dbg !5100
  ret i32 %10, !dbg !5101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #14 !dbg !5102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5107, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5108, metadata !DIExpression()), !dbg !5109
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5110
  %4 = load i8*, i8** %3, align 4, !dbg !5110
  %5 = icmp eq i8* %4, null, !dbg !5112
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5113
  br i1 %5, label %12, label %8, !dbg !5114

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5115
  %10 = load i32, i32* %9, align 4, !dbg !5115
  %11 = icmp slt i32 %7, %10, !dbg !5116
  br i1 %11, label %15, label %12, !dbg !5117

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5118
  %14 = add nsw i32 %7, 1, !dbg !5120
  store i32 %14, i32* %13, align 4, !dbg !5120
  br label %25, !dbg !5121

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5122
  %17 = icmp eq i32 %7, %16, !dbg !5124
  br i1 %17, label %18, label %21, !dbg !5125

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5126
  store i32 %19, i32* %6, align 4, !dbg !5126
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5128
  store i8 0, i8* %20, align 1, !dbg !5129
  br label %25, !dbg !5130

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5131
  %23 = add nsw i32 %7, 1, !dbg !5133
  store i32 %23, i32* %6, align 4, !dbg !5133
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5134
  store i8 %22, i8* %24, align 1, !dbg !5135
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5136
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !5137 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5142, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i8* %1, metadata !5143, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i8* %2, metadata !5144, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i8* %3, metadata !5145, metadata !DIExpression()), !dbg !5146
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !5147
  %5 = tail call fastcc %struct.k_thread* @k_current_get.41() #29, !dbg !5148
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #28, !dbg !5149
  unreachable, !dbg !5150
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.41() unnamed_addr #6 !dbg !5151 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.42() #29, !dbg !5257
  ret %struct.k_thread* %1, !dbg !5258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5259 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5263, metadata !DIExpression()), !dbg !5264
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !5265, !srcloc !5267
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !5268
  ret void, !dbg !5269
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.42() unnamed_addr #6 !dbg !5270 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !5271, !srcloc !5273
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !5274
  ret %struct.k_thread* %1, !dbg !5275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5276 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5287, metadata !DIExpression()), !dbg !5291
  call void @llvm.dbg.value(metadata i8* %1, metadata !5288, metadata !DIExpression()), !dbg !5291
  %3 = icmp eq i8* %1, null, !dbg !5292
  br i1 %3, label %16, label %4, !dbg !5294

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5295
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5295
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5289, metadata !DIExpression()), !dbg !5291
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #28, !dbg !5296, !range !5297
  call void @llvm.dbg.value(metadata i32 %7, metadata !5290, metadata !DIExpression()), !dbg !5291
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5298
  br i1 %8, label %10, label %9, !dbg !5301

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #27, !dbg !5302
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.46, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !5302
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #27, !dbg !5302
  unreachable, !dbg !5302

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5304
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #28, !dbg !5304
  %13 = icmp eq i32 %12, %7, !dbg !5304
  br i1 %13, label %15, label %14, !dbg !5307

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #27, !dbg !5308
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.48, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !5308
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #27, !dbg !5308
  unreachable, !dbg !5308

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #28, !dbg !5310
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5311
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !5313 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5317, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata i8* %1, metadata !5318, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata i8* %1, metadata !5319, metadata !DIExpression()), !dbg !5321
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5322
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5320, metadata !DIExpression()), !dbg !5321
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5323
  %5 = ptrtoint i8* %4 to i32, !dbg !5324
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5324
  %7 = sub i32 %5, %6, !dbg !5324
  %8 = lshr i32 %7, 3, !dbg !5325
  ret i32 %8, !dbg !5326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5327 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5331, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata i32 %1, metadata !5332, metadata !DIExpression()), !dbg !5333
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #28, !dbg !5334
  %4 = and i32 %3, 1, !dbg !5335
  %5 = icmp ne i32 %4, 0, !dbg !5334
  ret i1 %5, !dbg !5336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5337 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5341, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %1, metadata !5342, metadata !DIExpression()), !dbg !5343
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5344
  %4 = add i32 %3, %1, !dbg !5345
  ret i32 %4, !dbg !5346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5347 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5349, metadata !DIExpression()), !dbg !5351
  call void @llvm.dbg.value(metadata i32 %1, metadata !5350, metadata !DIExpression()), !dbg !5351
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #28, !dbg !5352
  %4 = sub i32 %1, %3, !dbg !5353
  ret i32 %4, !dbg !5354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !5355 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5359, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata i32 %1, metadata !5360, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata i1 %2, metadata !5361, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5364
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5365
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5362, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5363, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5364
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5366
  %6 = bitcast i8* %5 to i16*, !dbg !5366
  %7 = load i16, i16* %6, align 2, !dbg !5366
  %8 = and i16 %7, -2, !dbg !5370
  %9 = zext i1 %2 to i16, !dbg !5370
  %10 = or i16 %8, %9, !dbg !5370
  store i16 %10, i16* %6, align 2, !dbg !5366
  ret void, !dbg !5371
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5372 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5376, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata i32 %1, metadata !5377, metadata !DIExpression()), !dbg !5378
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5379
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5381
  br i1 %4, label %7, label %5, !dbg !5382

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5383
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5385
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #28, !dbg !5386
  br label %7, !dbg !5387

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5388
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #28, !dbg !5390
  br i1 %9, label %13, label %10, !dbg !5391

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #28, !dbg !5392
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5394
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #28, !dbg !5395
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5396
  call void @llvm.dbg.value(metadata i32 %12, metadata !5377, metadata !DIExpression()), !dbg !5378
  br label %13, !dbg !5397

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5377, metadata !DIExpression()), !dbg !5378
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #28, !dbg !5398
  ret void, !dbg !5399
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5400 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5402, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.value(metadata i32 %1, metadata !5403, metadata !DIExpression()), !dbg !5407
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5408, !range !5409
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5410
  call void @llvm.dbg.value(metadata i32 %4, metadata !5404, metadata !DIExpression()), !dbg !5411
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #28, !dbg !5412
  ret void, !dbg !5413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5414 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5418, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata i32 %1, metadata !5419, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata i32 %2, metadata !5420, metadata !DIExpression()), !dbg !5423
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5424
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5425
  %6 = add i32 %5, %4, !dbg !5426
  call void @llvm.dbg.value(metadata i32 %6, metadata !5421, metadata !DIExpression()), !dbg !5423
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #28, !dbg !5427
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5428
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #28, !dbg !5429
  ret void, !dbg !5430
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5431 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5433, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i32 %1, metadata !5434, metadata !DIExpression()), !dbg !5438
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5439, !range !5409
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5440
  call void @llvm.dbg.value(metadata i32 %4, metadata !5435, metadata !DIExpression()), !dbg !5441
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #28, !dbg !5442
  ret void, !dbg !5443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5444 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5448, metadata !DIExpression()), !dbg !5450
  call void @llvm.dbg.value(metadata i32 %1, metadata !5449, metadata !DIExpression()), !dbg !5450
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #28, !dbg !5451
  %4 = lshr i32 %3, 1, !dbg !5452
  ret i32 %4, !dbg !5453
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !5454 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5458, metadata !DIExpression()), !dbg !5461
  call void @llvm.dbg.value(metadata i32 %1, metadata !5459, metadata !DIExpression()), !dbg !5461
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #28, !dbg !5462
  %4 = add i32 %1, 1, !dbg !5463
  %5 = sub i32 %4, %3, !dbg !5464
  call void @llvm.dbg.value(metadata i32 %5, metadata !5460, metadata !DIExpression()), !dbg !5461
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5465, !range !5466
  %7 = sub nsw i32 31, %6, !dbg !5467
  ret i32 %7, !dbg !5468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5469 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5473, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i32 %1, metadata !5474, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i32 %2, metadata !5475, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5482
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5483
  %5 = load i32, i32* %4, align 4, !dbg !5483
  %6 = icmp eq i32 %5, 0, !dbg !5484
  br i1 %6, label %7, label %12, !dbg !5485

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5486
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5488
  %10 = load i32, i32* %9, align 4, !dbg !5489
  %11 = or i32 %10, %8, !dbg !5489
  store i32 %11, i32* %9, align 4, !dbg !5489
  store i32 %1, i32* %4, align 4, !dbg !5490
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #28, !dbg !5491
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #28, !dbg !5492
  br label %14, !dbg !5493

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5478, metadata !DIExpression()), !dbg !5494
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #28, !dbg !5495, !range !5496
  call void @llvm.dbg.value(metadata i32 %13, metadata !5481, metadata !DIExpression()), !dbg !5494
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #28, !dbg !5497
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #28, !dbg !5498
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #28, !dbg !5499
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #28, !dbg !5500
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5502 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5504, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.value(metadata i32 %1, metadata !5505, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.value(metadata i32 %2, metadata !5506, metadata !DIExpression()), !dbg !5507
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #28, !dbg !5508
  ret void, !dbg !5509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5510 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5512, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %1, metadata !5513, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %2, metadata !5514, metadata !DIExpression()), !dbg !5515
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #28, !dbg !5516
  ret void, !dbg !5517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5518 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5520, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.value(metadata i32 %1, metadata !5521, metadata !DIExpression()), !dbg !5522
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #28, !dbg !5523
  ret i32 %3, !dbg !5524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !5525 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5529, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.value(metadata i32 %1, metadata !5530, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.value(metadata i32 %2, metadata !5531, metadata !DIExpression()), !dbg !5534
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5535
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5532, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5534
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5534
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5536
  call void @llvm.dbg.value(metadata i8* %5, metadata !5533, metadata !DIExpression()), !dbg !5534
  %6 = bitcast i8* %5 to i16*, !dbg !5537
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5540
  %8 = load i16, i16* %7, align 2, !dbg !5540
  %9 = zext i16 %8 to i32, !dbg !5540
  ret i32 %9, !dbg !5541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5542 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5546, metadata !DIExpression()), !dbg !5547
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5548
  ret %struct.chunk_unit_t* %2, !dbg !5549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #12 !dbg !5550 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5554, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.value(metadata i32 %1, metadata !5555, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.value(metadata i32 %2, metadata !5556, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.value(metadata i32 %3, metadata !5557, metadata !DIExpression()), !dbg !5560
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5561
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5558, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5560
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5562
  call void @llvm.dbg.value(metadata i8* %6, metadata !5559, metadata !DIExpression()), !dbg !5560
  %7 = trunc i32 %3 to i16, !dbg !5563
  %8 = bitcast i8* %6 to i16*, !dbg !5566
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5567
  store i16 %7, i16* %9, align 2, !dbg !5568
  ret void, !dbg !5569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5570 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5574, metadata !DIExpression()), !dbg !5575
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #28, !dbg !5576
  ret i32 %2, !dbg !5577
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5578 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5582, metadata !DIExpression()), !dbg !5584
  call void @llvm.dbg.value(metadata i32 %1, metadata !5583, metadata !DIExpression()), !dbg !5584
  %3 = add i32 %1, 4, !dbg !5585
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #28, !dbg !5586
  ret i32 %4, !dbg !5587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5592, metadata !DIExpression()), !dbg !5593
  %2 = add i32 %0, 7, !dbg !5594
  %3 = lshr i32 %2, 3, !dbg !5595
  ret i32 %3, !dbg !5596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5597 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5601, metadata !DIExpression()), !dbg !5604
  call void @llvm.dbg.value(metadata i32 %1, metadata !5602, metadata !DIExpression()), !dbg !5604
  call void @llvm.dbg.value(metadata i32 %2, metadata !5603, metadata !DIExpression()), !dbg !5604
  %4 = shl i32 %2, 1, !dbg !5605
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #28, !dbg !5606
  ret void, !dbg !5607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5608 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5610, metadata !DIExpression()), !dbg !5613
  call void @llvm.dbg.value(metadata i32 %1, metadata !5611, metadata !DIExpression()), !dbg !5613
  call void @llvm.dbg.value(metadata i32 %2, metadata !5612, metadata !DIExpression()), !dbg !5613
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #28, !dbg !5614
  ret void, !dbg !5615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5616 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5618, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i32 %1, metadata !5619, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i32 %2, metadata !5620, metadata !DIExpression()), !dbg !5626
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5627
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5621, metadata !DIExpression()), !dbg !5626
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5628
  %6 = icmp eq i32 %5, %1, !dbg !5629
  br i1 %6, label %7, label %14, !dbg !5630

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5631
  %9 = xor i32 %8, -1, !dbg !5633
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5634
  %11 = load i32, i32* %10, align 4, !dbg !5635
  %12 = and i32 %11, %9, !dbg !5635
  store i32 %12, i32* %10, align 4, !dbg !5635
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5636
  store i32 0, i32* %13, align 4, !dbg !5637
  br label %17, !dbg !5638

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5639
  call void @llvm.dbg.value(metadata i32 %15, metadata !5622, metadata !DIExpression()), !dbg !5640
  call void @llvm.dbg.value(metadata i32 %5, metadata !5625, metadata !DIExpression()), !dbg !5640
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5641
  store i32 %5, i32* %16, align 4, !dbg !5642
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #28, !dbg !5643
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #28, !dbg !5644
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5646 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5648, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i32 %1, metadata !5649, metadata !DIExpression()), !dbg !5650
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #28, !dbg !5651
  ret i32 %3, !dbg !5652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #13 !dbg !5653 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5657, metadata !DIExpression()), !dbg !5664
  call void @llvm.dbg.value(metadata i8* %1, metadata !5658, metadata !DIExpression()), !dbg !5664
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5665
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5665
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5659, metadata !DIExpression()), !dbg !5664
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #28, !dbg !5666
  call void @llvm.dbg.value(metadata i32 %5, metadata !5660, metadata !DIExpression()), !dbg !5664
  %6 = ptrtoint i8* %1 to i32, !dbg !5667
  call void @llvm.dbg.value(metadata i32 %6, metadata !5661, metadata !DIExpression()), !dbg !5664
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #28, !dbg !5668
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5668
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5669
  call void @llvm.dbg.value(metadata i32 %9, metadata !5662, metadata !DIExpression()), !dbg !5664
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #28, !dbg !5670
  %11 = shl i32 %10, 3, !dbg !5671
  call void @llvm.dbg.value(metadata i32 %11, metadata !5663, metadata !DIExpression()), !dbg !5664
  %12 = sub i32 %9, %6, !dbg !5672
  %13 = add i32 %12, %11, !dbg !5673
  ret i32 %13, !dbg !5674
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !5675 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5679, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %1, metadata !5680, metadata !DIExpression()), !dbg !5685
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5686
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5686
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5681, metadata !DIExpression()), !dbg !5685
  %5 = icmp eq i32 %1, 0, !dbg !5687
  br i1 %5, label %19, label %6, !dbg !5689

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #28, !dbg !5690
  br i1 %7, label %19, label %8, !dbg !5691

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #28, !dbg !5692, !range !5297
  call void @llvm.dbg.value(metadata i32 %9, metadata !5683, metadata !DIExpression()), !dbg !5685
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #28, !dbg !5693
  call void @llvm.dbg.value(metadata i32 %10, metadata !5684, metadata !DIExpression()), !dbg !5685
  %11 = icmp eq i32 %10, 0, !dbg !5694
  br i1 %11, label %19, label %12, !dbg !5696

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #28, !dbg !5697
  %14 = icmp ugt i32 %13, %9, !dbg !5699
  br i1 %14, label %15, label %17, !dbg !5700

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5701
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #28, !dbg !5703
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #28, !dbg !5704
  br label %17, !dbg !5705

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #28, !dbg !5706
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #28, !dbg !5707
  call void @llvm.dbg.value(metadata i8* %18, metadata !5682, metadata !DIExpression()), !dbg !5685
  br label %19, !dbg !5708

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5685
  ret i8* %20, !dbg !5709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5710 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5714, metadata !DIExpression()), !dbg !5716
  call void @llvm.dbg.value(metadata i32 %1, metadata !5715, metadata !DIExpression()), !dbg !5716
  %3 = lshr i32 %1, 3, !dbg !5717
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5718
  %5 = load i32, i32* %4, align 4, !dbg !5718
  %6 = icmp uge i32 %3, %5, !dbg !5719
  ret i1 %6, !dbg !5720
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5721 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5725, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.value(metadata i32 %1, metadata !5726, metadata !DIExpression()), !dbg !5740
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5741
  call void @llvm.dbg.value(metadata i32 %3, metadata !5727, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5740
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5742
  %5 = load i32, i32* %4, align 4, !dbg !5742
  %6 = icmp eq i32 %5, 0, !dbg !5743
  br i1 %6, label %19, label %7, !dbg !5744

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5745
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5746
  call void @llvm.dbg.value(metadata i32 %9, metadata !5732, metadata !DIExpression()), !dbg !5746
  call void @llvm.dbg.value(metadata i32 %8, metadata !5733, metadata !DIExpression()), !dbg !5747
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #28, !dbg !5748
  %11 = icmp ult i32 %10, %1, !dbg !5750
  br i1 %11, label %13, label %12, !dbg !5751

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #28, !dbg !5752
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #28, !dbg !5754
  store i32 %14, i32* %4, align 4, !dbg !5755
  %15 = add nsw i32 %9, -1, !dbg !5756
  call void @llvm.dbg.value(metadata i32 %15, metadata !5732, metadata !DIExpression()), !dbg !5746
  %16 = icmp eq i32 %15, 0, !dbg !5756
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5757
  br i1 %18, label %19, label %7, !dbg !5757, !llvm.loop !5758

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5761
  %21 = load i32, i32* %20, align 4, !dbg !5761
  %22 = add nsw i32 %3, 1, !dbg !5762
  %23 = shl nsw i32 -1, %22, !dbg !5762
  %24 = and i32 %21, %23, !dbg !5763
  call void @llvm.dbg.value(metadata i32 %24, metadata !5735, metadata !DIExpression()), !dbg !5740
  %25 = icmp eq i32 %24, 0, !dbg !5764
  br i1 %25, label %30, label %26, !dbg !5765

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5766, !range !5466
  call void @llvm.dbg.value(metadata i32 %27, metadata !5736, metadata !DIExpression()), !dbg !5767
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5768
  %29 = load i32, i32* %28, align 4, !dbg !5768
  call void @llvm.dbg.value(metadata i32 %29, metadata !5739, metadata !DIExpression()), !dbg !5767
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #28, !dbg !5769
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5740
  ret i32 %31, !dbg !5770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5771 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5773, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata i32 %1, metadata !5774, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata i32 %2, metadata !5775, metadata !DIExpression()), !dbg !5779
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5780
  call void @llvm.dbg.value(metadata i32 %4, metadata !5776, metadata !DIExpression()), !dbg !5779
  %5 = sub i32 %2, %1, !dbg !5781
  call void @llvm.dbg.value(metadata i32 %5, metadata !5777, metadata !DIExpression()), !dbg !5779
  %6 = sub i32 %4, %5, !dbg !5782
  call void @llvm.dbg.value(metadata i32 %6, metadata !5778, metadata !DIExpression()), !dbg !5779
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #28, !dbg !5783
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #28, !dbg !5784
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #28, !dbg !5785
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5786
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #28, !dbg !5787
  ret void, !dbg !5788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5789 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5793, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i32 %1, metadata !5794, metadata !DIExpression()), !dbg !5797
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5798
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5795, metadata !DIExpression()), !dbg !5797
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5799
  call void @llvm.dbg.value(metadata i8* %4, metadata !5796, metadata !DIExpression()), !dbg !5797
  ret i8* %4, !dbg !5800
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5801 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5805, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 %1, metadata !5806, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 %2, metadata !5807, metadata !DIExpression()), !dbg !5817
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5818
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5818
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5808, metadata !DIExpression()), !dbg !5817
  %6 = sub i32 0, %1, !dbg !5819
  %7 = and i32 %6, %1, !dbg !5820
  call void @llvm.dbg.value(metadata i32 %7, metadata !5810, metadata !DIExpression()), !dbg !5817
  %8 = icmp eq i32 %7, %1, !dbg !5821
  br i1 %8, label %13, label %9, !dbg !5823

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5824
  call void @llvm.dbg.value(metadata i32 %10, metadata !5806, metadata !DIExpression()), !dbg !5817
  %11 = icmp ult i32 %7, 4, !dbg !5826
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5826
  br label %17, !dbg !5826

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5827
  br i1 %14, label %15, label %17, !dbg !5830

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #28, !dbg !5831
  br label %61, !dbg !5833

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5817
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5834
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5806, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 %19, metadata !5809, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 %18, metadata !5810, metadata !DIExpression()), !dbg !5817
  %21 = add i32 %20, -1, !dbg !5835
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5835, !range !5466
  %23 = icmp ult i32 %22, 2, !dbg !5835
  br i1 %23, label %25, label %24, !dbg !5838

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #27, !dbg !5839
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #27, !dbg !5839
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #27, !dbg !5839
  unreachable, !dbg !5839

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !5841
  br i1 %26, label %61, label %27, !dbg !5843

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #28, !dbg !5844
  br i1 %28, label %61, label %29, !dbg !5845

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !5846
  %31 = add i32 %30, %20, !dbg !5847
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #28, !dbg !5848, !range !5297
  call void @llvm.dbg.value(metadata i32 %32, metadata !5811, metadata !DIExpression()), !dbg !5817
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #28, !dbg !5849
  call void @llvm.dbg.value(metadata i32 %33, metadata !5812, metadata !DIExpression()), !dbg !5817
  %34 = icmp eq i32 %33, 0, !dbg !5850
  br i1 %34, label %61, label %35, !dbg !5852

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #28, !dbg !5853
  call void @llvm.dbg.value(metadata i8* %36, metadata !5813, metadata !DIExpression()), !dbg !5817
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !5854
  %38 = ptrtoint i8* %37 to i32, !dbg !5854
  %39 = add i32 %21, %38, !dbg !5854
  %40 = sub i32 0, %20, !dbg !5854
  %41 = and i32 %39, %40, !dbg !5854
  %42 = inttoptr i32 %41 to i8*, !dbg !5855
  %43 = sub i32 0, %18, !dbg !5856
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !5856
  call void @llvm.dbg.value(metadata i8* %44, metadata !5813, metadata !DIExpression()), !dbg !5817
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !5857
  %46 = ptrtoint i8* %45 to i32, !dbg !5857
  %47 = add i32 %46, 7, !dbg !5857
  %48 = and i32 %47, -8, !dbg !5857
  call void @llvm.dbg.value(metadata i32 %48, metadata !5814, metadata !DIExpression()), !dbg !5817
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #28, !dbg !5858
  call void @llvm.dbg.value(metadata i32 %49, metadata !5815, metadata !DIExpression()), !dbg !5817
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #28, !dbg !5859
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !5860
  %52 = sub i32 %48, %51, !dbg !5860
  %53 = ashr exact i32 %52, 3, !dbg !5860
  call void @llvm.dbg.value(metadata i32 %53, metadata !5816, metadata !DIExpression()), !dbg !5817
  %54 = icmp ugt i32 %49, %33, !dbg !5861
  br i1 %54, label %55, label %56, !dbg !5863

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #28, !dbg !5864
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #28, !dbg !5866
  br label %56, !dbg !5867

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #28, !dbg !5868
  %58 = icmp ugt i32 %57, %53, !dbg !5870
  br i1 %58, label %59, label %60, !dbg !5871

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #28, !dbg !5872
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #28, !dbg !5874
  br label %60, !dbg !5875

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #28, !dbg !5876
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5817
  ret i8* %62, !dbg !5877
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5878 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5882, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i8* %1, metadata !5883, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i32 %2, metadata !5884, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i32 %3, metadata !5885, metadata !DIExpression()), !dbg !5901
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5902
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5902
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5886, metadata !DIExpression()), !dbg !5901
  %7 = icmp eq i8* %1, null, !dbg !5903
  br i1 %7, label %8, label %10, !dbg !5905

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #28, !dbg !5906
  br label %63, !dbg !5908

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5909
  br i1 %11, label %12, label %13, !dbg !5911

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #28, !dbg !5912
  br label %63, !dbg !5914

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !5915
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !5915, !range !5466
  %16 = icmp ult i32 %15, 2, !dbg !5915
  br i1 %16, label %18, label %17, !dbg !5918

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #27, !dbg !5919
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #27, !dbg !5919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #27, !dbg !5919
  unreachable, !dbg !5919

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #28, !dbg !5921
  br i1 %19, label %63, label %20, !dbg !5923

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #28, !dbg !5924, !range !5297
  call void @llvm.dbg.value(metadata i32 %21, metadata !5887, metadata !DIExpression()), !dbg !5901
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5925
  call void @llvm.dbg.value(metadata i32 %22, metadata !5888, metadata !DIExpression()), !dbg !5901
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5926
  %24 = ptrtoint i8* %1 to i32, !dbg !5927
  %25 = ptrtoint i8* %23 to i32, !dbg !5927
  %26 = sub i32 %24, %25, !dbg !5927
  call void @llvm.dbg.value(metadata i32 %26, metadata !5889, metadata !DIExpression()), !dbg !5901
  %27 = add i32 %26, %3, !dbg !5928
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #28, !dbg !5929
  call void @llvm.dbg.value(metadata i32 %28, metadata !5890, metadata !DIExpression()), !dbg !5901
  %29 = icmp eq i32 %2, 0, !dbg !5930
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !5931
  br i1 %32, label %33, label %53, !dbg !5931

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5932
  %35 = icmp eq i32 %28, %34, !dbg !5933
  br i1 %35, label %63, label %36, !dbg !5934

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !5935
  br i1 %37, label %38, label %40, !dbg !5936

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !5937
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #28, !dbg !5939
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #28, !dbg !5940
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #28, !dbg !5941
  br label %63, !dbg !5942

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5943
  br i1 %41, label %53, label %42, !dbg !5944

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5945
  %44 = add i32 %43, %34, !dbg !5946
  %45 = icmp ult i32 %44, %28, !dbg !5947
  br i1 %45, label %53, label %46, !dbg !5948

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !5949
  call void @llvm.dbg.value(metadata i32 %47, metadata !5891, metadata !DIExpression()), !dbg !5950
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5951
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5952
  %49 = icmp ult i32 %47, %48, !dbg !5954
  br i1 %49, label %50, label %52, !dbg !5955

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !5956
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #28, !dbg !5958
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #28, !dbg !5959
  br label %52, !dbg !5960

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #28, !dbg !5961
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #28, !dbg !5962
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #28, !dbg !5963
  call void @llvm.dbg.value(metadata i8* %54, metadata !5897, metadata !DIExpression()), !dbg !5901
  %55 = icmp eq i8* %54, null, !dbg !5964
  br i1 %55, label %63, label %56, !dbg !5965

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5966, !range !5409
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #28, !dbg !5967
  %59 = sub i32 %58, %26, !dbg !5968
  call void @llvm.dbg.value(metadata i32 %59, metadata !5898, metadata !DIExpression()), !dbg !5969
  %60 = icmp ult i32 %59, %3, !dbg !5970
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !5970
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #27, !dbg !5971
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #28, !dbg !5972
  br label %63, !dbg !5973

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !5901
  ret i8* %64, !dbg !5974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5975 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5979, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 %1, metadata !5980, metadata !DIExpression()), !dbg !5981
  %3 = shl i32 %1, 3, !dbg !5982
  %4 = add i32 %3, -4, !dbg !5983
  ret i32 %4, !dbg !5984
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5985 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5989, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i8* %1, metadata !5990, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i32 %2, metadata !5991, metadata !DIExpression()), !dbg !6000
  %4 = icmp ult i32 %2, 262144, !dbg !6001
  br i1 %4, label %6, label %5, !dbg !6006

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.51, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #27, !dbg !6007
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.52, i32 0, i32 0)) #27, !dbg !6007
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #27, !dbg !6007
  unreachable, !dbg !6007

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !6009
  br i1 %7, label %9, label %8, !dbg !6012

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #27, !dbg !6013
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !6013
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #27, !dbg !6013
  unreachable, !dbg !6013

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !6015
  call void @llvm.dbg.value(metadata i32 %10, metadata !5991, metadata !DIExpression()), !dbg !6000
  %11 = ptrtoint i8* %1 to i32, !dbg !6016
  %12 = add i32 %11, 7, !dbg !6016
  %13 = and i32 %12, -8, !dbg !6016
  call void @llvm.dbg.value(metadata i32 %13, metadata !5992, metadata !DIExpression()), !dbg !6000
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !6017
  %15 = ptrtoint i8* %14 to i32, !dbg !6017
  %16 = and i32 %15, -8, !dbg !6017
  call void @llvm.dbg.value(metadata i32 %16, metadata !5993, metadata !DIExpression()), !dbg !6000
  %17 = sub i32 %16, %13, !dbg !6018
  %18 = lshr exact i32 %17, 3, !dbg !6019
  call void @llvm.dbg.value(metadata i32 %18, metadata !5994, metadata !DIExpression()), !dbg !6000
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #28, !dbg !6020
  %20 = icmp ugt i32 %18, %19, !dbg !6020
  br i1 %20, label %22, label %21, !dbg !6023

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #27, !dbg !6024
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !6024
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #27, !dbg !6024
  unreachable, !dbg !6024

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !6026
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !5995, metadata !DIExpression()), !dbg !6000
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6027
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !6028
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !6029
  store i32 %18, i32* %25, align 8, !dbg !6030
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !6031
  store i32 0, i32* %26, align 4, !dbg !6032
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #28, !dbg !6033
  call void @llvm.dbg.value(metadata i32 %27, metadata !5996, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6000
  %28 = shl i32 %27, 2, !dbg !6034
  %29 = add i32 %28, 20, !dbg !6035
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #28, !dbg !6036
  call void @llvm.dbg.value(metadata i32 %30, metadata !5997, metadata !DIExpression()), !dbg !6000
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #28, !dbg !6037
  %32 = add i32 %31, %30, !dbg !6037
  %33 = icmp ugt i32 %32, %18, !dbg !6037
  br i1 %33, label %36, label %34, !dbg !6040

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !5998, metadata !DIExpression()), !dbg !6041
  %35 = icmp slt i32 %27, 0, !dbg !6042
  br i1 %35, label %37, label %39, !dbg !6044

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #27, !dbg !6045
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !6045
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #27, !dbg !6045
  unreachable, !dbg !6045

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #28, !dbg !6047
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #28, !dbg !6048
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #28, !dbg !6049
  %38 = sub i32 %18, %30, !dbg !6050
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #28, !dbg !6051
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #28, !dbg !6052
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #28, !dbg !6053
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #28, !dbg !6054
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #28, !dbg !6055
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #28, !dbg !6056
  ret void, !dbg !6057

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !5998, metadata !DIExpression()), !dbg !6041
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !6058
  store i32 0, i32* %41, align 4, !dbg !6060
  %42 = add nuw i32 %40, 1, !dbg !6061
  call void @llvm.dbg.value(metadata i32 %42, metadata !5998, metadata !DIExpression()), !dbg !6041
  %43 = icmp eq i32 %40, %27, !dbg !6042
  br i1 %43, label %37, label %39, !dbg !6044, !llvm.loop !6062
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !6064 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !6077, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6074, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %1, metadata !6075, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %2, metadata !6076, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %4, metadata !6078, metadata !DIExpression()), !dbg !6203
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6204
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6204
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !6079, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i32 0, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i1 undef, metadata !6085, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6203
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6206

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6206

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6207
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !6077, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %30, metadata !6076, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %29, metadata !6083, metadata !DIExpression()), !dbg !6203
  %31 = load i8, i8* %30, align 1, !dbg !6208
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6206

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6208
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6209
  call void @llvm.dbg.value(metadata i8* %34, metadata !6076, metadata !DIExpression()), !dbg !6203
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !6209
  call void @llvm.dbg.value(metadata i32 %35, metadata !6087, metadata !DIExpression()), !dbg !6210
  %36 = icmp slt i32 %35, 0, !dbg !6211
  %37 = add i32 %29, 1, !dbg !6209
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %36, label %365, label %28, !llvm.loop !6213

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6215
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6092, metadata !DIExpression()), !dbg !6216
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6216
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6135, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6138, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8* %30, metadata !6141, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i32 -1, metadata !6142, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i32 -1, metadata !6143, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8* null, metadata !6144, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8* %14, metadata !6145, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8 0, metadata !6146, metadata !DIExpression()), !dbg !6217
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #28, !dbg !6218
  call void @llvm.dbg.value(metadata i8* %39, metadata !6076, metadata !DIExpression()), !dbg !6203
  %40 = load i24, i24* %15, align 8, !dbg !6219
  %41 = and i24 %40, 256, !dbg !6219
  %42 = icmp eq i24 %41, 0, !dbg !6219
  br i1 %42, label %51, label %43, !dbg !6221

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6222
  call void @llvm.dbg.value(metadata i8* %44, metadata !6077, metadata !DIExpression()), !dbg !6203
  %45 = bitcast i8* %27 to i32*, !dbg !6222
  %46 = load i32, i32* %45, align 4, !dbg !6222
  call void @llvm.dbg.value(metadata i32 %46, metadata !6142, metadata !DIExpression()), !dbg !6217
  %47 = icmp slt i32 %46, 0, !dbg !6224
  br i1 %47, label %48, label %56, !dbg !6226

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6227
  store i24 %49, i24* %15, align 8, !dbg !6227
  %50 = sub nsw i32 0, %46, !dbg !6229
  call void @llvm.dbg.value(metadata i32 %50, metadata !6142, metadata !DIExpression()), !dbg !6217
  br label %56, !dbg !6230

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6231
  %53 = icmp eq i24 %52, 0, !dbg !6231
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6233
  br label %56, !dbg !6233

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6234
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6217
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !6077, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %58, metadata !6142, metadata !DIExpression()), !dbg !6217
  %60 = and i24 %57, 1024, !dbg !6234
  %61 = icmp eq i24 %60, 0, !dbg !6234
  br i1 %61, label %69, label %62, !dbg !6235

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6236
  call void @llvm.dbg.value(metadata i8* %63, metadata !6077, metadata !DIExpression()), !dbg !6203
  %64 = bitcast i8* %59 to i32*, !dbg !6236
  %65 = load i32, i32* %64, align 4, !dbg !6236
  call void @llvm.dbg.value(metadata i32 %65, metadata !6147, metadata !DIExpression()), !dbg !6237
  %66 = icmp slt i32 %65, 0, !dbg !6238
  br i1 %66, label %67, label %74, !dbg !6240

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6241
  store i24 %68, i24* %15, align 8, !dbg !6241
  br label %74, !dbg !6243

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6244
  %71 = icmp eq i24 %70, 0, !dbg !6244
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6246
  br label %74, !dbg !6246

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6247
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6217
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6217
  call void @llvm.dbg.value(metadata i8* %77, metadata !6077, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %76, metadata !6143, metadata !DIExpression()), !dbg !6217
  store i32 0, i32* %16, align 4, !dbg !6248
  store i32 0, i32* %17, align 8, !dbg !6249
  %78 = lshr i24 %75, 16, !dbg !6247
  call void @llvm.dbg.value(metadata i24 %78, metadata !6150, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6217
  %79 = lshr i24 %75, 11, !dbg !6250
  %80 = and i24 %79, 15, !dbg !6250
  %81 = zext i24 %80 to i32, !dbg !6250
  call void @llvm.dbg.value(metadata i32 %81, metadata !6151, metadata !DIExpression()), !dbg !6217
  %82 = trunc i24 %78 to i3, !dbg !6251
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6251

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6252

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6255
  call void @llvm.dbg.value(metadata i8* %85, metadata !6077, metadata !DIExpression()), !dbg !6203
  %86 = bitcast i8* %77 to i32*, !dbg !6255
  %87 = load i32, i32* %86, align 4, !dbg !6255
  %88 = sext i32 %87 to i64, !dbg !6255
  store i64 %88, i64* %20, align 8, !dbg !6257
  br label %115, !dbg !6258

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6259
  call void @llvm.dbg.value(metadata i8* %90, metadata !6077, metadata !DIExpression()), !dbg !6203
  %91 = bitcast i8* %77 to i32*, !dbg !6259
  %92 = load i32, i32* %91, align 4, !dbg !6259
  %93 = sext i32 %92 to i64, !dbg !6259
  store i64 %93, i64* %20, align 8, !dbg !6262
  br label %115, !dbg !6263

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6264
  %96 = add i32 %95, 7, !dbg !6264
  %97 = and i32 %96, -8, !dbg !6264
  %98 = inttoptr i32 %97 to i8*, !dbg !6264
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6264
  call void @llvm.dbg.value(metadata i8* %99, metadata !6077, metadata !DIExpression()), !dbg !6203
  %100 = inttoptr i32 %97 to i64*, !dbg !6264
  %101 = load i64, i64* %100, align 8, !dbg !6264
  store i64 %101, i64* %20, align 8, !dbg !6265
  br label %115, !dbg !6266

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6267
  %104 = add i32 %103, 7, !dbg !6267
  %105 = and i32 %104, -8, !dbg !6267
  %106 = inttoptr i32 %105 to i8*, !dbg !6267
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6267
  call void @llvm.dbg.value(metadata i8* %107, metadata !6077, metadata !DIExpression()), !dbg !6203
  %108 = inttoptr i32 %105 to i64*, !dbg !6267
  %109 = load i64, i64* %108, align 8, !dbg !6267
  store i64 %109, i64* %20, align 8, !dbg !6268
  br label %115, !dbg !6269

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6270
  call void @llvm.dbg.value(metadata i8* %111, metadata !6077, metadata !DIExpression()), !dbg !6203
  %112 = bitcast i8* %77 to i32*, !dbg !6270
  %113 = load i32, i32* %112, align 4, !dbg !6270
  %114 = sext i32 %113 to i64, !dbg !6271
  store i64 %114, i64* %20, align 8, !dbg !6272
  br label %115, !dbg !6273

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6274
  call void @llvm.dbg.value(metadata i8* %117, metadata !6077, metadata !DIExpression()), !dbg !6203
  %118 = trunc i24 %79 to i4, !dbg !6275
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6275

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6276
  %121 = ashr exact i64 %120, 56, !dbg !6276
  store i64 %121, i64* %20, align 8, !dbg !6279
  br label %177, !dbg !6280

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6281
  %124 = ashr exact i64 %123, 48, !dbg !6281
  store i64 %124, i64* %20, align 8, !dbg !6284
  br label %177, !dbg !6285

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6286

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6289
  call void @llvm.dbg.value(metadata i8* %127, metadata !6077, metadata !DIExpression()), !dbg !6203
  %128 = bitcast i8* %77 to i32*, !dbg !6289
  %129 = load i32, i32* %128, align 4, !dbg !6289
  %130 = zext i32 %129 to i64, !dbg !6289
  store i64 %130, i64* %20, align 8, !dbg !6291
  br label %157, !dbg !6292

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6293
  call void @llvm.dbg.value(metadata i8* %132, metadata !6077, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %132, metadata !6077, metadata !DIExpression()), !dbg !6203
  %133 = bitcast i8* %77 to i32*, !dbg !6293
  %134 = load i32, i32* %133, align 4, !dbg !6293
  %135 = zext i32 %134 to i64, !dbg !6293
  store i64 %135, i64* %20, align 8, !dbg !6293
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6295
  %138 = add i32 %137, 7, !dbg !6295
  %139 = and i32 %138, -8, !dbg !6295
  %140 = inttoptr i32 %139 to i8*, !dbg !6295
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6295
  call void @llvm.dbg.value(metadata i8* %141, metadata !6077, metadata !DIExpression()), !dbg !6203
  %142 = inttoptr i32 %139 to i64*, !dbg !6295
  %143 = load i64, i64* %142, align 8, !dbg !6295
  store i64 %143, i64* %20, align 8, !dbg !6296
  br label %157, !dbg !6297

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6298
  %146 = add i32 %145, 7, !dbg !6298
  %147 = and i32 %146, -8, !dbg !6298
  %148 = inttoptr i32 %147 to i8*, !dbg !6298
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6298
  call void @llvm.dbg.value(metadata i8* %149, metadata !6077, metadata !DIExpression()), !dbg !6203
  %150 = inttoptr i32 %147 to i64*, !dbg !6298
  %151 = load i64, i64* %150, align 8, !dbg !6298
  store i64 %151, i64* %20, align 8, !dbg !6299
  br label %157, !dbg !6300

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6301
  call void @llvm.dbg.value(metadata i8* %153, metadata !6077, metadata !DIExpression()), !dbg !6203
  %154 = bitcast i8* %77 to i32*, !dbg !6301
  %155 = load i32, i32* %154, align 4, !dbg !6301
  %156 = zext i32 %155 to i64, !dbg !6302
  store i64 %156, i64* %20, align 8, !dbg !6303
  br label %157, !dbg !6304

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6305
  call void @llvm.dbg.value(metadata i8* %159, metadata !6077, metadata !DIExpression()), !dbg !6203
  %160 = trunc i24 %79 to i4, !dbg !6306
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6306

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6307
  store i64 %162, i64* %20, align 8, !dbg !6310
  br label %177, !dbg !6311

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6312
  store i64 %164, i64* %20, align 8, !dbg !6315
  br label %177, !dbg !6316

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6317
  %167 = add i32 %166, 7, !dbg !6317
  %168 = and i32 %167, -8, !dbg !6317
  %169 = inttoptr i32 %168 to i8*, !dbg !6317
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6317
  call void @llvm.dbg.value(metadata i8* %170, metadata !6077, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %170, metadata !6077, metadata !DIExpression()), !dbg !6203
  %171 = inttoptr i32 %168 to double*, !dbg !6317
  %172 = load double, double* %171, align 8, !dbg !6317
  store double %172, double* %19, align 8, !dbg !6317
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6321
  call void @llvm.dbg.value(metadata i8* %174, metadata !6077, metadata !DIExpression()), !dbg !6203
  %175 = bitcast i8* %77 to i8**, !dbg !6321
  %176 = load i8*, i8** %175, align 4, !dbg !6321
  store i8* %176, i8** %18, align 8, !dbg !6324
  br label %177, !dbg !6325

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6217
  call void @llvm.dbg.value(metadata i8* %178, metadata !6077, metadata !DIExpression()), !dbg !6203
  %179 = and i24 %75, 3, !dbg !6326
  %180 = icmp eq i24 %179, 0, !dbg !6326
  br i1 %180, label %185, label %181, !dbg !6326

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #28, !dbg !6327
  call void @llvm.dbg.value(metadata i32 %182, metadata !6152, metadata !DIExpression()), !dbg !6328
  %183 = icmp slt i32 %182, 0, !dbg !6329
  %184 = add i32 %182, %29, !dbg !6327
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6331
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6332

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !6333
  call void @llvm.dbg.value(metadata i32 %188, metadata !6156, metadata !DIExpression()), !dbg !6334
  %189 = icmp slt i32 %188, 0, !dbg !6335
  %190 = add i32 %29, 1, !dbg !6333
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6337
  call void @llvm.dbg.value(metadata i8* %192, metadata !6144, metadata !DIExpression()), !dbg !6217
  %193 = icmp sgt i32 %76, -1, !dbg !6338
  br i1 %193, label %194, label %196, !dbg !6340

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !6341
  call void @llvm.dbg.value(metadata i32 %195, metadata !6159, metadata !DIExpression()), !dbg !6343
  br label %241, !dbg !6344

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !6345
  call void @llvm.dbg.value(metadata i32 %197, metadata !6159, metadata !DIExpression()), !dbg !6343
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6144, metadata !DIExpression()), !dbg !6217
  %199 = load i64, i64* %20, align 8, !dbg !6347
  %200 = trunc i64 %199 to i8, !dbg !6348
  store i8 %200, i8* %10, align 1, !dbg !6349
  call void @llvm.dbg.value(metadata i8* %23, metadata !6145, metadata !DIExpression()), !dbg !6217
  br label %245, !dbg !6350

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6351
  %203 = icmp eq i24 %202, 0, !dbg !6351
  %204 = trunc i24 %75 to i8, !dbg !6353
  %205 = shl i8 %204, 1, !dbg !6353
  %206 = and i8 %205, 32, !dbg !6353
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6353
  call void @llvm.dbg.value(metadata i8 %207, metadata !6146, metadata !DIExpression()), !dbg !6217
  %208 = load i64, i64* %20, align 8, !dbg !6354
  call void @llvm.dbg.value(metadata i64 %208, metadata !6084, metadata !DIExpression()), !dbg !6203
  %209 = icmp slt i64 %208, 0, !dbg !6355
  br i1 %209, label %210, label %212, !dbg !6357

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6146, metadata !DIExpression()), !dbg !6217
  %211 = sub nsw i64 0, %208, !dbg !6358
  store i64 %211, i64* %20, align 8, !dbg !6360
  br label %212, !dbg !6361

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6217
  call void @llvm.dbg.value(metadata i8 %213, metadata !6146, metadata !DIExpression()), !dbg !6217
  %214 = load i64, i64* %20, align 8, !dbg !6362
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #28, !dbg !6363
  call void @llvm.dbg.value(metadata i8* %215, metadata !6144, metadata !DIExpression()), !dbg !6217
  br label %216, !dbg !6364

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6365
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6366
  call void @llvm.dbg.value(metadata i8* %218, metadata !6144, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8 %217, metadata !6146, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.label(metadata !6202), !dbg !6367
  %219 = icmp sgt i32 %76, -1, !dbg !6368
  br i1 %219, label %222, label %220, !dbg !6369

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6370
  br label %245, !dbg !6369

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6372
  %224 = sub i32 %22, %223, !dbg !6372
  call void @llvm.dbg.value(metadata i32 %224, metadata !6161, metadata !DIExpression()), !dbg !6373
  %225 = load i24, i24* %15, align 8, !dbg !6374
  %226 = and i24 %225, -65, !dbg !6374
  store i24 %226, i24* %15, align 8, !dbg !6374
  %227 = icmp ugt i32 %76, %224, !dbg !6375
  br i1 %227, label %228, label %245, !dbg !6377

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6378
  store i32 %229, i32* %16, align 4, !dbg !6380
  br label %245, !dbg !6381

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6382
  %232 = icmp eq i8* %231, null, !dbg !6384
  br i1 %232, label %245, label %233, !dbg !6385

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6386
  %235 = zext i32 %234 to i64, !dbg !6386
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #28, !dbg !6388
  call void @llvm.dbg.value(metadata i8* %236, metadata !6144, metadata !DIExpression()), !dbg !6217
  %237 = load i24, i24* %15, align 8, !dbg !6389
  %238 = or i24 %237, 1048576, !dbg !6389
  store i24 %238, i24* %15, align 8, !dbg !6389
  store i8 120, i8* %21, align 1, !dbg !6390
  br label %216, !dbg !6391

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6392
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #28, !dbg !6395
  br label %363, !dbg !6396

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6397
  call void @llvm.dbg.value(metadata i32 %242, metadata !6159, metadata !DIExpression()), !dbg !6343
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6398
  call void @llvm.dbg.value(metadata i32 -1, metadata !6143, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i32 %29, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %192, metadata !6144, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8* %243, metadata !6145, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8 0, metadata !6146, metadata !DIExpression()), !dbg !6217
  %244 = icmp eq i8* %192, null, !dbg !6399
  br i1 %244, label %363, label %245, !dbg !6401, !llvm.loop !6213

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6370
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6217
  call void @llvm.dbg.value(metadata i32 0, metadata !6165, metadata !DIExpression()), !dbg !6217
  %250 = zext i8 %249 to i32, !dbg !6402
  %251 = icmp eq i8 %249, 0, !dbg !6404
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  call void @llvm.dbg.value(metadata i32 undef, metadata !6164, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  call void @llvm.dbg.value(metadata i32 undef, metadata !6164, metadata !DIExpression()), !dbg !6217
  %252 = icmp sgt i32 %58, 0, !dbg !6405
  br i1 %252, label %253, label %302, !dbg !6406

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6370
  %255 = icmp eq i24 %254, 0, !dbg !6370
  %256 = ptrtoint i8* %248 to i32, !dbg !6407
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  %257 = ptrtoint i8* %247 to i32, !dbg !6407
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  %258 = xor i1 %251, true, !dbg !6408
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  %259 = sext i1 %258 to i32, !dbg !6408
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  %260 = lshr i24 %246, 19, !dbg !6409
  %261 = and i24 %260, 1, !dbg !6409
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6409
  %263 = zext i24 %262 to i32, !dbg !6409
  %264 = add i32 %257, %259, !dbg !6409
  %265 = add i32 %256, %263, !dbg !6409
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  %266 = and i24 %246, 4194304, !dbg !6410
  %267 = icmp eq i24 %266, 0, !dbg !6410
  %268 = load i32, i32* %16, align 4, !dbg !6412
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  call void @llvm.dbg.value(metadata i32 undef, metadata !6164, metadata !DIExpression()), !dbg !6217
  %269 = load i32, i32* %17, align 8, !dbg !6413
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6413
  call void @llvm.dbg.value(metadata i32 undef, metadata !6164, metadata !DIExpression()), !dbg !6217
  %271 = add i32 %264, %58, !dbg !6413
  %272 = add i32 %265, %268, !dbg !6413
  %273 = add i32 %272, %270, !dbg !6414
  %274 = sub i32 %271, %273, !dbg !6414
  call void @llvm.dbg.value(metadata i32 %274, metadata !6142, metadata !DIExpression()), !dbg !6217
  %275 = and i24 %246, 4, !dbg !6415
  %276 = icmp eq i24 %275, 0, !dbg !6415
  br i1 %276, label %277, label %302, !dbg !6416

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6166, metadata !DIExpression()), !dbg !6417
  %278 = and i24 %246, 64, !dbg !6418
  %279 = icmp eq i24 %278, 0, !dbg !6418
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6419
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6419
  %282 = select i1 %279, i32 32, i32 48, !dbg !6419
  br i1 %280, label %287, label %283, !dbg !6419

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !6420
  call void @llvm.dbg.value(metadata i32 %284, metadata !6171, metadata !DIExpression()), !dbg !6421
  %285 = icmp slt i32 %284, 0, !dbg !6422
  %286 = add i32 %29, 1, !dbg !6420
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6217
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %290, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8 undef, metadata !6166, metadata !DIExpression()), !dbg !6417
  call void @llvm.dbg.value(metadata i8 %288, metadata !6146, metadata !DIExpression()), !dbg !6217
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6424
  %292 = add i32 %291, -1, !dbg !6424
  br label %293, !dbg !6424

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6425
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %295, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %294, metadata !6142, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i32 %294, metadata !6142, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6217
  %296 = icmp sgt i32 %294, 0, !dbg !6426
  br i1 %296, label %297, label %302, !dbg !6424

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6427
  call void @llvm.dbg.value(metadata i32 %298, metadata !6142, metadata !DIExpression()), !dbg !6217
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !6428
  call void @llvm.dbg.value(metadata i32 %299, metadata !6177, metadata !DIExpression()), !dbg !6429
  %300 = icmp slt i32 %299, 0, !dbg !6430
  %301 = add i32 %295, 1, !dbg !6428
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %300, label %361, label %293, !llvm.loop !6432

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6217
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6217
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %305, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %304, metadata !6142, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8 %303, metadata !6146, metadata !DIExpression()), !dbg !6217
  %306 = icmp eq i8 %303, 0, !dbg !6434
  br i1 %306, label %312, label %307, !dbg !6435

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6436
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !6437
  call void @llvm.dbg.value(metadata i32 %309, metadata !6180, metadata !DIExpression()), !dbg !6438
  %310 = icmp slt i32 %309, 0, !dbg !6439
  %311 = add i32 %305, 1, !dbg !6437
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %313, metadata !6083, metadata !DIExpression()), !dbg !6203
  %314 = lshr i24 %246, 20, !dbg !6441
  %315 = lshr i24 %246, 19, !dbg !6442
  %316 = or i24 %314, %315, !dbg !6443
  %317 = and i24 %316, 1, !dbg !6443
  %318 = icmp eq i24 %317, 0, !dbg !6443
  br i1 %318, label %323, label %319, !dbg !6444

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !6445
  call void @llvm.dbg.value(metadata i32 %320, metadata !6184, metadata !DIExpression()), !dbg !6446
  %321 = icmp slt i32 %320, 0, !dbg !6447
  %322 = add i32 %313, 1, !dbg !6445
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %324, metadata !6083, metadata !DIExpression()), !dbg !6203
  %325 = and i24 %246, 1048576, !dbg !6449
  %326 = icmp eq i24 %325, 0, !dbg !6449
  br i1 %326, label %333, label %327, !dbg !6450

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6451
  %329 = zext i8 %328 to i32, !dbg !6451
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !6451
  call void @llvm.dbg.value(metadata i32 %330, metadata !6190, metadata !DIExpression()), !dbg !6452
  %331 = icmp slt i32 %330, 0, !dbg !6453
  %332 = add i32 %324, 1, !dbg !6451
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %334, metadata !6083, metadata !DIExpression()), !dbg !6203
  %335 = load i32, i32* %16, align 4, !dbg !6455
  call void @llvm.dbg.value(metadata i32 %335, metadata !6165, metadata !DIExpression()), !dbg !6217
  br label %336, !dbg !6456

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6457
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %338, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %337, metadata !6165, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6217
  %339 = icmp sgt i32 %337, 0, !dbg !6458
  br i1 %339, label %340, label %345, !dbg !6456

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6459
  call void @llvm.dbg.value(metadata i32 %341, metadata !6165, metadata !DIExpression()), !dbg !6217
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !6460
  call void @llvm.dbg.value(metadata i32 %342, metadata !6194, metadata !DIExpression()), !dbg !6461
  %343 = icmp slt i32 %342, 0, !dbg !6462
  %344 = add i32 %338, 1, !dbg !6460
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %343, label %361, label %336, !llvm.loop !6464

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #28, !dbg !6466
  call void @llvm.dbg.value(metadata i32 %346, metadata !6197, metadata !DIExpression()), !dbg !6467
  %347 = icmp slt i32 %346, 0, !dbg !6468
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6466
  call void @llvm.dbg.value(metadata i32 %349, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %304, metadata !6142, metadata !DIExpression()), !dbg !6217
  %350 = icmp sgt i32 %304, 0, !dbg !6470
  br i1 %350, label %351, label %363, !dbg !6471

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6471
  %353 = add i32 %352, %338, !dbg !6471
  br label %354, !dbg !6471

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %355, metadata !6142, metadata !DIExpression()), !dbg !6217
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !6472
  call void @llvm.dbg.value(metadata i32 %356, metadata !6199, metadata !DIExpression()), !dbg !6473
  %357 = icmp slt i32 %356, 0, !dbg !6474
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6476
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %359, metadata !6142, metadata !DIExpression()), !dbg !6217
  %360 = icmp sgt i32 %355, 1, !dbg !6470
  br i1 %360, label %354, label %363, !dbg !6471, !llvm.loop !6477

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6214
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %364, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6214
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6203
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6479
  ret i32 %366, !dbg !6479
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #16

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6480 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6484, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.value(metadata i8* %1, metadata !6485, metadata !DIExpression()), !dbg !6486
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6487
  store i24 0, i24* %3, align 4, !dbg !6487
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6487
  store i8 0, i8* %4, align 1, !dbg !6487
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6487
  store i32 0, i32* %5, align 4, !dbg !6487
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6487
  store i32 0, i32* %6, align 4, !dbg !6487
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6488
  call void @llvm.dbg.value(metadata i8* %7, metadata !6485, metadata !DIExpression()), !dbg !6486
  %8 = load i8, i8* %7, align 1, !dbg !6489
  %9 = icmp eq i8 %8, 37, !dbg !6491
  br i1 %9, label %10, label %12, !dbg !6492

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6493
  call void @llvm.dbg.value(metadata i8* %11, metadata !6485, metadata !DIExpression()), !dbg !6486
  store i8 37, i8* %4, align 1, !dbg !6495
  br label %18, !dbg !6496

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #28, !dbg !6497
  call void @llvm.dbg.value(metadata i8* %13, metadata !6485, metadata !DIExpression()), !dbg !6486
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #28, !dbg !6498
  call void @llvm.dbg.value(metadata i8* %14, metadata !6485, metadata !DIExpression()), !dbg !6486
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #28, !dbg !6499
  call void @llvm.dbg.value(metadata i8* %15, metadata !6485, metadata !DIExpression()), !dbg !6486
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #28, !dbg !6500
  call void @llvm.dbg.value(metadata i8* %16, metadata !6485, metadata !DIExpression()), !dbg !6486
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #28, !dbg !6501
  call void @llvm.dbg.value(metadata i8* %17, metadata !6485, metadata !DIExpression()), !dbg !6486
  br label %18, !dbg !6502

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6486
  ret i8* %19, !dbg !6503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6504 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6508, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i8* %1, metadata !6509, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i8* %2, metadata !6510, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i8* %3, metadata !6511, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i32 0, metadata !6512, metadata !DIExpression()), !dbg !6515
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6516

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6517
  call void @llvm.dbg.value(metadata i32 %9, metadata !6512, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i8* %8, metadata !6510, metadata !DIExpression()), !dbg !6515
  %10 = icmp ult i8* %8, %3, !dbg !6518
  br i1 %10, label %11, label %13, !dbg !6519

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6520
  br label %17, !dbg !6519

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6521

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6522
  %16 = icmp eq i8 %15, 0, !dbg !6521
  br i1 %16, label %24, label %17, !dbg !6516

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6520
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6523
  call void @llvm.dbg.value(metadata i8* %19, metadata !6510, metadata !DIExpression()), !dbg !6515
  %20 = zext i8 %18 to i32, !dbg !6524
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !6525
  call void @llvm.dbg.value(metadata i32 %21, metadata !6513, metadata !DIExpression()), !dbg !6526
  %22 = icmp slt i32 %21, 0, !dbg !6527
  %23 = add i32 %9, 1, !dbg !6529
  call void @llvm.dbg.value(metadata i32 undef, metadata !6512, metadata !DIExpression()), !dbg !6515
  br i1 %22, label %24, label %7, !llvm.loop !6530

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6515
  ret i32 %25, !dbg !6532
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #17 !dbg !6533 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6537, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6538, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i8* %2, metadata !6539, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i8* %3, metadata !6540, metadata !DIExpression()), !dbg !6547
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6548
  %6 = load i8, i8* %5, align 1, !dbg !6548
  %7 = zext i8 %6 to i32, !dbg !6549
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #28, !dbg !6550
  %9 = icmp eq i32 %8, 0, !dbg !6550
  call void @llvm.dbg.value(metadata i1 %9, metadata !6541, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6547
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #28, !dbg !6551
  call void @llvm.dbg.value(metadata i32 %10, metadata !6542, metadata !DIExpression()), !dbg !6547
  %11 = ptrtoint i8* %3 to i32, !dbg !6552
  %12 = ptrtoint i8* %2 to i32, !dbg !6552
  %13 = sub i32 %11, %12, !dbg !6552
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6553
  call void @llvm.dbg.value(metadata i8* %14, metadata !6544, metadata !DIExpression()), !dbg !6547
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6554

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6547
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6537, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i8* %18, metadata !6544, metadata !DIExpression()), !dbg !6547
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6555
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6556
  call void @llvm.dbg.value(metadata i32 %25, metadata !6545, metadata !DIExpression()), !dbg !6557
  %26 = icmp ult i32 %25, 10, !dbg !6558
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6559
  %28 = add i32 %27, %25, !dbg !6557
  %29 = trunc i32 %28 to i8, !dbg !6559
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6560
  call void @llvm.dbg.value(metadata i8* %30, metadata !6544, metadata !DIExpression()), !dbg !6547
  store i8 %29, i8* %30, align 1, !dbg !6561
  call void @llvm.dbg.value(metadata i64 %22, metadata !6537, metadata !DIExpression()), !dbg !6547
  %31 = icmp uge i64 %19, %15, !dbg !6562
  %32 = icmp ugt i8* %30, %2, !dbg !6563
  %33 = and i1 %31, %32, !dbg !6563
  br i1 %33, label %17, label %34, !dbg !6564, !llvm.loop !6565

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6567
  %36 = load i24, i24* %35, align 4, !dbg !6567
  %37 = and i24 %36, 32, !dbg !6567
  %38 = icmp eq i24 %37, 0, !dbg !6567
  br i1 %38, label %44, label %39, !dbg !6569

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6570

40:                                               ; preds = %39
  br label %41, !dbg !6572

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6576
  store i24 %43, i24* %35, align 4, !dbg !6576
  br label %44, !dbg !6577

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #14 !dbg !6578 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6584, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.value(metadata i8* %1, metadata !6585, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.value(metadata i32 %2, metadata !6586, metadata !DIExpression()), !dbg !6587
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6588
  %5 = load i24, i24* %4, align 4, !dbg !6588
  %6 = lshr i24 %5, 11, !dbg !6588
  %7 = and i24 %6, 15, !dbg !6588
  %8 = zext i24 %7 to i32, !dbg !6588
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6589

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6590
  store i32 %2, i32* %10, align 4, !dbg !6592
  br label %28, !dbg !6593

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6594
  store i8 %12, i8* %1, align 1, !dbg !6595
  br label %28, !dbg !6596

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6597
  %15 = bitcast i8* %1 to i16*, !dbg !6598
  store i16 %14, i16* %15, align 2, !dbg !6599
  br label %28, !dbg !6600

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6601
  store i32 %2, i32* %17, align 4, !dbg !6602
  br label %28, !dbg !6603

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6604
  %20 = bitcast i8* %1 to i64*, !dbg !6605
  store i64 %19, i64* %20, align 8, !dbg !6606
  br label %28, !dbg !6607

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6608
  %23 = bitcast i8* %1 to i64*, !dbg !6609
  store i64 %22, i64* %23, align 8, !dbg !6610
  br label %28, !dbg !6611

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6612
  store i32 %2, i32* %25, align 4, !dbg !6613
  br label %28, !dbg !6614

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6615
  store i32 %2, i32* %27, align 4, !dbg !6616
  br label %28, !dbg !6617

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6618
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6622, metadata !DIExpression()), !dbg !6623
  %2 = add i32 %0, -65, !dbg !6624
  %3 = icmp ult i32 %2, 26, !dbg !6625
  %4 = zext i1 %3 to i32, !dbg !6625
  ret i32 %4, !dbg !6626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6627 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6631, metadata !DIExpression()), !dbg !6632
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6633

2:                                                ; preds = %1
  br label %4, !dbg !6634

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6636

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6637
  ret i32 %5, !dbg !6638
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #17 !dbg !6639 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6641, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %1, metadata !6642, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8 1, metadata !6643, metadata !DIExpression()), !dbg !6644
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6645

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6643, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %5, metadata !6642, metadata !DIExpression()), !dbg !6644
  %6 = load i8, i8* %5, align 1, !dbg !6646
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6648

7:                                                ; preds = %4
  br label %11, !dbg !6649

8:                                                ; preds = %4
  br label %11, !dbg !6651

9:                                                ; preds = %4
  br label %11, !dbg !6652

10:                                               ; preds = %4
  br label %11, !dbg !6653

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6654
  %14 = or i24 %13, %12, !dbg !6654
  store i24 %14, i24* %3, align 4, !dbg !6654
  call void @llvm.dbg.value(metadata i8 poison, metadata !6643, metadata !DIExpression()), !dbg !6644
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6642, metadata !DIExpression()), !dbg !6644
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6643, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %15, metadata !6642, metadata !DIExpression()), !dbg !6644
  %17 = load i24, i24* %3, align 4, !dbg !6655
  %18 = and i24 %17, 68, !dbg !6657
  %19 = icmp eq i24 %18, 68, !dbg !6657
  br i1 %19, label %20, label %22, !dbg !6657

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6658
  store i24 %21, i24* %3, align 4, !dbg !6658
  br label %22, !dbg !6660

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6662 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6664, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i8* %1, metadata !6665, metadata !DIExpression()), !dbg !6668
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6669
  %5 = load i24, i24* %4, align 4, !dbg !6670
  %6 = or i24 %5, 128, !dbg !6670
  store i24 %6, i24* %4, align 4, !dbg !6670
  call void @llvm.dbg.value(metadata i8* %1, metadata !6665, metadata !DIExpression()), !dbg !6668
  %7 = load i8, i8* %1, align 1, !dbg !6671
  %8 = icmp eq i8 %7, 42, !dbg !6673
  br i1 %8, label %9, label %12, !dbg !6674

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6675
  store i24 %10, i24* %4, align 4, !dbg !6675
  call void @llvm.dbg.value(metadata i8* %1, metadata !6665, metadata !DIExpression()), !dbg !6668
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6677
  call void @llvm.dbg.value(metadata i8* %11, metadata !6665, metadata !DIExpression()), !dbg !6668
  store i8* %11, i8** %3, align 4, !dbg !6677
  br label %29, !dbg !6678

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6666, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i8** %3, metadata !6665, metadata !DIExpression(DW_OP_deref)), !dbg !6668
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #28, !dbg !6679
  call void @llvm.dbg.value(metadata i32 %13, metadata !6667, metadata !DIExpression()), !dbg !6668
  %14 = load i8*, i8** %3, align 4, !dbg !6680
  call void @llvm.dbg.value(metadata i8* %14, metadata !6665, metadata !DIExpression()), !dbg !6668
  %15 = icmp eq i8* %14, %1, !dbg !6682
  br i1 %15, label %29, label %16, !dbg !6683

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6684
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6686
  store i32 %13, i32* %18, align 4, !dbg !6687
  %19 = lshr i32 %13, 31, !dbg !6688
  %20 = lshr i24 %17, 1, !dbg !6689
  %21 = and i24 %20, 1, !dbg !6689
  %22 = zext i24 %21 to i32, !dbg !6689
  %23 = or i32 %19, %22, !dbg !6689
  %24 = trunc i32 %23 to i24, !dbg !6689
  %25 = shl nuw nsw i24 %24, 1, !dbg !6689
  %26 = and i24 %17, -131, !dbg !6689
  %27 = or i24 %26, 128, !dbg !6689
  %28 = or i24 %25, %27, !dbg !6689
  store i24 %28, i24* %4, align 4, !dbg !6689
  br label %29, !dbg !6690

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6668
  ret i8* %30, !dbg !6691
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6692 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6694, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i8* %1, metadata !6695, metadata !DIExpression()), !dbg !6697
  %4 = load i8, i8* %1, align 1, !dbg !6698
  %5 = icmp eq i8 %4, 46, !dbg !6699
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6700
  %7 = load i24, i24* %6, align 4, !dbg !6701
  %8 = select i1 %5, i24 512, i24 0, !dbg !6701
  %9 = and i24 %7, -513, !dbg !6701
  %10 = or i24 %9, %8, !dbg !6701
  store i24 %10, i24* %6, align 4, !dbg !6701
  br i1 %5, label %11, label %32, !dbg !6702

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6695, metadata !DIExpression()), !dbg !6697
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6703
  call void @llvm.dbg.value(metadata i8* %12, metadata !6695, metadata !DIExpression()), !dbg !6697
  store i8* %12, i8** %3, align 4, !dbg !6703
  %13 = load i8, i8* %12, align 1, !dbg !6704
  %14 = icmp eq i8 %13, 42, !dbg !6706
  br i1 %14, label %15, label %18, !dbg !6707

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6708
  store i24 %16, i24* %6, align 4, !dbg !6708
  call void @llvm.dbg.value(metadata i8* %12, metadata !6695, metadata !DIExpression()), !dbg !6697
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6710
  call void @llvm.dbg.value(metadata i8* %17, metadata !6695, metadata !DIExpression()), !dbg !6697
  store i8* %17, i8** %3, align 4, !dbg !6710
  br label %32, !dbg !6711

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6695, metadata !DIExpression(DW_OP_deref)), !dbg !6697
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #28, !dbg !6712
  call void @llvm.dbg.value(metadata i32 %19, metadata !6696, metadata !DIExpression()), !dbg !6697
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6713
  store i32 %19, i32* %20, align 4, !dbg !6714
  %21 = lshr i32 %19, 31, !dbg !6715
  %22 = load i24, i24* %6, align 4, !dbg !6716
  %23 = lshr i24 %22, 1, !dbg !6716
  %24 = and i24 %23, 1, !dbg !6716
  %25 = zext i24 %24 to i32, !dbg !6716
  %26 = or i32 %21, %25, !dbg !6716
  %27 = trunc i32 %26 to i24, !dbg !6716
  %28 = shl nuw nsw i24 %27, 1, !dbg !6716
  %29 = and i24 %22, -3, !dbg !6716
  %30 = or i24 %28, %29, !dbg !6716
  store i24 %30, i24* %6, align 4, !dbg !6716
  %31 = load i8*, i8** %3, align 4, !dbg !6717
  call void @llvm.dbg.value(metadata i8* %31, metadata !6695, metadata !DIExpression()), !dbg !6697
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6697
  ret i8* %33, !dbg !6718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6719 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6721, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i8* %1, metadata !6722, metadata !DIExpression()), !dbg !6723
  %3 = load i8, i8* %1, align 1, !dbg !6724
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6725

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6726
  call void @llvm.dbg.value(metadata i8* %5, metadata !6722, metadata !DIExpression()), !dbg !6723
  %6 = load i8, i8* %5, align 1, !dbg !6729
  %7 = icmp eq i8 %6, 104, !dbg !6730
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6731
  %9 = load i24, i24* %8, align 4, !dbg !6731
  %10 = and i24 %9, -30721, !dbg !6731
  br i1 %7, label %11, label %14, !dbg !6732

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6733
  store i24 %12, i24* %8, align 4, !dbg !6733
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6735
  call void @llvm.dbg.value(metadata i8* %13, metadata !6722, metadata !DIExpression()), !dbg !6723
  br label %56, !dbg !6736

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6737
  store i24 %15, i24* %8, align 4, !dbg !6737
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6739
  call void @llvm.dbg.value(metadata i8* %17, metadata !6722, metadata !DIExpression()), !dbg !6723
  %18 = load i8, i8* %17, align 1, !dbg !6741
  %19 = icmp eq i8 %18, 108, !dbg !6742
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6743
  %21 = load i24, i24* %20, align 4, !dbg !6743
  %22 = and i24 %21, -30721, !dbg !6743
  br i1 %19, label %23, label %26, !dbg !6744

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6745
  store i24 %24, i24* %20, align 4, !dbg !6745
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6747
  call void @llvm.dbg.value(metadata i8* %25, metadata !6722, metadata !DIExpression()), !dbg !6723
  br label %56, !dbg !6748

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6749
  store i24 %27, i24* %20, align 4, !dbg !6749
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6751
  %30 = load i24, i24* %29, align 4, !dbg !6752
  %31 = and i24 %30, -30721, !dbg !6752
  %32 = or i24 %31, 10240, !dbg !6752
  store i24 %32, i24* %29, align 4, !dbg !6752
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6753
  call void @llvm.dbg.value(metadata i8* %33, metadata !6722, metadata !DIExpression()), !dbg !6723
  br label %56, !dbg !6754

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6755
  %36 = load i24, i24* %35, align 4, !dbg !6756
  %37 = and i24 %36, -30721, !dbg !6756
  %38 = or i24 %37, 12288, !dbg !6756
  store i24 %38, i24* %35, align 4, !dbg !6756
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6757
  call void @llvm.dbg.value(metadata i8* %39, metadata !6722, metadata !DIExpression()), !dbg !6723
  br label %56, !dbg !6758

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6759
  %42 = load i24, i24* %41, align 4, !dbg !6760
  %43 = and i24 %42, -30721, !dbg !6760
  %44 = or i24 %43, 14336, !dbg !6760
  store i24 %44, i24* %41, align 4, !dbg !6760
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6761
  call void @llvm.dbg.value(metadata i8* %45, metadata !6722, metadata !DIExpression()), !dbg !6723
  br label %56, !dbg !6762

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6763
  %48 = load i24, i24* %47, align 4, !dbg !6764
  %49 = and i24 %48, -30723, !dbg !6764
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6765
  call void @llvm.dbg.value(metadata i8* %50, metadata !6722, metadata !DIExpression()), !dbg !6723
  %51 = or i24 %49, 16386, !dbg !6766
  store i24 %51, i24* %47, align 4, !dbg !6766
  br label %56, !dbg !6767

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6768
  %54 = load i24, i24* %53, align 4, !dbg !6769
  %55 = and i24 %54, -30721, !dbg !6769
  store i24 %55, i24* %53, align 4, !dbg !6769
  br label %56, !dbg !6770

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6722, metadata !DIExpression()), !dbg !6723
  ret i8* %57, !dbg !6771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6772 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6774, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.value(metadata i8* %1, metadata !6775, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.value(metadata i8 0, metadata !6776, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.value(metadata i8* %1, metadata !6775, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6779
  %3 = load i8, i8* %1, align 1, !dbg !6780
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6781
  store i8 %3, i8* %4, align 1, !dbg !6782
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6783

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6784

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6785
  %9 = load i24, i24* %8, align 4, !dbg !6785
  %10 = and i24 %9, -458753, !dbg !6785
  %11 = or i24 %10, %7, !dbg !6785
  call void @llvm.dbg.label(metadata !6777), !dbg !6786
  %12 = and i24 %9, 30720, !dbg !6787
  %13 = icmp eq i24 %12, 16384, !dbg !6787
  %14 = zext i1 %13 to i24, !dbg !6789
  %15 = or i24 %11, %14, !dbg !6789
  %16 = icmp eq i8 %3, 99, !dbg !6790
  br i1 %16, label %17, label %43, !dbg !6792

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6793
  %19 = icmp ne i24 %18, 0, !dbg !6793
  call void @llvm.dbg.value(metadata i1 %19, metadata !6776, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6779
  br label %43, !dbg !6795

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6796
  %22 = load i24, i24* %21, align 4, !dbg !6797
  %23 = and i24 %22, -458753, !dbg !6797
  %24 = or i24 %23, 262144, !dbg !6797
  call void @llvm.dbg.value(metadata i8 1, metadata !6776, metadata !DIExpression()), !dbg !6779
  br label %43, !dbg !6798

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6801
  %27 = load i24, i24* %26, align 4, !dbg !6802
  %28 = and i24 %27, -458753, !dbg !6802
  %29 = or i24 %28, 196608, !dbg !6802
  %30 = and i24 %27, 30720, !dbg !6803
  %31 = icmp eq i24 %30, 16384, !dbg !6803
  br label %43, !dbg !6805

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6806
  %34 = load i24, i24* %33, align 4, !dbg !6807
  %35 = and i24 %34, -458753, !dbg !6807
  %36 = or i24 %35, 196608, !dbg !6807
  %37 = and i24 %34, 30720, !dbg !6808
  %38 = icmp ne i24 %37, 0, !dbg !6808
  br label %43, !dbg !6810

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6811
  %41 = load i24, i24* %40, align 4, !dbg !6812
  %42 = or i24 %41, 1, !dbg !6812
  br label %43, !dbg !6813

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6814
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6815
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6816
  call void @llvm.dbg.value(metadata i8* %48, metadata !6775, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.value(metadata i8 poison, metadata !6776, metadata !DIExpression()), !dbg !6779
  %49 = lshr i24 %44, 1, !dbg !6814
  %50 = and i24 %49, 1, !dbg !6814
  %51 = zext i24 %50 to i32, !dbg !6814
  %52 = or i32 %51, %47, !dbg !6814
  %53 = trunc i32 %52 to i24, !dbg !6814
  %54 = shl nuw nsw i24 %53, 1, !dbg !6814
  %55 = and i24 %44, -3, !dbg !6814
  %56 = or i24 %54, %55, !dbg !6814
  store i24 %56, i24* %46, align 4, !dbg !6814
  ret i8* %48, !dbg !6817
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #17 !dbg !6818 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6822, metadata !DIExpression()), !dbg !6825
  %2 = load i8*, i8** %0, align 4, !dbg !6826
  call void @llvm.dbg.value(metadata i8* %2, metadata !6823, metadata !DIExpression()), !dbg !6825
  call void @llvm.dbg.value(metadata i32 0, metadata !6824, metadata !DIExpression()), !dbg !6825
  %3 = load i8, i8* %2, align 1, !dbg !6827
  %4 = zext i8 %3 to i32, !dbg !6828
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #28, !dbg !6829
  %6 = icmp eq i32 %5, 0, !dbg !6830
  br i1 %6, label %19, label %7, !dbg !6830

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6824, metadata !DIExpression()), !dbg !6825
  call void @llvm.dbg.value(metadata i8* %10, metadata !6823, metadata !DIExpression()), !dbg !6825
  %11 = mul i32 %9, 10, !dbg !6831
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6833
  call void @llvm.dbg.value(metadata i8* %12, metadata !6823, metadata !DIExpression()), !dbg !6825
  %13 = add i32 %11, -48, !dbg !6834
  %14 = add i32 %13, %8, !dbg !6835
  call void @llvm.dbg.value(metadata i32 %14, metadata !6824, metadata !DIExpression()), !dbg !6825
  %15 = load i8, i8* %12, align 1, !dbg !6827
  %16 = zext i8 %15 to i32, !dbg !6828
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #28, !dbg !6829
  %18 = icmp eq i32 %17, 0, !dbg !6830
  br i1 %18, label %19, label %7, !dbg !6830, !llvm.loop !6836

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6825
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6825
  store i8* %20, i8** %0, align 4, !dbg !6838
  ret i32 %21, !dbg !6839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6842, metadata !DIExpression()), !dbg !6843
  %2 = add i32 %0, -48, !dbg !6844
  %3 = icmp ult i32 %2, 10, !dbg !6845
  %4 = zext i1 %3 to i32, !dbg !6845
  ret i32 %4, !dbg !6846
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6847 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6852, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.value(metadata i32 %1, metadata !6853, metadata !DIExpression()), !dbg !6854
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #26, !dbg !6855, !srcloc !6857
  ret void, !dbg !6858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6859 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6861, metadata !DIExpression()), !dbg !6869
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6870
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !6870
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6862, metadata !DIExpression()), !dbg !6871
  call void @llvm.va_start(i8* nonnull %3), !dbg !6872
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6873
  %5 = load i32, i32* %4, align 4, !dbg !6873
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6873
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !6873
  call void @llvm.va_end(i8* nonnull %3), !dbg !6874
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !6875
  ret void, !dbg !6875
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6876 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #26, !dbg !6878, !srcloc !6879
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #26, !dbg !6880, !srcloc !6881
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #26, !dbg !6882, !srcloc !6883
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #26, !dbg !6884, !srcloc !6885
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #26, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #26, !dbg !6888, !srcloc !6889
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #26, !dbg !6890, !srcloc !6891
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #26, !dbg !6892, !srcloc !6893
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #26, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #26, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #26, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #26, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #26, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #26, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #26, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #26, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #26, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #26, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #26, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #26, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #26, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #26, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #26, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #26, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #26, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #26, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #26, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #26, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #26, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #26, !dbg !6936, !srcloc !6937
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #26, !dbg !6938, !srcloc !6939
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #26, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #26, !dbg !6942, !srcloc !6943
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6944, !srcloc !6945
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #26, !dbg !6946, !srcloc !6947
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #26, !dbg !6948, !srcloc !6949
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #26, !dbg !6950, !srcloc !6951
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #26, !dbg !6952, !srcloc !6953
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #26, !dbg !6954, !srcloc !6955
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6956, !srcloc !6957
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #26, !dbg !6958, !srcloc !6959
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #26, !dbg !6960, !srcloc !6961
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #26, !dbg !6962, !srcloc !6963
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #26, !dbg !6964, !srcloc !6965
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6966, !srcloc !6967
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #26, !dbg !6968, !srcloc !6969
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #26, !dbg !6970, !srcloc !6971
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #26, !dbg !6972, !srcloc !6973
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #26, !dbg !6974, !srcloc !6975
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #26, !dbg !6976, !srcloc !6977
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #26, !dbg !6978, !srcloc !6979
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #26, !dbg !6980, !srcloc !6981
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #26, !dbg !6982, !srcloc !6983
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6984, !srcloc !6985
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #26, !dbg !6986, !srcloc !6987
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #26, !dbg !6988, !srcloc !6989
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #26, !dbg !6990, !srcloc !6991
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #26, !dbg !6992, !srcloc !6993
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #26, !dbg !6994, !srcloc !6995
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #26, !dbg !6996, !srcloc !6997
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #26, !dbg !6998, !srcloc !6999
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #26, !dbg !7000, !srcloc !7001
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #26, !dbg !7002, !srcloc !7003
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #26, !dbg !7004, !srcloc !7005
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #26, !dbg !7006, !srcloc !7007
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #26, !dbg !7008, !srcloc !7009
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #26, !dbg !7010, !srcloc !7011
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #26, !dbg !7012, !srcloc !7013
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #26, !dbg !7014, !srcloc !7015
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #26, !dbg !7016, !srcloc !7017
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #26, !dbg !7018, !srcloc !7019
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #26, !dbg !7020, !srcloc !7021
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #26, !dbg !7022, !srcloc !7023
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #26, !dbg !7024, !srcloc !7025
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #26, !dbg !7026, !srcloc !7027
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #26, !dbg !7028, !srcloc !7029
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #26, !dbg !7030, !srcloc !7031
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #26, !dbg !7032, !srcloc !7033
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #26, !dbg !7034, !srcloc !7035
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #26, !dbg !7036, !srcloc !7037
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #26, !dbg !7038, !srcloc !7039
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #26, !dbg !7040, !srcloc !7041
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #26, !dbg !7042, !srcloc !7043
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #26, !dbg !7044, !srcloc !7045
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #26, !dbg !7046, !srcloc !7047
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #26, !dbg !7048, !srcloc !7049
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #26, !dbg !7050, !srcloc !7051
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #26, !dbg !7052, !srcloc !7053
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #26, !dbg !7054, !srcloc !7055
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #26, !dbg !7056, !srcloc !7057
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #26, !dbg !7058, !srcloc !7059
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #26, !dbg !7060, !srcloc !7061
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #26, !dbg !7062, !srcloc !7063
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #26, !dbg !7064, !srcloc !7065
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #26, !dbg !7066, !srcloc !7067
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #26, !dbg !7068, !srcloc !7069
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #26, !dbg !7070, !srcloc !7071
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #26, !dbg !7072, !srcloc !7073
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7074, !srcloc !7075
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #26, !dbg !7076, !srcloc !7077
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #26, !dbg !7078, !srcloc !7079
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #26, !dbg !7080, !srcloc !7081
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #26, !dbg !7082, !srcloc !7083
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #26, !dbg !7084, !srcloc !7085
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #26, !dbg !7086, !srcloc !7087
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #26, !dbg !7088, !srcloc !7089
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #26, !dbg !7090, !srcloc !7091
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #26, !dbg !7092, !srcloc !7093
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #26, !dbg !7094, !srcloc !7095
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #26, !dbg !7096, !srcloc !7097
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #26, !dbg !7098, !srcloc !7099
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #26, !dbg !7100, !srcloc !7101
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #26, !dbg !7102, !srcloc !7103
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #26, !dbg !7104, !srcloc !7105
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #26, !dbg !7106, !srcloc !7107
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #26, !dbg !7108, !srcloc !7109
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #26, !dbg !7110, !srcloc !7111
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #26, !dbg !7112, !srcloc !7113
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #26, !dbg !7114, !srcloc !7115
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #26, !dbg !7116, !srcloc !7117
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #26, !dbg !7118, !srcloc !7119
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #26, !dbg !7120, !srcloc !7121
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #26, !dbg !7122, !srcloc !7123
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #26, !dbg !7124, !srcloc !7125
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #26, !dbg !7126, !srcloc !7127
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #26, !dbg !7128, !srcloc !7129
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #26, !dbg !7130, !srcloc !7131
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #26, !dbg !7132, !srcloc !7133
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #26, !dbg !7134, !srcloc !7135
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #26, !dbg !7136, !srcloc !7137
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #26, !dbg !7138, !srcloc !7139
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #26, !dbg !7140, !srcloc !7141
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #26, !dbg !7142, !srcloc !7143
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #26, !dbg !7144, !srcloc !7145
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #26, !dbg !7146, !srcloc !7147
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #26, !dbg !7148, !srcloc !7149
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #26, !dbg !7150, !srcloc !7151
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #26, !dbg !7152, !srcloc !7153
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #26, !dbg !7154, !srcloc !7155
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #26, !dbg !7156, !srcloc !7157
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #26, !dbg !7158, !srcloc !7159
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #26, !dbg !7160, !srcloc !7161
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #26, !dbg !7162, !srcloc !7163
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #26, !dbg !7164, !srcloc !7165
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #26, !dbg !7166, !srcloc !7167
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #26, !dbg !7168, !srcloc !7169
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #26, !dbg !7170, !srcloc !7171
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #26, !dbg !7172, !srcloc !7173
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #26, !dbg !7174, !srcloc !7175
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #26, !dbg !7176, !srcloc !7177
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #26, !dbg !7178, !srcloc !7179
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #26, !dbg !7180, !srcloc !7181
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #26, !dbg !7182, !srcloc !7183
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #26, !dbg !7184, !srcloc !7185
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7186, !srcloc !7187
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #26, !dbg !7188, !srcloc !7189
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #26, !dbg !7190, !srcloc !7191
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #26, !dbg !7192, !srcloc !7193
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #26, !dbg !7194, !srcloc !7195
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #26, !dbg !7196, !srcloc !7197
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #26, !dbg !7198, !srcloc !7199
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #26, !dbg !7200, !srcloc !7201
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #26, !dbg !7202, !srcloc !7203
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #26, !dbg !7204, !srcloc !7205
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #26, !dbg !7206, !srcloc !7207
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #26, !dbg !7208, !srcloc !7209
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7210, !srcloc !7211
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #26, !dbg !7212, !srcloc !7213
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #26, !dbg !7214, !srcloc !7215
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #26, !dbg !7216, !srcloc !7217
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #26, !dbg !7218, !srcloc !7219
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #26, !dbg !7220, !srcloc !7221
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #26, !dbg !7222, !srcloc !7223
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #26, !dbg !7224, !srcloc !7225
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #26, !dbg !7226, !srcloc !7227
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,1\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #26, !dbg !7228, !srcloc !7229
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #26, !dbg !7230, !srcloc !7231
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #26, !dbg !7232, !srcloc !7233
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #26, !dbg !7234, !srcloc !7235
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #26, !dbg !7236, !srcloc !7237
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #26, !dbg !7238, !srcloc !7239
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #26, !dbg !7240, !srcloc !7241
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #26, !dbg !7242, !srcloc !7243
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #26, !dbg !7244, !srcloc !7245
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #26, !dbg !7246, !srcloc !7247
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #26, !dbg !7248, !srcloc !7249
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #26, !dbg !7250, !srcloc !7251
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #26, !dbg !7252, !srcloc !7253
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #26, !dbg !7254, !srcloc !7255
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #26, !dbg !7256, !srcloc !7257
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #26, !dbg !7258, !srcloc !7259
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #26, !dbg !7260, !srcloc !7261
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #26, !dbg !7262, !srcloc !7263
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #26, !dbg !7264, !srcloc !7265
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #26, !dbg !7266, !srcloc !7267
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #26, !dbg !7268, !srcloc !7269
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #26, !dbg !7270, !srcloc !7271
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #26, !dbg !7272, !srcloc !7273
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #26, !dbg !7274, !srcloc !7275
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #26, !dbg !7276, !srcloc !7277
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #26, !dbg !7278, !srcloc !7279
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #26, !dbg !7280, !srcloc !7281
  tail call void asm sideeffect ".globl\09CONFIG_STACK_POINTER_RANDOM\0A\09.equ\09CONFIG_STACK_POINTER_RANDOM,0\0A\09.type\09CONFIG_STACK_POINTER_RANDOM,%object", ""() #26, !dbg !7282, !srcloc !7283
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #26, !dbg !7284, !srcloc !7285
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #26, !dbg !7286, !srcloc !7287
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7288, !srcloc !7289
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #26, !dbg !7290, !srcloc !7291
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #26, !dbg !7292, !srcloc !7293
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #26, !dbg !7294, !srcloc !7295
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #26, !dbg !7296, !srcloc !7297
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #26, !dbg !7298, !srcloc !7299
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #26, !dbg !7300, !srcloc !7301
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #26, !dbg !7302, !srcloc !7303
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #26, !dbg !7304, !srcloc !7305
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #26, !dbg !7306, !srcloc !7307
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #26, !dbg !7308, !srcloc !7309
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #26, !dbg !7310, !srcloc !7311
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #26, !dbg !7312, !srcloc !7313
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #26, !dbg !7314, !srcloc !7315
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #26, !dbg !7316, !srcloc !7317
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #26, !dbg !7318, !srcloc !7319
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #26, !dbg !7320, !srcloc !7321
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #26, !dbg !7322, !srcloc !7323
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7324, !srcloc !7325
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #26, !dbg !7326, !srcloc !7327
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #26, !dbg !7328, !srcloc !7329
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #26, !dbg !7330, !srcloc !7331
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #26, !dbg !7332, !srcloc !7333
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #26, !dbg !7334, !srcloc !7335
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #26, !dbg !7336, !srcloc !7337
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #26, !dbg !7338, !srcloc !7339
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #26, !dbg !7340, !srcloc !7341
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #26, !dbg !7342, !srcloc !7343
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #26, !dbg !7344, !srcloc !7345
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #26, !dbg !7346, !srcloc !7347
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #26, !dbg !7348, !srcloc !7349
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #26, !dbg !7350, !srcloc !7351
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #26, !dbg !7352, !srcloc !7353
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #26, !dbg !7354, !srcloc !7355
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #26, !dbg !7356, !srcloc !7357
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #26, !dbg !7358, !srcloc !7359
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #26, !dbg !7360, !srcloc !7361
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #26, !dbg !7362, !srcloc !7363
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #26, !dbg !7364, !srcloc !7365
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #26, !dbg !7366, !srcloc !7367
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #26, !dbg !7368, !srcloc !7369
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7370, !srcloc !7371
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #26, !dbg !7372, !srcloc !7373
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #26, !dbg !7374, !srcloc !7375
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #26, !dbg !7376, !srcloc !7377
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #26, !dbg !7378, !srcloc !7379
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7380, !srcloc !7381
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #26, !dbg !7382, !srcloc !7383
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #26, !dbg !7384, !srcloc !7385
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #26, !dbg !7386, !srcloc !7387
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7388, !srcloc !7389
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #26, !dbg !7390, !srcloc !7391
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #26, !dbg !7392, !srcloc !7393
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #26, !dbg !7394, !srcloc !7395
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #26, !dbg !7396, !srcloc !7397
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #26, !dbg !7398, !srcloc !7399
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #26, !dbg !7400, !srcloc !7401
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #26, !dbg !7402, !srcloc !7403
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #26, !dbg !7404, !srcloc !7405
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #26, !dbg !7406, !srcloc !7407
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #26, !dbg !7408, !srcloc !7409
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #26, !dbg !7410, !srcloc !7411
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #26, !dbg !7412, !srcloc !7413
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #26, !dbg !7414, !srcloc !7415
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #26, !dbg !7416, !srcloc !7417
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #26, !dbg !7418, !srcloc !7419
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #26, !dbg !7420, !srcloc !7421
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #26, !dbg !7422, !srcloc !7423
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #26, !dbg !7424, !srcloc !7425
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #26, !dbg !7426, !srcloc !7427
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #26, !dbg !7428, !srcloc !7429
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #26, !dbg !7430, !srcloc !7431
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #26, !dbg !7432, !srcloc !7433
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #26, !dbg !7434, !srcloc !7435
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #26, !dbg !7436, !srcloc !7437
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #26, !dbg !7438, !srcloc !7439
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #26, !dbg !7440, !srcloc !7441
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #26, !dbg !7442, !srcloc !7443
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #26, !dbg !7444, !srcloc !7445
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #26, !dbg !7446, !srcloc !7447
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #26, !dbg !7448, !srcloc !7449
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #26, !dbg !7450, !srcloc !7451
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #26, !dbg !7452, !srcloc !7453
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #26, !dbg !7454, !srcloc !7455
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #26, !dbg !7456, !srcloc !7457
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #26, !dbg !7458, !srcloc !7459
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #26, !dbg !7460, !srcloc !7461
  tail call void asm sideeffect ".globl\09CONFIG_TEST_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TEST_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TEST_RANDOM_GENERATOR,%object", ""() #26, !dbg !7462, !srcloc !7463
  tail call void asm sideeffect ".globl\09CONFIG_TIMER_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TIMER_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TIMER_RANDOM_GENERATOR,%object", ""() #26, !dbg !7464, !srcloc !7465
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #26, !dbg !7466, !srcloc !7467
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #26, !dbg !7468, !srcloc !7469
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7470, !srcloc !7471
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #26, !dbg !7472, !srcloc !7473
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7474, !srcloc !7475
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7476, !srcloc !7477
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #26, !dbg !7478, !srcloc !7479
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #26, !dbg !7480, !srcloc !7481
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #26, !dbg !7482, !srcloc !7483
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #26, !dbg !7484, !srcloc !7485
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #26, !dbg !7486, !srcloc !7487
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #26, !dbg !7488, !srcloc !7489
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #26, !dbg !7490, !srcloc !7491
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #26, !dbg !7492, !srcloc !7493
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #26, !dbg !7494, !srcloc !7495
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #26, !dbg !7496, !srcloc !7497
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #26, !dbg !7498, !srcloc !7499
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #26, !dbg !7500, !srcloc !7501
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #26, !dbg !7502, !srcloc !7503
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #26, !dbg !7504, !srcloc !7505
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #26, !dbg !7506, !srcloc !7507
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #26, !dbg !7508, !srcloc !7509
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #26, !dbg !7510, !srcloc !7511
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #26, !dbg !7512, !srcloc !7513
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #26, !dbg !7514, !srcloc !7515
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #26, !dbg !7516, !srcloc !7517
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #26, !dbg !7518, !srcloc !7519
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #26, !dbg !7520, !srcloc !7521
  ret void, !dbg !7522
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7523 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7525, metadata !DIExpression()), !dbg !7527
  tail call fastcc void @LL_FLASH_EnableInstCache() #28, !dbg !7528
  tail call fastcc void @LL_FLASH_EnableDataCache() #28, !dbg !7529
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !7530, !srcloc !7539
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7530
  call void @llvm.dbg.value(metadata i32 %3, metadata !7536, metadata !DIExpression()) #26, !dbg !7540
  call void @llvm.dbg.value(metadata i32 undef, metadata !7537, metadata !DIExpression()) #26, !dbg !7540
  call void @llvm.dbg.value(metadata i32 %3, metadata !7526, metadata !DIExpression()), !dbg !7527
  call void @llvm.dbg.value(metadata i32 %3, metadata !7541, metadata !DIExpression()) #26, !dbg !7546
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !7548, !srcloc !7549
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7550
  ret i32 0, !dbg !7551
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #18 !dbg !7552 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7554
  %2 = or i32 %1, 512, !dbg !7554
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7554
  ret void, !dbg !7555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #18 !dbg !7556 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7557
  %2 = or i32 %1, 1024, !dbg !7557
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7557
  ret void, !dbg !7558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !7559 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7561, metadata !DIExpression()), !dbg !7562
  ret i32 0, !dbg !7563
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7564 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7567, metadata !DIExpression()), !dbg !7575
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7576
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7576
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7568, metadata !DIExpression()), !dbg !7577
  call void @llvm.va_start(i8* nonnull %3), !dbg !7578
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7579
  %5 = load i32, i32* %4, align 4, !dbg !7579
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7579
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !7579
  call void @llvm.va_end(i8* nonnull %3), !dbg !7580
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7581
  ret void, !dbg !7581
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7582 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7587, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i8* %0, metadata !7586, metadata !DIExpression()), !dbg !7588
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !7589
  ret void, !dbg !7590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7595, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.value(metadata i8* %1, metadata !7596, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.value(metadata i32 %2, metadata !7597, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.value(metadata i8* %1, metadata !7598, metadata !DIExpression()), !dbg !7599
  %4 = icmp eq i32 %2, 0, !dbg !7600
  br i1 %4, label %14, label %5, !dbg !7601

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.68(i32 noundef %0) #28, !dbg !7599
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7601

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7598, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.value(metadata i32 %10, metadata !7597, metadata !DIExpression()), !dbg !7599
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i32 noundef %7) #27, !dbg !7602
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #28, !dbg !7604
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7605
  call void @llvm.dbg.value(metadata i32 %11, metadata !7597, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.value(metadata i8* %12, metadata !7598, metadata !DIExpression()), !dbg !7599
  br i1 %13, label %14, label %8, !dbg !7605, !llvm.loop !7606

14:                                               ; preds = %8, %3
  ret void, !dbg !7608
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.68(i32 noundef %0) unnamed_addr #5 !dbg !7609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7611, metadata !DIExpression()), !dbg !7612
  %2 = add i32 %0, -1, !dbg !7613
  %3 = icmp ult i32 %2, 4, !dbg !7613
  %4 = shl i32 %2, 3, !dbg !7613
  %5 = lshr i32 1145657157, %4, !dbg !7613
  %6 = trunc i32 %5 to i8, !dbg !7613
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7613
  ret i8 %7, !dbg !7614
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7615 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7619, metadata !DIExpression()), !dbg !7630
  call void @llvm.dbg.value(metadata i32 %1, metadata !7620, metadata !DIExpression()), !dbg !7630
  call void @llvm.dbg.value(metadata i32 0, metadata !7621, metadata !DIExpression()), !dbg !7631
  br label %4, !dbg !7632

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.70, i32 0, i32 0)) #27, !dbg !7633
  call void @llvm.dbg.value(metadata i32 0, metadata !7623, metadata !DIExpression()), !dbg !7634
  br label %16, !dbg !7635

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7621, metadata !DIExpression()), !dbg !7631
  %6 = icmp ult i32 %5, %1, !dbg !7636
  br i1 %6, label %7, label %11, !dbg !7640

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7641
  %9 = load i8, i8* %8, align 1, !dbg !7641
  %10 = zext i8 %9 to i32, !dbg !7643
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.71, i32 0, i32 0), i32 noundef %10) #27, !dbg !7644
  br label %12, !dbg !7645

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.72, i32 0, i32 0)) #27, !dbg !7646
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7648
  call void @llvm.dbg.value(metadata i32 %13, metadata !7621, metadata !DIExpression()), !dbg !7631
  %14 = icmp eq i32 %13, 8, !dbg !7649
  br i1 %14, label %3, label %4, !dbg !7632, !llvm.loop !7650

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.73, i32 0, i32 0)) #27, !dbg !7652
  ret void, !dbg !7653

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7623, metadata !DIExpression()), !dbg !7634
  %18 = icmp ult i32 %17, %1, !dbg !7654
  br i1 %18, label %19, label %26, !dbg !7655

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7656
  %21 = load i8, i8* %20, align 1, !dbg !7656
  call void @llvm.dbg.value(metadata i8 %21, metadata !7625, metadata !DIExpression()), !dbg !7657
  %22 = zext i8 %21 to i32, !dbg !7658
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #28, !dbg !7659
  %24 = icmp eq i32 %23, 0, !dbg !7660
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7659
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.74, i32 0, i32 0), i32 noundef %25) #27, !dbg !7661
  br label %27, !dbg !7662

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.75, i32 0, i32 0)) #27, !dbg !7663
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7665
  call void @llvm.dbg.value(metadata i32 %28, metadata !7623, metadata !DIExpression()), !dbg !7634
  %29 = icmp eq i32 %28, 8, !dbg !7666
  br i1 %29, label %15, label %16, !dbg !7635, !llvm.loop !7667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7671, metadata !DIExpression()), !dbg !7672
  %2 = add i32 %0, -32, !dbg !7673
  %3 = icmp ult i32 %2, 95, !dbg !7673
  %4 = zext i1 %3 to i32, !dbg !7673
  ret i32 %4, !dbg !7674
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7724, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7725, metadata !DIExpression()), !dbg !7726
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7727
  br i1 %3, label %5, label %4, !dbg !7729

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #28, !dbg !7730
  br label %5, !dbg !7732

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !7733
  ret void, !dbg !7734
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7735 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7739, metadata !DIExpression()), !dbg !7740
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7741
  %3 = load i32, i32* %2, align 4, !dbg !7741
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7741
  %5 = load i32, i32* %4, align 4, !dbg !7741
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7741
  %7 = load i32, i32* %6, align 4, !dbg !7741
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.76, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !7741
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7746
  %9 = load i32, i32* %8, align 4, !dbg !7746
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7746
  %11 = load i32, i32* %10, align 4, !dbg !7746
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7746
  %13 = load i32, i32* %12, align 4, !dbg !7746
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.77, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !7746
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7751
  %15 = load i32, i32* %14, align 4, !dbg !7751
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !7751
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7756
  %17 = load i32, i32* %16, align 4, !dbg !7756
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.79, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7756
  ret void, !dbg !7761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7762 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7779, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7780, metadata !DIExpression()), !dbg !7782
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7783
  %4 = load i32, i32* %3, align 4, !dbg !7783
  call void @llvm.dbg.value(metadata i32 %4, metadata !7781, metadata !DIExpression()), !dbg !7782
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #28, !dbg !7784
  ret void, !dbg !7785
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !7786 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7790, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i8* %0, metadata !7791, metadata !DIExpression()), !dbg !7793
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7794
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #26, !dbg !7794
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7792, metadata !DIExpression()), !dbg !7795
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7795
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7796
  %5 = bitcast i8* %4 to i32*, !dbg !7796
  %6 = load i32, i32* %5, align 4, !dbg !7796
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7797
  store i32 %6, i32* %7, align 4, !dbg !7798
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #28, !dbg !7799
  unreachable, !dbg !7800
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7804, metadata !DIExpression()), !dbg !7805
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #28, !dbg !7806
  ret void, !dbg !7807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7812, metadata !DIExpression()), !dbg !7813
  %2 = icmp sgt i32 %0, -1, !dbg !7814
  br i1 %2, label %3, label %8, !dbg !7816

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7817, !srcloc !7819
  %4 = and i32 %0, 31, !dbg !7820
  %5 = shl nuw i32 1, %4, !dbg !7821
  %6 = lshr i32 %0, 5, !dbg !7822
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7823
  store volatile i32 %5, i32* %7, align 4, !dbg !7824
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7825, !srcloc !7826
  br label %8, !dbg !7827

8:                                                ; preds = %3, %1
  ret void, !dbg !7828
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7829 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7831, metadata !DIExpression()), !dbg !7832
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #28, !dbg !7833
  ret void, !dbg !7834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7837, metadata !DIExpression()), !dbg !7838
  %2 = icmp sgt i32 %0, -1, !dbg !7839
  br i1 %2, label %3, label %8, !dbg !7841

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7842
  %5 = shl nuw i32 1, %4, !dbg !7844
  %6 = lshr i32 %0, 5, !dbg !7845
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7846
  store volatile i32 %5, i32* %7, align 4, !dbg !7847
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7848, !srcloc !7852
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7853, !srcloc !7856
  br label %8, !dbg !7857

8:                                                ; preds = %3, %1
  ret void, !dbg !7858
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #7 !dbg !7859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7863, metadata !DIExpression()), !dbg !7864
  %2 = lshr i32 %0, 5, !dbg !7865
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7866
  %4 = load volatile i32, i32* %3, align 4, !dbg !7866
  %5 = and i32 %0, 31, !dbg !7867
  %6 = shl nuw i32 1, %5, !dbg !7867
  %7 = and i32 %4, %6, !dbg !7868
  ret i32 %7, !dbg !7869
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7874, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.value(metadata i32 %1, metadata !7875, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.value(metadata i32 %2, metadata !7876, metadata !DIExpression()), !dbg !7877
  %4 = add i32 %1, 1, !dbg !7878
  call void @llvm.dbg.value(metadata i32 %4, metadata !7875, metadata !DIExpression()), !dbg !7877
  %5 = icmp ult i32 %4, 16, !dbg !7881
  br i1 %5, label %7, label %6, !dbg !7884

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.81, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.82, i32 0, i32 0), i32 noundef 94) #27, !dbg !7885
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.83, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #27, !dbg !7885
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.82, i32 0, i32 0), i32 noundef 94) #27, !dbg !7885
  unreachable, !dbg !7885

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #28, !dbg !7887
  ret void, !dbg !7888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !7889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7893, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 %1, metadata !7894, metadata !DIExpression()), !dbg !7895
  %3 = trunc i32 %1 to i8, !dbg !7896
  %4 = shl i8 %3, 4, !dbg !7896
  %5 = and i32 %0, 15, !dbg !7898
  %6 = add nsw i32 %5, -4, !dbg !7898
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7898
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7898
  %9 = icmp slt i32 %0, 0, !dbg !7898
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7898
  store volatile i8 %4, i8* %10, align 1, !dbg !7896
  ret void, !dbg !7899
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7900 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7902, metadata !DIExpression()), !dbg !7903
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !7904
  ret void, !dbg !7905
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7906 {
  tail call void @z_SysNmiOnReset() #27, !dbg !7908
  tail call void @z_arm_int_exit() #27, !dbg !7909
  ret void, !dbg !7910
}

; Function Attrs: optsize
declare !dbg !7911 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7912 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7914 {
  tail call fastcc void @relocate_vector_table() #28, !dbg !7916
  tail call fastcc void @z_arm_floating_point_init() #28, !dbg !7917
  tail call void @z_bss_zero() #27, !dbg !7918
  tail call void @z_data_copy() #27, !dbg !7919
  tail call void @z_arm_interrupt_init() #27, !dbg !7920
  tail call void @z_cstart() #30, !dbg !7921
  unreachable, !dbg !7921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7922 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7923
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7924, !srcloc !7927
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7928, !srcloc !7931
  ret void, !dbg !7932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7933 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7934
  %2 = and i32 %1, -15728641, !dbg !7934
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7934
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #26, !dbg !7935, !srcloc !7940
  call void @llvm.dbg.value(metadata i32 %3, metadata !7938, metadata !DIExpression()) #26, !dbg !7941
  %4 = and i32 %3, -5, !dbg !7942
  call void @llvm.dbg.value(metadata i32 %4, metadata !7943, metadata !DIExpression()) #26, !dbg !7948
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #26, !dbg !7950, !srcloc !7951
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7952, !srcloc !7931
  ret void, !dbg !7954
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7958, metadata !DIExpression()), !dbg !7959
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7960
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7961
  store i32 %0, i32* %3, align 4, !dbg !7962
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7963
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7964
  store i32 %4, i32* %5, align 4, !dbg !7965
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7966
  %7 = or i32 %6, 268435456, !dbg !7966
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7966
  call void @llvm.dbg.value(metadata i32 0, metadata !7967, metadata !DIExpression()) #26, !dbg !7970
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !7972, !srcloc !7973
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7974
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7975
  %10 = load i32, i32* %9, align 4, !dbg !7975
  ret i32 %10, !dbg !7976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #12 !dbg !7977 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8089, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8090, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %2, metadata !8091, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8092, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %4, metadata !8093, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %5, metadata !8094, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %6, metadata !8095, metadata !DIExpression()), !dbg !8097
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8098
  call void @llvm.dbg.value(metadata i8* %8, metadata !8096, metadata !DIExpression()), !dbg !8097
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8099
  %10 = bitcast i8* %9 to i32*, !dbg !8099
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8100
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8101
  %12 = bitcast i8* %8 to i32*, !dbg !8102
  store i32 %11, i32* %12, align 4, !dbg !8103
  %13 = ptrtoint i8* %4 to i32, !dbg !8104
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8105
  %15 = bitcast i8* %14 to i32*, !dbg !8105
  store i32 %13, i32* %15, align 4, !dbg !8106
  %16 = ptrtoint i8* %5 to i32, !dbg !8107
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8108
  %18 = bitcast i8* %17 to i32*, !dbg !8108
  store i32 %16, i32* %18, align 4, !dbg !8109
  %19 = ptrtoint i8* %6 to i32, !dbg !8110
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8111
  %21 = bitcast i8* %20 to i32*, !dbg !8111
  store i32 %19, i32* %21, align 4, !dbg !8112
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8113
  %23 = bitcast i8* %22 to i32*, !dbg !8113
  store i32 16777216, i32* %23, align 4, !dbg !8114
  %24 = ptrtoint i8* %8 to i32, !dbg !8115
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8116
  store i32 %24, i32* %25, align 8, !dbg !8117
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8118
  store i32 0, i32* %26, align 4, !dbg !8119
  ret void, !dbg !8120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !8121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8125, metadata !DIExpression()), !dbg !8131
  call void @llvm.dbg.value(metadata i32 %1, metadata !8126, metadata !DIExpression()), !dbg !8131
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8132
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8127, metadata !DIExpression()), !dbg !8131
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8133
  br i1 %4, label %19, label %5, !dbg !8135

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8130, metadata !DIExpression()), !dbg !8131
  %6 = icmp eq i32 %0, -22, !dbg !8136
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8136
  %8 = load i32, i32* %7, align 4, !dbg !8136
  br i1 %6, label %16, label %9, !dbg !8138

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8136
  %11 = icmp ule i32 %10, %0, !dbg !8136
  %12 = icmp ugt i32 %8, %0, !dbg !8136
  %13 = and i1 %12, %11, !dbg !8136
  %14 = icmp ugt i32 %8, %1, !dbg !8136
  %15 = and i1 %14, %13, !dbg !8136
  br i1 %15, label %18, label %19, !dbg !8136

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8136
  br i1 %17, label %18, label %19, !dbg !8138

18:                                               ; preds = %9, %16
  br label %19, !dbg !8139

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8131
  ret i32 %20, !dbg !8141
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !8142 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8146, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata i8* %1, metadata !8147, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8148, metadata !DIExpression()), !dbg !8149
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8150
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !8151
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #26, !dbg !8152, !srcloc !8153
  unreachable, !dbg !8154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8155 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8173, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.value(metadata i32 %1, metadata !8174, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.value(metadata i32 %2, metadata !8175, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8176, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.value(metadata i32 0, metadata !8177, metadata !DIExpression()), !dbg !8183
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8184
  call void @llvm.dbg.value(metadata i32 %8, metadata !8178, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !8183
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #26, !dbg !8185
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #26, !dbg !8185
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !8186
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #26, !dbg !8186
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8182, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.value(metadata i32 0, metadata !8188, metadata !DIExpression()) #26, !dbg !8191
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !8193, !srcloc !8194
  call void @llvm.dbg.value(metadata i8* %6, metadata !8180, metadata !DIExpression(DW_OP_deref)), !dbg !8183
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #28, !dbg !8195
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !8181, metadata !DIExpression()), !dbg !8183
  %11 = icmp eq %struct.__esf* %10, null, !dbg !8196
  br i1 %11, label %12, label %13, !dbg !8199

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.87, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 1057) #27, !dbg !8200
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.89, i32 0, i32 0)) #27, !dbg !8200
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 1057) #27, !dbg !8200
  unreachable, !dbg !8200

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !8202
  call void @llvm.dbg.value(metadata i32 %14, metadata !8178, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.value(metadata i8* %5, metadata !8179, metadata !DIExpression(DW_OP_deref)), !dbg !8183
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #28, !dbg !8203
  call void @llvm.dbg.value(metadata i32 %15, metadata !8177, metadata !DIExpression()), !dbg !8183
  %16 = load i8, i8* %5, align 1, !dbg !8204, !range !8206
  call void @llvm.dbg.value(metadata i8 %16, metadata !8179, metadata !DIExpression()), !dbg !8183
  %17 = icmp eq i8 %16, 0, !dbg !8204
  br i1 %17, label %18, label %35, !dbg !8207

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !8208
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #27, !dbg !8209
  %21 = load i8, i8* %6, align 1, !dbg !8210, !range !8206
  call void @llvm.dbg.value(metadata i8 %21, metadata !8180, metadata !DIExpression()), !dbg !8183
  %22 = icmp eq i8 %21, 0, !dbg !8210
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8212
  %24 = load i32, i32* %23, align 4, !dbg !8212
  br i1 %22, label %30, label %25, !dbg !8213

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !8214
  %27 = icmp eq i32 %26, 0, !dbg !8217
  br i1 %27, label %28, label %34, !dbg !8218

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !8219
  br label %32, !dbg !8221

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !8222
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !8212
  br label %34, !dbg !8224

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #27, !dbg !8224
  br label %35, !dbg !8225

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #26, !dbg !8225
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #26, !dbg !8225
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #26, !dbg !8225
  ret void, !dbg !8225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8231, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata i32 %1, metadata !8232, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata i32 %2, metadata !8233, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata i8* %3, metadata !8234, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata i8 0, metadata !8235, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8236, metadata !DIExpression()), !dbg !8237
  store i8 0, i8* %3, align 1, !dbg !8238
  %5 = icmp ugt i32 %2, -16777217, !dbg !8239
  br i1 %5, label %6, label %17, !dbg !8241

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8242
  %8 = icmp eq i32 %7, 8, !dbg !8242
  br i1 %8, label %9, label %10, !dbg !8242

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.101, i32 0, i32 0), i32 noundef 69) #27, !dbg !8244
  br label %17, !dbg !8250

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8251
  %12 = icmp eq i32 %11, 0, !dbg !8251
  br i1 %12, label %13, label %14, !dbg !8252

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8236, metadata !DIExpression()), !dbg !8237
  store i8 1, i8* %3, align 1, !dbg !8255
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8237
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8236, metadata !DIExpression()), !dbg !8237
  br label %17, !dbg !8258

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8237
  ret %struct.__esf* %18, !dbg !8259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8260 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8264, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata i32 %1, metadata !8265, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata i8* %2, metadata !8266, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata i32 0, metadata !8267, metadata !DIExpression()), !dbg !8268
  store i8 0, i8* %2, align 1, !dbg !8269
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8270

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #28, !dbg !8271
  call void @llvm.dbg.value(metadata i32 %5, metadata !8267, metadata !DIExpression()), !dbg !8268
  br label %12, !dbg !8273

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #28, !dbg !8274
  call void @llvm.dbg.value(metadata i32 %7, metadata !8267, metadata !DIExpression()), !dbg !8268
  br label %12, !dbg !8275

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #28, !dbg !8276
  call void @llvm.dbg.value(metadata i32 0, metadata !8267, metadata !DIExpression()), !dbg !8268
  br label %12, !dbg !8277

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #28, !dbg !8278
  call void @llvm.dbg.value(metadata i32 0, metadata !8267, metadata !DIExpression()), !dbg !8268
  br label %12, !dbg !8279

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #28, !dbg !8280
  br label %12, !dbg !8281

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #28, !dbg !8282
  br label %12, !dbg !8283

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8268
  call void @llvm.dbg.value(metadata i32 %13, metadata !8267, metadata !DIExpression()), !dbg !8268
  ret i32 %13, !dbg !8284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8285 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8289, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata i8* %1, metadata !8290, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata i32 0, metadata !8291, metadata !DIExpression()), !dbg !8292
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8293
  store i8 0, i8* %1, align 1, !dbg !8298
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8299
  %4 = and i32 %3, 2, !dbg !8301
  %5 = icmp eq i32 %4, 0, !dbg !8302
  br i1 %5, label %7, label %6, !dbg !8303

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.94, i32 0, i32 0), i32 noundef 69) #27, !dbg !8304
  br label %38, !dbg !8310

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8311
  %9 = icmp sgt i32 %8, -1, !dbg !8313
  br i1 %9, label %11, label %10, !dbg !8314

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.95, i32 0, i32 0), i32 noundef 69) #27, !dbg !8315
  br label %38, !dbg !8321

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8322
  %13 = and i32 %12, 1073741824, !dbg !8324
  %14 = icmp eq i32 %13, 0, !dbg !8325
  br i1 %14, label %37, label %15, !dbg !8326

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.96, i32 0, i32 0), i32 noundef 69) #27, !dbg !8327
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #28, !dbg !8333
  br i1 %16, label %17, label %21, !dbg !8335

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8336
  %19 = load i32, i32* %18, align 4, !dbg !8336
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.97, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !8336
  %20 = load i32, i32* %18, align 4, !dbg !8342
  call void @llvm.dbg.value(metadata i32 %20, metadata !8291, metadata !DIExpression()), !dbg !8292
  br label %38, !dbg !8343

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8344
  %23 = and i32 %22, 255, !dbg !8346
  %24 = icmp eq i32 %23, 0, !dbg !8347
  br i1 %24, label %27, label %25, !dbg !8348

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #28, !dbg !8349
  call void @llvm.dbg.value(metadata i32 %26, metadata !8291, metadata !DIExpression()), !dbg !8292
  br label %38, !dbg !8351

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8352
  %29 = and i32 %28, 65280, !dbg !8354
  %30 = icmp eq i32 %29, 0, !dbg !8355
  br i1 %30, label %32, label %31, !dbg !8356

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #28, !dbg !8357
  call void @llvm.dbg.value(metadata i32 0, metadata !8291, metadata !DIExpression()), !dbg !8292
  br label %38, !dbg !8359

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8360
  %34 = icmp ult i32 %33, 65536, !dbg !8362
  br i1 %34, label %36, label %35, !dbg !8363

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #28, !dbg !8364
  call void @llvm.dbg.value(metadata i32 0, metadata !8291, metadata !DIExpression()), !dbg !8292
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 755) #27, !dbg !8366
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.99, i32 0, i32 0)) #27, !dbg !8366
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 755) #27, !dbg !8366
  unreachable, !dbg !8366

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 760) #27, !dbg !8371
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.100, i32 0, i32 0)) #27, !dbg !8371
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 760) #27, !dbg !8371
  unreachable, !dbg !8371

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !8292
  call void @llvm.dbg.value(metadata i32 %39, metadata !8291, metadata !DIExpression()), !dbg !8292
  ret i32 %39, !dbg !8376
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8377 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8379, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 %1, metadata !8380, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i8* %2, metadata !8381, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 0, metadata !8382, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 -22, metadata !8383, metadata !DIExpression()), !dbg !8392
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.91, i32 0, i32 0), i32 noundef 69) #27, !dbg !8393
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8398
  %5 = and i32 %4, 16, !dbg !8400
  %6 = icmp eq i32 %5, 0, !dbg !8401
  br i1 %6, label %8, label %7, !dbg !8402

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14.92, i32 0, i32 0), i32 noundef 69) #27, !dbg !8403
  br label %8, !dbg !8409

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8410
  %10 = and i32 %9, 8, !dbg !8412
  %11 = icmp eq i32 %10, 0, !dbg !8413
  br i1 %11, label %13, label %12, !dbg !8414

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #27, !dbg !8415
  br label %13, !dbg !8421

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8422
  %15 = and i32 %14, 2, !dbg !8423
  %16 = icmp eq i32 %15, 0, !dbg !8424
  br i1 %16, label %27, label %17, !dbg !8425

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #27, !dbg !8426
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8431
  call void @llvm.dbg.value(metadata i32 %18, metadata !8384, metadata !DIExpression()), !dbg !8432
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8433
  %20 = and i32 %19, 128, !dbg !8435
  %21 = icmp eq i32 %20, 0, !dbg !8436
  br i1 %21, label %27, label %22, !dbg !8437

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8383, metadata !DIExpression()), !dbg !8392
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !8438
  %23 = icmp eq i32 %1, 0, !dbg !8444
  br i1 %23, label %27, label %24, !dbg !8446

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8447
  %26 = and i32 %25, -129, !dbg !8447
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8447
  br label %27, !dbg !8449

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8392
  call void @llvm.dbg.value(metadata i32 %28, metadata !8383, metadata !DIExpression()), !dbg !8392
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8450
  %30 = and i32 %29, 1, !dbg !8452
  %31 = icmp eq i32 %30, 0, !dbg !8453
  br i1 %31, label %33, label %32, !dbg !8454

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #27, !dbg !8455
  br label %33, !dbg !8461

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8462
  %35 = and i32 %34, 32, !dbg !8464
  %36 = icmp eq i32 %35, 0, !dbg !8465
  br i1 %36, label %38, label %37, !dbg !8466

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #27, !dbg !8467
  br label %38, !dbg !8473

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8474
  %40 = and i32 %39, 16, !dbg !8475
  %41 = icmp eq i32 %40, 0, !dbg !8475
  br i1 %41, label %42, label %46, !dbg !8476

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8477
  %44 = and i32 %43, 2, !dbg !8478
  %45 = icmp eq i32 %44, 0, !dbg !8478
  br i1 %45, label %60, label %46, !dbg !8479

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8480
  %48 = and i32 %47, 2048, !dbg !8481
  %49 = icmp eq i32 %48, 0, !dbg !8481
  br i1 %49, label %60, label %50, !dbg !8482

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8483
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !8484
  call void @llvm.dbg.value(metadata i32 %52, metadata !8387, metadata !DIExpression()), !dbg !8485
  %53 = icmp eq i32 %52, 0, !dbg !8486
  br i1 %53, label %55, label %54, !dbg !8488

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8489, metadata !DIExpression()) #26, !dbg !8492
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #26, !dbg !8495, !srcloc !8496
  call void @llvm.dbg.value(metadata i32 2, metadata !8382, metadata !DIExpression()), !dbg !8392
  br label %60, !dbg !8497

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8498
  %57 = and i32 %56, 16, !dbg !8498
  %58 = icmp eq i32 %57, 0, !dbg !8498
  br i1 %58, label %60, label %59, !dbg !8502

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 343) #27, !dbg !8503
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #27, !dbg !8503
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 343) #27, !dbg !8503
  unreachable, !dbg !8503

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !8392
  call void @llvm.dbg.value(metadata i32 %61, metadata !8382, metadata !DIExpression()), !dbg !8392
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8505
  %63 = and i32 %62, 32, !dbg !8507
  %64 = icmp eq i32 %63, 0, !dbg !8508
  br i1 %64, label %68, label %65, !dbg !8509

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8510
  %67 = and i32 %66, -8193, !dbg !8510
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8510
  br label %68, !dbg !8512

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8513
  %70 = or i32 %69, 255, !dbg !8513
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8513
  store i8 0, i8* %2, align 1, !dbg !8514
  ret i32 %61, !dbg !8515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8516 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8520, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.value(metadata i32 %0, metadata !8521, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.value(metadata i8* %1, metadata !8522, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.value(metadata i32 0, metadata !8523, metadata !DIExpression()), !dbg !8527
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #27, !dbg !8528
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8533
  %4 = and i32 %3, 4096, !dbg !8535
  %5 = icmp eq i32 %4, 0, !dbg !8535
  br i1 %5, label %7, label %6, !dbg !8536

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #27, !dbg !8537
  br label %7, !dbg !8543

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8544
  %9 = and i32 %8, 2048, !dbg !8546
  %10 = icmp eq i32 %9, 0, !dbg !8546
  br i1 %10, label %12, label %11, !dbg !8547

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #27, !dbg !8548
  br label %12, !dbg !8554

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8555
  %14 = and i32 %13, 512, !dbg !8556
  %15 = icmp eq i32 %14, 0, !dbg !8556
  br i1 %15, label %26, label %16, !dbg !8557

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #27, !dbg !8558
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8563
  call void @llvm.dbg.value(metadata i32 %17, metadata !8524, metadata !DIExpression()), !dbg !8564
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8565
  %19 = and i32 %18, 32768, !dbg !8567
  %20 = icmp eq i32 %19, 0, !dbg !8568
  br i1 %20, label %26, label %21, !dbg !8569

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25.90, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8570
  %22 = icmp eq i32 %0, 0, !dbg !8576
  br i1 %22, label %26, label %23, !dbg !8578

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8579
  %25 = and i32 %24, -32769, !dbg !8579
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8579
  br label %26, !dbg !8581

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8582
  %28 = and i32 %27, 1024, !dbg !8584
  %29 = icmp eq i32 %28, 0, !dbg !8584
  br i1 %29, label %31, label %30, !dbg !8585

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #27, !dbg !8586
  br label %31, !dbg !8592

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8593
  %33 = and i32 %32, 256, !dbg !8595
  %34 = icmp eq i32 %33, 0, !dbg !8596
  br i1 %34, label %35, label %39, !dbg !8597

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8598
  %37 = and i32 %36, 8192, !dbg !8600
  %38 = icmp eq i32 %37, 0, !dbg !8600
  br i1 %38, label %41, label %39, !dbg !8601

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !8602
  br label %41, !dbg !8603

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8603
  %43 = or i32 %42, 65280, !dbg !8603
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8603
  store i8 0, i8* %1, align 1, !dbg !8604
  ret void, !dbg !8605
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8606 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8612, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata i32 0, metadata !8613, metadata !DIExpression()), !dbg !8614
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #27, !dbg !8615
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8620
  %2 = and i32 %1, 33554432, !dbg !8622
  %3 = icmp eq i32 %2, 0, !dbg !8623
  br i1 %3, label %5, label %4, !dbg !8624

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #27, !dbg !8625
  br label %5, !dbg !8631

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8632
  %7 = and i32 %6, 16777216, !dbg !8634
  %8 = icmp eq i32 %7, 0, !dbg !8635
  br i1 %8, label %10, label %9, !dbg !8636

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #27, !dbg !8637
  br label %10, !dbg !8643

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8644
  %12 = and i32 %11, 524288, !dbg !8646
  %13 = icmp eq i32 %12, 0, !dbg !8647
  br i1 %13, label %15, label %14, !dbg !8648

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #27, !dbg !8649
  br label %15, !dbg !8655

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8656
  %17 = and i32 %16, 262144, !dbg !8658
  %18 = icmp eq i32 %17, 0, !dbg !8659
  br i1 %18, label %20, label %19, !dbg !8660

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #27, !dbg !8661
  br label %20, !dbg !8667

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8668
  %22 = and i32 %21, 131072, !dbg !8670
  %23 = icmp eq i32 %22, 0, !dbg !8671
  br i1 %23, label %25, label %24, !dbg !8672

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #27, !dbg !8673
  br label %25, !dbg !8679

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8680
  %27 = and i32 %26, 65536, !dbg !8682
  %28 = icmp eq i32 %27, 0, !dbg !8683
  br i1 %28, label %30, label %29, !dbg !8684

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #27, !dbg !8685
  br label %30, !dbg !8691

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8692
  %32 = or i32 %31, -65536, !dbg !8692
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8692
  ret void, !dbg !8693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8694 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8698, metadata !DIExpression()), !dbg !8700
  call void @llvm.dbg.value(metadata i8* %0, metadata !8699, metadata !DIExpression()), !dbg !8700
  store i8 0, i8* %0, align 1, !dbg !8701
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #27, !dbg !8702
  ret void, !dbg !8707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8708 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8712, metadata !DIExpression()), !dbg !8714
  call void @llvm.dbg.value(metadata i32 %0, metadata !8713, metadata !DIExpression()), !dbg !8714
  %2 = icmp slt i32 %0, 16, !dbg !8715
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !8715
  %4 = add nsw i32 %0, -16, !dbg !8715
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !8715
  ret void, !dbg !8720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8721 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8725, metadata !DIExpression()), !dbg !8728
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8729
  %3 = load i32, i32* %2, align 4, !dbg !8729
  %4 = inttoptr i32 %3 to i16*, !dbg !8730
  call void @llvm.dbg.value(metadata i16* %4, metadata !8726, metadata !DIExpression()), !dbg !8728
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8731
  %6 = or i32 %5, 256, !dbg !8731
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8731
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8732, !srcloc !8735
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8736, !srcloc !8739
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8740
  %8 = load i16, i16* %7, align 2, !dbg !8741
  call void @llvm.dbg.value(metadata i16 %8, metadata !8727, metadata !DIExpression()), !dbg !8728
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8742
  %10 = and i32 %9, -257, !dbg !8742
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8742
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8743, !srcloc !8735
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8745, !srcloc !8739
  %11 = icmp eq i16 %8, -8446, !dbg !8747
  ret i1 %11, !dbg !8749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #18 !dbg !8750 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8751
  %2 = or i32 %1, 16, !dbg !8751
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8751
  ret void, !dbg !8752
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #18 !dbg !8753 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8756, metadata !DIExpression()), !dbg !8757
  br label %1, !dbg !8758

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8756, metadata !DIExpression()), !dbg !8757
  tail call fastcc void @__NVIC_SetPriority.104(i32 noundef %2) #28, !dbg !8760
  %3 = add nuw nsw i32 %2, 1, !dbg !8763
  call void @llvm.dbg.value(metadata i32 %3, metadata !8756, metadata !DIExpression()), !dbg !8757
  %4 = icmp eq i32 %3, 97, !dbg !8764
  br i1 %4, label %5, label %1, !dbg !8758, !llvm.loop !8765

5:                                                ; preds = %1
  ret void, !dbg !8767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.104(i32 noundef %0) unnamed_addr #18 !dbg !8768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8770, metadata !DIExpression()), !dbg !8772
  call void @llvm.dbg.value(metadata i32 1, metadata !8771, metadata !DIExpression()), !dbg !8772
  %2 = and i32 %0, 15, !dbg !8773
  %3 = add nsw i32 %2, -4, !dbg !8773
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8773
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8773
  %6 = icmp slt i32 %0, 0, !dbg !8773
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8773
  store volatile i8 16, i8* %7, align 1, !dbg !8774
  ret void, !dbg !8776
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8777 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8885, metadata !DIExpression()), !dbg !8886
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8887
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8889
  br i1 %3, label %4, label %12, !dbg !8890

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !8891, !srcloc !8903
  call void @llvm.dbg.value(metadata i32 %5, metadata !8894, metadata !DIExpression()) #26, !dbg !8904
  %6 = icmp eq i32 %5, 0, !dbg !8905
  br i1 %6, label %12, label %7, !dbg !8906

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8907
  %9 = or i32 %8, 268435456, !dbg !8907
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8907
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8909
  %11 = and i32 %10, -32769, !dbg !8909
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8909
  br label %12, !dbg !8910

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !8911
  ret void, !dbg !8912
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8913 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !8914
  ret void, !dbg !8915
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !645, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata i8 0, metadata !646, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata i32 64, metadata !648, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata i32 undef, metadata !647, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8916
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8917
  %3 = load i32, i32* %2, align 4, !dbg !8917
  call void @llvm.dbg.value(metadata i32 %3, metadata !647, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8916
  %4 = add i32 %3, -64, !dbg !8919
  call void @llvm.dbg.value(metadata i32 %4, metadata !647, metadata !DIExpression()), !dbg !8916
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8920
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8921
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8922
  call void @llvm.dbg.value(metadata i8 1, metadata !646, metadata !DIExpression()), !dbg !8916
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !8923
  ret void, !dbg !8924
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8925 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8926
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8927, !srcloc !8930
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8931, !srcloc !8934
  ret void, !dbg !8935
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8936 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #26, !dbg !8937, !srcloc !8940
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8941
  ret void, !dbg !8942
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8943 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8958, metadata !DIExpression()), !dbg !8962
  call void @llvm.dbg.value(metadata i8 %1, metadata !8959, metadata !DIExpression()), !dbg !8962
  call void @llvm.dbg.value(metadata i32 %2, metadata !8960, metadata !DIExpression()), !dbg !8962
  call void @llvm.dbg.value(metadata i32 %3, metadata !8961, metadata !DIExpression()), !dbg !8962
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #28, !dbg !8963
  %6 = icmp eq i32 %5, -22, !dbg !8965
  br i1 %6, label %7, label %9, !dbg !8966

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 283) #27, !dbg !8967
  %8 = zext i8 %1 to i32, !dbg !8967
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef %8) #27, !dbg !8967
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 283) #27, !dbg !8967
  unreachable, !dbg !8967

9:                                                ; preds = %4
  ret void, !dbg !8972
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8973 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8978, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i8 %1, metadata !8979, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 undef, metadata !8980, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 undef, metadata !8981, metadata !DIExpression()), !dbg !8983
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8984
  call void @llvm.dbg.value(metadata i8 %3, metadata !8982, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8983
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #28, !dbg !8985
  call void @llvm.dbg.value(metadata i32 %4, metadata !8982, metadata !DIExpression()), !dbg !8983
  %5 = trunc i32 %4 to i8, !dbg !8986
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8987
  ret i32 %4, !dbg !8988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8989 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8993, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i8 %1, metadata !8994, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i8 %2, metadata !8995, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i1 %3, metadata !8996, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8999
  %5 = zext i8 %2 to i32, !dbg !9000
  call void @llvm.dbg.value(metadata i32 %5, metadata !8998, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 0, metadata !8997, metadata !DIExpression()), !dbg !8999
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8998, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 0, metadata !8997, metadata !DIExpression()), !dbg !8999
  %7 = icmp eq i8 %1, 0, !dbg !9001
  br i1 %7, label %30, label %8, !dbg !9004

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8998, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 %10, metadata !8997, metadata !DIExpression()), !dbg !8999
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !9005
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !9008
  %13 = load i32, i32* %12, align 4, !dbg !9008
  %14 = icmp eq i32 %13, 0, !dbg !9009
  br i1 %14, label %26, label %15, !dbg !9010

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !9011

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #28, !dbg !9013
  %18 = icmp eq i32 %17, 0, !dbg !9013
  br i1 %18, label %19, label %20, !dbg !9014

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.117, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !9015
  br label %30, !dbg !9021

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !9022
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #28, !dbg !9023
  call void @llvm.dbg.value(metadata i32 %22, metadata !8998, metadata !DIExpression()), !dbg !8999
  %23 = icmp eq i32 %22, -22, !dbg !9024
  br i1 %23, label %30, label %24, !dbg !9026

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !9027
  call void @llvm.dbg.value(metadata i32 %25, metadata !8998, metadata !DIExpression()), !dbg !8999
  br label %26, !dbg !9028

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8999
  call void @llvm.dbg.value(metadata i32 %27, metadata !8998, metadata !DIExpression()), !dbg !8999
  %28 = add nuw nsw i32 %10, 1, !dbg !9029
  call void @llvm.dbg.value(metadata i32 %28, metadata !8997, metadata !DIExpression()), !dbg !8999
  %29 = icmp eq i32 %28, %6, !dbg !9001
  br i1 %29, label %30, label %8, !dbg !9004, !llvm.loop !9030

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8999
  ret i32 %31, !dbg !9032
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !9033 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9037, metadata !DIExpression()), !dbg !9039
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !9040
  %3 = load i32, i32* %2, align 4, !dbg !9040
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !9041, !range !5466
  %5 = icmp ult i32 %4, 2, !dbg !9041
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !9042
  br i1 %7, label %8, label %15, !dbg !9042

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !9043
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !9044
  %11 = load i32, i32* %10, align 4, !dbg !9044
  %12 = and i32 %11, %9, !dbg !9045
  %13 = icmp eq i32 %12, 0, !dbg !9046
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9038, metadata !DIExpression()), !dbg !9039
  ret i32 %16, !dbg !9047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9048 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9052, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !9053, metadata !DIExpression()), !dbg !9055
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9056
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #26, !dbg !9056
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9054, metadata !DIExpression()), !dbg !9057
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9058
  %6 = load i32, i32* %5, align 4, !dbg !9058
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9059
  store i32 %6, i32* %7, align 4, !dbg !9060
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9061
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9062
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9063
  %11 = load i32, i32* %10, align 4, !dbg !9063
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #28, !dbg !9064
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #28, !dbg !9065
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #26, !dbg !9066
  ret i32 %12, !dbg !9067
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #15 !dbg !9068 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !9075, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !9076, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.value(metadata i32 undef, metadata !9077, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.value(metadata i32 %2, metadata !9078, metadata !DIExpression()), !dbg !9079
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !9080
  %5 = load i32, i32* %4, align 4, !dbg !9080
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #28, !dbg !9081
  %7 = or i32 %6, %5, !dbg !9082
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !9083
  store i32 %7, i32* %8, align 4, !dbg !9084
  ret void, !dbg !9085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9086 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9090, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9091, metadata !DIExpression()), !dbg !9092
  %3 = zext i8 %0 to i32, !dbg !9093
  %4 = icmp ugt i8 %0, 7, !dbg !9095
  br i1 %4, label %5, label %6, !dbg !9096

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.118, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !9097
  br label %7, !dbg !9103

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #28, !dbg !9104
  br label %7, !dbg !9105

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9092
  ret i32 %8, !dbg !9106
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #18 !dbg !9107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9111, metadata !DIExpression()), !dbg !9113
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9112, metadata !DIExpression()), !dbg !9113
  tail call fastcc void @set_region_number(i32 noundef %0) #28, !dbg !9114
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9115
  %4 = load i32, i32* %3, align 4, !dbg !9115
  %5 = and i32 %4, -32, !dbg !9116
  %6 = or i32 %5, %0, !dbg !9117
  %7 = or i32 %6, 16, !dbg !9117
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9118
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9119
  %9 = load i32, i32* %8, align 4, !dbg !9119
  %10 = or i32 %9, 1, !dbg !9120
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9121
  ret void, !dbg !9122
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #18 !dbg !9123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9126, metadata !DIExpression()), !dbg !9127
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9128
  ret void, !dbg !9129
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #6 !dbg !9130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9134, metadata !DIExpression()), !dbg !9135
  %2 = icmp ult i32 %0, 33, !dbg !9136
  br i1 %2, label %11, label %3, !dbg !9138

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9139
  br i1 %4, label %11, label %5, !dbg !9141

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9142
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9143, !range !5466
  %8 = mul nsw i32 %7, -2, !dbg !9144
  %9 = add nsw i32 %8, 62, !dbg !9144
  %10 = and i32 %9, 62, !dbg !9145
  br label %11, !dbg !9146

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9135
  ret i32 %12, !dbg !9147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9148 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9152, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.value(metadata i8 %1, metadata !9153, metadata !DIExpression()), !dbg !9154
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #28, !dbg !9155
  %4 = icmp eq i32 %3, -22, !dbg !9157
  br i1 %4, label %5, label %7, !dbg !9158

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 314) #27, !dbg !9159
  %6 = zext i8 %1 to i32, !dbg !9159
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.121, i32 0, i32 0), i32 noundef %6) #27, !dbg !9159
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 314) #27, !dbg !9159
  unreachable, !dbg !9159

7:                                                ; preds = %2
  ret void, !dbg !9164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9165 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9169, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata i8 %1, metadata !9170, metadata !DIExpression()), !dbg !9176
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9177
  call void @llvm.dbg.value(metadata i8 %3, metadata !9171, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9176
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #28, !dbg !9178
  call void @llvm.dbg.value(metadata i32 %4, metadata !9171, metadata !DIExpression()), !dbg !9176
  %5 = icmp ne i32 %4, -22, !dbg !9179
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9180
  call void @llvm.dbg.value(metadata i32 %4, metadata !9172, metadata !DIExpression()), !dbg !9181
  br i1 %7, label %8, label %12, !dbg !9180

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9172, metadata !DIExpression()), !dbg !9181
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #28, !dbg !9182
  %10 = add i32 %9, 1, !dbg !9185
  call void @llvm.dbg.value(metadata i32 %10, metadata !9172, metadata !DIExpression()), !dbg !9181
  %11 = icmp eq i32 %10, 8, !dbg !9186
  br i1 %11, label %12, label %8, !dbg !9187, !llvm.loop !9188

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !9190
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #18 !dbg !9191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9194, metadata !DIExpression()), !dbg !9195
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9196
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9197
  ret void, !dbg !9198
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9199 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9204
  %2 = icmp ugt i32 %1, 8, !dbg !9206
  br i1 %2, label %3, label %4, !dbg !9207

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 341) #27, !dbg !9208
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.122, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #27, !dbg !9208
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 341) #27, !dbg !9208
  unreachable, !dbg !9208

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #28, !dbg !9213
  call void @llvm.dbg.value(metadata i32 0, metadata !9203, metadata !DIExpression()), !dbg !9214
  %5 = icmp eq i32 %1, 0, !dbg !9215
  br i1 %5, label %13, label %6, !dbg !9218

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !9218

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9203, metadata !DIExpression()), !dbg !9214
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !9219
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #28, !dbg !9221
  %11 = add nuw i32 %9, 1, !dbg !9222
  call void @llvm.dbg.value(metadata i32 %11, metadata !9203, metadata !DIExpression()), !dbg !9214
  %12 = icmp eq i32 %11, %1, !dbg !9215
  br i1 %12, label %13, label %8, !dbg !9218, !llvm.loop !9223

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !9225
  store i8 %14, i8* @static_regions_num, align 1, !dbg !9226
  tail call void @arm_core_mpu_enable() #28, !dbg !9227
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !9228
  %16 = and i32 %15, 65280, !dbg !9228
  %17 = icmp eq i32 %16, 2048, !dbg !9228
  br i1 %17, label %19, label %18, !dbg !9231

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 435) #27, !dbg !9232
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.124, i32 0, i32 0)) #27, !dbg !9232
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 435) #27, !dbg !9232
  unreachable, !dbg !9232

19:                                               ; preds = %13
  ret i32 0, !dbg !9234
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !9235 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9242, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata i8* %1, metadata !9243, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata i8* %0, metadata !9244, metadata !DIExpression()), !dbg !9245
  %3 = load i8, i8* %1, align 1, !dbg !9246
  %4 = icmp eq i8 %3, 0, !dbg !9247
  br i1 %4, label %13, label %5, !dbg !9248

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9242, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata i8* %8, metadata !9243, metadata !DIExpression()), !dbg !9245
  store i8 %6, i8* %7, align 1, !dbg !9249
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9251
  call void @llvm.dbg.value(metadata i8* %9, metadata !9242, metadata !DIExpression()), !dbg !9245
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9252
  call void @llvm.dbg.value(metadata i8* %10, metadata !9243, metadata !DIExpression()), !dbg !9245
  %11 = load i8, i8* %10, align 1, !dbg !9246
  %12 = icmp eq i8 %11, 0, !dbg !9247
  br i1 %12, label %13, label %5, !dbg !9248, !llvm.loop !9253

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9255
  ret i8* %0, !dbg !9256
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9257 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9261, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.value(metadata i8* %1, metadata !9262, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.value(metadata i32 %2, metadata !9263, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.value(metadata i8* %0, metadata !9264, metadata !DIExpression()), !dbg !9265
  %4 = icmp eq i32 %2, 0, !dbg !9266
  br i1 %4, label %22, label %5, !dbg !9267

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9261, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.value(metadata i32 %7, metadata !9263, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.value(metadata i8* %8, metadata !9262, metadata !DIExpression()), !dbg !9265
  %9 = load i8, i8* %8, align 1, !dbg !9268
  %10 = icmp eq i8 %9, 0, !dbg !9269
  br i1 %10, label %16, label %11, !dbg !9270

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9271
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9273
  call void @llvm.dbg.value(metadata i8* %12, metadata !9262, metadata !DIExpression()), !dbg !9265
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9274
  call void @llvm.dbg.value(metadata i8* %13, metadata !9261, metadata !DIExpression()), !dbg !9265
  %14 = add i32 %7, -1, !dbg !9275
  call void @llvm.dbg.value(metadata i32 %14, metadata !9263, metadata !DIExpression()), !dbg !9265
  %15 = icmp eq i32 %14, 0, !dbg !9266
  br i1 %15, label %22, label %5, !dbg !9267, !llvm.loop !9276

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9261, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.value(metadata i32 %18, metadata !9263, metadata !DIExpression()), !dbg !9265
  store i8 0, i8* %17, align 1, !dbg !9278
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9280
  call void @llvm.dbg.value(metadata i8* %19, metadata !9261, metadata !DIExpression()), !dbg !9265
  %20 = add i32 %18, -1, !dbg !9281
  call void @llvm.dbg.value(metadata i32 %20, metadata !9263, metadata !DIExpression()), !dbg !9265
  %21 = icmp eq i32 %20, 0, !dbg !9282
  br i1 %21, label %22, label %16, !dbg !9283, !llvm.loop !9284

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9286
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9287 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9291, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata i32 %1, metadata !9292, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata i32 %1, metadata !9293, metadata !DIExpression()), !dbg !9294
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9295

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9291, metadata !DIExpression()), !dbg !9294
  %6 = load i8, i8* %5, align 1, !dbg !9296
  %7 = icmp eq i8 %6, %3, !dbg !9297
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9298
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9299
  call void @llvm.dbg.value(metadata i8* %10, metadata !9291, metadata !DIExpression()), !dbg !9294
  br i1 %9, label %11, label %4, !dbg !9298, !llvm.loop !9301

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9303
  ret i8* %12, !dbg !9304
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9305 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9307, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.value(metadata i32 %1, metadata !9308, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.value(metadata i8* null, metadata !9309, metadata !DIExpression()), !dbg !9310
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9311

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9310
  call void @llvm.dbg.value(metadata i8* %6, metadata !9309, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.value(metadata i8* %5, metadata !9307, metadata !DIExpression()), !dbg !9310
  %7 = load i8, i8* %5, align 1, !dbg !9312
  %8 = icmp eq i8 %7, %3, !dbg !9315
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9316
  call void @llvm.dbg.value(metadata i8* %9, metadata !9309, metadata !DIExpression()), !dbg !9310
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9317
  call void @llvm.dbg.value(metadata i8* %10, metadata !9307, metadata !DIExpression()), !dbg !9310
  %11 = icmp eq i8 %7, 0, !dbg !9318
  br i1 %11, label %12, label %4, !dbg !9318, !llvm.loop !9319

12:                                               ; preds = %4
  ret i8* %9, !dbg !9321
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !9322 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9326, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata i32 0, metadata !9327, metadata !DIExpression()), !dbg !9328
  %2 = load i8, i8* %0, align 1, !dbg !9329
  %3 = icmp eq i8 %2, 0, !dbg !9330
  br i1 %3, label %11, label %4, !dbg !9331

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9327, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata i8* %6, metadata !9326, metadata !DIExpression()), !dbg !9328
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9332
  call void @llvm.dbg.value(metadata i8* %7, metadata !9326, metadata !DIExpression()), !dbg !9328
  %8 = add i32 %5, 1, !dbg !9334
  call void @llvm.dbg.value(metadata i32 %8, metadata !9327, metadata !DIExpression()), !dbg !9328
  %9 = load i8, i8* %7, align 1, !dbg !9329
  %10 = icmp eq i8 %9, 0, !dbg !9330
  br i1 %10, label %11, label %4, !dbg !9331, !llvm.loop !9335

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9328
  ret i32 %12, !dbg !9337
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9338 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9342, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.value(metadata i32 %1, metadata !9343, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.value(metadata i32 0, metadata !9344, metadata !DIExpression()), !dbg !9345
  %3 = load i8, i8* %0, align 1, !dbg !9346
  %4 = icmp ne i8 %3, 0, !dbg !9347
  %5 = icmp ne i32 %1, 0, !dbg !9348
  %6 = and i1 %4, %5, !dbg !9348
  br i1 %6, label %7, label %16, !dbg !9349

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9344, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.value(metadata i8* %9, metadata !9342, metadata !DIExpression()), !dbg !9345
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9350
  call void @llvm.dbg.value(metadata i8* %10, metadata !9342, metadata !DIExpression()), !dbg !9345
  %11 = add nuw i32 %8, 1, !dbg !9352
  call void @llvm.dbg.value(metadata i32 %11, metadata !9344, metadata !DIExpression()), !dbg !9345
  %12 = load i8, i8* %10, align 1, !dbg !9346
  %13 = icmp ne i8 %12, 0, !dbg !9347
  %14 = icmp ult i32 %11, %1, !dbg !9348
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9348
  br i1 %15, label %7, label %16, !dbg !9349, !llvm.loop !9353

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9345
  ret i32 %17, !dbg !9355
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !9356 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9360, metadata !DIExpression()), !dbg !9362
  call void @llvm.dbg.value(metadata i8* %1, metadata !9361, metadata !DIExpression()), !dbg !9362
  %3 = load i8, i8* %0, align 1, !dbg !9363
  %4 = load i8, i8* %1, align 1, !dbg !9364
  %5 = icmp ne i8 %3, %4, !dbg !9365
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9366
  br i1 %7, label %18, label %8, !dbg !9366

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9361, metadata !DIExpression()), !dbg !9362
  call void @llvm.dbg.value(metadata i8* %10, metadata !9360, metadata !DIExpression()), !dbg !9362
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9367
  call void @llvm.dbg.value(metadata i8* %11, metadata !9360, metadata !DIExpression()), !dbg !9362
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9369
  call void @llvm.dbg.value(metadata i8* %12, metadata !9361, metadata !DIExpression()), !dbg !9362
  %13 = load i8, i8* %11, align 1, !dbg !9363
  %14 = load i8, i8* %12, align 1, !dbg !9364
  %15 = icmp ne i8 %13, %14, !dbg !9365
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9366
  br i1 %17, label %18, label %8, !dbg !9366, !llvm.loop !9370

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9363
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9364
  %21 = zext i8 %19 to i32, !dbg !9373
  %22 = zext i8 %20 to i32, !dbg !9374
  %23 = sub nsw i32 %21, %22, !dbg !9375
  ret i32 %23, !dbg !9376
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9377 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9381, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata i8* %1, metadata !9382, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata i32 %2, metadata !9383, metadata !DIExpression()), !dbg !9384
  %4 = icmp eq i32 %2, 0, !dbg !9385
  br i1 %4, label %23, label %5, !dbg !9385

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9383, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata i8* %7, metadata !9382, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata i8* %8, metadata !9381, metadata !DIExpression()), !dbg !9384
  %9 = load i8, i8* %8, align 1, !dbg !9386
  %10 = load i8, i8* %7, align 1, !dbg !9387
  %11 = icmp ne i8 %9, %10, !dbg !9388
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9389
  br i1 %13, label %19, label %14, !dbg !9389

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9390
  call void @llvm.dbg.value(metadata i8* %15, metadata !9381, metadata !DIExpression()), !dbg !9384
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9392
  call void @llvm.dbg.value(metadata i8* %16, metadata !9382, metadata !DIExpression()), !dbg !9384
  %17 = add i32 %6, -1, !dbg !9393
  call void @llvm.dbg.value(metadata i32 %17, metadata !9383, metadata !DIExpression()), !dbg !9384
  %18 = icmp eq i32 %17, 0, !dbg !9385
  br i1 %18, label %23, label %5, !dbg !9385, !llvm.loop !9394

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9397
  %21 = zext i8 %10 to i32, !dbg !9398
  %22 = sub nsw i32 %20, %21, !dbg !9399
  br label %23, !dbg !9400

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9400
  ret i32 %24, !dbg !9401
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #17 !dbg !9402 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9406, metadata !DIExpression()), !dbg !9411
  call void @llvm.dbg.value(metadata i8* %1, metadata !9407, metadata !DIExpression()), !dbg !9411
  call void @llvm.dbg.value(metadata i8** %2, metadata !9408, metadata !DIExpression()), !dbg !9411
  %4 = icmp eq i8* %0, null, !dbg !9412
  br i1 %4, label %5, label %7, !dbg !9412

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9413
  br label %7, !dbg !9412

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9412
  call void @llvm.dbg.value(metadata i8* %8, metadata !9409, metadata !DIExpression()), !dbg !9411
  %9 = load i8, i8* %8, align 1, !dbg !9414
  %10 = icmp eq i8 %9, 0, !dbg !9414
  br i1 %10, label %33, label %11, !dbg !9415

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9409, metadata !DIExpression()), !dbg !9411
  %14 = zext i8 %12 to i32, !dbg !9414
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #28, !dbg !9416
  %16 = icmp eq i8* %15, null, !dbg !9415
  br i1 %16, label %21, label %17, !dbg !9417

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9418
  call void @llvm.dbg.value(metadata i8* %18, metadata !9409, metadata !DIExpression()), !dbg !9411
  %19 = load i8, i8* %18, align 1, !dbg !9414
  %20 = icmp eq i8 %19, 0, !dbg !9414
  br i1 %20, label %33, label %11, !dbg !9415, !llvm.loop !9420

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9410, metadata !DIExpression()), !dbg !9411
  %24 = zext i8 %22 to i32, !dbg !9422
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #28, !dbg !9423
  %26 = icmp eq i8* %25, null, !dbg !9424
  br i1 %26, label %27, label %31, !dbg !9425

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9426
  call void @llvm.dbg.value(metadata i8* %28, metadata !9410, metadata !DIExpression()), !dbg !9411
  %29 = load i8, i8* %28, align 1, !dbg !9422
  %30 = icmp eq i8 %29, 0, !dbg !9422
  br i1 %30, label %33, label %21, !dbg !9428, !llvm.loop !9429

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9431
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9434
  br label %33, !dbg !9435

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9411
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9411
  store i8* %34, i8** %2, align 4, !dbg !9411
  ret i8* %35, !dbg !9436
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !9437 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9439, metadata !DIExpression()), !dbg !9441
  call void @llvm.dbg.value(metadata i8* %1, metadata !9440, metadata !DIExpression()), !dbg !9441
  %3 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9442
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9443
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #28, !dbg !9444
  ret i8* %0, !dbg !9445
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9448, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i8* %1, metadata !9449, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i32 %2, metadata !9450, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i8* %0, metadata !9451, metadata !DIExpression()), !dbg !9453
  %4 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9454
  call void @llvm.dbg.value(metadata i32 %4, metadata !9452, metadata !DIExpression()), !dbg !9453
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9455
  call void @llvm.dbg.value(metadata i8* %5, metadata !9448, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i8* %1, metadata !9449, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i32 %2, metadata !9450, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i32 %2, metadata !9450, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9453
  %6 = icmp eq i32 %2, 0, !dbg !9456
  br i1 %6, label %18, label %7, !dbg !9457

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9458
  call void @llvm.dbg.value(metadata i8* %9, metadata !9448, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i8* %10, metadata !9449, metadata !DIExpression()), !dbg !9453
  %12 = load i8, i8* %10, align 1, !dbg !9459
  %13 = icmp eq i8 %12, 0, !dbg !9460
  br i1 %13, label %18, label %14, !dbg !9461

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9462
  call void @llvm.dbg.value(metadata i8* %15, metadata !9449, metadata !DIExpression()), !dbg !9453
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9464
  call void @llvm.dbg.value(metadata i8* %16, metadata !9448, metadata !DIExpression()), !dbg !9453
  store i8 %12, i8* %9, align 1, !dbg !9465
  call void @llvm.dbg.value(metadata i32 %11, metadata !9450, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i32 %11, metadata !9450, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9453
  %17 = icmp eq i32 %11, 0, !dbg !9456
  br i1 %17, label %18, label %7, !dbg !9457, !llvm.loop !9466

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9453
  store i8 0, i8* %19, align 1, !dbg !9468
  ret i8* %0, !dbg !9469
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9470 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9474, metadata !DIExpression()), !dbg !9479
  call void @llvm.dbg.value(metadata i8* %1, metadata !9475, metadata !DIExpression()), !dbg !9479
  call void @llvm.dbg.value(metadata i32 %2, metadata !9476, metadata !DIExpression()), !dbg !9479
  call void @llvm.dbg.value(metadata i8* %0, metadata !9477, metadata !DIExpression()), !dbg !9479
  call void @llvm.dbg.value(metadata i8* %1, metadata !9478, metadata !DIExpression()), !dbg !9479
  %4 = icmp eq i32 %2, 0, !dbg !9480
  br i1 %4, label %31, label %5, !dbg !9482

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9478, metadata !DIExpression()), !dbg !9479
  call void @llvm.dbg.value(metadata i8* %0, metadata !9477, metadata !DIExpression()), !dbg !9479
  call void @llvm.dbg.value(metadata i32 %2, metadata !9476, metadata !DIExpression()), !dbg !9479
  %6 = add i32 %2, -1, !dbg !9483
  call void @llvm.dbg.value(metadata i32 %6, metadata !9476, metadata !DIExpression()), !dbg !9479
  %7 = icmp eq i32 %6, 0, !dbg !9484
  br i1 %7, label %23, label %8, !dbg !9485

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9486
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9486
  br label %11, !dbg !9486

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9478, metadata !DIExpression()), !dbg !9479
  call void @llvm.dbg.value(metadata i8* %14, metadata !9477, metadata !DIExpression()), !dbg !9479
  %15 = load i8, i8* %14, align 1, !dbg !9487
  %16 = load i8, i8* %13, align 1, !dbg !9488
  %17 = icmp eq i8 %15, %16, !dbg !9489
  br i1 %17, label %18, label %23, !dbg !9486

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9490
  call void @llvm.dbg.value(metadata i8* %19, metadata !9477, metadata !DIExpression()), !dbg !9479
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9492
  call void @llvm.dbg.value(metadata i8* %20, metadata !9478, metadata !DIExpression()), !dbg !9479
  call void @llvm.dbg.value(metadata i32 %12, metadata !9476, metadata !DIExpression()), !dbg !9479
  %21 = add i32 %12, -1, !dbg !9483
  call void @llvm.dbg.value(metadata i32 %21, metadata !9476, metadata !DIExpression()), !dbg !9479
  %22 = icmp eq i32 %21, 0, !dbg !9484
  br i1 %22, label %23, label %11, !dbg !9485, !llvm.loop !9493

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9479
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9479
  %26 = load i8, i8* %24, align 1, !dbg !9495
  %27 = zext i8 %26 to i32, !dbg !9495
  %28 = load i8, i8* %25, align 1, !dbg !9496
  %29 = zext i8 %28 to i32, !dbg !9496
  %30 = sub nsw i32 %27, %29, !dbg !9497
  br label %31, !dbg !9498

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9479
  ret i32 %32, !dbg !9499
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9500 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9504, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i8* %1, metadata !9505, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i32 %2, metadata !9506, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i8* %0, metadata !9507, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i8* %1, metadata !9508, metadata !DIExpression()), !dbg !9509
  %4 = ptrtoint i8* %0 to i32, !dbg !9510
  %5 = ptrtoint i8* %1 to i32, !dbg !9510
  %6 = sub i32 %4, %5, !dbg !9510
  %7 = icmp ult i32 %6, %2, !dbg !9512
  br i1 %7, label %10, label %8, !dbg !9513

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9508, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i8* %0, metadata !9507, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i32 %2, metadata !9506, metadata !DIExpression()), !dbg !9509
  %9 = icmp eq i32 %2, 0, !dbg !9514
  br i1 %9, label %26, label %17, !dbg !9516

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9506, metadata !DIExpression()), !dbg !9509
  %12 = add i32 %11, -1, !dbg !9517
  call void @llvm.dbg.value(metadata i32 %12, metadata !9506, metadata !DIExpression()), !dbg !9509
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9520
  %14 = load i8, i8* %13, align 1, !dbg !9520
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9521
  store i8 %14, i8* %15, align 1, !dbg !9522
  %16 = icmp eq i32 %12, 0, !dbg !9523
  br i1 %16, label %26, label %10, !dbg !9524, !llvm.loop !9525

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9508, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i8* %19, metadata !9507, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i32 %20, metadata !9506, metadata !DIExpression()), !dbg !9509
  %21 = load i8, i8* %18, align 1, !dbg !9527
  store i8 %21, i8* %19, align 1, !dbg !9529
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9530
  call void @llvm.dbg.value(metadata i8* %22, metadata !9507, metadata !DIExpression()), !dbg !9509
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9531
  call void @llvm.dbg.value(metadata i8* %23, metadata !9508, metadata !DIExpression()), !dbg !9509
  %24 = add i32 %20, -1, !dbg !9532
  call void @llvm.dbg.value(metadata i32 %24, metadata !9506, metadata !DIExpression()), !dbg !9509
  %25 = icmp eq i32 %24, 0, !dbg !9514
  br i1 %25, label %26, label %17, !dbg !9516, !llvm.loop !9533

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9535
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9536 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9542, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.value(metadata i8* %1, metadata !9543, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.value(metadata i32 %2, metadata !9544, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.value(metadata i8* %0, metadata !9545, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.value(metadata i8* %1, metadata !9546, metadata !DIExpression()), !dbg !9547
  %4 = icmp eq i32 %2, 0, !dbg !9548
  br i1 %4, label %14, label %5, !dbg !9549

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9546, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.value(metadata i8* %7, metadata !9545, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.value(metadata i32 %8, metadata !9544, metadata !DIExpression()), !dbg !9547
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9550
  call void @llvm.dbg.value(metadata i8* %9, metadata !9546, metadata !DIExpression()), !dbg !9547
  %10 = load i8, i8* %6, align 1, !dbg !9552
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9553
  call void @llvm.dbg.value(metadata i8* %11, metadata !9545, metadata !DIExpression()), !dbg !9547
  store i8 %10, i8* %7, align 1, !dbg !9554
  %12 = add i32 %8, -1, !dbg !9555
  call void @llvm.dbg.value(metadata i32 %12, metadata !9544, metadata !DIExpression()), !dbg !9547
  %13 = icmp eq i32 %12, 0, !dbg !9548
  br i1 %13, label %14, label %5, !dbg !9549, !llvm.loop !9556

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9558
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9559 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9563, metadata !DIExpression()), !dbg !9568
  call void @llvm.dbg.value(metadata i32 %1, metadata !9564, metadata !DIExpression()), !dbg !9568
  call void @llvm.dbg.value(metadata i32 %2, metadata !9565, metadata !DIExpression()), !dbg !9568
  call void @llvm.dbg.value(metadata i8* %0, metadata !9566, metadata !DIExpression()), !dbg !9568
  %4 = trunc i32 %1 to i8, !dbg !9569
  call void @llvm.dbg.value(metadata i8 %4, metadata !9567, metadata !DIExpression()), !dbg !9568
  call void @llvm.dbg.value(metadata i32 %2, metadata !9565, metadata !DIExpression()), !dbg !9568
  call void @llvm.dbg.value(metadata i8* %0, metadata !9566, metadata !DIExpression()), !dbg !9568
  %5 = icmp eq i32 %2, 0, !dbg !9570
  br i1 %5, label %12, label %6, !dbg !9571

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9565, metadata !DIExpression()), !dbg !9568
  call void @llvm.dbg.value(metadata i8* %8, metadata !9566, metadata !DIExpression()), !dbg !9568
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9572
  call void @llvm.dbg.value(metadata i8* %9, metadata !9566, metadata !DIExpression()), !dbg !9568
  store i8 %4, i8* %8, align 1, !dbg !9574
  %10 = add i32 %7, -1, !dbg !9575
  call void @llvm.dbg.value(metadata i32 %10, metadata !9565, metadata !DIExpression()), !dbg !9568
  %11 = icmp eq i32 %10, 0, !dbg !9570
  br i1 %11, label %12, label %6, !dbg !9571, !llvm.loop !9576

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9578
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9579 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9583, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.value(metadata i32 %1, metadata !9584, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.value(metadata i32 %2, metadata !9585, metadata !DIExpression()), !dbg !9589
  %4 = icmp eq i32 %2, 0, !dbg !9590
  br i1 %4, label %17, label %5, !dbg !9591

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9592

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9593
  call void @llvm.dbg.value(metadata i8* %9, metadata !9586, metadata !DIExpression()), !dbg !9593
  call void @llvm.dbg.value(metadata i32 %8, metadata !9585, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.value(metadata i8* %9, metadata !9586, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9593
  %10 = load i8, i8* %9, align 1, !dbg !9594
  %11 = icmp eq i8 %10, %6, !dbg !9597
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9598
  call void @llvm.dbg.value(metadata i8* %12, metadata !9586, metadata !DIExpression()), !dbg !9593
  call void @llvm.dbg.value(metadata i32 %13, metadata !9585, metadata !DIExpression()), !dbg !9589
  br i1 %15, label %16, label %7, !dbg !9598, !llvm.loop !9599

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9601

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9589
  ret i8* %19, !dbg !9602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !9603 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9605, metadata !DIExpression()), !dbg !9606
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9607
  ret void, !dbg !9608
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9611, metadata !DIExpression()), !dbg !9612
  ret i32 -1, !dbg !9613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9618, metadata !DIExpression()), !dbg !9620
  call void @llvm.dbg.value(metadata i32* %1, metadata !9619, metadata !DIExpression()), !dbg !9620
  %3 = ptrtoint i32* %1 to i32, !dbg !9621
  %4 = and i32 %3, -2, !dbg !9621
  %5 = icmp eq i32 %4, 2, !dbg !9621
  br i1 %5, label %6, label %9, !dbg !9621

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9622
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !9622
  br label %9, !dbg !9623

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9623
  ret i32 %10, !dbg !9624
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9625 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9627, metadata !DIExpression()), !dbg !9629
  call void @llvm.dbg.value(metadata i32* %1, metadata !9628, metadata !DIExpression()), !dbg !9629
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #28, !dbg !9630
  ret i32 %3, !dbg !9631
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9635, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32* %1, metadata !9636, metadata !DIExpression()), !dbg !9637
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9638, !srcloc !9640
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #28, !dbg !9641
  ret i32 %3, !dbg !9642
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9643 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9648, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.value(metadata i32* %1, metadata !9649, metadata !DIExpression()), !dbg !9652
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9653
  call void @llvm.dbg.value(metadata i32 %3, metadata !9650, metadata !DIExpression()), !dbg !9652
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #28, !dbg !9654
  call void @llvm.dbg.value(metadata i32 %4, metadata !9651, metadata !DIExpression()), !dbg !9652
  %5 = icmp ne i32 %3, %4, !dbg !9655
  %6 = sext i1 %5 to i32, !dbg !9656
  ret i32 %6, !dbg !9657
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9658 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9662, metadata !DIExpression()), !dbg !9666
  call void @llvm.dbg.value(metadata i32 %1, metadata !9663, metadata !DIExpression()), !dbg !9666
  call void @llvm.dbg.value(metadata i32 %2, metadata !9664, metadata !DIExpression()), !dbg !9666
  call void @llvm.dbg.value(metadata i32* %3, metadata !9665, metadata !DIExpression()), !dbg !9666
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #28, !dbg !9667
  ret i32 %5, !dbg !9668
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9669 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9671, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata i32 %1, metadata !9672, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata i32 %2, metadata !9673, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata i32* %3, metadata !9674, metadata !DIExpression()), !dbg !9675
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9676, !srcloc !9678
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #28, !dbg !9679
  ret i32 %5, !dbg !9680
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9681 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9683, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.value(metadata i32 %1, metadata !9684, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.value(metadata i32 %2, metadata !9685, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.value(metadata i32* %3, metadata !9686, metadata !DIExpression()), !dbg !9691
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9692
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9694
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9694
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9694
  br i1 %11, label %33, label %12, !dbg !9694

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9691
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9691
  call void @llvm.dbg.value(metadata i8* %14, metadata !9689, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.value(metadata i32 %13, metadata !9687, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.value(metadata i32 %1, metadata !9688, metadata !DIExpression()), !dbg !9691
  br label %15, !dbg !9695

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9697
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9691
  call void @llvm.dbg.value(metadata i8* %17, metadata !9689, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.value(metadata i32 %16, metadata !9688, metadata !DIExpression()), !dbg !9691
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9698
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9701
  call void @llvm.dbg.value(metadata i8* %19, metadata !9689, metadata !DIExpression()), !dbg !9691
  %20 = load i8, i8* %17, align 1, !dbg !9702
  %21 = zext i8 %20 to i32, !dbg !9703
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !9698
  %23 = icmp eq i32 %22, -1, !dbg !9704
  br i1 %23, label %30, label %24, !dbg !9705

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9706
  call void @llvm.dbg.value(metadata i32 %25, metadata !9688, metadata !DIExpression()), !dbg !9691
  %26 = icmp eq i32 %25, 0, !dbg !9707
  br i1 %26, label %27, label %15, !dbg !9708, !llvm.loop !9709

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9711
  call void @llvm.dbg.value(metadata i32 %28, metadata !9687, metadata !DIExpression()), !dbg !9691
  %29 = icmp eq i32 %28, 0, !dbg !9712
  br i1 %29, label %30, label %12, !dbg !9713, !llvm.loop !9714

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9691
  call void @llvm.dbg.value(metadata i32 %31, metadata !9687, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.label(metadata !9690), !dbg !9717
  %32 = sub i32 %2, %31, !dbg !9718
  br label %33, !dbg !9719

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9691
  ret i32 %34, !dbg !9720
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9721 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9725, metadata !DIExpression()), !dbg !9726
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #28, !dbg !9727
  %3 = icmp eq i32 %2, -1, !dbg !9729
  br i1 %3, label %8, label %4, !dbg !9730

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #28, !dbg !9731
  %6 = icmp eq i32 %5, -1, !dbg !9732
  %7 = sext i1 %6 to i32, !dbg !9731
  br label %8, !dbg !9733

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9726
  ret i32 %9, !dbg !9734
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9735 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9737, metadata !DIExpression()), !dbg !9738
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #28, !dbg !9739
  ret void, !dbg !9740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9745, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.value(metadata i32 %1, metadata !9746, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9747, metadata !DIExpression()), !dbg !9751
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9752
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9752
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9752
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9748, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.value(metadata i32 %0, metadata !9750, metadata !DIExpression()), !dbg !9751
  %7 = icmp slt i32 %0, %1, !dbg !9753
  br i1 %7, label %8, label %22, !dbg !9756

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9750, metadata !DIExpression()), !dbg !9751
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #28, !dbg !9757
  %11 = icmp eq i32 %10, 0, !dbg !9757
  br i1 %11, label %19, label %12, !dbg !9760

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #28, !dbg !9761
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9763
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9763
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9765
  br i1 %15, label %19, label %16, !dbg !9766

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9767
  %18 = load i8*, i8** %17, align 4, !dbg !9767
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !9768
  br label %19, !dbg !9769

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9770
  call void @llvm.dbg.value(metadata i32 %20, metadata !9750, metadata !DIExpression()), !dbg !9751
  %21 = icmp eq i32 %20, %1, !dbg !9753
  br i1 %21, label %22, label %8, !dbg !9756, !llvm.loop !9771

22:                                               ; preds = %19, %3
  ret void, !dbg !9773
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #7 !dbg !9774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9776, metadata !DIExpression()), !dbg !9777
  %2 = shl nuw i32 1, %0, !dbg !9778
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #28, !dbg !9781
  ret i32 %3, !dbg !9782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #18 !dbg !9783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9787, metadata !DIExpression()), !dbg !9788
  %2 = shl nuw i32 1, %0, !dbg !9789
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #28, !dbg !9792
  ret void, !dbg !9793
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9797, metadata !DIExpression()), !dbg !9798
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9799
  ret void, !dbg !9800
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #7 !dbg !9801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9803, metadata !DIExpression()), !dbg !9804
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9805
  %3 = and i32 %2, %0, !dbg !9805
  %4 = icmp eq i32 %3, %0, !dbg !9806
  %5 = zext i1 %4 to i32, !dbg !9806
  ret i32 %5, !dbg !9807
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9808 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9810, metadata !DIExpression()), !dbg !9811
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #28, !dbg !9812
  ret void, !dbg !9813
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9814 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9816, metadata !DIExpression()), !dbg !9817
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #28, !dbg !9818
  ret void, !dbg !9819
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9820 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9822, metadata !DIExpression()), !dbg !9823
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #28, !dbg !9824
  ret void, !dbg !9825
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9826 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9828, metadata !DIExpression()), !dbg !9829
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #28, !dbg !9830
  ret void, !dbg !9831
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9834, metadata !DIExpression()), !dbg !9835
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #28, !dbg !9836
  ret void, !dbg !9837
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9838 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9840, metadata !DIExpression()), !dbg !9841
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #28, !dbg !9842
  ret void, !dbg !9843
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9844 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9846, metadata !DIExpression()), !dbg !9847
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #28, !dbg !9848
  ret void, !dbg !9849
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9852, metadata !DIExpression()), !dbg !9853
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #28, !dbg !9854
  ret void, !dbg !9855
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9856 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9858, metadata !DIExpression()), !dbg !9859
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #28, !dbg !9860
  ret void, !dbg !9861
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9862 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9864, metadata !DIExpression()), !dbg !9865
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #28, !dbg !9866
  ret void, !dbg !9867
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9868 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9870, metadata !DIExpression()), !dbg !9871
  tail call fastcc void @__stm32_exti_connect_irqs() #28, !dbg !9872
  ret i32 0, !dbg !9873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !908 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !912, metadata !DIExpression()), !dbg !9874
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !9875
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !9877
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !9879
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !9881
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !9883
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !9885
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !9887
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !9889
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !9891
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !9893
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !9895
  ret void, !dbg !9897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9900, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i32 0, metadata !9901, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i32 undef, metadata !9901, metadata !DIExpression()), !dbg !9902
  %2 = lshr i32 6684671, %0, !dbg !9903
  %3 = and i32 %2, 1, !dbg !9903
  %4 = or i32 %3, %0, !dbg !9905
  %5 = icmp eq i32 %4, 0, !dbg !9905
  br i1 %5, label %6, label %7, !dbg !9905

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 123) #27, !dbg !9906
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 123) #27, !dbg !9906
  unreachable, !dbg !9906

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9911
  %9 = load i32, i32* %8, align 4, !dbg !9911
  call void @llvm.dbg.value(metadata i32 %9, metadata !9901, metadata !DIExpression()), !dbg !9902
  %10 = shl nuw i32 1, %0, !dbg !9912
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #28, !dbg !9913
  tail call void @arch_irq_enable(i32 noundef %9) #27, !dbg !9914
  ret void, !dbg !9915
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9918, metadata !DIExpression()), !dbg !9919
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9920
  %3 = or i32 %2, %0, !dbg !9920
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9920
  ret void, !dbg !9921
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #18 !dbg !9922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9924, metadata !DIExpression()), !dbg !9925
  %2 = icmp slt i32 %0, 32, !dbg !9926
  br i1 %2, label %3, label %5, !dbg !9928

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9929
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #28, !dbg !9931
  br label %5, !dbg !9932

5:                                                ; preds = %1, %3
  ret void, !dbg !9933
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9936, metadata !DIExpression()), !dbg !9937
  %2 = xor i32 %0, -1, !dbg !9938
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9938
  %4 = and i32 %3, %2, !dbg !9938
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9938
  ret void, !dbg !9939
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #18 !dbg !9940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9944, metadata !DIExpression()), !dbg !9946
  call void @llvm.dbg.value(metadata i32 %1, metadata !9945, metadata !DIExpression()), !dbg !9946
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9947

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9948
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #28, !dbg !9950
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #28, !dbg !9951
  br label %11, !dbg !9952

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9953
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #28, !dbg !9954
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #28, !dbg !9955
  br label %11, !dbg !9956

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9957
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #28, !dbg !9958
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #28, !dbg !9959
  br label %11, !dbg !9960

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9961
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #28, !dbg !9962
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #28, !dbg !9963
  br label %11, !dbg !9964

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9968, metadata !DIExpression()), !dbg !9969
  %2 = xor i32 %0, -1, !dbg !9970
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9970
  %4 = and i32 %3, %2, !dbg !9970
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9970
  ret void, !dbg !9971
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9972 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9974, metadata !DIExpression()), !dbg !9975
  %2 = xor i32 %0, -1, !dbg !9976
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9976
  %4 = and i32 %3, %2, !dbg !9976
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9976
  ret void, !dbg !9977
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9980, metadata !DIExpression()), !dbg !9981
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9982
  %3 = or i32 %2, %0, !dbg !9982
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9982
  ret void, !dbg !9983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9986, metadata !DIExpression()), !dbg !9987
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9988
  %3 = or i32 %2, %0, !dbg !9988
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9988
  ret void, !dbg !9989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #14 !dbg !9990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9994, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9995, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata i8* %2, metadata !9996, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !9997, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9999, metadata !DIExpression()), !dbg !10000
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10001
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10001
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10003
  br i1 %6, label %7, label %9, !dbg !10004

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10005
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10006
  store i8* %2, i8** %8, align 4, !dbg !10007
  br label %9, !dbg !10008

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10000
  ret i32 %10, !dbg !10009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #12 !dbg !10010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10012, metadata !DIExpression()), !dbg !10015
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !10013, metadata !DIExpression()), !dbg !10015
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10014, metadata !DIExpression()), !dbg !10015
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10016
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10017
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10018
  store i8* null, i8** %3, align 4, !dbg !10019
  ret void, !dbg !10020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #18 !dbg !10021 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10023, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.value(metadata i8* %1, metadata !10024, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.value(metadata i8* %1, metadata !10025, metadata !DIExpression()), !dbg !10028
  %3 = bitcast i8* %1 to i32*, !dbg !10029
  %4 = load i32, i32* %3, align 4, !dbg !10029
  %5 = add i32 %4, -169, !dbg !10029
  %6 = icmp ult i32 %5, -121, !dbg !10029
  br i1 %6, label %15, label %7, !dbg !10031

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10032
  %9 = inttoptr i32 %8 to i32*, !dbg !10033
  call void @llvm.dbg.value(metadata i32* %9, metadata !10026, metadata !DIExpression()), !dbg !10028
  %10 = load volatile i32, i32* %9, align 4, !dbg !10034
  call void @llvm.dbg.value(metadata i32 %10, metadata !10027, metadata !DIExpression()), !dbg !10028
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10035
  %12 = bitcast i8* %11 to i32*, !dbg !10035
  %13 = load i32, i32* %12, align 4, !dbg !10035
  %14 = or i32 %13, %10, !dbg !10036
  call void @llvm.dbg.value(metadata i32 %14, metadata !10027, metadata !DIExpression()), !dbg !10028
  store volatile i32 %14, i32* %9, align 4, !dbg !10037
  br label %15, !dbg !10038

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10028
  ret i32 %16, !dbg !10039
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #18 !dbg !10040 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10042, metadata !DIExpression()), !dbg !10047
  call void @llvm.dbg.value(metadata i8* %1, metadata !10043, metadata !DIExpression()), !dbg !10047
  call void @llvm.dbg.value(metadata i8* %1, metadata !10044, metadata !DIExpression()), !dbg !10047
  %3 = bitcast i8* %1 to i32*, !dbg !10048
  %4 = load i32, i32* %3, align 4, !dbg !10048
  %5 = add i32 %4, -169, !dbg !10048
  %6 = icmp ult i32 %5, -121, !dbg !10048
  br i1 %6, label %16, label %7, !dbg !10050

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10051
  %9 = inttoptr i32 %8 to i32*, !dbg !10052
  call void @llvm.dbg.value(metadata i32* %9, metadata !10045, metadata !DIExpression()), !dbg !10047
  %10 = load volatile i32, i32* %9, align 4, !dbg !10053
  call void @llvm.dbg.value(metadata i32 %10, metadata !10046, metadata !DIExpression()), !dbg !10047
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10054
  %12 = bitcast i8* %11 to i32*, !dbg !10054
  %13 = load i32, i32* %12, align 4, !dbg !10054
  %14 = xor i32 %13, -1, !dbg !10055
  %15 = and i32 %10, %14, !dbg !10056
  call void @llvm.dbg.value(metadata i32 %15, metadata !10046, metadata !DIExpression()), !dbg !10047
  store volatile i32 %15, i32* %9, align 4, !dbg !10057
  br label %16, !dbg !10058

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10047
  ret i32 %17, !dbg !10059
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10060 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10062, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i8* %1, metadata !10063, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i32* %2, metadata !10064, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i8* %1, metadata !10065, metadata !DIExpression()), !dbg !10070
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10071
  call void @llvm.dbg.value(metadata i32 %4, metadata !10066, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i32 undef, metadata !10067, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i32 undef, metadata !10068, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i32 %4, metadata !10069, metadata !DIExpression()), !dbg !10070
  %5 = bitcast i8* %1 to i32*, !dbg !10072
  %6 = load i32, i32* %5, align 4, !dbg !10072
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !10073

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #28, !dbg !10074
  call void @llvm.dbg.value(metadata i32 %8, metadata !10067, metadata !DIExpression()), !dbg !10070
  br label %19, !dbg !10075

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #28, !dbg !10077
  call void @llvm.dbg.value(metadata i32 %10, metadata !10068, metadata !DIExpression()), !dbg !10070
  br label %19, !dbg !10078

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10079
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #28, !dbg !10080
  br label %19, !dbg !10081

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10082
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #28, !dbg !10083
  br label %19, !dbg !10084

17:                                               ; preds = %3
  br label %19, !dbg !10085

18:                                               ; preds = %3
  br label %19, !dbg !10086

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !10087
  br label %21, !dbg !10088

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !10070
  ret i32 %22, !dbg !10088
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #18 !dbg !10089 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10091, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.value(metadata i8* %1, metadata !10092, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.value(metadata i8* %2, metadata !10093, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.value(metadata i8* %1, metadata !10094, metadata !DIExpression()), !dbg !10099
  %4 = bitcast i8* %1 to i32*, !dbg !10100
  %5 = load i32, i32* %4, align 4, !dbg !10100
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #28, !dbg !10101
  call void @llvm.dbg.value(metadata i32 %6, metadata !10098, metadata !DIExpression()), !dbg !10099
  %7 = icmp slt i32 %6, 0, !dbg !10102
  br i1 %7, label %22, label %8, !dbg !10104

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10094, metadata !DIExpression()), !dbg !10099
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10105
  %10 = bitcast i8* %9 to i32*, !dbg !10105
  %11 = load i32, i32* %10, align 4, !dbg !10105
  %12 = lshr i32 %11, 16, !dbg !10105
  %13 = and i32 %12, 7, !dbg !10105
  %14 = lshr i32 %11, 8, !dbg !10106
  %15 = and i32 %14, 31, !dbg !10106
  %16 = shl i32 %13, %15, !dbg !10107
  call void @llvm.dbg.value(metadata i32 %16, metadata !10097, metadata !DIExpression()), !dbg !10099
  %17 = and i32 %11, 255, !dbg !10108
  %18 = or i32 %17, 1073887232, !dbg !10109
  %19 = inttoptr i32 %18 to i32*, !dbg !10110
  call void @llvm.dbg.value(metadata i32* %19, metadata !10095, metadata !DIExpression()), !dbg !10099
  %20 = load volatile i32, i32* %19, align 4, !dbg !10111
  call void @llvm.dbg.value(metadata i32 %20, metadata !10096, metadata !DIExpression()), !dbg !10099
  %21 = or i32 %16, %20, !dbg !10112
  call void @llvm.dbg.value(metadata i32 %21, metadata !10096, metadata !DIExpression()), !dbg !10099
  store volatile i32 %21, i32* %19, align 4, !dbg !10113
  br label %22, !dbg !10114

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10099
  ret i32 %23, !dbg !10115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !10116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10120, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata i32 0, metadata !10121, metadata !DIExpression()), !dbg !10122
  %2 = add i32 %0, -1, !dbg !10123
  %3 = icmp ult i32 %2, 6, !dbg !10123
  br i1 %3, label %4, label %7, !dbg !10123

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10123
  %6 = load i32, i32* %5, align 4, !dbg !10123
  call void @llvm.dbg.value(metadata i32 %6, metadata !10121, metadata !DIExpression()), !dbg !10122
  br label %7, !dbg !10124

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10122
  ret i32 %8, !dbg !10125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !10126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10130, metadata !DIExpression()), !dbg !10132
  call void @llvm.dbg.value(metadata i32 %1, metadata !10131, metadata !DIExpression()), !dbg !10132
  %3 = udiv i32 %0, %1, !dbg !10133
  ret i32 %3, !dbg !10134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !10135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10139, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i32 8, metadata !10140, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i32 84, metadata !10141, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i32 %1, metadata !10142, metadata !DIExpression()), !dbg !10143
  %3 = mul i32 %0, 84, !dbg !10144
  %4 = shl nsw i32 %1, 3, !dbg !10145
  %5 = udiv i32 %3, %4, !dbg !10146
  ret i32 %5, !dbg !10147
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10148 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10150, metadata !DIExpression()), !dbg !10153
  tail call void @config_enable_default_clocks() #27, !dbg !10154
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !10155
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #28, !dbg !10155
  %4 = lshr i32 %3, 4, !dbg !10155
  %5 = and i32 %4, 15, !dbg !10155
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10155
  %7 = load i8, i8* %6, align 1, !dbg !10155
  %8 = zext i8 %7 to i32, !dbg !10155
  %9 = lshr i32 %2, %8, !dbg !10155
  call void @llvm.dbg.value(metadata i32 %9, metadata !10151, metadata !DIExpression()), !dbg !10153
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10152, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10153
  %10 = icmp ult i32 %9, 84000000, !dbg !10156
  br i1 %10, label %11, label %13, !dbg !10158

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10159
  br label %13, !dbg !10161

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #28, !dbg !10162
  tail call fastcc void @set_up_plls() #28, !dbg !10163
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #28, !dbg !10164
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #28, !dbg !10167
  br label %14, !dbg !10168

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10169
  %16 = icmp eq i32 %15, 8, !dbg !10170
  br i1 %16, label %17, label %14, !dbg !10168, !llvm.loop !10171

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10173
  br i1 %18, label %19, label %21, !dbg !10175

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10176
  br label %21, !dbg !10178

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10179
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #28, !dbg !10180
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #28, !dbg !10181
  ret i32 0, !dbg !10182
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #7 !dbg !10183 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10185
  %2 = and i32 %1, 240, !dbg !10185
  ret i32 %2, !dbg !10186
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #18 !dbg !10187 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #28, !dbg !10188
  tail call fastcc void @LL_RCC_HSE_Enable() #28, !dbg !10193
  br label %1, !dbg !10194

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #28, !dbg !10195
  %3 = icmp eq i32 %2, 1, !dbg !10196
  br i1 %3, label %4, label %1, !dbg !10194, !llvm.loop !10197

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #28, !dbg !10199
  br label %5, !dbg !10202

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #28, !dbg !10203
  %7 = icmp eq i32 %6, 1, !dbg !10204
  br i1 %7, label %8, label %5, !dbg !10202, !llvm.loop !10205

8:                                                ; preds = %5
  ret void, !dbg !10207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10208 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10209
  %2 = icmp eq i32 %1, 8, !dbg !10211
  br i1 %2, label %3, label %4, !dbg !10212

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #28, !dbg !10213
  tail call fastcc void @stm32_clock_switch_to_hsi() #28, !dbg !10215
  br label %4, !dbg !10216

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #28, !dbg !10217
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10218
  %6 = and i32 %5, -196609, !dbg !10218
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10218
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10219
  %8 = and i32 %7, -251658241, !dbg !10219
  %9 = or i32 %8, 134217728, !dbg !10219
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10219
  tail call void @config_pll_sysclock() #27, !dbg !10220
  tail call fastcc void @LL_RCC_PLL_Enable() #28, !dbg !10221
  br label %10, !dbg !10222

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #28, !dbg !10223
  %12 = icmp eq i32 %11, 1, !dbg !10224
  br i1 %12, label %13, label %10, !dbg !10222, !llvm.loop !10225

13:                                               ; preds = %10
  ret void, !dbg !10227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #18 !dbg !10228 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10230, metadata !DIExpression()), !dbg !10231
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10232
  %2 = and i32 %1, -241, !dbg !10232
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10232
  ret void, !dbg !10233
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #18 !dbg !10234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10236, metadata !DIExpression()), !dbg !10237
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10238
  %3 = and i32 %2, -4, !dbg !10238
  %4 = or i32 %3, %0, !dbg !10238
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10238
  ret void, !dbg !10239
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #7 !dbg !10240 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10241
  %2 = and i32 %1, 12, !dbg !10241
  ret i32 %2, !dbg !10242
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #18 !dbg !10243 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10245, metadata !DIExpression()), !dbg !10246
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10247
  %2 = and i32 %1, -7169, !dbg !10247
  %3 = or i32 %2, 4096, !dbg !10247
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10247
  ret void, !dbg !10248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #18 !dbg !10249 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10251, metadata !DIExpression()), !dbg !10252
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10253
  %2 = and i32 %1, -57345, !dbg !10253
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10253
  ret void, !dbg !10254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #18 !dbg !10255 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10256
  %2 = icmp eq i32 %1, 1, !dbg !10258
  br i1 %2, label %7, label %3, !dbg !10259

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #28, !dbg !10260
  br label %4, !dbg !10262

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10263
  %6 = icmp eq i32 %5, 1, !dbg !10264
  br i1 %6, label %7, label %4, !dbg !10262, !llvm.loop !10265

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #28, !dbg !10267
  br label %8, !dbg !10268

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10269
  %10 = icmp eq i32 %9, 0, !dbg !10270
  br i1 %10, label %11, label %8, !dbg !10268, !llvm.loop !10271

11:                                               ; preds = %8
  ret void, !dbg !10273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #18 !dbg !10274 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10275
  %2 = and i32 %1, -16777217, !dbg !10275
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10275
  ret void, !dbg !10276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #18 !dbg !10277 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10278
  %2 = or i32 %1, 16777216, !dbg !10278
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10278
  ret void, !dbg !10279
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #7 !dbg !10280 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10281
  %2 = lshr i32 %1, 25, !dbg !10282
  %3 = and i32 %2, 1, !dbg !10282
  ret i32 %3, !dbg !10283
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #7 !dbg !10284 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10285
  %2 = lshr i32 %1, 1, !dbg !10286
  %3 = and i32 %2, 1, !dbg !10286
  ret i32 %3, !dbg !10287
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #18 !dbg !10288 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10289
  %2 = or i32 %1, 1, !dbg !10289
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10289
  ret void, !dbg !10290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #18 !dbg !10291 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10292
  %2 = and i32 %1, -262145, !dbg !10292
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10292
  ret void, !dbg !10293
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #18 !dbg !10294 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10295
  %2 = or i32 %1, 65536, !dbg !10295
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10295
  ret void, !dbg !10296
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #7 !dbg !10297 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10298
  %2 = lshr i32 %1, 17, !dbg !10299
  %3 = and i32 %2, 1, !dbg !10299
  ret i32 %3, !dbg !10300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #18 !dbg !10301 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10302
  %2 = or i32 %1, 1, !dbg !10302
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10302
  ret void, !dbg !10303
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #7 !dbg !10304 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10305
  %2 = lshr i32 %1, 1, !dbg !10306
  %3 = and i32 %2, 1, !dbg !10306
  ret i32 %3, !dbg !10307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10308 {
  ret i32 16000000, !dbg !10310
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #18 !dbg !10314 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #28, !dbg !10315
  ret void, !dbg !10316
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #18 !dbg !10317 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10321, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i32 8, metadata !10322, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i32 84, metadata !10323, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i32 0, metadata !10324, metadata !DIExpression()), !dbg !10325
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10326
  %2 = and i32 %1, -4227072, !dbg !10326
  %3 = or i32 %2, 4199688, !dbg !10326
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10326
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10327
  %5 = and i32 %4, -196609, !dbg !10327
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10327
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10328
  %7 = and i32 %6, -1879048193, !dbg !10328
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10328
  ret void, !dbg !10329
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10330 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #28, !dbg !10331
  ret void, !dbg !10332
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10333 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10336, metadata !DIExpression()), !dbg !10338
  %2 = bitcast i32* %1 to i8*, !dbg !10339
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10339
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10337, metadata !DIExpression()), !dbg !10340
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10341
  %4 = or i32 %3, 268435456, !dbg !10341
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10341
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10342
  %6 = and i32 %5, 268435456, !dbg !10342
  store volatile i32 %6, i32* %1, align 4, !dbg !10343
  %7 = load volatile i32, i32* %1, align 4, !dbg !10344
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10345
  ret void, !dbg !10345
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10348, metadata !DIExpression()), !dbg !10349
  %2 = tail call fastcc zeroext i1 @device_is_ready() #28, !dbg !10350
  br i1 %2, label %3, label %4, !dbg !10352

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #28, !dbg !10353
  br label %4, !dbg !10354

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10349
  ret i32 %5, !dbg !10355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10356 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10361, metadata !DIExpression()), !dbg !10362
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10363, !srcloc !10365
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #28, !dbg !10366
  ret i1 %1, !dbg !10367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10368 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10369
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10370
  ret void, !dbg !10371
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10374, metadata !DIExpression()), !dbg !10375
  %2 = icmp eq i32 %0, 10, !dbg !10376
  br i1 %2, label %3, label %4, !dbg !10378

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #28, !dbg !10379
  br label %4, !dbg !10381

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10382
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #28, !dbg !10383
  ret i32 %0, !dbg !10384
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10385 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10388, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i8 %0, metadata !10389, metadata !DIExpression()), !dbg !10390
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10391, !srcloc !10393
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #28, !dbg !10394
  ret void, !dbg !10395
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10396 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10398, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i8 %0, metadata !10399, metadata !DIExpression()), !dbg !10401
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10402
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10400, metadata !DIExpression()), !dbg !10401
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10403
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10403
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #27, !dbg !10404
  ret void, !dbg !10405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10406 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10408, metadata !DIExpression()), !dbg !10409
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #27, !dbg !10410
  ret i1 %1, !dbg !10411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10412 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10461, metadata !DIExpression()), !dbg !10464
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10462, metadata !DIExpression()), !dbg !10464
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10463, metadata !DIExpression()), !dbg !10464
  ret void, !dbg !10465
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10466 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10468, metadata !DIExpression()), !dbg !10473
  call void @llvm.dbg.value(metadata i8 %1, metadata !10469, metadata !DIExpression()), !dbg !10473
  call void @llvm.dbg.value(metadata i32 %2, metadata !10470, metadata !DIExpression()), !dbg !10473
  %5 = bitcast i32* %4 to i8*, !dbg !10474
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10474
  call void @llvm.dbg.value(metadata i32* %4, metadata !10472, metadata !DIExpression(DW_OP_deref)), !dbg !10473
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #28, !dbg !10475
  call void @llvm.dbg.value(metadata i32 %6, metadata !10471, metadata !DIExpression()), !dbg !10473
  %7 = icmp eq i32 %6, 0, !dbg !10476
  br i1 %7, label %8, label %31, !dbg !10478

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10471, metadata !DIExpression()), !dbg !10473
  %9 = and i32 %2, 131072, !dbg !10479
  %10 = icmp eq i32 %9, 0, !dbg !10481
  br i1 %10, label %28, label %11, !dbg !10482

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10483
  %13 = icmp eq i32 %12, 0, !dbg !10486
  br i1 %13, label %18, label %14, !dbg !10487

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10488
  %16 = shl nuw i32 1, %15, !dbg !10488
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #28, !dbg !10490
  br label %25, !dbg !10491

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10492
  %20 = icmp eq i32 %19, 0, !dbg !10494
  %21 = zext i8 %1 to i32, !dbg !10473
  br i1 %20, label %25, label %22, !dbg !10495

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10496
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #28, !dbg !10498
  br label %25, !dbg !10499

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10500
  %27 = load i32, i32* %4, align 4, !dbg !10501
  call void @llvm.dbg.value(metadata i32 %30, metadata !10472, metadata !DIExpression()), !dbg !10473
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #28, !dbg !10502
  br label %31, !dbg !10503

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10500
  %30 = load i32, i32* %4, align 4, !dbg !10501
  call void @llvm.dbg.value(metadata i32 %30, metadata !10472, metadata !DIExpression()), !dbg !10473
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #28, !dbg !10502
  call void @llvm.dbg.value(metadata i32 0, metadata !10471, metadata !DIExpression()), !dbg !10473
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10504
  ret i32 %6, !dbg !10504
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #7 !dbg !10505 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10509, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.value(metadata i32* %1, metadata !10510, metadata !DIExpression()), !dbg !10514
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10515
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10515
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10515
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10511, metadata !DIExpression()), !dbg !10514
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10516
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10516
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10516
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10513, metadata !DIExpression()), !dbg !10514
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #28, !dbg !10517
  store i32 %9, i32* %1, align 4, !dbg !10518
  ret i32 0, !dbg !10519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #18 !dbg !10520 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10522, metadata !DIExpression()), !dbg !10528
  call void @llvm.dbg.value(metadata i32 %1, metadata !10523, metadata !DIExpression()), !dbg !10528
  call void @llvm.dbg.value(metadata i32 %2, metadata !10524, metadata !DIExpression()), !dbg !10528
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10529
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10529
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10529
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10525, metadata !DIExpression()), !dbg !10528
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10530
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10530
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10530
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10526, metadata !DIExpression()), !dbg !10528
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #28, !dbg !10531
  call void @llvm.dbg.value(metadata i32 %10, metadata !10527, metadata !DIExpression()), !dbg !10528
  %11 = xor i32 %1, -1, !dbg !10532
  %12 = and i32 %10, %11, !dbg !10533
  %13 = and i32 %2, %1, !dbg !10534
  %14 = or i32 %12, %13, !dbg !10535
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #28, !dbg !10536
  ret i32 0, !dbg !10537
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10538 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10540, metadata !DIExpression()), !dbg !10544
  call void @llvm.dbg.value(metadata i32 %1, metadata !10541, metadata !DIExpression()), !dbg !10544
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10545
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10545
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10545
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10542, metadata !DIExpression()), !dbg !10544
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10546
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10546
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10546
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10543, metadata !DIExpression()), !dbg !10544
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10547
  store volatile i32 %1, i32* %9, align 4, !dbg !10547
  ret i32 0, !dbg !10548
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10549 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10551, metadata !DIExpression()), !dbg !10555
  call void @llvm.dbg.value(metadata i32 %1, metadata !10552, metadata !DIExpression()), !dbg !10555
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10556
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10556
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10556
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10553, metadata !DIExpression()), !dbg !10555
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10557
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10557
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10557
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10554, metadata !DIExpression()), !dbg !10555
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #28, !dbg !10558
  ret i32 0, !dbg !10559
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10560 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10562, metadata !DIExpression()), !dbg !10566
  call void @llvm.dbg.value(metadata i32 %1, metadata !10563, metadata !DIExpression()), !dbg !10566
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10567
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10567
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10567
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10564, metadata !DIExpression()), !dbg !10566
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10568
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10568
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10568
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10565, metadata !DIExpression()), !dbg !10566
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10569
  %10 = load volatile i32, i32* %9, align 4, !dbg !10569
  %11 = xor i32 %10, %1, !dbg !10569
  store volatile i32 %11, i32* %9, align 4, !dbg !10569
  ret i32 0, !dbg !10570
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10571 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10573, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata i8 %1, metadata !10574, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata i32 %2, metadata !10575, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata i32 %3, metadata !10576, metadata !DIExpression()), !dbg !10583
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10584
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10584
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10584
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10577, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata i8* undef, metadata !10578, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata i32 0, metadata !10580, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata i32 0, metadata !10581, metadata !DIExpression()), !dbg !10583
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10585

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10586
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #28, !dbg !10590
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10591
  %12 = load i32, i32* %11, align 4, !dbg !10591
  %13 = icmp eq i32 %10, %12, !dbg !10592
  br i1 %13, label %14, label %29, !dbg !10593

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !10594
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !10596
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !10597
  br label %29, !dbg !10598

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10599
  %17 = load i8*, i8** %16, align 4, !dbg !10599
  call void @llvm.dbg.value(metadata i8* %17, metadata !10578, metadata !DIExpression()), !dbg !10583
  %18 = zext i8 %1 to i32, !dbg !10600
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !10602
  %20 = icmp eq i32 %19, 0, !dbg !10603
  br i1 %20, label %21, label %29, !dbg !10604

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10605
  %23 = load i32, i32* %22, align 4, !dbg !10605
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #28, !dbg !10606
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10607

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10580, metadata !DIExpression()), !dbg !10583
  br label %27, !dbg !10608

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10580, metadata !DIExpression()), !dbg !10583
  br label %27, !dbg !10610

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10580, metadata !DIExpression()), !dbg !10583
  br label %27, !dbg !10611

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10583
  call void @llvm.dbg.value(metadata i32 %28, metadata !10580, metadata !DIExpression()), !dbg !10583
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !10612
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !10613
  br label %29, !dbg !10613

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10583
  call void @llvm.dbg.value(metadata i32 %30, metadata !10581, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.label(metadata !10582), !dbg !10614
  ret i32 %30, !dbg !10615
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10616 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10618, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10619, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i1 %2, metadata !10620, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10622
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10623
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10623
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10623
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10621, metadata !DIExpression()), !dbg !10622
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10624
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #28, !dbg !10625
  ret i32 %8, !dbg !10626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10627 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10633, metadata !DIExpression()), !dbg !10636
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10634, metadata !DIExpression()), !dbg !10636
  call void @llvm.dbg.value(metadata i1 %2, metadata !10635, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10636
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10637
  br i1 %4, label %5, label %6, !dbg !10640

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 42) #27, !dbg !10641
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.153, i32 0, i32 0)) #27, !dbg !10641
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 42) #27, !dbg !10641
  unreachable, !dbg !10641

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10643
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10643
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10643
  br i1 %9, label %10, label %11, !dbg !10646

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 43) #27, !dbg !10647
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.155, i32 0, i32 0)) #27, !dbg !10647
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 43) #27, !dbg !10647
  unreachable, !dbg !10647

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #28, !dbg !10649
  br i1 %12, label %18, label %13, !dbg !10651

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10652
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #28, !dbg !10655
  %16 = or i1 %15, %2, !dbg !10656
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10656
  br i1 %2, label %19, label %21, !dbg !10656

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10657

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10658
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #28, !dbg !10661
  br label %21, !dbg !10662

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10636
  ret i32 %22, !dbg !10663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10664 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10668, metadata !DIExpression()), !dbg !10669
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10670
  %3 = icmp eq %struct._snode* %2, null, !dbg !10670
  ret i1 %3, !dbg !10670
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #17 !dbg !10671 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10675, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10676, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10677, metadata !DIExpression()), !dbg !10679
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10680
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10678, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10677, metadata !DIExpression()), !dbg !10679
  %4 = icmp eq %struct._snode* %3, null, !dbg !10682
  br i1 %4, label %15, label %5, !dbg !10680

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10678, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10677, metadata !DIExpression()), !dbg !10679
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10684
  br i1 %6, label %9, label %11, !dbg !10687

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10678, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10677, metadata !DIExpression()), !dbg !10679
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10684
  br i1 %8, label %9, label %11, !dbg !10687, !llvm.loop !10688

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #28, !dbg !10689
  br label %15, !dbg !10689

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10678, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10677, metadata !DIExpression()), !dbg !10679
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #28, !dbg !10682
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10678, metadata !DIExpression()), !dbg !10679
  %14 = icmp eq %struct._snode* %13, null, !dbg !10682
  br i1 %14, label %15, label %7, !dbg !10680, !llvm.loop !10688

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10692 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10696, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10697, metadata !DIExpression()), !dbg !10698
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10699
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #28, !dbg !10699
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #28, !dbg !10699
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10700
  %5 = icmp eq %struct._snode* %4, null, !dbg !10700
  br i1 %5, label %6, label %8, !dbg !10699

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10702
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #28, !dbg !10702
  br label %8, !dbg !10702

8:                                                ; preds = %6, %2
  ret void, !dbg !10699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10704 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10708, metadata !DIExpression()), !dbg !10709
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10710
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10710
  ret %struct._snode* %3, !dbg !10711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10712 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10716, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10717, metadata !DIExpression()), !dbg !10718
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10719
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10720
  ret void, !dbg !10721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10722 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10724, metadata !DIExpression()), !dbg !10726
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10725, metadata !DIExpression()), !dbg !10726
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10727
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10728
  ret void, !dbg !10729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10730 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10732, metadata !DIExpression()), !dbg !10733
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10734
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10734
  ret %struct._snode* %3, !dbg !10735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10736 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10738, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10739, metadata !DIExpression()), !dbg !10740
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10741
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10742
  ret void, !dbg !10743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #14 !dbg !10744 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10748, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10749, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10750, metadata !DIExpression()), !dbg !10751
  %4 = icmp eq %struct._snode* %1, null, !dbg !10752
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #28, !dbg !10754
  br i1 %4, label %6, label %11, !dbg !10755

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #28, !dbg !10756
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10758
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10758
  br i1 %8, label %9, label %15, !dbg !10756

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10760
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #28, !dbg !10760
  br label %15, !dbg !10760

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #28, !dbg !10762
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10764
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10764
  br i1 %13, label %14, label %15, !dbg !10762

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #28, !dbg !10766
  br label %15, !dbg !10766

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #28, !dbg !10755
  ret void, !dbg !10755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #13 !dbg !10768 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10772, metadata !DIExpression()), !dbg !10773
  %2 = icmp eq %struct._snode* %0, null, !dbg !10774
  br i1 %2, label %5, label %3, !dbg !10774

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #28, !dbg !10774
  br label %5, !dbg !10774

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10774
  ret %struct._snode* %6, !dbg !10774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10775 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10777, metadata !DIExpression()), !dbg !10778
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #28, !dbg !10779
  ret %struct._snode* %2, !dbg !10779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10780 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10782, metadata !DIExpression()), !dbg !10783
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10784
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10784
  ret %struct._snode* %3, !dbg !10785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10788, metadata !DIExpression()), !dbg !10791
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #28, !dbg !10792, !range !10793
  call void @llvm.dbg.value(metadata i32 %2, metadata !10789, metadata !DIExpression()), !dbg !10791
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #28, !dbg !10794
  call void @llvm.dbg.value(metadata i32 %3, metadata !10790, metadata !DIExpression()), !dbg !10791
  ret i32 %3, !dbg !10795
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10798, metadata !DIExpression()), !dbg !10801
  call void @llvm.dbg.value(metadata i8* %1, metadata !10799, metadata !DIExpression()), !dbg !10801
  call void @llvm.dbg.value(metadata i8* %1, metadata !10800, metadata !DIExpression()), !dbg !10801
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10802
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10802
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10803
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10803
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10803
  %8 = shl nuw i32 1, %0, !dbg !10804
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #28, !dbg !10805
  ret void, !dbg !10806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10807 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10811, metadata !DIExpression()), !dbg !10817
  call void @llvm.dbg.value(metadata i32 %1, metadata !10812, metadata !DIExpression()), !dbg !10817
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10813, metadata !DIExpression()), !dbg !10817
  %4 = bitcast i64* %3 to i8*, !dbg !10818
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10818
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10815, metadata !DIExpression()), !dbg !10817
  store i64 70368744177732, i64* %3, align 8, !dbg !10819
  call void @llvm.dbg.value(metadata i64* %3, metadata !10815, metadata !DIExpression(DW_OP_deref)), !dbg !10817
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #28, !dbg !10820
  call void @llvm.dbg.value(metadata i32 %5, metadata !10816, metadata !DIExpression()), !dbg !10817
  %6 = icmp eq i32 %5, 0, !dbg !10821
  br i1 %6, label %7, label %8, !dbg !10823

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #28, !dbg !10824
  br label %8, !dbg !10825

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10826
  ret void, !dbg !10826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10827 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10829, metadata !DIExpression()), !dbg !10832
  call void @llvm.dbg.value(metadata i8* %0, metadata !10830, metadata !DIExpression()), !dbg !10832
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10833
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10831, metadata !DIExpression()), !dbg !10832
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10834
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10834
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !10835
  ret i32 %5, !dbg !10836
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10839, metadata !DIExpression()), !dbg !10842
  call void @llvm.dbg.value(metadata i32 %1, metadata !10840, metadata !DIExpression()), !dbg !10842
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #28, !dbg !10843
  call void @llvm.dbg.value(metadata i32 %3, metadata !10841, metadata !DIExpression()), !dbg !10842
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #28, !dbg !10844
  ret void, !dbg !10845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10850, metadata !DIExpression()), !dbg !10851
  %2 = sdiv i32 %0, 4, !dbg !10852
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10853
  %6 = add nsw i32 %5, 16, !dbg !10854
  %7 = shl i32 15, %6, !dbg !10855
  %8 = or i32 %7, %2, !dbg !10856
  ret i32 %8, !dbg !10857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10862, metadata !DIExpression()), !dbg !10864
  call void @llvm.dbg.value(metadata i32 %1, metadata !10863, metadata !DIExpression()), !dbg !10864
  %3 = and i32 %1, 255, !dbg !10865
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10865
  %5 = load volatile i32, i32* %4, align 4, !dbg !10865
  %6 = lshr i32 %1, 16, !dbg !10865
  %7 = xor i32 %6, -1, !dbg !10865
  %8 = and i32 %5, %7, !dbg !10865
  call void @llvm.dbg.value(metadata i32 %6, metadata !10866, metadata !DIExpression()) #26, !dbg !10870
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !10872, !srcloc !10873
  call void @llvm.dbg.value(metadata i32 %9, metadata !10869, metadata !DIExpression()) #26, !dbg !10870
  call void @llvm.dbg.value(metadata i32 %9, metadata !10874, metadata !DIExpression()) #26, !dbg !10879
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #26, !dbg !10881, !range !5466
  %11 = shl i32 %0, %10, !dbg !10865
  %12 = or i32 %11, %8, !dbg !10865
  store volatile i32 %12, i32* %4, align 4, !dbg !10865
  ret void, !dbg !10882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10883 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10887, metadata !DIExpression()), !dbg !10892
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10888, metadata !DIExpression()), !dbg !10892
  call void @llvm.dbg.value(metadata i32 %2, metadata !10889, metadata !DIExpression()), !dbg !10892
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10893
  %5 = icmp eq %struct._snode* %4, null, !dbg !10893
  br i1 %5, label %24, label %6, !dbg !10893

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #28, !dbg !10895
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10891, metadata !DIExpression()), !dbg !10892
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10890, metadata !DIExpression()), !dbg !10892
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10896
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10896
  %12 = load i32, i32* %11, align 4, !dbg !10896
  %13 = and i32 %12, %2, !dbg !10900
  %14 = icmp eq i32 %13, 0, !dbg !10900
  br i1 %14, label %22, label %15, !dbg !10901

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10902
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10902
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10902
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10902
  br i1 %19, label %20, label %21, !dbg !10906

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 77) #27, !dbg !10907
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.155, i32 0, i32 0)) #27, !dbg !10907
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 77) #27, !dbg !10907
  unreachable, !dbg !10907

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #27, !dbg !10909
  br label %22, !dbg !10910

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10890, metadata !DIExpression()), !dbg !10892
  %23 = icmp eq %struct._snode* %8, null, !dbg !10911
  br i1 %23, label %24, label %6, !dbg !10911

24:                                               ; preds = %22, %3
  ret void, !dbg !10912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10915, metadata !DIExpression()), !dbg !10916
  %2 = and i32 %0, 255, !dbg !10917
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10917
  %4 = load volatile i32, i32* %3, align 4, !dbg !10917
  %5 = lshr i32 %0, 16, !dbg !10917
  %6 = and i32 %4, %5, !dbg !10917
  call void @llvm.dbg.value(metadata i32 %5, metadata !10866, metadata !DIExpression()) #26, !dbg !10918
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #31, !dbg !10920, !srcloc !10873
  call void @llvm.dbg.value(metadata i32 %7, metadata !10869, metadata !DIExpression()) #26, !dbg !10918
  call void @llvm.dbg.value(metadata i32 %7, metadata !10874, metadata !DIExpression()) #26, !dbg !10921
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !10923, !range !5466
  %9 = lshr i32 %6, %8, !dbg !10924
  ret i32 %9, !dbg !10925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !10926 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10931, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i32 %1, metadata !10932, metadata !DIExpression()), !dbg !10933
  %3 = shl i32 %1, 16, !dbg !10934
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10934
  store volatile i32 %3, i32* %4, align 4, !dbg !10934
  ret void, !dbg !10935
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #7 !dbg !10936 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10940, metadata !DIExpression()), !dbg !10941
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10942
  %3 = load volatile i32, i32* %2, align 4, !dbg !10942
  ret i32 %3, !dbg !10943
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !10944 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10946, metadata !DIExpression()), !dbg !10948
  call void @llvm.dbg.value(metadata i32 %1, metadata !10947, metadata !DIExpression()), !dbg !10948
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10949
  store volatile i32 %1, i32* %3, align 4, !dbg !10949
  ret void, !dbg !10950
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #7 !dbg !10951 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10953, metadata !DIExpression()), !dbg !10954
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10955
  %3 = load volatile i32, i32* %2, align 4, !dbg !10955
  ret i32 %3, !dbg !10956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #14 !dbg !10957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10961, metadata !DIExpression()), !dbg !10963
  call void @llvm.dbg.value(metadata i32* %1, metadata !10962, metadata !DIExpression()), !dbg !10963
  %3 = and i32 %0, 131072, !dbg !10964
  %4 = icmp eq i32 %3, 0, !dbg !10966
  br i1 %4, label %22, label %5, !dbg !10967

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10968
  %6 = and i32 %0, 2, !dbg !10970
  %7 = icmp eq i32 %6, 0, !dbg !10972
  br i1 %7, label %11, label %8, !dbg !10973

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10974
  %10 = icmp eq i32 %9, 0, !dbg !10974
  br i1 %10, label %33, label %11, !dbg !10977

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10978
  store i32 %12, i32* %1, align 4, !dbg !10978
  %13 = and i32 %0, 16, !dbg !10979
  %14 = icmp eq i32 %13, 0, !dbg !10981
  br i1 %14, label %17, label %15, !dbg !10982

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10983
  br label %31, !dbg !10985

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10986
  %19 = icmp eq i32 %18, 0, !dbg !10988
  br i1 %19, label %33, label %20, !dbg !10989

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10990
  br label %31, !dbg !10992

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10993
  %24 = icmp eq i32 %23, 0, !dbg !10995
  br i1 %24, label %31, label %25, !dbg !10996

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10997
  %27 = icmp eq i32 %26, 0, !dbg !11000
  br i1 %27, label %28, label %31, !dbg !11001

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11002
  br label %33, !dbg !11003

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10963
  ret i32 %34, !dbg !11003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11004 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11008, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %1, metadata !11009, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %2, metadata !11010, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %3, metadata !11011, metadata !DIExpression()), !dbg !11019
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11020
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11020
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11020
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11012, metadata !DIExpression()), !dbg !11019
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11021
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11021
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11021
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11013, metadata !DIExpression()), !dbg !11019
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #28, !dbg !11022
  call void @llvm.dbg.value(metadata i32 %11, metadata !11014, metadata !DIExpression()), !dbg !11019
  %12 = and i32 %2, 48, !dbg !11023
  call void @llvm.dbg.value(metadata i32 %12, metadata !11015, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %2, metadata !11016, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %2, metadata !11017, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %2, metadata !11018, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11019
  %13 = lshr i32 %2, 6, !dbg !11024
  %14 = and i32 %13, 1, !dbg !11024
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #28, !dbg !11025
  %15 = lshr i32 %2, 7, !dbg !11026
  %16 = and i32 %15, 3, !dbg !11026
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #28, !dbg !11027
  %17 = lshr i32 %2, 9, !dbg !11028
  %18 = and i32 %17, 3, !dbg !11028
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #28, !dbg !11029
  %19 = icmp eq i32 %12, 32, !dbg !11030
  br i1 %19, label %20, label %24, !dbg !11032

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11033
  br i1 %21, label %22, label %23, !dbg !11036

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #28, !dbg !11037
  br label %24, !dbg !11039

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #28, !dbg !11040
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11042
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #28, !dbg !11043
  ret void, !dbg !11044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !11045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11047, metadata !DIExpression()), !dbg !11049
  %2 = shl nuw i32 1, %0, !dbg !11050
  call void @llvm.dbg.value(metadata i32 %2, metadata !11048, metadata !DIExpression()), !dbg !11049
  ret i32 %2, !dbg !11051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !11052 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11056, metadata !DIExpression()), !dbg !11059
  call void @llvm.dbg.value(metadata i32 %1, metadata !11057, metadata !DIExpression()), !dbg !11059
  call void @llvm.dbg.value(metadata i32 %2, metadata !11058, metadata !DIExpression()), !dbg !11059
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11060
  %5 = load volatile i32, i32* %4, align 4, !dbg !11060
  %6 = xor i32 %1, -1, !dbg !11060
  %7 = and i32 %5, %6, !dbg !11060
  %8 = mul i32 %2, %1, !dbg !11060
  %9 = or i32 %7, %8, !dbg !11060
  store volatile i32 %9, i32* %4, align 4, !dbg !11060
  ret void, !dbg !11061
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11062 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11064, metadata !DIExpression()), !dbg !11067
  call void @llvm.dbg.value(metadata i32 %1, metadata !11065, metadata !DIExpression()), !dbg !11067
  call void @llvm.dbg.value(metadata i32 %2, metadata !11066, metadata !DIExpression()), !dbg !11067
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11068
  %5 = load volatile i32, i32* %4, align 4, !dbg !11068
  call void @llvm.dbg.value(metadata i32 %1, metadata !10866, metadata !DIExpression()) #26, !dbg !11069
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11071, !srcloc !10873
  call void @llvm.dbg.value(metadata i32 %6, metadata !10869, metadata !DIExpression()) #26, !dbg !11069
  call void @llvm.dbg.value(metadata i32 %6, metadata !10874, metadata !DIExpression()) #26, !dbg !11072
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11074, !range !5466
  %8 = shl nuw nsw i32 %7, 1, !dbg !11068
  %9 = shl i32 3, %8, !dbg !11068
  %10 = xor i32 %9, -1, !dbg !11068
  %11 = and i32 %5, %10, !dbg !11068
  call void @llvm.dbg.value(metadata i32 %1, metadata !10866, metadata !DIExpression()) #26, !dbg !11075
  call void @llvm.dbg.value(metadata i32 %6, metadata !10869, metadata !DIExpression()) #26, !dbg !11075
  call void @llvm.dbg.value(metadata i32 %6, metadata !10874, metadata !DIExpression()) #26, !dbg !11077
  %12 = shl i32 %2, %8, !dbg !11068
  %13 = or i32 %11, %12, !dbg !11068
  store volatile i32 %13, i32* %4, align 4, !dbg !11068
  ret void, !dbg !11079
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11080 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11082, metadata !DIExpression()), !dbg !11085
  call void @llvm.dbg.value(metadata i32 %1, metadata !11083, metadata !DIExpression()), !dbg !11085
  call void @llvm.dbg.value(metadata i32 %2, metadata !11084, metadata !DIExpression()), !dbg !11085
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11086
  %5 = load volatile i32, i32* %4, align 4, !dbg !11086
  call void @llvm.dbg.value(metadata i32 %1, metadata !10866, metadata !DIExpression()) #26, !dbg !11087
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11089, !srcloc !10873
  call void @llvm.dbg.value(metadata i32 %6, metadata !10869, metadata !DIExpression()) #26, !dbg !11087
  call void @llvm.dbg.value(metadata i32 %6, metadata !10874, metadata !DIExpression()) #26, !dbg !11090
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11092, !range !5466
  %8 = shl nuw nsw i32 %7, 1, !dbg !11086
  %9 = shl i32 3, %8, !dbg !11086
  %10 = xor i32 %9, -1, !dbg !11086
  %11 = and i32 %5, %10, !dbg !11086
  call void @llvm.dbg.value(metadata i32 %1, metadata !10866, metadata !DIExpression()) #26, !dbg !11093
  call void @llvm.dbg.value(metadata i32 %6, metadata !10869, metadata !DIExpression()) #26, !dbg !11093
  call void @llvm.dbg.value(metadata i32 %6, metadata !10874, metadata !DIExpression()) #26, !dbg !11095
  %12 = shl i32 %2, %8, !dbg !11086
  %13 = or i32 %11, %12, !dbg !11086
  store volatile i32 %13, i32* %4, align 4, !dbg !11086
  ret void, !dbg !11097
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11098 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11100, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i32 %1, metadata !11101, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i32 %2, metadata !11102, metadata !DIExpression()), !dbg !11103
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11104
  %5 = load volatile i32, i32* %4, align 4, !dbg !11104
  call void @llvm.dbg.value(metadata i32 %1, metadata !10866, metadata !DIExpression()) #26, !dbg !11105
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11107, !srcloc !10873
  call void @llvm.dbg.value(metadata i32 %6, metadata !10869, metadata !DIExpression()) #26, !dbg !11105
  call void @llvm.dbg.value(metadata i32 %6, metadata !10874, metadata !DIExpression()) #26, !dbg !11108
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11110, !range !5466
  %8 = shl nuw nsw i32 %7, 2, !dbg !11104
  %9 = shl i32 15, %8, !dbg !11104
  %10 = xor i32 %9, -1, !dbg !11104
  %11 = and i32 %5, %10, !dbg !11104
  call void @llvm.dbg.value(metadata i32 %1, metadata !10866, metadata !DIExpression()) #26, !dbg !11111
  call void @llvm.dbg.value(metadata i32 %6, metadata !10869, metadata !DIExpression()) #26, !dbg !11111
  call void @llvm.dbg.value(metadata i32 %6, metadata !10874, metadata !DIExpression()) #26, !dbg !11113
  %12 = shl i32 %2, %8, !dbg !11104
  %13 = or i32 %11, %12, !dbg !11104
  store volatile i32 %13, i32* %4, align 4, !dbg !11104
  ret void, !dbg !11115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11116 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11118, metadata !DIExpression()), !dbg !11121
  call void @llvm.dbg.value(metadata i32 %1, metadata !11119, metadata !DIExpression()), !dbg !11121
  call void @llvm.dbg.value(metadata i32 %2, metadata !11120, metadata !DIExpression()), !dbg !11121
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11122
  %5 = load volatile i32, i32* %4, align 4, !dbg !11122
  %6 = lshr i32 %1, 8, !dbg !11122
  call void @llvm.dbg.value(metadata i32 %6, metadata !10866, metadata !DIExpression()) #26, !dbg !11123
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !11125, !srcloc !10873
  call void @llvm.dbg.value(metadata i32 %7, metadata !10869, metadata !DIExpression()) #26, !dbg !11123
  call void @llvm.dbg.value(metadata i32 %7, metadata !10874, metadata !DIExpression()) #26, !dbg !11126
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !11128, !range !5466
  %9 = shl nuw nsw i32 %8, 2, !dbg !11122
  %10 = shl i32 15, %9, !dbg !11122
  %11 = xor i32 %10, -1, !dbg !11122
  %12 = and i32 %5, %11, !dbg !11122
  call void @llvm.dbg.value(metadata i32 %6, metadata !10866, metadata !DIExpression()) #26, !dbg !11129
  call void @llvm.dbg.value(metadata i32 %7, metadata !10869, metadata !DIExpression()) #26, !dbg !11129
  call void @llvm.dbg.value(metadata i32 %7, metadata !10874, metadata !DIExpression()) #26, !dbg !11131
  %13 = shl i32 %2, %9, !dbg !11122
  %14 = or i32 %12, %13, !dbg !11122
  store volatile i32 %14, i32* %4, align 4, !dbg !11122
  ret void, !dbg !11133
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11134 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11136, metadata !DIExpression()), !dbg !11139
  call void @llvm.dbg.value(metadata i32 %1, metadata !11137, metadata !DIExpression()), !dbg !11139
  call void @llvm.dbg.value(metadata i32 %2, metadata !11138, metadata !DIExpression()), !dbg !11139
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11140
  %5 = load volatile i32, i32* %4, align 4, !dbg !11140
  call void @llvm.dbg.value(metadata i32 %1, metadata !10866, metadata !DIExpression()) #26, !dbg !11141
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11143, !srcloc !10873
  call void @llvm.dbg.value(metadata i32 %6, metadata !10869, metadata !DIExpression()) #26, !dbg !11141
  call void @llvm.dbg.value(metadata i32 %6, metadata !10874, metadata !DIExpression()) #26, !dbg !11144
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11146, !range !5466
  %8 = shl nuw nsw i32 %7, 1, !dbg !11140
  %9 = shl i32 3, %8, !dbg !11140
  %10 = xor i32 %9, -1, !dbg !11140
  %11 = and i32 %5, %10, !dbg !11140
  call void @llvm.dbg.value(metadata i32 %1, metadata !10866, metadata !DIExpression()) #26, !dbg !11147
  call void @llvm.dbg.value(metadata i32 %6, metadata !10869, metadata !DIExpression()) #26, !dbg !11147
  call void @llvm.dbg.value(metadata i32 %6, metadata !10874, metadata !DIExpression()) #26, !dbg !11149
  %12 = shl i32 %2, %8, !dbg !11140
  %13 = or i32 %11, %12, !dbg !11140
  store volatile i32 %13, i32* %4, align 4, !dbg !11140
  ret void, !dbg !11151
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11152 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11154, metadata !DIExpression()), !dbg !11157
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11158
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11158
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11158
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11155, metadata !DIExpression()), !dbg !11157
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11159
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11160
  %6 = tail call fastcc zeroext i1 @device_is_ready.165() #28, !dbg !11161
  br i1 %6, label %7, label %11, !dbg !11163

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #28, !dbg !11164
  call void @llvm.dbg.value(metadata i32 %8, metadata !11156, metadata !DIExpression()), !dbg !11157
  %9 = icmp slt i32 %8, 0, !dbg !11165
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11167
  br label %11, !dbg !11167

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11157
  ret i32 %12, !dbg !11168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.165() unnamed_addr #1 !dbg !11169 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11173, metadata !DIExpression()), !dbg !11174
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11175, !srcloc !11177
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.166() #28, !dbg !11178
  ret i1 %1, !dbg !11179
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !11180 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11184, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i8 1, metadata !11185, metadata !DIExpression()), !dbg !11189
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11190
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11190
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11190
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11186, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 0, metadata !11187, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11188, metadata !DIExpression()), !dbg !11189
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11191
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11194
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #28, !dbg !11195
  call void @llvm.dbg.value(metadata i32 %7, metadata !11187, metadata !DIExpression()), !dbg !11189
  ret i32 %7, !dbg !11196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.166() unnamed_addr #1 !dbg !11197 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11199, metadata !DIExpression()), !dbg !11200
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !11201
  ret i1 %1, !dbg !11202
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11203 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11207, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata i32 %1, metadata !11208, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata i32 %2, metadata !11209, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata i32 %3, metadata !11210, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata i32 0, metadata !11211, metadata !DIExpression()), !dbg !11215
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #28, !dbg !11216
  %5 = icmp eq i32 %3, 17, !dbg !11217
  br i1 %5, label %6, label %14, !dbg !11218

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11219
  call void @llvm.dbg.value(metadata i32 %7, metadata !11212, metadata !DIExpression()), !dbg !11220
  %8 = icmp eq i32 %7, 0, !dbg !11221
  %9 = shl nuw i32 1, %1, !dbg !11223
  br i1 %8, label %12, label %10, !dbg !11224

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #28, !dbg !11225
  br label %14, !dbg !11227

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #28, !dbg !11228
  br label %14, !dbg !11231

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11232
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !11233 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11235, metadata !DIExpression()), !dbg !11239
  call void @llvm.dbg.value(metadata i8* %1, metadata !11236, metadata !DIExpression()), !dbg !11239
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11240
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11240
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11240
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11237, metadata !DIExpression()), !dbg !11239
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11241
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11241
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #28, !dbg !11243
  %9 = icmp eq i32 %8, 0, !dbg !11243
  br i1 %9, label %12, label %10, !dbg !11244

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11245
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #28, !dbg !11247
  br label %12, !dbg !11248

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11249
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #28, !dbg !11251
  %15 = icmp eq i32 %14, 0, !dbg !11251
  br i1 %15, label %19, label %16, !dbg !11252

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11253
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #28, !dbg !11254
  store i8 %18, i8* %1, align 1, !dbg !11255
  br label %19, !dbg !11256

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11239
  ret i32 %20, !dbg !11257
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11258 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11260, metadata !DIExpression()), !dbg !11264
  call void @llvm.dbg.value(metadata i8 %1, metadata !11261, metadata !DIExpression()), !dbg !11264
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11265
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11265
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11265
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11262, metadata !DIExpression()), !dbg !11264
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11266

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11267
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #28, !dbg !11270
  %10 = icmp eq i32 %9, 0, !dbg !11270
  br i1 %10, label %18, label %11, !dbg !11271

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !11272, !srcloc !11279
  call void @llvm.dbg.value(metadata i32 undef, metadata !11275, metadata !DIExpression()) #26, !dbg !11280
  call void @llvm.dbg.value(metadata i32 undef, metadata !11276, metadata !DIExpression()) #26, !dbg !11280
  call void @llvm.dbg.value(metadata i32 undef, metadata !11263, metadata !DIExpression()), !dbg !11264
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11281
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #28, !dbg !11283
  %15 = icmp eq i32 %14, 0, !dbg !11283
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11272
  br i1 %15, label %17, label %19, !dbg !11284

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11275, metadata !DIExpression()) #26, !dbg !11280
  call void @llvm.dbg.value(metadata i32 %16, metadata !11263, metadata !DIExpression()), !dbg !11264
  call void @llvm.dbg.value(metadata i32 undef, metadata !11285, metadata !DIExpression()) #26, !dbg !11288
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !11290, !srcloc !11291
  br label %18, !dbg !11292

18:                                               ; preds = %17, %7
  br label %7, !dbg !11267, !llvm.loop !11293

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11272
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11295
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #28, !dbg !11296
  call void @llvm.dbg.value(metadata i32 %20, metadata !11285, metadata !DIExpression()) #26, !dbg !11297
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !11299, !srcloc !11291
  ret void, !dbg !11300
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !11301 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11303, metadata !DIExpression()), !dbg !11306
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11307
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11307
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11307
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11304, metadata !DIExpression()), !dbg !11306
  call void @llvm.dbg.value(metadata i32 0, metadata !11305, metadata !DIExpression()), !dbg !11306
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11308
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11308
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #28, !dbg !11310
  %8 = icmp ne i32 %7, 0, !dbg !11310
  %9 = zext i1 %8 to i32, !dbg !11311
  call void @llvm.dbg.value(metadata i32 %9, metadata !11305, metadata !DIExpression()), !dbg !11306
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11312
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #28, !dbg !11314
  %12 = icmp eq i32 %11, 0, !dbg !11314
  %13 = or i32 %9, 2, !dbg !11315
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11315
  call void @llvm.dbg.value(metadata i32 %14, metadata !11305, metadata !DIExpression()), !dbg !11306
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11316
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #28, !dbg !11318
  %17 = icmp eq i32 %16, 0, !dbg !11318
  %18 = or i32 %14, 4, !dbg !11319
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11319
  call void @llvm.dbg.value(metadata i32 %19, metadata !11305, metadata !DIExpression()), !dbg !11306
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11320
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #28, !dbg !11322
  %22 = icmp eq i32 %21, 0, !dbg !11322
  %23 = or i32 %19, 8, !dbg !11323
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11323
  call void @llvm.dbg.value(metadata i32 %24, metadata !11305, metadata !DIExpression()), !dbg !11306
  %25 = and i32 %24, 8, !dbg !11324
  %26 = icmp eq i32 %25, 0, !dbg !11324
  br i1 %26, label %29, label %27, !dbg !11326

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11327
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #28, !dbg !11329
  br label %29, !dbg !11330

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11331
  %31 = icmp eq i32 %30, 0, !dbg !11331
  br i1 %31, label %34, label %32, !dbg !11333

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11334
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #28, !dbg !11336
  br label %34, !dbg !11337

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11338
  %36 = icmp eq i32 %35, 0, !dbg !11338
  br i1 %36, label %39, label %37, !dbg !11340

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11341
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #28, !dbg !11343
  br label %39, !dbg !11344

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11345
  %41 = icmp eq i32 %40, 0, !dbg !11345
  br i1 %41, label %44, label %42, !dbg !11347

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11348
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #28, !dbg !11350
  br label %44, !dbg !11351

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11352
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #28, !dbg !11353
  ret i32 %24, !dbg !11354
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11355 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11357, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11358, metadata !DIExpression()), !dbg !11366
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11367
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11367
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11367
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11359, metadata !DIExpression()), !dbg !11366
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11368
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11368
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11368
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11360, metadata !DIExpression()), !dbg !11366
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11369
  %10 = load i8, i8* %9, align 4, !dbg !11369
  %11 = zext i8 %10 to i32, !dbg !11370
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #28, !dbg !11371
  call void @llvm.dbg.value(metadata i32 %12, metadata !11362, metadata !DIExpression()), !dbg !11366
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11372
  %14 = load i8, i8* %13, align 1, !dbg !11372
  %15 = zext i8 %14 to i32, !dbg !11373
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #28, !dbg !11374
  call void @llvm.dbg.value(metadata i32 %16, metadata !11363, metadata !DIExpression()), !dbg !11366
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11375
  %18 = load i8, i8* %17, align 2, !dbg !11375
  %19 = zext i8 %18 to i32, !dbg !11376
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #28, !dbg !11377
  call void @llvm.dbg.value(metadata i32 %20, metadata !11364, metadata !DIExpression()), !dbg !11366
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11378
  %22 = load i8, i8* %21, align 1, !dbg !11378
  %23 = zext i8 %22 to i32, !dbg !11379
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #28, !dbg !11380
  call void @llvm.dbg.value(metadata i32 %24, metadata !11365, metadata !DIExpression()), !dbg !11366
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11381

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11383
  br i1 %26, label %69, label %27, !dbg !11385

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11386

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11387
  br i1 %29, label %65, label %30, !dbg !11387

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11389
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11366
  br i1 %31, label %38, label %34, !dbg !11391

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11392
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !11392

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11395
  br i1 %37, label %38, label %69, !dbg !11396

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11397
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #28, !dbg !11398
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #28, !dbg !11399
  %41 = icmp eq i32 %12, %40, !dbg !11401
  br i1 %41, label %43, label %42, !dbg !11402

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #28, !dbg !11403
  br label %43, !dbg !11405

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #28, !dbg !11406
  %45 = icmp eq i32 %16, %44, !dbg !11408
  br i1 %45, label %47, label %46, !dbg !11409

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #28, !dbg !11410
  br label %47, !dbg !11412

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #28, !dbg !11413
  %49 = icmp eq i32 %20, %48, !dbg !11415
  br i1 %49, label %51, label %50, !dbg !11416

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #28, !dbg !11417
  br label %51, !dbg !11419

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #28, !dbg !11420
  %53 = icmp eq i32 %24, %52, !dbg !11422
  br i1 %53, label %55, label %54, !dbg !11423

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #28, !dbg !11424
  br label %55, !dbg !11426

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11427
  %57 = load i32, i32* %56, align 4, !dbg !11427
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11429
  %59 = load i32, i32* %58, align 4, !dbg !11429
  %60 = icmp eq i32 %57, %59, !dbg !11430
  br i1 %60, label %63, label %61, !dbg !11431

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #28, !dbg !11432
  %62 = load i32, i32* %56, align 4, !dbg !11434
  store i32 %62, i32* %58, align 4, !dbg !11435
  br label %63, !dbg !11436

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11437
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #28, !dbg !11438
  br label %69, !dbg !11439

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11387
  %67 = and i8 %66, 1, !dbg !11387
  %68 = icmp eq i8 %67, 0, !dbg !11387
  br i1 %68, label %30, label %69, !dbg !11387

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11366
  ret i32 %70, !dbg !11440
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !11441 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11443, metadata !DIExpression()), !dbg !11446
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11444, metadata !DIExpression()), !dbg !11446
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11447
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11447
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11447
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11445, metadata !DIExpression()), !dbg !11446
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11448
  %7 = load i32, i32* %6, align 4, !dbg !11448
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11449
  store i32 %7, i32* %8, align 4, !dbg !11450
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #28, !dbg !11451, !range !11452
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #28, !dbg !11453
  %11 = trunc i32 %10 to i8, !dbg !11453
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11454
  store i8 %11, i8* %12, align 4, !dbg !11455
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #28, !dbg !11456, !range !11457
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #28, !dbg !11458
  %15 = trunc i32 %14 to i8, !dbg !11458
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11459
  store i8 %15, i8* %16, align 1, !dbg !11460
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #28, !dbg !11461
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #28, !dbg !11462, !range !11452
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #28, !dbg !11463
  %20 = trunc i32 %19 to i8, !dbg !11463
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11464
  store i8 %20, i8* %21, align 2, !dbg !11465
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #28, !dbg !11466, !range !11467
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #28, !dbg !11468
  %24 = trunc i32 %23 to i8, !dbg !11468
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11469
  store i8 %24, i8* %25, align 1, !dbg !11470
  ret i32 0, !dbg !11471
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11476, metadata !DIExpression()), !dbg !11478
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11479
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11479
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11479
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11477, metadata !DIExpression()), !dbg !11478
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11480
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11480
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #28, !dbg !11481
  ret i32 %7, !dbg !11482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11483 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11487, metadata !DIExpression()), !dbg !11488
  %2 = icmp eq i32 %0, 1024, !dbg !11489
  %3 = select i1 %2, i32 2, i32 0, !dbg !11489
  %4 = icmp eq i32 %0, 1536, !dbg !11489
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11489
  ret i32 %5, !dbg !11490
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11491 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11493, metadata !DIExpression()), !dbg !11495
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11496
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11496
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11496
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11494, metadata !DIExpression()), !dbg !11495
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11497
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11497
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #28, !dbg !11498
  ret i32 %7, !dbg !11499
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !11500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11504, metadata !DIExpression()), !dbg !11505
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11506
  %3 = icmp ult i32 %2, 4, !dbg !11506
  br i1 %3, label %4, label %7, !dbg !11506

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11506
  %6 = load i32, i32* %5, align 4, !dbg !11506
  br label %7, !dbg !11506

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11507
  ret i32 %8, !dbg !11509
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11510 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11512, metadata !DIExpression()), !dbg !11514
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11515
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11515
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11515
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11513, metadata !DIExpression()), !dbg !11514
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11516
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11516
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #28, !dbg !11517
  ret i32 %7, !dbg !11518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11523, metadata !DIExpression()), !dbg !11525
  call void @llvm.dbg.value(metadata i32 %1, metadata !11524, metadata !DIExpression()), !dbg !11525
  %3 = icmp eq i32 %0, 4096, !dbg !11526
  %4 = icmp eq i32 %1, 0, !dbg !11526
  %5 = select i1 %4, i32 4, i32 3, !dbg !11526
  %6 = select i1 %4, i32 3, i32 2, !dbg !11526
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11526
  ret i32 %7, !dbg !11527
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11528 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11530, metadata !DIExpression()), !dbg !11532
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11533
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11533
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11533
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11531, metadata !DIExpression()), !dbg !11532
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11534
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11534
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #28, !dbg !11535
  ret i32 %7, !dbg !11536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11541, metadata !DIExpression()), !dbg !11542
  %2 = icmp eq i32 %0, 768, !dbg !11543
  %3 = zext i1 %2 to i32, !dbg !11542
  ret i32 %3, !dbg !11545
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11546 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11551, metadata !DIExpression()), !dbg !11552
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11553
  %3 = load volatile i32, i32* %2, align 4, !dbg !11553
  %4 = and i32 %3, 768, !dbg !11553
  ret i32 %4, !dbg !11554
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11555 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11557, metadata !DIExpression()), !dbg !11558
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11559
  %3 = load volatile i32, i32* %2, align 4, !dbg !11559
  %4 = and i32 %3, 4096, !dbg !11559
  ret i32 %4, !dbg !11560
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11561 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11563, metadata !DIExpression()), !dbg !11564
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11565
  %3 = load volatile i32, i32* %2, align 4, !dbg !11565
  %4 = and i32 %3, 12288, !dbg !11565
  ret i32 %4, !dbg !11566
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11567 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11569, metadata !DIExpression()), !dbg !11570
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11571
  %3 = load volatile i32, i32* %2, align 4, !dbg !11571
  %4 = and i32 %3, 1536, !dbg !11571
  ret i32 %4, !dbg !11572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11577, metadata !DIExpression()), !dbg !11578
  %2 = icmp eq i32 %0, 2, !dbg !11579
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11579
  %4 = icmp eq i32 %0, 1, !dbg !11579
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11579
  ret i32 %5, !dbg !11580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11585, metadata !DIExpression()), !dbg !11586
  %2 = icmp ult i32 %0, 3, !dbg !11587
  br i1 %2, label %3, label %6, !dbg !11587

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11587
  %5 = load i32, i32* %4, align 4, !dbg !11587
  br label %6, !dbg !11587

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11588
  ret i32 %7, !dbg !11590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11595, metadata !DIExpression()), !dbg !11597
  call void @llvm.dbg.value(metadata i32 %1, metadata !11596, metadata !DIExpression()), !dbg !11597
  %3 = icmp eq i32 %0, 4, !dbg !11598
  %4 = icmp eq i32 %1, 0, !dbg !11598
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11598
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11598
  ret i32 %6, !dbg !11599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11600 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11604, metadata !DIExpression()), !dbg !11605
  %2 = icmp eq i32 %0, 1, !dbg !11606
  %3 = select i1 %2, i32 768, i32 0, !dbg !11605
  ret i32 %3, !dbg !11608
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11609 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11613, metadata !DIExpression()), !dbg !11614
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11615
  %3 = load volatile i32, i32* %2, align 4, !dbg !11615
  %4 = and i32 %3, -8193, !dbg !11615
  store volatile i32 %4, i32* %2, align 4, !dbg !11615
  ret void, !dbg !11616
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11621, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 %1, metadata !11622, metadata !DIExpression()), !dbg !11624
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11625
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11625
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11625
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11623, metadata !DIExpression()), !dbg !11624
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11626
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11626
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11627
  ret void, !dbg !11628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11629 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11631, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.value(metadata i32 %1, metadata !11632, metadata !DIExpression()), !dbg !11634
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11635
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11635
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11635
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11633, metadata !DIExpression()), !dbg !11634
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11636
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11636
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11637
  ret void, !dbg !11638
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11639 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11641, metadata !DIExpression()), !dbg !11644
  call void @llvm.dbg.value(metadata i32 %1, metadata !11642, metadata !DIExpression()), !dbg !11644
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11645
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11645
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11645
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11643, metadata !DIExpression()), !dbg !11644
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11646
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11646
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11647
  ret void, !dbg !11648
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11649 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11651, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.value(metadata i32 %1, metadata !11652, metadata !DIExpression()), !dbg !11654
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11655
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11655
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11655
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11653, metadata !DIExpression()), !dbg !11654
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11656
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11656
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11657
  ret void, !dbg !11658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11659 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11661, metadata !DIExpression()), !dbg !11666
  call void @llvm.dbg.value(metadata i32 %1, metadata !11662, metadata !DIExpression()), !dbg !11666
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11667
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11667
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11667
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11663, metadata !DIExpression()), !dbg !11666
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11668
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11668
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11668
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11664, metadata !DIExpression()), !dbg !11666
  %10 = bitcast i32* %3 to i8*, !dbg !11669
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11669
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11670
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11670
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11674
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11674
  %15 = load i8*, i8** %14, align 4, !dbg !11674
  call void @llvm.dbg.value(metadata i32* %3, metadata !11665, metadata !DIExpression(DW_OP_deref)), !dbg !11666
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #28, !dbg !11675
  %17 = icmp slt i32 %16, 0, !dbg !11676
  br i1 %17, label %18, label %21, !dbg !11677

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.169(i32 noundef 1) #28, !dbg !11678
  %20 = zext i8 %19 to i32, !dbg !11678
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.170, i32 0, i32 0), i32 noundef %20) #27, !dbg !11678
  br label %31, !dbg !11684

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11685
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11685
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #28, !dbg !11686
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11687
  %25 = load i32, i32* %3, align 4, !dbg !11688
  call void @llvm.dbg.value(metadata i32 %25, metadata !11665, metadata !DIExpression()), !dbg !11666
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #28, !dbg !11689
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11690
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11690
  %28 = load volatile i32, i32* %27, align 4, !dbg !11690
  %29 = icmp ugt i32 %28, 16, !dbg !11690
  br i1 %29, label %31, label %30, !dbg !11693

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7.172, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.173, i32 0, i32 0), i32 noundef 190) #27, !dbg !11694
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.174, i32 0, i32 0)) #27, !dbg !11694
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.173, i32 0, i32 0), i32 noundef 190) #27, !dbg !11694
  unreachable, !dbg !11694

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11696
  ret void, !dbg !11696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11697 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11699, metadata !DIExpression()), !dbg !11700
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11701
  %3 = load volatile i32, i32* %2, align 4, !dbg !11701
  %4 = or i32 %3, 8192, !dbg !11701
  store volatile i32 %4, i32* %2, align 4, !dbg !11701
  ret void, !dbg !11702
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11703 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11705, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata i8* %1, metadata !11706, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata i32* %2, metadata !11707, metadata !DIExpression()), !dbg !11709
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11710
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11710
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11710
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11708, metadata !DIExpression()), !dbg !11709
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11711
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11711
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11713
  br i1 %9, label %12, label %10, !dbg !11714

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !11715
  br label %12, !dbg !11716

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11709
  ret i32 %13, !dbg !11717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.169(i32 noundef %0) unnamed_addr #5 !dbg !11718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11720, metadata !DIExpression()), !dbg !11721
  %2 = icmp eq i32 %0, 2, !dbg !11722
  %3 = select i1 %2, i8 87, i8 63, !dbg !11722
  %4 = icmp eq i32 %0, 1, !dbg !11722
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11722
  ret i8 %5, !dbg !11723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11724 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11728, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.value(metadata i32 0, metadata !11729, metadata !DIExpression()), !dbg !11730
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11731
  %3 = load volatile i32, i32* %2, align 4, !dbg !11731
  %4 = and i32 %3, -32769, !dbg !11731
  store volatile i32 %4, i32* %2, align 4, !dbg !11731
  ret void, !dbg !11732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !11733 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11737, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata i32 %1, metadata !11738, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata i32 0, metadata !11739, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata i32 %2, metadata !11740, metadata !DIExpression()), !dbg !11741
  %4 = zext i32 %1 to i64, !dbg !11742
  %5 = mul nuw nsw i64 %4, 25, !dbg !11742
  %6 = zext i32 %2 to i64, !dbg !11742
  %7 = shl nuw nsw i64 %6, 2, !dbg !11742
  %8 = udiv i64 %5, %7, !dbg !11742
  %9 = trunc i64 %8 to i32, !dbg !11742
  %10 = udiv i32 %9, 100, !dbg !11742
  %11 = shl nuw nsw i32 %10, 4, !dbg !11742
  %12 = mul i32 %10, -100, !dbg !11742
  %13 = add i32 %12, %9, !dbg !11742
  %14 = shl i32 %13, 4, !dbg !11742
  %15 = add i32 %14, 50, !dbg !11742
  %16 = udiv i32 %15, 100, !dbg !11742
  %17 = and i32 %16, 240, !dbg !11742
  %18 = add nuw nsw i32 %17, %11, !dbg !11742
  %19 = and i32 %16, 15, !dbg !11742
  %20 = and i32 %18, 65520, !dbg !11745
  %21 = or i32 %20, %19, !dbg !11745
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11746
  store volatile i32 %21, i32* %22, align 4, !dbg !11747
  ret void, !dbg !11748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11749 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11751, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.value(metadata i32 %1, metadata !11752, metadata !DIExpression()), !dbg !11753
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11754
  %4 = load volatile i32, i32* %3, align 4, !dbg !11754
  %5 = and i32 %4, -769, !dbg !11754
  %6 = or i32 %5, %1, !dbg !11754
  store volatile i32 %6, i32* %3, align 4, !dbg !11754
  ret void, !dbg !11755
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11756 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11758, metadata !DIExpression()), !dbg !11760
  call void @llvm.dbg.value(metadata i32 %1, metadata !11759, metadata !DIExpression()), !dbg !11760
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11761
  %4 = load volatile i32, i32* %3, align 4, !dbg !11761
  %5 = and i32 %4, -4097, !dbg !11761
  %6 = or i32 %5, %1, !dbg !11761
  store volatile i32 %6, i32* %3, align 4, !dbg !11761
  ret void, !dbg !11762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11763 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11765, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata i32 %1, metadata !11766, metadata !DIExpression()), !dbg !11767
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11768
  %4 = load volatile i32, i32* %3, align 4, !dbg !11768
  %5 = and i32 %4, -12289, !dbg !11768
  %6 = or i32 %5, %1, !dbg !11768
  store volatile i32 %6, i32* %3, align 4, !dbg !11768
  ret void, !dbg !11769
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11770 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11772, metadata !DIExpression()), !dbg !11774
  call void @llvm.dbg.value(metadata i32 %1, metadata !11773, metadata !DIExpression()), !dbg !11774
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11775
  %4 = load volatile i32, i32* %3, align 4, !dbg !11775
  %5 = and i32 %4, -1537, !dbg !11775
  %6 = or i32 %5, %1, !dbg !11775
  store volatile i32 %6, i32* %3, align 4, !dbg !11775
  ret void, !dbg !11776
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11777 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11779, metadata !DIExpression()), !dbg !11780
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11781
  %3 = load volatile i32, i32* %2, align 4, !dbg !11781
  %4 = lshr i32 %3, 3, !dbg !11782
  %5 = and i32 %4, 1, !dbg !11782
  ret i32 %5, !dbg !11783
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11784 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11786, metadata !DIExpression()), !dbg !11787
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11788
  %3 = load volatile i32, i32* %2, align 4, !dbg !11788
  %4 = and i32 %3, 1, !dbg !11788
  ret i32 %4, !dbg !11789
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11790 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11792, metadata !DIExpression()), !dbg !11793
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11794
  %3 = load volatile i32, i32* %2, align 4, !dbg !11794
  %4 = lshr i32 %3, 1, !dbg !11795
  %5 = and i32 %4, 1, !dbg !11795
  ret i32 %5, !dbg !11796
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11797 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11799, metadata !DIExpression()), !dbg !11800
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11801
  %3 = load volatile i32, i32* %2, align 4, !dbg !11801
  %4 = lshr i32 %3, 8, !dbg !11802
  %5 = and i32 %4, 1, !dbg !11802
  ret i32 %5, !dbg !11803
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11804 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11806, metadata !DIExpression()), !dbg !11807
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11808
  store volatile i32 -257, i32* %2, align 4, !dbg !11808
  ret void, !dbg !11809
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11810 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11812, metadata !DIExpression()), !dbg !11814
  %3 = bitcast i32* %2 to i8*, !dbg !11815
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11815
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11813, metadata !DIExpression()), !dbg !11816
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11817
  %5 = load volatile i32, i32* %4, align 4, !dbg !11817
  store volatile i32 %5, i32* %2, align 4, !dbg !11818
  %6 = load volatile i32, i32* %2, align 4, !dbg !11819
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11820
  %8 = load volatile i32, i32* %7, align 4, !dbg !11820
  store volatile i32 %8, i32* %2, align 4, !dbg !11821
  %9 = load volatile i32, i32* %2, align 4, !dbg !11822
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11823
  ret void, !dbg !11823
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11824 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11826, metadata !DIExpression()), !dbg !11828
  %3 = bitcast i32* %2 to i8*, !dbg !11829
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11829
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11827, metadata !DIExpression()), !dbg !11830
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11831
  %5 = load volatile i32, i32* %4, align 4, !dbg !11831
  store volatile i32 %5, i32* %2, align 4, !dbg !11832
  %6 = load volatile i32, i32* %2, align 4, !dbg !11833
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11834
  %8 = load volatile i32, i32* %7, align 4, !dbg !11834
  store volatile i32 %8, i32* %2, align 4, !dbg !11835
  %9 = load volatile i32, i32* %2, align 4, !dbg !11836
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11837
  ret void, !dbg !11837
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11838 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11840, metadata !DIExpression()), !dbg !11842
  %3 = bitcast i32* %2 to i8*, !dbg !11843
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11843
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11841, metadata !DIExpression()), !dbg !11844
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11845
  %5 = load volatile i32, i32* %4, align 4, !dbg !11845
  store volatile i32 %5, i32* %2, align 4, !dbg !11846
  %6 = load volatile i32, i32* %2, align 4, !dbg !11847
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11848
  %8 = load volatile i32, i32* %7, align 4, !dbg !11848
  store volatile i32 %8, i32* %2, align 4, !dbg !11849
  %9 = load volatile i32, i32* %2, align 4, !dbg !11850
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11851
  ret void, !dbg !11851
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11852 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11854, metadata !DIExpression()), !dbg !11856
  %3 = bitcast i32* %2 to i8*, !dbg !11857
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11857
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11855, metadata !DIExpression()), !dbg !11858
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11859
  %5 = load volatile i32, i32* %4, align 4, !dbg !11859
  store volatile i32 %5, i32* %2, align 4, !dbg !11860
  %6 = load volatile i32, i32* %2, align 4, !dbg !11861
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11862
  %8 = load volatile i32, i32* %7, align 4, !dbg !11862
  store volatile i32 %8, i32* %2, align 4, !dbg !11863
  %9 = load volatile i32, i32* %2, align 4, !dbg !11864
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11865
  ret void, !dbg !11865
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11866 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11868, metadata !DIExpression()), !dbg !11869
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11870
  %3 = load volatile i32, i32* %2, align 4, !dbg !11870
  %4 = lshr i32 %3, 7, !dbg !11871
  %5 = and i32 %4, 1, !dbg !11871
  ret i32 %5, !dbg !11872
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #18 !dbg !11873 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11877, metadata !DIExpression()), !dbg !11879
  call void @llvm.dbg.value(metadata i8 %1, metadata !11878, metadata !DIExpression()), !dbg !11879
  %3 = zext i8 %1 to i32, !dbg !11880
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11881
  store volatile i32 %3, i32* %4, align 4, !dbg !11882
  ret void, !dbg !11883
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11884 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11886, metadata !DIExpression()), !dbg !11887
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11888
  %3 = load volatile i32, i32* %2, align 4, !dbg !11888
  %4 = lshr i32 %3, 5, !dbg !11889
  %5 = and i32 %4, 1, !dbg !11889
  ret i32 %5, !dbg !11890
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11891 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11895, metadata !DIExpression()), !dbg !11896
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11897
  %3 = load volatile i32, i32* %2, align 4, !dbg !11897
  %4 = trunc i32 %3 to i8, !dbg !11898
  ret i8 %4, !dbg !11899
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11900 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11902, metadata !DIExpression()), !dbg !11908
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11909
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11909
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11909
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11903, metadata !DIExpression()), !dbg !11908
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11910
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11910
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11910
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11904, metadata !DIExpression()), !dbg !11908
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #28, !dbg !11911
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11912
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11912
  %10 = tail call fastcc zeroext i1 @device_is_ready.181(%struct.device* noundef %9) #28, !dbg !11914
  br i1 %10, label %14, label %11, !dbg !11915

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.169(i32 noundef 1) #28, !dbg !11916
  %13 = zext i8 %12 to i32, !dbg !11916
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.182, i32 0, i32 0), i32 noundef %13) #27, !dbg !11916
  br label %62, !dbg !11922

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11923
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11924
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11924
  %18 = load i8*, i8** %17, align 4, !dbg !11924
  %19 = tail call fastcc i32 @clock_control_on.183(%struct.device* noundef %15, i8* noundef %18) #28, !dbg !11925
  call void @llvm.dbg.value(metadata i32 %19, metadata !11907, metadata !DIExpression()), !dbg !11908
  %20 = icmp eq i32 %19, 0, !dbg !11926
  br i1 %20, label %24, label %21, !dbg !11928

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.169(i32 noundef 1) #28, !dbg !11929
  %23 = zext i8 %22 to i32, !dbg !11929
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11.184, i32 0, i32 0), i32 noundef %23) #27, !dbg !11929
  br label %62, !dbg !11935

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11936
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11936
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #28, !dbg !11937
  call void @llvm.dbg.value(metadata i32 %27, metadata !11907, metadata !DIExpression()), !dbg !11908
  %28 = icmp slt i32 %27, 0, !dbg !11938
  br i1 %28, label %62, label %29, !dbg !11940

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11941
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11941
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #28, !dbg !11942
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11943
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #28, !dbg !11944
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11945
  %34 = load i32, i32* %33, align 4, !dbg !11945
  %35 = icmp ult i32 %34, 3, !dbg !11947
  br i1 %35, label %39, label %36, !dbg !11947

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.169(i32 noundef 2) #28, !dbg !11948
  %38 = zext i8 %37 to i32, !dbg !11948
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12.185, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !11948
  call void @llvm.dbg.value(metadata i32 0, metadata !11905, metadata !DIExpression()), !dbg !11908
  call void @llvm.dbg.value(metadata i32 0, metadata !11906, metadata !DIExpression()), !dbg !11908
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11947
  %41 = load i32, i32* %40, align 4, !dbg !11947
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.13, i32 0, i32 %34, !dbg !11947
  %43 = load i32, i32* %42, align 4, !dbg !11947
  br label %44, !dbg !11947

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11957
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11957
  call void @llvm.dbg.value(metadata i32 %46, metadata !11906, metadata !DIExpression()), !dbg !11908
  call void @llvm.dbg.value(metadata i32 %45, metadata !11905, metadata !DIExpression()), !dbg !11908
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11958
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #28, !dbg !11959
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11960
  %49 = load i8, i8* %48, align 4, !dbg !11960, !range !8206
  %50 = icmp eq i8 %49, 0, !dbg !11960
  br i1 %50, label %52, label %51, !dbg !11962

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #28, !dbg !11963
  br label %52, !dbg !11965

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11966
  %54 = load i32, i32* %53, align 4, !dbg !11966
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #28, !dbg !11967
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11968
  %56 = load i8, i8* %55, align 4, !dbg !11968, !range !8206
  %57 = icmp eq i8 %56, 0, !dbg !11968
  br i1 %57, label %60, label %58, !dbg !11970

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11971
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #28, !dbg !11973
  br label %60, !dbg !11974

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11975
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #28, !dbg !11976
  br label %62, !dbg !11977

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11908
  ret i32 %63, !dbg !11978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !11979 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11983, metadata !DIExpression()), !dbg !11987
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11988
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11988
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11988
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11984, metadata !DIExpression()), !dbg !11987
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11985, metadata !DIExpression()), !dbg !11987
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11989
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11990
  ret void, !dbg !11991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.181(%struct.device* noundef %0) unnamed_addr #1 !dbg !11992 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11996, metadata !DIExpression()), !dbg !11997
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11998, !srcloc !12000
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.186(%struct.device* noundef %0) #28, !dbg !12001
  ret i1 %2, !dbg !12002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.183(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12003 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12005, metadata !DIExpression()), !dbg !12008
  call void @llvm.dbg.value(metadata i8* %1, metadata !12006, metadata !DIExpression()), !dbg !12008
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12009
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12009
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12009
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12007, metadata !DIExpression()), !dbg !12008
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12010
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12010
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !12011
  ret i32 %8, !dbg !12012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12013 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12017, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.value(metadata i8 0, metadata !12018, metadata !DIExpression()), !dbg !12021
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12022
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !12022
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12020, metadata !DIExpression(DW_OP_deref)), !dbg !12021
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !12023
  call void @llvm.dbg.value(metadata i32 %4, metadata !12019, metadata !DIExpression()), !dbg !12021
  %5 = icmp slt i32 %4, 0, !dbg !12024
  br i1 %5, label %9, label %6, !dbg !12026

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12027
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12020, metadata !DIExpression()), !dbg !12021
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #28, !dbg !12028
  br label %9, !dbg !12029

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12021
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !12030
  ret i32 %10, !dbg !12030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !12031 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12033, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.value(metadata i32 12, metadata !12034, metadata !DIExpression()), !dbg !12037
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !12038

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !12039, metadata !DIExpression()) #26, !dbg !12045
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #26, !dbg !12048, !srcloc !12049
  call void @llvm.dbg.value(metadata i32 %4, metadata !12044, metadata !DIExpression()) #26, !dbg !12045
  %5 = or i32 %4, 12, !dbg !12050
  call void @llvm.dbg.value(metadata i32 %5, metadata !12035, metadata !DIExpression()), !dbg !12051
  call void @llvm.dbg.value(metadata i32 %5, metadata !12052, metadata !DIExpression()) #26, !dbg !12059
  call void @llvm.dbg.value(metadata i32* %2, metadata !12057, metadata !DIExpression()) #26, !dbg !12059
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #26, !dbg !12061, !srcloc !12062
  call void @llvm.dbg.value(metadata i32 %6, metadata !12058, metadata !DIExpression()) #26, !dbg !12059
  %7 = icmp eq i32 %6, 0, !dbg !12038
  br i1 %7, label %8, label %3, !dbg !12050, !llvm.loop !12063

8:                                                ; preds = %3
  ret void, !dbg !12064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !12065 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12067, metadata !DIExpression()), !dbg !12071
  call void @llvm.dbg.value(metadata i32 %1, metadata !12068, metadata !DIExpression()), !dbg !12071
  call void @llvm.dbg.value(metadata i32 %2, metadata !12069, metadata !DIExpression()), !dbg !12071
  call void @llvm.dbg.value(metadata i32 0, metadata !12070, metadata !DIExpression()), !dbg !12071
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12072
  %5 = load volatile i32, i32* %4, align 4, !dbg !12072
  %6 = and i32 %5, -5633, !dbg !12072
  %7 = or i32 %2, %1, !dbg !12072
  %8 = or i32 %7, %6, !dbg !12072
  store volatile i32 %8, i32* %4, align 4, !dbg !12072
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12073
  %10 = load volatile i32, i32* %9, align 4, !dbg !12073
  %11 = and i32 %10, -12289, !dbg !12073
  store volatile i32 %11, i32* %9, align 4, !dbg !12073
  ret void, !dbg !12074
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12075 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12077, metadata !DIExpression()), !dbg !12078
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12079
  %3 = load volatile i32, i32* %2, align 4, !dbg !12079
  %4 = or i32 %3, 8, !dbg !12079
  store volatile i32 %4, i32* %2, align 4, !dbg !12079
  ret void, !dbg !12080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12081 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12085, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12086, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.value(metadata i32 0, metadata !12087, metadata !DIExpression()), !dbg !12088
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12089
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12089
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12090
  %5 = load i8, i8* %4, align 4, !dbg !12090
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !12091
  ret i32 %6, !dbg !12092
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.186(%struct.device* noundef %0) unnamed_addr #1 !dbg !12093 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12095, metadata !DIExpression()), !dbg !12096
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12097
  ret i1 %2, !dbg !12098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #18 !dbg !12099 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12101, metadata !DIExpression()), !dbg !12102
  tail call fastcc void @__NVIC_SetPriority.188() #28, !dbg !12103
  store i32 8399, i32* @last_load, align 4, !dbg !12104
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12105
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12106
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12107
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12108
  %3 = or i32 %2, 7, !dbg !12108
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12108
  ret i32 0, !dbg !12109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.188() unnamed_addr #18 !dbg !12110 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12112, metadata !DIExpression()), !dbg !12114
  call void @llvm.dbg.value(metadata i32 1, metadata !12113, metadata !DIExpression()), !dbg !12114
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12115
  ret void, !dbg !12118
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12119 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12121, metadata !DIExpression()), !dbg !12123
  %2 = tail call fastcc i32 @elapsed() #28, !dbg !12124
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12125
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12126
  %5 = add i32 %4, %3, !dbg !12126
  store i32 %5, i32* @cycle_count, align 4, !dbg !12126
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12127
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12128
  %7 = sub i32 %5, %6, !dbg !12131
  %8 = udiv i32 %7, 8400, !dbg !12132
  call void @llvm.dbg.value(metadata i32 %8, metadata !12122, metadata !DIExpression()), !dbg !12123
  %9 = mul nuw i32 %8, 8400, !dbg !12133
  %10 = add i32 %9, %6, !dbg !12134
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12134
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !12135
  tail call void @z_arm_int_exit() #27, !dbg !12136
  ret void, !dbg !12137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #18 !dbg !12138 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12143
  call void @llvm.dbg.value(metadata i32 %1, metadata !12140, metadata !DIExpression()), !dbg !12144
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12145
  call void @llvm.dbg.value(metadata i32 %2, metadata !12141, metadata !DIExpression()), !dbg !12144
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12146
  call void @llvm.dbg.value(metadata i32 %3, metadata !12142, metadata !DIExpression()), !dbg !12144
  %4 = and i32 %2, 65536, !dbg !12147
  %5 = icmp ne i32 %4, 0, !dbg !12147
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12149
  %8 = load i32, i32* @last_load, align 4, !dbg !12144
  br i1 %7, label %9, label %13, !dbg !12149

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12150
  %11 = add i32 %10, %8, !dbg !12150
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12150
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12152
  br label %13, !dbg !12153

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12154
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12155
  %16 = add i32 %14, %15, !dbg !12156
  ret i32 %16, !dbg !12157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12162, metadata !DIExpression()), !dbg !12175
  call void @llvm.dbg.value(metadata i1 %1, metadata !12163, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12175
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12176
  br i1 %4, label %5, label %8, !dbg !12176

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12178
  %7 = and i32 %6, -2, !dbg !12178
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12178
  store i32 -16777216, i32* @last_load, align 4, !dbg !12180
  br label %60, !dbg !12181

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12182
  call void @llvm.dbg.value(metadata i32 %9, metadata !12167, metadata !DIExpression()), !dbg !12175
  br i1 %3, label %18, label %10, !dbg !12183

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12183
  call void @llvm.dbg.value(metadata i32 undef, metadata !12162, metadata !DIExpression()), !dbg !12175
  %12 = icmp slt i32 %11, 1, !dbg !12184
  br i1 %12, label %18, label %13, !dbg !12184

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !12184
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !12184
  %16 = mul nuw nsw i32 %15, 8400, !dbg !12184
  %17 = add nuw nsw i32 %16, 8399, !dbg !12184
  br label %18, !dbg !12184

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12162, metadata !DIExpression()), !dbg !12175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12185, metadata !DIExpression()) #26, !dbg !12192
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12194, !srcloc !12200
  call void @llvm.dbg.value(metadata i32 undef, metadata !12197, metadata !DIExpression()) #26, !dbg !12201
  call void @llvm.dbg.value(metadata i32 undef, metadata !12198, metadata !DIExpression()) #26, !dbg !12201
  call void @llvm.dbg.value(metadata i32 undef, metadata !12191, metadata !DIExpression()) #26, !dbg !12192
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12202
  br i1 %21, label %23, label %22, !dbg !12205

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.191, i32 0, i32 0), i32 noundef 148) #27, !dbg !12206
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.192, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12206
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.191, i32 0, i32 0), i32 noundef 148) #27, !dbg !12206
  unreachable, !dbg !12206

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !12194
  call void @llvm.dbg.value(metadata i32 %24, metadata !12197, metadata !DIExpression()) #26, !dbg !12201
  call void @llvm.dbg.value(metadata i32 %24, metadata !12191, metadata !DIExpression()) #26, !dbg !12192
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12208
  call void @llvm.dbg.value(metadata i32 %24, metadata !12168, metadata !DIExpression()), !dbg !12175
  %25 = tail call fastcc i32 @elapsed() #28, !dbg !12209
  call void @llvm.dbg.value(metadata i32 %25, metadata !12173, metadata !DIExpression()), !dbg !12175
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12210
  call void @llvm.dbg.value(metadata i32 %26, metadata !12165, metadata !DIExpression()), !dbg !12175
  %27 = load i32, i32* @cycle_count, align 4, !dbg !12211
  %28 = add i32 %27, %25, !dbg !12211
  store i32 %28, i32* @cycle_count, align 4, !dbg !12211
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12212
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !12213
  %30 = sub i32 %28, %29, !dbg !12214
  call void @llvm.dbg.value(metadata i32 %30, metadata !12174, metadata !DIExpression()), !dbg !12175
  %31 = icmp slt i32 %30, 0, !dbg !12215
  br i1 %31, label %41, label %32, !dbg !12217

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !12164, metadata !DIExpression()), !dbg !12175
  call void @llvm.dbg.value(metadata i32 undef, metadata !12164, metadata !DIExpression()), !dbg !12175
  %33 = add nuw i32 %19, %30, !dbg !12218
  %34 = urem i32 %33, 8400, !dbg !12220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !12164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12175
  %35 = sub nuw nsw i32 %19, %34, !dbg !12221
  call void @llvm.dbg.value(metadata i32 %35, metadata !12164, metadata !DIExpression()), !dbg !12175
  %36 = icmp ugt i32 %35, 1024, !dbg !12222
  br i1 %36, label %37, label %39, !dbg !12222

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !12164, metadata !DIExpression()), !dbg !12175
  %38 = icmp ugt i32 %35, 16766400, !dbg !12223
  br i1 %38, label %41, label %39, !dbg !12225

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !12226
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12227
  call void @llvm.dbg.value(metadata i32 %43, metadata !12166, metadata !DIExpression()), !dbg !12175
  %44 = add nsw i32 %42, -1, !dbg !12228
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12229
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12230
  %45 = icmp ult i32 %26, %43, !dbg !12231
  br i1 %45, label %46, label %51, !dbg !12233

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !12234
  %48 = add i32 %26, %9, !dbg !12236
  %49 = sub i32 %48, %43, !dbg !12237
  %50 = add i32 %49, %47, !dbg !12234
  br label %55, !dbg !12238

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !12239
  %53 = load i32, i32* @cycle_count, align 4, !dbg !12241
  %54 = add i32 %52, %53, !dbg !12241
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !12242
  store i32 %56, i32* @cycle_count, align 4, !dbg !12242
  call void @llvm.dbg.value(metadata i32 undef, metadata !12243, metadata !DIExpression()) #26, !dbg !12249
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12248, metadata !DIExpression()) #26, !dbg !12249
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12251
  br i1 %57, label %59, label %58, !dbg !12254

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.191, i32 0, i32 0), i32 noundef 194) #27, !dbg !12255
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.194, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.191, i32 0, i32 0), i32 noundef 194) #27, !dbg !12255
  unreachable, !dbg !12255

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !12243, metadata !DIExpression()) #26, !dbg !12249
  call void @llvm.dbg.value(metadata i32 %24, metadata !12257, metadata !DIExpression()) #26, !dbg !12260
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #26, !dbg !12262, !srcloc !12263
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !12264
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12265 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12185, metadata !DIExpression()) #26, !dbg !12269
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12271, !srcloc !12200
  call void @llvm.dbg.value(metadata i32 undef, metadata !12197, metadata !DIExpression()) #26, !dbg !12273
  call void @llvm.dbg.value(metadata i32 undef, metadata !12198, metadata !DIExpression()) #26, !dbg !12273
  call void @llvm.dbg.value(metadata i32 undef, metadata !12191, metadata !DIExpression()) #26, !dbg !12269
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12274
  br i1 %2, label %4, label %3, !dbg !12275

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.191, i32 0, i32 0), i32 noundef 148) #27, !dbg !12276
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.192, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12276
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.191, i32 0, i32 0), i32 noundef 148) #27, !dbg !12276
  unreachable, !dbg !12276

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12197, metadata !DIExpression()) #26, !dbg !12273
  call void @llvm.dbg.value(metadata i32 undef, metadata !12191, metadata !DIExpression()) #26, !dbg !12269
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12277
  call void @llvm.dbg.value(metadata i32 undef, metadata !12267, metadata !DIExpression()), !dbg !12278
  %5 = tail call fastcc i32 @elapsed() #28, !dbg !12279
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12280
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !12281
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !12268, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12278
  call void @llvm.dbg.value(metadata i32 undef, metadata !12243, metadata !DIExpression()) #26, !dbg !12282
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12248, metadata !DIExpression()) #26, !dbg !12282
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12284
  br i1 %8, label %10, label %9, !dbg !12285

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.191, i32 0, i32 0), i32 noundef 194) #27, !dbg !12286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.194, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.191, i32 0, i32 0), i32 noundef 194) #27, !dbg !12286
  unreachable, !dbg !12286

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !12287
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !12268, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12278
  %12 = sub i32 %11, %7, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %12, metadata !12268, metadata !DIExpression()), !dbg !12278
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !12271
  call void @llvm.dbg.value(metadata i32 %13, metadata !12197, metadata !DIExpression()) #26, !dbg !12273
  call void @llvm.dbg.value(metadata i32 %13, metadata !12191, metadata !DIExpression()) #26, !dbg !12269
  call void @llvm.dbg.value(metadata i32 %13, metadata !12267, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32 undef, metadata !12243, metadata !DIExpression()) #26, !dbg !12282
  call void @llvm.dbg.value(metadata i32 undef, metadata !12257, metadata !DIExpression()) #26, !dbg !12289
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #26, !dbg !12291, !srcloc !12263
  %14 = udiv i32 %12, 8400, !dbg !12292
  ret i32 %14, !dbg !12293
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12294 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12185, metadata !DIExpression()) #26, !dbg !12298
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12300, !srcloc !12200
  call void @llvm.dbg.value(metadata i32 undef, metadata !12197, metadata !DIExpression()) #26, !dbg !12302
  call void @llvm.dbg.value(metadata i32 undef, metadata !12198, metadata !DIExpression()) #26, !dbg !12302
  call void @llvm.dbg.value(metadata i32 undef, metadata !12191, metadata !DIExpression()) #26, !dbg !12298
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12303
  br i1 %2, label %4, label %3, !dbg !12304

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.191, i32 0, i32 0), i32 noundef 148) #27, !dbg !12305
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.192, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12305
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.191, i32 0, i32 0), i32 noundef 148) #27, !dbg !12305
  unreachable, !dbg !12305

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12197, metadata !DIExpression()) #26, !dbg !12302
  call void @llvm.dbg.value(metadata i32 undef, metadata !12191, metadata !DIExpression()) #26, !dbg !12298
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12306
  call void @llvm.dbg.value(metadata i32 undef, metadata !12296, metadata !DIExpression()), !dbg !12307
  %5 = tail call fastcc i32 @elapsed() #28, !dbg !12308
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12309
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !12297, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !12307
  call void @llvm.dbg.value(metadata i32 undef, metadata !12243, metadata !DIExpression()) #26, !dbg !12310
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12248, metadata !DIExpression()) #26, !dbg !12310
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12312
  br i1 %7, label %9, label %8, !dbg !12313

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.191, i32 0, i32 0), i32 noundef 194) #27, !dbg !12314
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.194, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12314
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.191, i32 0, i32 0), i32 noundef 194) #27, !dbg !12314
  unreachable, !dbg !12314

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !12315
  call void @llvm.dbg.value(metadata i32 %10, metadata !12297, metadata !DIExpression()), !dbg !12307
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !12300
  call void @llvm.dbg.value(metadata i32 %11, metadata !12197, metadata !DIExpression()) #26, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %11, metadata !12191, metadata !DIExpression()) #26, !dbg !12298
  call void @llvm.dbg.value(metadata i32 %11, metadata !12296, metadata !DIExpression()), !dbg !12307
  call void @llvm.dbg.value(metadata i32 undef, metadata !12243, metadata !DIExpression()) #26, !dbg !12310
  call void @llvm.dbg.value(metadata i32 undef, metadata !12257, metadata !DIExpression()) #26, !dbg !12316
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #26, !dbg !12318, !srcloc !12263
  ret i32 %10, !dbg !12319
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #18 !dbg !12320 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12321
  %2 = icmp eq i32 %1, -16777216, !dbg !12323
  br i1 %2, label %3, label %6, !dbg !12324

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12325
  %5 = or i32 %4, 1, !dbg !12325
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12325
  br label %6, !dbg !12327

6:                                                ; preds = %3, %0
  ret void, !dbg !12328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #18 !dbg !12329 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12330
  %2 = and i32 %1, -2, !dbg !12330
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12330
  ret void, !dbg !12331
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #17 !dbg !12332 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12358, metadata !DIExpression()), !dbg !12361
  call void @llvm.dbg.value(metadata i8 %1, metadata !12359, metadata !DIExpression()), !dbg !12361
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12360, metadata !DIExpression()), !dbg !12361
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12362
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12362
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12361
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12363
  %8 = load i8, i8* %6, align 4, !dbg !12364
  %9 = zext i8 %8 to i32, !dbg !12365
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12365
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12366
  br i1 %11, label %18, label %24, !dbg !12367

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12361
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12363
  %14 = load i8, i8* %6, align 4, !dbg !12364
  %15 = zext i8 %14 to i32, !dbg !12365
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12365
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12366
  br i1 %17, label %18, label %24, !dbg !12367, !llvm.loop !12368

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12370
  %21 = load i8, i8* %20, align 1, !dbg !12370
  %22 = icmp eq i8 %21, %1, !dbg !12373
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12374
  br i1 %22, label %24, label %12, !dbg !12375

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12361
  ret i32 %25, !dbg !12376
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12377 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12388, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.value(metadata i8 %1, metadata !12389, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.value(metadata i32 %2, metadata !12390, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.value(metadata i32 0, metadata !12393, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.value(metadata i32 0, metadata !12394, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.value(metadata i8 0, metadata !12395, metadata !DIExpression()), !dbg !12405
  %4 = icmp eq i8 %1, 0, !dbg !12406
  br i1 %4, label %35, label %5, !dbg !12407

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12406
  br label %9, !dbg !12407

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12395, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.value(metadata i32 %29, metadata !12393, metadata !DIExpression()), !dbg !12404
  %8 = icmp eq i32 %34, %6, !dbg !12406
  br i1 %8, label %35, label %9, !dbg !12407, !llvm.loop !12408

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12395, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.value(metadata i32 %11, metadata !12393, metadata !DIExpression()), !dbg !12404
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12410
  %13 = load i32, i32* %12, align 4, !dbg !12410
  call void @llvm.dbg.value(metadata i32 %13, metadata !12392, metadata !DIExpression()), !dbg !12404
  %14 = and i32 %13, 31, !dbg !12411
  %15 = icmp ult i32 %14, 16, !dbg !12412
  br i1 %15, label %16, label %20, !dbg !12413

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12414
  %18 = load i32, i32* %17, align 4, !dbg !12414
  %19 = or i32 %18, 32, !dbg !12416
  call void @llvm.dbg.value(metadata i32 %19, metadata !12393, metadata !DIExpression()), !dbg !12404
  br label %28, !dbg !12417

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12418

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12419
  %23 = load i32, i32* %22, align 4, !dbg !12419
  call void @llvm.dbg.value(metadata i32 %23, metadata !12397, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12420
  %24 = lshr i32 %23, 7, !dbg !12421
  %25 = and i32 %24, 16, !dbg !12421
  %26 = or i32 %25, %23, !dbg !12421
  call void @llvm.dbg.value(metadata i32 %26, metadata !12393, metadata !DIExpression()), !dbg !12404
  br label %28, !dbg !12422

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !12404
  call void @llvm.dbg.value(metadata i32 %29, metadata !12393, metadata !DIExpression()), !dbg !12404
  %30 = lshr i32 %13, 5, !dbg !12423
  %31 = and i32 %30, 255, !dbg !12423
  call void @llvm.dbg.value(metadata i32 %31, metadata !12391, metadata !DIExpression()), !dbg !12404
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #28, !dbg !12424
  call void @llvm.dbg.value(metadata i32 %32, metadata !12394, metadata !DIExpression()), !dbg !12404
  %33 = icmp slt i32 %32, 0, !dbg !12425
  %34 = add nuw nsw i32 %10, 1, !dbg !12427
  call void @llvm.dbg.value(metadata i32 %34, metadata !12395, metadata !DIExpression()), !dbg !12405
  br i1 %33, label %35, label %7, !dbg !12428

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12434, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %1, metadata !12435, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %2, metadata !12436, metadata !DIExpression()), !dbg !12438
  %4 = icmp ugt i32 %0, 175, !dbg !12439
  br i1 %4, label %16, label %5, !dbg !12441

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12442
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12443
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12443
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12437, metadata !DIExpression()), !dbg !12438
  %9 = add nsw i32 %6, -8, !dbg !12444
  %10 = icmp ult i32 %9, 3, !dbg !12444
  br i1 %10, label %16, label %11, !dbg !12446

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.201(%struct.device* noundef %8) #28, !dbg !12447
  br i1 %12, label %13, label %16, !dbg !12448

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12449
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !12450
  br label %16, !dbg !12451

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12438
  ret i32 %17, !dbg !12452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.201(%struct.device* noundef %0) unnamed_addr #1 !dbg !12453 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12457, metadata !DIExpression()), !dbg !12458
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !12459, !srcloc !12461
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.202(%struct.device* noundef %0) #28, !dbg !12462
  ret i1 %2, !dbg !12463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.202(%struct.device* noundef %0) unnamed_addr #1 !dbg !12464 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12466, metadata !DIExpression()), !dbg !12467
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12468
  ret i1 %2, !dbg !12469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12470 {
  ret void, !dbg !12471
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #7 !dbg !12472 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12474, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.value(metadata i32 0, metadata !12475, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.value(metadata i32 2, metadata !12476, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.value(metadata i32 0, metadata !12477, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.value(metadata i32 2, metadata !12478, metadata !DIExpression()), !dbg !12479
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12480
  %2 = and i32 %1, 12, !dbg !12481
  call void @llvm.dbg.value(metadata i32 %2, metadata !12474, metadata !DIExpression()), !dbg !12479
  %3 = icmp eq i32 %2, 8, !dbg !12482
  br i1 %3, label %4, label %18, !dbg !12482

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12483
  call void @llvm.dbg.value(metadata i32 %5, metadata !12477, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12479
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12485
  %7 = and i32 %6, 63, !dbg !12486
  call void @llvm.dbg.value(metadata i32 %7, metadata !12478, metadata !DIExpression()), !dbg !12479
  %8 = udiv i32 16000000, %7, !dbg !12487
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12487
  %10 = lshr i32 %9, 6, !dbg !12487
  %11 = and i32 %10, 511, !dbg !12487
  %12 = mul i32 %11, %8, !dbg !12487
  call void @llvm.dbg.value(metadata i32 %12, metadata !12475, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.value(metadata i32 %12, metadata !12475, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.value(metadata i32 %12, metadata !12475, metadata !DIExpression()), !dbg !12479
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12489
  %14 = lshr i32 %13, 15, !dbg !12490
  %15 = and i32 %14, 6, !dbg !12490
  %16 = add nuw nsw i32 %15, 2, !dbg !12490
  call void @llvm.dbg.value(metadata i32 %16, metadata !12476, metadata !DIExpression()), !dbg !12479
  %17 = udiv i32 %12, %16, !dbg !12491
  br label %18, !dbg !12492

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12493
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12494
  %21 = lshr i32 %20, 4, !dbg !12495
  %22 = and i32 %21, 15, !dbg !12495
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12496
  %24 = load i8, i8* %23, align 1, !dbg !12496
  %25 = zext i8 %24 to i32, !dbg !12496
  call void @llvm.dbg.value(metadata i32 %25, metadata !12474, metadata !DIExpression()), !dbg !12479
  %26 = lshr i32 %19, %25, !dbg !12497
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12497
  ret void, !dbg !12498
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12499 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12541, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12542, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12543, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12544, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12545, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12546, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12547, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12548, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12549, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12550, metadata !DIExpression()), !dbg !12555
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12556
  %4 = load i32, i32* %3, align 4, !dbg !12556
  %5 = and i32 %4, 1, !dbg !12558
  %6 = icmp eq i32 %5, 0, !dbg !12559
  br i1 %6, label %17, label %7, !dbg !12560

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12561
  %9 = and i32 %8, -100663297, !dbg !12561
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12561
  %11 = load i32, i32* %10, align 4, !dbg !12561
  %12 = or i32 %9, %11, !dbg !12561
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12561
  %13 = load i32, i32* %10, align 4, !dbg !12563
  %14 = icmp eq i32 %13, 0, !dbg !12565
  %15 = zext i1 %14 to i32, !dbg !12566
  %16 = load i32, i32* %3, align 4, !dbg !12567
  br label %17, !dbg !12566

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !12567
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !12555
  call void @llvm.dbg.value(metadata i32 %19, metadata !12549, metadata !DIExpression()), !dbg !12555
  %20 = and i32 %18, 2, !dbg !12569
  %21 = icmp eq i32 %20, 0, !dbg !12570
  br i1 %21, label %32, label %22, !dbg !12571

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12572
  %24 = and i32 %23, -402653185, !dbg !12572
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12572
  %26 = load i32, i32* %25, align 4, !dbg !12572
  %27 = or i32 %24, %26, !dbg !12572
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12572
  %28 = load i32, i32* %25, align 4, !dbg !12574
  %29 = icmp eq i32 %28, 0, !dbg !12576
  %30 = select i1 %29, i32 1, i32 %19, !dbg !12577
  %31 = load i32, i32* %3, align 4, !dbg !12578
  br label %32, !dbg !12577

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !12578
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !12555
  call void @llvm.dbg.value(metadata i32 %34, metadata !12549, metadata !DIExpression()), !dbg !12555
  %35 = and i32 %33, 4, !dbg !12580
  %36 = icmp eq i32 %35, 0, !dbg !12581
  br i1 %36, label %49, label %37, !dbg !12582

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12583
  %39 = and i32 %38, -3145729, !dbg !12583
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12583
  %41 = load i32, i32* %40, align 4, !dbg !12583
  %42 = or i32 %39, %41, !dbg !12583
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12583
  %43 = load i32, i32* %40, align 4, !dbg !12585
  %44 = icmp eq i32 %43, 1048576, !dbg !12587
  %45 = select i1 %44, i32 1, i32 %34, !dbg !12588
  call void @llvm.dbg.value(metadata i32 %45, metadata !12549, metadata !DIExpression()), !dbg !12555
  %46 = icmp eq i32 %43, 0, !dbg !12589
  %47 = zext i1 %46 to i32, !dbg !12591
  %48 = load i32, i32* %3, align 4, !dbg !12592
  br label %49, !dbg !12591

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !12592
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !12555
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !12555
  call void @llvm.dbg.value(metadata i32 %52, metadata !12550, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %51, metadata !12549, metadata !DIExpression()), !dbg !12555
  %53 = and i32 %50, 8, !dbg !12594
  %54 = icmp eq i32 %53, 0, !dbg !12595
  br i1 %54, label %67, label %55, !dbg !12596

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12597
  %57 = and i32 %56, -12582913, !dbg !12597
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12597
  %59 = load i32, i32* %58, align 4, !dbg !12597
  %60 = or i32 %57, %59, !dbg !12597
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12597
  %61 = load i32, i32* %58, align 4, !dbg !12599
  %62 = icmp eq i32 %61, 4194304, !dbg !12601
  %63 = select i1 %62, i32 1, i32 %51, !dbg !12602
  call void @llvm.dbg.value(metadata i32 %63, metadata !12549, metadata !DIExpression()), !dbg !12555
  %64 = icmp eq i32 %61, 0, !dbg !12603
  %65 = select i1 %64, i32 1, i32 %52, !dbg !12605
  %66 = load i32, i32* %3, align 4, !dbg !12606
  br label %67, !dbg !12605

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !12606
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !12555
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !12555
  call void @llvm.dbg.value(metadata i32 %70, metadata !12550, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %69, metadata !12549, metadata !DIExpression()), !dbg !12555
  %71 = and i32 %68, 32, !dbg !12607
  %72 = icmp eq i32 %71, 0, !dbg !12608
  br i1 %72, label %131, label %73, !dbg !12609

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !12610
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !12610
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12551, metadata !DIExpression()), !dbg !12610
  store volatile i32 0, i32* %2, align 4, !dbg !12610
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12610
  %76 = or i32 %75, 268435456, !dbg !12610
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12610
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12610
  %78 = and i32 %77, 268435456, !dbg !12610
  store volatile i32 %78, i32* %2, align 4, !dbg !12610
  %79 = load volatile i32, i32* %2, align 4, !dbg !12610
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !12611
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12612
  %81 = or i32 %80, 256, !dbg !12612
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12612
  %82 = tail call i32 @HAL_GetTick() #27, !dbg !12613
  call void @llvm.dbg.value(metadata i32 %82, metadata !12542, metadata !DIExpression()), !dbg !12555
  br label %83, !dbg !12614

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12615
  %85 = and i32 %84, 256, !dbg !12616
  %86 = icmp eq i32 %85, 0, !dbg !12617
  br i1 %86, label %87, label %91, !dbg !12614

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #27, !dbg !12618
  %89 = sub i32 %88, %82, !dbg !12621
  %90 = icmp ugt i32 %89, 2, !dbg !12622
  br i1 %90, label %439, label %83, !dbg !12623, !llvm.loop !12624

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12626
  %93 = and i32 %92, 768, !dbg !12627
  call void @llvm.dbg.value(metadata i32 %93, metadata !12543, metadata !DIExpression()), !dbg !12555
  %94 = icmp eq i32 %93, 0, !dbg !12628
  br i1 %94, label %116, label %95, !dbg !12630

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12631
  %97 = load i32, i32* %96, align 4, !dbg !12631
  %98 = and i32 %97, 768, !dbg !12632
  %99 = icmp eq i32 %93, %98, !dbg !12633
  br i1 %99, label %116, label %100, !dbg !12634

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12635
  %102 = and i32 %101, -769, !dbg !12637
  call void @llvm.dbg.value(metadata i32 %102, metadata !12543, metadata !DIExpression()), !dbg !12555
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12638
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12639
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12640
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12641
  %104 = and i32 %103, 1, !dbg !12641
  %105 = icmp eq i32 %104, 0, !dbg !12641
  br i1 %105, label %116, label %106, !dbg !12643

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #27, !dbg !12644
  call void @llvm.dbg.value(metadata i32 %107, metadata !12542, metadata !DIExpression()), !dbg !12555
  br label %108, !dbg !12646

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12647
  %110 = and i32 %109, 2, !dbg !12648
  %111 = icmp eq i32 %110, 0, !dbg !12648
  br i1 %111, label %112, label %116, !dbg !12646

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #27, !dbg !12649
  %114 = sub i32 %113, %107, !dbg !12652
  %115 = icmp ugt i32 %114, 5000, !dbg !12653
  br i1 %115, label %439, label %108, !dbg !12654, !llvm.loop !12655

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12657
  %118 = load i32, i32* %117, align 4, !dbg !12657
  %119 = and i32 %118, 768, !dbg !12657
  %120 = icmp eq i32 %119, 768, !dbg !12657
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12657
  %122 = and i32 %121, -2031617, !dbg !12657
  %123 = and i32 %118, 268434687, !dbg !12657
  %124 = select i1 %120, i32 %123, i32 0, !dbg !12657
  %125 = or i32 %122, %124, !dbg !12657
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12657
  %126 = load i32, i32* %117, align 4, !dbg !12657
  %127 = and i32 %126, 4095, !dbg !12657
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12657
  %129 = or i32 %128, %127, !dbg !12657
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12657
  %130 = load i32, i32* %3, align 4, !dbg !12659
  br label %131, !dbg !12661

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !12659
  %133 = and i32 %132, 16, !dbg !12662
  %134 = icmp eq i32 %133, 0, !dbg !12663
  br i1 %134, label %140, label %135, !dbg !12664

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12665
  %137 = load i8, i8* %136, align 4, !dbg !12665
  %138 = zext i8 %137 to i32, !dbg !12665
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !12665
  %139 = load i32, i32* %3, align 4, !dbg !12667
  br label %140, !dbg !12669

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !12667
  %142 = and i32 %141, 128, !dbg !12670
  %143 = icmp eq i32 %142, 0, !dbg !12671
  br i1 %143, label %151, label %144, !dbg !12672

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12673
  %146 = and i32 %145, -12582913, !dbg !12673
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12673
  %148 = load i32, i32* %147, align 4, !dbg !12673
  %149 = or i32 %146, %148, !dbg !12673
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12673
  %150 = load i32, i32* %3, align 4, !dbg !12675
  br label %151, !dbg !12677

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !12675
  %153 = and i32 %152, 64, !dbg !12678
  %154 = icmp eq i32 %153, 0, !dbg !12679
  br i1 %154, label %162, label %155, !dbg !12680

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12681
  %157 = and i32 %156, -67108865, !dbg !12681
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12681
  %159 = load i32, i32* %158, align 4, !dbg !12681
  %160 = or i32 %157, %159, !dbg !12681
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12681
  %161 = load i32, i32* %3, align 4, !dbg !12683
  br label %162, !dbg !12685

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !12683
  %164 = and i32 %163, 256, !dbg !12686
  %165 = icmp eq i32 %164, 0, !dbg !12687
  br i1 %165, label %176, label %166, !dbg !12688

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12689
  %168 = and i32 %167, -134217729, !dbg !12689
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12689
  %170 = load i32, i32* %169, align 4, !dbg !12689
  %171 = or i32 %168, %170, !dbg !12689
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12689
  %172 = load i32, i32* %169, align 4, !dbg !12691
  %173 = icmp eq i32 %172, 134217728, !dbg !12693
  %174 = select i1 %173, i32 1, i32 %70, !dbg !12694
  %175 = load i32, i32* %3, align 4, !dbg !12695
  br label %176, !dbg !12694

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !12695
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !12555
  call void @llvm.dbg.value(metadata i32 %178, metadata !12550, metadata !DIExpression()), !dbg !12555
  %179 = and i32 %177, 512, !dbg !12697
  %180 = icmp eq i32 %179, 0, !dbg !12698
  br i1 %180, label %188, label %181, !dbg !12699

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12700
  %183 = and i32 %182, -268435457, !dbg !12700
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12700
  %185 = load i32, i32* %184, align 4, !dbg !12700
  %186 = or i32 %183, %185, !dbg !12700
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12700
  %187 = load i32, i32* %3, align 4, !dbg !12702
  br label %188, !dbg !12704

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !12702
  %190 = and i32 %189, 1024, !dbg !12705
  %191 = icmp eq i32 %190, 0, !dbg !12706
  br i1 %191, label %204, label %192, !dbg !12707

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12708
  %194 = and i32 %193, -536870913, !dbg !12708
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12708
  %196 = load i32, i32* %195, align 4, !dbg !12708
  %197 = or i32 %194, %196, !dbg !12708
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12708
  %198 = load i32, i32* %195, align 4, !dbg !12710
  %199 = icmp eq i32 %198, 536870912, !dbg !12712
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !12713
  call void @llvm.dbg.value(metadata i32 %69, metadata !12549, metadata !DIExpression()), !dbg !12555
  br i1 %201, label %209, label %202, !dbg !12713

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !12714
  br label %206, !dbg !12713

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !12549, metadata !DIExpression()), !dbg !12555
  %205 = icmp eq i32 %69, 1, !dbg !12716
  br i1 %205, label %209, label %206, !dbg !12717

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !12714
  %208 = icmp eq i32 %207, 2048, !dbg !12718
  br i1 %208, label %209, label %356, !dbg !12719

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12720
  %210 = tail call i32 @HAL_GetTick() #27, !dbg !12722
  call void @llvm.dbg.value(metadata i32 %210, metadata !12542, metadata !DIExpression()), !dbg !12555
  br label %211, !dbg !12723

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12724
  %213 = and i32 %212, 134217728, !dbg !12724
  %214 = icmp eq i32 %213, 0, !dbg !12724
  br i1 %214, label %219, label %215, !dbg !12723

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #27, !dbg !12725
  %217 = sub i32 %216, %210, !dbg !12728
  %218 = icmp ugt i32 %217, 2, !dbg !12729
  br i1 %218, label %439, label %211, !dbg !12730, !llvm.loop !12731

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !12733
  %221 = and i32 %220, 1, !dbg !12735
  %222 = icmp eq i32 %221, 0, !dbg !12736
  br i1 %222, label %227, label %223, !dbg !12737

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12738
  %225 = load i32, i32* %224, align 4, !dbg !12738
  %226 = icmp eq i32 %225, 0, !dbg !12739
  br i1 %226, label %234, label %227, !dbg !12740

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !12741
  %229 = icmp eq i32 %228, 0, !dbg !12742
  br i1 %229, label %252, label %230, !dbg !12743

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12744
  %232 = load i32, i32* %231, align 4, !dbg !12744
  %233 = icmp eq i32 %232, 0, !dbg !12745
  br i1 %233, label %234, label %252, !dbg !12746

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12747
  %236 = and i32 %235, 196608, !dbg !12749
  call void @llvm.dbg.value(metadata i32 %236, metadata !12544, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12555
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12750
  %238 = and i32 %237, 251658240, !dbg !12751
  call void @llvm.dbg.value(metadata i32 %238, metadata !12545, metadata !DIExpression()), !dbg !12555
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12752
  %240 = load i32, i32* %239, align 4, !dbg !12752
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12752
  %242 = load i32, i32* %241, align 4, !dbg !12752
  %243 = shl i32 %242, 6, !dbg !12752
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12752
  %245 = load i32, i32* %244, align 4, !dbg !12752
  %246 = shl i32 %245, 28, !dbg !12752
  %247 = or i32 %240, %236, !dbg !12752
  %248 = or i32 %247, %238, !dbg !12752
  %249 = or i32 %248, %243, !dbg !12752
  %250 = or i32 %249, %246, !dbg !12752
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12752
  %251 = load i32, i32* %3, align 4, !dbg !12753
  br label %252, !dbg !12755

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !12753
  %254 = and i32 %253, 4, !dbg !12756
  %255 = icmp eq i32 %254, 0, !dbg !12757
  br i1 %255, label %260, label %256, !dbg !12758

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12759
  %258 = load i32, i32* %257, align 4, !dbg !12759
  %259 = icmp eq i32 %258, 1048576, !dbg !12760
  br i1 %259, label %267, label %260, !dbg !12761

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !12762
  %262 = icmp eq i32 %261, 0, !dbg !12763
  br i1 %262, label %291, label %263, !dbg !12764

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12765
  %265 = load i32, i32* %264, align 4, !dbg !12765
  %266 = icmp eq i32 %265, 4194304, !dbg !12766
  br i1 %266, label %267, label %291, !dbg !12767

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12768
  %269 = and i32 %268, 196608, !dbg !12770
  call void @llvm.dbg.value(metadata i32 %269, metadata !12544, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12555
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12771
  %271 = and i32 %270, 1879048192, !dbg !12772
  call void @llvm.dbg.value(metadata i32 %271, metadata !12546, metadata !DIExpression()), !dbg !12555
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12773
  %273 = load i32, i32* %272, align 4, !dbg !12773
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12773
  %275 = load i32, i32* %274, align 4, !dbg !12773
  %276 = shl i32 %275, 6, !dbg !12773
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12773
  %278 = load i32, i32* %277, align 4, !dbg !12773
  %279 = shl i32 %278, 24, !dbg !12773
  %280 = or i32 %273, %269, !dbg !12773
  %281 = or i32 %280, %271, !dbg !12773
  %282 = or i32 %281, %276, !dbg !12773
  %283 = or i32 %282, %279, !dbg !12773
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12773
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12774
  %285 = and i32 %284, -32, !dbg !12774
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12774
  %287 = load i32, i32* %286, align 4, !dbg !12774
  %288 = add i32 %287, -1, !dbg !12774
  %289 = or i32 %288, %285, !dbg !12774
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12774
  %290 = load i32, i32* %3, align 4, !dbg !12775
  br label %291, !dbg !12777

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !12775
  %293 = and i32 %292, 1024, !dbg !12778
  %294 = icmp eq i32 %293, 0, !dbg !12779
  br i1 %294, label %321, label %295, !dbg !12780

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12781
  %297 = load i32, i32* %296, align 4, !dbg !12781
  %298 = icmp eq i32 %297, 536870912, !dbg !12782
  br i1 %298, label %299, label %321, !dbg !12783

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12784
  call void @llvm.dbg.value(metadata i32 %300, metadata !12545, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12555
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12786
  %302 = and i32 %301, 1879048192, !dbg !12787
  call void @llvm.dbg.value(metadata i32 %302, metadata !12546, metadata !DIExpression()), !dbg !12555
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12788
  %304 = load i32, i32* %303, align 4, !dbg !12788
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12788
  %306 = load i32, i32* %305, align 4, !dbg !12788
  %307 = shl i32 %306, 6, !dbg !12788
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12788
  %309 = load i32, i32* %308, align 4, !dbg !12788
  %310 = shl i32 %309, 15, !dbg !12788
  %311 = add i32 %310, -65536, !dbg !12788
  %312 = and i32 %311, -65536, !dbg !12788
  %313 = shl i32 %300, 9, !dbg !12788
  %314 = and i32 %313, 100663296, !dbg !12788
  %315 = add nuw nsw i32 %314, 33554432, !dbg !12788
  %316 = or i32 %302, %304, !dbg !12788
  %317 = or i32 %316, %315, !dbg !12788
  %318 = or i32 %317, %307, !dbg !12788
  %319 = or i32 %318, %312, !dbg !12788
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12788
  %320 = load i32, i32* %3, align 4, !dbg !12789
  br label %321, !dbg !12791

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !12789
  %323 = and i32 %322, 2048, !dbg !12792
  %324 = icmp eq i32 %323, 0, !dbg !12793
  br i1 %324, label %346, label %325, !dbg !12794

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12795
  %327 = load i32, i32* %326, align 4, !dbg !12795
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12795
  %329 = load i32, i32* %328, align 4, !dbg !12795
  %330 = shl i32 %329, 6, !dbg !12795
  %331 = or i32 %330, %327, !dbg !12795
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12795
  %333 = load i32, i32* %332, align 4, !dbg !12795
  %334 = shl i32 %333, 15, !dbg !12795
  %335 = add i32 %334, -65536, !dbg !12795
  %336 = and i32 %335, -65536, !dbg !12795
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12795
  %338 = load i32, i32* %337, align 4, !dbg !12795
  %339 = shl i32 %338, 24, !dbg !12795
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12795
  %341 = load i32, i32* %340, align 4, !dbg !12795
  %342 = shl i32 %341, 28, !dbg !12795
  %343 = or i32 %331, %339, !dbg !12795
  %344 = or i32 %343, %336, !dbg !12795
  %345 = or i32 %344, %342, !dbg !12795
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12795
  br label %346, !dbg !12797

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12798
  %347 = tail call i32 @HAL_GetTick() #27, !dbg !12799
  call void @llvm.dbg.value(metadata i32 %347, metadata !12542, metadata !DIExpression()), !dbg !12555
  br label %348, !dbg !12800

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12801
  %350 = and i32 %349, 134217728, !dbg !12802
  %351 = icmp eq i32 %350, 0, !dbg !12802
  br i1 %351, label %352, label %356, !dbg !12800

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #27, !dbg !12803
  %354 = sub i32 %353, %347, !dbg !12806
  %355 = icmp ugt i32 %354, 2, !dbg !12807
  br i1 %355, label %439, label %348, !dbg !12808, !llvm.loop !12809

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !12811
  br i1 %357, label %358, label %439, !dbg !12813

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12814
  %359 = tail call i32 @HAL_GetTick() #27, !dbg !12816
  call void @llvm.dbg.value(metadata i32 %359, metadata !12542, metadata !DIExpression()), !dbg !12555
  br label %360, !dbg !12817

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12818
  %362 = and i32 %361, 536870912, !dbg !12818
  %363 = icmp eq i32 %362, 0, !dbg !12818
  br i1 %363, label %368, label %364, !dbg !12817

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #27, !dbg !12819
  %366 = sub i32 %365, %359, !dbg !12822
  %367 = icmp ugt i32 %366, 2, !dbg !12823
  br i1 %367, label %439, label %360, !dbg !12824, !llvm.loop !12825

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !12827
  %370 = and i32 %369, 4, !dbg !12829
  %371 = icmp eq i32 %370, 0, !dbg !12830
  br i1 %371, label %376, label %372, !dbg !12831

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12832
  %374 = load i32, i32* %373, align 4, !dbg !12832
  %375 = icmp eq i32 %374, 0, !dbg !12833
  br i1 %375, label %383, label %376, !dbg !12834

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !12835
  %378 = icmp eq i32 %377, 0, !dbg !12836
  br i1 %378, label %405, label %379, !dbg !12837

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12838
  %381 = load i32, i32* %380, align 4, !dbg !12838
  %382 = icmp eq i32 %381, 0, !dbg !12839
  br i1 %382, label %383, label %405, !dbg !12840

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12841
  %385 = and i32 %384, 196608, !dbg !12843
  call void @llvm.dbg.value(metadata i32 %385, metadata !12547, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12555
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12844
  %387 = load i32, i32* %386, align 4, !dbg !12844
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12844
  %389 = load i32, i32* %388, align 4, !dbg !12844
  %390 = shl i32 %389, 6, !dbg !12844
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12844
  %392 = load i32, i32* %391, align 4, !dbg !12844
  %393 = shl i32 %392, 24, !dbg !12844
  %394 = or i32 %385, %387, !dbg !12844
  %395 = or i32 %394, %390, !dbg !12844
  %396 = or i32 %395, %393, !dbg !12844
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12844
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12845
  %398 = and i32 %397, -7937, !dbg !12845
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12845
  %400 = load i32, i32* %399, align 4, !dbg !12845
  %401 = shl i32 %400, 8, !dbg !12845
  %402 = add i32 %401, -256, !dbg !12845
  %403 = or i32 %402, %398, !dbg !12845
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12845
  %404 = load i32, i32* %3, align 4, !dbg !12846
  br label %405, !dbg !12848

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !12846
  %407 = and i32 %406, 256, !dbg !12849
  %408 = icmp eq i32 %407, 0, !dbg !12850
  br i1 %408, label %429, label %409, !dbg !12851

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12852
  %411 = load i32, i32* %410, align 4, !dbg !12852
  %412 = icmp eq i32 %411, 134217728, !dbg !12853
  br i1 %412, label %413, label %429, !dbg !12854

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12855
  %415 = and i32 %414, 251658240, !dbg !12857
  call void @llvm.dbg.value(metadata i32 %415, metadata !12548, metadata !DIExpression()), !dbg !12555
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12858
  %417 = load i32, i32* %416, align 4, !dbg !12858
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12858
  %419 = load i32, i32* %418, align 4, !dbg !12858
  %420 = shl i32 %419, 6, !dbg !12858
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12858
  %422 = load i32, i32* %421, align 4, !dbg !12858
  %423 = shl i32 %422, 15, !dbg !12858
  %424 = add i32 %423, -65536, !dbg !12858
  %425 = and i32 %424, -65536, !dbg !12858
  %426 = or i32 %415, %417, !dbg !12858
  %427 = or i32 %426, %420, !dbg !12858
  %428 = or i32 %427, %425, !dbg !12858
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12858
  br label %429, !dbg !12859

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12860
  %430 = tail call i32 @HAL_GetTick() #27, !dbg !12861
  call void @llvm.dbg.value(metadata i32 %430, metadata !12542, metadata !DIExpression()), !dbg !12555
  br label %431, !dbg !12862

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12863
  %433 = and i32 %432, 536870912, !dbg !12864
  %434 = icmp eq i32 %433, 0, !dbg !12864
  br i1 %434, label %435, label %439, !dbg !12862

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #27, !dbg !12865
  %437 = sub i32 %436, %430, !dbg !12868
  %438 = icmp ugt i32 %437, 2, !dbg !12869
  br i1 %438, label %439, label %431, !dbg !12870, !llvm.loop !12871

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !12555
  ret i32 %440, !dbg !12873
}

; Function Attrs: optsize
declare !dbg !12874 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #7 !dbg !12876 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12880, metadata !DIExpression()), !dbg !12882
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12883
  store i32 2047, i32* %2, align 4, !dbg !12884
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12885
  %4 = and i32 %3, 63, !dbg !12886
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12887
  store i32 %4, i32* %5, align 4, !dbg !12888
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12889
  %7 = lshr i32 %6, 6, !dbg !12890
  %8 = and i32 %7, 511, !dbg !12890
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12891
  store i32 %8, i32* %9, align 4, !dbg !12892
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12893
  %11 = lshr i32 %10, 15, !dbg !12894
  %12 = and i32 %11, 6, !dbg !12894
  %13 = add nuw nsw i32 %12, 2, !dbg !12894
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12895
  store i32 %13, i32* %14, align 4, !dbg !12896
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12897
  %16 = lshr i32 %15, 24, !dbg !12898
  %17 = and i32 %16, 15, !dbg !12898
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12899
  store i32 %17, i32* %18, align 4, !dbg !12900
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12901
  %20 = lshr i32 %19, 28, !dbg !12902
  %21 = and i32 %20, 7, !dbg !12902
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12903
  store i32 %21, i32* %22, align 4, !dbg !12904
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12905
  %24 = and i32 %23, 63, !dbg !12906
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12907
  store i32 %24, i32* %25, align 4, !dbg !12908
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12909
  %27 = lshr i32 %26, 6, !dbg !12910
  %28 = and i32 %27, 511, !dbg !12910
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12911
  store i32 %28, i32* %29, align 4, !dbg !12912
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12913
  %31 = lshr i32 %30, 15, !dbg !12914
  %32 = and i32 %31, 6, !dbg !12914
  %33 = add nuw nsw i32 %32, 2, !dbg !12914
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12915
  store i32 %33, i32* %34, align 4, !dbg !12916
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12917
  %36 = lshr i32 %35, 24, !dbg !12918
  %37 = and i32 %36, 15, !dbg !12918
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12919
  store i32 %37, i32* %38, align 4, !dbg !12920
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12921
  %40 = and i32 %39, 31, !dbg !12922
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12923
  store i32 %40, i32* %41, align 4, !dbg !12924
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12925
  %43 = lshr i32 %42, 8, !dbg !12926
  %44 = and i32 %43, 31, !dbg !12926
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12927
  store i32 %44, i32* %45, align 4, !dbg !12928
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12929
  %47 = and i32 %46, 3145728, !dbg !12929
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12930
  store i32 %47, i32* %48, align 4, !dbg !12931
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12932
  %50 = and i32 %49, 12582912, !dbg !12932
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12933
  store i32 %50, i32* %51, align 4, !dbg !12934
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12935
  %53 = and i32 %52, 100663296, !dbg !12935
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12936
  store i32 %53, i32* %54, align 4, !dbg !12937
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12938
  %56 = and i32 %55, 402653184, !dbg !12938
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12939
  store i32 %56, i32* %57, align 4, !dbg !12940
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12941
  %59 = and i32 %58, 2031616, !dbg !12942
  call void @llvm.dbg.value(metadata i32 %59, metadata !12881, metadata !DIExpression()), !dbg !12882
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12943
  %61 = and i32 %60, 768, !dbg !12944
  %62 = or i32 %61, %59, !dbg !12945
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12946
  store i32 %62, i32* %63, align 4, !dbg !12947
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12948
  %65 = and i32 %64, 67108864, !dbg !12948
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12949
  store i32 %65, i32* %66, align 4, !dbg !12950
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12951
  %68 = and i32 %67, 12582912, !dbg !12951
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12952
  store i32 %68, i32* %69, align 4, !dbg !12953
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12954
  %71 = and i32 %70, 134217728, !dbg !12954
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12955
  store i32 %71, i32* %72, align 4, !dbg !12956
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12957
  %74 = and i32 %73, 268435456, !dbg !12957
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12958
  store i32 %74, i32* %75, align 4, !dbg !12959
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12960
  %77 = and i32 %76, 536870912, !dbg !12960
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12961
  store i32 %77, i32* %78, align 4, !dbg !12962
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12963
  %80 = lshr i32 %79, 24, !dbg !12965
  %81 = trunc i32 %80 to i8, !dbg !12965
  %82 = and i8 %81, 1, !dbg !12965
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12966
  store i8 %82, i8* %83, align 4, !dbg !12968
  ret void, !dbg !12969
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #7 !dbg !12970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12972, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 0, metadata !12973, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 0, metadata !12974, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 0, metadata !12975, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 0, metadata !12976, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 0, metadata !12977, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 0, metadata !12978, metadata !DIExpression()), !dbg !12979
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !12980

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12981
  call void @llvm.dbg.value(metadata i32 %3, metadata !12976, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 %3, metadata !12976, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !12979
  %4 = lshr i32 %3, 20, !dbg !12984
  %5 = and i32 %4, 15, !dbg !12984
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !12984

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12985
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12989
  %9 = and i32 %8, 63, !dbg !12989
  %10 = udiv i32 16000000, %9, !dbg !12989
  call void @llvm.dbg.value(metadata i32 %10, metadata !12975, metadata !DIExpression()), !dbg !12979
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12990
  %12 = lshr i32 %11, 24, !dbg !12991
  %13 = and i32 %12, 15, !dbg !12991
  call void @llvm.dbg.value(metadata i32 %13, metadata !12973, metadata !DIExpression()), !dbg !12979
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12992
  %15 = lshr i32 %14, 6, !dbg !12993
  %16 = and i32 %15, 511, !dbg !12993
  %17 = mul i32 %16, %10, !dbg !12994
  %18 = udiv i32 %17, %13, !dbg !12995
  call void @llvm.dbg.value(metadata i32 %18, metadata !12974, metadata !DIExpression()), !dbg !12979
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12996
  %20 = lshr i32 %19, 8, !dbg !12997
  %21 = and i32 %20, 31, !dbg !12997
  %22 = add nuw nsw i32 %21, 1, !dbg !12998
  call void @llvm.dbg.value(metadata i32 %22, metadata !12973, metadata !DIExpression()), !dbg !12979
  %23 = udiv i32 %18, %22, !dbg !12999
  call void @llvm.dbg.value(metadata i32 %23, metadata !12974, metadata !DIExpression()), !dbg !12979
  br label %123, !dbg !13000

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13001
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13004
  %27 = and i32 %26, 63, !dbg !13004
  %28 = udiv i32 16000000, %27, !dbg !13004
  call void @llvm.dbg.value(metadata i32 %28, metadata !12975, metadata !DIExpression()), !dbg !12979
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13005
  %30 = lshr i32 %29, 24, !dbg !13006
  %31 = and i32 %30, 15, !dbg !13006
  call void @llvm.dbg.value(metadata i32 %31, metadata !12973, metadata !DIExpression()), !dbg !12979
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13007
  %33 = lshr i32 %32, 6, !dbg !13008
  %34 = and i32 %33, 511, !dbg !13008
  %35 = mul i32 %34, %28, !dbg !13009
  %36 = udiv i32 %35, %31, !dbg !13010
  call void @llvm.dbg.value(metadata i32 %36, metadata !12974, metadata !DIExpression()), !dbg !12979
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13011
  %38 = and i32 %37, 31, !dbg !13012
  %39 = add nuw nsw i32 %38, 1, !dbg !13013
  call void @llvm.dbg.value(metadata i32 %39, metadata !12973, metadata !DIExpression()), !dbg !12979
  %40 = udiv i32 %36, %39, !dbg !13014
  call void @llvm.dbg.value(metadata i32 %40, metadata !12974, metadata !DIExpression()), !dbg !12979
  br label %123, !dbg !13015

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13016
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13019
  %44 = and i32 %43, 63, !dbg !13019
  %45 = udiv i32 16000000, %44, !dbg !13019
  call void @llvm.dbg.value(metadata i32 %45, metadata !12975, metadata !DIExpression()), !dbg !12979
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13020
  %47 = lshr i32 %46, 28, !dbg !13021
  %48 = and i32 %47, 7, !dbg !13021
  call void @llvm.dbg.value(metadata i32 %48, metadata !12973, metadata !DIExpression()), !dbg !12979
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13022
  %50 = lshr i32 %49, 6, !dbg !13023
  %51 = and i32 %50, 511, !dbg !13023
  %52 = mul i32 %51, %45, !dbg !13024
  %53 = udiv i32 %52, %48, !dbg !13025
  call void @llvm.dbg.value(metadata i32 %53, metadata !12974, metadata !DIExpression()), !dbg !12979
  br label %123, !dbg !13026

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !12974, metadata !DIExpression()), !dbg !12979
  br label %123, !dbg !13027

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13029
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12974, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12974, metadata !DIExpression()), !dbg !12979
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13032
  call void @llvm.dbg.value(metadata i32 %58, metadata !12977, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !12979
  %59 = lshr i32 %58, 25, !dbg !13034
  %60 = and i32 %59, 3, !dbg !13034
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !13034

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13035
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13039
  %64 = and i32 %63, 63, !dbg !13039
  %65 = udiv i32 16000000, %64, !dbg !13039
  call void @llvm.dbg.value(metadata i32 %65, metadata !12975, metadata !DIExpression()), !dbg !12979
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13040
  %67 = lshr i32 %66, 6, !dbg !13041
  %68 = and i32 %67, 511, !dbg !13041
  %69 = mul i32 %68, %65, !dbg !13042
  call void @llvm.dbg.value(metadata i32 %69, metadata !12978, metadata !DIExpression()), !dbg !12979
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13043
  %71 = lshr i32 %70, 28, !dbg !13044
  %72 = and i32 %71, 7, !dbg !13044
  %73 = udiv i32 %69, %72, !dbg !13045
  call void @llvm.dbg.value(metadata i32 %73, metadata !12974, metadata !DIExpression()), !dbg !12979
  br label %123, !dbg !13046

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13047
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13050
  %77 = and i32 %76, 63, !dbg !13050
  %78 = udiv i32 16000000, %77, !dbg !13050
  call void @llvm.dbg.value(metadata i32 %78, metadata !12975, metadata !DIExpression()), !dbg !12979
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13051
  %80 = lshr i32 %79, 6, !dbg !13052
  %81 = and i32 %80, 511, !dbg !13052
  %82 = mul i32 %81, %78, !dbg !13053
  call void @llvm.dbg.value(metadata i32 %82, metadata !12978, metadata !DIExpression()), !dbg !12979
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13054
  %84 = lshr i32 %83, 28, !dbg !13055
  %85 = and i32 %84, 7, !dbg !13055
  %86 = udiv i32 %82, %85, !dbg !13056
  call void @llvm.dbg.value(metadata i32 %86, metadata !12974, metadata !DIExpression()), !dbg !12979
  br label %123, !dbg !13057

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13058
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12974, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12974, metadata !DIExpression()), !dbg !12979
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13061
  call void @llvm.dbg.value(metadata i32 %91, metadata !12977, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !12979
  %92 = lshr i32 %91, 27, !dbg !13063
  %93 = and i32 %92, 3, !dbg !13063
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !13063

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13064
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13068
  %97 = and i32 %96, 63, !dbg !13068
  %98 = udiv i32 16000000, %97, !dbg !13068
  call void @llvm.dbg.value(metadata i32 %98, metadata !12975, metadata !DIExpression()), !dbg !12979
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13069
  %100 = lshr i32 %99, 6, !dbg !13070
  %101 = and i32 %100, 511, !dbg !13070
  %102 = mul i32 %101, %98, !dbg !13071
  call void @llvm.dbg.value(metadata i32 %102, metadata !12978, metadata !DIExpression()), !dbg !12979
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13072
  %104 = lshr i32 %103, 28, !dbg !13073
  %105 = and i32 %104, 7, !dbg !13073
  %106 = udiv i32 %102, %105, !dbg !13074
  call void @llvm.dbg.value(metadata i32 %106, metadata !12974, metadata !DIExpression()), !dbg !12979
  br label %123, !dbg !13075

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13076
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()), !dbg !12979
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13079
  %110 = and i32 %109, 63, !dbg !13079
  %111 = udiv i32 16000000, %110, !dbg !13079
  call void @llvm.dbg.value(metadata i32 %111, metadata !12975, metadata !DIExpression()), !dbg !12979
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13080
  %113 = lshr i32 %112, 6, !dbg !13081
  %114 = and i32 %113, 511, !dbg !13081
  %115 = mul i32 %114, %111, !dbg !13082
  call void @llvm.dbg.value(metadata i32 %115, metadata !12978, metadata !DIExpression()), !dbg !12979
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13083
  %117 = lshr i32 %116, 28, !dbg !13084
  %118 = and i32 %117, 7, !dbg !13084
  %119 = udiv i32 %115, %118, !dbg !13085
  call void @llvm.dbg.value(metadata i32 %119, metadata !12974, metadata !DIExpression()), !dbg !12979
  br label %123, !dbg !13086

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13087
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12974, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12974, metadata !DIExpression()), !dbg !12979
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !12979
  call void @llvm.dbg.value(metadata i32 %124, metadata !12974, metadata !DIExpression()), !dbg !12979
  ret i32 %124, !dbg !13090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #18 !dbg !13091 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13095, metadata !DIExpression()), !dbg !13096
  %2 = icmp eq i8 %0, 1, !dbg !13097
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13099
  %4 = and i32 %3, -9, !dbg !13100
  %5 = select i1 %2, i32 8, i32 0, !dbg !13100
  %6 = or i32 %4, %5, !dbg !13100
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13099
  ret void, !dbg !13101
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.msg* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13102 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !13107, metadata !DIExpression()), !dbg !13109
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13110
  %2 = tail call i32 @HAL_GetTick() #27, !dbg !13111
  call void @llvm.dbg.value(metadata i32 %2, metadata !13108, metadata !DIExpression()), !dbg !13109
  br label %3, !dbg !13112

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13113
  %5 = and i32 %4, 134217728, !dbg !13113
  %6 = icmp eq i32 %5, 0, !dbg !13113
  br i1 %6, label %11, label %7, !dbg !13112

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #27, !dbg !13114
  %9 = sub i32 %8, %2, !dbg !13117
  %10 = icmp ugt i32 %9, 2, !dbg !13118
  br i1 %10, label %41, label %3, !dbg !13119, !llvm.loop !13120

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !13122
  %13 = load i32, i32* %12, align 4, !dbg !13122
  %14 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 1, !dbg !13122
  %15 = load i32, i32* %14, align 4, !dbg !13122
  %16 = shl i32 %15, 6, !dbg !13122
  %17 = or i32 %16, %13, !dbg !13122
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !13122
  %19 = load i32, i32* %18, align 4, !dbg !13122
  %20 = shl i32 %19, 15, !dbg !13122
  %21 = add i32 %20, -65536, !dbg !13122
  %22 = and i32 %21, -65536, !dbg !13122
  %23 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 3, !dbg !13122
  %24 = load i32, i32* %23, align 4, !dbg !13122
  %25 = shl i32 %24, 24, !dbg !13122
  %26 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !13122
  %27 = load i32, i32* %26, align 4, !dbg !13122
  %28 = shl i32 %27, 28, !dbg !13122
  %29 = or i32 %17, %25, !dbg !13122
  %30 = or i32 %29, %22, !dbg !13122
  %31 = or i32 %30, %28, !dbg !13122
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13122
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13123
  %32 = tail call i32 @HAL_GetTick() #27, !dbg !13124
  call void @llvm.dbg.value(metadata i32 %32, metadata !13108, metadata !DIExpression()), !dbg !13109
  br label %33, !dbg !13125

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13126
  %35 = and i32 %34, 134217728, !dbg !13127
  %36 = icmp eq i32 %35, 0, !dbg !13127
  br i1 %36, label %37, label %41, !dbg !13125

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #27, !dbg !13128
  %39 = sub i32 %38, %32, !dbg !13131
  %40 = icmp ugt i32 %39, 2, !dbg !13132
  br i1 %40, label %41, label %33, !dbg !13133, !llvm.loop !13134

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !13109
  ret i32 %42, !dbg !13136
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !13137 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13142
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !13143
  call void @llvm.dbg.value(metadata i32 %1, metadata !13141, metadata !DIExpression()), !dbg !13144
  br label %2, !dbg !13145

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13146
  %4 = and i32 %3, 134217728, !dbg !13146
  %5 = icmp eq i32 %4, 0, !dbg !13147
  br i1 %5, label %10, label %6, !dbg !13145

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #27, !dbg !13148
  %8 = sub i32 %7, %1, !dbg !13151
  %9 = icmp ugt i32 %8, 2, !dbg !13152
  br i1 %9, label %10, label %2, !dbg !13153, !llvm.loop !13154

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !13144
  ret i32 %11, !dbg !13156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13157 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !13162, metadata !DIExpression()), !dbg !13164
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13165
  %2 = tail call i32 @HAL_GetTick() #27, !dbg !13166
  call void @llvm.dbg.value(metadata i32 %2, metadata !13163, metadata !DIExpression()), !dbg !13164
  br label %3, !dbg !13167

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13168
  %5 = and i32 %4, 536870912, !dbg !13168
  %6 = icmp eq i32 %5, 0, !dbg !13168
  br i1 %6, label %11, label %7, !dbg !13167

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #27, !dbg !13169
  %9 = sub i32 %8, %2, !dbg !13172
  %10 = icmp ugt i32 %9, 2, !dbg !13173
  br i1 %10, label %37, label %3, !dbg !13174, !llvm.loop !13175

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !13177
  %13 = load i32, i32* %12, align 4, !dbg !13177
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !13177
  %15 = load i32, i32* %14, align 4, !dbg !13177
  %16 = shl i32 %15, 6, !dbg !13177
  %17 = or i32 %16, %13, !dbg !13177
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !13177
  %19 = load i32, i32* %18, align 4, !dbg !13177
  %20 = shl i32 %19, 15, !dbg !13177
  %21 = add i32 %20, -65536, !dbg !13177
  %22 = and i32 %21, -65536, !dbg !13177
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !13177
  %24 = load i32, i32* %23, align 4, !dbg !13177
  %25 = shl i32 %24, 24, !dbg !13177
  %26 = or i32 %17, %25, !dbg !13177
  %27 = or i32 %26, %22, !dbg !13177
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13177
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13178
  %28 = tail call i32 @HAL_GetTick() #27, !dbg !13179
  call void @llvm.dbg.value(metadata i32 %28, metadata !13163, metadata !DIExpression()), !dbg !13164
  br label %29, !dbg !13180

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13181
  %31 = and i32 %30, 536870912, !dbg !13182
  %32 = icmp eq i32 %31, 0, !dbg !13182
  br i1 %32, label %33, label %37, !dbg !13180

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #27, !dbg !13183
  %35 = sub i32 %34, %28, !dbg !13186
  %36 = icmp ugt i32 %35, 2, !dbg !13187
  br i1 %36, label %37, label %29, !dbg !13188, !llvm.loop !13189

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !13164
  ret i32 %38, !dbg !13191
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !13192 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13195
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !13196
  call void @llvm.dbg.value(metadata i32 %1, metadata !13194, metadata !DIExpression()), !dbg !13197
  br label %2, !dbg !13198

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13199
  %4 = and i32 %3, 536870912, !dbg !13199
  %5 = icmp eq i32 %4, 0, !dbg !13199
  br i1 %5, label %10, label %6, !dbg !13198

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #27, !dbg !13200
  %8 = sub i32 %7, %1, !dbg !13203
  %9 = icmp ugt i32 %8, 2, !dbg !13204
  br i1 %9, label %10, label %2, !dbg !13205, !llvm.loop !13206

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !13197
  ret i32 %11, !dbg !13208
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #7 !dbg !13209 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13211, metadata !DIExpression()), !dbg !13216
  call void @llvm.dbg.value(metadata i32 0, metadata !13212, metadata !DIExpression()), !dbg !13216
  call void @llvm.dbg.value(metadata i32 0, metadata !13213, metadata !DIExpression()), !dbg !13216
  call void @llvm.dbg.value(metadata i32 0, metadata !13214, metadata !DIExpression()), !dbg !13216
  call void @llvm.dbg.value(metadata i32 0, metadata !13215, metadata !DIExpression()), !dbg !13216
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13217
  %2 = lshr i32 %1, 2, !dbg !13218
  %3 = and i32 %2, 3, !dbg !13218
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !13218

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13219
  %6 = and i32 %5, 63, !dbg !13222
  call void @llvm.dbg.value(metadata i32 %6, metadata !13211, metadata !DIExpression()), !dbg !13216
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13223
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13225
  %9 = lshr i32 %8, 6, !dbg !13225
  %10 = and i32 %9, 511, !dbg !13225
  %11 = zext i32 %10 to i64, !dbg !13225
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !13225
  %13 = zext i32 %6 to i64, !dbg !13225
  %14 = udiv i64 %12, %13, !dbg !13225
  %15 = trunc i64 %14 to i32, !dbg !13225
  call void @llvm.dbg.value(metadata i32 %15, metadata !13212, metadata !DIExpression()), !dbg !13216
  call void @llvm.dbg.value(metadata i32 %15, metadata !13212, metadata !DIExpression()), !dbg !13216
  call void @llvm.dbg.value(metadata i32 %15, metadata !13212, metadata !DIExpression()), !dbg !13216
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13226
  %17 = lshr i32 %16, 15, !dbg !13227
  %18 = and i32 %17, 6, !dbg !13227
  %19 = add nuw nsw i32 %18, 2, !dbg !13227
  call void @llvm.dbg.value(metadata i32 %19, metadata !13213, metadata !DIExpression()), !dbg !13216
  %20 = udiv i32 %15, %19, !dbg !13228
  call void @llvm.dbg.value(metadata i32 %20, metadata !13215, metadata !DIExpression()), !dbg !13216
  br label %38, !dbg !13229

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13230
  %23 = and i32 %22, 63, !dbg !13232
  call void @llvm.dbg.value(metadata i32 %23, metadata !13211, metadata !DIExpression()), !dbg !13216
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13233
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13235
  %26 = lshr i32 %25, 6, !dbg !13235
  %27 = and i32 %26, 511, !dbg !13235
  %28 = zext i32 %27 to i64, !dbg !13235
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !13235
  %30 = zext i32 %23 to i64, !dbg !13235
  %31 = udiv i64 %29, %30, !dbg !13235
  %32 = trunc i64 %31 to i32, !dbg !13235
  call void @llvm.dbg.value(metadata i32 %32, metadata !13212, metadata !DIExpression()), !dbg !13216
  call void @llvm.dbg.value(metadata i32 %32, metadata !13212, metadata !DIExpression()), !dbg !13216
  call void @llvm.dbg.value(metadata i32 %32, metadata !13212, metadata !DIExpression()), !dbg !13216
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13236
  %34 = lshr i32 %33, 28, !dbg !13237
  %35 = and i32 %34, 7, !dbg !13237
  call void @llvm.dbg.value(metadata i32 %35, metadata !13214, metadata !DIExpression()), !dbg !13216
  %36 = udiv i32 %32, %35, !dbg !13238
  call void @llvm.dbg.value(metadata i32 %36, metadata !13215, metadata !DIExpression()), !dbg !13216
  br label %38, !dbg !13239

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !13240
  call void @llvm.dbg.value(metadata i32 %39, metadata !13215, metadata !DIExpression()), !dbg !13216
  ret i32 %39, !dbg !13241
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !13242 {
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !13245
  call void @llvm.dbg.value(metadata i32 %1, metadata !13244, metadata !DIExpression()), !dbg !13246
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13247
  %3 = or i32 %2, 1, !dbg !13247
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13247
  br label %4, !dbg !13248

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13249
  %6 = and i32 %5, 2, !dbg !13249
  %7 = icmp eq i32 %6, 0, !dbg !13250
  br i1 %7, label %8, label %12, !dbg !13248

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #27, !dbg !13251
  %10 = sub i32 %9, %1, !dbg !13254
  %11 = icmp ugt i32 %10, 2, !dbg !13255
  br i1 %11, label %89, label %4, !dbg !13256, !llvm.loop !13257

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13259
  %14 = or i32 %13, 128, !dbg !13259
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13259
  %15 = tail call i32 @HAL_GetTick() #27, !dbg !13260
  call void @llvm.dbg.value(metadata i32 %15, metadata !13244, metadata !DIExpression()), !dbg !13246
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13261
  br label %16, !dbg !13262

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13263
  %18 = and i32 %17, 12, !dbg !13263
  %19 = icmp eq i32 %18, 0, !dbg !13264
  %20 = tail call i32 @HAL_GetTick() #27, !dbg !13246
  br i1 %19, label %24, label %21, !dbg !13262

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !13265
  %23 = icmp ugt i32 %22, 5000, !dbg !13268
  br i1 %23, label %89, label %16, !dbg !13269, !llvm.loop !13270

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !13244, metadata !DIExpression()), !dbg !13246
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13272
  %26 = and i32 %25, -851969, !dbg !13272
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13272
  br label %27, !dbg !13273

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13274
  %29 = and i32 %28, 131072, !dbg !13274
  %30 = icmp eq i32 %29, 0, !dbg !13275
  %31 = tail call i32 @HAL_GetTick() #27, !dbg !13246
  br i1 %30, label %35, label %32, !dbg !13273

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !13276
  %34 = icmp ugt i32 %33, 100, !dbg !13279
  br i1 %34, label %89, label %27, !dbg !13280, !llvm.loop !13281

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !13244, metadata !DIExpression()), !dbg !13246
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13283
  %37 = and i32 %36, -16777217, !dbg !13283
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13283
  br label %38, !dbg !13284

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13285
  %40 = and i32 %39, 33554432, !dbg !13285
  %41 = icmp eq i32 %40, 0, !dbg !13286
  %42 = tail call i32 @HAL_GetTick() #27, !dbg !13246
  br i1 %41, label %46, label %43, !dbg !13284

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !13287
  %45 = icmp ugt i32 %44, 2, !dbg !13290
  br i1 %45, label %89, label %38, !dbg !13291, !llvm.loop !13292

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !13244, metadata !DIExpression()), !dbg !13246
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13294
  %48 = and i32 %47, -67108865, !dbg !13294
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13294
  br label %49, !dbg !13295

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13296
  %51 = and i32 %50, 134217728, !dbg !13296
  %52 = icmp eq i32 %51, 0, !dbg !13297
  %53 = tail call i32 @HAL_GetTick() #27, !dbg !13246
  br i1 %52, label %57, label %54, !dbg !13295

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !13298
  %56 = icmp ugt i32 %55, 2, !dbg !13301
  br i1 %56, label %89, label %49, !dbg !13302, !llvm.loop !13303

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !13244, metadata !DIExpression()), !dbg !13246
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13305
  %59 = and i32 %58, -268435457, !dbg !13305
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13305
  br label %60, !dbg !13306

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13307
  %62 = and i32 %61, 536870912, !dbg !13307
  %63 = icmp eq i32 %62, 0, !dbg !13308
  br i1 %63, label %68, label %64, !dbg !13306

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #27, !dbg !13309
  %66 = sub i32 %65, %53, !dbg !13312
  %67 = icmp ugt i32 %66, 2, !dbg !13313
  br i1 %67, label %89, label %60, !dbg !13314, !llvm.loop !13315

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13317
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13318
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13319
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13320
  %70 = and i32 %69, -7937, !dbg !13320
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13320
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13321
  %72 = and i32 %71, -8193, !dbg !13321
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13321
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13322
  %74 = and i32 %73, -16385, !dbg !13322
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13322
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13323
  %76 = or i32 %75, 10420224, !dbg !13323
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13323
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13324
  %78 = or i32 %77, 2097152, !dbg !13324
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13324
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13325
  %80 = or i32 %79, 4194304, !dbg !13325
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13325
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13326
  %82 = and i32 %81, -2, !dbg !13326
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13326
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13327
  %84 = or i32 %83, 16777216, !dbg !13327
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13327
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !13328
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !13329
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #27, !dbg !13331
  %87 = icmp ne i32 %86, 0, !dbg !13332
  %88 = zext i1 %87 to i32, !dbg !13333
  br label %89, !dbg !13333

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !13246
  ret i32 %90, !dbg !13334
}

; Function Attrs: optsize
declare !dbg !13335 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !13338 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13364, metadata !DIExpression()), !dbg !13375
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13376
  br i1 %3, label %337, label %4, !dbg !13378

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13379
  %6 = load i32, i32* %5, align 4, !dbg !13379
  %7 = and i32 %6, 1, !dbg !13381
  %8 = icmp eq i32 %7, 0, !dbg !13382
  br i1 %8, label %74, label %9, !dbg !13383

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13384
  %11 = and i32 %10, 12, !dbg !13384
  %12 = icmp eq i32 %11, 4, !dbg !13387
  br i1 %12, label %29, label %13, !dbg !13388

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13389
  %15 = and i32 %14, 12, !dbg !13389
  %16 = icmp eq i32 %15, 8, !dbg !13390
  br i1 %16, label %17, label %21, !dbg !13391

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13392
  %19 = and i32 %18, 4194304, !dbg !13393
  %20 = icmp eq i32 %19, 0, !dbg !13394
  br i1 %20, label %21, label %29, !dbg !13395

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13396
  %23 = and i32 %22, 12, !dbg !13396
  %24 = icmp eq i32 %23, 12, !dbg !13397
  br i1 %24, label %25, label %37, !dbg !13398

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13399
  %27 = and i32 %26, 4194304, !dbg !13400
  %28 = icmp eq i32 %27, 0, !dbg !13401
  br i1 %28, label %37, label %29, !dbg !13402

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13403
  %31 = and i32 %30, 131072, !dbg !13403
  %32 = icmp eq i32 %31, 0, !dbg !13403
  br i1 %32, label %74, label %33, !dbg !13406

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13407
  %35 = load i32, i32* %34, align 4, !dbg !13407
  %36 = icmp eq i32 %35, 0, !dbg !13408
  br i1 %36, label %337, label %74, !dbg !13409

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13410
  %39 = load i32, i32* %38, align 4, !dbg !13410
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !13414

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13415
  %42 = or i32 %41, 65536, !dbg !13415
  br label %53, !dbg !13415

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13417
  %45 = or i32 %44, 262144, !dbg !13417
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13417
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13417
  %47 = or i32 %46, 65536, !dbg !13417
  br label %53, !dbg !13417

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13420
  %50 = and i32 %49, -65537, !dbg !13420
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13420
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13420
  %52 = and i32 %51, -262145, !dbg !13420
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13422
  %55 = load i32, i32* %38, align 4, !dbg !13423
  %56 = icmp eq i32 %55, 0, !dbg !13425
  %57 = tail call i32 @HAL_GetTick() #27, !dbg !13426
  call void @llvm.dbg.value(metadata i32 %57, metadata !13365, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i32 %57, metadata !13365, metadata !DIExpression()), !dbg !13375
  br i1 %56, label %66, label %58, !dbg !13427

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13428
  %60 = and i32 %59, 131072, !dbg !13430
  %61 = icmp eq i32 %60, 0, !dbg !13430
  br i1 %61, label %62, label %74, !dbg !13431

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !13432
  %64 = sub i32 %63, %57, !dbg !13435
  %65 = icmp ugt i32 %64, 100, !dbg !13436
  br i1 %65, label %337, label %58, !dbg !13437, !llvm.loop !13438

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13440
  %68 = and i32 %67, 131072, !dbg !13440
  %69 = icmp eq i32 %68, 0, !dbg !13440
  br i1 %69, label %74, label %70, !dbg !13442

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #27, !dbg !13443
  %72 = sub i32 %71, %57, !dbg !13446
  %73 = icmp ugt i32 %72, 100, !dbg !13447
  br i1 %73, label %337, label %66, !dbg !13448, !llvm.loop !13449

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !13451
  %76 = and i32 %75, 2, !dbg !13453
  %77 = icmp eq i32 %76, 0, !dbg !13454
  br i1 %77, label %137, label %78, !dbg !13455

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13456
  %80 = and i32 %79, 12, !dbg !13456
  %81 = icmp eq i32 %80, 0, !dbg !13459
  br i1 %81, label %98, label %82, !dbg !13460

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13461
  %84 = and i32 %83, 12, !dbg !13461
  %85 = icmp eq i32 %84, 8, !dbg !13462
  br i1 %85, label %86, label %90, !dbg !13463

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13464
  %88 = and i32 %87, 4194304, !dbg !13465
  %89 = icmp eq i32 %88, 0, !dbg !13466
  br i1 %89, label %98, label %90, !dbg !13467

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13468
  %92 = and i32 %91, 12, !dbg !13468
  %93 = icmp eq i32 %92, 12, !dbg !13469
  br i1 %93, label %94, label %106, !dbg !13470

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13471
  %96 = and i32 %95, 4194304, !dbg !13472
  %97 = icmp eq i32 %96, 0, !dbg !13473
  br i1 %97, label %98, label %106, !dbg !13474

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13475
  %100 = and i32 %99, 2, !dbg !13475
  %101 = icmp eq i32 %100, 0, !dbg !13475
  br i1 %101, label %130, label %102, !dbg !13478

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13479
  %104 = load i32, i32* %103, align 4, !dbg !13479
  %105 = icmp eq i32 %104, 1, !dbg !13480
  br i1 %105, label %130, label %337, !dbg !13481

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13482
  %108 = load i32, i32* %107, align 4, !dbg !13482
  %109 = icmp eq i32 %108, 0, !dbg !13485
  br i1 %109, label %120, label %110, !dbg !13486

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13487
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !13489
  call void @llvm.dbg.value(metadata i32 %111, metadata !13365, metadata !DIExpression()), !dbg !13375
  br label %112, !dbg !13490

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13491
  %114 = and i32 %113, 2, !dbg !13492
  %115 = icmp eq i32 %114, 0, !dbg !13492
  br i1 %115, label %116, label %130, !dbg !13490

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #27, !dbg !13493
  %118 = sub i32 %117, %111, !dbg !13496
  %119 = icmp ugt i32 %118, 2, !dbg !13497
  br i1 %119, label %337, label %112, !dbg !13498, !llvm.loop !13499

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13501
  %121 = tail call i32 @HAL_GetTick() #27, !dbg !13503
  call void @llvm.dbg.value(metadata i32 %121, metadata !13365, metadata !DIExpression()), !dbg !13375
  br label %122, !dbg !13504

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13505
  %124 = and i32 %123, 2, !dbg !13505
  %125 = icmp eq i32 %124, 0, !dbg !13505
  br i1 %125, label %137, label %126, !dbg !13504

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #27, !dbg !13506
  %128 = sub i32 %127, %121, !dbg !13509
  %129 = icmp ugt i32 %128, 2, !dbg !13510
  br i1 %129, label %337, label %122, !dbg !13511, !llvm.loop !13512

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13514
  %132 = and i32 %131, -249, !dbg !13514
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13514
  %134 = load i32, i32* %133, align 4, !dbg !13514
  %135 = shl i32 %134, 3, !dbg !13514
  %136 = or i32 %135, %132, !dbg !13514
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13514
  br label %137, !dbg !13515

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !13515
  %139 = and i32 %138, 8, !dbg !13517
  %140 = icmp eq i32 %139, 0, !dbg !13518
  br i1 %140, label %165, label %141, !dbg !13519

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13520
  %143 = load i32, i32* %142, align 4, !dbg !13520
  %144 = icmp eq i32 %143, 0, !dbg !13523
  br i1 %144, label %155, label %145, !dbg !13524

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13525
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !13527
  call void @llvm.dbg.value(metadata i32 %146, metadata !13365, metadata !DIExpression()), !dbg !13375
  br label %147, !dbg !13528

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13529
  %149 = and i32 %148, 2, !dbg !13530
  %150 = icmp eq i32 %149, 0, !dbg !13530
  br i1 %150, label %151, label %165, !dbg !13528

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #27, !dbg !13531
  %153 = sub i32 %152, %146, !dbg !13534
  %154 = icmp ugt i32 %153, 2, !dbg !13535
  br i1 %154, label %337, label %147, !dbg !13536, !llvm.loop !13537

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13539
  %156 = tail call i32 @HAL_GetTick() #27, !dbg !13541
  call void @llvm.dbg.value(metadata i32 %156, metadata !13365, metadata !DIExpression()), !dbg !13375
  br label %157, !dbg !13542

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13543
  %159 = and i32 %158, 2, !dbg !13543
  %160 = icmp eq i32 %159, 0, !dbg !13543
  br i1 %160, label %165, label %161, !dbg !13542

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #27, !dbg !13544
  %163 = sub i32 %162, %156, !dbg !13547
  %164 = icmp ugt i32 %163, 2, !dbg !13548
  br i1 %164, label %337, label %157, !dbg !13549, !llvm.loop !13550

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !13552
  %167 = and i32 %166, 4, !dbg !13553
  %168 = icmp eq i32 %167, 0, !dbg !13554
  br i1 %168, label %237, label %169, !dbg !13555

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !13367, metadata !DIExpression()), !dbg !13556
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13557
  %171 = and i32 %170, 268435456, !dbg !13557
  %172 = icmp eq i32 %171, 0, !dbg !13557
  br i1 %172, label %173, label %180, !dbg !13558

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !13559
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !13559
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13371, metadata !DIExpression()), !dbg !13559
  store volatile i32 0, i32* %2, align 4, !dbg !13559
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13559
  %176 = or i32 %175, 268435456, !dbg !13559
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13559
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13559
  %178 = and i32 %177, 268435456, !dbg !13559
  store volatile i32 %178, i32* %2, align 4, !dbg !13559
  %179 = load volatile i32, i32* %2, align 4, !dbg !13559
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !13560
  call void @llvm.dbg.value(metadata i32 1, metadata !13367, metadata !DIExpression()), !dbg !13556
  br label %180, !dbg !13561

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !13367, metadata !DIExpression()), !dbg !13556
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13562
  %182 = and i32 %181, 256, !dbg !13562
  %183 = icmp eq i32 %182, 0, !dbg !13562
  br i1 %183, label %184, label %196, !dbg !13564

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13565
  %186 = or i32 %185, 256, !dbg !13565
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13565
  %187 = tail call i32 @HAL_GetTick() #27, !dbg !13567
  call void @llvm.dbg.value(metadata i32 %187, metadata !13365, metadata !DIExpression()), !dbg !13375
  br label %188, !dbg !13568

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13569
  %190 = and i32 %189, 256, !dbg !13569
  %191 = icmp eq i32 %190, 0, !dbg !13569
  br i1 %191, label %192, label %196, !dbg !13568

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #27, !dbg !13570
  %194 = sub i32 %193, %187, !dbg !13573
  %195 = icmp ugt i32 %194, 2, !dbg !13574
  br i1 %195, label %337, label %188, !dbg !13575, !llvm.loop !13576

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13578
  %198 = load i32, i32* %197, align 4, !dbg !13578
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !13581

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13582
  %201 = or i32 %200, 1, !dbg !13582
  br label %212, !dbg !13582

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13584
  %204 = or i32 %203, 4, !dbg !13584
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13584
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13584
  %206 = or i32 %205, 1, !dbg !13584
  br label %212, !dbg !13584

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13587
  %209 = and i32 %208, -2, !dbg !13587
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13587
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13587
  %211 = and i32 %210, -5, !dbg !13587
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13589
  %214 = load i32, i32* %197, align 4, !dbg !13590
  %215 = icmp eq i32 %214, 0, !dbg !13592
  %216 = tail call i32 @HAL_GetTick() #27, !dbg !13593
  call void @llvm.dbg.value(metadata i32 %216, metadata !13365, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i32 %216, metadata !13365, metadata !DIExpression()), !dbg !13375
  br i1 %215, label %225, label %217, !dbg !13594

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13595
  %219 = and i32 %218, 2, !dbg !13597
  %220 = icmp eq i32 %219, 0, !dbg !13597
  br i1 %220, label %221, label %233, !dbg !13598

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #27, !dbg !13599
  %223 = sub i32 %222, %216, !dbg !13602
  %224 = icmp ugt i32 %223, 5000, !dbg !13603
  br i1 %224, label %337, label %217, !dbg !13604, !llvm.loop !13605

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13607
  %227 = and i32 %226, 2, !dbg !13607
  %228 = icmp eq i32 %227, 0, !dbg !13607
  br i1 %228, label %233, label %229, !dbg !13609

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #27, !dbg !13610
  %231 = sub i32 %230, %216, !dbg !13613
  %232 = icmp ugt i32 %231, 5000, !dbg !13614
  br i1 %232, label %337, label %225, !dbg !13615, !llvm.loop !13616

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !13618

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13619
  %236 = and i32 %235, -268435457, !dbg !13619
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13619
  br label %237, !dbg !13622

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13623
  %239 = load i32, i32* %238, align 4, !dbg !13623
  %240 = icmp eq i32 %239, 0, !dbg !13625
  br i1 %240, label %336, label %241, !dbg !13626

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13627
  %243 = and i32 %242, 12, !dbg !13627
  %244 = icmp eq i32 %243, 8, !dbg !13630
  br i1 %244, label %297, label %245, !dbg !13631

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !13632
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13635
  %247 = tail call i32 @HAL_GetTick() #27, !dbg !13635
  call void @llvm.dbg.value(metadata i32 %247, metadata !13365, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i32 %247, metadata !13365, metadata !DIExpression()), !dbg !13375
  br i1 %246, label %248, label %289, !dbg !13636

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13637
  %250 = and i32 %249, 33554432, !dbg !13637
  %251 = icmp eq i32 %250, 0, !dbg !13637
  br i1 %251, label %256, label %252, !dbg !13639

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #27, !dbg !13640
  %254 = sub i32 %253, %247, !dbg !13643
  %255 = icmp ugt i32 %254, 2, !dbg !13644
  br i1 %255, label %337, label %248, !dbg !13645, !llvm.loop !13646

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13648
  %258 = load i32, i32* %257, align 4, !dbg !13648
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13648
  %260 = load i32, i32* %259, align 4, !dbg !13648
  %261 = or i32 %260, %258, !dbg !13648
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13648
  %263 = load i32, i32* %262, align 4, !dbg !13648
  %264 = shl i32 %263, 6, !dbg !13648
  %265 = or i32 %261, %264, !dbg !13648
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13648
  %267 = load i32, i32* %266, align 4, !dbg !13648
  %268 = shl i32 %267, 15, !dbg !13648
  %269 = add i32 %268, -65536, !dbg !13648
  %270 = and i32 %269, -65536, !dbg !13648
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13648
  %272 = load i32, i32* %271, align 4, !dbg !13648
  %273 = shl i32 %272, 24, !dbg !13648
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13648
  %275 = load i32, i32* %274, align 4, !dbg !13648
  %276 = shl i32 %275, 28, !dbg !13648
  %277 = or i32 %265, %273, !dbg !13648
  %278 = or i32 %277, %270, !dbg !13648
  %279 = or i32 %278, %276, !dbg !13648
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13648
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13649
  %280 = tail call i32 @HAL_GetTick() #27, !dbg !13650
  call void @llvm.dbg.value(metadata i32 %280, metadata !13365, metadata !DIExpression()), !dbg !13375
  br label %281, !dbg !13651

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13652
  %283 = and i32 %282, 33554432, !dbg !13653
  %284 = icmp eq i32 %283, 0, !dbg !13653
  br i1 %284, label %285, label %336, !dbg !13651

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #27, !dbg !13654
  %287 = sub i32 %286, %280, !dbg !13657
  %288 = icmp ugt i32 %287, 2, !dbg !13658
  br i1 %288, label %337, label %281, !dbg !13659, !llvm.loop !13660

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13662
  %291 = and i32 %290, 33554432, !dbg !13662
  %292 = icmp eq i32 %291, 0, !dbg !13662
  br i1 %292, label %336, label %293, !dbg !13664

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #27, !dbg !13665
  %295 = sub i32 %294, %247, !dbg !13668
  %296 = icmp ugt i32 %295, 2, !dbg !13669
  br i1 %296, label %337, label %289, !dbg !13670, !llvm.loop !13671

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !13673
  br i1 %298, label %337, label %299, !dbg !13676

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13677
  call void @llvm.dbg.value(metadata i32 %300, metadata !13366, metadata !DIExpression()), !dbg !13375
  %301 = and i32 %300, 4194304, !dbg !13679
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13681
  %303 = load i32, i32* %302, align 4, !dbg !13681
  %304 = icmp eq i32 %301, %303, !dbg !13682
  br i1 %304, label %305, label %337, !dbg !13683

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !13684
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13685
  %308 = load i32, i32* %307, align 4, !dbg !13685
  %309 = icmp eq i32 %306, %308, !dbg !13686
  br i1 %309, label %310, label %337, !dbg !13687

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !13688
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13689
  %313 = load i32, i32* %312, align 4, !dbg !13689
  %314 = shl i32 %313, 6, !dbg !13690
  %315 = icmp eq i32 %311, %314, !dbg !13691
  br i1 %315, label %316, label %337, !dbg !13692

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !13693
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13694
  %319 = load i32, i32* %318, align 4, !dbg !13694
  %320 = shl i32 %319, 15, !dbg !13695
  %321 = add i32 %320, -65536, !dbg !13695
  %322 = and i32 %321, -65536, !dbg !13695
  %323 = icmp eq i32 %317, %322, !dbg !13696
  br i1 %323, label %324, label %337, !dbg !13697

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !13698
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13699
  %327 = load i32, i32* %326, align 4, !dbg !13699
  %328 = shl i32 %327, 24, !dbg !13700
  %329 = icmp eq i32 %325, %328, !dbg !13701
  br i1 %329, label %330, label %337, !dbg !13702

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !13703
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13704
  %333 = load i32, i32* %332, align 4, !dbg !13704
  %334 = shl i32 %333, 28, !dbg !13705
  %335 = icmp eq i32 %331, %334, !dbg !13706
  br i1 %335, label %336, label %337, !dbg !13707

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !13708

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !13375
  ret i32 %338, !dbg !13709
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13710 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13714, metadata !DIExpression()), !dbg !13715
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13716
  store i32 15, i32* %2, align 4, !dbg !13717
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13718
  %4 = and i32 %3, 262144, !dbg !13720
  %5 = icmp eq i32 %4, 0, !dbg !13721
  br i1 %5, label %8, label %6, !dbg !13722

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13723
  store i32 327680, i32* %7, align 4, !dbg !13725
  br label %15, !dbg !13726

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13727
  %10 = and i32 %9, 65536, !dbg !13729
  %11 = icmp eq i32 %10, 0, !dbg !13730
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13731
  br i1 %11, label %14, label %13, !dbg !13732

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13733
  br label %15, !dbg !13735

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13736
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13738
  %17 = and i32 %16, 1, !dbg !13740
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13741
  store i32 %17, i32* %18, align 4, !dbg !13743
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13744
  %20 = lshr i32 %19, 3, !dbg !13745
  %21 = and i32 %20, 31, !dbg !13745
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13746
  store i32 %21, i32* %22, align 4, !dbg !13747
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13748
  %24 = and i32 %23, 4, !dbg !13750
  %25 = icmp eq i32 %24, 0, !dbg !13751
  br i1 %25, label %28, label %26, !dbg !13752

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13753
  store i32 5, i32* %27, align 4, !dbg !13755
  br label %35, !dbg !13756

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13757
  %30 = and i32 %29, 1, !dbg !13759
  %31 = icmp eq i32 %30, 0, !dbg !13760
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13761
  br i1 %31, label %34, label %33, !dbg !13762

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13763
  br label %35, !dbg !13765

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13766
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13768
  %37 = and i32 %36, 1, !dbg !13770
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13771
  store i32 %37, i32* %38, align 4, !dbg !13773
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13774
  %40 = and i32 %39, 16777216, !dbg !13776
  %41 = icmp eq i32 %40, 0, !dbg !13777
  %42 = select i1 %41, i32 1, i32 2, !dbg !13778
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13779
  store i32 %42, i32* %43, align 4, !dbg !13781
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13782
  %45 = and i32 %44, 4194304, !dbg !13783
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13784
  store i32 %45, i32* %46, align 4, !dbg !13785
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13786
  %48 = and i32 %47, 63, !dbg !13787
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13788
  store i32 %48, i32* %49, align 4, !dbg !13789
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13790
  %51 = lshr i32 %50, 6, !dbg !13791
  %52 = and i32 %51, 511, !dbg !13791
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13792
  store i32 %52, i32* %53, align 4, !dbg !13793
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13794
  %55 = shl i32 %54, 1, !dbg !13795
  %56 = and i32 %55, 393216, !dbg !13795
  %57 = add nuw nsw i32 %56, 131072, !dbg !13795
  %58 = lshr exact i32 %57, 16, !dbg !13796
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13797
  store i32 %58, i32* %59, align 4, !dbg !13798
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13799
  %61 = lshr i32 %60, 24, !dbg !13800
  %62 = and i32 %61, 15, !dbg !13800
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13801
  store i32 %62, i32* %63, align 4, !dbg !13802
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13803
  %65 = lshr i32 %64, 28, !dbg !13804
  %66 = and i32 %65, 7, !dbg !13804
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13805
  store i32 %66, i32* %67, align 4, !dbg !13806
  ret void, !dbg !13807
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #18 !dbg !13808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13811, metadata !DIExpression()), !dbg !13812
  tail call fastcc void @LL_InitTick(i32 noundef %0) #28, !dbg !13813
  ret void, !dbg !13814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #18 !dbg !13815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13818, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.value(metadata i32 1000, metadata !13819, metadata !DIExpression()), !dbg !13820
  %2 = udiv i32 %0, 1000, !dbg !13821
  %3 = add nsw i32 %2, -1, !dbg !13822
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13823
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13824
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13825
  ret void, !dbg !13826
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !13827 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13829, metadata !DIExpression()), !dbg !13831
  %3 = bitcast i32* %2 to i8*, !dbg !13832
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13832
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13830, metadata !DIExpression()), !dbg !13833
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13834
  store volatile i32 %4, i32* %2, align 4, !dbg !13833
  %5 = load volatile i32, i32* %2, align 4, !dbg !13835
  %6 = icmp eq i32 %0, -1, !dbg !13836
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13829, metadata !DIExpression()), !dbg !13831
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13831
  call void @llvm.dbg.value(metadata i32 %8, metadata !13829, metadata !DIExpression()), !dbg !13831
  br label %9, !dbg !13838

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13829, metadata !DIExpression()), !dbg !13831
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13839
  call void @llvm.dbg.value(metadata i32 undef, metadata !13829, metadata !DIExpression()), !dbg !13831
  %12 = shl i32 %11, 15, !dbg !13831
  %13 = ashr i32 %12, 31, !dbg !13831
  %14 = add i32 %13, %10, !dbg !13831
  call void @llvm.dbg.value(metadata i32 %14, metadata !13829, metadata !DIExpression()), !dbg !13831
  %15 = icmp eq i32 %14, 0, !dbg !13838
  br i1 %15, label %16, label %9, !dbg !13838

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13842
  ret void, !dbg !13842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #12 !dbg !13843 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13845, metadata !DIExpression()), !dbg !13846
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13847
  ret void, !dbg !13848
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #18 !dbg !13849 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13854, metadata !DIExpression()), !dbg !13859
  call void @llvm.dbg.value(metadata i32 0, metadata !13857, metadata !DIExpression()), !dbg !13859
  call void @llvm.dbg.value(metadata i32 0, metadata !13858, metadata !DIExpression()), !dbg !13859
  %2 = icmp eq i32 %0, 0, !dbg !13860
  br i1 %2, label %72, label %3, !dbg !13862

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13863
  %5 = icmp eq i32 %4, 49152, !dbg !13866
  br i1 %5, label %6, label %21, !dbg !13867

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13868
  %8 = select i1 %7, i32 0, i32 5, !dbg !13871
  call void @llvm.dbg.value(metadata i32 %8, metadata !13857, metadata !DIExpression()), !dbg !13859
  %9 = add i32 %0, -120000001, !dbg !13872
  %10 = icmp ult i32 %9, 30000000, !dbg !13872
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13872
  call void @llvm.dbg.value(metadata i32 %11, metadata !13857, metadata !DIExpression()), !dbg !13859
  %12 = icmp ult i32 %9, -30000000, !dbg !13874
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13874
  call void @llvm.dbg.value(metadata i32 %13, metadata !13857, metadata !DIExpression()), !dbg !13859
  %14 = icmp ugt i32 %0, 60000000, !dbg !13876
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13878
  br i1 %16, label %21, label %17, !dbg !13878

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13879
  %19 = and i1 %18, %15, !dbg !13882
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13882
  br label %21, !dbg !13882

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13859
  call void @llvm.dbg.value(metadata i32 %22, metadata !13857, metadata !DIExpression()), !dbg !13859
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13883
  %24 = icmp eq i32 %23, 32768, !dbg !13885
  br i1 %24, label %25, label %45, !dbg !13886

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !13887
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13890
  %29 = select i1 %28, i32 5, i32 %22, !dbg !13890
  call void @llvm.dbg.value(metadata i32 %29, metadata !13857, metadata !DIExpression()), !dbg !13859
  %30 = icmp ugt i32 %0, 12000000, !dbg !13891
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13893
  %33 = select i1 %32, i32 4, i32 %29, !dbg !13893
  call void @llvm.dbg.value(metadata i32 %33, metadata !13857, metadata !DIExpression()), !dbg !13859
  %34 = icmp ugt i32 %0, 90000000, !dbg !13894
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13896
  %37 = select i1 %36, i32 3, i32 %33, !dbg !13896
  call void @llvm.dbg.value(metadata i32 %37, metadata !13857, metadata !DIExpression()), !dbg !13859
  %38 = icmp ugt i32 %0, 60000000, !dbg !13897
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !13899
  br i1 %40, label %45, label %41, !dbg !13899

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !13900
  %43 = select i1 %42, i1 %39, i1 false, !dbg !13903
  %44 = select i1 %43, i32 1, i32 %37, !dbg !13903
  br label %45, !dbg !13903

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !13904
  call void @llvm.dbg.value(metadata i32 %46, metadata !13857, metadata !DIExpression()), !dbg !13859
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13905
  %48 = icmp eq i32 %47, 16384, !dbg !13907
  br i1 %48, label %49, label %61, !dbg !13908

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !13909
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !13912
  %53 = select i1 %52, i32 3, i32 %46, !dbg !13912
  call void @llvm.dbg.value(metadata i32 %53, metadata !13857, metadata !DIExpression()), !dbg !13859
  %54 = icmp ugt i32 %0, 60000000, !dbg !13913
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !13915
  br i1 %56, label %61, label %57, !dbg !13915

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !13916
  %59 = select i1 %58, i1 %55, i1 false, !dbg !13919
  %60 = select i1 %59, i32 1, i32 %53, !dbg !13919
  br label %61, !dbg !13919

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !13904
  call void @llvm.dbg.value(metadata i32 %62, metadata !13857, metadata !DIExpression()), !dbg !13859
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #28, !dbg !13920
  call void @llvm.dbg.value(metadata i32 2, metadata !13855, metadata !DIExpression()), !dbg !13859
  br label %63, !dbg !13921

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !13904
  call void @llvm.dbg.value(metadata i32 %64, metadata !13855, metadata !DIExpression()), !dbg !13859
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #28, !dbg !13922
  call void @llvm.dbg.value(metadata i32 %65, metadata !13856, metadata !DIExpression()), !dbg !13859
  %66 = add nsw i32 %64, -1, !dbg !13924
  call void @llvm.dbg.value(metadata i32 %66, metadata !13855, metadata !DIExpression()), !dbg !13859
  %67 = icmp ne i32 %65, %62, !dbg !13925
  %68 = icmp ne i32 %66, 0, !dbg !13926
  %69 = select i1 %67, i1 %68, i1 false, !dbg !13926
  br i1 %69, label %63, label %70, !dbg !13927, !llvm.loop !13928

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !13930
  call void @llvm.dbg.value(metadata i32 %73, metadata !13858, metadata !DIExpression()), !dbg !13859
  ret i32 %73, !dbg !13931
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #7 !dbg !13932 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13934
  %2 = and i32 %1, 49152, !dbg !13934
  ret i32 %2, !dbg !13935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #18 !dbg !13936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13938, metadata !DIExpression()), !dbg !13939
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13940
  %3 = and i32 %2, -16, !dbg !13940
  %4 = or i32 %3, %0, !dbg !13940
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13940
  ret void, !dbg !13941
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #7 !dbg !13942 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13943
  %2 = and i32 %1, 15, !dbg !13943
  ret i32 %2, !dbg !13944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !13945 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13963, metadata !DIExpression()), !dbg !13967
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13964, metadata !DIExpression()), !dbg !13967
  call void @llvm.dbg.value(metadata i32 0, metadata !13965, metadata !DIExpression()), !dbg !13967
  call void @llvm.dbg.value(metadata i32 0, metadata !13966, metadata !DIExpression()), !dbg !13967
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #28, !dbg !13968
  %4 = icmp eq i32 %3, 0, !dbg !13970
  br i1 %4, label %5, label %21, !dbg !13971

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #28, !dbg !13972
  call void @llvm.dbg.value(metadata i32 %6, metadata !13966, metadata !DIExpression()), !dbg !13967
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.211() #28, !dbg !13974
  %8 = icmp eq i32 %7, 1, !dbg !13976
  br i1 %8, label %13, label %9, !dbg !13977

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.212() #28, !dbg !13978
  br label %10, !dbg !13980

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.211() #28, !dbg !13981
  %12 = icmp eq i32 %11, 1, !dbg !13982
  br i1 %12, label %13, label %10, !dbg !13980, !llvm.loop !13983

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13985
  %15 = load i32, i32* %14, align 4, !dbg !13985
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13986
  %17 = load i32, i32* %16, align 4, !dbg !13986
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13987
  %19 = load i32, i32* %18, align 4, !dbg !13987
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.213(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #28, !dbg !13988
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #28, !dbg !13989
  call void @llvm.dbg.value(metadata i32 %20, metadata !13965, metadata !DIExpression()), !dbg !13967
  br label %21, !dbg !13990

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13991
  call void @llvm.dbg.value(metadata i32 %22, metadata !13965, metadata !DIExpression()), !dbg !13967
  ret i32 %22, !dbg !13992
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #7 !dbg !13993 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13997, metadata !DIExpression()), !dbg !13998
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.215() #28, !dbg !13999
  %2 = icmp ne i32 %1, 0, !dbg !14001
  call void @llvm.dbg.value(metadata i1 %2, metadata !13997, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13998
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #28, !dbg !14002
  %4 = icmp ne i32 %3, 0, !dbg !14004
  call void @llvm.dbg.value(metadata i1 undef, metadata !13997, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13998
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #28, !dbg !14005
  %6 = icmp ne i32 %5, 0, !dbg !14007
  %7 = select i1 %6, i1 true, i1 %4, !dbg !14008
  %8 = select i1 %7, i1 true, i1 %2, !dbg !14008
  %9 = zext i1 %8 to i32, !dbg !14008
  call void @llvm.dbg.value(metadata i32 %9, metadata !13997, metadata !DIExpression()), !dbg !13998
  ret i32 %9, !dbg !14009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !14010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14014, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14015, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 0, metadata !14016, metadata !DIExpression()), !dbg !14017
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14018
  %4 = load i32, i32* %3, align 4, !dbg !14018
  %5 = and i32 %4, 63, !dbg !14019
  %6 = udiv i32 %0, %5, !dbg !14020
  call void @llvm.dbg.value(metadata i32 %6, metadata !14016, metadata !DIExpression()), !dbg !14017
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14021
  %8 = load i32, i32* %7, align 4, !dbg !14021
  %9 = and i32 %8, 511, !dbg !14022
  %10 = mul i32 %9, %6, !dbg !14023
  call void @llvm.dbg.value(metadata i32 %10, metadata !14016, metadata !DIExpression()), !dbg !14017
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14024
  %12 = load i32, i32* %11, align 4, !dbg !14024
  %13 = lshr i32 %12, 15, !dbg !14025
  %14 = and i32 %13, 131070, !dbg !14025
  %15 = add nuw nsw i32 %14, 2, !dbg !14025
  %16 = udiv i32 %10, %15, !dbg !14026
  call void @llvm.dbg.value(metadata i32 %16, metadata !14016, metadata !DIExpression()), !dbg !14017
  ret i32 %16, !dbg !14027
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.211() unnamed_addr #7 !dbg !14028 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14029
  %2 = lshr i32 %1, 1, !dbg !14030
  %3 = and i32 %2, 1, !dbg !14030
  ret i32 %3, !dbg !14031
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.212() unnamed_addr #18 !dbg !14032 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14033
  %2 = or i32 %1, 1, !dbg !14033
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14033
  ret void, !dbg !14034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.213(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #18 !dbg !14035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14037, metadata !DIExpression()), !dbg !14041
  call void @llvm.dbg.value(metadata i32 %1, metadata !14038, metadata !DIExpression()), !dbg !14041
  call void @llvm.dbg.value(metadata i32 %2, metadata !14039, metadata !DIExpression()), !dbg !14041
  call void @llvm.dbg.value(metadata i32 %3, metadata !14040, metadata !DIExpression()), !dbg !14041
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14042
  %6 = and i32 %5, -4227072, !dbg !14042
  %7 = or i32 %1, %0, !dbg !14042
  %8 = shl i32 %2, 6, !dbg !14042
  %9 = or i32 %7, %8, !dbg !14042
  %10 = or i32 %9, %6, !dbg !14042
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14042
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14043
  %12 = and i32 %11, -196609, !dbg !14043
  %13 = or i32 %12, %3, !dbg !14043
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14043
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14044
  %15 = and i32 %14, -1879048193, !dbg !14044
  %16 = or i32 %15, %3, !dbg !14044
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14044
  ret void, !dbg !14045
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #18 !dbg !14046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14050, metadata !DIExpression()), !dbg !14054
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14051, metadata !DIExpression()), !dbg !14054
  call void @llvm.dbg.value(metadata i32 0, metadata !14052, metadata !DIExpression()), !dbg !14054
  call void @llvm.dbg.value(metadata i32 0, metadata !14053, metadata !DIExpression()), !dbg !14054
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14055
  %4 = load i32, i32* %3, align 4, !dbg !14055
  %5 = lshr i32 %4, 4, !dbg !14055
  %6 = and i32 %5, 15, !dbg !14055
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !14055
  %8 = load i8, i8* %7, align 1, !dbg !14055
  %9 = zext i8 %8 to i32, !dbg !14055
  %10 = lshr i32 %0, %9, !dbg !14055
  call void @llvm.dbg.value(metadata i32 %10, metadata !14053, metadata !DIExpression()), !dbg !14054
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !14056
  %12 = icmp ult i32 %11, %10, !dbg !14058
  br i1 %12, label %13, label %16, !dbg !14059

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #28, !dbg !14060
  call void @llvm.dbg.value(metadata i32 %14, metadata !14052, metadata !DIExpression()), !dbg !14054
  %15 = icmp eq i32 %14, 0, !dbg !14062
  br i1 %15, label %16, label %30, !dbg !14064

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.214() #28, !dbg !14065
  br label %17, !dbg !14067

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.215() #28, !dbg !14068
  %19 = icmp eq i32 %18, 1, !dbg !14069
  br i1 %19, label %20, label %17, !dbg !14067, !llvm.loop !14070

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !14072
  tail call fastcc void @LL_RCC_SetAHBPrescaler.216(i32 noundef %21) #28, !dbg !14073
  tail call fastcc void @LL_RCC_SetSysClkSource.217() #28, !dbg !14074
  br label %22, !dbg !14075

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.218() #28, !dbg !14076
  %24 = icmp eq i32 %23, 8, !dbg !14077
  br i1 %24, label %25, label %22, !dbg !14075, !llvm.loop !14078

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14080
  %27 = load i32, i32* %26, align 4, !dbg !14080
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.219(i32 noundef %27) #28, !dbg !14081
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14082
  %29 = load i32, i32* %28, align 4, !dbg !14082
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.220(i32 noundef %29) #28, !dbg !14083
  br label %30, !dbg !14084

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !14085
  %33 = icmp ugt i32 %32, %10, !dbg !14087
  br i1 %33, label %34, label %36, !dbg !14088

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #28, !dbg !14089
  call void @llvm.dbg.value(metadata i32 %35, metadata !14052, metadata !DIExpression()), !dbg !14054
  br label %36, !dbg !14091

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !14054
  call void @llvm.dbg.value(metadata i32 %37, metadata !14052, metadata !DIExpression()), !dbg !14054
  %38 = icmp eq i32 %37, 0, !dbg !14092
  br i1 %38, label %39, label %40, !dbg !14094

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #28, !dbg !14095
  br label %40, !dbg !14097

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !14098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.214() unnamed_addr #18 !dbg !14099 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14100
  %2 = or i32 %1, 16777216, !dbg !14100
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14100
  ret void, !dbg !14101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.215() unnamed_addr #7 !dbg !14102 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14103
  %2 = lshr i32 %1, 25, !dbg !14104
  %3 = and i32 %2, 1, !dbg !14104
  ret i32 %3, !dbg !14105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.216(i32 noundef %0) unnamed_addr #18 !dbg !14106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14108, metadata !DIExpression()), !dbg !14109
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14110
  %3 = and i32 %2, -241, !dbg !14110
  %4 = or i32 %3, %0, !dbg !14110
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14110
  ret void, !dbg !14111
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.217() unnamed_addr #18 !dbg !14112 {
  call void @llvm.dbg.value(metadata i32 2, metadata !14114, metadata !DIExpression()), !dbg !14115
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14116
  %2 = and i32 %1, -4, !dbg !14116
  %3 = or i32 %2, 2, !dbg !14116
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14116
  ret void, !dbg !14117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.218() unnamed_addr #7 !dbg !14118 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14119
  %2 = and i32 %1, 12, !dbg !14119
  ret i32 %2, !dbg !14120
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.219(i32 noundef %0) unnamed_addr #18 !dbg !14121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14123, metadata !DIExpression()), !dbg !14124
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14125
  %3 = and i32 %2, -7169, !dbg !14125
  %4 = or i32 %3, %0, !dbg !14125
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14125
  ret void, !dbg !14126
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.220(i32 noundef %0) unnamed_addr #18 !dbg !14127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14129, metadata !DIExpression()), !dbg !14130
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14131
  %3 = and i32 %2, -57345, !dbg !14131
  %4 = or i32 %3, %0, !dbg !14131
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14131
  ret void, !dbg !14132
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #7 !dbg !14133 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14134
  %2 = lshr i32 %1, 29, !dbg !14135
  %3 = and i32 %2, 1, !dbg !14135
  ret i32 %3, !dbg !14136
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #7 !dbg !14137 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14138
  %2 = lshr i32 %1, 27, !dbg !14139
  %3 = and i32 %2, 1, !dbg !14139
  ret i32 %3, !dbg !14140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #18 !dbg !14141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14145, metadata !DIExpression()), !dbg !14151
  call void @llvm.dbg.value(metadata i32 %1, metadata !14146, metadata !DIExpression()), !dbg !14151
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !14147, metadata !DIExpression()), !dbg !14151
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14148, metadata !DIExpression()), !dbg !14151
  call void @llvm.dbg.value(metadata i32 0, metadata !14149, metadata !DIExpression()), !dbg !14151
  call void @llvm.dbg.value(metadata i32 0, metadata !14150, metadata !DIExpression()), !dbg !14151
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #28, !dbg !14152
  %6 = icmp eq i32 %5, 0, !dbg !14154
  br i1 %6, label %7, label %27, !dbg !14155

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #28, !dbg !14156
  call void @llvm.dbg.value(metadata i32 %8, metadata !14150, metadata !DIExpression()), !dbg !14151
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.221() #28, !dbg !14158
  %10 = icmp eq i32 %9, 1, !dbg !14160
  br i1 %10, label %19, label %11, !dbg !14161

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !14162
  br i1 %12, label %13, label %14, !dbg !14165

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #28, !dbg !14166
  br label %15, !dbg !14168

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.222() #28, !dbg !14169
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.223() #28, !dbg !14171
  br label %16, !dbg !14172

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.221() #28, !dbg !14173
  %18 = icmp eq i32 %17, 1, !dbg !14174
  br i1 %18, label %19, label %16, !dbg !14172, !llvm.loop !14175

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !14177
  %21 = load i32, i32* %20, align 4, !dbg !14177
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !14178
  %23 = load i32, i32* %22, align 4, !dbg !14178
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !14179
  %25 = load i32, i32* %24, align 4, !dbg !14179
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.213(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #28, !dbg !14180
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #28, !dbg !14181
  call void @llvm.dbg.value(metadata i32 %26, metadata !14149, metadata !DIExpression()), !dbg !14151
  br label %27, !dbg !14182

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !14183
  call void @llvm.dbg.value(metadata i32 %28, metadata !14149, metadata !DIExpression()), !dbg !14151
  ret i32 %28, !dbg !14184
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.221() unnamed_addr #7 !dbg !14185 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14186
  %2 = lshr i32 %1, 17, !dbg !14187
  %3 = and i32 %2, 1, !dbg !14187
  ret i32 %3, !dbg !14188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #18 !dbg !14189 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14190
  %2 = or i32 %1, 262144, !dbg !14190
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14190
  ret void, !dbg !14191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.222() unnamed_addr #18 !dbg !14192 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14193
  %2 = and i32 %1, -262145, !dbg !14193
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14193
  ret void, !dbg !14194
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.223() unnamed_addr #18 !dbg !14195 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14196
  %2 = or i32 %1, 65536, !dbg !14196
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14196
  ret void, !dbg !14197
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !14198 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14201, metadata !DIExpression()), !dbg !14217
  call void @llvm.dbg.value(metadata i32 undef, metadata !14201, metadata !DIExpression()), !dbg !14217
  call void @llvm.dbg.value(metadata i32 undef, metadata !14201, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14217
  ret void, !dbg !14218
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14219 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14223, metadata !DIExpression()), !dbg !14225
  %2 = icmp eq i8* %0, null, !dbg !14226
  br i1 %2, label %29, label %3, !dbg !14228

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14229
  %5 = icmp eq i8 %4, 0, !dbg !14230
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14231
  br i1 %6, label %29, label %8, !dbg !14231

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14224, metadata !DIExpression()), !dbg !14225
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14232

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14224, metadata !DIExpression()), !dbg !14225
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #28, !dbg !14234
  br i1 %10, label %11, label %15, !dbg !14239

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14240
  %13 = load i8*, i8** %12, align 4, !dbg !14240
  %14 = icmp eq i8* %13, %0, !dbg !14241
  br i1 %14, label %29, label %15, !dbg !14242

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14243
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14224, metadata !DIExpression()), !dbg !14225
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14244
  br i1 %17, label %7, label %8, !dbg !14245, !llvm.loop !14246

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14224, metadata !DIExpression()), !dbg !14225
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #28, !dbg !14248
  br i1 %20, label %21, label %26, !dbg !14252

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14253
  %23 = load i8*, i8** %22, align 4, !dbg !14253
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !14254
  %25 = icmp eq i32 %24, 0, !dbg !14255
  br i1 %25, label %29, label %26, !dbg !14256

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14257
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14224, metadata !DIExpression()), !dbg !14225
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14258
  br i1 %28, label %29, label %18, !dbg !14232, !llvm.loop !14259

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14225
  ret %struct.device* %30, !dbg !14261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #13 !dbg !14262 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14266, metadata !DIExpression()), !dbg !14267
  %2 = icmp eq %struct.device* %0, null, !dbg !14268
  br i1 %2, label %14, label %3, !dbg !14270

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14271
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14271
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14272
  %7 = load i8, i8* %6, align 1, !dbg !14272
  %8 = and i8 %7, 1, !dbg !14272
  %9 = icmp eq i8 %8, 0, !dbg !14272
  br i1 %9, label %14, label %10, !dbg !14273

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14274
  %12 = load i8, i8* %11, align 1, !dbg !14274
  %13 = icmp eq i8 %12, 0, !dbg !14275
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14267
  ret i1 %15, !dbg !14276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #12 !dbg !14277 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14282, metadata !DIExpression()), !dbg !14283
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14284
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14286 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14294, metadata !DIExpression()), !dbg !14299
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14295, metadata !DIExpression()), !dbg !14299
  call void @llvm.dbg.value(metadata i8* %2, metadata !14296, metadata !DIExpression()), !dbg !14299
  %5 = bitcast i32* %4 to i8*, !dbg !14300
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !14300
  call void @llvm.dbg.value(metadata i32 0, metadata !14297, metadata !DIExpression()), !dbg !14299
  store i32 0, i32* %4, align 4, !dbg !14301
  call void @llvm.dbg.value(metadata i32* %4, metadata !14297, metadata !DIExpression(DW_OP_deref)), !dbg !14299
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #28, !dbg !14302
  call void @llvm.dbg.value(metadata i16* %6, metadata !14298, metadata !DIExpression()), !dbg !14299
  %7 = load i32, i32* %4, align 4, !dbg !14303
  call void @llvm.dbg.value(metadata i32 %7, metadata !14297, metadata !DIExpression()), !dbg !14299
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #28, !dbg !14304
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !14305
  ret i32 %8, !dbg !14306
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !14307 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14311, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.value(metadata i32* %1, metadata !14312, metadata !DIExpression()), !dbg !14317
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14318
  %4 = load i16*, i16** %3, align 4, !dbg !14318
  call void @llvm.dbg.value(metadata i16* %4, metadata !14313, metadata !DIExpression()), !dbg !14317
  %5 = icmp eq i16* %4, null, !dbg !14319
  br i1 %5, label %14, label %6, !dbg !14320

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14321
  call void @llvm.dbg.value(metadata i32 %7, metadata !14314, metadata !DIExpression()), !dbg !14321
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14322
  %9 = load i16, i16* %8, align 2, !dbg !14322
  %10 = add i16 %9, -32767, !dbg !14323
  %11 = icmp ult i16 %10, 2, !dbg !14323
  %12 = add i32 %7, 1, !dbg !14324
  call void @llvm.dbg.value(metadata i32 %12, metadata !14314, metadata !DIExpression()), !dbg !14321
  br i1 %11, label %13, label %6, !dbg !14323, !llvm.loop !14326

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14329
  br label %14, !dbg !14330

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14332 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14336, metadata !DIExpression()), !dbg !14347
  call void @llvm.dbg.value(metadata i32 %1, metadata !14337, metadata !DIExpression()), !dbg !14347
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14338, metadata !DIExpression()), !dbg !14347
  call void @llvm.dbg.value(metadata i8* %3, metadata !14339, metadata !DIExpression()), !dbg !14347
  call void @llvm.dbg.value(metadata i32 0, metadata !14340, metadata !DIExpression()), !dbg !14348
  %5 = icmp eq i32 %1, 0, !dbg !14349
  br i1 %5, label %16, label %8, !dbg !14350

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14340, metadata !DIExpression()), !dbg !14348
  %7 = icmp eq i32 %15, %1, !dbg !14349
  br i1 %7, label %16, label %8, !dbg !14350, !llvm.loop !14351

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14340, metadata !DIExpression()), !dbg !14348
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14353
  %11 = load i16, i16* %10, align 2, !dbg !14353
  call void @llvm.dbg.value(metadata i16 %11, metadata !14342, metadata !DIExpression()), !dbg !14354
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #28, !dbg !14355
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14345, metadata !DIExpression()), !dbg !14354
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !14356
  call void @llvm.dbg.value(metadata i32 %13, metadata !14346, metadata !DIExpression()), !dbg !14354
  %14 = icmp slt i32 %13, 0, !dbg !14357
  %15 = add nuw i32 %9, 1, !dbg !14359
  call void @llvm.dbg.value(metadata i32 %15, metadata !14340, metadata !DIExpression()), !dbg !14348
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !14361 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14365, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14366, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14367, metadata !DIExpression()), !dbg !14368
  %2 = sext i16 %0 to i32, !dbg !14369
  %3 = icmp slt i16 %0, 1, !dbg !14371
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14372
  %6 = add nsw i32 %2, -1, !dbg !14372
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14372
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14372
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14366, metadata !DIExpression()), !dbg !14368
  ret %struct.device* %8, !dbg !14373
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14374 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14376, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14377, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.value(metadata i8* %2, metadata !14378, metadata !DIExpression()), !dbg !14381
  %5 = bitcast i32* %4 to i8*, !dbg !14382
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !14382
  call void @llvm.dbg.value(metadata i32 0, metadata !14379, metadata !DIExpression()), !dbg !14381
  store i32 0, i32* %4, align 4, !dbg !14383
  call void @llvm.dbg.value(metadata i32* %4, metadata !14379, metadata !DIExpression(DW_OP_deref)), !dbg !14381
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #28, !dbg !14384
  call void @llvm.dbg.value(metadata i16* %6, metadata !14380, metadata !DIExpression()), !dbg !14381
  %7 = load i32, i32* %4, align 4, !dbg !14385
  call void @llvm.dbg.value(metadata i32 %7, metadata !14379, metadata !DIExpression()), !dbg !14381
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #28, !dbg !14386
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !14387
  ret i32 %8, !dbg !14388
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !14389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14391, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i32* %1, metadata !14392, metadata !DIExpression()), !dbg !14396
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14397
  %4 = load i16*, i16** %3, align 4, !dbg !14397
  call void @llvm.dbg.value(metadata i16* %4, metadata !14393, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i32 0, metadata !14394, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i32 0, metadata !14395, metadata !DIExpression()), !dbg !14396
  %5 = icmp eq i16* %4, null, !dbg !14398
  br i1 %5, label %22, label %6, !dbg !14400

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14394, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i16* %8, metadata !14393, metadata !DIExpression()), !dbg !14396
  %9 = load i16, i16* %8, align 2, !dbg !14401
  %10 = icmp eq i16 %9, -32768, !dbg !14405
  call void @llvm.dbg.value(metadata i32 undef, metadata !14394, metadata !DIExpression()), !dbg !14396
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14406
  call void @llvm.dbg.value(metadata i16* %11, metadata !14393, metadata !DIExpression()), !dbg !14396
  %12 = zext i1 %10 to i32, !dbg !14407
  %13 = add i32 %7, %12, !dbg !14407
  call void @llvm.dbg.value(metadata i32 %13, metadata !14394, metadata !DIExpression()), !dbg !14396
  %14 = icmp eq i32 %13, 2, !dbg !14408
  br i1 %14, label %15, label %6, !dbg !14409

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14396
  call void @llvm.dbg.value(metadata i32 %16, metadata !14395, metadata !DIExpression()), !dbg !14396
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14410
  %18 = load i16, i16* %17, align 2, !dbg !14410
  %19 = icmp eq i16 %18, 32767, !dbg !14411
  %20 = add i32 %16, 1, !dbg !14412
  call void @llvm.dbg.value(metadata i32 %20, metadata !14395, metadata !DIExpression()), !dbg !14396
  br i1 %19, label %21, label %15, !dbg !14414, !llvm.loop !14415

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14417
  br label %22, !dbg !14418

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14419
  call void @llvm.dbg.value(metadata i16* %23, metadata !14393, metadata !DIExpression()), !dbg !14396
  ret i16* %23, !dbg !14420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #13 !dbg !14421 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14424
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14425
  ret i32* %2, !dbg !14426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !14427 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14577, metadata !DIExpression()), !dbg !14580
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14578, metadata !DIExpression()), !dbg !14580
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14579, metadata !DIExpression()), !dbg !14580
  ret void, !dbg !14581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14586, metadata !DIExpression()), !dbg !14588
  call void @llvm.dbg.value(metadata i32 %1, metadata !14587, metadata !DIExpression()), !dbg !14588
  ret void, !dbg !14589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14590 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14594, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata i32 %1, metadata !14595, metadata !DIExpression()), !dbg !14596
  ret void, !dbg !14597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14602, metadata !DIExpression()), !dbg !14604
  call void @llvm.dbg.value(metadata i8* %1, metadata !14603, metadata !DIExpression()), !dbg !14604
  ret i32 -134, !dbg !14605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14610, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata i8* %1, metadata !14611, metadata !DIExpression()), !dbg !14612
  ret i32 -134, !dbg !14613
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !14614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14617, metadata !DIExpression()), !dbg !14618
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14619, !srcloc !14625
  call void @llvm.dbg.value(metadata i32 undef, metadata !14622, metadata !DIExpression()) #26, !dbg !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #26, !dbg !14626
  br label %3, !dbg !14627

3:                                                ; preds = %3, %1
  br label %3, !dbg !14628, !llvm.loop !14631
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14638, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14639, metadata !DIExpression()), !dbg !14640
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.228, i32 0, i32 0), i32 noundef 69) #27, !dbg !14641
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !14646
  unreachable, !dbg !14646
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !14647 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14649, metadata !DIExpression()), !dbg !14650
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !14651
  unreachable, !dbg !14651
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14654, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14655, metadata !DIExpression()), !dbg !14658
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14659, !srcloc !14625
  call void @llvm.dbg.value(metadata i32 undef, metadata !14622, metadata !DIExpression()) #26, !dbg !14661
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()) #26, !dbg !14661
  call void @llvm.dbg.value(metadata i32 undef, metadata !14656, metadata !DIExpression()), !dbg !14658
  %4 = tail call fastcc %struct.k_thread* @k_current_get.231() #29, !dbg !14662
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14657, metadata !DIExpression()), !dbg !14658
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #28, !dbg !14663
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.232, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !14663
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14668
  br i1 %6, label %13, label %7, !dbg !14670

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14671, metadata !DIExpression()), !dbg !14676
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14678
  %9 = load i32, i32* %8, align 4, !dbg !14678
  %10 = and i32 %9, 511, !dbg !14679
  %11 = icmp eq i32 %10, 0, !dbg !14680
  br i1 %11, label %13, label %12, !dbg !14681

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.233, i32 0, i32 0), i32 noundef 69) #27, !dbg !14682
  br label %13, !dbg !14688

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #28, !dbg !14689
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.234, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !14689
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #28, !dbg !14694
  %15 = icmp eq i32 %0, 4, !dbg !14695
  br i1 %15, label %16, label %17, !dbg !14700

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.237, i32 0, i32 0), i32 noundef 148) #27, !dbg !14701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.238, i32 0, i32 0)) #27, !dbg !14701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.237, i32 0, i32 0), i32 noundef 148) #27, !dbg !14701
  unreachable, !dbg !14701

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14659
  call void @llvm.dbg.value(metadata i32 %18, metadata !14622, metadata !DIExpression()) #26, !dbg !14661
  call void @llvm.dbg.value(metadata i32 %18, metadata !14656, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata i32 undef, metadata !14703, metadata !DIExpression()) #26, !dbg !14706
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !14708, !srcloc !14709
  tail call fastcc void @k_thread_abort.239(%struct.k_thread* noundef %4) #28, !dbg !14710
  ret void, !dbg !14713
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.231() unnamed_addr #6 !dbg !14714 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.247() #29, !dbg !14718
  ret %struct.k_thread* %1, !dbg !14719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !14720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14724, metadata !DIExpression()), !dbg !14725
  %2 = icmp ult i32 %0, 5, !dbg !14726
  br i1 %2, label %3, label %6, !dbg !14726

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14726
  %5 = load i8*, i8** %4, align 4, !dbg !14726
  br label %6, !dbg !14726

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.241, i32 0, i32 0), %1 ], !dbg !14727
  ret i8* %7, !dbg !14729
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14730 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14734, metadata !DIExpression()), !dbg !14736
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14737
  br i1 %2, label %9, label %3, !dbg !14738

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !14739
  call void @llvm.dbg.value(metadata i8* %4, metadata !14735, metadata !DIExpression()), !dbg !14736
  %5 = icmp eq i8* %4, null, !dbg !14740
  br i1 %5, label %9, label %6, !dbg !14742

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14743
  %8 = icmp eq i8 %7, 0, !dbg !14744
  br i1 %8, label %9, label %10, !dbg !14745

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.240, i32 0, i32 0), metadata !14735, metadata !DIExpression()), !dbg !14736
  br label %10, !dbg !14746

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.240, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14736
  call void @llvm.dbg.value(metadata i8* %11, metadata !14735, metadata !DIExpression()), !dbg !14736
  ret i8* %11, !dbg !14748
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.239(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14749 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14753, metadata !DIExpression()), !dbg !14754
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14755, !srcloc !14757
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !14758
  ret void, !dbg !14759
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.247() unnamed_addr #6 !dbg !14760 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14761, !srcloc !14763
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !14764
  ret %struct.k_thread* %1, !dbg !14765
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14766 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14770, metadata !DIExpression()), !dbg !14773
  call void @llvm.dbg.value(metadata i32 %1, metadata !14771, metadata !DIExpression()), !dbg !14773
  call void @llvm.dbg.value(metadata i32 %2, metadata !14772, metadata !DIExpression()), !dbg !14773
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !14774
  ret void, !dbg !14775
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14776 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14780, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.value(metadata i8* %1, metadata !14781, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.value(metadata i32 %2, metadata !14782, metadata !DIExpression()), !dbg !14783
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !14784
  ret void, !dbg !14785
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14786 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #28, !dbg !14787
  ret void, !dbg !14788
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14791, metadata !DIExpression()), !dbg !14792
  tail call fastcc void @init_idle_thread(i32 noundef %0) #28, !dbg !14793
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14794
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14795
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14796
  %4 = trunc i32 %0 to i8, !dbg !14797
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 6, !dbg !14798
  store i8 %4, i8* %5, align 4, !dbg !14799
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14800
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #28, !dbg !14801
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14802
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14803
  store i8* %8, i8** %9, align 4, !dbg !14804
  ret void, !dbg !14805
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14808, metadata !DIExpression()), !dbg !14814
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14815
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14809, metadata !DIExpression()), !dbg !14814
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14816
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14810, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.value(metadata i8* null, metadata !14813, metadata !DIExpression()), !dbg !14814
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14817
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14818
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !14819
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #28, !dbg !14820
  ret void, !dbg !14821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14822 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14826, metadata !DIExpression()), !dbg !14827
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14828
  ret i8* %2, !dbg !14829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !14830 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14835, metadata !DIExpression()), !dbg !14836
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14837
  %3 = load i8, i8* %2, align 1, !dbg !14838
  %4 = and i8 %3, -5, !dbg !14838
  store i8 %4, i8* %2, align 1, !dbg !14838
  ret void, !dbg !14839
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_early_boot_rand_get(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14840 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14842, metadata !DIExpression()), !dbg !14844
  call void @llvm.dbg.value(metadata i32 %1, metadata !14843, metadata !DIExpression()), !dbg !14844
  tail call fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) #28, !dbg !14845
  ret void, !dbg !14846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !14847 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14852, metadata !DIExpression()), !dbg !14854
  call void @llvm.dbg.value(metadata i32 %1, metadata !14853, metadata !DIExpression()), !dbg !14854
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14855, !srcloc !14857
  tail call void @z_impl_sys_rand_get(i8* noundef %0, i32 noundef %1) #27, !dbg !14858
  ret void, !dbg !14859
}

; Function Attrs: optsize
declare !dbg !14860 dso_local void @z_impl_sys_rand_get(i8* noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14861 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #28, !dbg !14864
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !14865
  %3 = ptrtoint i8* %2 to i32, !dbg !14874
  %4 = add i32 %3, 2048, !dbg !14875
  call void @llvm.dbg.value(metadata i32 %4, metadata !14869, metadata !DIExpression()) #26, !dbg !14876
  call void @llvm.dbg.value(metadata i32 %4, metadata !14877, metadata !DIExpression()) #26, !dbg !14880
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #26, !dbg !14882, !srcloc !14883
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14884
  %6 = or i32 %5, 512, !dbg !14884
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14884
  tail call fastcc void @__NVIC_SetPriority.256(i32 noundef -2, i32 noundef 255) #27, !dbg !14885
  tail call fastcc void @__NVIC_SetPriority.256(i32 noundef -5, i32 noundef 0) #27, !dbg !14888
  tail call fastcc void @__NVIC_SetPriority.256(i32 noundef -12, i32 noundef 0) #27, !dbg !14889
  tail call fastcc void @__NVIC_SetPriority.256(i32 noundef -11, i32 noundef 0) #27, !dbg !14890
  tail call fastcc void @__NVIC_SetPriority.256(i32 noundef -10, i32 noundef 0) #27, !dbg !14891
  tail call fastcc void @__NVIC_SetPriority.256(i32 noundef -4, i32 noundef 0) #27, !dbg !14892
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14893
  %8 = or i32 %7, 458752, !dbg !14893
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14893
  tail call void @z_arm_fault_init() #27, !dbg !14894
  tail call void @z_arm_cpu_idle_init() #27, !dbg !14895
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14896
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14899
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !14900
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !14901
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14902
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #26, !dbg !14902
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14863, metadata !DIExpression()), !dbg !14903
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #28, !dbg !14904
  call void @z_device_state_init() #27, !dbg !14905
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #28, !dbg !14906
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #28, !dbg !14907
  %11 = call fastcc i8* @prepare_multithreading() #28, !dbg !14908
  call fastcc void @switch_to_main_thread(i8* noundef %11) #32, !dbg !14909
  unreachable, !dbg !14909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2280, metadata !DIExpression()), !dbg !14910
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14911
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14911
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2281, metadata !DIExpression()), !dbg !14910
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2281, metadata !DIExpression()), !dbg !14910
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14912
  br i1 %7, label %8, label %35, !dbg !14913

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2281, metadata !DIExpression()), !dbg !14910
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14914
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14914
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2291, metadata !DIExpression()), !dbg !14915
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14916
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14916
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !14917
  call void @llvm.dbg.value(metadata i32 %14, metadata !2295, metadata !DIExpression()), !dbg !14915
  %15 = icmp eq %struct.device* %11, null, !dbg !14918
  br i1 %15, label %32, label %16, !dbg !14920

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14921
  br i1 %17, label %26, label %18, !dbg !14924

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14925
  call void @llvm.dbg.value(metadata i32 %19, metadata !2295, metadata !DIExpression()), !dbg !14915
  %20 = icmp ult i32 %19, 255, !dbg !14927
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14927
  call void @llvm.dbg.value(metadata i32 %21, metadata !2295, metadata !DIExpression()), !dbg !14915
  %22 = trunc i32 %21 to i8, !dbg !14928
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14929
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14929
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14930
  store i8 %22, i8* %25, align 1, !dbg !14931
  br label %26, !dbg !14932

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14933
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14933
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14934
  %30 = load i8, i8* %29, align 1, !dbg !14935
  %31 = or i8 %30, 1, !dbg !14935
  store i8 %31, i8* %29, align 1, !dbg !14935
  br label %32, !dbg !14936

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14937
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2281, metadata !DIExpression()), !dbg !14910
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14912
  br i1 %34, label %8, label %35, !dbg !14913, !llvm.loop !14938

35:                                               ; preds = %32, %1
  ret void, !dbg !14940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.256(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !14941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14943, metadata !DIExpression()), !dbg !14945
  call void @llvm.dbg.value(metadata i32 %1, metadata !14944, metadata !DIExpression()), !dbg !14945
  %3 = trunc i32 %1 to i8, !dbg !14946
  %4 = shl i8 %3, 4, !dbg !14946
  %5 = and i32 %0, 15, !dbg !14949
  %6 = add nsw i32 %5, -4, !dbg !14950
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14951
  store volatile i8 %4, i8* %7, align 1, !dbg !14952
  ret void, !dbg !14953
}

; Function Attrs: optsize
declare !dbg !14954 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #12 !dbg !14955 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14958, metadata !DIExpression()), !dbg !14959
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14960
  store i8 1, i8* %2, align 1, !dbg !14961
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14962
  store i8 1, i8* %3, align 4, !dbg !14963
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14964
  store i32 0, i32* %4, align 4, !dbg !14965
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14966
  store i32 0, i32* %5, align 4, !dbg !14967
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14968
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14969
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14970
  ret void, !dbg !14971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14972 {
  tail call void @z_sched_init() #27, !dbg !14977
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14978
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.257, i32 0, i32 0)) #27, !dbg !14979
  call void @llvm.dbg.value(metadata i8* %1, metadata !14976, metadata !DIExpression()), !dbg !14980
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #28, !dbg !14981
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14982
  tail call void @z_init_cpu(i32 noundef 0) #28, !dbg !14983
  ret i8* %1, !dbg !14984
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14985 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14989, metadata !DIExpression()), !dbg !14990
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !14991
  unreachable, !dbg !14992
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14993 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14995, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata i8* %1, metadata !14996, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata i8* %2, metadata !14997, metadata !DIExpression()), !dbg !14998
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14999
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #28, !dbg !15000
  tail call void @boot_banner() #27, !dbg !15001
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #28, !dbg !15002
  tail call void @z_init_static_threads() #27, !dbg !15003
  tail call void @main() #27, !dbg !15004
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15005
  %5 = and i8 %4, -2, !dbg !15005
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15005
  ret void, !dbg !15006
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !15007 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15017, metadata !DIExpression()), !dbg !15019
  call void @llvm.dbg.value(metadata i8* %1, metadata !15018, metadata !DIExpression()), !dbg !15019
  ret void, !dbg !15020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !15021 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15023, metadata !DIExpression()), !dbg !15025
  call void @llvm.dbg.value(metadata i8* %1, metadata !15024, metadata !DIExpression()), !dbg !15025
  ret void, !dbg !15026
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !15027 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15028, !srcloc !15035
  call void @llvm.dbg.value(metadata i32 %1, metadata !15031, metadata !DIExpression()) #26, !dbg !15036
  %2 = icmp ne i32 %1, 0, !dbg !15037
  ret i1 %2, !dbg !15038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #14 !dbg !15039 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15040
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15041
  %3 = load i8, i8* %2, align 4, !dbg !15042
  %4 = or i8 %3, 1, !dbg !15042
  store i8 %4, i8* %2, align 4, !dbg !15042
  ret void, !dbg !15043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #14 !dbg !15044 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15045
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15046
  %3 = load i8, i8* %2, align 4, !dbg !15047
  %4 = and i8 %3, -2, !dbg !15047
  store i8 %4, i8* %2, align 4, !dbg !15047
  ret void, !dbg !15048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #13 !dbg !15049 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15050
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15051
  %3 = load i8, i8* %2, align 4, !dbg !15051
  %4 = and i8 %3, 1, !dbg !15052
  %5 = icmp ne i8 %4, 0, !dbg !15053
  ret i1 %5, !dbg !15054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !15055 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15059, metadata !DIExpression()), !dbg !15061
  call void @llvm.dbg.value(metadata i8* %1, metadata !15060, metadata !DIExpression()), !dbg !15061
  ret i32 -88, !dbg !15062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !15063 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15067, metadata !DIExpression()), !dbg !15068
  ret i8* null, !dbg !15069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !15070 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15074, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i8* %1, metadata !15075, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i32 %2, metadata !15076, metadata !DIExpression()), !dbg !15077
  ret i32 -88, !dbg !15078
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2306 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2422, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.value(metadata i8* %1, metadata !2423, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.value(metadata i32 %2, metadata !2424, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.value(metadata i32 0, metadata !2425, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.value(metadata i8 undef, metadata !2427, metadata !DIExpression()), !dbg !15079
  %4 = icmp eq i8* %1, null, !dbg !15080
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !15082
  br i1 %6, label %46, label %7, !dbg !15082

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15083
  %9 = load i8, i8* %8, align 1, !dbg !15083
  call void @llvm.dbg.value(metadata i8 %9, metadata !2427, metadata !DIExpression()), !dbg !15079
  %10 = add i32 %2, -1, !dbg !15084
  call void @llvm.dbg.value(metadata i32 %10, metadata !2424, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.value(metadata i8 0, metadata !2428, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata i8 %9, metadata !2427, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.value(metadata i32 0, metadata !2425, metadata !DIExpression()), !dbg !15079
  %11 = icmp eq i8 %9, 0, !dbg !15086
  br i1 %11, label %12, label %15, !dbg !15088

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !15089
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !15090
  store i8 0, i8* %14, align 1, !dbg !15091
  br label %46, !dbg !15092

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2428, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata i8 %17, metadata !2427, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.value(metadata i32 %18, metadata !2425, metadata !DIExpression()), !dbg !15079
  %19 = zext i8 %17 to i32, !dbg !15093
  %20 = zext i8 %16 to i32, !dbg !15094
  %21 = shl nuw i32 1, %20, !dbg !15094
  call void @llvm.dbg.value(metadata i32 %21, metadata !2426, metadata !DIExpression()), !dbg !15079
  %22 = and i32 %21, %19, !dbg !15096
  %23 = icmp eq i32 %22, 0, !dbg !15098
  br i1 %23, label %42, label %24, !dbg !15099

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !15100
  %26 = sub i32 %10, %18, !dbg !15101
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !15102
  %28 = load i8*, i8** %27, align 4, !dbg !15102
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !15103
  %30 = load i32, i32* %29, align 4, !dbg !15103
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #28, !dbg !15104
  %32 = add i32 %31, %18, !dbg !15105
  call void @llvm.dbg.value(metadata i32 %32, metadata !2425, metadata !DIExpression()), !dbg !15079
  %33 = trunc i32 %21 to i8, !dbg !15106
  %34 = xor i8 %33, -1, !dbg !15106
  %35 = and i8 %17, %34, !dbg !15106
  call void @llvm.dbg.value(metadata i8 %35, metadata !2427, metadata !DIExpression()), !dbg !15079
  %36 = icmp eq i8 %35, 0, !dbg !15107
  br i1 %36, label %12, label %37, !dbg !15109

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !15110
  %39 = sub i32 %10, %32, !dbg !15112
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.260, i32 0, i32 0), i32 noundef 1) #28, !dbg !15113
  %41 = add i32 %40, %32, !dbg !15114
  call void @llvm.dbg.value(metadata i32 %41, metadata !2425, metadata !DIExpression()), !dbg !15079
  br label %42, !dbg !15115

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !15079
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !15079
  call void @llvm.dbg.value(metadata i8 %44, metadata !2427, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.value(metadata i32 %43, metadata !2425, metadata !DIExpression()), !dbg !15079
  %45 = add i8 %16, 1, !dbg !15116
  call void @llvm.dbg.value(metadata i8 %45, metadata !2428, metadata !DIExpression()), !dbg !15085
  br label %15, !dbg !15088

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.261, i32 0, i32 0), %3 ], !dbg !15079
  ret i8* %47, !dbg !15117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !15118 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15122, metadata !DIExpression()), !dbg !15127
  call void @llvm.dbg.value(metadata i32 %1, metadata !15123, metadata !DIExpression()), !dbg !15127
  call void @llvm.dbg.value(metadata i8* %2, metadata !15124, metadata !DIExpression()), !dbg !15127
  call void @llvm.dbg.value(metadata i32 %3, metadata !15125, metadata !DIExpression()), !dbg !15127
  %5 = icmp ult i32 %1, %3, !dbg !15128
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !15128
  call void @llvm.dbg.value(metadata i32 %6, metadata !15126, metadata !DIExpression()), !dbg !15127
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !15129
  ret i32 %6, !dbg !15130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15131 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15135, metadata !DIExpression()), !dbg !15136
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !15137
  ret void, !dbg !15138
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !15139 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15148, metadata !DIExpression()), !dbg !15159
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15149, metadata !DIExpression()), !dbg !15159
  call void @llvm.dbg.value(metadata i32 %2, metadata !15150, metadata !DIExpression()), !dbg !15159
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15151, metadata !DIExpression()), !dbg !15159
  call void @llvm.dbg.value(metadata i8* %4, metadata !15152, metadata !DIExpression()), !dbg !15159
  call void @llvm.dbg.value(metadata i8* %5, metadata !15153, metadata !DIExpression()), !dbg !15159
  call void @llvm.dbg.value(metadata i8* %6, metadata !15154, metadata !DIExpression()), !dbg !15159
  call void @llvm.dbg.value(metadata i32 %7, metadata !15155, metadata !DIExpression()), !dbg !15159
  call void @llvm.dbg.value(metadata i32 %8, metadata !15156, metadata !DIExpression()), !dbg !15159
  call void @llvm.dbg.value(metadata i8* undef, metadata !15157, metadata !DIExpression()), !dbg !15159
  %11 = icmp eq i32 %7, 15, !dbg !15160
  br i1 %11, label %12, label %15, !dbg !15160

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !15160
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #28, !dbg !15160
  br i1 %14, label %19, label %18, !dbg !15160

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !15160
  %17 = icmp ult i32 %16, 31, !dbg !15160
  br i1 %17, label %19, label %18, !dbg !15160

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 536) #27, !dbg !15164
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.274, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #27, !dbg !15164
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 536) #27, !dbg !15164
  unreachable, !dbg !15164

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15166
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #28, !dbg !15167
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !15168
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #28, !dbg !15169
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #28, !dbg !15170
  call void @llvm.dbg.value(metadata i8* %22, metadata !15158, metadata !DIExpression()), !dbg !15159
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !15171
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !15172
  store i8* null, i8** %23, align 4, !dbg !15173
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15174
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !15174
  br i1 %25, label %29, label %26, !dbg !15176

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !15177
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !15177
  br label %29, !dbg !15178

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !15159
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15179
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !15181
  ret i8* %22, !dbg !15182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #5 !dbg !15183 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15187, metadata !DIExpression()), !dbg !15188
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !15189
  ret i1 %2, !dbg !15190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #12 !dbg !15191 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15196, metadata !DIExpression()), !dbg !15197
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15198
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #28, !dbg !15199
  ret void, !dbg !15200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !15201 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15206, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata i32 %1, metadata !15207, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata i32 %2, metadata !15208, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata i32 %3, metadata !15209, metadata !DIExpression()), !dbg !15210
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !15211
  store %union.anon* null, %union.anon** %5, align 8, !dbg !15212
  %6 = trunc i32 %3 to i8, !dbg !15213
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !15214
  store i8 %6, i8* %7, align 4, !dbg !15215
  %8 = trunc i32 %2 to i8, !dbg !15216
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !15217
  store i8 %8, i8* %9, align 1, !dbg !15218
  %10 = trunc i32 %1 to i8, !dbg !15219
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !15220
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !15220
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !15220
  store i8 %10, i8* %13, align 2, !dbg !15221
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !15222
  store i8 0, i8* %14, align 1, !dbg !15223
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #28, !dbg !15224
  ret void, !dbg !15225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !15226 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15230, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15231, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata i32 %2, metadata !15232, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata i32 0, metadata !15237, metadata !DIExpression()), !dbg !15238
  %4 = add i32 %2, 7, !dbg !15239
  %5 = and i32 %4, -8, !dbg !15239
  %6 = add i32 %5, 64, !dbg !15239
  call void @llvm.dbg.value(metadata i32 %6, metadata !15233, metadata !DIExpression()), !dbg !15238
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.275(%struct.z_thread_stack_element* noundef %1) #28, !dbg !15241
  call void @llvm.dbg.value(metadata i8* %7, metadata !15236, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata i32 %5, metadata !15234, metadata !DIExpression()), !dbg !15238
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !15242
  call void @llvm.dbg.value(metadata i8* %8, metadata !15235, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata i32 0, metadata !15237, metadata !DIExpression()), !dbg !15238
  %9 = ptrtoint i8* %7 to i32, !dbg !15243
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15244
  store i32 %9, i32* %10, align 4, !dbg !15245
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15246
  store i32 %5, i32* %11, align 4, !dbg !15247
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !15248
  store i32 0, i32* %12, align 4, !dbg !15249
  call void @llvm.dbg.value(metadata i8* %8, metadata !15235, metadata !DIExpression()), !dbg !15238
  ret i8* %8, !dbg !15250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.275(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !15251 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15255, metadata !DIExpression()), !dbg !15256
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15257
  ret i8* %2, !dbg !15258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !15259 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15264, metadata !DIExpression()), !dbg !15265
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !15266
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !15267
  ret void, !dbg !15268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !15269 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15271, metadata !DIExpression()), !dbg !15272
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15273
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #28, !dbg !15274
  ret void, !dbg !15275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !15276 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15280, metadata !DIExpression()), !dbg !15281
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15282
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15283
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15284
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15285
  ret void, !dbg !15286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !15287 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15292, metadata !DIExpression()), !dbg !15293
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15294
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15295
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15296
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15297
  ret void, !dbg !15298
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !15299 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15316, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15307, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15308, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.value(metadata i32 %2, metadata !15309, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15310, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.value(metadata i8* %4, metadata !15311, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.value(metadata i8* %5, metadata !15312, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.value(metadata i8* %6, metadata !15313, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.value(metadata i32 %7, metadata !15314, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.value(metadata i32 %8, metadata !15315, metadata !DIExpression()), !dbg !15317
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15318, !srcloc !15035
  call void @llvm.dbg.value(metadata i32 %11, metadata !15031, metadata !DIExpression()) #26, !dbg !15323
  %12 = icmp eq i32 %11, 0, !dbg !15324
  br i1 %12, label %14, label %13, !dbg !15325

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 647) #27, !dbg !15326
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.279, i32 0, i32 0)) #27, !dbg !15326
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 647) #27, !dbg !15326
  unreachable, !dbg !15326

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !15316, metadata !DIExpression()), !dbg !15317
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #28, !dbg !15328
  %17 = icmp eq i64 %15, -1, !dbg !15329
  br i1 %17, label %19, label %18, !dbg !15331

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #28, !dbg !15332
  br label %19, !dbg !15334

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !15335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15336 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15341, metadata !DIExpression()), !dbg !15342
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15340, metadata !DIExpression()), !dbg !15342
  %4 = icmp eq i64 %3, 0, !dbg !15343
  br i1 %4, label %5, label %6, !dbg !15345

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #28, !dbg !15346
  br label %7, !dbg !15348

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #28, !dbg !15349
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15352 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15356, metadata !DIExpression()), !dbg !15357
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !15358, !srcloc !15360
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #28, !dbg !15361
  ret void, !dbg !15362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15363 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15366, metadata !DIExpression()), !dbg !15367
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15365, metadata !DIExpression()), !dbg !15367
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15368
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !15369
  ret void, !dbg !15370
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !15371 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15373, metadata !DIExpression()), !dbg !15392
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !15393

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 750) #27, !dbg !15397
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.283, i32 0, i32 0)) #27, !dbg !15397
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 750) #27, !dbg !15397
  unreachable, !dbg !15397

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !15373, metadata !DIExpression()), !dbg !15392
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15400
  br i1 %4, label %6, label %5, !dbg !15401

5:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !15402
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15390, metadata !DIExpression()), !dbg !15403
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !15404

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !15408
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !15408
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !15410
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !15410
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !15411
  %12 = load i32, i32* %11, align 4, !dbg !15411
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !15412
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !15412
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !15413
  %16 = load i8*, i8** %15, align 4, !dbg !15413
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !15414
  %18 = load i8*, i8** %17, align 4, !dbg !15414
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !15415
  %20 = load i8*, i8** %19, align 4, !dbg !15415
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !15416
  %22 = load i32, i32* %21, align 4, !dbg !15416
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !15417
  %24 = load i32, i32* %23, align 4, !dbg !15417
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #28, !dbg !15418
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !15419
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !15420
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !15421
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !15421
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !15422
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !15373, metadata !DIExpression()), !dbg !15392
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15423
  br i1 %30, label %1, label %2, !dbg !15393, !llvm.loop !15424

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 781) #27, !dbg !15426
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.283, i32 0, i32 0)) #27, !dbg !15426
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 781) #27, !dbg !15426
  unreachable, !dbg !15426

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !15390, metadata !DIExpression()), !dbg !15403
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15429
  br i1 %34, label %36, label %35, !dbg !15430

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #27, !dbg !15431
  ret void, !dbg !15432

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !15433
  %38 = load i32, i32* %37, align 4, !dbg !15433
  %39 = icmp eq i32 %38, -1, !dbg !15436
  br i1 %39, label %48, label %40, !dbg !15437

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !15438
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !15438
  %43 = icmp sgt i32 %38, 0, !dbg !15440
  %44 = select i1 %43, i32 %38, i32 0, !dbg !15440
  %45 = zext i32 %44 to i64, !dbg !15440
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %45) #28, !dbg !15440
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !15441
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #28, !dbg !15441
  br label %48, !dbg !15442

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !15443
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !15390, metadata !DIExpression()), !dbg !15403
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15444
  br i1 %50, label %31, label %32, !dbg !15404, !llvm.loop !15445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !15447 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15452, metadata !DIExpression()), !dbg !15453
  call void @llvm.dbg.value(metadata i64 %0, metadata !15454, metadata !DIExpression()), !dbg !15471
  call void @llvm.dbg.value(metadata i32 1000, metadata !15459, metadata !DIExpression()), !dbg !15471
  call void @llvm.dbg.value(metadata i32 10000, metadata !15460, metadata !DIExpression()), !dbg !15471
  call void @llvm.dbg.value(metadata i8 1, metadata !15461, metadata !DIExpression()), !dbg !15471
  call void @llvm.dbg.value(metadata i8 0, metadata !15462, metadata !DIExpression()), !dbg !15471
  call void @llvm.dbg.value(metadata i8 1, metadata !15463, metadata !DIExpression()), !dbg !15471
  call void @llvm.dbg.value(metadata i8 0, metadata !15464, metadata !DIExpression()), !dbg !15471
  call void @llvm.dbg.value(metadata i8 1, metadata !15465, metadata !DIExpression()), !dbg !15471
  call void @llvm.dbg.value(metadata i8 0, metadata !15466, metadata !DIExpression()), !dbg !15471
  call void @llvm.dbg.value(metadata i64 0, metadata !15467, metadata !DIExpression()), !dbg !15471
  call void @llvm.dbg.value(metadata i64 0, metadata !15467, metadata !DIExpression()), !dbg !15471
  %2 = mul i64 %0, 10, !dbg !15473
  ret i64 %2, !dbg !15479
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !15480 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15482, metadata !DIExpression()), !dbg !15486
  call void @llvm.dbg.value(metadata i8* %1, metadata !15483, metadata !DIExpression()), !dbg !15486
  call void @llvm.dbg.value(metadata i8* %2, metadata !15484, metadata !DIExpression()), !dbg !15486
  call void @llvm.dbg.value(metadata i8* %3, metadata !15485, metadata !DIExpression()), !dbg !15486
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15487
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15488
  %7 = load i8, i8* %6, align 4, !dbg !15489
  %8 = or i8 %7, 4, !dbg !15489
  store i8 %8, i8* %6, align 4, !dbg !15489
  tail call void @z_thread_essential_clear() #28, !dbg !15490
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #30, !dbg !15491
  unreachable, !dbg !15491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !15492 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15497, metadata !DIExpression()), !dbg !15499
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !15500
  %3 = load i32, i32* %2, align 4, !dbg !15500
  call void @llvm.dbg.value(metadata i32 %3, metadata !15498, metadata !DIExpression()), !dbg !15499
  %4 = icmp eq i32 %3, 0, !dbg !15501
  br i1 %4, label %10, label %5, !dbg !15503

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !15504
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !15507
  %8 = zext i8 %7 to i32, !dbg !15508
  %9 = icmp eq i32 %6, %8, !dbg !15509
  br i1 %9, label %11, label %10, !dbg !15510

10:                                               ; preds = %5, %1
  br label %11, !dbg !15511

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !15499
  ret i1 %12, !dbg !15512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #14 !dbg !15513 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15515, metadata !DIExpression()), !dbg !15516
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !15517
  %3 = load i32, i32* %2, align 4, !dbg !15517
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !15519
  %5 = zext i8 %4 to i32, !dbg !15520
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15521
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !15522
  %8 = or i32 %7, %5, !dbg !15523
  %9 = icmp eq i32 %3, %8, !dbg !15524
  br i1 %9, label %10, label %11, !dbg !15525

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !15526
  br label %11, !dbg !15527

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !15528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !15529 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15533, metadata !DIExpression()), !dbg !15534
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !15535
  %3 = zext i8 %2 to i32, !dbg !15536
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15537
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !15538
  %6 = or i32 %5, %3, !dbg !15539
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !15540
  store i32 %6, i32* %7, align 4, !dbg !15541
  ret void, !dbg !15542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !15543 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15547, metadata !DIExpression()), !dbg !15548
  ret i32 -134, !dbg !15549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !15550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15554, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata i32 %1, metadata !15555, metadata !DIExpression()), !dbg !15556
  ret i32 -134, !dbg !15557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #5 !dbg !15558 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15565, metadata !DIExpression()), !dbg !15567
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !15566, metadata !DIExpression()), !dbg !15567
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15568
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !15570
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15567
  ret i32 %6, !dbg !15571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #5 !dbg !15572 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !15576, metadata !DIExpression()), !dbg !15577
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !15578
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15577
  ret i32 %3, !dbg !15580
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15581 {
  tail call void @sys_clock_idle_exit() #27, !dbg !15583
  ret void, !dbg !15584
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !15585 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15587, metadata !DIExpression()), !dbg !15590
  call void @llvm.dbg.value(metadata i8* %1, metadata !15588, metadata !DIExpression()), !dbg !15590
  call void @llvm.dbg.value(metadata i8* %2, metadata !15589, metadata !DIExpression()), !dbg !15590
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15591
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15591
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15591
  %7 = load i8, i8* %6, align 2, !dbg !15591
  %8 = icmp sgt i8 %7, -1, !dbg !15591
  br i1 %8, label %10, label %9, !dbg !15594

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 39) #27, !dbg !15595
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 39) #27, !dbg !15595
  unreachable, !dbg !15595

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15597, !srcloc !15604
  call void @llvm.dbg.value(metadata i32 undef, metadata !15600, metadata !DIExpression()) #26, !dbg !15605
  call void @llvm.dbg.value(metadata i32 undef, metadata !15601, metadata !DIExpression()) #26, !dbg !15605
  tail call fastcc void @k_cpu_idle() #28, !dbg !15606
  br label %10, !dbg !15607, !llvm.loop !15608
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15610 {
  tail call void @arch_cpu_idle() #27, !dbg !15611
  ret void, !dbg !15612
}

; Function Attrs: optsize
declare !dbg !15613 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !15614 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15632, metadata !DIExpression()), !dbg !15636
  call void @llvm.dbg.value(metadata i8* %1, metadata !15633, metadata !DIExpression()), !dbg !15636
  call void @llvm.dbg.value(metadata i32 %2, metadata !15634, metadata !DIExpression()), !dbg !15636
  call void @llvm.dbg.value(metadata i32 %3, metadata !15635, metadata !DIExpression()), !dbg !15636
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15637
  store i32 %2, i32* %5, align 4, !dbg !15638
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15639
  store i32 %3, i32* %6, align 4, !dbg !15640
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15641
  store i8* %1, i8** %7, align 4, !dbg !15642
  %8 = mul i32 %3, %2, !dbg !15643
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !15644
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15645
  store i8* %9, i8** %10, align 4, !dbg !15646
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15647
  store i8* %1, i8** %11, align 4, !dbg !15648
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15649
  store i8* %1, i8** %12, align 4, !dbg !15650
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15651
  store i32 0, i32* %13, align 4, !dbg !15652
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15653
  store i8 0, i8* %14, align 4, !dbg !15654
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15655
  tail call fastcc void @z_waitq_init.297(%union.anon* noundef %15) #28, !dbg !15656
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !15657
  store i32 0, i32* %16, align 4, !dbg !15657
  ret void, !dbg !15658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.297(%union.anon* noundef %0) unnamed_addr #12 !dbg !15659 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15663, metadata !DIExpression()), !dbg !15664
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15665
  tail call fastcc void @sys_dlist_init.298(%struct._dnode* noundef %2) #28, !dbg !15666
  ret void, !dbg !15667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.298(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !15668 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15673, metadata !DIExpression()), !dbg !15674
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15675
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15676
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15677
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15678
  ret void, !dbg !15679
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15680 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15684, metadata !DIExpression()), !dbg !15690
  call void @llvm.dbg.value(metadata i32 %1, metadata !15685, metadata !DIExpression()), !dbg !15690
  call void @llvm.dbg.value(metadata i32 %2, metadata !15686, metadata !DIExpression()), !dbg !15690
  %5 = bitcast i32* %4 to i8*, !dbg !15691
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !15691
  call void @llvm.dbg.value(metadata i32* %4, metadata !15689, metadata !DIExpression(DW_OP_deref)), !dbg !15690
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #28, !dbg !15692
  br i1 %6, label %13, label %7, !dbg !15694

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !15695
  call void @llvm.dbg.value(metadata i32 %8, metadata !15689, metadata !DIExpression()), !dbg !15690
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #28, !dbg !15697
  call void @llvm.dbg.value(metadata i8* %9, metadata !15687, metadata !DIExpression()), !dbg !15690
  %10 = icmp eq i8* %9, null, !dbg !15698
  br i1 %10, label %13, label %11, !dbg !15700

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #28, !dbg !15701
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15703
  store i8 1, i8* %12, align 4, !dbg !15704
  call void @llvm.dbg.value(metadata i32 0, metadata !15688, metadata !DIExpression()), !dbg !15690
  br label %13, !dbg !15705

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !15706
  call void @llvm.dbg.value(metadata i32 %14, metadata !15688, metadata !DIExpression()), !dbg !15690
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !15707
  ret i32 %14, !dbg !15708
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #24 !dbg !15709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15714, metadata !DIExpression()), !dbg !15717
  call void @llvm.dbg.value(metadata i32 %1, metadata !15715, metadata !DIExpression()), !dbg !15717
  call void @llvm.dbg.value(metadata i32* %2, metadata !15716, metadata !DIExpression()), !dbg !15717
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !15718
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !15718
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !15718
  store i32 %6, i32* %2, align 4, !dbg !15718
  ret i1 %5, !dbg !15719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !15720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15724, metadata !DIExpression()), !dbg !15725
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !15726
  ret i8* %2, !dbg !15727
}

; Function Attrs: optsize
declare !dbg !15728 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15731 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15735, metadata !DIExpression()), !dbg !15736
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15737
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %2) #28, !dbg !15737
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15737
  br i1 %4, label %5, label %15, !dbg !15739

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15740
  %7 = load i8, i8* %6, align 4, !dbg !15740
  %8 = and i8 %7, 1, !dbg !15742
  %9 = icmp eq i8 %8, 0, !dbg !15743
  br i1 %9, label %15, label %10, !dbg !15744

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15745
  %12 = load i8*, i8** %11, align 4, !dbg !15745
  tail call void @k_free(i8* noundef %12) #27, !dbg !15747
  %13 = load i8, i8* %6, align 4, !dbg !15748
  %14 = and i8 %13, -2, !dbg !15748
  store i8 %14, i8* %6, align 4, !dbg !15748
  br label %15, !dbg !15749

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !15736
  ret i32 %16, !dbg !15750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !15751 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15755, metadata !DIExpression()), !dbg !15756
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15757
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #28, !dbg !15758
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15759
  ret %struct.k_thread* %4, !dbg !15760
}

; Function Attrs: optsize
declare !dbg !15761 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !15762 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15766, metadata !DIExpression()), !dbg !15767
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #28, !dbg !15768
  br i1 %2, label %6, label %3, !dbg !15768

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15769
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15769
  br label %6, !dbg !15768

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15768
  ret %struct._dnode* %7, !dbg !15770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !15771 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15775, metadata !DIExpression()), !dbg !15776
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15777
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15777
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15778
  ret i1 %4, !dbg !15779
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15780 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15790, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15788, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata i8* %1, metadata !15789, metadata !DIExpression()), !dbg !15798
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15799, !srcloc !15808
  call void @llvm.dbg.value(metadata i32 %5, metadata !15802, metadata !DIExpression()) #26, !dbg !15809
  %6 = icmp eq i32 %5, 0, !dbg !15810
  %7 = icmp eq i64 %4, 0, !dbg !15811
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15811
  br i1 %8, label %10, label %9, !dbg !15811

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.303, i32 0, i32 0), i32 noundef 118) #27, !dbg !15812
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.304, i32 0, i32 0)) #27, !dbg !15812
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.303, i32 0, i32 0), i32 noundef 118) #27, !dbg !15812
  unreachable, !dbg !15812

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15814
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15815, metadata !DIExpression()) #26, !dbg !15822
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15824, !srcloc !15830
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !15831
  call void @llvm.dbg.value(metadata i32 undef, metadata !15828, metadata !DIExpression()) #26, !dbg !15831
  call void @llvm.dbg.value(metadata i32 undef, metadata !15821, metadata !DIExpression()) #26, !dbg !15822
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15832
  br i1 %13, label %15, label %14, !dbg !15835

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #27, !dbg !15836
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15836
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #27, !dbg !15836
  unreachable, !dbg !15836

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15824
  call void @llvm.dbg.value(metadata i32 %16, metadata !15827, metadata !DIExpression()) #26, !dbg !15831
  call void @llvm.dbg.value(metadata i32 %16, metadata !15821, metadata !DIExpression()) #26, !dbg !15822
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15838
  call void @llvm.dbg.value(metadata i32 %16, metadata !15792, metadata !DIExpression()), !dbg !15798
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15839
  %18 = load i32, i32* %17, align 4, !dbg !15839
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15841
  %20 = load i32, i32* %19, align 4, !dbg !15841
  %21 = icmp ult i32 %18, %20, !dbg !15842
  br i1 %21, label %22, label %52, !dbg !15843

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15844
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %23) #27, !dbg !15846
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15791, metadata !DIExpression()), !dbg !15798
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !15847
  br i1 %25, label %34, label %26, !dbg !15849

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !15850
  %28 = load i8*, i8** %27, align 4, !dbg !15850
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15852
  %30 = load i32, i32* %29, align 4, !dbg !15852
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #27, !dbg !15853
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15854, metadata !DIExpression()), !dbg !15860
  call void @llvm.dbg.value(metadata i32 0, metadata !15859, metadata !DIExpression()), !dbg !15860
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 7, i32 1, !dbg !15862
  store i32 0, i32* %32, align 4, !dbg !15863
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #27, !dbg !15864
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15865
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #27, !dbg !15865
  br label %64, !dbg !15866

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15867
  %36 = load i8*, i8** %35, align 4, !dbg !15867
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15869
  %38 = load i32, i32* %37, align 4, !dbg !15869
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #27, !dbg !15870
  %40 = load i32, i32* %37, align 4, !dbg !15871
  %41 = load i8*, i8** %35, align 4, !dbg !15872
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !15872
  store i8* %42, i8** %35, align 4, !dbg !15872
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15873
  %44 = load i8*, i8** %43, align 4, !dbg !15873
  %45 = icmp eq i8* %42, %44, !dbg !15875
  br i1 %45, label %46, label %49, !dbg !15876

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15877
  %48 = load i8*, i8** %47, align 4, !dbg !15877
  store i8* %48, i8** %35, align 4, !dbg !15879
  br label %49, !dbg !15880

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !15881
  %51 = add i32 %50, 1, !dbg !15881
  store i32 %51, i32* %17, align 4, !dbg !15881
  call void @llvm.dbg.value(metadata i32 0, metadata !15797, metadata !DIExpression()), !dbg !15798
  br label %59, !dbg !15882

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !15883

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15884
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !15887
  store i8* %1, i8** %55, align 4, !dbg !15888
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15889
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15890
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %union.anon* noundef %56, [1 x i64] %2) #27, !dbg !15890
  call void @llvm.dbg.value(metadata i32 %58, metadata !15797, metadata !DIExpression()), !dbg !15798
  br label %64, !dbg !15891

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !15892
  call void @llvm.dbg.value(metadata i32 %60, metadata !15797, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata i32 undef, metadata !15893, metadata !DIExpression()) #26, !dbg !15899
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15898, metadata !DIExpression()) #26, !dbg !15899
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15901
  br i1 %61, label %63, label %62, !dbg !15904

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #27, !dbg !15905
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15905
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #27, !dbg !15905
  unreachable, !dbg !15905

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !15893, metadata !DIExpression()) #26, !dbg !15899
  call void @llvm.dbg.value(metadata i32 %16, metadata !15907, metadata !DIExpression()) #26, !dbg !15910
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !15912, !srcloc !15913
  br label %64, !dbg !15914

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !15798
  ret i32 %65, !dbg !15915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !15916 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15926, metadata !DIExpression()), !dbg !15928
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15927, metadata !DIExpression()), !dbg !15928
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15929
  %4 = load i32, i32* %3, align 4, !dbg !15929
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15930
  store i32 %4, i32* %5, align 4, !dbg !15931
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15932
  %7 = load i32, i32* %6, align 4, !dbg !15932
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15933
  store i32 %7, i32* %8, align 4, !dbg !15934
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15935
  %10 = load i32, i32* %9, align 4, !dbg !15935
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15936
  store i32 %10, i32* %11, align 4, !dbg !15937
  ret void, !dbg !15938
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15939 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15945, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15943, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i8* %1, metadata !15944, metadata !DIExpression()), !dbg !15949
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15950, !srcloc !15808
  call void @llvm.dbg.value(metadata i32 %5, metadata !15802, metadata !DIExpression()) #26, !dbg !15955
  %6 = icmp eq i32 %5, 0, !dbg !15956
  %7 = icmp eq i64 %4, 0, !dbg !15957
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15957
  br i1 %8, label %10, label %9, !dbg !15957

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.303, i32 0, i32 0), i32 noundef 208) #27, !dbg !15958
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.304, i32 0, i32 0)) #27, !dbg !15958
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.303, i32 0, i32 0), i32 noundef 208) #27, !dbg !15958
  unreachable, !dbg !15958

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15815, metadata !DIExpression()) #26, !dbg !15961
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15963, !srcloc !15830
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !15965
  call void @llvm.dbg.value(metadata i32 undef, metadata !15828, metadata !DIExpression()) #26, !dbg !15965
  call void @llvm.dbg.value(metadata i32 undef, metadata !15821, metadata !DIExpression()) #26, !dbg !15961
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15966
  br i1 %13, label %15, label %14, !dbg !15967

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #27, !dbg !15968
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15968
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #27, !dbg !15968
  unreachable, !dbg !15968

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15963
  call void @llvm.dbg.value(metadata i32 %16, metadata !15827, metadata !DIExpression()) #26, !dbg !15965
  call void @llvm.dbg.value(metadata i32 %16, metadata !15821, metadata !DIExpression()) #26, !dbg !15961
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15969
  call void @llvm.dbg.value(metadata i32 %16, metadata !15946, metadata !DIExpression()), !dbg !15949
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15970
  %18 = load i32, i32* %17, align 4, !dbg !15970
  %19 = icmp eq i32 %18, 0, !dbg !15972
  br i1 %19, label %61, label %20, !dbg !15973

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15974
  %22 = load i8*, i8** %21, align 4, !dbg !15974
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15976
  %24 = load i32, i32* %23, align 4, !dbg !15976
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #27, !dbg !15977
  %26 = load i32, i32* %23, align 4, !dbg !15978
  %27 = load i8*, i8** %21, align 4, !dbg !15979
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !15979
  store i8* %28, i8** %21, align 4, !dbg !15979
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15980
  %30 = load i8*, i8** %29, align 4, !dbg !15980
  %31 = icmp eq i8* %28, %30, !dbg !15982
  br i1 %31, label %32, label %35, !dbg !15983

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15984
  %34 = load i8*, i8** %33, align 4, !dbg !15984
  store i8* %34, i8** %21, align 4, !dbg !15986
  br label %35, !dbg !15987

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !15988
  %37 = add i32 %36, -1, !dbg !15988
  store i32 %37, i32* %17, align 4, !dbg !15988
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15989
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %38) #27, !dbg !15990
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15947, metadata !DIExpression()), !dbg !15949
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !15991
  br i1 %40, label %68, label %41, !dbg !15993

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15994
  %43 = load i8*, i8** %42, align 4, !dbg !15994
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !15996
  %45 = load i8*, i8** %44, align 4, !dbg !15996
  %46 = load i32, i32* %23, align 4, !dbg !15997
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #27, !dbg !15998
  %48 = load i32, i32* %23, align 4, !dbg !15999
  %49 = load i8*, i8** %42, align 4, !dbg !16000
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !16000
  store i8* %50, i8** %42, align 4, !dbg !16000
  %51 = load i8*, i8** %29, align 4, !dbg !16001
  %52 = icmp eq i8* %50, %51, !dbg !16003
  br i1 %52, label %53, label %56, !dbg !16004

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !16005
  %55 = load i8*, i8** %54, align 4, !dbg !16005
  store i8* %55, i8** %42, align 4, !dbg !16007
  br label %56, !dbg !16008

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !16009
  %58 = add i32 %57, 1, !dbg !16009
  store i32 %58, i32* %17, align 4, !dbg !16009
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15854, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata i32 0, metadata !15859, metadata !DIExpression()), !dbg !16010
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 7, i32 1, !dbg !16012
  store i32 0, i32* %59, align 4, !dbg !16013
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #27, !dbg !16014
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16015
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #27, !dbg !16015
  br label %73, !dbg !16016

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !16017

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16018
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !16021
  store i8* %1, i8** %64, align 4, !dbg !16022
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !16023
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16024
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %union.anon* noundef %65, [1 x i64] %2) #27, !dbg !16024
  call void @llvm.dbg.value(metadata i32 %67, metadata !15948, metadata !DIExpression()), !dbg !15949
  br label %73, !dbg !16025

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !16026
  call void @llvm.dbg.value(metadata i32 %69, metadata !15948, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i32 undef, metadata !15893, metadata !DIExpression()) #26, !dbg !16027
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15898, metadata !DIExpression()) #26, !dbg !16027
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !16029
  br i1 %70, label %72, label %71, !dbg !16030

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #27, !dbg !16031
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !16031
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #27, !dbg !16031
  unreachable, !dbg !16031

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !15893, metadata !DIExpression()) #26, !dbg !16027
  call void @llvm.dbg.value(metadata i32 %16, metadata !15907, metadata !DIExpression()) #26, !dbg !16032
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !16034, !srcloc !15913
  br label %73, !dbg !16035

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !15949
  ret i32 %74, !dbg !16036
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !16037 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16041, metadata !DIExpression()), !dbg !16045
  call void @llvm.dbg.value(metadata i8* %1, metadata !16042, metadata !DIExpression()), !dbg !16045
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !16046
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15815, metadata !DIExpression()) #26, !dbg !16047
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16049, !srcloc !15830
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !16051
  call void @llvm.dbg.value(metadata i32 undef, metadata !15828, metadata !DIExpression()) #26, !dbg !16051
  call void @llvm.dbg.value(metadata i32 undef, metadata !15821, metadata !DIExpression()) #26, !dbg !16047
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !16052
  br i1 %5, label %7, label %6, !dbg !16053

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #27, !dbg !16054
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !16054
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #27, !dbg !16054
  unreachable, !dbg !16054

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !16051
  call void @llvm.dbg.value(metadata i32 undef, metadata !15821, metadata !DIExpression()) #26, !dbg !16047
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !16055
  call void @llvm.dbg.value(metadata i32 undef, metadata !16043, metadata !DIExpression()), !dbg !16045
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16056
  %9 = load i32, i32* %8, align 4, !dbg !16056
  %10 = icmp eq i32 %9, 0, !dbg !16058
  br i1 %10, label %17, label %11, !dbg !16059

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !16060
  %13 = load i8*, i8** %12, align 4, !dbg !16060
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !16062
  %15 = load i32, i32* %14, align 4, !dbg !16062
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #27, !dbg !16063
  call void @llvm.dbg.value(metadata i32 0, metadata !16044, metadata !DIExpression()), !dbg !16045
  br label %17, !dbg !16064

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !16065
  call void @llvm.dbg.value(metadata i32 %18, metadata !16044, metadata !DIExpression()), !dbg !16045
  call void @llvm.dbg.value(metadata i32 undef, metadata !15893, metadata !DIExpression()) #26, !dbg !16066
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15898, metadata !DIExpression()) #26, !dbg !16066
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !16068
  br i1 %19, label %21, label %20, !dbg !16069

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #27, !dbg !16070
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !16070
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #27, !dbg !16070
  unreachable, !dbg !16070

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !16049
  call void @llvm.dbg.value(metadata i32 %22, metadata !15827, metadata !DIExpression()) #26, !dbg !16051
  call void @llvm.dbg.value(metadata i32 %22, metadata !15821, metadata !DIExpression()) #26, !dbg !16047
  call void @llvm.dbg.value(metadata i32 %22, metadata !16043, metadata !DIExpression()), !dbg !16045
  call void @llvm.dbg.value(metadata i32 undef, metadata !15893, metadata !DIExpression()) #26, !dbg !16066
  call void @llvm.dbg.value(metadata i32 undef, metadata !15907, metadata !DIExpression()) #26, !dbg !16071
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #26, !dbg !16073, !srcloc !15913
  ret i32 %18, !dbg !16074
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !16075 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16079, metadata !DIExpression()), !dbg !16082
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !16083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !15815, metadata !DIExpression()) #26, !dbg !16084
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16086, !srcloc !15830
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !16088
  call void @llvm.dbg.value(metadata i32 undef, metadata !15828, metadata !DIExpression()) #26, !dbg !16088
  call void @llvm.dbg.value(metadata i32 undef, metadata !15821, metadata !DIExpression()) #26, !dbg !16084
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #27, !dbg !16089
  br i1 %4, label %6, label %5, !dbg !16090

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #27, !dbg !16091
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #27, !dbg !16091
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #27, !dbg !16091
  unreachable, !dbg !16091

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !16088
  call void @llvm.dbg.value(metadata i32 undef, metadata !15821, metadata !DIExpression()) #26, !dbg !16084
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #27, !dbg !16092
  call void @llvm.dbg.value(metadata i32 undef, metadata !16080, metadata !DIExpression()), !dbg !16082
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #27, !dbg !16093
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16081, metadata !DIExpression()), !dbg !16082
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16094
  br i1 %9, label %15, label %10, !dbg !16095

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15854, metadata !DIExpression()), !dbg !16096
  call void @llvm.dbg.value(metadata i32 -35, metadata !15859, metadata !DIExpression()), !dbg !16096
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 7, i32 1, !dbg !16099
  store i32 -35, i32* %12, align 4, !dbg !16100
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #27, !dbg !16101
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #27, !dbg !16093
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16081, metadata !DIExpression()), !dbg !16082
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !16094
  br i1 %14, label %15, label %10, !dbg !16095, !llvm.loop !16102

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !16086
  call void @llvm.dbg.value(metadata i32 %16, metadata !15827, metadata !DIExpression()) #26, !dbg !16088
  call void @llvm.dbg.value(metadata i32 %16, metadata !15821, metadata !DIExpression()) #26, !dbg !16084
  call void @llvm.dbg.value(metadata i32 %16, metadata !16080, metadata !DIExpression()), !dbg !16082
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16104
  store i32 0, i32* %17, align 4, !dbg !16105
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !16106
  %19 = load i8*, i8** %18, align 4, !dbg !16106
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !16107
  store i8* %19, i8** %20, align 4, !dbg !16108
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16109
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #27, !dbg !16109
  ret void, !dbg !16110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !16111 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !16126, metadata !DIExpression()), !dbg !16129
  call void @llvm.dbg.value(metadata i32 %1, metadata !16127, metadata !DIExpression()), !dbg !16129
  call void @llvm.dbg.value(metadata i32 %2, metadata !16128, metadata !DIExpression()), !dbg !16129
  %4 = icmp eq i32 %2, 0, !dbg !16130
  %5 = icmp ugt i32 %1, %2, !dbg !16130
  %6 = or i1 %4, %5, !dbg !16130
  br i1 %6, label %11, label %7, !dbg !16130

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !16132
  store i32 %1, i32* %8, align 4, !dbg !16133
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !16134
  store i32 %2, i32* %9, align 4, !dbg !16135
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !16136
  tail call fastcc void @z_waitq_init.312(%union.anon* noundef %10) #28, !dbg !16137
  br label %11, !dbg !16138

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !16129
  ret i32 %12, !dbg !16139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.312(%union.anon* noundef %0) unnamed_addr #12 !dbg !16140 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16145, metadata !DIExpression()), !dbg !16146
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16147
  tail call fastcc void @sys_dlist_init.313(%struct._dnode* noundef %2) #28, !dbg !16148
  ret void, !dbg !16149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.313(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !16150 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16155, metadata !DIExpression()), !dbg !16156
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16157
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16158
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16159
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16160
  ret void, !dbg !16161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !16162 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !16166, metadata !DIExpression()), !dbg !16252
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.314, metadata !16253, metadata !DIExpression()) #26, !dbg !16260
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16262, !srcloc !16268
  call void @llvm.dbg.value(metadata i32 undef, metadata !16265, metadata !DIExpression()) #26, !dbg !16269
  call void @llvm.dbg.value(metadata i32 undef, metadata !16266, metadata !DIExpression()) #26, !dbg !16269
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #26, !dbg !16260
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.314) #27, !dbg !16270
  br i1 %3, label %5, label %4, !dbg !16273

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.317, i32 0, i32 0), i32 noundef 148) #27, !dbg !16274
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.318, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.314) #27, !dbg !16274
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.317, i32 0, i32 0), i32 noundef 148) #27, !dbg !16274
  unreachable, !dbg !16274

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16265, metadata !DIExpression()) #26, !dbg !16269
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #26, !dbg !16260
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.314) #27, !dbg !16276
  call void @llvm.dbg.value(metadata i32 undef, metadata !16167, metadata !DIExpression()), !dbg !16252
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !16277
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !16278
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16172, metadata !DIExpression()), !dbg !16252
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16279
  br i1 %8, label %11, label %9, !dbg !16281

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16282, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata i32 0, metadata !16287, metadata !DIExpression()), !dbg !16288
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !16291
  store i32 0, i32* %10, align 4, !dbg !16292
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !16293
  br label %19, !dbg !16294

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !16295
  %13 = load i32, i32* %12, align 4, !dbg !16295
  %14 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !16297
  %15 = load i32, i32* %14, align 4, !dbg !16297
  %16 = icmp ne i32 %13, %15, !dbg !16298
  %17 = zext i1 %16 to i32, !dbg !16299
  %18 = add i32 %13, %17, !dbg !16300
  store i32 %18, i32* %12, align 4, !dbg !16300
  br label %19

19:                                               ; preds = %11, %9
  %20 = extractvalue { i32, i32 } %2, 0, !dbg !16262
  call void @llvm.dbg.value(metadata i32 %20, metadata !16265, metadata !DIExpression()) #26, !dbg !16269
  call void @llvm.dbg.value(metadata i32 %20, metadata !16259, metadata !DIExpression()) #26, !dbg !16260
  call void @llvm.dbg.value(metadata i32 %20, metadata !16167, metadata !DIExpression()), !dbg !16252
  %21 = insertvalue [1 x i32] poison, i32 %20, 0, !dbg !16301
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.314, [1 x i32] %21) #27, !dbg !16301
  ret void, !dbg !16302
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16303 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16312, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !16311, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.value(metadata i32 0, metadata !16313, metadata !DIExpression()), !dbg !16316
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !16317, !srcloc !16326
  call void @llvm.dbg.value(metadata i32 %4, metadata !16320, metadata !DIExpression()) #26, !dbg !16327
  %5 = icmp eq i32 %4, 0, !dbg !16328
  %6 = icmp eq i64 %3, 0, !dbg !16329
  %7 = select i1 %5, i1 true, i1 %6, !dbg !16329
  br i1 %7, label %9, label %8, !dbg !16329

8:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.322, i32 0, i32 0), i32 noundef 122) #27, !dbg !16330
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.323, i32 0, i32 0)) #27, !dbg !16330
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.322, i32 0, i32 0), i32 noundef 122) #27, !dbg !16330
  unreachable, !dbg !16330

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.314, metadata !16253, metadata !DIExpression()) #26, !dbg !16332
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16334, !srcloc !16268
  call void @llvm.dbg.value(metadata i32 undef, metadata !16265, metadata !DIExpression()) #26, !dbg !16336
  call void @llvm.dbg.value(metadata i32 undef, metadata !16266, metadata !DIExpression()) #26, !dbg !16336
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #26, !dbg !16332
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.314) #27, !dbg !16337
  br i1 %11, label %13, label %12, !dbg !16338

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.317, i32 0, i32 0), i32 noundef 148) #27, !dbg !16339
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.318, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.314) #27, !dbg !16339
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.317, i32 0, i32 0), i32 noundef 148) #27, !dbg !16339
  unreachable, !dbg !16339

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %10, 0, !dbg !16334
  call void @llvm.dbg.value(metadata i32 %14, metadata !16265, metadata !DIExpression()) #26, !dbg !16336
  call void @llvm.dbg.value(metadata i32 %14, metadata !16259, metadata !DIExpression()) #26, !dbg !16332
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.314) #27, !dbg !16340
  call void @llvm.dbg.value(metadata i32 %14, metadata !16314, metadata !DIExpression()), !dbg !16316
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !16341
  %16 = load i32, i32* %15, align 4, !dbg !16341
  %17 = icmp eq i32 %16, 0, !dbg !16341
  br i1 %17, label %23, label %18, !dbg !16343, !prof !16344

18:                                               ; preds = %13
  %19 = add i32 %16, -1, !dbg !16345
  store i32 %19, i32* %15, align 4, !dbg !16345
  call void @llvm.dbg.value(metadata i32 undef, metadata !16347, metadata !DIExpression()) #26, !dbg !16353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.314, metadata !16352, metadata !DIExpression()) #26, !dbg !16353
  %20 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.314) #27, !dbg !16355
  br i1 %20, label %22, label %21, !dbg !16358

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.317, i32 0, i32 0), i32 noundef 194) #27, !dbg !16359
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.314) #27, !dbg !16359
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.317, i32 0, i32 0), i32 noundef 194) #27, !dbg !16359
  unreachable, !dbg !16359

22:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %14, metadata !16347, metadata !DIExpression()) #26, !dbg !16353
  call void @llvm.dbg.value(metadata i32 %14, metadata !16361, metadata !DIExpression()) #26, !dbg !16364
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !16366, !srcloc !16367
  call void @llvm.dbg.value(metadata i32 0, metadata !16313, metadata !DIExpression()), !dbg !16316
  br label %32, !dbg !16368

23:                                               ; preds = %13
  br i1 %6, label %24, label %28, !dbg !16369

24:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !16347, metadata !DIExpression()) #26, !dbg !16370
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.314, metadata !16352, metadata !DIExpression()) #26, !dbg !16370
  %25 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.314) #27, !dbg !16374
  br i1 %25, label %27, label %26, !dbg !16375

26:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.317, i32 0, i32 0), i32 noundef 194) #27, !dbg !16376
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.314) #27, !dbg !16376
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.317, i32 0, i32 0), i32 noundef 194) #27, !dbg !16376
  unreachable, !dbg !16376

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 %14, metadata !16347, metadata !DIExpression()) #26, !dbg !16370
  call void @llvm.dbg.value(metadata i32 %14, metadata !16361, metadata !DIExpression()) #26, !dbg !16377
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !16379, !srcloc !16367
  call void @llvm.dbg.value(metadata i32 -16, metadata !16313, metadata !DIExpression()), !dbg !16316
  br label %32, !dbg !16380

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !16381
  %30 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !16382
  %31 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.314, [1 x i32] %30, %union.anon* noundef %29, [1 x i64] %1) #27, !dbg !16382
  call void @llvm.dbg.value(metadata i32 %31, metadata !16313, metadata !DIExpression()), !dbg !16316
  br label %32, !dbg !16383

32:                                               ; preds = %22, %27, %28
  %33 = phi i32 [ 0, %22 ], [ -16, %27 ], [ %31, %28 ], !dbg !16316
  call void @llvm.dbg.value(metadata i32 %33, metadata !16313, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.label(metadata !16315), !dbg !16384
  ret i32 %33, !dbg !16385
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !16386 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !16388, metadata !DIExpression()), !dbg !16391
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.314, metadata !16253, metadata !DIExpression()) #26, !dbg !16392
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16394, !srcloc !16268
  call void @llvm.dbg.value(metadata i32 undef, metadata !16265, metadata !DIExpression()) #26, !dbg !16396
  call void @llvm.dbg.value(metadata i32 undef, metadata !16266, metadata !DIExpression()) #26, !dbg !16396
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #26, !dbg !16392
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.314) #27, !dbg !16397
  br i1 %3, label %5, label %4, !dbg !16398

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.317, i32 0, i32 0), i32 noundef 148) #27, !dbg !16399
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.318, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.314) #27, !dbg !16399
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.317, i32 0, i32 0), i32 noundef 148) #27, !dbg !16399
  unreachable, !dbg !16399

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16265, metadata !DIExpression()) #26, !dbg !16396
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #26, !dbg !16392
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.314) #27, !dbg !16400
  call void @llvm.dbg.value(metadata i32 undef, metadata !16390, metadata !DIExpression()), !dbg !16391
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !16401
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16389, metadata !DIExpression()), !dbg !16391
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16403
  br i1 %8, label %14, label %9, !dbg !16405

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %12, %9 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !16282, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i32 -11, metadata !16287, metadata !DIExpression()), !dbg !16406
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 7, i32 1, !dbg !16408
  store i32 -11, i32* %11, align 4, !dbg !16409
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #27, !dbg !16410
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !16401
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !16389, metadata !DIExpression()), !dbg !16391
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !16403
  br i1 %13, label %14, label %9, !dbg !16405, !llvm.loop !16411

14:                                               ; preds = %9, %5
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !16394
  call void @llvm.dbg.value(metadata i32 %15, metadata !16265, metadata !DIExpression()) #26, !dbg !16396
  call void @llvm.dbg.value(metadata i32 %15, metadata !16259, metadata !DIExpression()) #26, !dbg !16392
  call void @llvm.dbg.value(metadata i32 %15, metadata !16390, metadata !DIExpression()), !dbg !16391
  %16 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !16414
  store i32 0, i32* %16, align 4, !dbg !16415
  %17 = insertvalue [1 x i32] poison, i32 %15, 0, !dbg !16416
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.314, [1 x i32] %17) #27, !dbg !16416
  ret void, !dbg !16417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !16418 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16422, metadata !DIExpression()), !dbg !16426
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16423, metadata !DIExpression()), !dbg !16426
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16427
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !16427
  %5 = load i8, i8* %4, align 2, !dbg !16427
  call void @llvm.dbg.value(metadata i8 %5, metadata !16424, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16426
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16428
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !16428
  %8 = load i8, i8* %7, align 2, !dbg !16428
  call void @llvm.dbg.value(metadata i8 %8, metadata !16425, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16426
  %9 = icmp eq i8 %8, %5, !dbg !16429
  %10 = sext i8 %5 to i32, !dbg !16431
  %11 = sext i8 %8 to i32, !dbg !16431
  %12 = sub nsw i32 %11, %10, !dbg !16431
  %13 = select i1 %9, i32 0, i32 %12, !dbg !16431
  ret i32 %13, !dbg !16432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !16433 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16437, metadata !DIExpression()), !dbg !16438
  %2 = tail call fastcc i32 @slice_time() #28, !dbg !16439
  %3 = icmp eq i32 %2, 0, !dbg !16441
  br i1 %3, label %8, label %4, !dbg !16442

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !16443
  %6 = add i32 %5, %2, !dbg !16445
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16446
  %7 = tail call fastcc i32 @slice_time() #28, !dbg !16447
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !16448
  br label %8, !dbg !16449

8:                                                ; preds = %4, %1
  ret void, !dbg !16450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #13 !dbg !16451 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16455, metadata !DIExpression()), !dbg !16457
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !16458
  call void @llvm.dbg.value(metadata i32 %1, metadata !16456, metadata !DIExpression()), !dbg !16457
  ret i32 %1, !dbg !16459
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16460 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16464, metadata !DIExpression()), !dbg !16473
  call void @llvm.dbg.value(metadata i32 %1, metadata !16465, metadata !DIExpression()), !dbg !16473
  call void @llvm.dbg.value(metadata i32 0, metadata !16466, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !16482
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16484, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !16491
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !16491
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !16482
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16492
  br i1 %4, label %6, label %5, !dbg !16495

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !16496
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16496
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !16496
  unreachable, !dbg !16496

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !16491
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !16482
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16498
  call void @llvm.dbg.value(metadata i32 undef, metadata !16472, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata i32 undef, metadata !16466, metadata !DIExpression()), !dbg !16474
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16499
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #28, !dbg !16502
  %8 = icmp sgt i32 %0, 0, !dbg !16503
  %9 = icmp sgt i32 %7, 2, !dbg !16505
  %10 = select i1 %9, i32 %7, i32 2, !dbg !16505
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !16505
  store i32 %11, i32* @slice_ticks, align 4, !dbg !16506
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !16507
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !16508
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !16515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !16515
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16517
  br i1 %12, label %14, label %13, !dbg !16520

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !16521
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16521
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !16521
  unreachable, !dbg !16521

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !16484
  call void @llvm.dbg.value(metadata i32 %15, metadata !16487, metadata !DIExpression()) #26, !dbg !16491
  call void @llvm.dbg.value(metadata i32 %15, metadata !16481, metadata !DIExpression()) #26, !dbg !16482
  call void @llvm.dbg.value(metadata i32 %15, metadata !16472, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !16515
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !16526
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !16528, !srcloc !16529
  call void @llvm.dbg.value(metadata i32 1, metadata !16466, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata i32 undef, metadata !16466, metadata !DIExpression()), !dbg !16474
  ret void, !dbg !16530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !16531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16533, metadata !DIExpression()), !dbg !16534
  call void @llvm.dbg.value(metadata i32 %0, metadata !16535, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16550
  call void @llvm.dbg.value(metadata i32 1000, metadata !16538, metadata !DIExpression()), !dbg !16550
  call void @llvm.dbg.value(metadata i32 10000, metadata !16539, metadata !DIExpression()), !dbg !16550
  call void @llvm.dbg.value(metadata i8 1, metadata !16540, metadata !DIExpression()), !dbg !16550
  call void @llvm.dbg.value(metadata i1 true, metadata !16541, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16550
  call void @llvm.dbg.value(metadata i1 true, metadata !16542, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16550
  call void @llvm.dbg.value(metadata i8 0, metadata !16543, metadata !DIExpression()), !dbg !16550
  call void @llvm.dbg.value(metadata i1 true, metadata !16544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16550
  call void @llvm.dbg.value(metadata i1 false, metadata !16545, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16550
  call void @llvm.dbg.value(metadata i64 0, metadata !16546, metadata !DIExpression()), !dbg !16550
  call void @llvm.dbg.value(metadata i64 0, metadata !16546, metadata !DIExpression()), !dbg !16550
  %2 = mul i32 %0, 10, !dbg !16552
  ret i32 %2, !dbg !16558
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !16559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16561, metadata !DIExpression()), !dbg !16563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !16564
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16566, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !16568
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !16568
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !16564
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16569
  br i1 %3, label %5, label %4, !dbg !16570

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !16571
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16571
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !16571
  unreachable, !dbg !16571

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16566
  call void @llvm.dbg.value(metadata i32 %6, metadata !16487, metadata !DIExpression()) #26, !dbg !16568
  call void @llvm.dbg.value(metadata i32 %6, metadata !16481, metadata !DIExpression()) #26, !dbg !16564
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16572
  call void @llvm.dbg.value(metadata i32 %6, metadata !16562, metadata !DIExpression()), !dbg !16563
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16573
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16575
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !16576
  br i1 %9, label %10, label %14, !dbg !16577

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !16578
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !16580
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !16580
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16582
  br i1 %11, label %13, label %12, !dbg !16583

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !16584
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16584
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !16584
  unreachable, !dbg !16584

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !16509, metadata !DIExpression()) #26, !dbg !16580
  call void @llvm.dbg.value(metadata i32 %6, metadata !16523, metadata !DIExpression()) #26, !dbg !16585
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !16587, !srcloc !16529
  br label %33, !dbg !16588

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16589
  %15 = tail call fastcc i32 @slice_time() #28, !dbg !16590
  %16 = icmp eq i32 %15, 0, !dbg !16590
  br i1 %16, label %27, label %17, !dbg !16592

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #28, !dbg !16593
  br i1 %18, label %19, label %27, !dbg !16594

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16595
  %21 = icmp sgt i32 %20, %0, !dbg !16598
  br i1 %21, label %25, label %22, !dbg !16599

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16600
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #28, !dbg !16600
  call void @llvm.dbg.value(metadata i32 %24, metadata !16562, metadata !DIExpression()), !dbg !16563
  br label %28, !dbg !16602

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !16603
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16603
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16605
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !16563
  call void @llvm.dbg.value(metadata i32 %29, metadata !16562, metadata !DIExpression()), !dbg !16563
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !16607
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !16607
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16609
  br i1 %30, label %32, label %31, !dbg !16610

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !16611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !16611
  unreachable, !dbg !16611

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !16509, metadata !DIExpression()) #26, !dbg !16607
  call void @llvm.dbg.value(metadata i32 %29, metadata !16523, metadata !DIExpression()) #26, !dbg !16612
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #26, !dbg !16614, !srcloc !16529
  br label %33, !dbg !16615

33:                                               ; preds = %32, %13
  ret void, !dbg !16615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #13 !dbg !16616 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16620, metadata !DIExpression()), !dbg !16622
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #28, !dbg !16623
  %3 = icmp eq i32 %2, 0, !dbg !16623
  br i1 %3, label %16, label %4, !dbg !16624

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #28, !dbg !16625
  br i1 %5, label %16, label %6, !dbg !16626

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16627
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !16627
  %9 = load i8, i8* %8, align 2, !dbg !16627
  %10 = sext i8 %9 to i32, !dbg !16628
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !16629
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #28, !dbg !16630
  br i1 %12, label %16, label %13, !dbg !16631

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #28, !dbg !16632
  %15 = xor i1 %14, true, !dbg !16633
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !16622
  call void @llvm.dbg.value(metadata i1 %17, metadata !16621, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16622
  ret i1 %17, !dbg !16634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !16635 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16639, metadata !DIExpression()), !dbg !16641
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16642
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16640, metadata !DIExpression()), !dbg !16641
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #28, !dbg !16643
  br i1 %3, label %5, label %4, !dbg !16645

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #28, !dbg !16646
  br label %5, !dbg !16648

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !16639, metadata !DIExpression()), !dbg !16641
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !16649
  ret i32 %6, !dbg !16650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16651 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16653, metadata !DIExpression()), !dbg !16655
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16656
  %3 = load i8, i8* %2, align 1, !dbg !16656
  call void @llvm.dbg.value(metadata i8 %3, metadata !16654, metadata !DIExpression()), !dbg !16655
  %4 = and i8 %3, 31, !dbg !16657
  %5 = icmp ne i8 %4, 0, !dbg !16658
  ret i1 %5, !dbg !16659
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16660 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16662, metadata !DIExpression()), !dbg !16663
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16664
  br i1 %2, label %3, label %7, !dbg !16666

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16667, metadata !DIExpression()) #26, !dbg !16670
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16673
  %5 = load i8, i8* %4, align 1, !dbg !16674
  %6 = and i8 %5, 127, !dbg !16674
  store i8 %6, i8* %4, align 1, !dbg !16674
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16675, metadata !DIExpression()) #26, !dbg !16678
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16682
  br label %7, !dbg !16683

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16684, metadata !DIExpression()) #26, !dbg !16687
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16689
  %9 = load i8, i8* %8, align 1, !dbg !16690
  %10 = or i8 %9, -128, !dbg !16690
  store i8 %10, i8* %8, align 1, !dbg !16690
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16691, metadata !DIExpression()) #26, !dbg !16694
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16698, metadata !DIExpression()) #26, !dbg !16706
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16704, metadata !DIExpression()) #26, !dbg !16706
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16708
  br i1 %11, label %12, label %13, !dbg !16711

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 186) #27, !dbg !16712
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 186) #27, !dbg !16712
  unreachable, !dbg !16712

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.334(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16714
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16705, metadata !DIExpression()) #26, !dbg !16706
  %15 = icmp eq %struct._dnode* %14, null, !dbg !16716
  br i1 %15, label %26, label %16, !dbg !16714

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16705, metadata !DIExpression()) #26, !dbg !16706
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !16718
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !16705, metadata !DIExpression()) #26, !dbg !16706
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #27, !dbg !16719
  %20 = icmp sgt i32 %19, 0, !dbg !16722
  br i1 %20, label %21, label %23, !dbg !16723

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16724
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #27, !dbg !16726
  br label %28, !dbg !16727

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #27, !dbg !16716
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16705, metadata !DIExpression()) #26, !dbg !16706
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16716
  br i1 %25, label %26, label %16, !dbg !16714, !llvm.loop !16728

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16730
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #27, !dbg !16731
  br label %28, !dbg !16732

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16733
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !16734
  %31 = zext i1 %30 to i32, !dbg !16734
  tail call fastcc void @update_cache(i32 noundef %31) #28, !dbg !16735
  ret void, !dbg !16736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16737 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16739, metadata !DIExpression()), !dbg !16740
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #28, !dbg !16741
  ret i1 %2, !dbg !16742
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16743 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16745, metadata !DIExpression()), !dbg !16747
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16746, metadata !DIExpression()), !dbg !16747
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !16748
  br i1 %3, label %4, label %5, !dbg !16751

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1139) #27, !dbg !16752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1139) #27, !dbg !16752
  unreachable, !dbg !16752

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16754
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #28, !dbg !16755
  ret void, !dbg !16756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !16757 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16759, metadata !DIExpression()), !dbg !16760
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16761
  ret i1 %2, !dbg !16762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.334(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !16763 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16767, metadata !DIExpression()), !dbg !16768
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.337(%struct._dnode* noundef %0) #28, !dbg !16769
  br i1 %2, label %6, label %3, !dbg !16769

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16770
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16770
  br label %6, !dbg !16769

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16769
  ret %struct._dnode* %7, !dbg !16771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !16772 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16776, metadata !DIExpression()), !dbg !16780
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16777, metadata !DIExpression()), !dbg !16780
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16781
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16781
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16778, metadata !DIExpression()), !dbg !16780
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16782
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16783
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16784
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16785
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16786
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16787
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16788
  ret void, !dbg !16789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !16790 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16794, metadata !DIExpression()), !dbg !16796
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16795, metadata !DIExpression()), !dbg !16796
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16797
  br i1 %3, label %6, label %4, !dbg !16798

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #28, !dbg !16799
  br label %6, !dbg !16798

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16798
  ret %struct._dnode* %7, !dbg !16800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !16801 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16805, metadata !DIExpression()), !dbg !16808
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16806, metadata !DIExpression()), !dbg !16808
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16809
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16809
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16807, metadata !DIExpression()), !dbg !16808
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16810
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16811
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16812
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16813
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16814
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16815
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16816
  ret void, !dbg !16817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16820, metadata !DIExpression()), !dbg !16822
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16823
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16830, metadata !DIExpression()) #26, !dbg !16833
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16834
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16831, metadata !DIExpression()) #26, !dbg !16833
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !16835
  br i1 %4, label %13, label %5, !dbg !16837

5:                                                ; preds = %1
  %6 = icmp eq %struct.k_thread* %2, null, !dbg !16838
  br i1 %6, label %10, label %7, !dbg !16839

7:                                                ; preds = %5
  %8 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef nonnull %2) #27, !dbg !16840
  %9 = icmp eq i32 %8, 0, !dbg !16840
  br i1 %9, label %10, label %13, !dbg !16841

10:                                               ; preds = %7, %5
  %11 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %3) #27, !dbg !16842
  br i1 %11, label %12, label %13, !dbg !16845

12:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16846
  br label %13

13:                                               ; preds = %1, %7, %10, %12
  %14 = phi %struct.k_thread* [ %2, %12 ], [ %2, %7 ], [ %2, %1 ], [ %3, %10 ], !dbg !16833
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16830, metadata !DIExpression()) #26, !dbg !16833
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16848
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16849
  %17 = select i1 %15, %struct.k_thread* %16, %struct.k_thread* %14, !dbg !16849
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !16821, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !16850, metadata !DIExpression()) #26, !dbg !16856
  call void @llvm.dbg.value(metadata i32 %0, metadata !16855, metadata !DIExpression()) #26, !dbg !16856
  %18 = icmp eq i32 %0, 0, !dbg !16859
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16861
  br i1 %18, label %20, label %33, !dbg !16862

20:                                               ; preds = %13
  %21 = icmp eq %struct.k_thread* %19, null, !dbg !16863
  br i1 %21, label %22, label %23, !dbg !16866

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 137) #27, !dbg !16867
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.336, i32 0, i32 0)) #27, !dbg !16867
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 137) #27, !dbg !16867
  unreachable, !dbg !16867

23:                                               ; preds = %20
  %24 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %19) #27, !dbg !16869
  br i1 %24, label %33, label %25, !dbg !16871

25:                                               ; preds = %23
  %26 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %17) #27, !dbg !16872
  br i1 %26, label %33, label %27, !dbg !16874

27:                                               ; preds = %25
  %28 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %19) #27, !dbg !16875
  %29 = icmp eq i32 %28, 0, !dbg !16875
  br i1 %29, label %30, label %33, !dbg !16877

30:                                               ; preds = %27
  %31 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %17) #27, !dbg !16878
  %32 = icmp eq i32 %31, 0, !dbg !16878
  br i1 %32, label %37, label %33, !dbg !16879

33:                                               ; preds = %13, %27, %25, %23, %30
  %34 = icmp eq %struct.k_thread* %17, %19, !dbg !16880
  br i1 %34, label %36, label %35, !dbg !16883

35:                                               ; preds = %33
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !16884
  br label %36, !dbg !16886

36:                                               ; preds = %35, %33
  tail call fastcc void @update_metairq_preempt(%struct.k_thread* noundef %17) #28, !dbg !16887
  br label %37, !dbg !16888

37:                                               ; preds = %30, %36
  %38 = phi %struct.k_thread* [ %17, %36 ], [ %19, %30 ], !dbg !16861
  store %struct.k_thread* %38, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16861
  ret void, !dbg !16889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #13 !dbg !16890 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16894, metadata !DIExpression()), !dbg !16897
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16895, metadata !DIExpression()), !dbg !16897
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.334(%struct._dnode* noundef %0) #28, !dbg !16898
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16896, metadata !DIExpression()), !dbg !16897
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16895, metadata !DIExpression()), !dbg !16897
  ret %struct.k_thread* %3, !dbg !16899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_metairq(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16900 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16902, metadata !DIExpression()), !dbg !16903
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16904
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16904
  %4 = load i8, i8* %3, align 2, !dbg !16904
  %5 = icmp slt i8 %4, -15, !dbg !16905
  %6 = zext i1 %5 to i32, !dbg !16905
  ret i32 %6, !dbg !16906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16907 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16909, metadata !DIExpression()), !dbg !16910
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16911
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !16912
  %4 = xor i1 %3, true, !dbg !16913
  ret i1 %4, !dbg !16914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16915 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16917, metadata !DIExpression()), !dbg !16918
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16919
  %3 = load i16, i16* %2, align 2, !dbg !16919
  %4 = icmp ult i16 %3, 128, !dbg !16920
  %5 = zext i1 %4 to i32, !dbg !16920
  ret i32 %5, !dbg !16921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @update_metairq_preempt(%struct.k_thread* noundef %0) unnamed_addr #14 !dbg !16922 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16924, metadata !DIExpression()), !dbg !16925
  %2 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %0) #28, !dbg !16926
  %3 = icmp eq i32 %2, 0, !dbg !16926
  br i1 %3, label %11, label %4, !dbg !16928

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16929
  %6 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %5) #28, !dbg !16930
  %7 = icmp eq i32 %6, 0, !dbg !16930
  br i1 %7, label %8, label %15, !dbg !16931

8:                                                ; preds = %4
  %9 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %5) #28, !dbg !16932
  %10 = icmp eq i32 %9, 0, !dbg !16932
  br i1 %10, label %13, label %15, !dbg !16933

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #28, !dbg !16934
  br i1 %12, label %15, label %13, !dbg !16936

13:                                               ; preds = %11, %8
  %14 = phi %struct.k_thread* [ %5, %8 ], [ null, %11 ]
  store %struct.k_thread* %14, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16937
  br label %15, !dbg !16938

15:                                               ; preds = %13, %4, %8, %11
  ret void, !dbg !16938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16939 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16945, metadata !DIExpression()), !dbg !16946
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16947
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #28, !dbg !16948
  %4 = xor i1 %3, true, !dbg !16949
  ret i1 %4, !dbg !16950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16951 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16957, metadata !DIExpression()), !dbg !16958
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16959
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16959
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16960
  ret i1 %4, !dbg !16961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !16962 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16964, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16965, metadata !DIExpression()), !dbg !16966
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16967
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16967
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16968
  br i1 %5, label %9, label %6, !dbg !16969

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16970
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16970
  br label %9, !dbg !16969

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16969
  ret %struct._dnode* %10, !dbg !16971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.337(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !16972 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16976, metadata !DIExpression()), !dbg !16977
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16978
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16978
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16979
  ret i1 %4, !dbg !16980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !16981 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16985, metadata !DIExpression()), !dbg !16988
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16989
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16989
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16986, metadata !DIExpression()), !dbg !16988
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16990
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16990
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16987, metadata !DIExpression()), !dbg !16988
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16991
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16992
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16993
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16994
  tail call fastcc void @sys_dnode_init.338(%struct._dnode* noundef %0) #28, !dbg !16995
  ret void, !dbg !16996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.338(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !16997 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16999, metadata !DIExpression()), !dbg !17000
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17001
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17002
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17003
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17004
  ret void, !dbg !17005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !17006 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17010, metadata !DIExpression()), !dbg !17012
  call void @llvm.dbg.value(metadata i32 %1, metadata !17011, metadata !DIExpression()), !dbg !17012
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17013
  %4 = load i8, i8* %3, align 1, !dbg !17013
  %5 = zext i8 %4 to i32, !dbg !17014
  %6 = and i32 %5, %1, !dbg !17015
  %7 = icmp ne i32 %6, 0, !dbg !17016
  ret i1 %7, !dbg !17017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !17018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17022, metadata !DIExpression()), !dbg !17024
  call void @llvm.dbg.value(metadata i32 %1, metadata !17023, metadata !DIExpression()), !dbg !17024
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #28, !dbg !17025
  ret i1 %3, !dbg !17026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !17027 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17029, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i32 %1, metadata !17030, metadata !DIExpression()), !dbg !17031
  %3 = icmp slt i32 %0, %1, !dbg !17032
  ret i1 %3, !dbg !17033
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17034 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17036, metadata !DIExpression()), !dbg !17040
  call void @llvm.dbg.value(metadata i32 0, metadata !17037, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17042
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17044, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17046
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17046
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17042
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17047
  br i1 %3, label %5, label %4, !dbg !17048

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17049
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17049
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17049
  unreachable, !dbg !17049

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17046
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17042
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17050
  call void @llvm.dbg.value(metadata i32 undef, metadata !17039, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()), !dbg !17041
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !17051
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17056
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17056
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17058
  br i1 %6, label %8, label %7, !dbg !17059

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17060
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17060
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17060
  unreachable, !dbg !17060

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17044
  call void @llvm.dbg.value(metadata i32 %9, metadata !16487, metadata !DIExpression()) #26, !dbg !17046
  call void @llvm.dbg.value(metadata i32 %9, metadata !16481, metadata !DIExpression()) #26, !dbg !17042
  call void @llvm.dbg.value(metadata i32 %9, metadata !17039, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17056
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !17061
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !17063, !srcloc !16529
  call void @llvm.dbg.value(metadata i32 1, metadata !17037, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()), !dbg !17041
  ret void, !dbg !17064
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17065 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17067, metadata !DIExpression()), !dbg !17068
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !17069
  br i1 %2, label %27, label %3, !dbg !17071

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #28, !dbg !17072
  br i1 %4, label %5, label %27, !dbg !17073

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16684, metadata !DIExpression()) #26, !dbg !17074
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17077
  %7 = load i8, i8* %6, align 1, !dbg !17078
  %8 = or i8 %7, -128, !dbg !17078
  store i8 %8, i8* %6, align 1, !dbg !17078
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16691, metadata !DIExpression()) #26, !dbg !17079
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16698, metadata !DIExpression()) #26, !dbg !17081
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16704, metadata !DIExpression()) #26, !dbg !17081
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !17083
  br i1 %9, label %10, label %11, !dbg !17084

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 186) #27, !dbg !17085
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 186) #27, !dbg !17085
  unreachable, !dbg !17085

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.334(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17086
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16705, metadata !DIExpression()) #26, !dbg !17081
  %13 = icmp eq %struct._dnode* %12, null, !dbg !17087
  br i1 %13, label %24, label %14, !dbg !17086

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16705, metadata !DIExpression()) #26, !dbg !17081
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !17088
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !16705, metadata !DIExpression()) #26, !dbg !17081
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #27, !dbg !17089
  %18 = icmp sgt i32 %17, 0, !dbg !17090
  br i1 %18, label %19, label %21, !dbg !17091

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17092
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #27, !dbg !17093
  br label %26, !dbg !17094

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #27, !dbg !17087
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !16705, metadata !DIExpression()) #26, !dbg !17081
  %23 = icmp eq %struct._dnode* %22, null, !dbg !17087
  br i1 %23, label %24, label %14, !dbg !17086, !llvm.loop !17095

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17097
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #27, !dbg !17098
  br label %26, !dbg !17099

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #28, !dbg !17100
  br label %27, !dbg !17101

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !17102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !17103 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17105, metadata !DIExpression()), !dbg !17106
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #28, !dbg !17107
  br i1 %2, label %6, label %3, !dbg !17108

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #28, !dbg !17109
  %5 = xor i1 %4, true, !dbg !17108
  br label %6, !dbg !17108

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !17110
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17111 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17113, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i32 0, metadata !17114, metadata !DIExpression()), !dbg !17118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17119
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17121, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17123
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17123
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17119
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17124
  br i1 %3, label %5, label %4, !dbg !17125

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17126
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17126
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17126
  unreachable, !dbg !17126

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17123
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17119
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17127
  call void @llvm.dbg.value(metadata i32 undef, metadata !17116, metadata !DIExpression()), !dbg !17118
  call void @llvm.dbg.value(metadata i32 undef, metadata !17114, metadata !DIExpression()), !dbg !17118
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #28, !dbg !17128
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17131
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17131
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17133
  br i1 %6, label %8, label %7, !dbg !17134

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17135
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17135
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17135
  unreachable, !dbg !17135

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17121
  call void @llvm.dbg.value(metadata i32 %9, metadata !16487, metadata !DIExpression()) #26, !dbg !17123
  call void @llvm.dbg.value(metadata i32 %9, metadata !16481, metadata !DIExpression()) #26, !dbg !17119
  call void @llvm.dbg.value(metadata i32 %9, metadata !17116, metadata !DIExpression()), !dbg !17118
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17131
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !17136
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !17138, !srcloc !16529
  call void @llvm.dbg.value(metadata i32 1, metadata !17114, metadata !DIExpression()), !dbg !17118
  call void @llvm.dbg.value(metadata i32 undef, metadata !17114, metadata !DIExpression()), !dbg !17118
  ret void, !dbg !17139
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17140 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17142, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17145
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17147, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17149
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17149
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17145
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17150
  br i1 %3, label %5, label %4, !dbg !17151

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17152
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17152
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17152
  unreachable, !dbg !17152

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17147
  call void @llvm.dbg.value(metadata i32 %6, metadata !16487, metadata !DIExpression()) #26, !dbg !17149
  call void @llvm.dbg.value(metadata i32 %6, metadata !16481, metadata !DIExpression()) #26, !dbg !17145
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17153
  call void @llvm.dbg.value(metadata i32 %6, metadata !17143, metadata !DIExpression()), !dbg !17144
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #28, !dbg !17154
  br i1 %7, label %8, label %12, !dbg !17156

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17157
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17160
  br i1 %9, label %11, label %10, !dbg !17161

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17162
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17162
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17162
  unreachable, !dbg !17162

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !16509, metadata !DIExpression()) #26, !dbg !17157
  call void @llvm.dbg.value(metadata i32 %6, metadata !16523, metadata !DIExpression()) #26, !dbg !17163
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !17165, !srcloc !16529
  br label %14, !dbg !17166

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.343(%struct.k_thread* noundef %0) #28, !dbg !17167
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !17168
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17169
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #28, !dbg !17169
  br label %14, !dbg !17170

14:                                               ; preds = %12, %11
  ret void, !dbg !17170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !17171 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17173, metadata !DIExpression()), !dbg !17174
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17175
  %3 = load i8, i8* %2, align 1, !dbg !17175
  %4 = and i8 %3, 4, !dbg !17176
  %5 = icmp eq i8 %4, 0, !dbg !17177
  ret i1 %5, !dbg !17178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.343(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !17179 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17181, metadata !DIExpression()), !dbg !17182
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17183
  %3 = load i8, i8* %2, align 1, !dbg !17184
  %4 = and i8 %3, -5, !dbg !17184
  store i8 %4, i8* %2, align 1, !dbg !17184
  ret void, !dbg !17185
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !17186 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !17189, metadata !DIExpression()), !dbg !17190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17188, metadata !DIExpression()), !dbg !17190
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #28, !dbg !17191
  br i1 %4, label %5, label %12, !dbg !17193

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #28, !dbg !17194
  br i1 %6, label %7, label %12, !dbg !17195

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !17196, metadata !DIExpression()) #26, !dbg !17202
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17201, metadata !DIExpression()) #26, !dbg !17202
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17205, metadata !DIExpression()) #26, !dbg !17210
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !17212
  br i1 %8, label %10, label %9, !dbg !17215

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !17216
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !17216
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !17216
  unreachable, !dbg !17216

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !17196, metadata !DIExpression()) #26, !dbg !17202
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17218
  br label %16, !dbg !17219

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16514, metadata !DIExpression()) #26, !dbg !17220
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !17223
  br i1 %13, label %15, label %14, !dbg !17224

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17225
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !17225
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17225
  unreachable, !dbg !17225

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !16509, metadata !DIExpression()) #26, !dbg !17220
  call void @llvm.dbg.value(metadata i32 %3, metadata !16523, metadata !DIExpression()) #26, !dbg !17226
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !17228, !srcloc !16529
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !17229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !17230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17234, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.value(metadata i32 %0, metadata !17236, metadata !DIExpression()), !dbg !17241
  %2 = icmp eq i32 %0, 0, !dbg !17243
  br i1 %2, label %3, label %6, !dbg !17244

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17245, !srcloc !17252
  call void @llvm.dbg.value(metadata i32 %4, metadata !17248, metadata !DIExpression()) #26, !dbg !17253
  %5 = icmp eq i32 %4, 0, !dbg !17254
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !17235
  ret i1 %7, !dbg !17255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #13 !dbg !17256 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17259
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17258, metadata !DIExpression()), !dbg !17260
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17261
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !17262
  ret i1 %3, !dbg !17263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !17264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17266, metadata !DIExpression()), !dbg !17268
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !17269
  call void @llvm.dbg.value(metadata i32 %2, metadata !17267, metadata !DIExpression()), !dbg !17268
  ret i32 %2, !dbg !17270
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17271 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17273, metadata !DIExpression()), !dbg !17277
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !17278
  call void @llvm.dbg.value(metadata i32 0, metadata !17274, metadata !DIExpression()), !dbg !17279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17280
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17282, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17284
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17284
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17280
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17285
  br i1 %4, label %6, label %5, !dbg !17286

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17287
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17287
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17287
  unreachable, !dbg !17287

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !17282
  call void @llvm.dbg.value(metadata i32 %7, metadata !16487, metadata !DIExpression()) #26, !dbg !17284
  call void @llvm.dbg.value(metadata i32 %7, metadata !16481, metadata !DIExpression()) #26, !dbg !17280
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17288
  call void @llvm.dbg.value(metadata i32 %7, metadata !17276, metadata !DIExpression()), !dbg !17279
  call void @llvm.dbg.value(metadata i32 undef, metadata !17274, metadata !DIExpression()), !dbg !17279
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !17289
  br i1 %8, label %9, label %13, !dbg !17293

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16667, metadata !DIExpression()) #26, !dbg !17294
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17297
  %11 = load i8, i8* %10, align 1, !dbg !17298
  %12 = and i8 %11, 127, !dbg !17298
  store i8 %12, i8* %10, align 1, !dbg !17298
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16675, metadata !DIExpression()) #26, !dbg !17299
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17301
  br label %13, !dbg !17302

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #28, !dbg !17303
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17304
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !17305
  %16 = zext i1 %15 to i32, !dbg !17305
  tail call fastcc void @update_cache(i32 noundef %16) #28, !dbg !17306
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17307
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17309
  br i1 %17, label %19, label %18, !dbg !17310

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17311
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17311
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17311
  unreachable, !dbg !17311

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !16509, metadata !DIExpression()) #26, !dbg !17307
  call void @llvm.dbg.value(metadata i32 %7, metadata !16523, metadata !DIExpression()) #26, !dbg !17312
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #26, !dbg !17314, !srcloc !16529
  call void @llvm.dbg.value(metadata i32 1, metadata !17274, metadata !DIExpression()), !dbg !17279
  call void @llvm.dbg.value(metadata i32 undef, metadata !17274, metadata !DIExpression()), !dbg !17279
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17315
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !17317
  br i1 %21, label %22, label %23, !dbg !17318

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17319
  br label %23, !dbg !17321

23:                                               ; preds = %22, %19
  ret void, !dbg !17322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17323 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17325, metadata !DIExpression()), !dbg !17326
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17327
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !17328
  ret i32 %3, !dbg !17329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !17330 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17332, metadata !DIExpression()), !dbg !17333
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17334
  %3 = load i8, i8* %2, align 1, !dbg !17335
  %4 = or i8 %3, 16, !dbg !17335
  store i8 %4, i8* %2, align 1, !dbg !17335
  ret void, !dbg !17336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !17337 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17338, !srcloc !16490
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17338
  call void @llvm.dbg.value(metadata i32 %2, metadata !16487, metadata !DIExpression()) #26, !dbg !17340
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17340
  tail call void @z_reschedule_irqlock(i32 noundef %2) #28, !dbg !17341
  ret void, !dbg !17342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !17343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17345, metadata !DIExpression()), !dbg !17346
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #28, !dbg !17347
  br i1 %2, label %3, label %5, !dbg !17349

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #28, !dbg !17350
  br label %6, !dbg !17352

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !16523, metadata !DIExpression()) #26, !dbg !17353
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #26, !dbg !17356, !srcloc !16529
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !17357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17358 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17360, metadata !DIExpression()), !dbg !17362
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17363
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17365, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17367
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17367
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17363
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17368
  br i1 %3, label %5, label %4, !dbg !17369

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17370
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17370
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17370
  unreachable, !dbg !17370

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17365
  call void @llvm.dbg.value(metadata i32 %6, metadata !16487, metadata !DIExpression()) #26, !dbg !17367
  call void @llvm.dbg.value(metadata i32 %6, metadata !16481, metadata !DIExpression()) #26, !dbg !17363
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17371
  call void @llvm.dbg.value(metadata i32 %6, metadata !17361, metadata !DIExpression()), !dbg !17362
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #28, !dbg !17372
  br i1 %7, label %12, label %8, !dbg !17374

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17375
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17375
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17378
  br i1 %9, label %11, label %10, !dbg !17379

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17380
  unreachable, !dbg !17380

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !16509, metadata !DIExpression()) #26, !dbg !17375
  call void @llvm.dbg.value(metadata i32 %6, metadata !16523, metadata !DIExpression()) #26, !dbg !17381
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !17383, !srcloc !16529
  br label %14, !dbg !17384

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #28, !dbg !17385
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !17386
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17387
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #28, !dbg !17387
  br label %14, !dbg !17388

14:                                               ; preds = %12, %11
  ret void, !dbg !17388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !17389 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17391, metadata !DIExpression()), !dbg !17392
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17393
  %3 = load i8, i8* %2, align 1, !dbg !17393
  %4 = and i8 %3, 16, !dbg !17394
  %5 = icmp ne i8 %4, 0, !dbg !17395
  ret i1 %5, !dbg !17396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !17397 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17399, metadata !DIExpression()), !dbg !17400
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17401
  %3 = load i8, i8* %2, align 1, !dbg !17402
  %4 = and i8 %3, -17, !dbg !17402
  store i8 %4, i8* %2, align 1, !dbg !17402
  ret void, !dbg !17403
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17404 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17414, metadata !DIExpression()), !dbg !17418
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17412, metadata !DIExpression()), !dbg !17418
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !17413, metadata !DIExpression()), !dbg !17418
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17419
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !17419
  br i1 %5, label %9, label %6, !dbg !17419

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #28, !dbg !17419
  br i1 %7, label %9, label %8, !dbg !17422

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 773) #27, !dbg !17423
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 773) #27, !dbg !17423
  unreachable, !dbg !17423

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !17415, metadata !DIExpression()), !dbg !17425
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17426
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17428, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17430
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17430
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17426
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17431
  br i1 %11, label %13, label %12, !dbg !17432

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17433
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17433
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17433
  unreachable, !dbg !17433

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17430
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17426
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17434
  call void @llvm.dbg.value(metadata i32 undef, metadata !17417, metadata !DIExpression()), !dbg !17425
  call void @llvm.dbg.value(metadata i32 undef, metadata !17415, metadata !DIExpression()), !dbg !17425
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #28, !dbg !17435
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17438
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17440
  br i1 %14, label %16, label %15, !dbg !17441

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17442
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17442
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17442
  unreachable, !dbg !17442

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !17428
  call void @llvm.dbg.value(metadata i32 %17, metadata !16487, metadata !DIExpression()) #26, !dbg !17430
  call void @llvm.dbg.value(metadata i32 %17, metadata !16481, metadata !DIExpression()) #26, !dbg !17426
  call void @llvm.dbg.value(metadata i32 %17, metadata !17417, metadata !DIExpression()), !dbg !17425
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17438
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !17443
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #26, !dbg !17445, !srcloc !16529
  call void @llvm.dbg.value(metadata i32 1, metadata !17415, metadata !DIExpression()), !dbg !17425
  call void @llvm.dbg.value(metadata i32 undef, metadata !17415, metadata !DIExpression()), !dbg !17425
  ret void, !dbg !17446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !17447 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17449, metadata !DIExpression()), !dbg !17450
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17451
  %3 = load i8, i8* %2, align 1, !dbg !17451
  %4 = and i8 %3, 1, !dbg !17452
  %5 = icmp ne i8 %4, 0, !dbg !17453
  ret i1 %5, !dbg !17454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !17455 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17459, metadata !DIExpression()), !dbg !17460
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17457, metadata !DIExpression()), !dbg !17460
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !17458, metadata !DIExpression()), !dbg !17460
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #28, !dbg !17461
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #28, !dbg !17462
  ret void, !dbg !17463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !17464 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17468, metadata !DIExpression()), !dbg !17470
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !17469, metadata !DIExpression()), !dbg !17470
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #28, !dbg !17471
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #28, !dbg !17472
  %3 = icmp eq %union.anon* %1, null, !dbg !17473
  br i1 %3, label %24, label %4, !dbg !17475

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17476
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !17478
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !17479
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16698, metadata !DIExpression()) #26, !dbg !17480
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16704, metadata !DIExpression()) #26, !dbg !17480
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !17482
  br i1 %7, label %8, label %9, !dbg !17483

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 186) #27, !dbg !17484
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 186) #27, !dbg !17484
  unreachable, !dbg !17484

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.334(%struct._dnode* noundef nonnull %6) #27, !dbg !17485
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16705, metadata !DIExpression()) #26, !dbg !17480
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17486
  br i1 %11, label %22, label %12, !dbg !17485

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16705, metadata !DIExpression()) #26, !dbg !17480
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17487
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16705, metadata !DIExpression()) #26, !dbg !17480
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #27, !dbg !17488
  %16 = icmp sgt i32 %15, 0, !dbg !17489
  br i1 %16, label %17, label %19, !dbg !17490

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17491
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !17492
  br label %24, !dbg !17493

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #27, !dbg !17486
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16705, metadata !DIExpression()) #26, !dbg !17480
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17486
  br i1 %21, label %22, label %12, !dbg !17485, !llvm.loop !17494

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17496
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #27, !dbg !17497
  br label %24, !dbg !17498

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !17499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !17500 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !17505, metadata !DIExpression()), !dbg !17506
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17504, metadata !DIExpression()), !dbg !17506
  %4 = icmp eq i64 %3, -1, !dbg !17507
  br i1 %4, label %6, label %5, !dbg !17509

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.347(%struct.k_thread* noundef %0, [1 x i64] %1) #28, !dbg !17510
  br label %6, !dbg !17512

6:                                                ; preds = %5, %2
  ret void, !dbg !17513
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.347(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !17514 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17517, metadata !DIExpression()), !dbg !17518
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17516, metadata !DIExpression()), !dbg !17518
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17519
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !17520
  ret void, !dbg !17521
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !17522 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17524, metadata !DIExpression()), !dbg !17532
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !17533
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !17533
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17525, metadata !DIExpression()), !dbg !17532
  call void @llvm.dbg.value(metadata i32 0, metadata !17526, metadata !DIExpression()), !dbg !17534
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17535
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17537, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17539
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17539
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17535
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17540
  br i1 %5, label %7, label %6, !dbg !17541

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17542
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17542
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17542
  unreachable, !dbg !17542

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17539
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17535
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17543
  call void @llvm.dbg.value(metadata i32 undef, metadata !17528, metadata !DIExpression()), !dbg !17534
  call void @llvm.dbg.value(metadata i32 undef, metadata !17526, metadata !DIExpression()), !dbg !17534
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !17544
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !17545
  %10 = load i8, i8* %9, align 1, !dbg !17545
  %11 = and i8 %10, 40, !dbg !17546
  %12 = icmp eq i8 %11, 0, !dbg !17546
  call void @llvm.dbg.value(metadata i1 %12, metadata !17529, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17547
  br i1 %12, label %13, label %20, !dbg !17548

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !17549
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !17549
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !17549
  %17 = icmp eq %union.anon* %16, null, !dbg !17553
  br i1 %17, label %19, label %18, !dbg !17554

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #28, !dbg !17555
  br label %19, !dbg !17557

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.343(%struct.k_thread* noundef nonnull %3) #28, !dbg !17558
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #28, !dbg !17559
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #28, !dbg !17560
  br label %20, !dbg !17561

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17562
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17562
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17564
  br i1 %21, label %23, label %22, !dbg !17565

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17566
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17566
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17566
  unreachable, !dbg !17566

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !17537
  call void @llvm.dbg.value(metadata i32 %24, metadata !16487, metadata !DIExpression()) #26, !dbg !17539
  call void @llvm.dbg.value(metadata i32 %24, metadata !16481, metadata !DIExpression()) #26, !dbg !17535
  call void @llvm.dbg.value(metadata i32 %24, metadata !17528, metadata !DIExpression()), !dbg !17534
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17562
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !17567
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #26, !dbg !17569, !srcloc !16529
  call void @llvm.dbg.value(metadata i32 1, metadata !17526, metadata !DIExpression()), !dbg !17534
  call void @llvm.dbg.value(metadata i32 undef, metadata !17526, metadata !DIExpression()), !dbg !17534
  ret void, !dbg !17570
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17571 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17573, metadata !DIExpression()), !dbg !17574
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #28, !dbg !17575
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !17576
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #28, !dbg !17577
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17578
  store %union.anon* null, %union.anon** %3, align 8, !dbg !17579
  ret void, !dbg !17580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !17581 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17585, metadata !DIExpression()), !dbg !17586
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17587
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !17587
  %4 = icmp eq %union.anon* %3, null, !dbg !17587
  br i1 %4, label %5, label %6, !dbg !17590

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 726) #27, !dbg !17591
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 726) #27, !dbg !17591
  unreachable, !dbg !17591

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !17593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !17594 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17596, metadata !DIExpression()), !dbg !17597
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17598
  %3 = load i8, i8* %2, align 1, !dbg !17599
  %4 = and i8 %3, -3, !dbg !17599
  store i8 %4, i8* %2, align 1, !dbg !17599
  ret void, !dbg !17600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17601 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17603, metadata !DIExpression()), !dbg !17604
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !17605
  br i1 %2, label %3, label %7, !dbg !17607

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16667, metadata !DIExpression()) #26, !dbg !17608
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17611
  %5 = load i8, i8* %4, align 1, !dbg !17612
  %6 = and i8 %5, 127, !dbg !17612
  store i8 %6, i8* %4, align 1, !dbg !17612
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16675, metadata !DIExpression()) #26, !dbg !17613
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17615
  br label %7, !dbg !17616

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17617
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !17618
  %10 = zext i1 %9 to i32, !dbg !17618
  tail call fastcc void @update_cache(i32 noundef %10) #28, !dbg !17619
  ret void, !dbg !17620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !17621 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17623, metadata !DIExpression()), !dbg !17624
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17625
  %3 = load i8, i8* %2, align 1, !dbg !17626
  %4 = or i8 %3, 2, !dbg !17626
  store i8 %4, i8* %2, align 1, !dbg !17626
  ret void, !dbg !17627
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #25 !dbg !17628 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17630, metadata !DIExpression()), !dbg !17634
  call void @llvm.dbg.value(metadata i32 0, metadata !17631, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17636
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17638, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17640
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17640
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17636
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17641
  br i1 %3, label %5, label %4, !dbg !17642

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17643
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17643
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17643
  unreachable, !dbg !17643

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17640
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17636
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17644
  call void @llvm.dbg.value(metadata i32 undef, metadata !17633, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata i32 undef, metadata !17631, metadata !DIExpression()), !dbg !17635
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #28, !dbg !17645
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17648
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17648
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17650
  br i1 %6, label %8, label %7, !dbg !17651

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17652
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17652
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17652
  unreachable, !dbg !17652

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17638
  call void @llvm.dbg.value(metadata i32 %9, metadata !16487, metadata !DIExpression()) #26, !dbg !17640
  call void @llvm.dbg.value(metadata i32 %9, metadata !16481, metadata !DIExpression()) #26, !dbg !17636
  call void @llvm.dbg.value(metadata i32 %9, metadata !17633, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17648
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !17653
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !17655, !srcloc !16529
  call void @llvm.dbg.value(metadata i32 1, metadata !17631, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata i32 undef, metadata !17631, metadata !DIExpression()), !dbg !17635
  ret void, !dbg !17656
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17657 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17663, metadata !DIExpression()), !dbg !17668
  call void @llvm.dbg.value(metadata i32 %0, metadata !17661, metadata !DIExpression()), !dbg !17668
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !17662, metadata !DIExpression()), !dbg !17668
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17669
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #28, !dbg !17670
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17671
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17672
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #28, !dbg !17673
  call void @llvm.dbg.value(metadata i32 %6, metadata !17664, metadata !DIExpression()), !dbg !17668
  call void @llvm.dbg.value(metadata i32 0, metadata !17665, metadata !DIExpression()), !dbg !17674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17675
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17677, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17679
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17679
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17675
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17680
  br i1 %8, label %10, label %9, !dbg !17681

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17682
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17682
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17682
  unreachable, !dbg !17682

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17679
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17675
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17683
  call void @llvm.dbg.value(metadata i32 undef, metadata !17667, metadata !DIExpression()), !dbg !17674
  call void @llvm.dbg.value(metadata i32 undef, metadata !17665, metadata !DIExpression()), !dbg !17674
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !17684
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17688
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !17689
  br i1 %13, label %14, label %15, !dbg !17690

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !17691
  br label %15, !dbg !17693

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17694
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17694
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17696
  br i1 %16, label %18, label %17, !dbg !17697

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17698
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17698
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17698
  unreachable, !dbg !17698

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !17677
  call void @llvm.dbg.value(metadata i32 %19, metadata !16487, metadata !DIExpression()) #26, !dbg !17679
  call void @llvm.dbg.value(metadata i32 %19, metadata !16481, metadata !DIExpression()) #26, !dbg !17675
  call void @llvm.dbg.value(metadata i32 %19, metadata !17667, metadata !DIExpression()), !dbg !17674
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17694
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !17699
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #26, !dbg !17701, !srcloc !16529
  call void @llvm.dbg.value(metadata i32 1, metadata !17665, metadata !DIExpression()), !dbg !17674
  call void @llvm.dbg.value(metadata i32 undef, metadata !17665, metadata !DIExpression()), !dbg !17674
  ret i32 %6, !dbg !17702
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17703 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17708, metadata !DIExpression()), !dbg !17711
  call void @llvm.dbg.value(metadata i64 undef, metadata !17710, metadata !DIExpression()), !dbg !17711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17707, metadata !DIExpression()), !dbg !17711
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17709, metadata !DIExpression()), !dbg !17711
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17712
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17713
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !17714
  br i1 %6, label %7, label %8, !dbg !17717

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 846) #27, !dbg !17718
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 846) #27, !dbg !17718
  unreachable, !dbg !17718

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17720
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17722, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17724
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17724
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17720
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17725
  br i1 %10, label %12, label %11, !dbg !17726

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17727
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17727
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17727
  unreachable, !dbg !17727

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17724
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17720
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17728
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17729
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #28, !dbg !17730
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17205, metadata !DIExpression()) #26, !dbg !17731
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !17733
  br i1 %14, label %16, label %15, !dbg !17734

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !17735
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !17735
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !17735
  unreachable, !dbg !17735

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !17196, metadata !DIExpression()) #26, !dbg !17736
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17201, metadata !DIExpression()) #26, !dbg !17736
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17205, metadata !DIExpression()) #26, !dbg !17738
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17740
  br i1 %17, label %19, label %18, !dbg !17741

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !17742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !17742
  unreachable, !dbg !17742

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !17196, metadata !DIExpression()) #26, !dbg !17736
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #27, !dbg !17743
  ret i32 %21, !dbg !17744
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17745 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17749, metadata !DIExpression()), !dbg !17754
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17750, metadata !DIExpression()), !dbg !17754
  call void @llvm.dbg.value(metadata i32 0, metadata !17751, metadata !DIExpression()), !dbg !17755
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17756
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17758, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17760
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17760
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17756
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17761
  br i1 %3, label %5, label %4, !dbg !17762

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17763
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17763
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17763
  unreachable, !dbg !17763

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17760
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17756
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17764
  call void @llvm.dbg.value(metadata i32 undef, metadata !17753, metadata !DIExpression()), !dbg !17755
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17750, metadata !DIExpression()), !dbg !17754
  call void @llvm.dbg.value(metadata i32 undef, metadata !17751, metadata !DIExpression()), !dbg !17755
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #28, !dbg !17765
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17750, metadata !DIExpression()), !dbg !17754
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17768
  br i1 %8, label %10, label %9, !dbg !17770

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17771
  br label %10, !dbg !17773

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17774
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17776
  br i1 %11, label %13, label %12, !dbg !17777

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17778
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17778
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17778
  unreachable, !dbg !17778

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17758
  call void @llvm.dbg.value(metadata i32 %14, metadata !16487, metadata !DIExpression()) #26, !dbg !17760
  call void @llvm.dbg.value(metadata i32 %14, metadata !16481, metadata !DIExpression()) #26, !dbg !17756
  call void @llvm.dbg.value(metadata i32 %14, metadata !17753, metadata !DIExpression()), !dbg !17755
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17774
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !17779
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !17781, !srcloc !16529
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17750, metadata !DIExpression()), !dbg !17754
  call void @llvm.dbg.value(metadata i32 undef, metadata !17751, metadata !DIExpression()), !dbg !17755
  ret %struct.k_thread* %7, !dbg !17782
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17783 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17785, metadata !DIExpression()), !dbg !17790
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17786, metadata !DIExpression()), !dbg !17790
  call void @llvm.dbg.value(metadata i32 0, metadata !17787, metadata !DIExpression()), !dbg !17791
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17792
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17794, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17796
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17796
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17792
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17797
  br i1 %3, label %5, label %4, !dbg !17798

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17799
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17799
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17799
  unreachable, !dbg !17799

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17796
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17792
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17800
  call void @llvm.dbg.value(metadata i32 undef, metadata !17789, metadata !DIExpression()), !dbg !17791
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17786, metadata !DIExpression()), !dbg !17790
  call void @llvm.dbg.value(metadata i32 undef, metadata !17787, metadata !DIExpression()), !dbg !17791
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #28, !dbg !17801
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17786, metadata !DIExpression()), !dbg !17790
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17804
  br i1 %8, label %11, label %9, !dbg !17806

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17807
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17809
  br label %11, !dbg !17810

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17811
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17813
  br i1 %12, label %14, label %13, !dbg !17814

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17815
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17815
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17815
  unreachable, !dbg !17815

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !17794
  call void @llvm.dbg.value(metadata i32 %15, metadata !16487, metadata !DIExpression()) #26, !dbg !17796
  call void @llvm.dbg.value(metadata i32 %15, metadata !16481, metadata !DIExpression()) #26, !dbg !17792
  call void @llvm.dbg.value(metadata i32 %15, metadata !17789, metadata !DIExpression()), !dbg !17791
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17811
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !17816
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !17818, !srcloc !16529
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17786, metadata !DIExpression()), !dbg !17790
  call void @llvm.dbg.value(metadata i32 undef, metadata !17787, metadata !DIExpression()), !dbg !17791
  ret %struct.k_thread* %7, !dbg !17819
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17820 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17822, metadata !DIExpression()), !dbg !17823
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17630, metadata !DIExpression()) #26, !dbg !17824
  call void @llvm.dbg.value(metadata i32 0, metadata !17631, metadata !DIExpression()) #26, !dbg !17826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17827
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17829, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17831
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17831
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17827
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17832
  br i1 %3, label %5, label %4, !dbg !17833

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17834
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17834
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17834
  unreachable, !dbg !17834

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17831
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17827
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17835
  call void @llvm.dbg.value(metadata i32 undef, metadata !17633, metadata !DIExpression()) #26, !dbg !17826
  call void @llvm.dbg.value(metadata i32 undef, metadata !17631, metadata !DIExpression()) #26, !dbg !17826
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !17836
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17837
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17839
  br i1 %6, label %8, label %7, !dbg !17840

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17841
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17841
  unreachable, !dbg !17841

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17829
  call void @llvm.dbg.value(metadata i32 %9, metadata !16487, metadata !DIExpression()) #26, !dbg !17831
  call void @llvm.dbg.value(metadata i32 %9, metadata !16481, metadata !DIExpression()) #26, !dbg !17827
  call void @llvm.dbg.value(metadata i32 %9, metadata !17633, metadata !DIExpression()) #26, !dbg !17826
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17837
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !17842
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !17844, !srcloc !16529
  call void @llvm.dbg.value(metadata i32 1, metadata !17631, metadata !DIExpression()) #26, !dbg !17826
  call void @llvm.dbg.value(metadata i32 undef, metadata !17631, metadata !DIExpression()) #26, !dbg !17826
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !17845
  ret void, !dbg !17846
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17847 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17849, metadata !DIExpression()), !dbg !17855
  call void @llvm.dbg.value(metadata i32 %1, metadata !17850, metadata !DIExpression()), !dbg !17855
  call void @llvm.dbg.value(metadata i8 0, metadata !17851, metadata !DIExpression()), !dbg !17855
  call void @llvm.dbg.value(metadata i32 0, metadata !17852, metadata !DIExpression()), !dbg !17856
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17857
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17859, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17861
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17861
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17857
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17862
  br i1 %4, label %6, label %5, !dbg !17863

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17864
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17864
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17864
  unreachable, !dbg !17864

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17861
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17857
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17865
  call void @llvm.dbg.value(metadata i32 undef, metadata !17854, metadata !DIExpression()), !dbg !17856
  call void @llvm.dbg.value(metadata i8 poison, metadata !17851, metadata !DIExpression()), !dbg !17855
  call void @llvm.dbg.value(metadata i32 undef, metadata !17852, metadata !DIExpression()), !dbg !17856
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #28, !dbg !17866
  call void @llvm.dbg.value(metadata i1 %9, metadata !17851, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17855
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !17869

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16667, metadata !DIExpression()) #26, !dbg !17870
  %14 = load i8, i8* %7, align 1, !dbg !17876
  %15 = and i8 %14, 127, !dbg !17876
  store i8 %15, i8* %7, align 1, !dbg !17876
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16675, metadata !DIExpression()) #26, !dbg !17877
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17879
  store i8 %12, i8* %11, align 2, !dbg !17880
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16684, metadata !DIExpression()) #26, !dbg !17881
  %16 = load i8, i8* %7, align 1, !dbg !17883
  %17 = or i8 %16, -128, !dbg !17883
  store i8 %17, i8* %7, align 1, !dbg !17883
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16691, metadata !DIExpression()) #26, !dbg !17884
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16698, metadata !DIExpression()) #26, !dbg !17886
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16704, metadata !DIExpression()) #26, !dbg !17886
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !17888
  br i1 %18, label %19, label %20, !dbg !17889

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 186) #27, !dbg !17890
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 186) #27, !dbg !17890
  unreachable, !dbg !17890

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.334(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17891
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16705, metadata !DIExpression()) #26, !dbg !17886
  %22 = icmp eq %struct._dnode* %21, null, !dbg !17892
  br i1 %22, label %32, label %23, !dbg !17891

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16705, metadata !DIExpression()) #26, !dbg !17886
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !17893
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !16705, metadata !DIExpression()) #26, !dbg !17886
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #27, !dbg !17894
  %27 = icmp sgt i32 %26, 0, !dbg !17895
  br i1 %27, label %28, label %29, !dbg !17896

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #27, !dbg !17897
  br label %33, !dbg !17898

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #27, !dbg !17892
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16705, metadata !DIExpression()) #26, !dbg !17886
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17892
  br i1 %31, label %32, label %23, !dbg !17891, !llvm.loop !17899

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #27, !dbg !17901
  br label %33, !dbg !17902

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !17903
  br label %35, !dbg !17904

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !17905
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17907
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17907
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17909
  br i1 %36, label %38, label %37, !dbg !17910

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17911
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17911
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17911
  unreachable, !dbg !17911

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !17859
  call void @llvm.dbg.value(metadata i32 %39, metadata !16487, metadata !DIExpression()) #26, !dbg !17861
  call void @llvm.dbg.value(metadata i32 %39, metadata !16481, metadata !DIExpression()) #26, !dbg !17857
  call void @llvm.dbg.value(metadata i32 %39, metadata !17854, metadata !DIExpression()), !dbg !17856
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17907
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !17912
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #26, !dbg !17914, !srcloc !16529
  call void @llvm.dbg.value(metadata i8 poison, metadata !17851, metadata !DIExpression()), !dbg !17855
  call void @llvm.dbg.value(metadata i32 undef, metadata !17852, metadata !DIExpression()), !dbg !17856
  ret i1 %9, !dbg !17915
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17916 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17920, metadata !DIExpression()), !dbg !17923
  call void @llvm.dbg.value(metadata i32 %1, metadata !17921, metadata !DIExpression()), !dbg !17923
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #28, !dbg !17924
  call void @llvm.dbg.value(metadata i1 %3, metadata !17922, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17923
  br i1 %3, label %4, label %12, !dbg !17925

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17927
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17928
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17928
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17928
  %9 = load i8, i8* %8, align 1, !dbg !17928
  %10 = icmp eq i8 %9, 0, !dbg !17929
  br i1 %10, label %11, label %12, !dbg !17930

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17931
  br label %12, !dbg !17933

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !17934
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !17935 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17937, metadata !DIExpression()), !dbg !17940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17941
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17943, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17945
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17945
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17941
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17946
  br i1 %2, label %4, label %3, !dbg !17947

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17948
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17948
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17948
  unreachable, !dbg !17948

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17945
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17941
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17949
  call void @llvm.dbg.value(metadata i32 undef, metadata !17939, metadata !DIExpression()), !dbg !17940
  call void @llvm.dbg.value(metadata i32 undef, metadata !17937, metadata !DIExpression()), !dbg !17940
  tail call fastcc void @z_sched_lock() #28, !dbg !17950
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17953
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !17953
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17955
  br i1 %5, label %7, label %6, !dbg !17956

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17957
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17957
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !17957
  unreachable, !dbg !17957

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !17943
  call void @llvm.dbg.value(metadata i32 %8, metadata !16487, metadata !DIExpression()) #26, !dbg !17945
  call void @llvm.dbg.value(metadata i32 %8, metadata !16481, metadata !DIExpression()) #26, !dbg !17941
  call void @llvm.dbg.value(metadata i32 %8, metadata !17939, metadata !DIExpression()), !dbg !17940
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !17953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !17958
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !17960, !srcloc !16529
  call void @llvm.dbg.value(metadata i32 1, metadata !17937, metadata !DIExpression()), !dbg !17940
  call void @llvm.dbg.value(metadata i32 undef, metadata !17937, metadata !DIExpression()), !dbg !17940
  ret void, !dbg !17961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !17962 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17963, !srcloc !17252
  call void @llvm.dbg.value(metadata i32 %1, metadata !17248, metadata !DIExpression()) #26, !dbg !17968
  %2 = icmp eq i32 %1, 0, !dbg !17969
  br i1 %2, label %4, label %3, !dbg !17970

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.358, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.359, i32 0, i32 0), i32 noundef 253) #27, !dbg !17971
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.336, i32 0, i32 0)) #27, !dbg !17971
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.359, i32 0, i32 0), i32 noundef 253) #27, !dbg !17971
  unreachable, !dbg !17971

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17973
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17973
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17973
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17973
  %9 = load i8, i8* %8, align 1, !dbg !17973
  %10 = icmp eq i8 %9, 1, !dbg !17973
  br i1 %10, label %11, label %12, !dbg !17976

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.359, i32 0, i32 0), i32 noundef 254) #27, !dbg !17977
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.336, i32 0, i32 0)) #27, !dbg !17977
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.359, i32 0, i32 0), i32 noundef 254) #27, !dbg !17977
  unreachable, !dbg !17977

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !17979
  store i8 %13, i8* %8, align 1, !dbg !17979
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17980, !srcloc !17982
  ret void, !dbg !17983
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !17984 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17986, metadata !DIExpression()), !dbg !17989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !17990
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17992, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17994
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !17994
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17990
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17995
  br i1 %2, label %4, label %3, !dbg !17996

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17997
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17997
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !17997
  unreachable, !dbg !17997

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !17994
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !17990
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17998
  call void @llvm.dbg.value(metadata i32 undef, metadata !17988, metadata !DIExpression()), !dbg !17989
  call void @llvm.dbg.value(metadata i32 undef, metadata !17986, metadata !DIExpression()), !dbg !17989
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17999
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17999
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17999
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17999
  %9 = load i8, i8* %8, align 1, !dbg !17999
  %10 = icmp eq i8 %9, 0, !dbg !17999
  br i1 %10, label %11, label %12, !dbg !18004

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 999) #27, !dbg !18005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.336, i32 0, i32 0)) #27, !dbg !18005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 999) #27, !dbg !18005
  unreachable, !dbg !18005

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18007, !srcloc !17252
  call void @llvm.dbg.value(metadata i32 %13, metadata !17248, metadata !DIExpression()) #26, !dbg !18012
  %14 = icmp eq i32 %13, 0, !dbg !18013
  br i1 %14, label %16, label %15, !dbg !18014

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.358, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1000) #27, !dbg !18015
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.336, i32 0, i32 0)) #27, !dbg !18015
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1000) #27, !dbg !18015
  unreachable, !dbg !18015

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18017
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !18018
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !18018
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !18018
  %21 = load i8, i8* %20, align 1, !dbg !18019
  %22 = add i8 %21, 1, !dbg !18019
  store i8 %22, i8* %20, align 1, !dbg !18019
  tail call fastcc void @update_cache(i32 noundef 0) #28, !dbg !18020
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !18021
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !18021
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18023
  br i1 %23, label %25, label %24, !dbg !18024

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !18025
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18025
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !18025
  unreachable, !dbg !18025

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !17992
  call void @llvm.dbg.value(metadata i32 %26, metadata !16487, metadata !DIExpression()) #26, !dbg !17994
  call void @llvm.dbg.value(metadata i32 %26, metadata !16481, metadata !DIExpression()) #26, !dbg !17990
  call void @llvm.dbg.value(metadata i32 %26, metadata !17988, metadata !DIExpression()), !dbg !17989
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !18021
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !18026
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #26, !dbg !18028, !srcloc !16529
  call void @llvm.dbg.value(metadata i32 1, metadata !17986, metadata !DIExpression()), !dbg !17989
  call void @llvm.dbg.value(metadata i32 undef, metadata !17986, metadata !DIExpression()), !dbg !17989
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !18029
  ret void, !dbg !18030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #13 !dbg !18031 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !18032
  ret %struct.k_thread* %1, !dbg !18033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !18034 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !18038, metadata !DIExpression()), !dbg !18043
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !18039, metadata !DIExpression()), !dbg !18043
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !18044
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !18040, metadata !DIExpression()), !dbg !18043
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !18045
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !18041, metadata !DIExpression()), !dbg !18043
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #28, !dbg !18046
  call void @llvm.dbg.value(metadata i32 %5, metadata !18042, metadata !DIExpression()), !dbg !18043
  %6 = icmp sgt i32 %5, 0, !dbg !18047
  br i1 %6, label %17, label %7, !dbg !18049

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !18050
  br i1 %8, label %17, label %9, !dbg !18052

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !18053
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !18053
  %12 = load i32, i32* %11, align 8, !dbg !18053
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !18055
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !18055
  %15 = load i32, i32* %14, align 8, !dbg !18055
  %16 = icmp ult i32 %12, %15, !dbg !18056
  br label %17, !dbg !18057

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !18058
  ret i1 %18, !dbg !18059
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !18060 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18077, metadata !DIExpression()), !dbg !18092
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18078, metadata !DIExpression()), !dbg !18092
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !18093
  br i1 %4, label %5, label %6, !dbg !18096

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1179) #27, !dbg !18097
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1179) #27, !dbg !18097
  unreachable, !dbg !18097

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !18099
  %8 = load i32, i32* %7, align 4, !dbg !18100
  %9 = add nsw i32 %8, 1, !dbg !18100
  store i32 %9, i32* %7, align 4, !dbg !18100
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !18101
  store i32 %8, i32* %10, align 8, !dbg !18102
  %11 = load i32, i32* %7, align 4, !dbg !18103
  %12 = icmp eq i32 %11, 0, !dbg !18104
  br i1 %12, label %13, label %35, !dbg !18105

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !18106
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #26, !dbg !18106
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !18080, metadata !DIExpression()), !dbg !18106
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18106
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !18106
  %17 = load i32, i32* %16, align 4, !dbg !18106
  %18 = shl i32 %17, 2, !dbg !18106
  %19 = alloca i8, i32 %18, align 8, !dbg !18106
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !18106
  store i8* %19, i8** %20, align 4, !dbg !18106
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !18106
  %22 = alloca i8, i32 %17, align 8, !dbg !18106
  store i8* %22, i8** %21, align 4, !dbg !18106
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !18106
  store i32 -1, i32* %23, align 4, !dbg !18106
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !18107
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !18089, metadata !DIExpression()), !dbg !18108
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !18079, metadata !DIExpression()), !dbg !18092
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !18109
  br i1 %25, label %26, label %27, !dbg !18106

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #26, !dbg !18109
  br label %35, !dbg !18110

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !18079, metadata !DIExpression()), !dbg !18092
  %29 = load i32, i32* %7, align 4, !dbg !18111
  %30 = add nsw i32 %29, 1, !dbg !18111
  store i32 %30, i32* %7, align 4, !dbg !18111
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !18113
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !18113
  store i32 %29, i32* %32, align 8, !dbg !18114
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !18107
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !18089, metadata !DIExpression()), !dbg !18108
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !18079, metadata !DIExpression()), !dbg !18092
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !18109
  br i1 %34, label %26, label %27, !dbg !18106, !llvm.loop !18115

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18117
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !18118
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #27, !dbg !18119
  ret void, !dbg !18120
}

; Function Attrs: optsize
declare !dbg !18121 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !18126 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !18129 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18131, metadata !DIExpression()), !dbg !18133
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18132, metadata !DIExpression()), !dbg !18133
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !18134
  br i1 %3, label %4, label %5, !dbg !18137

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1200) #27, !dbg !18138
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1200) #27, !dbg !18138
  unreachable, !dbg !18138

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18140
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !18141
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #27, !dbg !18142
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !18143
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !18143
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !18145
  br i1 %10, label %11, label %13, !dbg !18146

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !18147
  store i32 0, i32* %12, align 4, !dbg !18149
  br label %13, !dbg !18150

13:                                               ; preds = %11, %5
  ret void, !dbg !18151
}

; Function Attrs: optsize
declare !dbg !18152 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !18153 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18157, metadata !DIExpression()), !dbg !18160
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18158, metadata !DIExpression()), !dbg !18160
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18161
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #28, !dbg !18162
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !18159, metadata !DIExpression()), !dbg !18160
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !18158, metadata !DIExpression()), !dbg !18160
  ret %struct.k_thread* %4, !dbg !18163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !18164 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !18168, metadata !DIExpression()), !dbg !18169
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !18170
  ret %struct.rbnode* %2, !dbg !18171
}

; Function Attrs: optsize
declare !dbg !18172 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !18175 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !18187, metadata !DIExpression()), !dbg !18191
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !18192
  %3 = load i32, i32* %2, align 4, !dbg !18192
  %4 = icmp eq i32 %3, 0, !dbg !18194
  br i1 %4, label %10, label %5, !dbg !18195

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18188, metadata !DIExpression()), !dbg !18191
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !18196, !range !5466
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !18197
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !18189, metadata !DIExpression()), !dbg !18191
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.334(%struct._dnode* noundef %7) #28, !dbg !18198
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !18190, metadata !DIExpression()), !dbg !18191
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18188, metadata !DIExpression()), !dbg !18191
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !18191
  ret %struct.k_thread* %11, !dbg !18199
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !18200 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18204, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.value(metadata i32 0, metadata !18205, metadata !DIExpression()), !dbg !18207
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.364(%union.anon* noundef %0) #28, !dbg !18208
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18206, metadata !DIExpression()), !dbg !18207
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18209
  br i1 %3, label %8, label %4, !dbg !18210

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !18211
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !18213
  call void @llvm.dbg.value(metadata i32 1, metadata !18205, metadata !DIExpression()), !dbg !18207
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.364(%union.anon* noundef %0) #28, !dbg !18208
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !18206, metadata !DIExpression()), !dbg !18207
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !18209
  br i1 %7, label %8, label %4, !dbg !18210, !llvm.loop !18214

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !18207
  ret i32 %9, !dbg !18216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.364(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !18217 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18219, metadata !DIExpression()), !dbg !18220
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !18221
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.334(%struct._dnode* noundef %2) #28, !dbg !18222
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !18223
  ret %struct.k_thread* %4, !dbg !18224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #12 !dbg !18225 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !18234, metadata !DIExpression()), !dbg !18235
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !18236
  tail call fastcc void @sys_dlist_init.365(%struct._dnode* noundef nonnull %2) #28, !dbg !18237
  ret void, !dbg !18238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.365(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !18239 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18243, metadata !DIExpression()), !dbg !18244
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18245
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18246
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18247
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18248
  ret void, !dbg !18249
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !18250 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #28, !dbg !18251
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #28, !dbg !18252
  ret void, !dbg !18253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !18254 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18259, metadata !DIExpression()), !dbg !18260
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !18261
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !18261
  %4 = load i8, i8* %3, align 2, !dbg !18261
  %5 = sext i8 %4 to i32, !dbg !18262
  ret i32 %5, !dbg !18263
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18264 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18268, metadata !DIExpression()), !dbg !18271
  call void @llvm.dbg.value(metadata i32 %1, metadata !18269, metadata !DIExpression()), !dbg !18271
  %3 = add i32 %1, 16, !dbg !18272
  %4 = icmp ult i32 %3, 31, !dbg !18272
  br i1 %4, label %6, label %5, !dbg !18272

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1331) #27, !dbg !18276
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.371, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #27, !dbg !18276
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1331) #27, !dbg !18276
  unreachable, !dbg !18276

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18278, !srcloc !17252
  call void @llvm.dbg.value(metadata i32 %7, metadata !17248, metadata !DIExpression()) #26, !dbg !18283
  %8 = icmp eq i32 %7, 0, !dbg !18284
  br i1 %8, label %10, label %9, !dbg !18285

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.358, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1332) #27, !dbg !18286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.336, i32 0, i32 0)) #27, !dbg !18286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1332) #27, !dbg !18286
  unreachable, !dbg !18286

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18270, metadata !DIExpression()), !dbg !18271
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #28, !dbg !18288
  ret void, !dbg !18289
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !18290 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #28, !dbg !18291
  br i1 %1, label %8, label %2, !dbg !18292

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !18293
  br i1 %3, label %8, label %4, !dbg !18294

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18295
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #28, !dbg !18296
  %7 = xor i1 %6, true, !dbg !18294
  br label %8, !dbg !18294

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !18297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #13 !dbg !18298 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !18299, !range !8206
  %2 = icmp eq i8 %1, 0, !dbg !18299
  ret i1 %2, !dbg !18300
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !18301 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18304, !srcloc !17252
  call void @llvm.dbg.value(metadata i32 %1, metadata !17248, metadata !DIExpression()) #26, !dbg !18309
  %2 = icmp eq i32 %1, 0, !dbg !18310
  br i1 %2, label %4, label %3, !dbg !18311

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.358, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1392) #27, !dbg !18312
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.336, i32 0, i32 0)) #27, !dbg !18312
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1392) #27, !dbg !18312
  unreachable, !dbg !18312

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !18314
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18316, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !18318
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !18318
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !18314
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18319
  br i1 %6, label %8, label %7, !dbg !18320

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !18321
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18321
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !18321
  unreachable, !dbg !18321

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !18318
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !18314
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18322
  call void @llvm.dbg.value(metadata i32 undef, metadata !18303, metadata !DIExpression()), !dbg !18323
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18324
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16667, metadata !DIExpression()) #26, !dbg !18327
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !18329
  %11 = load i8, i8* %10, align 1, !dbg !18330
  %12 = and i8 %11, 127, !dbg !18330
  store i8 %12, i8* %10, align 1, !dbg !18330
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16675, metadata !DIExpression()) #26, !dbg !18331
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #27, !dbg !18333
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18334
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16684, metadata !DIExpression()) #26, !dbg !18335
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !18337
  %15 = load i8, i8* %14, align 1, !dbg !18338
  %16 = or i8 %15, -128, !dbg !18338
  store i8 %16, i8* %14, align 1, !dbg !18338
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16691, metadata !DIExpression()) #26, !dbg !18339
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16698, metadata !DIExpression()) #26, !dbg !18341
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16704, metadata !DIExpression()) #26, !dbg !18341
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #27, !dbg !18343
  br i1 %17, label %18, label %19, !dbg !18344

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 186) #27, !dbg !18345
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 186) #27, !dbg !18345
  unreachable, !dbg !18345

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.334(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !18346
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16705, metadata !DIExpression()) #26, !dbg !18341
  %21 = icmp eq %struct._dnode* %20, null, !dbg !18347
  br i1 %21, label %32, label %22, !dbg !18346

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !16705, metadata !DIExpression()) #26, !dbg !18341
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !18348
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !16705, metadata !DIExpression()) #26, !dbg !18341
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #27, !dbg !18349
  %26 = icmp sgt i32 %25, 0, !dbg !18350
  br i1 %26, label %27, label %29, !dbg !18351

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !18352
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #27, !dbg !18353
  br label %34, !dbg !18354

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #27, !dbg !18347
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16705, metadata !DIExpression()) #26, !dbg !18341
  %31 = icmp eq %struct._dnode* %30, null, !dbg !18347
  br i1 %31, label %32, label %22, !dbg !18346, !llvm.loop !18355

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !18357
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #27, !dbg !18358
  br label %34, !dbg !18359

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !18360
  call void @llvm.dbg.value(metadata i32 undef, metadata !17196, metadata !DIExpression()) #26, !dbg !18361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17201, metadata !DIExpression()) #26, !dbg !18361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17205, metadata !DIExpression()) #26, !dbg !18363
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18365
  br i1 %35, label %37, label %36, !dbg !18366

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !18367
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18367
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !18367
  unreachable, !dbg !18367

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !18316
  call void @llvm.dbg.value(metadata i32 %38, metadata !16487, metadata !DIExpression()) #26, !dbg !18318
  call void @llvm.dbg.value(metadata i32 %38, metadata !16481, metadata !DIExpression()) #26, !dbg !18314
  call void @llvm.dbg.value(metadata i32 %38, metadata !18303, metadata !DIExpression()), !dbg !18323
  call void @llvm.dbg.value(metadata i32 undef, metadata !17196, metadata !DIExpression()) #26, !dbg !18361
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #27, !dbg !18368
  ret void, !dbg !18369
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !18370 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18374, metadata !DIExpression()), !dbg !18377
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18378, !srcloc !17252
  call void @llvm.dbg.value(metadata i32 %3, metadata !17248, metadata !DIExpression()) #26, !dbg !18383
  %4 = icmp eq i32 %3, 0, !dbg !18384
  br i1 %4, label %6, label %5, !dbg !18385

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.358, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1463) #27, !dbg !18386
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.336, i32 0, i32 0)) #27, !dbg !18386
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1463) #27, !dbg !18386
  unreachable, !dbg !18386

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !18388
  br i1 %7, label %8, label %10, !dbg !18390

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18391
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #28, !dbg !18393
  br label %15, !dbg !18394

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !18375, metadata !DIExpression()), !dbg !18377
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #28, !dbg !18395
  %12 = sext i32 %11 to i64, !dbg !18395
  call void @llvm.dbg.value(metadata i64 %12, metadata !18375, metadata !DIExpression()), !dbg !18377
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #28, !dbg !18396
  %14 = trunc i64 %13 to i32, !dbg !18396
  call void @llvm.dbg.value(metadata i32 %14, metadata !18376, metadata !DIExpression()), !dbg !18377
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !18377
  ret i32 %16, !dbg !18397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18398 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18402, metadata !DIExpression()), !dbg !18403
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !18404, !srcloc !18406
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #28, !dbg !18407
  ret void, !dbg !18408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !18409 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18413, metadata !DIExpression()), !dbg !18417
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18418, !srcloc !17252
  call void @llvm.dbg.value(metadata i32 %2, metadata !17248, metadata !DIExpression()) #26, !dbg !18423
  %3 = icmp eq i32 %2, 0, !dbg !18424
  br i1 %3, label %5, label %4, !dbg !18425

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.358, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1420) #27, !dbg !18426
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.336, i32 0, i32 0)) #27, !dbg !18426
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1420) #27, !dbg !18426
  unreachable, !dbg !18426

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !18428
  br i1 %6, label %7, label %8, !dbg !18430

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #28, !dbg !18431
  br label %43, !dbg !18433

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !18415, metadata !DIExpression()), !dbg !18417
  %9 = icmp sgt i64 %0, -3, !dbg !18434
  br i1 %9, label %10, label %14, !dbg !18436

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !18437
  %12 = trunc i64 %0 to i32, !dbg !18439
  %13 = add i32 %11, %12, !dbg !18439
  call void @llvm.dbg.value(metadata i32 %13, metadata !18414, metadata !DIExpression()), !dbg !18417
  br label %17, !dbg !18440

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !18441
  %16 = sub i32 -2, %15, !dbg !18441
  call void @llvm.dbg.value(metadata i32 %16, metadata !18414, metadata !DIExpression()), !dbg !18417
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !18443
  call void @llvm.dbg.value(metadata i32 %18, metadata !18414, metadata !DIExpression()), !dbg !18417
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !18444
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18446, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !18448
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !18448
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !18444
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18449
  br i1 %20, label %22, label %21, !dbg !18450

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !18451
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18451
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !18451
  unreachable, !dbg !18451

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !18448
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !18444
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18452
  call void @llvm.dbg.value(metadata i32 undef, metadata !18416, metadata !DIExpression()), !dbg !18417
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18453
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !18454
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #28, !dbg !18455
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18456
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !18457
  tail call fastcc void @z_add_thread_timeout.347(%struct.k_thread* noundef %24, [1 x i64] %25) #28, !dbg !18457
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18458
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #28, !dbg !18459
  call void @llvm.dbg.value(metadata i32 undef, metadata !17196, metadata !DIExpression()) #26, !dbg !18460
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17201, metadata !DIExpression()) #26, !dbg !18460
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17205, metadata !DIExpression()) #26, !dbg !18462
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18464
  br i1 %27, label %29, label %28, !dbg !18465

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !18466
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18466
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !18466
  unreachable, !dbg !18466

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !18446
  call void @llvm.dbg.value(metadata i32 %30, metadata !16487, metadata !DIExpression()) #26, !dbg !18448
  call void @llvm.dbg.value(metadata i32 %30, metadata !16481, metadata !DIExpression()) #26, !dbg !18444
  call void @llvm.dbg.value(metadata i32 %30, metadata !18416, metadata !DIExpression()), !dbg !18417
  call void @llvm.dbg.value(metadata i32 undef, metadata !17196, metadata !DIExpression()) #26, !dbg !18460
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #27, !dbg !18467
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18468
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #28, !dbg !18468
  br i1 %33, label %34, label %35, !dbg !18471

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.374, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1448) #27, !dbg !18472
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.336, i32 0, i32 0)) #27, !dbg !18472
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1448) #27, !dbg !18472
  unreachable, !dbg !18472

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !18474
  %37 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !18475
  %38 = zext i32 %37 to i64, !dbg !18475
  %39 = sub nsw i64 %36, %38, !dbg !18476
  call void @llvm.dbg.value(metadata i64 %39, metadata !18413, metadata !DIExpression()), !dbg !18417
  %40 = icmp sgt i64 %39, 0, !dbg !18477
  %41 = select i1 %40, i64 %39, i64 0, !dbg !18477
  %42 = trunc i64 %41 to i32, !dbg !18477
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !18417
  ret i32 %44, !dbg !18478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !18479 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18481, metadata !DIExpression()), !dbg !18482
  call void @llvm.dbg.value(metadata i64 %0, metadata !16535, metadata !DIExpression()), !dbg !18483
  call void @llvm.dbg.value(metadata i32 10000, metadata !16538, metadata !DIExpression()), !dbg !18483
  call void @llvm.dbg.value(metadata i32 1000, metadata !16539, metadata !DIExpression()), !dbg !18483
  call void @llvm.dbg.value(metadata i8 1, metadata !16540, metadata !DIExpression()), !dbg !18483
  call void @llvm.dbg.value(metadata i1 false, metadata !16541, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18483
  call void @llvm.dbg.value(metadata i1 false, metadata !16542, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18483
  call void @llvm.dbg.value(metadata i8 0, metadata !16543, metadata !DIExpression()), !dbg !18483
  call void @llvm.dbg.value(metadata i1 false, metadata !16544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18483
  call void @llvm.dbg.value(metadata i1 true, metadata !16545, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18483
  call void @llvm.dbg.value(metadata i64 0, metadata !16546, metadata !DIExpression()), !dbg !18483
  call void @llvm.dbg.value(metadata i64 0, metadata !16546, metadata !DIExpression()), !dbg !18483
  call void @llvm.dbg.value(metadata i64 %0, metadata !16535, metadata !DIExpression()), !dbg !18483
  %2 = udiv i64 %0, 10, !dbg !18485
  ret i64 %2, !dbg !18489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !18490 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !18491, !srcloc !18493
  tail call void @z_impl_k_yield() #28, !dbg !18494
  ret void, !dbg !18495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !18496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18500, metadata !DIExpression()), !dbg !18502
  %2 = sext i32 %0 to i64, !dbg !18503
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #28, !dbg !18504
  call void @llvm.dbg.value(metadata i64 %3, metadata !18501, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18502
  %4 = shl i64 %3, 32, !dbg !18505
  %5 = ashr exact i64 %4, 32, !dbg !18505
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #28, !dbg !18506
  call void @llvm.dbg.value(metadata i32 %6, metadata !18501, metadata !DIExpression()), !dbg !18502
  %7 = sext i32 %6 to i64, !dbg !18507
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #28, !dbg !18508
  %9 = trunc i64 %8 to i32, !dbg !18508
  ret i32 %9, !dbg !18509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !18510 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18512, metadata !DIExpression()), !dbg !18513
  call void @llvm.dbg.value(metadata i64 %0, metadata !16535, metadata !DIExpression()), !dbg !18514
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16538, metadata !DIExpression()), !dbg !18514
  call void @llvm.dbg.value(metadata i32 10000, metadata !16539, metadata !DIExpression()), !dbg !18514
  call void @llvm.dbg.value(metadata i8 1, metadata !16540, metadata !DIExpression()), !dbg !18514
  call void @llvm.dbg.value(metadata i1 false, metadata !16541, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18514
  call void @llvm.dbg.value(metadata i1 true, metadata !16542, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18514
  call void @llvm.dbg.value(metadata i8 0, metadata !16543, metadata !DIExpression()), !dbg !18514
  call void @llvm.dbg.value(metadata i1 false, metadata !16544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18514
  call void @llvm.dbg.value(metadata i1 true, metadata !16545, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18514
  call void @llvm.dbg.value(metadata i64 0, metadata !16546, metadata !DIExpression()), !dbg !18514
  call void @llvm.dbg.value(metadata i64 0, metadata !16546, metadata !DIExpression()), !dbg !18514
  %2 = add i64 %0, 99, !dbg !18516
  call void @llvm.dbg.value(metadata i64 %2, metadata !16535, metadata !DIExpression()), !dbg !18514
  %3 = udiv i64 %2, 100, !dbg !18517
  ret i64 %3, !dbg !18518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !18519 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18521, metadata !DIExpression()), !dbg !18522
  call void @llvm.dbg.value(metadata i64 %0, metadata !16535, metadata !DIExpression()), !dbg !18523
  call void @llvm.dbg.value(metadata i32 10000, metadata !16538, metadata !DIExpression()), !dbg !18523
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16539, metadata !DIExpression()), !dbg !18523
  call void @llvm.dbg.value(metadata i8 1, metadata !16540, metadata !DIExpression()), !dbg !18523
  call void @llvm.dbg.value(metadata i1 false, metadata !16541, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18523
  call void @llvm.dbg.value(metadata i1 false, metadata !16542, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18523
  call void @llvm.dbg.value(metadata i8 0, metadata !16543, metadata !DIExpression()), !dbg !18523
  call void @llvm.dbg.value(metadata i1 true, metadata !16544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18523
  call void @llvm.dbg.value(metadata i1 false, metadata !16545, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18523
  call void @llvm.dbg.value(metadata i64 0, metadata !16546, metadata !DIExpression()), !dbg !18523
  call void @llvm.dbg.value(metadata i64 0, metadata !16546, metadata !DIExpression()), !dbg !18523
  %2 = mul i64 %0, 100, !dbg !18525
  ret i64 %2, !dbg !18527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18528 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18530, metadata !DIExpression()), !dbg !18531
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #28, !dbg !18532
  br i1 %2, label %14, label %3, !dbg !18534

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !18535
  %5 = icmp slt i32 %4, 0, !dbg !18537
  br i1 %5, label %6, label %10, !dbg !18538

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18539
  %8 = load i8, i8* %7, align 1, !dbg !18539
  %9 = icmp eq i8 %8, 16, !dbg !18542
  br i1 %9, label %10, label %14, !dbg !18543

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #28, !dbg !18544
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #28, !dbg !18545
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18546, !srcloc !17252
  call void @llvm.dbg.value(metadata i32 %11, metadata !17248, metadata !DIExpression()) #26, !dbg !18550
  %12 = icmp eq i32 %11, 0, !dbg !18551
  br i1 %12, label %13, label %14, !dbg !18552

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !18553
  br label %14, !dbg !18555

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !18556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !18557 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18559, metadata !DIExpression()), !dbg !18560
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18561
  %3 = load i8, i8* %2, align 1, !dbg !18561
  %4 = and i8 %3, 2, !dbg !18562
  %5 = icmp ne i8 %4, 0, !dbg !18563
  ret i1 %5, !dbg !18564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #13 !dbg !18565 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18570
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18569, metadata !DIExpression()), !dbg !18571
  ret %struct.k_thread* %1, !dbg !18572
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !18573 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18574, !srcloc !17252
  call void @llvm.dbg.value(metadata i32 %1, metadata !17248, metadata !DIExpression()) #26, !dbg !18577
  %2 = icmp eq i32 %1, 0, !dbg !18578
  br i1 %2, label %3, label %8, !dbg !18579

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18580
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #28, !dbg !18581
  %6 = icmp ne i32 %5, 0, !dbg !18579
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !18582
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18585, metadata !DIExpression()), !dbg !18587
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !18588
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18590, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !18592
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !18592
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !18588
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18593
  br i1 %3, label %5, label %4, !dbg !18594

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !18595
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18595
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !18595
  unreachable, !dbg !18595

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !18590
  call void @llvm.dbg.value(metadata i32 %6, metadata !16487, metadata !DIExpression()) #26, !dbg !18592
  call void @llvm.dbg.value(metadata i32 %6, metadata !16481, metadata !DIExpression()) #26, !dbg !18588
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18596
  call void @llvm.dbg.value(metadata i32 %6, metadata !18586, metadata !DIExpression()), !dbg !18587
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !18597
  %8 = load i8, i8* %7, align 4, !dbg !18597
  %9 = and i8 %8, 1, !dbg !18599
  %10 = icmp eq i8 %9, 0, !dbg !18600
  br i1 %10, label %15, label %11, !dbg !18601

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !18602
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !18602
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18605
  br i1 %12, label %14, label %13, !dbg !18606

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !18607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !18607
  unreachable, !dbg !18607

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !16509, metadata !DIExpression()) #26, !dbg !18602
  call void @llvm.dbg.value(metadata i32 %6, metadata !16523, metadata !DIExpression()) #26, !dbg !18608
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !18610, !srcloc !16529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.379, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1731) #27, !dbg !18611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.380, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #27, !dbg !18611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1731) #27, !dbg !18611
  unreachable, !dbg !18611

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18615
  %17 = load i8, i8* %16, align 1, !dbg !18615
  %18 = and i8 %17, 8, !dbg !18617
  %19 = icmp eq i8 %18, 0, !dbg !18618
  br i1 %19, label %24, label %20, !dbg !18619

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !18620
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !18620
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18623
  br i1 %21, label %23, label %22, !dbg !18624

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !18625
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18625
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !18625
  unreachable, !dbg !18625

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !16509, metadata !DIExpression()) #26, !dbg !18620
  call void @llvm.dbg.value(metadata i32 %6, metadata !16523, metadata !DIExpression()) #26, !dbg !18626
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !18628, !srcloc !16529
  br label %39, !dbg !18629

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #28, !dbg !18630
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18631
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !18633
  br i1 %26, label %27, label %35, !dbg !18634

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18635, !srcloc !17252
  call void @llvm.dbg.value(metadata i32 %28, metadata !17248, metadata !DIExpression()) #26, !dbg !18638
  %29 = icmp eq i32 %28, 0, !dbg !18639
  br i1 %29, label %30, label %35, !dbg !18640

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !17196, metadata !DIExpression()) #26, !dbg !18641
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17201, metadata !DIExpression()) #26, !dbg !18641
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17205, metadata !DIExpression()) #26, !dbg !18644
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18646
  br i1 %31, label %33, label %32, !dbg !18647

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !18648
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18648
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !18648
  unreachable, !dbg !18648

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !17196, metadata !DIExpression()) #26, !dbg !18641
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #27, !dbg !18649
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.379, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1778) #27, !dbg !18650
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.381, i32 0, i32 0)) #27, !dbg !18650
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1778) #27, !dbg !18650
  unreachable, !dbg !18650

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !18654
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !18654
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18656
  br i1 %36, label %38, label %37, !dbg !18657

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !18658
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18658
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !18658
  unreachable, !dbg !18658

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !16509, metadata !DIExpression()) #26, !dbg !18654
  call void @llvm.dbg.value(metadata i32 %6, metadata !16523, metadata !DIExpression()) #26, !dbg !18659
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !18661, !srcloc !16529
  br label %39, !dbg !18662

39:                                               ; preds = %38, %23
  ret void, !dbg !18662
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18663 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18665, metadata !DIExpression()), !dbg !18666
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18667
  %3 = load i8, i8* %2, align 1, !dbg !18667
  %4 = and i8 %3, 8, !dbg !18669
  %5 = icmp eq i8 %4, 0, !dbg !18670
  br i1 %5, label %6, label %20, !dbg !18671

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !18672
  %8 = or i8 %7, 8, !dbg !18672
  store i8 %8, i8* %2, align 1, !dbg !18672
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #28, !dbg !18674
  br i1 %9, label %10, label %12, !dbg !18676

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16667, metadata !DIExpression()) #26, !dbg !18677
  %11 = and i8 %8, 95, !dbg !18680
  store i8 %11, i8* %2, align 1, !dbg !18680
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16675, metadata !DIExpression()) #26, !dbg !18681
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !18683
  br label %12, !dbg !18684

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18685
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !18685
  %15 = icmp eq %union.anon* %14, null, !dbg !18687
  br i1 %15, label %17, label %16, !dbg !18688

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #28, !dbg !18689
  br label %17, !dbg !18691

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #28, !dbg !18692
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18693
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #28, !dbg !18694
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !18695
  br label %20, !dbg !18696

20:                                               ; preds = %17, %1
  ret void, !dbg !18697
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !18698 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18702, metadata !DIExpression()), !dbg !18704
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.364(%union.anon* noundef %0) #28, !dbg !18705
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18703, metadata !DIExpression()), !dbg !18704
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18706
  br i1 %3, label %10, label %4, !dbg !18707

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #28, !dbg !18708
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #28, !dbg !18710
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !18711, metadata !DIExpression()), !dbg !18717
  call void @llvm.dbg.value(metadata i32 0, metadata !18716, metadata !DIExpression()), !dbg !18717
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !18719
  store i32 0, i32* %7, align 4, !dbg !18720
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !18721
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.364(%union.anon* noundef %0) #28, !dbg !18705
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !18703, metadata !DIExpression()), !dbg !18704
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !18706
  br i1 %9, label %10, label %4, !dbg !18707, !llvm.loop !18722

10:                                               ; preds = %4, %1
  ret void, !dbg !18724
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !18725 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18730, metadata !DIExpression()), !dbg !18733
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18729, metadata !DIExpression()), !dbg !18733
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !18734
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18736, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !18738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !18738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !18734
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18739
  br i1 %4, label %6, label %5, !dbg !18740

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !18741
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18741
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !18741
  unreachable, !dbg !18741

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !18736
  call void @llvm.dbg.value(metadata i32 %7, metadata !16487, metadata !DIExpression()) #26, !dbg !18738
  call void @llvm.dbg.value(metadata i32 %7, metadata !16481, metadata !DIExpression()) #26, !dbg !18734
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18742
  call void @llvm.dbg.value(metadata i32 %7, metadata !18731, metadata !DIExpression()), !dbg !18733
  call void @llvm.dbg.value(metadata i32 0, metadata !18732, metadata !DIExpression()), !dbg !18733
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18743
  %9 = load i8, i8* %8, align 1, !dbg !18743
  %10 = and i8 %9, 8, !dbg !18745
  %11 = icmp eq i8 %10, 0, !dbg !18746
  br i1 %11, label %12, label %35, !dbg !18747

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !18730, metadata !DIExpression()), !dbg !18733
  %14 = icmp eq i64 %13, 0, !dbg !18748
  br i1 %14, label %35, label %15, !dbg !18750

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18751
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !18753
  br i1 %17, label %35, label %18, !dbg !18754

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18755
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !18755
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !18756
  %22 = icmp eq %union.anon* %20, %21, !dbg !18757
  br i1 %22, label %35, label %23, !dbg !18758

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18759, !srcloc !17252
  call void @llvm.dbg.value(metadata i32 %24, metadata !17248, metadata !DIExpression()) #26, !dbg !18765
  %25 = icmp eq i32 %24, 0, !dbg !18766
  br i1 %25, label %27, label %26, !dbg !18767

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.358, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1809) #27, !dbg !18768
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.382, i32 0, i32 0)) #27, !dbg !18768
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 1809) #27, !dbg !18768
  unreachable, !dbg !18768

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18770
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18771
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #28, !dbg !18772
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18773
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #28, !dbg !18774
  call void @llvm.dbg.value(metadata i32 undef, metadata !17196, metadata !DIExpression()) #26, !dbg !18775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17201, metadata !DIExpression()) #26, !dbg !18775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17205, metadata !DIExpression()) #26, !dbg !18777
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18779
  br i1 %31, label %33, label %32, !dbg !18780

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !18781
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18781
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 225) #27, !dbg !18781
  unreachable, !dbg !18781

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !17196, metadata !DIExpression()) #26, !dbg !18775
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #27, !dbg !18782
  call void @llvm.dbg.value(metadata i32 %34, metadata !18732, metadata !DIExpression()), !dbg !18733
  br label %40, !dbg !18783

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !18784
  call void @llvm.dbg.value(metadata i32 %36, metadata !18732, metadata !DIExpression()), !dbg !18733
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !18785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !18785
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18787
  br i1 %37, label %39, label %38, !dbg !18788

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !18789
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18789
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !18789
  unreachable, !dbg !18789

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !16509, metadata !DIExpression()) #26, !dbg !18785
  call void @llvm.dbg.value(metadata i32 %7, metadata !16523, metadata !DIExpression()) #26, !dbg !18790
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #26, !dbg !18792, !srcloc !16529
  br label %40, !dbg !18793

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !18733
  ret i32 %41, !dbg !18794
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !18795 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18799, metadata !DIExpression()), !dbg !18807
  call void @llvm.dbg.value(metadata i32 %1, metadata !18800, metadata !DIExpression()), !dbg !18807
  call void @llvm.dbg.value(metadata i8* %2, metadata !18801, metadata !DIExpression()), !dbg !18807
  call void @llvm.dbg.value(metadata i8 0, metadata !18803, metadata !DIExpression()), !dbg !18807
  call void @llvm.dbg.value(metadata i32 0, metadata !18804, metadata !DIExpression()), !dbg !18808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16475, metadata !DIExpression()) #26, !dbg !18809
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18811, !srcloc !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !18813
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #26, !dbg !18813
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !18809
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18814
  br i1 %5, label %7, label %6, !dbg !18815

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !18816
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18816
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 148) #27, !dbg !18816
  unreachable, !dbg !18816

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()) #26, !dbg !18813
  call void @llvm.dbg.value(metadata i32 undef, metadata !16481, metadata !DIExpression()) #26, !dbg !18809
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18817
  call void @llvm.dbg.value(metadata i32 undef, metadata !18806, metadata !DIExpression()), !dbg !18808
  call void @llvm.dbg.value(metadata i8 poison, metadata !18803, metadata !DIExpression()), !dbg !18807
  call void @llvm.dbg.value(metadata i32 undef, metadata !18804, metadata !DIExpression()), !dbg !18808
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #28, !dbg !18818
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18802, metadata !DIExpression()), !dbg !18807
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !18821
  br i1 %10, label %15, label %11, !dbg !18823

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18824, metadata !DIExpression()), !dbg !18831
  call void @llvm.dbg.value(metadata i32 %1, metadata !18829, metadata !DIExpression()), !dbg !18831
  call void @llvm.dbg.value(metadata i8* %2, metadata !18830, metadata !DIExpression()), !dbg !18831
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18711, metadata !DIExpression()), !dbg !18834
  call void @llvm.dbg.value(metadata i32 %1, metadata !18716, metadata !DIExpression()), !dbg !18834
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !18836
  store i32 %1, i32* %12, align 4, !dbg !18837
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18838
  store i8* %2, i8** %13, align 4, !dbg !18839
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #28, !dbg !18840
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #28, !dbg !18841
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #28, !dbg !18842
  call void @llvm.dbg.value(metadata i8 1, metadata !18803, metadata !DIExpression()), !dbg !18807
  br label %15, !dbg !18843

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !18803, metadata !DIExpression()), !dbg !18807
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !18844
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16514, metadata !DIExpression()) #26, !dbg !18844
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18846
  br i1 %16, label %18, label %17, !dbg !18847

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !18848
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18848
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.328, i32 0, i32 0), i32 noundef 194) #27, !dbg !18848
  unreachable, !dbg !18848

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !18807
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !18811
  call void @llvm.dbg.value(metadata i32 %20, metadata !16487, metadata !DIExpression()) #26, !dbg !18813
  call void @llvm.dbg.value(metadata i32 %20, metadata !16481, metadata !DIExpression()) #26, !dbg !18809
  call void @llvm.dbg.value(metadata i32 %20, metadata !18806, metadata !DIExpression()), !dbg !18808
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #26, !dbg !18844
  call void @llvm.dbg.value(metadata i32 undef, metadata !16523, metadata !DIExpression()) #26, !dbg !18849
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !18851, !srcloc !16529
  call void @llvm.dbg.value(metadata i8 poison, metadata !18803, metadata !DIExpression()), !dbg !18807
  call void @llvm.dbg.value(metadata i32 undef, metadata !18804, metadata !DIExpression()), !dbg !18808
  ret i1 %19, !dbg !18852
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !18853 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18859, metadata !DIExpression()), !dbg !18864
  call void @llvm.dbg.value(metadata i64 undef, metadata !18861, metadata !DIExpression()), !dbg !18864
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18858, metadata !DIExpression()), !dbg !18864
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !18860, metadata !DIExpression()), !dbg !18864
  call void @llvm.dbg.value(metadata i8** %4, metadata !18862, metadata !DIExpression()), !dbg !18864
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #28, !dbg !18865
  call void @llvm.dbg.value(metadata i32 %6, metadata !18863, metadata !DIExpression()), !dbg !18864
  %7 = icmp eq i8** %4, null, !dbg !18866
  br i1 %7, label %12, label %8, !dbg !18868

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18869
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18871
  %11 = load i8*, i8** %10, align 4, !dbg !18871
  store i8* %11, i8** %4, align 4, !dbg !18872
  br label %12, !dbg !18873

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !18874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !18875 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !18877
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !18878
  ret void, !dbg !18879
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18880 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !18890, metadata !DIExpression()), !dbg !18907
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18888, metadata !DIExpression()), !dbg !18907
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !18889, metadata !DIExpression()), !dbg !18907
  %5 = icmp eq i64 %4, -1, !dbg !18908
  br i1 %5, label %63, label %6, !dbg !18910

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18911
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.387(%struct._dnode* noundef %7) #28, !dbg !18911
  br i1 %8, label %9, label %10, !dbg !18914

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.390, i32 0, i32 0), i32 noundef 99) #27, !dbg !18915
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.391, i32 0, i32 0)) #27, !dbg !18915
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.390, i32 0, i32 0), i32 noundef 99) #27, !dbg !18915
  unreachable, !dbg !18915

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !18917
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !18918
  call void @llvm.dbg.value(metadata i32 0, metadata !18891, metadata !DIExpression()), !dbg !18919
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18920, metadata !DIExpression()) #26, !dbg !18927
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18929, !srcloc !18935
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !18936
  call void @llvm.dbg.value(metadata i32 undef, metadata !18933, metadata !DIExpression()) #26, !dbg !18936
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !18927
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18937
  br i1 %13, label %15, label %14, !dbg !18940

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !18941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.394, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !18941
  unreachable, !dbg !18941

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !18929
  call void @llvm.dbg.value(metadata i32 %16, metadata !18932, metadata !DIExpression()) #26, !dbg !18936
  call void @llvm.dbg.value(metadata i32 %16, metadata !18926, metadata !DIExpression()) #26, !dbg !18927
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18943
  call void @llvm.dbg.value(metadata i32 %16, metadata !18897, metadata !DIExpression()), !dbg !18919
  call void @llvm.dbg.value(metadata i32 undef, metadata !18891, metadata !DIExpression()), !dbg !18919
  %17 = icmp slt i64 %4, -1, !dbg !18944
  br i1 %17, label %18, label %24, !dbg !18945

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !18946
  %20 = add i64 %4, %19, !dbg !18947
  %21 = sub i64 -2, %20, !dbg !18947
  call void @llvm.dbg.value(metadata i64 %21, metadata !18901, metadata !DIExpression()), !dbg !18948
  %22 = icmp sgt i64 %21, 1, !dbg !18949
  %23 = select i1 %22, i64 %21, i64 1, !dbg !18949
  br label %29, !dbg !18950

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !18951
  %26 = tail call fastcc i32 @elapsed.395() #28, !dbg !18953
  %27 = sext i32 %26 to i64, !dbg !18953
  %28 = add nsw i64 %25, %27, !dbg !18954
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !18955
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18956
  store i64 %30, i64* %31, align 8, !dbg !18957
  %32 = tail call fastcc %struct._timeout* @first() #28, !dbg !18958
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !18898, metadata !DIExpression()), !dbg !18960
  %33 = icmp eq %struct._timeout* %32, null, !dbg !18961
  br i1 %33, label %48, label %34, !dbg !18961

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !18962
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !18898, metadata !DIExpression()), !dbg !18960
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18966
  %38 = load i64, i64* %37, align 8, !dbg !18966
  %39 = icmp slt i64 %35, %38, !dbg !18967
  br i1 %39, label %40, label %44, !dbg !18968

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18966
  %42 = sub nsw i64 %38, %35, !dbg !18969
  store i64 %42, i64* %41, align 8, !dbg !18969
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !18971
  tail call fastcc void @sys_dlist_insert.396(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #28, !dbg !18972
  br label %49, !dbg !18973

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !18974
  store i64 %45, i64* %31, align 8, !dbg !18974
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #28, !dbg !18975
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !18898, metadata !DIExpression()), !dbg !18960
  %47 = icmp eq %struct._timeout* %46, null, !dbg !18961
  br i1 %47, label %48, label %34, !dbg !18961, !llvm.loop !18976

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.397(%struct._dnode* noundef nonnull %7) #28, !dbg !18978
  br label %49, !dbg !18981

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #28, !dbg !18982
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !18983
  br i1 %51, label %52, label %59, !dbg !18984

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #28, !dbg !18985
  call void @llvm.dbg.value(metadata i32 %53, metadata !18904, metadata !DIExpression()), !dbg !18986
  %54 = icmp ne i32 %53, 0, !dbg !18987
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !18989
  br i1 %57, label %59, label %58, !dbg !18989

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #27, !dbg !18990
  br label %59, !dbg !18992

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !18999
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18998, metadata !DIExpression()) #26, !dbg !18999
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19001
  br i1 %60, label %62, label %61, !dbg !19004

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.399, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19005
  unreachable, !dbg !19005

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !18993, metadata !DIExpression()) #26, !dbg !18999
  call void @llvm.dbg.value(metadata i32 %16, metadata !19007, metadata !DIExpression()) #26, !dbg !19010
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !19012, !srcloc !19013
  call void @llvm.dbg.value(metadata i32 undef, metadata !18891, metadata !DIExpression()), !dbg !18919
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !19014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.387(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !19015 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19021, metadata !DIExpression()), !dbg !19022
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19023
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !19023
  %4 = icmp ne %struct._dnode* %3, null, !dbg !19024
  ret i1 %4, !dbg !19025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.395() unnamed_addr #1 !dbg !19026 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !19029
  %2 = icmp eq i32 %1, 0, !dbg !19030
  br i1 %2, label %3, label %5, !dbg !19029

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !19031
  br label %5, !dbg !19029

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !19029
  ret i32 %6, !dbg !19032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #13 !dbg !19033 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.402() #28, !dbg !19039
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !19037, metadata !DIExpression()), !dbg !19040
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !19041
  ret %struct._timeout* %2, !dbg !19042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.396(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !19043 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19047, metadata !DIExpression()), !dbg !19051
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !19048, metadata !DIExpression()), !dbg !19051
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19052
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !19052
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !19049, metadata !DIExpression()), !dbg !19051
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !19053
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !19054
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !19055
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !19056
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !19057
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !19058
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !19059
  ret void, !dbg !19060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #13 !dbg !19061 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19065, metadata !DIExpression()), !dbg !19067
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19068
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.400(%struct._dnode* noundef %2) #28, !dbg !19069
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !19066, metadata !DIExpression()), !dbg !19067
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !19070
  ret %struct._timeout* %4, !dbg !19071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.397(%struct._dnode* noundef %0) unnamed_addr #14 !dbg !19072 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19077, metadata !DIExpression()), !dbg !19080
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19078, metadata !DIExpression()), !dbg !19080
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !19081
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !19079, metadata !DIExpression()), !dbg !19080
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19082
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !19083
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19084
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !19085
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !19086
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !19087
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !19088
  ret void, !dbg !19089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !19090 {
  %1 = tail call fastcc %struct._timeout* @first() #28, !dbg !19095
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !19092, metadata !DIExpression()), !dbg !19096
  %2 = tail call fastcc i32 @elapsed.395() #28, !dbg !19097
  call void @llvm.dbg.value(metadata i32 %2, metadata !19093, metadata !DIExpression()), !dbg !19096
  %3 = icmp eq %struct._timeout* %1, null, !dbg !19098
  br i1 %3, label %14, label %4, !dbg !19100

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !19101
  %6 = load i64, i64* %5, align 8, !dbg !19101
  %7 = sext i32 %2 to i64, !dbg !19102
  %8 = sub nsw i64 %6, %7, !dbg !19103
  %9 = icmp sgt i64 %8, 2147483647, !dbg !19104
  br i1 %9, label %14, label %10, !dbg !19105

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !19106
  %12 = select i1 %11, i64 %8, i64 0, !dbg !19106
  %13 = trunc i64 %12 to i32, !dbg !19106
  call void @llvm.dbg.value(metadata i32 %13, metadata !19094, metadata !DIExpression()), !dbg !19096
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !19108
  call void @llvm.dbg.value(metadata i32 %15, metadata !19094, metadata !DIExpression()), !dbg !19096
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !19109
  %17 = icmp ne i32 %16, 0, !dbg !19111
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !19112
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !19112
  call void @llvm.dbg.value(metadata i32 %20, metadata !19094, metadata !DIExpression()), !dbg !19096
  ret i32 %20, !dbg !19113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.400(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !19114 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19118, metadata !DIExpression()), !dbg !19120
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19119, metadata !DIExpression()), !dbg !19120
  %2 = icmp eq %struct._dnode* %0, null, !dbg !19121
  br i1 %2, label %5, label %3, !dbg !19122

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.401(%struct._dnode* noundef nonnull %0) #28, !dbg !19123
  br label %5, !dbg !19122

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !19122
  ret %struct._dnode* %6, !dbg !19124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.401(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !19125 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19127, metadata !DIExpression()), !dbg !19129
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19128, metadata !DIExpression()), !dbg !19129
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !19130
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !19131
  br i1 %3, label %7, label %4, !dbg !19132

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19133
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !19133
  br label %7, !dbg !19132

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !19132
  ret %struct._dnode* %8, !dbg !19134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.402() unnamed_addr #13 !dbg !19135 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19139, metadata !DIExpression()), !dbg !19140
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.403() #28, !dbg !19141
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !19141
  ret %struct._dnode* %3, !dbg !19142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.403() unnamed_addr #13 !dbg !19143 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19147, metadata !DIExpression()), !dbg !19148
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !19149
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !19150
  ret i1 %2, !dbg !19151
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19152 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19156, metadata !DIExpression()), !dbg !19161
  call void @llvm.dbg.value(metadata i32 -22, metadata !19157, metadata !DIExpression()), !dbg !19161
  call void @llvm.dbg.value(metadata i32 0, metadata !19158, metadata !DIExpression()), !dbg !19162
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18920, metadata !DIExpression()) #26, !dbg !19163
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19165, !srcloc !18935
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19167
  call void @llvm.dbg.value(metadata i32 undef, metadata !18933, metadata !DIExpression()) #26, !dbg !19167
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19163
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19168
  br i1 %3, label %5, label %4, !dbg !19169

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19170
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.394, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19170
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19170
  unreachable, !dbg !19170

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19167
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19163
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19171
  call void @llvm.dbg.value(metadata i32 undef, metadata !19160, metadata !DIExpression()), !dbg !19162
  call void @llvm.dbg.value(metadata i32 -22, metadata !19157, metadata !DIExpression()), !dbg !19161
  call void @llvm.dbg.value(metadata i32 undef, metadata !19158, metadata !DIExpression()), !dbg !19162
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !19157, metadata !DIExpression()), !dbg !19161
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.387(%struct._dnode* noundef %6) #28, !dbg !19172
  br i1 %7, label %8, label %9, !dbg !19176

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #28, !dbg !19177
  call void @llvm.dbg.value(metadata i32 0, metadata !19157, metadata !DIExpression()), !dbg !19161
  br label %9, !dbg !19179

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !19161
  call void @llvm.dbg.value(metadata i32 %10, metadata !19157, metadata !DIExpression()), !dbg !19161
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19180
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18998, metadata !DIExpression()) #26, !dbg !19180
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19182
  br i1 %11, label %13, label %12, !dbg !19183

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19184
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.399, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19184
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19184
  unreachable, !dbg !19184

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !19165
  call void @llvm.dbg.value(metadata i32 %14, metadata !18932, metadata !DIExpression()) #26, !dbg !19167
  call void @llvm.dbg.value(metadata i32 %14, metadata !18926, metadata !DIExpression()) #26, !dbg !19163
  call void @llvm.dbg.value(metadata i32 %14, metadata !19160, metadata !DIExpression()), !dbg !19162
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19180
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #26, !dbg !19185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !19187, !srcloc !19013
  call void @llvm.dbg.value(metadata i32 %10, metadata !19157, metadata !DIExpression()), !dbg !19161
  call void @llvm.dbg.value(metadata i32 undef, metadata !19158, metadata !DIExpression()), !dbg !19162
  ret i32 %10, !dbg !19188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #14 !dbg !19189 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19191, metadata !DIExpression()), !dbg !19192
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #28, !dbg !19193
  %3 = icmp eq %struct._timeout* %2, null, !dbg !19195
  br i1 %3, label %10, label %4, !dbg !19196

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !19197
  %6 = load i64, i64* %5, align 8, !dbg !19197
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !19199
  %8 = load i64, i64* %7, align 8, !dbg !19200
  %9 = add nsw i64 %8, %6, !dbg !19200
  store i64 %9, i64* %7, align 8, !dbg !19200
  br label %10, !dbg !19201

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19202
  tail call fastcc void @sys_dlist_remove.406(%struct._dnode* noundef %11) #28, !dbg !19203
  ret void, !dbg !19204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.406(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !19205 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19209, metadata !DIExpression()), !dbg !19212
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19213
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !19213
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !19210, metadata !DIExpression()), !dbg !19212
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19214
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !19214
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !19211, metadata !DIExpression()), !dbg !19212
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !19215
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !19216
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !19217
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !19218
  tail call fastcc void @sys_dnode_init.407(%struct._dnode* noundef %0) #28, !dbg !19219
  ret void, !dbg !19220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.407(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !19221 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19223, metadata !DIExpression()), !dbg !19224
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19225
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !19226
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19227
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !19228
  ret void, !dbg !19229
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19230 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19236, metadata !DIExpression()), !dbg !19241
  call void @llvm.dbg.value(metadata i64 0, metadata !19237, metadata !DIExpression()), !dbg !19241
  call void @llvm.dbg.value(metadata i32 0, metadata !19238, metadata !DIExpression()), !dbg !19242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18920, metadata !DIExpression()) #26, !dbg !19243
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19245, !srcloc !18935
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19247
  call void @llvm.dbg.value(metadata i32 undef, metadata !18933, metadata !DIExpression()) #26, !dbg !19247
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19243
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19248
  br i1 %3, label %5, label %4, !dbg !19249

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19250
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.394, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19250
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19250
  unreachable, !dbg !19250

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19247
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19243
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19251
  call void @llvm.dbg.value(metadata i32 undef, metadata !19240, metadata !DIExpression()), !dbg !19242
  call void @llvm.dbg.value(metadata i64 0, metadata !19237, metadata !DIExpression()), !dbg !19241
  call void @llvm.dbg.value(metadata i32 undef, metadata !19238, metadata !DIExpression()), !dbg !19242
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #28, !dbg !19252
  call void @llvm.dbg.value(metadata i64 %6, metadata !19237, metadata !DIExpression()), !dbg !19241
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19255
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18998, metadata !DIExpression()) #26, !dbg !19255
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19257
  br i1 %7, label %9, label %8, !dbg !19258

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19259
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.399, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19259
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19259
  unreachable, !dbg !19259

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !19245
  call void @llvm.dbg.value(metadata i32 %10, metadata !18932, metadata !DIExpression()) #26, !dbg !19247
  call void @llvm.dbg.value(metadata i32 %10, metadata !18926, metadata !DIExpression()) #26, !dbg !19243
  call void @llvm.dbg.value(metadata i32 %10, metadata !19240, metadata !DIExpression()), !dbg !19242
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19255
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #26, !dbg !19260
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #26, !dbg !19262, !srcloc !19013
  call void @llvm.dbg.value(metadata i64 %6, metadata !19237, metadata !DIExpression()), !dbg !19241
  call void @llvm.dbg.value(metadata i32 undef, metadata !19238, metadata !DIExpression()), !dbg !19242
  ret i64 %6, !dbg !19263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !19264 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19266, metadata !DIExpression()), !dbg !19270
  call void @llvm.dbg.value(metadata i64 0, metadata !19267, metadata !DIExpression()), !dbg !19270
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.408(%struct._timeout* noundef %0) #28, !dbg !19271
  br i1 %2, label %21, label %3, !dbg !19273

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #28, !dbg !19274
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !19268, metadata !DIExpression()), !dbg !19275
  call void @llvm.dbg.value(metadata i64 0, metadata !19267, metadata !DIExpression()), !dbg !19270
  %5 = icmp eq %struct._timeout* %4, null, !dbg !19276
  br i1 %5, label %16, label %6, !dbg !19278

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !19268, metadata !DIExpression()), !dbg !19275
  call void @llvm.dbg.value(metadata i64 %8, metadata !19267, metadata !DIExpression()), !dbg !19270
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !19279
  %10 = load i64, i64* %9, align 8, !dbg !19279
  %11 = add nsw i64 %10, %8, !dbg !19281
  call void @llvm.dbg.value(metadata i64 %11, metadata !19267, metadata !DIExpression()), !dbg !19270
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !19282
  br i1 %12, label %16, label %13, !dbg !19284

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #28, !dbg !19285
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !19268, metadata !DIExpression()), !dbg !19275
  call void @llvm.dbg.value(metadata i64 %11, metadata !19267, metadata !DIExpression()), !dbg !19270
  %15 = icmp eq %struct._timeout* %14, null, !dbg !19276
  br i1 %15, label %16, label %6, !dbg !19278, !llvm.loop !19286

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !19270
  call void @llvm.dbg.value(metadata i64 %17, metadata !19267, metadata !DIExpression()), !dbg !19270
  %18 = tail call fastcc i32 @elapsed.395() #28, !dbg !19288
  %19 = sext i32 %18 to i64, !dbg !19288
  %20 = sub nsw i64 %17, %19, !dbg !19289
  br label %21, !dbg !19290

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !19270
  ret i64 %22, !dbg !19291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.408(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !19292 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19296, metadata !DIExpression()), !dbg !19297
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19298
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.387(%struct._dnode* noundef %2) #28, !dbg !19299
  %4 = xor i1 %3, true, !dbg !19300
  ret i1 %4, !dbg !19301
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19302 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19304, metadata !DIExpression()), !dbg !19309
  call void @llvm.dbg.value(metadata i64 0, metadata !19305, metadata !DIExpression()), !dbg !19309
  call void @llvm.dbg.value(metadata i32 0, metadata !19306, metadata !DIExpression()), !dbg !19310
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18920, metadata !DIExpression()) #26, !dbg !19311
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19313, !srcloc !18935
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19315
  call void @llvm.dbg.value(metadata i32 undef, metadata !18933, metadata !DIExpression()) #26, !dbg !19315
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19311
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19316
  br i1 %3, label %5, label %4, !dbg !19317

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19318
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.394, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19318
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19318
  unreachable, !dbg !19318

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19315
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19311
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19319
  call void @llvm.dbg.value(metadata i32 undef, metadata !19308, metadata !DIExpression()), !dbg !19310
  call void @llvm.dbg.value(metadata i64 0, metadata !19305, metadata !DIExpression()), !dbg !19309
  call void @llvm.dbg.value(metadata i32 undef, metadata !19306, metadata !DIExpression()), !dbg !19310
  %6 = load i64, i64* @curr_tick, align 8, !dbg !19320
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #28, !dbg !19323
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !19305, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19309
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18998, metadata !DIExpression()) #26, !dbg !19324
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19326
  br i1 %8, label %10, label %9, !dbg !19327

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19328
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.399, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19328
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19328
  unreachable, !dbg !19328

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !19313
  call void @llvm.dbg.value(metadata i32 %11, metadata !18932, metadata !DIExpression()) #26, !dbg !19315
  call void @llvm.dbg.value(metadata i32 %11, metadata !18926, metadata !DIExpression()) #26, !dbg !19311
  call void @llvm.dbg.value(metadata i32 %11, metadata !19308, metadata !DIExpression()), !dbg !19310
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !19305, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19309
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19324
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #26, !dbg !19329
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #26, !dbg !19331, !srcloc !19013
  call void @llvm.dbg.value(metadata i32 undef, metadata !19306, metadata !DIExpression()), !dbg !19310
  %12 = add i64 %7, %6, !dbg !19332
  ret i64 %12, !dbg !19333
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !19334 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !19336, metadata !DIExpression()), !dbg !19340
  call void @llvm.dbg.value(metadata i32 0, metadata !19337, metadata !DIExpression()), !dbg !19341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18920, metadata !DIExpression()) #26, !dbg !19342
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19344, !srcloc !18935
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19346
  call void @llvm.dbg.value(metadata i32 undef, metadata !18933, metadata !DIExpression()) #26, !dbg !19346
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19342
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19347
  br i1 %2, label %4, label %3, !dbg !19348

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19349
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.394, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19349
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19349
  unreachable, !dbg !19349

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19346
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19342
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19350
  call void @llvm.dbg.value(metadata i32 undef, metadata !19339, metadata !DIExpression()), !dbg !19341
  call void @llvm.dbg.value(metadata i32 -1, metadata !19336, metadata !DIExpression()), !dbg !19340
  call void @llvm.dbg.value(metadata i32 undef, metadata !19337, metadata !DIExpression()), !dbg !19341
  %5 = tail call fastcc i32 @next_timeout() #28, !dbg !19351
  call void @llvm.dbg.value(metadata i32 %5, metadata !19336, metadata !DIExpression()), !dbg !19340
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18998, metadata !DIExpression()) #26, !dbg !19354
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19356
  br i1 %6, label %8, label %7, !dbg !19357

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19358
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.399, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19358
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19358
  unreachable, !dbg !19358

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !19344
  call void @llvm.dbg.value(metadata i32 %9, metadata !18932, metadata !DIExpression()) #26, !dbg !19346
  call void @llvm.dbg.value(metadata i32 %9, metadata !18926, metadata !DIExpression()) #26, !dbg !19342
  call void @llvm.dbg.value(metadata i32 %9, metadata !19339, metadata !DIExpression()), !dbg !19341
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19354
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #26, !dbg !19359
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !19361, !srcloc !19013
  call void @llvm.dbg.value(metadata i32 %5, metadata !19336, metadata !DIExpression()), !dbg !19340
  call void @llvm.dbg.value(metadata i32 undef, metadata !19337, metadata !DIExpression()), !dbg !19341
  ret i32 %5, !dbg !19362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !19363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19365, metadata !DIExpression()), !dbg !19375
  call void @llvm.dbg.value(metadata i1 %1, metadata !19366, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19375
  call void @llvm.dbg.value(metadata i32 0, metadata !19367, metadata !DIExpression()), !dbg !19376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18920, metadata !DIExpression()) #26, !dbg !19377
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19379, !srcloc !18935
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19381
  call void @llvm.dbg.value(metadata i32 undef, metadata !18933, metadata !DIExpression()) #26, !dbg !19381
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19377
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19382
  br i1 %4, label %6, label %5, !dbg !19383

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19384
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.394, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19384
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19384
  unreachable, !dbg !19384

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19381
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19377
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19385
  call void @llvm.dbg.value(metadata i32 undef, metadata !19369, metadata !DIExpression()), !dbg !19376
  call void @llvm.dbg.value(metadata i32 undef, metadata !19367, metadata !DIExpression()), !dbg !19376
  %7 = tail call fastcc i32 @next_timeout() #28, !dbg !19386
  call void @llvm.dbg.value(metadata i32 %7, metadata !19370, metadata !DIExpression()), !dbg !19387
  call void @llvm.dbg.value(metadata i1 undef, metadata !19373, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19387
  %8 = icmp slt i32 %7, 2, !dbg !19388
  call void @llvm.dbg.value(metadata i1 %8, metadata !19374, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19387
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !19389
  call void @llvm.dbg.value(metadata i1 %9, metadata !19373, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19387
  br i1 %10, label %14, label %11, !dbg !19389

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !19391
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !19391
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #27, !dbg !19393
  br label %14, !dbg !19394

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19395
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18998, metadata !DIExpression()) #26, !dbg !19395
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19397
  br i1 %15, label %17, label %16, !dbg !19398

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19399
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.399, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19399
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19399
  unreachable, !dbg !19399

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !19379
  call void @llvm.dbg.value(metadata i32 %18, metadata !18932, metadata !DIExpression()) #26, !dbg !19381
  call void @llvm.dbg.value(metadata i32 %18, metadata !18926, metadata !DIExpression()) #26, !dbg !19377
  call void @llvm.dbg.value(metadata i32 %18, metadata !19369, metadata !DIExpression()), !dbg !19376
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19395
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #26, !dbg !19400
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !19402, !srcloc !19013
  call void @llvm.dbg.value(metadata i32 1, metadata !19367, metadata !DIExpression()), !dbg !19376
  call void @llvm.dbg.value(metadata i32 undef, metadata !19367, metadata !DIExpression()), !dbg !19376
  ret void, !dbg !19403
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !19404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19408, metadata !DIExpression()), !dbg !19413
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !19414
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18920, metadata !DIExpression()) #26, !dbg !19415
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19417, !srcloc !18935
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19419
  call void @llvm.dbg.value(metadata i32 undef, metadata !18933, metadata !DIExpression()) #26, !dbg !19419
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19415
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19420
  br i1 %3, label %5, label %4, !dbg !19421

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19422
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.394, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19422
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19422
  unreachable, !dbg !19422

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19419
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19415
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19423
  call void @llvm.dbg.value(metadata i32 undef, metadata !19409, metadata !DIExpression()), !dbg !19413
  store i32 %0, i32* @announce_remaining, align 4, !dbg !19413
  call void @llvm.dbg.value(metadata i32 undef, metadata !19409, metadata !DIExpression()), !dbg !19413
  %6 = tail call fastcc %struct._timeout* @first() #28, !dbg !19424
  %7 = icmp eq %struct._timeout* %6, null, !dbg !19425
  br i1 %7, label %37, label %8, !dbg !19426

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !19413
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !19427
  %14 = load i64, i64* %13, align 8, !dbg !19427
  %15 = sext i32 %11 to i64, !dbg !19428
  %16 = icmp sgt i64 %14, %15, !dbg !19429
  br i1 %16, label %35, label %17, !dbg !19430

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !19410, metadata !DIExpression()), !dbg !19431
  %18 = trunc i64 %14 to i32, !dbg !19432
  call void @llvm.dbg.value(metadata i32 %18, metadata !19412, metadata !DIExpression()), !dbg !19431
  %19 = sext i32 %18 to i64, !dbg !19433
  %20 = load i64, i64* @curr_tick, align 8, !dbg !19434
  %21 = add i64 %20, %19, !dbg !19434
  store i64 %21, i64* @curr_tick, align 8, !dbg !19434
  store i64 0, i64* %13, align 8, !dbg !19435
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #28, !dbg !19436
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19437
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18998, metadata !DIExpression()) #26, !dbg !19437
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19439
  br i1 %22, label %24, label %23, !dbg !19440

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19441
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.399, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19441
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19441
  unreachable, !dbg !19441

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !18993, metadata !DIExpression()) #26, !dbg !19437
  call void @llvm.dbg.value(metadata i32 %12, metadata !19007, metadata !DIExpression()) #26, !dbg !19442
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #26, !dbg !19444, !srcloc !19013
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !19445
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !19445
  tail call void %26(%struct._timeout* noundef nonnull %9) #27, !dbg !19446
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18920, metadata !DIExpression()) #26, !dbg !19447
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19449, !srcloc !18935
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19451
  call void @llvm.dbg.value(metadata i32 undef, metadata !18933, metadata !DIExpression()) #26, !dbg !19451
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19447
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19452
  br i1 %28, label %30, label %29, !dbg !19453

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19454
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.394, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19454
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19454
  unreachable, !dbg !19454

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19451
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19447
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19455
  call void @llvm.dbg.value(metadata i32 undef, metadata !19409, metadata !DIExpression()), !dbg !19413
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !19456
  %32 = sub nsw i32 %31, %18, !dbg !19456
  store i32 %32, i32* @announce_remaining, align 4, !dbg !19413
  call void @llvm.dbg.value(metadata i32 undef, metadata !19409, metadata !DIExpression()), !dbg !19413
  %33 = tail call fastcc %struct._timeout* @first() #28, !dbg !19424
  %34 = icmp eq %struct._timeout* %33, null, !dbg !19425
  br i1 %34, label %37, label %8, !dbg !19426, !llvm.loop !19457

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !19459
  store i64 %36, i64* %13, align 8, !dbg !19459
  br label %41, !dbg !19462

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !19413
  %40 = sext i32 %39 to i64, !dbg !19463
  br label %41, !dbg !19463

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !19463
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !19464
  %45 = add i64 %44, %42, !dbg !19464
  store i64 %45, i64* @curr_tick, align 8, !dbg !19464
  store i32 0, i32* @announce_remaining, align 4, !dbg !19465
  %46 = tail call fastcc i32 @next_timeout() #28, !dbg !19466
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #27, !dbg !19467
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19468
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18998, metadata !DIExpression()) #26, !dbg !19468
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19470
  br i1 %47, label %49, label %48, !dbg !19471

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19472
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.399, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19472
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19472
  unreachable, !dbg !19472

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !19413
  call void @llvm.dbg.value(metadata i32 %50, metadata !18993, metadata !DIExpression()) #26, !dbg !19468
  call void @llvm.dbg.value(metadata i32 %50, metadata !19007, metadata !DIExpression()) #26, !dbg !19473
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #26, !dbg !19475, !srcloc !19013
  ret void, !dbg !19476
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !19477 {
  call void @llvm.dbg.value(metadata i64 0, metadata !19481, metadata !DIExpression()), !dbg !19485
  call void @llvm.dbg.value(metadata i32 0, metadata !19482, metadata !DIExpression()), !dbg !19486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18920, metadata !DIExpression()) #26, !dbg !19487
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19489, !srcloc !18935
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19491
  call void @llvm.dbg.value(metadata i32 undef, metadata !18933, metadata !DIExpression()) #26, !dbg !19491
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19487
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19492
  br i1 %2, label %4, label %3, !dbg !19493

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.394, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 148) #27, !dbg !19494
  unreachable, !dbg !19494

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18932, metadata !DIExpression()) #26, !dbg !19491
  call void @llvm.dbg.value(metadata i32 undef, metadata !18926, metadata !DIExpression()) #26, !dbg !19487
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19495
  call void @llvm.dbg.value(metadata i32 undef, metadata !19484, metadata !DIExpression()), !dbg !19486
  call void @llvm.dbg.value(metadata i64 0, metadata !19481, metadata !DIExpression()), !dbg !19485
  call void @llvm.dbg.value(metadata i32 undef, metadata !19482, metadata !DIExpression()), !dbg !19486
  %5 = load i64, i64* @curr_tick, align 8, !dbg !19496
  %6 = tail call fastcc i32 @elapsed.395() #28, !dbg !19499
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !19481, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !19485
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18998, metadata !DIExpression()) #26, !dbg !19500
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19502
  br i1 %7, label %9, label %8, !dbg !19503

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19504
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.399, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !19504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.393, i32 0, i32 0), i32 noundef 194) #27, !dbg !19504
  unreachable, !dbg !19504

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !19489
  call void @llvm.dbg.value(metadata i32 %10, metadata !18932, metadata !DIExpression()) #26, !dbg !19491
  call void @llvm.dbg.value(metadata i32 %10, metadata !18926, metadata !DIExpression()) #26, !dbg !19487
  call void @llvm.dbg.value(metadata i32 %10, metadata !19484, metadata !DIExpression()), !dbg !19486
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !19481, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !19485
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !19481, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19485
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #26, !dbg !19500
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #26, !dbg !19505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #26, !dbg !19507, !srcloc !19013
  call void @llvm.dbg.value(metadata i32 undef, metadata !19482, metadata !DIExpression()), !dbg !19486
  %11 = sext i32 %6 to i64, !dbg !19499
  %12 = add i64 %5, %11, !dbg !19508
  ret i64 %12, !dbg !19509
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !19510 {
  %1 = tail call i64 @sys_clock_tick_get() #28, !dbg !19511
  %2 = trunc i64 %1 to i32, !dbg !19512
  ret i32 %2, !dbg !19513
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !19514 {
  %1 = tail call i64 @sys_clock_tick_get() #28, !dbg !19515
  ret i64 %1, !dbg !19516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !19517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19519, metadata !DIExpression()), !dbg !19526
  %2 = icmp eq i32 %0, 0, !dbg !19527
  br i1 %2, label %10, label %3, !dbg !19529

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.415() #28, !dbg !19530
  call void @llvm.dbg.value(metadata i32 %4, metadata !19520, metadata !DIExpression()), !dbg !19526
  %5 = mul i32 %0, 84, !dbg !19531
  call void @llvm.dbg.value(metadata i32 %5, metadata !19521, metadata !DIExpression()), !dbg !19526
  br label %6, !dbg !19532

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.415() #28, !dbg !19533
  call void @llvm.dbg.value(metadata i32 %7, metadata !19522, metadata !DIExpression()), !dbg !19534
  %8 = sub i32 %7, %4, !dbg !19535
  %9 = icmp ult i32 %8, %5, !dbg !19537
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !19538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.415() unnamed_addr #1 !dbg !19539 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.416() #28, !dbg !19540
  ret i32 %1, !dbg !19541
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.416() unnamed_addr #1 !dbg !19542 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !19543
  ret i32 %1, !dbg !19544
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !19545 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !19549, metadata !DIExpression()), !dbg !19551
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !19552

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #28, !dbg !19553
  br label %14, !dbg !19557

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !19550, metadata !DIExpression()), !dbg !19551
  %6 = icmp slt i64 %2, -1, !dbg !19558
  br i1 %6, label %7, label %9, !dbg !19561

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !19562
  br label %14, !dbg !19563

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #28, !dbg !19565
  %11 = icmp ugt i64 %2, 1, !dbg !19566
  %12 = select i1 %11, i64 %2, i64 1, !dbg !19566
  %13 = add nsw i64 %10, %12, !dbg !19567
  br label %14, !dbg !19568

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !19569
  ret i64 %15, !dbg !19570
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !19571 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.419, i32 0, i32 0)) #27, !dbg !19573
  ret void, !dbg !19574
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !19575 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !19577, metadata !DIExpression()), !dbg !19599
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !19578, metadata !DIExpression()), !dbg !19600
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !19601

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.421, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.423, i32 0, i32 0), i32 noundef 24) #27, !dbg !19605
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.424, i32 0, i32 0)) #27, !dbg !19605
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.423, i32 0, i32 0), i32 noundef 24) #27, !dbg !19605
  unreachable, !dbg !19605

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !19578, metadata !DIExpression()), !dbg !19600
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !19608
  br i1 %5, label %7, label %6, !dbg !19609

6:                                                ; preds = %3
  ret i32 0, !dbg !19610

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !19611
  %9 = load i8*, i8** %8, align 4, !dbg !19611
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !19614
  %11 = load i32, i32* %10, align 4, !dbg !19614
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #28, !dbg !19615
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !19616
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !19578, metadata !DIExpression()), !dbg !19600
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !19617
  br i1 %13, label %2, label %3, !dbg !19601, !llvm.loop !19618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !19620 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19624, metadata !DIExpression()), !dbg !19627
  call void @llvm.dbg.value(metadata i8* %1, metadata !19625, metadata !DIExpression()), !dbg !19627
  call void @llvm.dbg.value(metadata i32 %2, metadata !19626, metadata !DIExpression()), !dbg !19627
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19628
  tail call fastcc void @z_waitq_init.425(%union.anon* noundef nonnull %4) #28, !dbg !19629
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19630
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !19631
  ret void, !dbg !19632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.425(%union.anon* noundef %0) unnamed_addr #12 !dbg !19633 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !19638, metadata !DIExpression()), !dbg !19639
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !19640
  tail call fastcc void @sys_dlist_init.426(%struct._dnode* noundef %2) #28, !dbg !19641
  ret void, !dbg !19642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.426(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !19643 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19648, metadata !DIExpression()), !dbg !19649
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19650
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !19651
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19652
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !19653
  ret void, !dbg !19654
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !19655 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !19666, metadata !DIExpression()), !dbg !19676
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19663, metadata !DIExpression()), !dbg !19676
  call void @llvm.dbg.value(metadata i32 %1, metadata !19664, metadata !DIExpression()), !dbg !19676
  call void @llvm.dbg.value(metadata i32 %2, metadata !19665, metadata !DIExpression()), !dbg !19676
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !19677
  call void @llvm.dbg.value(metadata i64 %6, metadata !19668, metadata !DIExpression()), !dbg !19676
  call void @llvm.dbg.value(metadata i8* null, metadata !19669, metadata !DIExpression()), !dbg !19676
  %7 = icmp eq i64 %5, -1, !dbg !19678
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !19678
  call void @llvm.dbg.value(metadata i64 %8, metadata !19668, metadata !DIExpression()), !dbg !19676
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19679
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19680, metadata !DIExpression()) #26, !dbg !19687
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19689, !srcloc !19695
  call void @llvm.dbg.value(metadata i32 undef, metadata !19692, metadata !DIExpression()) #26, !dbg !19696
  call void @llvm.dbg.value(metadata i32 undef, metadata !19693, metadata !DIExpression()) #26, !dbg !19696
  call void @llvm.dbg.value(metadata i32 undef, metadata !19686, metadata !DIExpression()) #26, !dbg !19687
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19697
  br i1 %11, label %13, label %12, !dbg !19700

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.421, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.427, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.428, i32 0, i32 0), i32 noundef 148) #27, !dbg !19701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.429, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.428, i32 0, i32 0), i32 noundef 148) #27, !dbg !19701
  unreachable, !dbg !19701

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !19692, metadata !DIExpression()) #26, !dbg !19696
  call void @llvm.dbg.value(metadata i32 undef, metadata !19686, metadata !DIExpression()) #26, !dbg !19687
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19703
  call void @llvm.dbg.value(metadata i32 undef, metadata !19670, metadata !DIExpression()), !dbg !19676
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !19704, !srcloc !19713
  call void @llvm.dbg.value(metadata i32 %14, metadata !19707, metadata !DIExpression()) #26, !dbg !19714
  %15 = icmp eq i32 %14, 0, !dbg !19715
  %16 = icmp eq i64 %5, 0, !dbg !19716
  %17 = select i1 %15, i1 true, i1 %16, !dbg !19716
  br i1 %17, label %18, label %25, !dbg !19716

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !19669, metadata !DIExpression()), !dbg !19676
  call void @llvm.dbg.value(metadata i8 0, metadata !19675, metadata !DIExpression()), !dbg !19676
  call void @llvm.dbg.value(metadata i32 undef, metadata !19670, metadata !DIExpression()), !dbg !19676
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !19717
  call void @llvm.dbg.value(metadata i8* %20, metadata !19669, metadata !DIExpression()), !dbg !19676
  %21 = tail call i64 @sys_clock_tick_get() #27, !dbg !19719
  call void @llvm.dbg.value(metadata i64 %21, metadata !19667, metadata !DIExpression()), !dbg !19676
  %22 = icmp eq i8* %20, null, !dbg !19720
  br i1 %22, label %23, label %43, !dbg !19722

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !19670, metadata !DIExpression()), !dbg !19676
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !19722

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.421, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.430, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.423, i32 0, i32 0), i32 noundef 76) #27, !dbg !19723
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.431, i32 0, i32 0)) #27, !dbg !19723
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.423, i32 0, i32 0), i32 noundef 76) #27, !dbg !19723
  unreachable, !dbg !19723

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !19675, metadata !DIExpression()), !dbg !19676
  %29 = sub nsw i64 %8, %27, !dbg !19725
  %30 = icmp slt i64 %29, 1, !dbg !19726
  br i1 %30, label %43, label %31, !dbg !19727

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !19676
  call void @llvm.dbg.value(metadata i8 undef, metadata !19675, metadata !DIExpression()), !dbg !19676
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !19728
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !19728
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %union.anon* noundef nonnull %24, [1 x i64] %34) #27, !dbg !19728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19680, metadata !DIExpression()) #26, !dbg !19729
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19731, !srcloc !19695
  call void @llvm.dbg.value(metadata i32 undef, metadata !19692, metadata !DIExpression()) #26, !dbg !19733
  call void @llvm.dbg.value(metadata i32 undef, metadata !19693, metadata !DIExpression()) #26, !dbg !19733
  call void @llvm.dbg.value(metadata i32 undef, metadata !19686, metadata !DIExpression()) #26, !dbg !19729
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19734
  br i1 %37, label %39, label %38, !dbg !19735

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.421, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.427, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.428, i32 0, i32 0), i32 noundef 148) #27, !dbg !19736
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.429, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19736
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.428, i32 0, i32 0), i32 noundef 148) #27, !dbg !19736
  unreachable, !dbg !19736

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !19675, metadata !DIExpression()), !dbg !19676
  call void @llvm.dbg.value(metadata i32 undef, metadata !19692, metadata !DIExpression()) #26, !dbg !19733
  call void @llvm.dbg.value(metadata i32 undef, metadata !19686, metadata !DIExpression()) #26, !dbg !19729
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19737
  call void @llvm.dbg.value(metadata i32 undef, metadata !19670, metadata !DIExpression()), !dbg !19676
  call void @llvm.dbg.value(metadata i8* null, metadata !19669, metadata !DIExpression()), !dbg !19676
  call void @llvm.dbg.value(metadata i32 undef, metadata !19670, metadata !DIExpression()), !dbg !19676
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !19717
  call void @llvm.dbg.value(metadata i8* %40, metadata !19669, metadata !DIExpression()), !dbg !19676
  %41 = tail call i64 @sys_clock_tick_get() #27, !dbg !19719
  call void @llvm.dbg.value(metadata i64 %41, metadata !19667, metadata !DIExpression()), !dbg !19676
  %42 = icmp eq i8* %40, null, !dbg !19720
  br i1 %42, label %26, label %43, !dbg !19722, !llvm.loop !19738

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !19717
  call void @llvm.dbg.value(metadata i8* %45, metadata !19669, metadata !DIExpression()), !dbg !19676
  call void @llvm.dbg.value(metadata i32 undef, metadata !19741, metadata !DIExpression()) #26, !dbg !19747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19746, metadata !DIExpression()) #26, !dbg !19747
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19749
  br i1 %46, label %48, label %47, !dbg !19752

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.421, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.432, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.428, i32 0, i32 0), i32 noundef 194) #27, !dbg !19753
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.433, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19753
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.428, i32 0, i32 0), i32 noundef 194) #27, !dbg !19753
  unreachable, !dbg !19753

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !19676
  call void @llvm.dbg.value(metadata i32 %49, metadata !19741, metadata !DIExpression()) #26, !dbg !19747
  call void @llvm.dbg.value(metadata i32 %49, metadata !19755, metadata !DIExpression()) #26, !dbg !19758
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #26, !dbg !19760, !srcloc !19761
  ret i8* %45, !dbg !19762
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19763 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19769, metadata !DIExpression()), !dbg !19771
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19767, metadata !DIExpression()), !dbg !19771
  call void @llvm.dbg.value(metadata i32 %1, metadata !19768, metadata !DIExpression()), !dbg !19771
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #28, !dbg !19772
  call void @llvm.dbg.value(metadata i8* %4, metadata !19770, metadata !DIExpression()), !dbg !19771
  ret i8* %4, !dbg !19773
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !19774 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19778, metadata !DIExpression()), !dbg !19781
  call void @llvm.dbg.value(metadata i8* %1, metadata !19779, metadata !DIExpression()), !dbg !19781
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19782
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19680, metadata !DIExpression()) #26, !dbg !19783
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19785, !srcloc !19695
  call void @llvm.dbg.value(metadata i32 undef, metadata !19692, metadata !DIExpression()) #26, !dbg !19787
  call void @llvm.dbg.value(metadata i32 undef, metadata !19693, metadata !DIExpression()) #26, !dbg !19787
  call void @llvm.dbg.value(metadata i32 undef, metadata !19686, metadata !DIExpression()) #26, !dbg !19783
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19788
  br i1 %5, label %7, label %6, !dbg !19789

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.421, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.427, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.428, i32 0, i32 0), i32 noundef 148) #27, !dbg !19790
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.429, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !19790
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.428, i32 0, i32 0), i32 noundef 148) #27, !dbg !19790
  unreachable, !dbg !19790

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !19785
  call void @llvm.dbg.value(metadata i32 %8, metadata !19692, metadata !DIExpression()) #26, !dbg !19787
  call void @llvm.dbg.value(metadata i32 %8, metadata !19686, metadata !DIExpression()) #26, !dbg !19783
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19791
  call void @llvm.dbg.value(metadata i32 %8, metadata !19780, metadata !DIExpression()), !dbg !19781
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19792
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #27, !dbg !19793
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19794
  %11 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %10) #27, !dbg !19796
  %12 = icmp eq i32 %11, 0, !dbg !19797
  br i1 %12, label %15, label %13, !dbg !19798

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !19799
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #27, !dbg !19799
  br label %19, !dbg !19801

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !19741, metadata !DIExpression()) #26, !dbg !19802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19746, metadata !DIExpression()) #26, !dbg !19802
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19805
  br i1 %16, label %18, label %17, !dbg !19806

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.421, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.432, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.428, i32 0, i32 0), i32 noundef 194) #27, !dbg !19807
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.433, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !19807
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.428, i32 0, i32 0), i32 noundef 194) #27, !dbg !19807
  unreachable, !dbg !19807

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !19741, metadata !DIExpression()) #26, !dbg !19802
  call void @llvm.dbg.value(metadata i32 %8, metadata !19755, metadata !DIExpression()) #26, !dbg !19808
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !19810, !srcloc !19761
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !19811
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree noinline nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { nofree nosync nounwind willreturn }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { argmemonly nofree nounwind willreturn writeonly }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { nounwind }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin optsize "no-builtins" }
attributes #29 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #30 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #31 = { nounwind readnone }
attributes #32 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!944, !2, !2647, !27, !354, !420, !442, !2649, !2651, !2684, !2718, !2720, !452, !503, !2722, !2725, !2736, !2782, !2784, !2812, !2840, !2883, !2954, !2999, !532, !674, !3027, !710, !720, !745, !982, !3032, !1121, !1187, !1492, !1776, !3073, !1891, !1981, !3075, !3138, !3205, !2033, !3208, !2040, !2413, !3226, !3228, !2433, !2458, !3334, !2575, !3337, !2616}
!llvm.ident = !{!3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339, !3339}
!llvm.module.flags = !{!3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !120, line: 10, type: !346, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !117, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !105, !106, !107, !111, !113, !114, !116}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!106 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !108, line: 46, baseType: !109)
!108 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !110)
!110 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !112, line: 214, baseType: !32)
!112 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !105)
!117 = !{!25, !118, !271, !275, !282, !315, !320, !324, !326}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "_k_thread_data_metairq_thread", scope: !27, file: !120, line: 28, type: !121, isLocal: false, isDefinition: true, align: 32)
!120 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = !{!124, !244, !252, !253, !258, !259, !260, !261, !262, !263, !264, !268}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !121, file: !122, line: 621, baseType: !125, size: 32)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !{!129, !198, !211, !212, !213, !214, !220, !239}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !126, file: !127, line: 247, baseType: !130, size: 384)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !131)
!131 = !{!132, !160, !168, !171, !172, !185, !186, !187}
!132 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 60, baseType: !133, size: 64)
!133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 60, size: 64, elements: !134)
!134 = !{!135, !151}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !133, file: !127, line: 61, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !139)
!139 = !{!140, !146}
!140 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 38, baseType: !141, size: 32)
!141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 38, size: 32, elements: !142)
!142 = !{!143, !145}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !141, file: !137, line: 39, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !141, file: !137, line: 40, baseType: !144, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 42, baseType: !147, size: 32, offset: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 42, size: 32, elements: !148)
!148 = !{!149, !150}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !147, file: !137, line: 43, baseType: !144, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !147, file: !137, line: 44, baseType: !144, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !133, file: !127, line: 62, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = !{!155}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !152, file: !153, line: 50, baseType: !156, size: 64)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !158)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!158 = !{!159}
!159 = !DISubrange(count: 2)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !130, file: !127, line: 68, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !165)
!165 = !{!166}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !164, file: !163, line: 232, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !138)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !130, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !170)
!170 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !130, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 90, baseType: !173, size: 16, offset: 112)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 90, size: 16, elements: !174)
!174 = !{!175, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, scope: !173, file: !127, line: 91, baseType: !176, size: 16)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !173, file: !127, line: 91, size: 16, elements: !177)
!177 = !{!178, !181}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !176, file: !127, line: 96, baseType: !179, size: 8)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !180)
!180 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !176, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !173, file: !127, line: 100, baseType: !183, size: 16)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !184)
!184 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !130, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !130, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !130, file: !127, line: 131, baseType: !188, size: 192, offset: 192)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !189)
!189 = !{!190, !191, !197}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !188, file: !163, line: 245, baseType: !136, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !188, file: !163, line: 246, baseType: !192, size: 32, offset: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DISubroutineType(types: !195)
!195 = !{null, !196}
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !188, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !126, file: !127, line: 250, baseType: !199, size: 288, offset: 384)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !201)
!200 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !{!202, !203, !204, !205, !206, !207, !208, !209, !210}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !199, file: !200, line: 26, baseType: !113, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !199, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !199, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !199, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !199, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !199, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !199, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !199, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !199, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !126, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !126, file: !127, line: 256, baseType: !162, size: 64, offset: 704)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !126, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !126, file: !127, line: 300, baseType: !215, size: 96, offset: 800)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !216)
!216 = !{!217, !218, !219}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !215, file: !127, line: 153, baseType: !22, size: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !215, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !215, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !126, file: !127, line: 325, baseType: !221, size: 32, offset: 896)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !223)
!223 = !{!224, !233, !234}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !222, file: !122, line: 5074, baseType: !225, size: 96)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !227)
!226 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!227 = !{!228, !231, !232}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !225, file: !226, line: 57, baseType: !229, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 32)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !226, line: 57, flags: DIFlagFwdDecl)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !225, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !225, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !222, file: !122, line: 5075, baseType: !162, size: 64, offset: 96)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !222, file: !122, line: 5076, baseType: !235, size: 32, offset: 160)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !237)
!236 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !235, file: !236, line: 52, baseType: !22, size: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !126, file: !127, line: 343, baseType: !240, size: 64, offset: 928)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !241)
!241 = !{!242, !243}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !240, file: !200, line: 63, baseType: !113, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !240, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !121, file: !122, line: 622, baseType: !245, size: 32, offset: 32)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{!251}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !248, file: !249, line: 48, baseType: !103, size: 8)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !121, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !121, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !247, line: 46, baseType: !255)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!256 = !DISubroutineType(types: !257)
!257 = !{null, !104, !104, !104}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !121, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !121, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !121, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !121, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !121, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !121, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !121, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = !DISubroutineType(types: !267)
!267 = !{null}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !121, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!271 = !DIGlobalVariableExpression(var: !272, expr: !DIExpression())
!272 = distinct !DIGlobalVariable(name: "metairq_thread", scope: !27, file: !120, line: 28, type: !273, isLocal: false, isDefinition: true)
!273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !125)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "report_cookie", scope: !27, file: !120, line: 46, type: !277, isLocal: false, isDefinition: true, align: 32)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !278)
!278 = !{!279, !280, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !277, file: !122, line: 2910, baseType: !162, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !277, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !277, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!282 = !DIGlobalVariableExpression(var: !283, expr: !DIExpression())
!283 = distinct !DIGlobalVariable(name: "threads", scope: !27, file: !120, line: 22, type: !284, isLocal: true, isDefinition: true)
!284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 15872, elements: !313)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_rec", file: !120, line: 18, size: 3968, elements: !286)
!286 = !{!287, !288, !301}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !285, file: !120, line: 19, baseType: !126, size: 1024)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !285, file: !120, line: 20, baseType: !289, size: 352, offset: 1024)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !290)
!290 = !{!291, !292, !293, !294, !295, !296, !297, !298, !299, !300}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !289, file: !122, line: 4206, baseType: !162, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !289, file: !122, line: 4208, baseType: !235, size: 32, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !289, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !289, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !289, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !289, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !289, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !289, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !289, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !289, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "msgq_buf", scope: !285, file: !120, line: 21, baseType: !302, size: 2560, offset: 1376)
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 2560, elements: !311)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !305)
!304 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !{!306, !307, !308, !309, !310}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !303, file: !304, line: 46, baseType: !113, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !303, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !303, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !303, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !303, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!311 = !{!312}
!312 = !DISubrange(count: 16)
!313 = !{!314}
!314 = !DISubrange(count: 4)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "thread_stacks", scope: !27, file: !120, line: 24, type: !317, isLocal: false, isDefinition: true, align: 512)
!317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 67584, elements: !318)
!318 = !{!314, !319}
!319 = !DISubrange(count: 2112)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "_k_thread_stack_metairq_thread", scope: !27, file: !120, line: 28, type: !322, isLocal: false, isDefinition: true, align: 512)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 16896, elements: !323)
!323 = !{!319}
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "_k_thread_obj_metairq_thread", scope: !27, file: !120, line: 28, type: !126, isLocal: false, isDefinition: true)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "stats", scope: !27, file: !120, line: 41, type: !328, isLocal: false, isDefinition: true)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !120, line: 34, size: 4000, elements: !329)
!329 = !{!330, !333, !337}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "num_mirq", scope: !328, file: !120, line: 35, baseType: !331, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !332, line: 22, baseType: !106)
!332 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!333 = !DIDerivedType(tag: DW_TAG_member, name: "mirq_latencies", scope: !328, file: !120, line: 36, baseType: !334, size: 1280, offset: 32)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1280, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 40)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !328, file: !120, line: 40, baseType: !338, size: 2688, offset: 1312)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 2688, elements: !313)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !328, file: !120, line: 37, size: 672, elements: !340)
!340 = !{!341, !342}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "nevt", scope: !339, file: !120, line: 38, baseType: !113, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "latencies", scope: !339, file: !120, line: 39, baseType: !343, size: 640, offset: 32)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 640, elements: !344)
!344 = !{!345}
!345 = !DISubrange(count: 20)
!346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !349)
!348 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !347, file: !348, line: 17, baseType: !269, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !347, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "hw_msgs", scope: !354, file: !360, line: 27, type: !398, isLocal: false, isDefinition: true, align: 32)
!354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !356, globals: !357, splitDebugInlining: false, nameTableKind: None)
!355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!356 = !{!107, !104, !105, !113, !114}
!357 = !{!352, !358, !385, !387, !389, !392}
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "timeout", scope: !354, file: !360, line: 17, type: !361, isLocal: true, isDefinition: true)
!360 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !362)
!362 = !{!363, !378, !384}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !361, file: !163, line: 245, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !366)
!366 = !{!367, !373}
!367 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 38, baseType: !368, size: 32)
!368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 38, size: 32, elements: !369)
!369 = !{!370, !372}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !368, file: !137, line: 39, baseType: !371, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !368, file: !137, line: 40, baseType: !371, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 42, baseType: !374, size: 32, offset: 32)
!374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 42, size: 32, elements: !375)
!375 = !{!376, !377}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !374, file: !137, line: 43, baseType: !371, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !374, file: !137, line: 44, baseType: !371, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !361, file: !163, line: 246, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !380)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 32)
!381 = !DISubroutineType(types: !382)
!382 = !{null, !383}
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !361, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "max_duty_cyc", scope: !354, file: !360, line: 23, type: !113, isLocal: false, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "msg_seq", scope: !354, file: !360, line: 25, type: !113, isLocal: false, isDefinition: true)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "_k_fifo_buf_hw_msgs", scope: !354, file: !360, line: 27, type: !391, isLocal: true, isDefinition: true, align: 32)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 320, elements: !335)
!392 = !DIGlobalVariableExpression(var: !393, expr: !DIExpression())
!393 = distinct !DIGlobalVariable(name: "state", scope: !394, file: !360, line: 38, type: !114, isLocal: true, isDefinition: true)
!394 = distinct !DISubprogram(name: "rand32", scope: !360, file: !360, line: 36, type: !395, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!395 = !DISubroutineType(types: !396)
!396 = !{!113}
!397 = !{}
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !399)
!399 = !{!400, !406, !410, !411, !412, !413, !414, !415, !416, !417}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !398, file: !122, line: 4206, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !402, file: !163, line: 232, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !365)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !398, file: !122, line: 4208, baseType: !407, size: 32, offset: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !407, file: !236, line: 52, baseType: !22, size: 32)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !398, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !398, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !398, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !398, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !398, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !398, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !398, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !398, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!418 = !DIGlobalVariableExpression(var: !419, expr: !DIExpression())
!419 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !420, file: !434, line: 18, type: !435, isLocal: false, isDefinition: true)
!420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !421, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !422, globals: !433, splitDebugInlining: false, nameTableKind: None)
!421 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!422 = !{!22, !104, !24, !423, !425, !427, !111, !105, !428, !429, !430, !431, !102, !432, !183, !269}
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!433 = !{!418}
!434 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !437)
!437 = !{!438, !439}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !436, file: !348, line: 17, baseType: !269, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !436, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "_char_out", scope: !442, file: !446, line: 54, type: !447, isLocal: false, isDefinition: true)
!442 = distinct !DICompileUnit(language: DW_LANG_C99, file: !443, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !445, splitDebugInlining: false, nameTableKind: None)
!443 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!444 = !{!104, !105}
!445 = !{!440}
!446 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!448 = !DISubroutineType(types: !449)
!449 = !{!105, !105}
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !452, file: !469, line: 56, type: !470, isLocal: true, isDefinition: true, align: 32)
!452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !454, globals: !468, splitDebugInlining: false, nameTableKind: None)
!453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!454 = !{!455}
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 407, baseType: !458)
!457 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 398, size: 224, elements: !459)
!459 = !{!460, !462, !463, !464, !465, !466, !467}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !458, file: !457, line: 400, baseType: !461, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !458, file: !457, line: 401, baseType: !461, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !458, file: !457, line: 402, baseType: !461, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !458, file: !457, line: 403, baseType: !461, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !458, file: !457, line: 404, baseType: !461, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !458, file: !457, line: 405, baseType: !461, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !458, file: !457, line: 406, baseType: !461, size: 32, offset: 192)
!468 = !{!450}
!469 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{!474, !500}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !471, file: !472, line: 60, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!476 = !DISubroutineType(types: !477)
!477 = !{!105, !478}
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485, !486, !493, !494}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 380, baseType: !269, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !480, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !480, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !480, file: !481, line: 386, baseType: !487, size: 32, offset: 96)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !489)
!489 = !{!490, !491}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !488, file: !481, line: 359, baseType: !169, size: 8)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !488, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!492 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !480, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !480, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !481, line: 43, baseType: !498)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !499)
!499 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !471, file: !472, line: 65, baseType: !478, size: 32, offset: 32)
!501 = !DIGlobalVariableExpression(var: !502, expr: !DIExpression())
!502 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !503, file: !506, line: 71, type: !507, isLocal: true, isDefinition: true, align: 32)
!503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !505, splitDebugInlining: false, nameTableKind: None)
!504 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!505 = !{!501}
!506 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !508)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !509)
!509 = !{!510, !529}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !508, file: !472, line: 60, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = !DISubroutineType(types: !513)
!513 = !{!105, !514}
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 32)
!515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !517)
!517 = !{!518, !519, !520, !521, !527, !528}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !516, file: !481, line: 380, baseType: !269, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !516, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !516, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !516, file: !481, line: 386, baseType: !522, size: 32, offset: 96)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !524)
!524 = !{!525, !526}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !523, file: !481, line: 359, baseType: !169, size: 8)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !523, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !516, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !516, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !508, file: !472, line: 65, baseType: !514, size: 32, offset: 32)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !532, file: !539, line: 17, type: !667, isLocal: false, isDefinition: true)
!532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !533, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !534, globals: !535, splitDebugInlining: false, nameTableKind: None)
!533 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!534 = !{!111, !105, !113, !104}
!535 = !{!530, !536, !663}
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !538, file: !539, line: 198, type: !649, isLocal: true, isDefinition: true)
!538 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !539, file: !539, line: 175, type: !540, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !644)
!539 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!540 = !DISubroutineType(types: !541)
!541 = !{null, !542}
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !544)
!544 = !{!545, !603, !615, !616, !617, !618, !624, !639}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !543, file: !127, line: 247, baseType: !546, size: 384)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !547)
!547 = !{!548, !572, !579, !580, !581, !590, !591, !592}
!548 = !DIDerivedType(tag: DW_TAG_member, scope: !546, file: !127, line: 60, baseType: !549, size: 64)
!549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !546, file: !127, line: 60, size: 64, elements: !550)
!550 = !{!551, !566}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !549, file: !127, line: 61, baseType: !552, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !553)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !554)
!554 = !{!555, !561}
!555 = !DIDerivedType(tag: DW_TAG_member, scope: !553, file: !137, line: 38, baseType: !556, size: 32)
!556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !553, file: !137, line: 38, size: 32, elements: !557)
!557 = !{!558, !560}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !556, file: !137, line: 39, baseType: !559, size: 32)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !556, file: !137, line: 40, baseType: !559, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, scope: !553, file: !137, line: 42, baseType: !562, size: 32, offset: 32)
!562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !553, file: !137, line: 42, size: 32, elements: !563)
!563 = !{!564, !565}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !562, file: !137, line: 43, baseType: !559, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !562, file: !137, line: 44, baseType: !559, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !549, file: !127, line: 62, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !568)
!568 = !{!569}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !567, file: !153, line: 50, baseType: !570, size: 64)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 64, elements: !158)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !546, file: !127, line: 68, baseType: !573, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !576)
!576 = !{!577}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !575, file: !163, line: 232, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !553)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !546, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !546, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!581 = !DIDerivedType(tag: DW_TAG_member, scope: !546, file: !127, line: 90, baseType: !582, size: 16, offset: 112)
!582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !546, file: !127, line: 90, size: 16, elements: !583)
!583 = !{!584, !589}
!584 = !DIDerivedType(tag: DW_TAG_member, scope: !582, file: !127, line: 91, baseType: !585, size: 16)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !582, file: !127, line: 91, size: 16, elements: !586)
!586 = !{!587, !588}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !585, file: !127, line: 96, baseType: !179, size: 8)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !585, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !582, file: !127, line: 100, baseType: !183, size: 16)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !546, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !546, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !546, file: !127, line: 131, baseType: !593, size: 192, offset: 192)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !594)
!594 = !{!595, !596, !602}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !593, file: !163, line: 245, baseType: !552, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !593, file: !163, line: 246, baseType: !597, size: 32, offset: 64)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !598)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 32)
!599 = !DISubroutineType(types: !600)
!600 = !{null, !601}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !593, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !543, file: !127, line: 250, baseType: !604, size: 288, offset: 384)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !604, file: !200, line: 26, baseType: !113, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !604, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !604, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !604, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !604, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !604, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !604, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !604, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !604, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !543, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !543, file: !127, line: 256, baseType: !574, size: 64, offset: 704)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !543, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !543, file: !127, line: 300, baseType: !619, size: 96, offset: 800)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !620)
!620 = !{!621, !622, !623}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !619, file: !127, line: 153, baseType: !22, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !619, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !619, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !543, file: !127, line: 325, baseType: !625, size: 32, offset: 896)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !627)
!627 = !{!628, !634, !635}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !626, file: !122, line: 5074, baseType: !629, size: 96)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !630)
!630 = !{!631, !632, !633}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !629, file: !226, line: 57, baseType: !229, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !629, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !629, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !626, file: !122, line: 5075, baseType: !574, size: 64, offset: 96)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !626, file: !122, line: 5076, baseType: !636, size: 32, offset: 160)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !637)
!637 = !{!638}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !636, file: !236, line: 52, baseType: !22, size: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !543, file: !127, line: 343, baseType: !640, size: 64, offset: 928)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !641)
!641 = !{!642, !643}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !640, file: !200, line: 63, baseType: !113, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !640, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!644 = !{!645, !646, !647, !648}
!645 = !DILocalVariable(name: "thread", arg: 1, scope: !538, file: !539, line: 175, type: !542)
!646 = !DILocalVariable(name: "region_num", scope: !538, file: !539, line: 200, type: !169)
!647 = !DILocalVariable(name: "guard_start", scope: !538, file: !539, line: 265, type: !22)
!648 = !DILocalVariable(name: "guard_size", scope: !538, file: !539, line: 266, type: !111)
!649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 96, elements: !661)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !651, line: 52, size: 96, elements: !652)
!651 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!652 = !{!653, !654, !655}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !650, file: !651, line: 53, baseType: !22, size: 32)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !650, file: !651, line: 54, baseType: !111, size: 32, offset: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !650, file: !651, line: 55, baseType: !656, size: 32, offset: 64)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !657, line: 151, baseType: !658)
!657 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 149, size: 32, elements: !659)
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !658, file: !657, line: 150, baseType: !113, size: 32)
!661 = !{!662}
!662 = !DISubrange(count: 1)
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "static_regions", scope: !532, file: !539, line: 62, type: !665, isLocal: true, isDefinition: true)
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !666, size: 96, elements: !661)
!666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !650)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !669)
!669 = !{!670, !671}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !668, file: !348, line: 17, baseType: !269, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !668, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !674, file: !707, line: 39, type: !169, isLocal: true, isDefinition: true)
!674 = distinct !DICompileUnit(language: DW_LANG_C99, file: !675, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !676, globals: !706, splitDebugInlining: false, nameTableKind: None)
!675 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!676 = !{!677, !104, !105, !694, !169}
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !679, line: 1226, baseType: !680)
!679 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 1213, size: 352, elements: !681)
!681 = !{!682, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !680, file: !679, line: 1215, baseType: !683, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !461)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !680, file: !679, line: 1216, baseType: !461, size: 32, offset: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !680, file: !679, line: 1217, baseType: !461, size: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !680, file: !679, line: 1218, baseType: !461, size: 32, offset: 96)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !680, file: !679, line: 1219, baseType: !461, size: 32, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !680, file: !679, line: 1220, baseType: !461, size: 32, offset: 160)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !680, file: !679, line: 1221, baseType: !461, size: 32, offset: 192)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !680, file: !679, line: 1222, baseType: !461, size: 32, offset: 224)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !680, file: !679, line: 1223, baseType: !461, size: 32, offset: 256)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !680, file: !679, line: 1224, baseType: !461, size: 32, offset: 288)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !680, file: !679, line: 1225, baseType: !461, size: 32, offset: 320)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !697, line: 27, size: 96, elements: !698)
!697 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!698 = !{!699, !700, !701}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !696, file: !697, line: 29, baseType: !113, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !696, file: !697, line: 31, baseType: !269, size: 32, offset: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !696, file: !697, line: 37, baseType: !702, size: 32, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !657, line: 146, baseType: !703)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !657, line: 141, size: 32, elements: !704)
!704 = !{!705}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !703, file: !657, line: 143, baseType: !113, size: 32)
!706 = !{!672}
!707 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !710, file: !717, line: 21, type: !447, isLocal: true, isDefinition: true)
!710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !712, globals: !716, splitDebugInlining: false, nameTableKind: None)
!711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!712 = !{!713, !105, !104}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !715, line: 22, baseType: !105)
!715 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!716 = !{!708}
!717 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !720, file: !725, line: 13, type: !742, isLocal: true, isDefinition: true)
!720 = distinct !DICompileUnit(language: DW_LANG_C99, file: !721, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !722, splitDebugInlining: false, nameTableKind: None)
!721 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!722 = !{!723, !718}
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(name: "mpu_config", scope: !720, file: !725, line: 37, type: !726, isLocal: false, isDefinition: true)
!725 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !727)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !697, line: 41, size: 64, elements: !728)
!728 = !{!729, !730}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !727, file: !697, line: 43, baseType: !113, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !727, file: !697, line: 45, baseType: !731, size: 32, offset: 32)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !733)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !697, line: 27, size: 96, elements: !734)
!734 = !{!735, !736, !737}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !733, file: !697, line: 29, baseType: !113, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !733, file: !697, line: 31, baseType: !269, size: 32, offset: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !733, file: !697, line: 37, baseType: !738, size: 32, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !657, line: 146, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !657, line: 141, size: 32, elements: !740)
!740 = !{!741}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !739, file: !657, line: 143, baseType: !113, size: 32)
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !732, size: 192, elements: !158)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !745, file: !858, line: 72, type: !939, isLocal: true, isDefinition: true)
!745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !746, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !747, retainedTypes: !844, globals: !855, splitDebugInlining: false, nameTableKind: None)
!746 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!747 = !{!30, !748}
!748 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !457, line: 65, baseType: !105, size: 32, elements: !749)
!749 = !{!750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843}
!750 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!751 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!752 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!753 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!754 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!755 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!756 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!757 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!758 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!759 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!760 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!761 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!762 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!763 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!764 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!765 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!766 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!767 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!768 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!769 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!770 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!771 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!772 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!773 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!774 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!775 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!776 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!777 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!778 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!779 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!780 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!781 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!782 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!783 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!784 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!785 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!786 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!787 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!788 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!789 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!790 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!791 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!792 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!793 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!794 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!795 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!796 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!797 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!798 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!799 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!800 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!801 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!802 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!803 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!804 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!805 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!806 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!807 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!808 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!809 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!810 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!811 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!812 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!813 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!814 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!815 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!816 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!817 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!818 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!819 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!820 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!821 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!822 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!823 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!824 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!825 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!826 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!827 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!828 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!829 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!830 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!831 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!832 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!833 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!834 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!835 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!836 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!837 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!838 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!839 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!840 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!841 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!842 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!843 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!844 = !{!111, !105, !104, !845}
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !457, line: 392, baseType: !847)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 384, size: 192, elements: !848)
!848 = !{!849, !850, !851, !852, !853, !854}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !847, file: !457, line: 386, baseType: !461, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !847, file: !457, line: 387, baseType: !461, size: 32, offset: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !847, file: !457, line: 388, baseType: !461, size: 32, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !847, file: !457, line: 389, baseType: !461, size: 32, offset: 96)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !847, file: !457, line: 390, baseType: !461, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !847, file: !457, line: 391, baseType: !461, size: 32, offset: 160)
!855 = !{!856, !860, !876, !887, !904, !743, !906, !919, !921, !923, !925, !927, !929, !931, !933, !935, !937}
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !745, file: !858, line: 424, type: !859, isLocal: false, isDefinition: true, align: 16)
!858 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 64, elements: !313)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !745, file: !858, line: 424, type: !862, isLocal: false, isDefinition: true, align: 32)
!862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !863)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !864)
!864 = !{!865, !866, !867, !868, !874, !875}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !863, file: !481, line: 380, baseType: !269, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !863, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !863, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !863, file: !481, line: 386, baseType: !869, size: 32, offset: 96)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !871)
!871 = !{!872, !873}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !870, file: !481, line: 359, baseType: !169, size: 8)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !870, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !863, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !863, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !745, file: !858, line: 424, type: !878, isLocal: true, isDefinition: true, align: 32)
!878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !879)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !880)
!880 = !{!881, !886}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !879, file: !472, line: 60, baseType: !882, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 32)
!883 = !DISubroutineType(types: !884)
!884 = !{!105, !885}
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 32)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !879, file: !472, line: 65, baseType: !885, size: 32, offset: 32)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "exti_data", scope: !745, file: !858, line: 423, type: !889, isLocal: true, isDefinition: true)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !858, line: 107, size: 1472, elements: !890)
!890 = !{!891}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !889, file: !858, line: 109, baseType: !892, size: 1472)
!892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !893, size: 1472, elements: !902)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !858, line: 101, size: 64, elements: !894)
!894 = !{!895, !901}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !893, file: !858, line: 102, baseType: !896, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !897, line: 63, baseType: !898)
!897 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!899 = !DISubroutineType(types: !900)
!900 = !{null, !105, !104}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !893, file: !858, line: 103, baseType: !104, size: 32, offset: 32)
!902 = !{!903}
!903 = !DISubrange(count: 23)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !745, file: !858, line: 424, type: !870, isLocal: true, isDefinition: true, align: 8)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !908, file: !858, line: 493, type: !913, isLocal: true, isDefinition: true, align: 32)
!908 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !858, file: !858, line: 460, type: !909, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !911)
!909 = !DISubroutineType(types: !910)
!910 = !{null, !885}
!911 = !{!912}
!912 = !DILocalVariable(name: "dev", arg: 1, scope: !908, file: !858, line: 460, type: !885)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !914)
!914 = !{!915, !916, !917, !918}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !913, file: !10, line: 55, baseType: !116, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !913, file: !10, line: 57, baseType: !116, size: 32, offset: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !913, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !913, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !908, file: !858, line: 497, type: !913, isLocal: true, isDefinition: true, align: 32)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !908, file: !858, line: 507, type: !913, isLocal: true, isDefinition: true, align: 32)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !908, file: !858, line: 512, type: !913, isLocal: true, isDefinition: true, align: 32)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !908, file: !858, line: 516, type: !913, isLocal: true, isDefinition: true, align: 32)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !908, file: !858, line: 523, type: !913, isLocal: true, isDefinition: true, align: 32)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !908, file: !858, line: 527, type: !913, isLocal: true, isDefinition: true, align: 32)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !908, file: !858, line: 581, type: !913, isLocal: true, isDefinition: true, align: 32)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !908, file: !858, line: 586, type: !913, isLocal: true, isDefinition: true, align: 32)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !908, file: !858, line: 591, type: !913, isLocal: true, isDefinition: true, align: 32)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !908, file: !858, line: 595, type: !913, isLocal: true, isDefinition: true, align: 32)
!939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !940, size: 736, elements: !902)
!940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !941)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !457, line: 163, baseType: !748)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !944, file: !949, line: 25, type: !977, isLocal: false, isDefinition: true, align: 16)
!944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !945, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !946, splitDebugInlining: false, nameTableKind: None)
!945 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!946 = !{!947, !942, !953, !955, !957, !959, !961, !963, !965, !967, !969, !971, !973, !975}
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !944, file: !949, line: 20, type: !950, isLocal: false, isDefinition: true, align: 16)
!949 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 240, elements: !951)
!951 = !{!952}
!952 = !DISubrange(count: 15)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !944, file: !949, line: 32, type: !859, isLocal: false, isDefinition: true, align: 16)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !944, file: !949, line: 39, type: !859, isLocal: false, isDefinition: true, align: 16)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !944, file: !949, line: 46, type: !859, isLocal: false, isDefinition: true, align: 16)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !944, file: !949, line: 53, type: !859, isLocal: false, isDefinition: true, align: 16)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !944, file: !949, line: 60, type: !859, isLocal: false, isDefinition: true, align: 16)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !944, file: !949, line: 67, type: !859, isLocal: false, isDefinition: true, align: 16)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !944, file: !949, line: 74, type: !859, isLocal: false, isDefinition: true, align: 16)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !944, file: !949, line: 81, type: !859, isLocal: false, isDefinition: true, align: 16)
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !944, file: !949, line: 88, type: !859, isLocal: false, isDefinition: true, align: 16)
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !944, file: !949, line: 95, type: !859, isLocal: false, isDefinition: true, align: 16)
!973 = !DIGlobalVariableExpression(var: !974, expr: !DIExpression())
!974 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !944, file: !949, line: 102, type: !859, isLocal: false, isDefinition: true, align: 16)
!975 = !DIGlobalVariableExpression(var: !976, expr: !DIExpression())
!976 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !944, file: !949, line: 109, type: !859, isLocal: false, isDefinition: true, align: 16)
!977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 48, elements: !978)
!978 = !{!979}
!979 = !DISubrange(count: 3)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !982, file: !1047, line: 398, type: !1080, isLocal: true, isDefinition: true)
!982 = distinct !DICompileUnit(language: DW_LANG_C99, file: !983, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !984, retainedTypes: !997, globals: !1044, splitDebugInlining: false, nameTableKind: None)
!983 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!984 = !{!985, !30, !990}
!985 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !986, line: 197, baseType: !32, size: 32, elements: !987)
!986 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!987 = !{!988, !989}
!988 = !DIEnumerator(name: "SUCCESS", value: 0)
!989 = !DIEnumerator(name: "ERROR", value: 1)
!990 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !991, line: 44, baseType: !32, size: 32, elements: !992)
!991 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!992 = !{!993, !994, !995, !996}
!993 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!994 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!995 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!996 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!997 = !{!104, !105, !113, !998, !1037, !1043}
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 32)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 586, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 550, size: 1216, elements: !1001)
!1001 = !{!1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1000, file: !457, line: 552, baseType: !461, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1000, file: !457, line: 553, baseType: !461, size: 32, offset: 32)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1000, file: !457, line: 554, baseType: !461, size: 32, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1000, file: !457, line: 555, baseType: !461, size: 32, offset: 96)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1000, file: !457, line: 556, baseType: !461, size: 32, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1000, file: !457, line: 557, baseType: !461, size: 32, offset: 160)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1000, file: !457, line: 558, baseType: !461, size: 32, offset: 192)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1000, file: !457, line: 559, baseType: !113, size: 32, offset: 224)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1000, file: !457, line: 560, baseType: !461, size: 32, offset: 256)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1000, file: !457, line: 561, baseType: !461, size: 32, offset: 288)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1000, file: !457, line: 562, baseType: !1013, size: 64, offset: 320)
!1013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !158)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1000, file: !457, line: 563, baseType: !461, size: 32, offset: 384)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1000, file: !457, line: 564, baseType: !461, size: 32, offset: 416)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1000, file: !457, line: 565, baseType: !461, size: 32, offset: 448)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1000, file: !457, line: 566, baseType: !113, size: 32, offset: 480)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1000, file: !457, line: 567, baseType: !461, size: 32, offset: 512)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1000, file: !457, line: 568, baseType: !461, size: 32, offset: 544)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1000, file: !457, line: 569, baseType: !1013, size: 64, offset: 576)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1000, file: !457, line: 570, baseType: !461, size: 32, offset: 640)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1000, file: !457, line: 571, baseType: !461, size: 32, offset: 672)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1000, file: !457, line: 572, baseType: !461, size: 32, offset: 704)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1000, file: !457, line: 573, baseType: !113, size: 32, offset: 736)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1000, file: !457, line: 574, baseType: !461, size: 32, offset: 768)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1000, file: !457, line: 575, baseType: !461, size: 32, offset: 800)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1000, file: !457, line: 576, baseType: !1013, size: 64, offset: 832)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1000, file: !457, line: 577, baseType: !461, size: 32, offset: 896)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1000, file: !457, line: 578, baseType: !461, size: 32, offset: 928)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1000, file: !457, line: 579, baseType: !1013, size: 64, offset: 960)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1000, file: !457, line: 580, baseType: !461, size: 32, offset: 1024)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1000, file: !457, line: 581, baseType: !461, size: 32, offset: 1056)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1000, file: !457, line: 582, baseType: !461, size: 32, offset: 1088)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1000, file: !457, line: 583, baseType: !461, size: 32, offset: 1120)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1000, file: !457, line: 584, baseType: !461, size: 32, offset: 1152)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1000, file: !457, line: 585, baseType: !461, size: 32, offset: 1184)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1039, line: 343, size: 64, elements: !1040)
!1039 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1040 = !{!1041, !1042}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1038, file: !1039, line: 344, baseType: !113, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1038, file: !1039, line: 345, baseType: !113, size: 32, offset: 32)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1044 = !{!1045, !1051, !1067, !1078, !980}
!1045 = !DIGlobalVariableExpression(var: !1046, expr: !DIExpression())
!1046 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !982, file: !1047, line: 752, type: !1048, isLocal: false, isDefinition: true, align: 16)
!1047 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 800, elements: !1049)
!1049 = !{!1050}
!1050 = !DISubrange(count: 50)
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1052 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !982, file: !1047, line: 752, type: !1053, isLocal: false, isDefinition: true, align: 32)
!1053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1054)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1055)
!1055 = !{!1056, !1057, !1058, !1059, !1065, !1066}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1054, file: !481, line: 380, baseType: !269, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1054, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1054, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1054, file: !481, line: 386, baseType: !1060, size: 32, offset: 96)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1062)
!1062 = !{!1063, !1064}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1061, file: !481, line: 359, baseType: !169, size: 8)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1061, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1054, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1054, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !982, file: !1047, line: 752, type: !1069, isLocal: true, isDefinition: true, align: 32)
!1069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1070)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1071)
!1071 = !{!1072, !1077}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1070, file: !472, line: 60, baseType: !1073, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!105, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1070, file: !472, line: 65, baseType: !1076, size: 32, offset: 32)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !982, file: !1047, line: 752, type: !1061, isLocal: true, isDefinition: true, align: 8)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !991, line: 100, size: 224, elements: !1081)
!1081 = !{!1082, !1088, !1089, !1098, !1103, !1108, !1114}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1080, file: !991, line: 101, baseType: !1083, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !991, line: 76, baseType: !1084)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!105, !1076, !1087}
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !991, line: 56, baseType: !104)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1080, file: !991, line: 102, baseType: !1083, size: 32, offset: 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1080, file: !991, line: 103, baseType: !1090, size: 32, offset: 64)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !991, line: 83, baseType: !1091)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!105, !1076, !1087, !1094, !104}
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !991, line: 72, baseType: !1095)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{null, !1076, !1087, !104}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1080, file: !991, line: 104, baseType: !1099, size: 32, offset: 96)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !991, line: 79, baseType: !1100)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!105, !1076, !1087, !1043}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1080, file: !991, line: 105, baseType: !1104, size: 32, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !991, line: 88, baseType: !1105)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!990, !1076, !1087}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1080, file: !991, line: 106, baseType: !1109, size: 32, offset: 160)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !991, line: 92, baseType: !1110)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!105, !1076, !1087, !1113}
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !991, line: 64, baseType: !104)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1080, file: !991, line: 107, baseType: !1115, size: 32, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !991, line: 96, baseType: !1116)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!105, !1076, !1087, !104}
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1121, file: !1178, line: 603, type: !1180, isLocal: true, isDefinition: true, align: 32)
!1121 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1122, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1123, globals: !1175, splitDebugInlining: false, nameTableKind: None)
!1122 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!1123 = !{!104, !105, !1124}
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1126)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1127, line: 336, size: 160, elements: !1128)
!1127 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1128 = !{!1129, !1149, !1153, !1157, !1170}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1126, file: !1127, line: 365, baseType: !1130, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!105, !1133, !1148}
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1135)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1136)
!1136 = !{!1137, !1138, !1139, !1140, !1146, !1147}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1135, file: !481, line: 380, baseType: !269, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1135, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1135, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1135, file: !481, line: 386, baseType: !1141, size: 32, offset: 96)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1143)
!1143 = !{!1144, !1145}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1142, file: !481, line: 359, baseType: !169, size: 8)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1142, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1135, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1135, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1126, file: !1127, line: 366, baseType: !1150, size: 32, offset: 32)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{null, !1133, !170}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1126, file: !1127, line: 374, baseType: !1154, size: 32, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!105, !1133}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1126, file: !1127, line: 377, baseType: !1158, size: 32, offset: 96)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!105, !1133, !1161}
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1127, line: 122, size: 64, elements: !1164)
!1164 = !{!1165, !1166, !1167, !1168, !1169}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1163, file: !1127, line: 123, baseType: !113, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1163, file: !1127, line: 124, baseType: !169, size: 8, offset: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1163, file: !1127, line: 125, baseType: !169, size: 8, offset: 40)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1163, file: !1127, line: 126, baseType: !169, size: 8, offset: 48)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1163, file: !1127, line: 127, baseType: !169, size: 8, offset: 56)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1126, file: !1127, line: 379, baseType: !1171, size: 32, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!105, !1133, !1174}
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 32)
!1175 = !{!1119, !1176}
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1121, file: !1178, line: 38, type: !1179, isLocal: true, isDefinition: true)
!1178 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1133)
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1182)
!1182 = !{!1183, !1184}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1181, file: !472, line: 60, baseType: !1154, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1181, file: !472, line: 65, baseType: !1133, size: 32, offset: 32)
!1185 = !DIGlobalVariableExpression(var: !1186, expr: !DIExpression())
!1186 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1187, file: !1358, line: 762, type: !1467, isLocal: true, isDefinition: true)
!1187 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1188, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1189, retainedTypes: !1207, globals: !1355, splitDebugInlining: false, nameTableKind: None)
!1188 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!1189 = !{!30, !1190, !1196, !1201, !990}
!1190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1191, line: 506, baseType: !32, size: 32, elements: !1192)
!1191 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1192 = !{!1193, !1194, !1195}
!1193 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1194 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1195 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1191, line: 512, baseType: !32, size: 32, elements: !1197)
!1197 = !{!1198, !1199, !1200}
!1198 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1199 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1200 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !897, line: 43, baseType: !32, size: 32, elements: !1202)
!1202 = !{!1203, !1204, !1205, !1206}
!1203 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1204 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1205 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1206 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1207 = !{!104, !105, !1208, !1278, !1283, !1243, !1196, !1190, !1288, !1289, !113, !1303, !1258, !102, !1315, !1316}
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1210)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1191, line: 523, size: 288, elements: !1211)
!1211 = !{!1212, !1233, !1239, !1244, !1248, !1249, !1250, !1254, !1274}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1210, file: !1191, line: 524, baseType: !1213, size: 32)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!105, !1216, !1231, !1232}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1219)
!1219 = !{!1220, !1221, !1222, !1223, !1229, !1230}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1218, file: !481, line: 380, baseType: !269, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1218, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1218, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1218, file: !481, line: 386, baseType: !1224, size: 32, offset: 96)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1226)
!1226 = !{!1227, !1228}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1225, file: !481, line: 359, baseType: !169, size: 8)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1225, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1218, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1218, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1191, line: 237, baseType: !169)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1191, line: 257, baseType: !113)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1210, file: !1191, line: 530, baseType: !1234, size: 32, offset: 32)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!105, !1216, !1237}
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1191, line: 229, baseType: !113)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1210, file: !1191, line: 532, baseType: !1240, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!105, !1216, !1243, !1238}
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1191, line: 216, baseType: !113)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1210, file: !1191, line: 535, baseType: !1245, size: 32, offset: 96)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1246 = !DISubroutineType(types: !1247)
!1247 = !{!105, !1216, !1243}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1210, file: !1191, line: 537, baseType: !1245, size: 32, offset: 128)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1210, file: !1191, line: 539, baseType: !1245, size: 32, offset: 160)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1210, file: !1191, line: 541, baseType: !1251, size: 32, offset: 192)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{!105, !1216, !1231, !1190, !1196}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1210, file: !1191, line: 544, baseType: !1255, size: 32, offset: 224)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!105, !1216, !1258, !492}
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1191, line: 478, size: 96, elements: !1260)
!1260 = !{!1261, !1268, !1273}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1259, file: !1191, line: 482, baseType: !1262, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1263, line: 33, baseType: !1264)
!1263 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1263, line: 29, size: 32, elements: !1265)
!1265 = !{!1266}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1264, file: !1263, line: 30, baseType: !1267, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1259, file: !1191, line: 485, baseType: !1269, size: 32, offset: 32)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1191, line: 464, baseType: !1270)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{null, !1216, !1258, !1243}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1259, file: !1191, line: 493, baseType: !1243, size: 32, offset: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1210, file: !1191, line: 547, baseType: !1275, size: 32, offset: 256)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!113, !1216}
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1280)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1191, line: 428, size: 32, elements: !1281)
!1281 = !{!1282}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1280, file: !1191, line: 434, baseType: !1243, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1191, line: 441, size: 32, elements: !1286)
!1286 = !{!1287}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1285, file: !1191, line: 447, baseType: !1243, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !457, line: 469, baseType: !1291)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 458, size: 320, elements: !1292)
!1292 = !{!1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1291, file: !457, line: 460, baseType: !461, size: 32)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1291, file: !457, line: 461, baseType: !461, size: 32, offset: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1291, file: !457, line: 462, baseType: !461, size: 32, offset: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1291, file: !457, line: 463, baseType: !461, size: 32, offset: 96)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1291, file: !457, line: 464, baseType: !461, size: 32, offset: 128)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1291, file: !457, line: 465, baseType: !461, size: 32, offset: 160)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1291, file: !457, line: 466, baseType: !461, size: 32, offset: 192)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1291, file: !457, line: 467, baseType: !461, size: 32, offset: 224)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1291, file: !457, line: 468, baseType: !1302, size: 64, offset: 256)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 64, elements: !158)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !457, line: 484, baseType: !1305)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 475, size: 384, elements: !1306)
!1306 = !{!1307, !1308, !1309, !1311, !1312, !1313, !1314}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1305, file: !457, line: 477, baseType: !461, size: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1305, file: !457, line: 478, baseType: !461, size: 32, offset: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1305, file: !457, line: 479, baseType: !1310, size: 128, offset: 64)
!1310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 128, elements: !313)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1305, file: !457, line: 480, baseType: !1013, size: 64, offset: 192)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1305, file: !457, line: 481, baseType: !461, size: 32, offset: 256)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1305, file: !457, line: 482, baseType: !1013, size: 64, offset: 288)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1305, file: !457, line: 483, baseType: !461, size: 32, offset: 352)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 32)
!1317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !991, line: 100, size: 224, elements: !1319)
!1319 = !{!1320, !1325, !1326, !1335, !1340, !1345, !1350}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1318, file: !991, line: 101, baseType: !1321, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !991, line: 76, baseType: !1322)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 32)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!105, !1216, !1087}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1318, file: !991, line: 102, baseType: !1321, size: 32, offset: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1318, file: !991, line: 103, baseType: !1327, size: 32, offset: 64)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !991, line: 83, baseType: !1328)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 32)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!105, !1216, !1087, !1331, !104}
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !991, line: 72, baseType: !1332)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{null, !1216, !1087, !104}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1318, file: !991, line: 104, baseType: !1336, size: 32, offset: 96)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !991, line: 79, baseType: !1337)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 32)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{!105, !1216, !1087, !1043}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1318, file: !991, line: 105, baseType: !1341, size: 32, offset: 128)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !991, line: 88, baseType: !1342)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 32)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!990, !1216, !1087}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1318, file: !991, line: 106, baseType: !1346, size: 32, offset: 160)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !991, line: 92, baseType: !1347)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 32)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{!105, !1216, !1087, !1113}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1318, file: !991, line: 107, baseType: !1351, size: 32, offset: 192)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !991, line: 96, baseType: !1352)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 32)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!105, !1216, !1087, !104}
!1355 = !{!1356, !1362, !1364, !1374, !1376, !1378, !1380, !1382, !1384, !1386, !1391, !1393, !1395, !1397, !1399, !1401, !1403, !1405, !1407, !1409, !1411, !1413, !1415, !1417, !1419, !1433, !1435, !1437, !1439, !1441, !1443, !1445, !1447, !1449, !1451, !1453, !1455, !1457, !1459, !1461, !1185, !1463, !1465, !1478, !1480, !1482, !1484, !1486, !1488}
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1187, file: !1358, line: 762, type: !1359, isLocal: false, isDefinition: true, align: 16)
!1358 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 80, elements: !1360)
!1360 = !{!1361}
!1361 = !DISubrange(count: 5)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1187, file: !1358, line: 762, type: !1217, isLocal: false, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1187, file: !1358, line: 762, type: !1366, isLocal: true, isDefinition: true, align: 32)
!1366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1367)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1368)
!1368 = !{!1369, !1373}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1367, file: !472, line: 60, baseType: !1370, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 32)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{!105, !1216}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1367, file: !472, line: 65, baseType: !1216, size: 32, offset: 32)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1187, file: !1358, line: 766, type: !1359, isLocal: false, isDefinition: true, align: 16)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1187, file: !1358, line: 766, type: !1217, isLocal: false, isDefinition: true, align: 32)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1187, file: !1358, line: 766, type: !1366, isLocal: true, isDefinition: true, align: 32)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1187, file: !1358, line: 770, type: !1359, isLocal: false, isDefinition: true, align: 16)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1187, file: !1358, line: 770, type: !1217, isLocal: false, isDefinition: true, align: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1187, file: !1358, line: 770, type: !1366, isLocal: true, isDefinition: true, align: 32)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1187, file: !1358, line: 774, type: !1388, isLocal: false, isDefinition: true, align: 16)
!1388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 144, elements: !1389)
!1389 = !{!1390}
!1390 = !DISubrange(count: 9)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1187, file: !1358, line: 774, type: !1217, isLocal: false, isDefinition: true, align: 32)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1187, file: !1358, line: 774, type: !1366, isLocal: true, isDefinition: true, align: 32)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1187, file: !1358, line: 778, type: !1359, isLocal: false, isDefinition: true, align: 16)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1187, file: !1358, line: 778, type: !1217, isLocal: false, isDefinition: true, align: 32)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1187, file: !1358, line: 778, type: !1366, isLocal: true, isDefinition: true, align: 32)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1187, file: !1358, line: 782, type: !1359, isLocal: false, isDefinition: true, align: 16)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1187, file: !1358, line: 782, type: !1217, isLocal: false, isDefinition: true, align: 32)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1187, file: !1358, line: 782, type: !1366, isLocal: true, isDefinition: true, align: 32)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1187, file: !1358, line: 786, type: !1359, isLocal: false, isDefinition: true, align: 16)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1187, file: !1358, line: 786, type: !1217, isLocal: false, isDefinition: true, align: 32)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1187, file: !1358, line: 786, type: !1366, isLocal: true, isDefinition: true, align: 32)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1187, file: !1358, line: 790, type: !1359, isLocal: false, isDefinition: true, align: 16)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1187, file: !1358, line: 790, type: !1217, isLocal: false, isDefinition: true, align: 32)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1187, file: !1358, line: 790, type: !1366, isLocal: true, isDefinition: true, align: 32)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1187, file: !1358, line: 762, type: !1421, isLocal: true, isDefinition: true)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1422, line: 237, size: 128, elements: !1423)
!1422 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1423 = !{!1424, !1425, !1426}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1421, file: !1422, line: 239, baseType: !1285, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1421, file: !1422, line: 241, baseType: !1216, size: 32, offset: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1421, file: !1422, line: 243, baseType: !1427, size: 64, offset: 64)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1263, line: 40, baseType: !1428)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1263, line: 35, size: 64, elements: !1429)
!1429 = !{!1430, !1432}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1428, file: !1263, line: 36, baseType: !1431, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1428, file: !1263, line: 37, baseType: !1431, size: 32, offset: 32)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1187, file: !1358, line: 762, type: !1225, isLocal: true, isDefinition: true, align: 8)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1187, file: !1358, line: 766, type: !1421, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1187, file: !1358, line: 766, type: !1225, isLocal: true, isDefinition: true, align: 8)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1187, file: !1358, line: 770, type: !1421, isLocal: true, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1187, file: !1358, line: 770, type: !1225, isLocal: true, isDefinition: true, align: 8)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1187, file: !1358, line: 774, type: !1421, isLocal: true, isDefinition: true)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1187, file: !1358, line: 774, type: !1225, isLocal: true, isDefinition: true, align: 8)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1187, file: !1358, line: 778, type: !1421, isLocal: true, isDefinition: true)
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1187, file: !1358, line: 778, type: !1225, isLocal: true, isDefinition: true, align: 8)
!1451 = !DIGlobalVariableExpression(var: !1452, expr: !DIExpression())
!1452 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1187, file: !1358, line: 782, type: !1421, isLocal: true, isDefinition: true)
!1453 = !DIGlobalVariableExpression(var: !1454, expr: !DIExpression())
!1454 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1187, file: !1358, line: 782, type: !1225, isLocal: true, isDefinition: true, align: 8)
!1455 = !DIGlobalVariableExpression(var: !1456, expr: !DIExpression())
!1456 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1187, file: !1358, line: 786, type: !1421, isLocal: true, isDefinition: true)
!1457 = !DIGlobalVariableExpression(var: !1458, expr: !DIExpression())
!1458 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1187, file: !1358, line: 786, type: !1225, isLocal: true, isDefinition: true, align: 8)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1187, file: !1358, line: 790, type: !1421, isLocal: true, isDefinition: true)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1187, file: !1358, line: 790, type: !1225, isLocal: true, isDefinition: true, align: 8)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1187, file: !1358, line: 656, type: !1209, isLocal: true, isDefinition: true)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1187, file: !1358, line: 766, type: !1467, isLocal: true, isDefinition: true)
!1467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1422, line: 224, size: 160, elements: !1469)
!1469 = !{!1470, !1471, !1472, !1473}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1468, file: !1422, line: 226, baseType: !1280, size: 32)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1468, file: !1422, line: 228, baseType: !1043, size: 32, offset: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1468, file: !1422, line: 230, baseType: !105, size: 32, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1468, file: !1422, line: 231, baseType: !1474, size: 64, offset: 96)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1039, line: 343, size: 64, elements: !1475)
!1475 = !{!1476, !1477}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1474, file: !1039, line: 344, baseType: !113, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1474, file: !1039, line: 345, baseType: !113, size: 32, offset: 32)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1187, file: !1358, line: 770, type: !1467, isLocal: true, isDefinition: true)
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1187, file: !1358, line: 774, type: !1467, isLocal: true, isDefinition: true)
!1482 = !DIGlobalVariableExpression(var: !1483, expr: !DIExpression())
!1483 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1187, file: !1358, line: 778, type: !1467, isLocal: true, isDefinition: true)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1187, file: !1358, line: 782, type: !1467, isLocal: true, isDefinition: true)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1187, file: !1358, line: 786, type: !1467, isLocal: true, isDefinition: true)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1187, file: !1358, line: 790, type: !1467, isLocal: true, isDefinition: true)
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1492, file: !1631, line: 44, type: !1769, isLocal: false, isDefinition: true)
!1492 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1493, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1494, retainedTypes: !1527, globals: !1628, splitDebugInlining: false, nameTableKind: None)
!1493 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!1494 = !{!30, !1495, !1502, !1509, !1516, !1522, !990}
!1495 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1127, line: 47, baseType: !32, size: 32, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1500, !1501}
!1497 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1498 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1499 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1500 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1501 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1502 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1127, line: 75, baseType: !32, size: 32, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507, !1508}
!1504 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1505 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1506 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1507 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1508 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1509 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1127, line: 92, baseType: !32, size: 32, elements: !1510)
!1510 = !{!1511, !1512, !1513, !1514, !1515}
!1511 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1512 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1513 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1514 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1515 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1516 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1127, line: 84, baseType: !32, size: 32, elements: !1517)
!1517 = !{!1518, !1519, !1520, !1521}
!1518 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1519 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1520 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1521 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1522 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1127, line: 107, baseType: !32, size: 32, elements: !1523)
!1523 = !{!1524, !1525, !1526}
!1524 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1525 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1526 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1527 = !{!104, !105, !1528, !170, !169, !1577, !113, !1087, !1588, !183, !114, !1627}
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1530)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1127, line: 336, size: 160, elements: !1531)
!1531 = !{!1532, !1551, !1555, !1559, !1572}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1530, file: !1127, line: 365, baseType: !1533, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!105, !1536, !1148}
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1538)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1539)
!1539 = !{!1540, !1541, !1542, !1543, !1549, !1550}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1538, file: !481, line: 380, baseType: !269, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1538, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1538, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1538, file: !481, line: 386, baseType: !1544, size: 32, offset: 96)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 32)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1546)
!1546 = !{!1547, !1548}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1545, file: !481, line: 359, baseType: !169, size: 8)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1545, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1538, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1538, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1530, file: !1127, line: 366, baseType: !1552, size: 32, offset: 32)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 32)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{null, !1536, !170}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1530, file: !1127, line: 374, baseType: !1556, size: 32, offset: 64)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!105, !1536}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1530, file: !1127, line: 377, baseType: !1560, size: 32, offset: 96)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!105, !1536, !1563}
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1565)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1127, line: 122, size: 64, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1570, !1571}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1565, file: !1127, line: 123, baseType: !113, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1565, file: !1127, line: 124, baseType: !169, size: 8, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1565, file: !1127, line: 125, baseType: !169, size: 8, offset: 40)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1565, file: !1127, line: 126, baseType: !169, size: 8, offset: 48)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1565, file: !1127, line: 127, baseType: !169, size: 8, offset: 56)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1530, file: !1127, line: 379, baseType: !1573, size: 32, offset: 128)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!105, !1536, !1576}
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !457, line: 783, baseType: !1579)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 774, size: 224, elements: !1580)
!1580 = !{!1581, !1582, !1583, !1584, !1585, !1586, !1587}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1579, file: !457, line: 776, baseType: !461, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1579, file: !457, line: 777, baseType: !461, size: 32, offset: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1579, file: !457, line: 778, baseType: !461, size: 32, offset: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1579, file: !457, line: 779, baseType: !461, size: 32, offset: 96)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1579, file: !457, line: 780, baseType: !461, size: 32, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1579, file: !457, line: 781, baseType: !461, size: 32, offset: 160)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1579, file: !457, line: 782, baseType: !461, size: 32, offset: 192)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!1589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1590)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !991, line: 100, size: 224, elements: !1591)
!1591 = !{!1592, !1597, !1598, !1607, !1612, !1617, !1622}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1590, file: !991, line: 101, baseType: !1593, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !991, line: 76, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!105, !1536, !1087}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1590, file: !991, line: 102, baseType: !1593, size: 32, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1590, file: !991, line: 103, baseType: !1599, size: 32, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !991, line: 83, baseType: !1600)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 32)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!105, !1536, !1087, !1603, !104}
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !991, line: 72, baseType: !1604)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 32)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{null, !1536, !1087, !104}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1590, file: !991, line: 104, baseType: !1608, size: 32, offset: 96)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !991, line: 79, baseType: !1609)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!105, !1536, !1087, !1043}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1590, file: !991, line: 105, baseType: !1613, size: 32, offset: 128)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !991, line: 88, baseType: !1614)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 32)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{!990, !1536, !1087}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1590, file: !991, line: 106, baseType: !1618, size: 32, offset: 160)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !991, line: 92, baseType: !1619)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!105, !1536, !1087, !1113}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1590, file: !991, line: 107, baseType: !1623, size: 32, offset: 192)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !991, line: 96, baseType: !1624)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!105, !1536, !1087, !104}
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 32)
!1628 = !{!1490, !1629, !1635, !1637, !1644, !1646, !1648, !1650, !1652, !1654, !1656, !1658, !1660, !1662, !1664, !1666, !1668, !1670, !1714, !1717, !1719, !1722, !1725, !1727, !1733, !1735, !1737, !1739, !1741, !1743, !1745, !1747, !1749, !1751, !1753, !1755, !1757, !1759, !1761, !1763, !1765, !1767}
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1492, file: !1631, line: 1914, type: !1632, isLocal: false, isDefinition: true, align: 16)
!1631 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 128, elements: !1633)
!1633 = !{!1634}
!1634 = !DISubrange(count: 8)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1492, file: !1631, line: 1914, type: !1537, isLocal: false, isDefinition: true, align: 32)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1492, file: !1631, line: 1914, type: !1639, isLocal: true, isDefinition: true, align: 32)
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1641)
!1641 = !{!1642, !1643}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1640, file: !472, line: 60, baseType: !1556, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1640, file: !472, line: 65, baseType: !1536, size: 32, offset: 32)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1492, file: !1631, line: 1914, type: !1632, isLocal: false, isDefinition: true, align: 16)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1492, file: !1631, line: 1914, type: !1537, isLocal: false, isDefinition: true, align: 32)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1492, file: !1631, line: 1914, type: !1639, isLocal: true, isDefinition: true, align: 32)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1492, file: !1631, line: 1914, type: !1632, isLocal: false, isDefinition: true, align: 16)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1492, file: !1631, line: 1914, type: !1537, isLocal: false, isDefinition: true, align: 32)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1492, file: !1631, line: 1914, type: !1639, isLocal: true, isDefinition: true, align: 32)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1492, file: !1631, line: 1914, type: !1632, isLocal: false, isDefinition: true, align: 16)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1492, file: !1631, line: 1914, type: !1537, isLocal: false, isDefinition: true, align: 32)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1492, file: !1631, line: 1914, type: !1639, isLocal: true, isDefinition: true, align: 32)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1492, file: !1631, line: 1914, type: !1545, isLocal: true, isDefinition: true, align: 8)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1492, file: !1631, line: 1914, type: !1545, isLocal: true, isDefinition: true, align: 8)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1492, file: !1631, line: 1914, type: !1545, isLocal: true, isDefinition: true, align: 8)
!1668 = !DIGlobalVariableExpression(var: !1669, expr: !DIExpression())
!1669 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1492, file: !1631, line: 1914, type: !1545, isLocal: true, isDefinition: true, align: 8)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1492, file: !1631, line: 1914, type: !1672, isLocal: true, isDefinition: true)
!1672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1673)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1674, line: 22, size: 224, elements: !1675)
!1674 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1675 = !{!1676, !1677, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1673, file: !1674, line: 24, baseType: !1577, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1673, file: !1674, line: 26, baseType: !1678, size: 32, offset: 32)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1039, line: 343, size: 64, elements: !1681)
!1681 = !{!1682, !1683}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1680, file: !1039, line: 344, baseType: !113, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1680, file: !1039, line: 345, baseType: !113, size: 32, offset: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1673, file: !1674, line: 28, baseType: !111, size: 32, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1673, file: !1674, line: 30, baseType: !492, size: 8, offset: 96)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1673, file: !1674, line: 32, baseType: !105, size: 32, offset: 128)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1673, file: !1674, line: 34, baseType: !492, size: 8, offset: 160)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1673, file: !1674, line: 36, baseType: !492, size: 8, offset: 168)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1673, file: !1674, line: 38, baseType: !492, size: 8, offset: 176)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1673, file: !1674, line: 40, baseType: !492, size: 8, offset: 184)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1673, file: !1674, line: 41, baseType: !1692, size: 32, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1694)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1695, line: 60, size: 64, elements: !1696)
!1695 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1696 = !{!1697, !1713}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1694, file: !1695, line: 69, baseType: !1698, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1700)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1695, line: 50, size: 64, elements: !1701)
!1701 = !{!1702, !1711, !1712}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1700, file: !1695, line: 52, baseType: !1703, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1705)
!1705 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1706, line: 37, baseType: !1707)
!1706 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1706, line: 32, size: 64, elements: !1708)
!1708 = !{!1709, !1710}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1707, file: !1706, line: 34, baseType: !113, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1707, file: !1706, line: 36, baseType: !113, size: 32, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1700, file: !1695, line: 54, baseType: !169, size: 8, offset: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1700, file: !1695, line: 56, baseType: !169, size: 8, offset: 40)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1694, file: !1695, line: 71, baseType: !169, size: 8, offset: 32)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1492, file: !1631, line: 1914, type: !1716, isLocal: true, isDefinition: true)
!1716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1679, size: 64, elements: !661)
!1717 = !DIGlobalVariableExpression(var: !1718, expr: !DIExpression())
!1718 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1492, file: !1631, line: 1914, type: !1693, isLocal: true, isDefinition: true)
!1719 = !DIGlobalVariableExpression(var: !1720, expr: !DIExpression())
!1720 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1492, file: !1631, line: 1914, type: !1721, isLocal: true, isDefinition: true)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1699, size: 64, elements: !661)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1492, file: !1631, line: 1914, type: !1724, isLocal: true, isDefinition: true)
!1724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1704, size: 128, elements: !158)
!1725 = !DIGlobalVariableExpression(var: !1726, expr: !DIExpression())
!1726 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1492, file: !1631, line: 1539, type: !1529, isLocal: true, isDefinition: true)
!1727 = !DIGlobalVariableExpression(var: !1728, expr: !DIExpression())
!1728 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1492, file: !1631, line: 1914, type: !1729, isLocal: true, isDefinition: true)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1674, line: 74, size: 64, elements: !1730)
!1730 = !{!1731, !1732}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1729, file: !1674, line: 76, baseType: !113, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1729, file: !1674, line: 78, baseType: !1536, size: 32, offset: 32)
!1733 = !DIGlobalVariableExpression(var: !1734, expr: !DIExpression())
!1734 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1492, file: !1631, line: 1914, type: !1672, isLocal: true, isDefinition: true)
!1735 = !DIGlobalVariableExpression(var: !1736, expr: !DIExpression())
!1736 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1492, file: !1631, line: 1914, type: !1716, isLocal: true, isDefinition: true)
!1737 = !DIGlobalVariableExpression(var: !1738, expr: !DIExpression())
!1738 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1492, file: !1631, line: 1914, type: !1693, isLocal: true, isDefinition: true)
!1739 = !DIGlobalVariableExpression(var: !1740, expr: !DIExpression())
!1740 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1492, file: !1631, line: 1914, type: !1721, isLocal: true, isDefinition: true)
!1741 = !DIGlobalVariableExpression(var: !1742, expr: !DIExpression())
!1742 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1492, file: !1631, line: 1914, type: !1724, isLocal: true, isDefinition: true)
!1743 = !DIGlobalVariableExpression(var: !1744, expr: !DIExpression())
!1744 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1492, file: !1631, line: 1914, type: !1729, isLocal: true, isDefinition: true)
!1745 = !DIGlobalVariableExpression(var: !1746, expr: !DIExpression())
!1746 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1492, file: !1631, line: 1914, type: !1672, isLocal: true, isDefinition: true)
!1747 = !DIGlobalVariableExpression(var: !1748, expr: !DIExpression())
!1748 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1492, file: !1631, line: 1914, type: !1716, isLocal: true, isDefinition: true)
!1749 = !DIGlobalVariableExpression(var: !1750, expr: !DIExpression())
!1750 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1492, file: !1631, line: 1914, type: !1693, isLocal: true, isDefinition: true)
!1751 = !DIGlobalVariableExpression(var: !1752, expr: !DIExpression())
!1752 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1492, file: !1631, line: 1914, type: !1721, isLocal: true, isDefinition: true)
!1753 = !DIGlobalVariableExpression(var: !1754, expr: !DIExpression())
!1754 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1492, file: !1631, line: 1914, type: !1724, isLocal: true, isDefinition: true)
!1755 = !DIGlobalVariableExpression(var: !1756, expr: !DIExpression())
!1756 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1492, file: !1631, line: 1914, type: !1729, isLocal: true, isDefinition: true)
!1757 = !DIGlobalVariableExpression(var: !1758, expr: !DIExpression())
!1758 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1492, file: !1631, line: 1914, type: !1672, isLocal: true, isDefinition: true)
!1759 = !DIGlobalVariableExpression(var: !1760, expr: !DIExpression())
!1760 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1492, file: !1631, line: 1914, type: !1716, isLocal: true, isDefinition: true)
!1761 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression())
!1762 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1492, file: !1631, line: 1914, type: !1693, isLocal: true, isDefinition: true)
!1763 = !DIGlobalVariableExpression(var: !1764, expr: !DIExpression())
!1764 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1492, file: !1631, line: 1914, type: !1721, isLocal: true, isDefinition: true)
!1765 = !DIGlobalVariableExpression(var: !1766, expr: !DIExpression())
!1766 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1492, file: !1631, line: 1914, type: !1724, isLocal: true, isDefinition: true)
!1767 = !DIGlobalVariableExpression(var: !1768, expr: !DIExpression())
!1768 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1492, file: !1631, line: 1914, type: !1729, isLocal: true, isDefinition: true)
!1769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1770)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !1771)
!1771 = !{!1772, !1773}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1770, file: !348, line: 17, baseType: !269, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1770, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1776, file: !1854, line: 65, type: !461, isLocal: true, isDefinition: true)
!1776 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1777, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1778, retainedTypes: !1779, globals: !1851, splitDebugInlining: false, nameTableKind: None)
!1777 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!1778 = !{!748}
!1779 = !{!107, !1780, !116, !169, !113, !1788, !1819}
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !679, line: 770, baseType: !1782)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 764, size: 128, elements: !1783)
!1783 = !{!1784, !1785, !1786, !1787}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1782, file: !679, line: 766, baseType: !461, size: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1782, file: !679, line: 767, baseType: !461, size: 32, offset: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1782, file: !679, line: 768, baseType: !461, size: 32, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1782, file: !679, line: 769, baseType: !683, size: 32, offset: 96)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 32)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !1790)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !1791)
!1791 = !{!1792, !1794, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1809, !1814, !1818}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1790, file: !679, line: 413, baseType: !1793, size: 256)
!1793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 256, elements: !1633)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1790, file: !679, line: 414, baseType: !1795, size: 768, offset: 256)
!1795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1796)
!1796 = !{!1797}
!1797 = !DISubrange(count: 24)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1790, file: !679, line: 415, baseType: !1793, size: 256, offset: 1024)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1790, file: !679, line: 416, baseType: !1795, size: 768, offset: 1280)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1790, file: !679, line: 417, baseType: !1793, size: 256, offset: 2048)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1790, file: !679, line: 418, baseType: !1795, size: 768, offset: 2304)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1790, file: !679, line: 419, baseType: !1793, size: 256, offset: 3072)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1790, file: !679, line: 420, baseType: !1795, size: 768, offset: 3328)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1790, file: !679, line: 421, baseType: !1793, size: 256, offset: 4096)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1790, file: !679, line: 422, baseType: !1806, size: 1792, offset: 4352)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !1807)
!1807 = !{!1808}
!1808 = !DISubrange(count: 56)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1790, file: !679, line: 423, baseType: !1810, size: 1920, offset: 6144)
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1811, size: 1920, elements: !1812)
!1811 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !169)
!1812 = !{!1813}
!1813 = !DISubrange(count: 240)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1790, file: !679, line: 424, baseType: !1815, size: 20608, offset: 8064)
!1815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !1816)
!1816 = !{!1817}
!1817 = !DISubrange(count: 644)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1790, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !1821)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !1822)
!1822 = !{!1823, !1824, !1825, !1826, !1827, !1828, !1829, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1842, !1843, !1844, !1846, !1848, !1850}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1821, file: !679, line: 447, baseType: !683, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1821, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1821, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1821, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1821, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1821, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1821, file: !679, line: 453, baseType: !1830, size: 96, offset: 192)
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1811, size: 96, elements: !1831)
!1831 = !{!1832}
!1832 = !DISubrange(count: 12)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1821, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1821, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1821, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1821, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1821, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1821, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1821, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1821, file: !679, line: 461, baseType: !1841, size: 64, offset: 512)
!1841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 64, elements: !158)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1821, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1821, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1821, file: !679, line: 464, baseType: !1845, size: 128, offset: 640)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 128, elements: !313)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1821, file: !679, line: 465, baseType: !1847, size: 160, offset: 768)
!1847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 160, elements: !1360)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1821, file: !679, line: 466, baseType: !1849, size: 160, offset: 928)
!1849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1360)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1821, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!1851 = !{!1852, !1878, !1883, !1885, !1887, !1774}
!1852 = !DIGlobalVariableExpression(var: !1853, expr: !DIExpression())
!1853 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1776, file: !1854, line: 285, type: !1855, isLocal: true, isDefinition: true, align: 32)
!1854 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1856)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1857)
!1857 = !{!1858, !1877}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1856, file: !472, line: 60, baseType: !1859, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!105, !1862}
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869, !1875, !1876}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1864, file: !481, line: 380, baseType: !269, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1864, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1864, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1864, file: !481, line: 386, baseType: !1870, size: 32, offset: 96)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1872)
!1872 = !{!1873, !1874}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1871, file: !481, line: 359, baseType: !169, size: 8)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1871, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1864, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1864, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1856, file: !472, line: 65, baseType: !1862, size: 32, offset: 32)
!1878 = !DIGlobalVariableExpression(var: !1879, expr: !DIExpression())
!1879 = distinct !DIGlobalVariable(name: "lock", scope: !1776, file: !1854, line: 34, type: !1880, isLocal: true, isDefinition: true)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !1881)
!1881 = !{!1882}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1880, file: !236, line: 52, baseType: !22, size: 32)
!1883 = !DIGlobalVariableExpression(var: !1884, expr: !DIExpression())
!1884 = distinct !DIGlobalVariable(name: "last_load", scope: !1776, file: !1854, line: 36, type: !113, isLocal: true, isDefinition: true)
!1885 = !DIGlobalVariableExpression(var: !1886, expr: !DIExpression())
!1886 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1776, file: !1854, line: 48, type: !113, isLocal: true, isDefinition: true)
!1887 = !DIGlobalVariableExpression(var: !1888, expr: !DIExpression())
!1888 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1776, file: !1854, line: 54, type: !113, isLocal: true, isDefinition: true)
!1889 = !DIGlobalVariableExpression(var: !1890, expr: !DIExpression())
!1890 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1891, file: !1973, line: 22, type: !1975, isLocal: true, isDefinition: true)
!1891 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1892, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1893, retainedTypes: !1894, globals: !1970, splitDebugInlining: false, nameTableKind: None)
!1892 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!1893 = !{!1190, !1196}
!1894 = !{!1895, !1959, !1964, !1243, !1196, !1190, !1969, !104}
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1191, line: 523, size: 288, elements: !1898)
!1898 = !{!1899, !1918, !1922, !1926, !1930, !1931, !1932, !1936, !1955}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1897, file: !1191, line: 524, baseType: !1900, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{!105, !1903, !1231, !1232}
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1905)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1906)
!1906 = !{!1907, !1908, !1909, !1910, !1916, !1917}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1905, file: !481, line: 380, baseType: !269, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1905, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1905, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1905, file: !481, line: 386, baseType: !1911, size: 32, offset: 96)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1913)
!1913 = !{!1914, !1915}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1912, file: !481, line: 359, baseType: !169, size: 8)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1912, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1905, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1905, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1897, file: !1191, line: 530, baseType: !1919, size: 32, offset: 32)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 32)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{!105, !1903, !1237}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1897, file: !1191, line: 532, baseType: !1923, size: 32, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 32)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{!105, !1903, !1243, !1238}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1897, file: !1191, line: 535, baseType: !1927, size: 32, offset: 96)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 32)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!105, !1903, !1243}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1897, file: !1191, line: 537, baseType: !1927, size: 32, offset: 128)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1897, file: !1191, line: 539, baseType: !1927, size: 32, offset: 160)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1897, file: !1191, line: 541, baseType: !1933, size: 32, offset: 192)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 32)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{!105, !1903, !1231, !1190, !1196}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1897, file: !1191, line: 544, baseType: !1937, size: 32, offset: 224)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!105, !1903, !1940, !492}
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 32)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1191, line: 478, size: 96, elements: !1942)
!1942 = !{!1943, !1949, !1954}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1941, file: !1191, line: 482, baseType: !1944, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1263, line: 33, baseType: !1945)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1263, line: 29, size: 32, elements: !1946)
!1946 = !{!1947}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1945, file: !1263, line: 30, baseType: !1948, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1941, file: !1191, line: 485, baseType: !1950, size: 32, offset: 32)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1191, line: 464, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{null, !1903, !1940, !1243}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1941, file: !1191, line: 493, baseType: !1243, size: 32, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1897, file: !1191, line: 547, baseType: !1956, size: 32, offset: 256)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!113, !1903}
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1961)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1191, line: 428, size: 32, elements: !1962)
!1962 = !{!1963}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1961, file: !1191, line: 434, baseType: !1243, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1191, line: 441, size: 32, elements: !1967)
!1967 = !{!1968}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1966, file: !1191, line: 447, baseType: !1243, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!1970 = !{!1971, !1889}
!1971 = !DIGlobalVariableExpression(var: !1972, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1972 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1891, file: !1973, line: 37, type: !1974, isLocal: true, isDefinition: true)
!1973 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1976, size: 352, elements: !1977)
!1976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1903)
!1977 = !{!1978}
!1978 = !DISubrange(count: 11)
!1979 = !DIGlobalVariableExpression(var: !1980, expr: !DIExpression())
!1980 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1981, file: !2025, line: 139, type: !2030, isLocal: false, isDefinition: true)
!1981 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1982, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1983, globals: !2022, splitDebugInlining: false, nameTableKind: None)
!1982 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!1983 = !{!1984}
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 586, baseType: !1986)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 550, size: 1216, elements: !1987)
!1987 = !{!1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1986, file: !457, line: 552, baseType: !461, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1986, file: !457, line: 553, baseType: !461, size: 32, offset: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1986, file: !457, line: 554, baseType: !461, size: 32, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1986, file: !457, line: 555, baseType: !461, size: 32, offset: 96)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1986, file: !457, line: 556, baseType: !461, size: 32, offset: 128)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1986, file: !457, line: 557, baseType: !461, size: 32, offset: 160)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1986, file: !457, line: 558, baseType: !461, size: 32, offset: 192)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1986, file: !457, line: 559, baseType: !113, size: 32, offset: 224)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1986, file: !457, line: 560, baseType: !461, size: 32, offset: 256)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1986, file: !457, line: 561, baseType: !461, size: 32, offset: 288)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1986, file: !457, line: 562, baseType: !1013, size: 64, offset: 320)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1986, file: !457, line: 563, baseType: !461, size: 32, offset: 384)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1986, file: !457, line: 564, baseType: !461, size: 32, offset: 416)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1986, file: !457, line: 565, baseType: !461, size: 32, offset: 448)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1986, file: !457, line: 566, baseType: !113, size: 32, offset: 480)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1986, file: !457, line: 567, baseType: !461, size: 32, offset: 512)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1986, file: !457, line: 568, baseType: !461, size: 32, offset: 544)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1986, file: !457, line: 569, baseType: !1013, size: 64, offset: 576)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1986, file: !457, line: 570, baseType: !461, size: 32, offset: 640)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1986, file: !457, line: 571, baseType: !461, size: 32, offset: 672)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1986, file: !457, line: 572, baseType: !461, size: 32, offset: 704)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1986, file: !457, line: 573, baseType: !113, size: 32, offset: 736)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1986, file: !457, line: 574, baseType: !461, size: 32, offset: 768)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1986, file: !457, line: 575, baseType: !461, size: 32, offset: 800)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1986, file: !457, line: 576, baseType: !1013, size: 64, offset: 832)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1986, file: !457, line: 577, baseType: !461, size: 32, offset: 896)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1986, file: !457, line: 578, baseType: !461, size: 32, offset: 928)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1986, file: !457, line: 579, baseType: !1013, size: 64, offset: 960)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1986, file: !457, line: 580, baseType: !461, size: 32, offset: 1024)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1986, file: !457, line: 581, baseType: !461, size: 32, offset: 1056)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1986, file: !457, line: 582, baseType: !461, size: 32, offset: 1088)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1986, file: !457, line: 583, baseType: !461, size: 32, offset: 1120)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1986, file: !457, line: 584, baseType: !461, size: 32, offset: 1152)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1986, file: !457, line: 585, baseType: !461, size: 32, offset: 1184)
!2022 = !{!2023, !2026, !1979}
!2023 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression())
!2024 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1981, file: !2025, line: 137, type: !113, isLocal: false, isDefinition: true)
!2025 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2026 = !DIGlobalVariableExpression(var: !2027, expr: !DIExpression())
!2027 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1981, file: !2025, line: 138, type: !2028, isLocal: false, isDefinition: true)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2029, size: 128, elements: !311)
!2029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !169)
!2030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2029, size: 64, elements: !1633)
!2031 = !DIGlobalVariableExpression(var: !2032, expr: !DIExpression())
!2032 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2033, file: !2036, line: 23, type: !2037, isLocal: false, isDefinition: true)
!2033 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2034, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !2035, splitDebugInlining: false, nameTableKind: None)
!2034 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2035 = !{!2031}
!2036 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !105)
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2040, file: !2044, line: 37, type: !2299, isLocal: false, isDefinition: true)
!2040 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2041, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2042, retainedTypes: !2051, globals: !2124, splitDebugInlining: false, nameTableKind: None)
!2041 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2042 = !{!2043, !30, !748}
!2043 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2044, line: 63, baseType: !32, size: 32, elements: !2045)
!2044 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2045 = !{!2046, !2047, !2048, !2049, !2050}
!2046 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2047 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2048 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2049 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2050 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2051 = !{!111, !104, !105, !2052, !102, !113, !2082, !116, !169, !2107}
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2054)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2055, line: 51, size: 64, elements: !2056)
!2055 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2056 = !{!2057, !2077}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2054, file: !2055, line: 52, baseType: !2058, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2055, line: 38, baseType: !2059)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 32)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{!105, !2062, !432, !183}
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2064)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !2065)
!2065 = !{!2066, !2067, !2068, !2069, !2075, !2076}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2064, file: !481, line: 380, baseType: !269, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2064, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2064, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2064, file: !481, line: 386, baseType: !2070, size: 32, offset: 96)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 32)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !2072)
!2072 = !{!2073, !2074}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2071, file: !481, line: 359, baseType: !169, size: 8)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2071, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2064, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2064, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2054, file: !2055, line: 53, baseType: !2078, size: 32, offset: 32)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2055, line: 47, baseType: !2079)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{!105, !2062, !432, !183, !113}
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2084)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2085)
!2085 = !{!2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2084, file: !679, line: 447, baseType: !683, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2084, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2084, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2084, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2084, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2084, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2084, file: !679, line: 453, baseType: !1830, size: 96, offset: 192)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2084, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2084, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2084, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2084, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2084, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2084, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2084, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2084, file: !679, line: 461, baseType: !1841, size: 64, offset: 512)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2084, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2084, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2084, file: !679, line: 464, baseType: !1845, size: 128, offset: 640)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2084, file: !679, line: 465, baseType: !1847, size: 160, offset: 768)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2084, file: !679, line: 466, baseType: !1849, size: 160, offset: 928)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2084, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2109, file: !679, line: 413, baseType: !1793, size: 256)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2109, file: !679, line: 414, baseType: !1795, size: 768, offset: 256)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2109, file: !679, line: 415, baseType: !1793, size: 256, offset: 1024)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2109, file: !679, line: 416, baseType: !1795, size: 768, offset: 1280)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2109, file: !679, line: 417, baseType: !1793, size: 256, offset: 2048)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2109, file: !679, line: 418, baseType: !1795, size: 768, offset: 2304)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2109, file: !679, line: 419, baseType: !1793, size: 256, offset: 3072)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2109, file: !679, line: 420, baseType: !1795, size: 768, offset: 3328)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2109, file: !679, line: 421, baseType: !1793, size: 256, offset: 4096)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2109, file: !679, line: 422, baseType: !1806, size: 1792, offset: 4352)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2109, file: !679, line: 423, baseType: !1810, size: 1920, offset: 6144)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2109, file: !679, line: 424, baseType: !1815, size: 20608, offset: 8064)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2109, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2124 = !{!2038, !2125, !2250, !2258, !2260, !2263, !2267, !2269, !2274}
!2125 = !DIGlobalVariableExpression(var: !2126, expr: !DIExpression())
!2126 = distinct !DIGlobalVariable(name: "_kernel", scope: !2040, file: !2044, line: 40, type: !2127, isLocal: false, isDefinition: true)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !163, line: 158, size: 320, elements: !2128)
!2128 = !{!2129, !2245}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2127, file: !163, line: 159, baseType: !2130, size: 224)
!2130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2131, size: 224, elements: !661)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !163, line: 100, size: 224, elements: !2132)
!2132 = !{!2133, !2134, !2135, !2238, !2239, !2240, !2241, !2242}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2131, file: !163, line: 102, baseType: !113, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2131, file: !163, line: 105, baseType: !102, size: 32, offset: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2131, file: !163, line: 108, baseType: !2136, size: 32, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 32)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2138)
!2138 = !{!2139, !2197, !2209, !2210, !2211, !2212, !2218, !2233}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2137, file: !127, line: 247, baseType: !2140, size: 384)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2141)
!2141 = !{!2142, !2166, !2173, !2174, !2175, !2184, !2185, !2186}
!2142 = !DIDerivedType(tag: DW_TAG_member, scope: !2140, file: !127, line: 60, baseType: !2143, size: 64)
!2143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2140, file: !127, line: 60, size: 64, elements: !2144)
!2144 = !{!2145, !2160}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2143, file: !127, line: 61, baseType: !2146, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2147)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2148)
!2148 = !{!2149, !2155}
!2149 = !DIDerivedType(tag: DW_TAG_member, scope: !2147, file: !137, line: 38, baseType: !2150, size: 32)
!2150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2147, file: !137, line: 38, size: 32, elements: !2151)
!2151 = !{!2152, !2154}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2150, file: !137, line: 39, baseType: !2153, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2150, file: !137, line: 40, baseType: !2153, size: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, scope: !2147, file: !137, line: 42, baseType: !2156, size: 32, offset: 32)
!2156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2147, file: !137, line: 42, size: 32, elements: !2157)
!2157 = !{!2158, !2159}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2156, file: !137, line: 43, baseType: !2153, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2156, file: !137, line: 44, baseType: !2153, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2143, file: !127, line: 62, baseType: !2161, size: 64)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2162)
!2162 = !{!2163}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2161, file: !153, line: 50, baseType: !2164, size: 64)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2165, size: 64, elements: !158)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2140, file: !127, line: 68, baseType: !2167, size: 32, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2169)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2170)
!2170 = !{!2171}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2169, file: !163, line: 232, baseType: !2172, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2147)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2140, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2140, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2175 = !DIDerivedType(tag: DW_TAG_member, scope: !2140, file: !127, line: 90, baseType: !2176, size: 16, offset: 112)
!2176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2140, file: !127, line: 90, size: 16, elements: !2177)
!2177 = !{!2178, !2183}
!2178 = !DIDerivedType(tag: DW_TAG_member, scope: !2176, file: !127, line: 91, baseType: !2179, size: 16)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2176, file: !127, line: 91, size: 16, elements: !2180)
!2180 = !{!2181, !2182}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2179, file: !127, line: 96, baseType: !179, size: 8)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2179, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2176, file: !127, line: 100, baseType: !183, size: 16)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2140, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2140, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2140, file: !127, line: 131, baseType: !2187, size: 192, offset: 192)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2188)
!2188 = !{!2189, !2190, !2196}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2187, file: !163, line: 245, baseType: !2146, size: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2187, file: !163, line: 246, baseType: !2191, size: 32, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2192)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 32)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{null, !2195}
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2187, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2137, file: !127, line: 250, baseType: !2198, size: 288, offset: 384)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2199)
!2199 = !{!2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2198, file: !200, line: 26, baseType: !113, size: 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2198, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2198, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2198, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2198, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2198, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2198, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2198, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2198, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2137, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2137, file: !127, line: 256, baseType: !2168, size: 64, offset: 704)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2137, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2137, file: !127, line: 300, baseType: !2213, size: 96, offset: 800)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2214)
!2214 = !{!2215, !2216, !2217}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2213, file: !127, line: 153, baseType: !22, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2213, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2213, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2137, file: !127, line: 325, baseType: !2219, size: 32, offset: 896)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 32)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2221)
!2221 = !{!2222, !2228, !2229}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2220, file: !122, line: 5074, baseType: !2223, size: 96)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2224)
!2224 = !{!2225, !2226, !2227}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2223, file: !226, line: 57, baseType: !229, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2223, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2223, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2220, file: !122, line: 5075, baseType: !2168, size: 64, offset: 96)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2220, file: !122, line: 5076, baseType: !2230, size: 32, offset: 160)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2231)
!2231 = !{!2232}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2230, file: !236, line: 52, baseType: !22, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2137, file: !127, line: 343, baseType: !2234, size: 64, offset: 928)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2235)
!2235 = !{!2236, !2237}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2234, file: !200, line: 63, baseType: !113, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2234, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2131, file: !163, line: 111, baseType: !2136, size: 32, offset: 96)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_preempted", scope: !2131, file: !163, line: 119, baseType: !2136, size: 32, offset: 128)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2131, file: !163, line: 124, baseType: !105, size: 32, offset: 160)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2131, file: !163, line: 127, baseType: !169, size: 8, offset: 192)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2131, file: !163, line: 153, baseType: !2243, offset: 200)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2244, line: 33, elements: !397)
!2244 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2127, file: !163, line: 170, baseType: !2246, size: 96, offset: 224)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !2247)
!2247 = !{!2248, !2249}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2246, file: !163, line: 86, baseType: !2136, size: 32)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2246, file: !163, line: 90, baseType: !2172, size: 64, offset: 32)
!2250 = !DIGlobalVariableExpression(var: !2251, expr: !DIExpression())
!2251 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2040, file: !2044, line: 43, type: !2252, isLocal: false, isDefinition: true, align: 512)
!2252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2253, size: 8704, elements: !2256)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !2254)
!2254 = !{!2255}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2253, file: !249, line: 48, baseType: !103, size: 8)
!2256 = !{!2257}
!2257 = !DISubrange(count: 1088)
!2258 = !DIGlobalVariableExpression(var: !2259, expr: !DIExpression())
!2259 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2040, file: !2044, line: 44, type: !2137, isLocal: false, isDefinition: true)
!2260 = !DIGlobalVariableExpression(var: !2261, expr: !DIExpression())
!2261 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2040, file: !2044, line: 48, type: !2262, isLocal: false, isDefinition: true)
!2262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2137, size: 1024, elements: !661)
!2263 = !DIGlobalVariableExpression(var: !2264, expr: !DIExpression())
!2264 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2040, file: !2044, line: 86, type: !2265, isLocal: false, isDefinition: true, align: 512)
!2265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2253, size: 16896, elements: !2266)
!2266 = !{!662, !319}
!2267 = !DIGlobalVariableExpression(var: !2268, expr: !DIExpression())
!2268 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2040, file: !2044, line: 217, type: !492, isLocal: false, isDefinition: true)
!2269 = !DIGlobalVariableExpression(var: !2270, expr: !DIExpression())
!2270 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2040, file: !2044, line: 50, type: !2271, isLocal: true, isDefinition: true, align: 512)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2253, size: 3072, elements: !2272)
!2272 = !{!662, !2273}
!2273 = !DISubrange(count: 384)
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(name: "levels", scope: !2276, file: !2044, line: 232, type: !2296, isLocal: true, isDefinition: true)
!2276 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2044, file: !2044, line: 230, type: !2277, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !2279)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{null, !2043}
!2279 = !{!2280, !2281, !2291, !2295}
!2280 = !DILocalVariable(name: "level", arg: 1, scope: !2276, file: !2044, line: 230, type: !2043)
!2281 = !DILocalVariable(name: "entry", scope: !2276, file: !2044, line: 244, type: !2282)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2284)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !2285)
!2285 = !{!2286, !2290}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2284, file: !472, line: 60, baseType: !2287, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{!105, !2062}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2284, file: !472, line: 65, baseType: !2062, size: 32, offset: 32)
!2291 = !DILocalVariable(name: "dev", scope: !2292, file: !2044, line: 247, type: !2062)
!2292 = distinct !DILexicalBlock(scope: !2293, file: !2044, line: 246, column: 64)
!2293 = distinct !DILexicalBlock(scope: !2294, file: !2044, line: 246, column: 2)
!2294 = distinct !DILexicalBlock(scope: !2276, file: !2044, line: 246, column: 2)
!2295 = !DILocalVariable(name: "rc", scope: !2292, file: !2044, line: 248, type: !105)
!2296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2282, size: 192, elements: !2297)
!2297 = !{!2298}
!2298 = !DISubrange(count: 6)
!2299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2300)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !2301)
!2301 = !{!2302, !2303}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2300, file: !348, line: 17, baseType: !269, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2300, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!2304 = !DIGlobalVariableExpression(var: !2305, expr: !DIExpression())
!2305 = distinct !DIGlobalVariable(name: "states_str", scope: !2306, file: !2307, line: 276, type: !2430, isLocal: true, isDefinition: true)
!2306 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2307, file: !2307, line: 271, type: !2308, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !2421)
!2307 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2308 = !DISubroutineType(types: !2309)
!2309 = !{!269, !2310, !102, !111}
!2310 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2311)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 32)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2313)
!2313 = !{!2314, !2372, !2384, !2385, !2386, !2387, !2393, !2408}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2312, file: !127, line: 247, baseType: !2315, size: 384)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2316)
!2316 = !{!2317, !2341, !2348, !2349, !2350, !2359, !2360, !2361}
!2317 = !DIDerivedType(tag: DW_TAG_member, scope: !2315, file: !127, line: 60, baseType: !2318, size: 64)
!2318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2315, file: !127, line: 60, size: 64, elements: !2319)
!2319 = !{!2320, !2335}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2318, file: !127, line: 61, baseType: !2321, size: 64)
!2321 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2322)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2323)
!2323 = !{!2324, !2330}
!2324 = !DIDerivedType(tag: DW_TAG_member, scope: !2322, file: !137, line: 38, baseType: !2325, size: 32)
!2325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2322, file: !137, line: 38, size: 32, elements: !2326)
!2326 = !{!2327, !2329}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2325, file: !137, line: 39, baseType: !2328, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2325, file: !137, line: 40, baseType: !2328, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, scope: !2322, file: !137, line: 42, baseType: !2331, size: 32, offset: 32)
!2331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2322, file: !137, line: 42, size: 32, elements: !2332)
!2332 = !{!2333, !2334}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2331, file: !137, line: 43, baseType: !2328, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2331, file: !137, line: 44, baseType: !2328, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2318, file: !127, line: 62, baseType: !2336, size: 64)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2337)
!2337 = !{!2338}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2336, file: !153, line: 50, baseType: !2339, size: 64)
!2339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2340, size: 64, elements: !158)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2315, file: !127, line: 68, baseType: !2342, size: 32, offset: 64)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2344)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2345)
!2345 = !{!2346}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2344, file: !163, line: 232, baseType: !2347, size: 64)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2322)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2315, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2315, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2350 = !DIDerivedType(tag: DW_TAG_member, scope: !2315, file: !127, line: 90, baseType: !2351, size: 16, offset: 112)
!2351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2315, file: !127, line: 90, size: 16, elements: !2352)
!2352 = !{!2353, !2358}
!2353 = !DIDerivedType(tag: DW_TAG_member, scope: !2351, file: !127, line: 91, baseType: !2354, size: 16)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2351, file: !127, line: 91, size: 16, elements: !2355)
!2355 = !{!2356, !2357}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2354, file: !127, line: 96, baseType: !179, size: 8)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2354, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2351, file: !127, line: 100, baseType: !183, size: 16)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2315, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2315, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2315, file: !127, line: 131, baseType: !2362, size: 192, offset: 192)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2363)
!2363 = !{!2364, !2365, !2371}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2362, file: !163, line: 245, baseType: !2321, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2362, file: !163, line: 246, baseType: !2366, size: 32, offset: 64)
!2366 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2367)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 32)
!2368 = !DISubroutineType(types: !2369)
!2369 = !{null, !2370}
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2362, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2312, file: !127, line: 250, baseType: !2373, size: 288, offset: 384)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2374)
!2374 = !{!2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2373, file: !200, line: 26, baseType: !113, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2373, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2373, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2373, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2373, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2373, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2373, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2373, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2373, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2312, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2312, file: !127, line: 256, baseType: !2343, size: 64, offset: 704)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2312, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2312, file: !127, line: 300, baseType: !2388, size: 96, offset: 800)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2389)
!2389 = !{!2390, !2391, !2392}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2388, file: !127, line: 153, baseType: !22, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2388, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2388, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2312, file: !127, line: 325, baseType: !2394, size: 32, offset: 896)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 32)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2396)
!2396 = !{!2397, !2403, !2404}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2395, file: !122, line: 5074, baseType: !2398, size: 96)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2399)
!2399 = !{!2400, !2401, !2402}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2398, file: !226, line: 57, baseType: !229, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2398, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2398, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2395, file: !122, line: 5075, baseType: !2343, size: 64, offset: 96)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2395, file: !122, line: 5076, baseType: !2405, size: 32, offset: 160)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2406)
!2406 = !{!2407}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2405, file: !236, line: 52, baseType: !22, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2312, file: !127, line: 343, baseType: !2409, size: 64, offset: 928)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2410)
!2410 = !{!2411, !2412}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2409, file: !200, line: 63, baseType: !113, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2409, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2413 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2414, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2415, globals: !2417, splitDebugInlining: false, nameTableKind: None)
!2414 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2415 = !{!104, !269, !107, !169, !22, !105, !2416, !24, !111, !102, !113, !114}
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 32)
!2417 = !{!2304, !2418}
!2418 = !DIGlobalVariableExpression(var: !2419, expr: !DIExpression())
!2419 = distinct !DIGlobalVariable(name: "states_sz", scope: !2306, file: !2307, line: 279, type: !2420, isLocal: true, isDefinition: true)
!2420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1974, size: 256, elements: !1633)
!2421 = !{!2422, !2423, !2424, !2425, !2426, !2427, !2428}
!2422 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2306, file: !2307, line: 271, type: !2310)
!2423 = !DILocalVariable(name: "buf", arg: 2, scope: !2306, file: !2307, line: 271, type: !102)
!2424 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2306, file: !2307, line: 271, type: !111)
!2425 = !DILocalVariable(name: "off", scope: !2306, file: !2307, line: 273, type: !111)
!2426 = !DILocalVariable(name: "bit", scope: !2306, file: !2307, line: 274, type: !169)
!2427 = !DILocalVariable(name: "thread_state", scope: !2306, file: !2307, line: 275, type: !169)
!2428 = !DILocalVariable(name: "index", scope: !2429, file: !2307, line: 293, type: !169)
!2429 = distinct !DILexicalBlock(scope: !2306, file: !2307, line: 293, column: 2)
!2430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 256, elements: !1633)
!2431 = !DIGlobalVariableExpression(var: !2432, expr: !DIExpression())
!2432 = distinct !DIGlobalVariable(name: "lock", scope: !2433, file: !2452, line: 39, type: !2453, isLocal: true, isDefinition: true)
!2433 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2434, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2435, globals: !2451, splitDebugInlining: false, nameTableKind: None)
!2434 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2435 = !{!104, !492, !105, !2436}
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2438)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2439)
!2439 = !{!2440, !2446}
!2440 = !DIDerivedType(tag: DW_TAG_member, scope: !2438, file: !137, line: 38, baseType: !2441, size: 32)
!2441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2438, file: !137, line: 38, size: 32, elements: !2442)
!2442 = !{!2443, !2445}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2441, file: !137, line: 39, baseType: !2444, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2441, file: !137, line: 40, baseType: !2444, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, scope: !2438, file: !137, line: 42, baseType: !2447, size: 32, offset: 32)
!2447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2438, file: !137, line: 42, size: 32, elements: !2448)
!2448 = !{!2449, !2450}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2447, file: !137, line: 43, baseType: !2444, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2447, file: !137, line: 44, baseType: !2444, size: 32)
!2451 = !{!2431}
!2452 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2454)
!2454 = !{!2455}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2453, file: !236, line: 52, baseType: !22, size: 32)
!2456 = !DIGlobalVariableExpression(var: !2457, expr: !DIExpression())
!2457 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2458, file: !2568, line: 56, type: !2555, isLocal: false, isDefinition: true)
!2458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2460, globals: !2565, splitDebugInlining: false, nameTableKind: None)
!2459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2460 = !{!2461, !102, !104, !2563, !432, !107, !116, !105, !113, !114, !2564}
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 32)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2463)
!2463 = !{!2464, !2522, !2534, !2535, !2536, !2537, !2543, !2558}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2462, file: !127, line: 247, baseType: !2465, size: 384)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2466)
!2466 = !{!2467, !2491, !2498, !2499, !2500, !2509, !2510, !2511}
!2467 = !DIDerivedType(tag: DW_TAG_member, scope: !2465, file: !127, line: 60, baseType: !2468, size: 64)
!2468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2465, file: !127, line: 60, size: 64, elements: !2469)
!2469 = !{!2470, !2485}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2468, file: !127, line: 61, baseType: !2471, size: 64)
!2471 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2472)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2473)
!2473 = !{!2474, !2480}
!2474 = !DIDerivedType(tag: DW_TAG_member, scope: !2472, file: !137, line: 38, baseType: !2475, size: 32)
!2475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2472, file: !137, line: 38, size: 32, elements: !2476)
!2476 = !{!2477, !2479}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2475, file: !137, line: 39, baseType: !2478, size: 32)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2475, file: !137, line: 40, baseType: !2478, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, scope: !2472, file: !137, line: 42, baseType: !2481, size: 32, offset: 32)
!2481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2472, file: !137, line: 42, size: 32, elements: !2482)
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2481, file: !137, line: 43, baseType: !2478, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2481, file: !137, line: 44, baseType: !2478, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2468, file: !127, line: 62, baseType: !2486, size: 64)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2487)
!2487 = !{!2488}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2486, file: !153, line: 50, baseType: !2489, size: 64)
!2489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2490, size: 64, elements: !158)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2465, file: !127, line: 68, baseType: !2492, size: 32, offset: 64)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2494)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2495)
!2495 = !{!2496}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2494, file: !163, line: 232, baseType: !2497, size: 64)
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2472)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2465, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2465, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2500 = !DIDerivedType(tag: DW_TAG_member, scope: !2465, file: !127, line: 90, baseType: !2501, size: 16, offset: 112)
!2501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2465, file: !127, line: 90, size: 16, elements: !2502)
!2502 = !{!2503, !2508}
!2503 = !DIDerivedType(tag: DW_TAG_member, scope: !2501, file: !127, line: 91, baseType: !2504, size: 16)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2501, file: !127, line: 91, size: 16, elements: !2505)
!2505 = !{!2506, !2507}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2504, file: !127, line: 96, baseType: !179, size: 8)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2504, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2501, file: !127, line: 100, baseType: !183, size: 16)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2465, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2465, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2465, file: !127, line: 131, baseType: !2512, size: 192, offset: 192)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2513)
!2513 = !{!2514, !2515, !2521}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2512, file: !163, line: 245, baseType: !2471, size: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2512, file: !163, line: 246, baseType: !2516, size: 32, offset: 64)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2517)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 32)
!2518 = !DISubroutineType(types: !2519)
!2519 = !{null, !2520}
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2512, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2462, file: !127, line: 250, baseType: !2523, size: 288, offset: 384)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2523, file: !200, line: 26, baseType: !113, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2523, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2523, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2523, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2523, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2523, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2523, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2523, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2523, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2462, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2462, file: !127, line: 256, baseType: !2493, size: 64, offset: 704)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2462, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2462, file: !127, line: 300, baseType: !2538, size: 96, offset: 800)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2539)
!2539 = !{!2540, !2541, !2542}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2538, file: !127, line: 153, baseType: !22, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2538, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2538, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2462, file: !127, line: 325, baseType: !2544, size: 32, offset: 896)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 32)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2546)
!2546 = !{!2547, !2553, !2554}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2545, file: !122, line: 5074, baseType: !2548, size: 96)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2549)
!2549 = !{!2550, !2551, !2552}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2548, file: !226, line: 57, baseType: !229, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2548, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2548, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2545, file: !122, line: 5075, baseType: !2493, size: 64, offset: 96)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2545, file: !122, line: 5076, baseType: !2555, size: 32, offset: 160)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2556)
!2556 = !{!2557}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2555, file: !236, line: 52, baseType: !22, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2462, file: !127, line: 343, baseType: !2559, size: 64, offset: 928)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2560)
!2560 = !{!2561, !2562}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2559, file: !200, line: 63, baseType: !113, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2559, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 32)
!2565 = !{!2456, !2566, !2569, !2571}
!2566 = !DIGlobalVariableExpression(var: !2567, expr: !DIExpression())
!2567 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2458, file: !2568, line: 404, type: !105, isLocal: true, isDefinition: true)
!2568 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2569 = !DIGlobalVariableExpression(var: !2570, expr: !DIExpression())
!2570 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2458, file: !2568, line: 405, type: !105, isLocal: true, isDefinition: true)
!2571 = !DIGlobalVariableExpression(var: !2572, expr: !DIExpression())
!2572 = distinct !DIGlobalVariable(name: "pending_current", scope: !2458, file: !2568, line: 425, type: !2461, isLocal: true, isDefinition: true)
!2573 = !DIGlobalVariableExpression(var: !2574, expr: !DIExpression())
!2574 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2575, file: !2605, line: 19, type: !2611, isLocal: true, isDefinition: true)
!2575 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2576, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2577, globals: !2602, splitDebugInlining: false, nameTableKind: None)
!2576 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2577 = !{!107, !104, !116, !113, !114, !105, !2578, !102, !109}
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 32)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2580)
!2580 = !{!2581, !2596, !2601}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2579, file: !163, line: 245, baseType: !2582, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2583)
!2583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2584)
!2584 = !{!2585, !2591}
!2585 = !DIDerivedType(tag: DW_TAG_member, scope: !2583, file: !137, line: 38, baseType: !2586, size: 32)
!2586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2583, file: !137, line: 38, size: 32, elements: !2587)
!2587 = !{!2588, !2590}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2586, file: !137, line: 39, baseType: !2589, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2586, file: !137, line: 40, baseType: !2589, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, scope: !2583, file: !137, line: 42, baseType: !2592, size: 32, offset: 32)
!2592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2583, file: !137, line: 42, size: 32, elements: !2593)
!2593 = !{!2594, !2595}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2592, file: !137, line: 43, baseType: !2589, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2592, file: !137, line: 44, baseType: !2589, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2579, file: !163, line: 246, baseType: !2597, size: 32, offset: 64)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2598)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 32)
!2599 = !DISubroutineType(types: !2600)
!2600 = !{null, !2578}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2579, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2602 = !{!2603, !2573, !2606, !2608}
!2603 = !DIGlobalVariableExpression(var: !2604, expr: !DIExpression())
!2604 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2575, file: !2605, line: 15, type: !114, isLocal: true, isDefinition: true)
!2605 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2606 = !DIGlobalVariableExpression(var: !2607, expr: !DIExpression())
!2607 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2575, file: !2605, line: 25, type: !105, isLocal: true, isDefinition: true)
!2608 = !DIGlobalVariableExpression(var: !2609, expr: !DIExpression())
!2609 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2575, file: !2605, line: 17, type: !2610, isLocal: true, isDefinition: true)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2583)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2612)
!2612 = !{!2613}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2611, file: !236, line: 52, baseType: !22, size: 32)
!2614 = !DIGlobalVariableExpression(var: !2615, expr: !DIExpression())
!2615 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2616, file: !2635, line: 55, type: !2636, isLocal: true, isDefinition: true, align: 32)
!2616 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2617, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2618, globals: !2634, splitDebugInlining: false, nameTableKind: None)
!2617 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2618 = !{!104, !107, !105, !2619}
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2621)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2622)
!2622 = !{!2623, !2629}
!2623 = !DIDerivedType(tag: DW_TAG_member, scope: !2621, file: !137, line: 38, baseType: !2624, size: 32)
!2624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2621, file: !137, line: 38, size: 32, elements: !2625)
!2625 = !{!2626, !2628}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2624, file: !137, line: 39, baseType: !2627, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2624, file: !137, line: 40, baseType: !2627, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, scope: !2621, file: !137, line: 42, baseType: !2630, size: 32, offset: 32)
!2630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2621, file: !137, line: 42, size: 32, elements: !2631)
!2631 = !{!2632, !2633}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2630, file: !137, line: 43, baseType: !2627, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2630, file: !137, line: 44, baseType: !2627, size: 32)
!2634 = !{!2614}
!2635 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2637)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !2638)
!2638 = !{!2639, !2646}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2637, file: !472, line: 60, baseType: !2640, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 32)
!2641 = !DISubroutineType(types: !2642)
!2642 = !{!105, !2643}
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 32)
!2644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2645)
!2645 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !472, line: 48, flags: DIFlagFwdDecl)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2637, file: !472, line: 65, baseType: !2643, size: 32, offset: 32)
!2647 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2648, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2648 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2649 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2650, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2650 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2651 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2652, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2653, retainedTypes: !2661, splitDebugInlining: false, nameTableKind: None)
!2652 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2653 = !{!30, !2654}
!2654 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2655, line: 54, baseType: !32, size: 32, elements: !2656)
!2655 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2656 = !{!2657, !2658, !2659, !2660}
!2657 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2658 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2659 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2660 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2661 = !{!104, !111, !432, !24, !2662, !22, !2668, !105, !1043, !2683}
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2655, line: 58, baseType: !2664)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2655, line: 58, size: 64, elements: !2665)
!2665 = !{!2666}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2664, file: !2655, line: 58, baseType: !2667, size: 64)
!2667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 64, elements: !1633)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 32)
!2669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2655, line: 68, size: 128, elements: !2670)
!2670 = !{!2671, !2674, !2675, !2676}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2669, file: !2655, line: 69, baseType: !2672, size: 64)
!2672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2673, size: 64, elements: !158)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2655, line: 61, baseType: !113)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2669, file: !2655, line: 70, baseType: !2673, size: 32, offset: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2669, file: !2655, line: 71, baseType: !113, size: 32, offset: 96)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2669, file: !2655, line: 77, baseType: !2677, offset: 128)
!2677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2678, elements: !2681)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2655, line: 64, size: 32, elements: !2679)
!2679 = !{!2680}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2678, file: !2655, line: 65, baseType: !2673, size: 32)
!2681 = !{!2682}
!2682 = !DISubrange(count: 0)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!2684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2685, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2686, retainedTypes: !2706, splitDebugInlining: false, nameTableKind: None)
!2685 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2686 = !{!2687, !2695}
!2687 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2688, line: 69, baseType: !32, size: 32, elements: !2689)
!2688 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2689 = !{!2690, !2691, !2692, !2693, !2694}
!2690 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2691 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2692 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2693 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2694 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2695 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2688, line: 56, baseType: !32, size: 32, elements: !2696)
!2696 = !{!2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705}
!2697 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2698 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2699 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2700 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2701 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2702 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2703 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2704 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2705 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2706 = !{!105, !2687, !2695, !2707, !180, !499, !2709, !2710, !170, !184, !269, !111, !104, !22, !32, !428, !2712, !2713, !106, !429, !110, !430, !2708, !2714, !2715, !2716, !2717}
!2707 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2688, line: 31, baseType: !2708)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !110)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !112, line: 329, baseType: !32)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2688, line: 32, baseType: !2711)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !112, line: 145, baseType: !105)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 32)
!2718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2719 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2720 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2721, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2721 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2724, splitDebugInlining: false, nameTableKind: None)
!2723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2724 = !{!269, !170, !105, !32}
!2725 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2726, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2727, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2726 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2727 = !{!2728, !30}
!2728 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2729, line: 27, baseType: !32, size: 32, elements: !2730)
!2729 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2730 = !{!2731, !2732, !2733, !2734, !2735}
!2731 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2732 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2733 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2734 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2735 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2738, retainedTypes: !2739, splitDebugInlining: false, nameTableKind: None)
!2737 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2738 = !{!748, !2728, !30}
!2739 = !{!941, !2740, !104, !105, !116, !113, !169, !2757}
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2742)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2743)
!2743 = !{!2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2742, file: !679, line: 413, baseType: !1793, size: 256)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2742, file: !679, line: 414, baseType: !1795, size: 768, offset: 256)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2742, file: !679, line: 415, baseType: !1793, size: 256, offset: 1024)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2742, file: !679, line: 416, baseType: !1795, size: 768, offset: 1280)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2742, file: !679, line: 417, baseType: !1793, size: 256, offset: 2048)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2742, file: !679, line: 418, baseType: !1795, size: 768, offset: 2304)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2742, file: !679, line: 419, baseType: !1793, size: 256, offset: 3072)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2742, file: !679, line: 420, baseType: !1795, size: 768, offset: 3328)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2742, file: !679, line: 421, baseType: !1793, size: 256, offset: 4096)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2742, file: !679, line: 422, baseType: !1806, size: 1792, offset: 4352)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2742, file: !679, line: 423, baseType: !1810, size: 1920, offset: 6144)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2742, file: !679, line: 424, baseType: !1815, size: 20608, offset: 8064)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2742, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2759)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2760)
!2760 = !{!2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2759, file: !679, line: 447, baseType: !683, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2759, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2759, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2759, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2759, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2759, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2759, file: !679, line: 453, baseType: !1830, size: 96, offset: 192)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2759, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2759, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2759, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2759, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2759, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2759, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2759, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2759, file: !679, line: 461, baseType: !1841, size: 64, offset: 512)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2759, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2759, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2759, file: !679, line: 464, baseType: !1845, size: 128, offset: 640)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2759, file: !679, line: 465, baseType: !1847, size: 160, offset: 768)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2759, file: !679, line: 466, baseType: !1849, size: 160, offset: 928)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2759, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2782 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2783, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2783 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2784 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2785, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2786, splitDebugInlining: false, nameTableKind: None)
!2785 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2786 = !{!104, !105, !22, !2787}
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2789)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2790)
!2790 = !{!2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2789, file: !679, line: 447, baseType: !683, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2789, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2789, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2789, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2789, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2789, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2789, file: !679, line: 453, baseType: !1830, size: 96, offset: 192)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2789, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2789, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2789, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2789, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2789, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2789, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2789, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2789, file: !679, line: 461, baseType: !1841, size: 64, offset: 512)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2789, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2789, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2789, file: !679, line: 464, baseType: !1845, size: 128, offset: 640)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2789, file: !679, line: 465, baseType: !1847, size: 160, offset: 768)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2789, file: !679, line: 466, baseType: !1849, size: 160, offset: 928)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2789, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2812 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2813, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2814, splitDebugInlining: false, nameTableKind: None)
!2813 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2814 = !{!2815, !104, !105}
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2817)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2818)
!2818 = !{!2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2817, file: !679, line: 447, baseType: !683, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2817, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2817, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2817, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2817, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2817, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2817, file: !679, line: 453, baseType: !1830, size: 96, offset: 192)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2817, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2817, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2817, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2817, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2817, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2817, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2817, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2817, file: !679, line: 461, baseType: !1841, size: 64, offset: 512)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2817, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2817, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2817, file: !679, line: 464, baseType: !1845, size: 128, offset: 640)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2817, file: !679, line: 465, baseType: !1847, size: 160, offset: 768)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2817, file: !679, line: 466, baseType: !1849, size: 160, offset: 928)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2817, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2841, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2842, splitDebugInlining: false, nameTableKind: None)
!2841 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2842 = !{!2843, !113, !104, !105}
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 32)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2845, line: 98, size: 256, elements: !2846)
!2845 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2846 = !{!2847, !2852, !2857, !2862, !2867, !2872, !2877, !2882}
!2847 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2845, line: 99, baseType: !2848, size: 32)
!2848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2845, line: 99, size: 32, elements: !2849)
!2849 = !{!2850, !2851}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2848, file: !2845, line: 99, baseType: !113, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2848, file: !2845, line: 99, baseType: !113, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2845, line: 100, baseType: !2853, size: 32, offset: 32)
!2853 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2845, line: 100, size: 32, elements: !2854)
!2854 = !{!2855, !2856}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2853, file: !2845, line: 100, baseType: !113, size: 32)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2853, file: !2845, line: 100, baseType: !113, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2845, line: 101, baseType: !2858, size: 32, offset: 64)
!2858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2845, line: 101, size: 32, elements: !2859)
!2859 = !{!2860, !2861}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2858, file: !2845, line: 101, baseType: !113, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2858, file: !2845, line: 101, baseType: !113, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2845, line: 102, baseType: !2863, size: 32, offset: 96)
!2863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2845, line: 102, size: 32, elements: !2864)
!2864 = !{!2865, !2866}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2863, file: !2845, line: 102, baseType: !113, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2863, file: !2845, line: 102, baseType: !113, size: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2845, line: 103, baseType: !2868, size: 32, offset: 128)
!2868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2845, line: 103, size: 32, elements: !2869)
!2869 = !{!2870, !2871}
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2868, file: !2845, line: 103, baseType: !113, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2868, file: !2845, line: 103, baseType: !113, size: 32)
!2872 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2845, line: 104, baseType: !2873, size: 32, offset: 160)
!2873 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2845, line: 104, size: 32, elements: !2874)
!2874 = !{!2875, !2876}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2873, file: !2845, line: 104, baseType: !113, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2873, file: !2845, line: 104, baseType: !113, size: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2845, line: 105, baseType: !2878, size: 32, offset: 192)
!2878 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2845, line: 105, size: 32, elements: !2879)
!2879 = !{!2880, !2881}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2878, file: !2845, line: 105, baseType: !113, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2878, file: !2845, line: 105, baseType: !113, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2844, file: !2845, line: 106, baseType: !113, size: 32, offset: 224)
!2883 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2884, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2727, retainedTypes: !2885, splitDebugInlining: false, nameTableKind: None)
!2884 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2885 = !{!2886, !104, !105, !2911, !2683, !113}
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 32)
!2887 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2888)
!2888 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2889)
!2889 = !{!2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2888, file: !679, line: 447, baseType: !683, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2888, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2888, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2888, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2888, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2888, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2888, file: !679, line: 453, baseType: !1830, size: 96, offset: 192)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2888, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2888, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2888, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2888, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2888, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2888, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2888, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2888, file: !679, line: 461, baseType: !1841, size: 64, offset: 512)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2888, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2888, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2888, file: !679, line: 464, baseType: !1845, size: 128, offset: 640)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2888, file: !679, line: 465, baseType: !1847, size: 160, offset: 768)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2888, file: !679, line: 466, baseType: !1849, size: 160, offset: 928)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2888, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2845, line: 141, baseType: !2913)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2845, line: 97, size: 256, elements: !2914)
!2914 = !{!2915}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2913, file: !2845, line: 107, baseType: !2916, size: 256)
!2916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2845, line: 98, size: 256, elements: !2917)
!2917 = !{!2918, !2923, !2928, !2933, !2938, !2943, !2948, !2953}
!2918 = !DIDerivedType(tag: DW_TAG_member, scope: !2916, file: !2845, line: 99, baseType: !2919, size: 32)
!2919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2916, file: !2845, line: 99, size: 32, elements: !2920)
!2920 = !{!2921, !2922}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2919, file: !2845, line: 99, baseType: !113, size: 32)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2919, file: !2845, line: 99, baseType: !113, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, scope: !2916, file: !2845, line: 100, baseType: !2924, size: 32, offset: 32)
!2924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2916, file: !2845, line: 100, size: 32, elements: !2925)
!2925 = !{!2926, !2927}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2924, file: !2845, line: 100, baseType: !113, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2924, file: !2845, line: 100, baseType: !113, size: 32)
!2928 = !DIDerivedType(tag: DW_TAG_member, scope: !2916, file: !2845, line: 101, baseType: !2929, size: 32, offset: 64)
!2929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2916, file: !2845, line: 101, size: 32, elements: !2930)
!2930 = !{!2931, !2932}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2929, file: !2845, line: 101, baseType: !113, size: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2929, file: !2845, line: 101, baseType: !113, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_member, scope: !2916, file: !2845, line: 102, baseType: !2934, size: 32, offset: 96)
!2934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2916, file: !2845, line: 102, size: 32, elements: !2935)
!2935 = !{!2936, !2937}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2934, file: !2845, line: 102, baseType: !113, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2934, file: !2845, line: 102, baseType: !113, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, scope: !2916, file: !2845, line: 103, baseType: !2939, size: 32, offset: 128)
!2939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2916, file: !2845, line: 103, size: 32, elements: !2940)
!2940 = !{!2941, !2942}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2939, file: !2845, line: 103, baseType: !113, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2939, file: !2845, line: 103, baseType: !113, size: 32)
!2943 = !DIDerivedType(tag: DW_TAG_member, scope: !2916, file: !2845, line: 104, baseType: !2944, size: 32, offset: 160)
!2944 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2916, file: !2845, line: 104, size: 32, elements: !2945)
!2945 = !{!2946, !2947}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2944, file: !2845, line: 104, baseType: !113, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2944, file: !2845, line: 104, baseType: !113, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, scope: !2916, file: !2845, line: 105, baseType: !2949, size: 32, offset: 192)
!2949 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2916, file: !2845, line: 105, size: 32, elements: !2950)
!2950 = !{!2951, !2952}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2949, file: !2845, line: 105, baseType: !113, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2949, file: !2845, line: 105, baseType: !113, size: 32)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2916, file: !2845, line: 106, baseType: !113, size: 32, offset: 224)
!2954 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2955, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1778, retainedTypes: !2956, splitDebugInlining: false, nameTableKind: None)
!2955 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!2956 = !{!941, !116, !169, !113, !2957, !2974}
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2959)
!2959 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2960)
!2960 = !{!2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2959, file: !679, line: 413, baseType: !1793, size: 256)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2959, file: !679, line: 414, baseType: !1795, size: 768, offset: 256)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2959, file: !679, line: 415, baseType: !1793, size: 256, offset: 1024)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2959, file: !679, line: 416, baseType: !1795, size: 768, offset: 1280)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2959, file: !679, line: 417, baseType: !1793, size: 256, offset: 2048)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2959, file: !679, line: 418, baseType: !1795, size: 768, offset: 2304)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2959, file: !679, line: 419, baseType: !1793, size: 256, offset: 3072)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2959, file: !679, line: 420, baseType: !1795, size: 768, offset: 3328)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2959, file: !679, line: 421, baseType: !1793, size: 256, offset: 4096)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2959, file: !679, line: 422, baseType: !1806, size: 1792, offset: 4352)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2959, file: !679, line: 423, baseType: !1810, size: 1920, offset: 6144)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2959, file: !679, line: 424, baseType: !1815, size: 20608, offset: 8064)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2959, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2976)
!2976 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2977)
!2977 = !{!2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2976, file: !679, line: 447, baseType: !683, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2976, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2976, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2976, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2976, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2976, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2976, file: !679, line: 453, baseType: !1830, size: 96, offset: 192)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2976, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2976, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2976, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2976, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2976, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2976, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2976, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2976, file: !679, line: 461, baseType: !1841, size: 64, offset: 512)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2976, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2976, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2976, file: !679, line: 464, baseType: !1845, size: 128, offset: 640)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2976, file: !679, line: 465, baseType: !1847, size: 160, offset: 768)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2976, file: !679, line: 466, baseType: !1849, size: 160, offset: 928)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2976, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2999 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3000, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3001, splitDebugInlining: false, nameTableKind: None)
!3000 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!3001 = !{!3002, !104, !105}
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !3004)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !3005)
!3005 = !{!3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3004, file: !679, line: 447, baseType: !683, size: 32)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3004, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3004, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3004, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3004, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3004, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3004, file: !679, line: 453, baseType: !1830, size: 96, offset: 192)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3004, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3004, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3004, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3004, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3004, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3004, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3004, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3004, file: !679, line: 461, baseType: !1841, size: 64, offset: 512)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3004, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3004, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3004, file: !679, line: 464, baseType: !1845, size: 128, offset: 640)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3004, file: !679, line: 465, baseType: !1847, size: 160, offset: 768)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3004, file: !679, line: 466, baseType: !1849, size: 160, offset: 928)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3004, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!3027 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3028, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3029, splitDebugInlining: false, nameTableKind: None)
!3028 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!3029 = !{!103, !102, !111, !1148, !3030, !170, !104}
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!3032 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3033, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3034, splitDebugInlining: false, nameTableKind: None)
!3033 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!3034 = !{!3035}
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 586, baseType: !3037)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 550, size: 1216, elements: !3038)
!3038 = !{!3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3037, file: !457, line: 552, baseType: !461, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3037, file: !457, line: 553, baseType: !461, size: 32, offset: 32)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3037, file: !457, line: 554, baseType: !461, size: 32, offset: 64)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3037, file: !457, line: 555, baseType: !461, size: 32, offset: 96)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3037, file: !457, line: 556, baseType: !461, size: 32, offset: 128)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3037, file: !457, line: 557, baseType: !461, size: 32, offset: 160)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3037, file: !457, line: 558, baseType: !461, size: 32, offset: 192)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3037, file: !457, line: 559, baseType: !113, size: 32, offset: 224)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3037, file: !457, line: 560, baseType: !461, size: 32, offset: 256)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3037, file: !457, line: 561, baseType: !461, size: 32, offset: 288)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3037, file: !457, line: 562, baseType: !1013, size: 64, offset: 320)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3037, file: !457, line: 563, baseType: !461, size: 32, offset: 384)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3037, file: !457, line: 564, baseType: !461, size: 32, offset: 416)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3037, file: !457, line: 565, baseType: !461, size: 32, offset: 448)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3037, file: !457, line: 566, baseType: !113, size: 32, offset: 480)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3037, file: !457, line: 567, baseType: !461, size: 32, offset: 512)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3037, file: !457, line: 568, baseType: !461, size: 32, offset: 544)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3037, file: !457, line: 569, baseType: !1013, size: 64, offset: 576)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3037, file: !457, line: 570, baseType: !461, size: 32, offset: 640)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3037, file: !457, line: 571, baseType: !461, size: 32, offset: 672)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3037, file: !457, line: 572, baseType: !461, size: 32, offset: 704)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3037, file: !457, line: 573, baseType: !113, size: 32, offset: 736)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3037, file: !457, line: 574, baseType: !461, size: 32, offset: 768)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3037, file: !457, line: 575, baseType: !461, size: 32, offset: 800)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3037, file: !457, line: 576, baseType: !1013, size: 64, offset: 832)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3037, file: !457, line: 577, baseType: !461, size: 32, offset: 896)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3037, file: !457, line: 578, baseType: !461, size: 32, offset: 928)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3037, file: !457, line: 579, baseType: !1013, size: 64, offset: 960)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3037, file: !457, line: 580, baseType: !461, size: 32, offset: 1024)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3037, file: !457, line: 581, baseType: !461, size: 32, offset: 1056)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3037, file: !457, line: 582, baseType: !461, size: 32, offset: 1088)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3037, file: !457, line: 583, baseType: !461, size: 32, offset: 1120)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3037, file: !457, line: 584, baseType: !461, size: 32, offset: 1152)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3037, file: !457, line: 585, baseType: !461, size: 32, offset: 1184)
!3073 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3074, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3074 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!3075 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3076, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3077, retainedTypes: !3093, splitDebugInlining: false, nameTableKind: None)
!3076 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!3077 = !{!3078, !3085, !3089}
!3078 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3079, line: 38, baseType: !32, size: 32, elements: !3080)
!3079 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3080 = !{!3081, !3082, !3083, !3084}
!3081 = !DIEnumerator(name: "HAL_OK", value: 0)
!3082 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3083 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3084 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3085 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !986, line: 184, baseType: !32, size: 32, elements: !3086)
!3086 = !{!3087, !3088}
!3087 = !DIEnumerator(name: "RESET", value: 0)
!3088 = !DIEnumerator(name: "SET", value: 1)
!3089 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !986, line: 190, baseType: !32, size: 32, elements: !3090)
!3090 = !{!3091, !3092}
!3091 = !DIEnumerator(name: "DISABLE", value: 0)
!3092 = !DIEnumerator(name: "ENABLE", value: 1)
!3093 = !{!3094, !113, !3132, !1627, !169, !114, !104}
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 32)
!3095 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 586, baseType: !3096)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 550, size: 1216, elements: !3097)
!3097 = !{!3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3096, file: !457, line: 552, baseType: !461, size: 32)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3096, file: !457, line: 553, baseType: !461, size: 32, offset: 32)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3096, file: !457, line: 554, baseType: !461, size: 32, offset: 64)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3096, file: !457, line: 555, baseType: !461, size: 32, offset: 96)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3096, file: !457, line: 556, baseType: !461, size: 32, offset: 128)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3096, file: !457, line: 557, baseType: !461, size: 32, offset: 160)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3096, file: !457, line: 558, baseType: !461, size: 32, offset: 192)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3096, file: !457, line: 559, baseType: !113, size: 32, offset: 224)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3096, file: !457, line: 560, baseType: !461, size: 32, offset: 256)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3096, file: !457, line: 561, baseType: !461, size: 32, offset: 288)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3096, file: !457, line: 562, baseType: !1013, size: 64, offset: 320)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3096, file: !457, line: 563, baseType: !461, size: 32, offset: 384)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3096, file: !457, line: 564, baseType: !461, size: 32, offset: 416)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3096, file: !457, line: 565, baseType: !461, size: 32, offset: 448)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3096, file: !457, line: 566, baseType: !113, size: 32, offset: 480)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3096, file: !457, line: 567, baseType: !461, size: 32, offset: 512)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3096, file: !457, line: 568, baseType: !461, size: 32, offset: 544)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3096, file: !457, line: 569, baseType: !1013, size: 64, offset: 576)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3096, file: !457, line: 570, baseType: !461, size: 32, offset: 640)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3096, file: !457, line: 571, baseType: !461, size: 32, offset: 672)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3096, file: !457, line: 572, baseType: !461, size: 32, offset: 704)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3096, file: !457, line: 573, baseType: !113, size: 32, offset: 736)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3096, file: !457, line: 574, baseType: !461, size: 32, offset: 768)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3096, file: !457, line: 575, baseType: !461, size: 32, offset: 800)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3096, file: !457, line: 576, baseType: !1013, size: 64, offset: 832)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3096, file: !457, line: 577, baseType: !461, size: 32, offset: 896)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3096, file: !457, line: 578, baseType: !461, size: 32, offset: 928)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3096, file: !457, line: 579, baseType: !1013, size: 64, offset: 960)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3096, file: !457, line: 580, baseType: !461, size: 32, offset: 1024)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3096, file: !457, line: 581, baseType: !461, size: 32, offset: 1056)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3096, file: !457, line: 582, baseType: !461, size: 32, offset: 1088)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3096, file: !457, line: 583, baseType: !461, size: 32, offset: 1120)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3096, file: !457, line: 584, baseType: !461, size: 32, offset: 1152)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3096, file: !457, line: 585, baseType: !461, size: 32, offset: 1184)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !457, line: 544, baseType: !3134)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 540, size: 64, elements: !3135)
!3135 = !{!3136, !3137}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3134, file: !457, line: 542, baseType: !461, size: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3134, file: !457, line: 543, baseType: !461, size: 32, offset: 32)
!3138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3140, retainedTypes: !3141, splitDebugInlining: false, nameTableKind: None)
!3139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!3140 = !{!985}
!3141 = !{!3142, !113, !3150, !3156, !3167}
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3143, size: 32)
!3143 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !679, line: 770, baseType: !3144)
!3144 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 764, size: 128, elements: !3145)
!3145 = !{!3146, !3147, !3148, !3149}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3144, file: !679, line: 766, baseType: !461, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3144, file: !679, line: 767, baseType: !461, size: 32, offset: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3144, file: !679, line: 768, baseType: !461, size: 32, offset: 64)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3144, file: !679, line: 769, baseType: !683, size: 32, offset: 96)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !457, line: 544, baseType: !3152)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 540, size: 64, elements: !3153)
!3153 = !{!3154, !3155}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3152, file: !457, line: 542, baseType: !461, size: 32)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3152, file: !457, line: 543, baseType: !461, size: 32, offset: 32)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 32)
!3157 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 407, baseType: !3158)
!3158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 398, size: 224, elements: !3159)
!3159 = !{!3160, !3161, !3162, !3163, !3164, !3165, !3166}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3158, file: !457, line: 400, baseType: !461, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3158, file: !457, line: 401, baseType: !461, size: 32, offset: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3158, file: !457, line: 402, baseType: !461, size: 32, offset: 64)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3158, file: !457, line: 403, baseType: !461, size: 32, offset: 96)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3158, file: !457, line: 404, baseType: !461, size: 32, offset: 128)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3158, file: !457, line: 405, baseType: !461, size: 32, offset: 160)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3158, file: !457, line: 406, baseType: !461, size: 32, offset: 192)
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 32)
!3168 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 586, baseType: !3169)
!3169 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 550, size: 1216, elements: !3170)
!3170 = !{!3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204}
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3169, file: !457, line: 552, baseType: !461, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3169, file: !457, line: 553, baseType: !461, size: 32, offset: 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3169, file: !457, line: 554, baseType: !461, size: 32, offset: 64)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3169, file: !457, line: 555, baseType: !461, size: 32, offset: 96)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3169, file: !457, line: 556, baseType: !461, size: 32, offset: 128)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3169, file: !457, line: 557, baseType: !461, size: 32, offset: 160)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3169, file: !457, line: 558, baseType: !461, size: 32, offset: 192)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3169, file: !457, line: 559, baseType: !113, size: 32, offset: 224)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3169, file: !457, line: 560, baseType: !461, size: 32, offset: 256)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3169, file: !457, line: 561, baseType: !461, size: 32, offset: 288)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3169, file: !457, line: 562, baseType: !1013, size: 64, offset: 320)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3169, file: !457, line: 563, baseType: !461, size: 32, offset: 384)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3169, file: !457, line: 564, baseType: !461, size: 32, offset: 416)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3169, file: !457, line: 565, baseType: !461, size: 32, offset: 448)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3169, file: !457, line: 566, baseType: !113, size: 32, offset: 480)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3169, file: !457, line: 567, baseType: !461, size: 32, offset: 512)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3169, file: !457, line: 568, baseType: !461, size: 32, offset: 544)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3169, file: !457, line: 569, baseType: !1013, size: 64, offset: 576)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3169, file: !457, line: 570, baseType: !461, size: 32, offset: 640)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3169, file: !457, line: 571, baseType: !461, size: 32, offset: 672)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3169, file: !457, line: 572, baseType: !461, size: 32, offset: 704)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3169, file: !457, line: 573, baseType: !113, size: 32, offset: 736)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3169, file: !457, line: 574, baseType: !461, size: 32, offset: 768)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3169, file: !457, line: 575, baseType: !461, size: 32, offset: 800)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3169, file: !457, line: 576, baseType: !1013, size: 64, offset: 832)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3169, file: !457, line: 577, baseType: !461, size: 32, offset: 896)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3169, file: !457, line: 578, baseType: !461, size: 32, offset: 928)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3169, file: !457, line: 579, baseType: !1013, size: 64, offset: 960)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3169, file: !457, line: 580, baseType: !461, size: 32, offset: 1024)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3169, file: !457, line: 581, baseType: !461, size: 32, offset: 1056)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3169, file: !457, line: 582, baseType: !461, size: 32, offset: 1088)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3169, file: !457, line: 583, baseType: !461, size: 32, offset: 1120)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3169, file: !457, line: 584, baseType: !461, size: 32, offset: 1152)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3169, file: !457, line: 585, baseType: !461, size: 32, offset: 1184)
!3205 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3206, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3207, splitDebugInlining: false, nameTableKind: None)
!3206 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!3207 = !{!104, !111}
!3208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3209, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3210, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3209 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!3210 = !{!3211, !3218, !2728, !30}
!3211 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3212, line: 14, baseType: !32, size: 32, elements: !3213)
!3212 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3213 = !{!3214, !3215, !3216, !3217}
!3214 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3215 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3216 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3217 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3218 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3212, line: 42, baseType: !32, size: 32, elements: !3219)
!3219 = !{!3220, !3221, !3222, !3223, !3224, !3225}
!3220 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3221 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3222 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3223 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3224 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3225 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3226 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3227, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3227 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!3228 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3229, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3230, splitDebugInlining: false, nameTableKind: None)
!3229 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!3230 = !{!104, !105, !3231, !3246}
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 32)
!3232 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !3233)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !3234)
!3234 = !{!3235, !3241}
!3235 = !DIDerivedType(tag: DW_TAG_member, scope: !3233, file: !137, line: 38, baseType: !3236, size: 32)
!3236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3233, file: !137, line: 38, size: 32, elements: !3237)
!3237 = !{!3238, !3240}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3236, file: !137, line: 39, baseType: !3239, size: 32)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 32)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3236, file: !137, line: 40, baseType: !3239, size: 32)
!3241 = !DIDerivedType(tag: DW_TAG_member, scope: !3233, file: !137, line: 42, baseType: !3242, size: 32, offset: 32)
!3242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3233, file: !137, line: 42, size: 32, elements: !3243)
!3243 = !{!3244, !3245}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3242, file: !137, line: 43, baseType: !3239, size: 32)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3242, file: !137, line: 44, baseType: !3239, size: 32)
!3246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3247, size: 32)
!3247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !3248)
!3248 = !{!3249, !3293, !3305, !3306, !3307, !3308, !3314, !3329}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3247, file: !127, line: 247, baseType: !3250, size: 384)
!3250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !3251)
!3251 = !{!3252, !3262, !3269, !3270, !3271, !3280, !3281, !3282}
!3252 = !DIDerivedType(tag: DW_TAG_member, scope: !3250, file: !127, line: 60, baseType: !3253, size: 64)
!3253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3250, file: !127, line: 60, size: 64, elements: !3254)
!3254 = !{!3255, !3256}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3253, file: !127, line: 61, baseType: !3232, size: 64)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3253, file: !127, line: 62, baseType: !3257, size: 64)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !3258)
!3258 = !{!3259}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3257, file: !153, line: 50, baseType: !3260, size: 64)
!3260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3261, size: 64, elements: !158)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 32)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3250, file: !127, line: 68, baseType: !3263, size: 32, offset: 64)
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 32)
!3264 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !3265)
!3265 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !3266)
!3266 = !{!3267}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3265, file: !163, line: 232, baseType: !3268, size: 64)
!3268 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !3233)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3250, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3250, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!3271 = !DIDerivedType(tag: DW_TAG_member, scope: !3250, file: !127, line: 90, baseType: !3272, size: 16, offset: 112)
!3272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3250, file: !127, line: 90, size: 16, elements: !3273)
!3273 = !{!3274, !3279}
!3274 = !DIDerivedType(tag: DW_TAG_member, scope: !3272, file: !127, line: 91, baseType: !3275, size: 16)
!3275 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3272, file: !127, line: 91, size: 16, elements: !3276)
!3276 = !{!3277, !3278}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3275, file: !127, line: 96, baseType: !179, size: 8)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3275, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3272, file: !127, line: 100, baseType: !183, size: 16)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3250, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3250, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3250, file: !127, line: 131, baseType: !3283, size: 192, offset: 192)
!3283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !3284)
!3284 = !{!3285, !3286, !3292}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3283, file: !163, line: 245, baseType: !3232, size: 64)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3283, file: !163, line: 246, baseType: !3287, size: 32, offset: 64)
!3287 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !3288)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 32)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{null, !3291}
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 32)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3283, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3247, file: !127, line: 250, baseType: !3294, size: 288, offset: 384)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !3295)
!3295 = !{!3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3294, file: !200, line: 26, baseType: !113, size: 32)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3294, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3294, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3294, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3294, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3294, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3294, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3294, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3294, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3247, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3247, file: !127, line: 256, baseType: !3264, size: 64, offset: 704)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3247, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3247, file: !127, line: 300, baseType: !3309, size: 96, offset: 800)
!3309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !3310)
!3310 = !{!3311, !3312, !3313}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3309, file: !127, line: 153, baseType: !22, size: 32)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3309, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3309, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3247, file: !127, line: 325, baseType: !3315, size: 32, offset: 896)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 32)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !3317)
!3317 = !{!3318, !3324, !3325}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3316, file: !122, line: 5074, baseType: !3319, size: 96)
!3319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !3320)
!3320 = !{!3321, !3322, !3323}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3319, file: !226, line: 57, baseType: !229, size: 32)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3319, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3319, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3316, file: !122, line: 5075, baseType: !3264, size: 64, offset: 96)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3316, file: !122, line: 5076, baseType: !3326, size: 32, offset: 160)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !3327)
!3327 = !{!3328}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3326, file: !236, line: 52, baseType: !22, size: 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3247, file: !127, line: 343, baseType: !3330, size: 64, offset: 928)
!3330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !3331)
!3331 = !{!3332, !3333}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3330, file: !200, line: 63, baseType: !113, size: 32)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3330, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!3334 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3335, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3336, splitDebugInlining: false, nameTableKind: None)
!3335 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!3336 = !{!22, !104, !105}
!3337 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3338, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3338 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!3339 = !{!"Ubuntu clang version 14.0.6"}
!3340 = !{i32 7, !"Dwarf Version", i32 4}
!3341 = !{i32 2, !"Debug Info Version", i32 3}
!3342 = !{i32 1, !"wchar_size", i32 4}
!3343 = !{i32 1, !"min_enum_size", i32 4}
!3344 = !{i32 1, !"branch-target-enforcement", i32 0}
!3345 = !{i32 1, !"sign-return-address", i32 0}
!3346 = !{i32 1, !"sign-return-address-all", i32 0}
!3347 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3348 = !{i32 7, !"frame-pointer", i32 2}
!3349 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3350, file: !3350, line: 26, type: !266, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2647, retainedNodes: !397)
!3350 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3351 = !DILocation(line: 28, column: 1, scope: !3349)
!3352 = !{i64 2155375876, i64 2155375896, i64 2155375959}
!3353 = !DILocation(line: 29, column: 1, scope: !3349)
!3354 = !{i64 2155376291, i64 2155376311, i64 2155376374}
!3355 = !DILocation(line: 30, column: 1, scope: !3349)
!3356 = !{i64 2155376710, i64 2155376730, i64 2155376793}
!3357 = !DILocation(line: 31, column: 1, scope: !3349)
!3358 = !{i64 2155377129, i64 2155377149, i64 2155377212}
!3359 = !DILocation(line: 33, column: 1, scope: !3349)
!3360 = !{i64 2155377421, i64 2155377441, i64 2155377504}
!3361 = !DILocation(line: 35, column: 1, scope: !3349)
!3362 = !{i64 2155377746, i64 2155377766, i64 2155377829}
!3363 = !DILocation(line: 50, column: 1, scope: !3349)
!3364 = !{i64 2155378173, i64 2155378193, i64 2155378256}
!3365 = !DILocation(line: 54, column: 1, scope: !3349)
!3366 = !{i64 2155378612, i64 2155378632, i64 2155378695}
!3367 = !DILocation(line: 61, column: 1, scope: !3349)
!3368 = !{i64 2155378929, i64 2155378949, i64 2155379012}
!3369 = !DILocation(line: 63, column: 1, scope: !3349)
!3370 = !{i64 2155379309, i64 2155379329, i64 2155379392}
!3371 = !DILocation(line: 64, column: 1, scope: !3349)
!3372 = !{i64 2155379831, i64 2155379851, i64 2155379914}
!3373 = !DILocation(line: 65, column: 1, scope: !3349)
!3374 = !{i64 2155380329, i64 2155380349, i64 2155380412}
!3375 = !DILocation(line: 66, column: 1, scope: !3349)
!3376 = !{i64 2155380811, i64 2155380831, i64 2155380894}
!3377 = !DILocation(line: 67, column: 1, scope: !3349)
!3378 = !{i64 2155381318, i64 2155381338, i64 2155381401}
!3379 = !DILocation(line: 68, column: 1, scope: !3349)
!3380 = !{i64 2155381806, i64 2155381826, i64 2155381889}
!3381 = !DILocation(line: 70, column: 1, scope: !3349)
!3382 = !{i64 2155382274, i64 2155382294, i64 2155382357}
!3383 = !DILocation(line: 71, column: 1, scope: !3349)
!3384 = !{i64 2155382716, i64 2155382736, i64 2155382799}
!3385 = !DILocation(line: 72, column: 1, scope: !3349)
!3386 = !{i64 2155383174, i64 2155383194, i64 2155383257}
!3387 = !DILocation(line: 79, column: 1, scope: !3349)
!3388 = !{i64 2155383628, i64 2155383648, i64 2155383711}
!3389 = !DILocation(line: 80, column: 1, scope: !3349)
!3390 = !{i64 2155384139, i64 2155384159, i64 2155384222}
!3391 = !DILocation(line: 82, column: 1, scope: !3349)
!3392 = !{i64 2155384630, i64 2155384650, i64 2155384713}
!3393 = !DILocation(line: 97, column: 1, scope: !3349)
!3394 = !{i64 2155384967, i64 2155384987, i64 2155385050}
!3395 = !DILocation(line: 99, column: 1, scope: !3349)
!3396 = !{i64 2155385185, i64 2155385205, i64 2155385268}
!3397 = !DILocation(line: 102, column: 1, scope: !3349)
!3398 = !{i64 2155389503, i64 2155389523, i64 2155389586}
!3399 = !DILocation(line: 105, column: 1, scope: !3349)
!3400 = !{i64 2155389743, i64 2155389763, i64 2155389826}
!3401 = !DILocation(line: 115, column: 1, scope: !3349)
!3402 = !{i64 2155390082, i64 2155390102, i64 2155390165}
!3403 = !DILocation(line: 118, column: 1, scope: !3349)
!3404 = !{i64 2155390426, i64 2155390446, i64 2155390509}
!3405 = !DILocation(line: 32, column: 1, scope: !3406)
!3406 = !DILexicalBlockFile(scope: !3349, file: !3407, discriminator: 0)
!3407 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3408 = !{i64 2155390782, i64 2155390802, i64 2155390865}
!3409 = !DILocation(line: 33, column: 1, scope: !3406)
!3410 = !{i64 2155391294, i64 2155391314, i64 2155391377}
!3411 = !DILocation(line: 53, column: 1, scope: !3406)
!3412 = !{i64 2155391802, i64 2155391822, i64 2155391885}
!3413 = !DILocation(line: 54, column: 1, scope: !3406)
!3414 = !{i64 2155392220, i64 2155392240, i64 2155392303}
!3415 = !DILocation(line: 55, column: 1, scope: !3406)
!3416 = !{i64 2155392638, i64 2155392658, i64 2155392721}
!3417 = !DILocation(line: 56, column: 1, scope: !3406)
!3418 = !{i64 2155393056, i64 2155393076, i64 2155393139}
!3419 = !DILocation(line: 57, column: 1, scope: !3406)
!3420 = !{i64 2155393474, i64 2155393494, i64 2155393557}
!3421 = !DILocation(line: 58, column: 1, scope: !3406)
!3422 = !{i64 2155393892, i64 2155393912, i64 2155393975}
!3423 = !DILocation(line: 59, column: 1, scope: !3406)
!3424 = !{i64 2155394310, i64 2155394330, i64 2155394393}
!3425 = !DILocation(line: 60, column: 1, scope: !3406)
!3426 = !{i64 2155394734, i64 2155394754, i64 2155394817}
!3427 = !DILocation(line: 61, column: 1, scope: !3406)
!3428 = !{i64 2155395051, i64 2155395071, i64 2155395134}
!3429 = !DILocation(line: 70, column: 1, scope: !3406)
!3430 = !{i64 2155395280, i64 2155395300, i64 2155395363}
!3431 = !DILocation(line: 72, column: 1, scope: !3406)
!3432 = !{i64 2155395612, i64 2155395632, i64 2155395695}
!3433 = !DILocation(line: 73, column: 1, scope: !3406)
!3434 = !{i64 2155396062, i64 2155396082, i64 2155396145}
!3435 = !DILocation(line: 74, column: 1, scope: !3406)
!3436 = !{i64 2155396512, i64 2155396532, i64 2155396595}
!3437 = !DILocation(line: 75, column: 1, scope: !3406)
!3438 = !{i64 2155396962, i64 2155396982, i64 2155397045}
!3439 = !DILocation(line: 76, column: 1, scope: !3406)
!3440 = !{i64 2155397412, i64 2155397432, i64 2155397495}
!3441 = !DILocation(line: 77, column: 1, scope: !3406)
!3442 = !{i64 2155397862, i64 2155397882, i64 2155397945}
!3443 = !DILocation(line: 78, column: 1, scope: !3406)
!3444 = !{i64 2155398312, i64 2155398332, i64 2155398395}
!3445 = !DILocation(line: 79, column: 1, scope: !3406)
!3446 = !{i64 2155398762, i64 2155398782, i64 2155398845}
!3447 = !DILocation(line: 80, column: 1, scope: !3406)
!3448 = !{i64 2155403276, i64 2155403296, i64 2155403359}
!3449 = !DILocation(line: 84, column: 1, scope: !3406)
!3450 = !{i64 2155403608, i64 2155403628, i64 2155403691}
!3451 = !DILocation(line: 91, column: 1, scope: !3406)
!3452 = !{i64 2155404005, i64 2155404025, i64 2155404088}
!3453 = !DILocation(line: 93, column: 1, scope: !3406)
!3454 = !{i64 2155404372, i64 2155404392, i64 2155404455}
!3455 = !DILocation(line: 106, column: 1, scope: !3406)
!3456 = !{i64 2155404642, i64 2155404662, i64 2155404725}
!3457 = !DILocation(line: 11, column: 1, scope: !3458)
!3458 = !DILexicalBlockFile(scope: !3349, file: !3459, discriminator: 0)
!3459 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3460 = distinct !DISubprogram(name: "metairq_fn", scope: !120, file: !120, line: 48, type: !256, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3461)
!3461 = !{!3462, !3463, !3464, !3465, !3467}
!3462 = !DILocalVariable(name: "p1", arg: 1, scope: !3460, file: !120, line: 48, type: !104)
!3463 = !DILocalVariable(name: "p2", arg: 2, scope: !3460, file: !120, line: 48, type: !104)
!3464 = !DILocalVariable(name: "p3", arg: 3, scope: !3460, file: !120, line: 48, type: !104)
!3465 = !DILocalVariable(name: "m", scope: !3466, file: !120, line: 59, type: !303)
!3466 = distinct !DILexicalBlock(scope: !3460, file: !120, line: 54, column: 15)
!3467 = !DILocalVariable(name: "ret", scope: !3466, file: !120, line: 64, type: !105)
!3468 = !DILocation(line: 0, scope: !3460)
!3469 = !DILocation(line: 54, column: 2, scope: !3460)
!3470 = !DILocation(line: 59, column: 3, scope: !3466)
!3471 = !DILocation(line: 59, column: 14, scope: !3466)
!3472 = !DILocation(line: 61, column: 3, scope: !3466)
!3473 = !DILocation(line: 62, column: 23, scope: !3466)
!3474 = !DILocation(line: 62, column: 44, scope: !3466)
!3475 = !DILocation(line: 62, column: 40, scope: !3466)
!3476 = !DILocation(line: 62, column: 21, scope: !3466)
!3477 = !DILocation(line: 64, column: 35, scope: !3466)
!3478 = !DILocation(line: 64, column: 43, scope: !3466)
!3479 = !DILocation(line: 64, column: 13, scope: !3466)
!3480 = !DILocation(line: 0, scope: !3466)
!3481 = !DILocation(line: 66, column: 7, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3466, file: !120, line: 66, column: 7)
!3483 = !DILocation(line: 66, column: 7, scope: !3466)
!3484 = !DILocation(line: 67, column: 4, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3486, file: !120, line: 67, column: 4)
!3486 = distinct !DILexicalBlock(scope: !3487, file: !120, line: 67, column: 4)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !120, line: 67, column: 4)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !120, line: 67, column: 4)
!3489 = distinct !DILexicalBlock(scope: !3482, file: !120, line: 66, column: 12)
!3490 = !DILocation(line: 69, column: 3, scope: !3489)
!3491 = !DILocation(line: 70, column: 2, scope: !3460)
!3492 = distinct !{!3492, !3469, !3491}
!3493 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3494 = !DILocation(line: 1677, column: 9, scope: !3493)
!3495 = !DILocation(line: 1677, column: 2, scope: !3493)
!3496 = distinct !DISubprogram(name: "k_msgq_put", scope: !3497, file: !3497, line: 1129, type: !3498, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3505)
!3497 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!105, !3500, !13, !3501}
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!3501 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3502)
!3502 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3503)
!3503 = !{!3504}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3502, file: !108, line: 66, baseType: !107, size: 64)
!3505 = !{!3506, !3507, !3508}
!3506 = !DILocalVariable(name: "msgq", arg: 1, scope: !3496, file: !3497, line: 1129, type: !3500)
!3507 = !DILocalVariable(name: "data", arg: 2, scope: !3496, file: !3497, line: 1129, type: !13)
!3508 = !DILocalVariable(name: "timeout", arg: 3, scope: !3496, file: !3497, line: 1129, type: !3501)
!3509 = !DILocation(line: 0, scope: !3496)
!3510 = !DILocation(line: 1139, column: 2, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3496, file: !3497, line: 1139, column: 2)
!3512 = !{i64 2155075146}
!3513 = !DILocation(line: 1140, column: 9, scope: !3496)
!3514 = !DILocation(line: 1140, column: 2, scope: !3496)
!3515 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3516, file: !3516, line: 175, type: !3517, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3519)
!3516 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3517 = !DISubroutineType(types: !3518)
!3518 = !{!103, !105}
!3519 = !{!3520}
!3520 = !DILocalVariable(name: "level", arg: 1, scope: !3515, file: !3516, line: 175, type: !105)
!3521 = !DILocation(line: 0, scope: !3515)
!3522 = !DILocation(line: 177, column: 2, scope: !3515)
!3523 = !DILocation(line: 189, column: 1, scope: !3515)
!3524 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3525, file: !3525, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3525 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3526 = !DILocation(line: 26, column: 9, scope: !3524)
!3527 = !DILocation(line: 26, column: 2, scope: !3524)
!3528 = distinct !DISubprogram(name: "main", scope: !120, file: !120, line: 226, type: !266, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3529)
!3529 = !{!3530, !3532}
!3530 = !DILocalVariable(name: "i", scope: !3531, file: !120, line: 228, type: !106)
!3531 = distinct !DILexicalBlock(scope: !3528, file: !120, line: 228, column: 2)
!3532 = !DILocalVariable(name: "prio", scope: !3533, file: !120, line: 235, type: !105)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !120, line: 228, column: 41)
!3534 = distinct !DILexicalBlock(scope: !3531, file: !120, line: 228, column: 2)
!3535 = !DILocation(line: 0, scope: !3531)
!3536 = !DILocation(line: 228, column: 2, scope: !3531)
!3537 = !DILocation(line: 246, column: 2, scope: !3528)
!3538 = !DILocation(line: 247, column: 1, scope: !3528)
!3539 = !DILocation(line: 235, column: 31, scope: !3533)
!3540 = !DILocation(line: 0, scope: !3533)
!3541 = !DILocation(line: 237, column: 27, scope: !3533)
!3542 = !DILocation(line: 237, column: 41, scope: !3533)
!3543 = !DILocation(line: 237, column: 33, scope: !3533)
!3544 = !DILocation(line: 237, column: 3, scope: !3533)
!3545 = !DILocation(line: 240, column: 31, scope: !3533)
!3546 = !DILocation(line: 241, column: 5, scope: !3533)
!3547 = !DILocation(line: 242, column: 16, scope: !3533)
!3548 = !DILocation(line: 240, column: 3, scope: !3533)
!3549 = !DILocation(line: 228, column: 37, scope: !3534)
!3550 = !DILocation(line: 228, column: 21, scope: !3534)
!3551 = distinct !{!3551, !3536, !3552}
!3552 = !DILocation(line: 244, column: 2, scope: !3531)
!3553 = distinct !DISubprogram(name: "k_thread_create", scope: !3497, file: !3497, line: 24, type: !3554, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3556)
!3554 = !DISubroutineType(types: !3555)
!3555 = !{!274, !125, !245, !111, !254, !104, !104, !104, !105, !113, !3501}
!3556 = !{!3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566}
!3557 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3553, file: !3497, line: 24, type: !125)
!3558 = !DILocalVariable(name: "stack", arg: 2, scope: !3553, file: !3497, line: 24, type: !245)
!3559 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3553, file: !3497, line: 24, type: !111)
!3560 = !DILocalVariable(name: "entry", arg: 4, scope: !3553, file: !3497, line: 24, type: !254)
!3561 = !DILocalVariable(name: "p1", arg: 5, scope: !3553, file: !3497, line: 24, type: !104)
!3562 = !DILocalVariable(name: "p2", arg: 6, scope: !3553, file: !3497, line: 24, type: !104)
!3563 = !DILocalVariable(name: "p3", arg: 7, scope: !3553, file: !3497, line: 24, type: !104)
!3564 = !DILocalVariable(name: "prio", arg: 8, scope: !3553, file: !3497, line: 24, type: !105)
!3565 = !DILocalVariable(name: "options", arg: 9, scope: !3553, file: !3497, line: 24, type: !113)
!3566 = !DILocalVariable(name: "delay", arg: 10, scope: !3553, file: !3497, line: 24, type: !3501)
!3567 = !DILocation(line: 0, scope: !3553)
!3568 = !DILocation(line: 49, column: 2, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3553, file: !3497, line: 49, column: 2)
!3570 = !{i64 2155070758}
!3571 = !DILocation(line: 50, column: 9, scope: !3553)
!3572 = !DILocation(line: 50, column: 2, scope: !3553)
!3573 = distinct !DISubprogram(name: "thread_fn", scope: !120, file: !120, line: 177, type: !256, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3574)
!3574 = !{!3575, !3576, !3577, !3578, !3579, !3580, !3582, !3583, !3587}
!3575 = !DILocalVariable(name: "p1", arg: 1, scope: !3573, file: !120, line: 177, type: !104)
!3576 = !DILocalVariable(name: "p2", arg: 2, scope: !3573, file: !120, line: 177, type: !104)
!3577 = !DILocalVariable(name: "p3", arg: 3, scope: !3573, file: !120, line: 177, type: !104)
!3578 = !DILocalVariable(name: "id", scope: !3573, file: !120, line: 181, type: !105)
!3579 = !DILocalVariable(name: "m", scope: !3573, file: !120, line: 182, type: !303)
!3580 = !DILocalVariable(name: "ret", scope: !3581, file: !120, line: 188, type: !105)
!3581 = distinct !DILexicalBlock(scope: !3573, file: !120, line: 187, column: 15)
!3582 = !DILocalVariable(name: "start", scope: !3581, file: !120, line: 189, type: !113)
!3583 = !DILocalVariable(name: "i", scope: !3584, file: !120, line: 202, type: !3586)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !120, line: 202, column: 4)
!3585 = distinct !DILexicalBlock(scope: !3581, file: !120, line: 201, column: 49)
!3586 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !105)
!3587 = !DILocalVariable(name: "dur", scope: !3581, file: !120, line: 206, type: !113)
!3588 = !DILocation(line: 0, scope: !3573)
!3589 = !DILocation(line: 181, column: 11, scope: !3573)
!3590 = !DILocation(line: 182, column: 2, scope: !3573)
!3591 = !DILocation(line: 182, column: 13, scope: !3573)
!3592 = !DILocation(line: 184, column: 2, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !120, line: 184, column: 2)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !120, line: 184, column: 2)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !120, line: 184, column: 2)
!3596 = distinct !DILexicalBlock(scope: !3573, file: !120, line: 184, column: 2)
!3597 = !DILocation(line: 188, column: 13, scope: !3581)
!3598 = !DILocation(line: 0, scope: !3581)
!3599 = !DILocation(line: 189, column: 20, scope: !3581)
!3600 = !DILocation(line: 191, column: 3, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3602, file: !120, line: 191, column: 3)
!3602 = distinct !DILexicalBlock(scope: !3581, file: !120, line: 191, column: 3)
!3603 = !DILocation(line: 191, column: 3, scope: !3602)
!3604 = !DILocation(line: 201, column: 10, scope: !3581)
!3605 = !DILocation(line: 201, column: 27, scope: !3581)
!3606 = !DILocation(line: 201, column: 39, scope: !3581)
!3607 = !DILocation(line: 201, column: 35, scope: !3581)
!3608 = !DILocation(line: 201, column: 3, scope: !3581)
!3609 = !DILocation(line: 191, column: 3, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3601, file: !120, line: 191, column: 3)
!3611 = !DILocation(line: 202, column: 9, scope: !3584)
!3612 = !DILocation(line: 202, column: 22, scope: !3584)
!3613 = !DILocation(line: 202, column: 29, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3584, file: !120, line: 202, column: 4)
!3615 = !DILocation(line: 202, column: 31, scope: !3614)
!3616 = !DILocation(line: 202, column: 4, scope: !3584)
!3617 = !DILocation(line: 202, column: 4, scope: !3614)
!3618 = distinct !{!3618, !3608, !3619}
!3619 = !DILocation(line: 204, column: 3, scope: !3581)
!3620 = !DILocation(line: 202, column: 39, scope: !3614)
!3621 = distinct !{!3621, !3616, !3622}
!3622 = !DILocation(line: 203, column: 4, scope: !3584)
!3623 = !DILocation(line: 206, column: 18, scope: !3581)
!3624 = !DILocation(line: 206, column: 35, scope: !3581)
!3625 = !DILocation(line: 216, column: 3, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !120, line: 216, column: 3)
!3627 = distinct !DILexicalBlock(scope: !3628, file: !120, line: 216, column: 3)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !120, line: 216, column: 3)
!3629 = distinct !DILexicalBlock(scope: !3581, file: !120, line: 216, column: 3)
!3630 = !DILocation(line: 222, column: 34, scope: !3581)
!3631 = !DILocation(line: 222, column: 30, scope: !3581)
!3632 = !DILocation(line: 222, column: 3, scope: !3581)
!3633 = distinct !{!3633, !3634, !3635}
!3634 = !DILocation(line: 187, column: 2, scope: !3573)
!3635 = !DILocation(line: 223, column: 2, scope: !3573)
!3636 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !3637, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3637 = !DISubroutineType(types: !3638)
!3638 = !{!274}
!3639 = !DILocation(line: 535, column: 9, scope: !3636)
!3640 = !DILocation(line: 535, column: 2, scope: !3636)
!3641 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !3497, file: !3497, line: 258, type: !3642, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3644)
!3642 = !DISubroutineType(types: !3643)
!3643 = !{!105, !274}
!3644 = !{!3645}
!3645 = !DILocalVariable(name: "thread", arg: 1, scope: !3641, file: !3497, line: 258, type: !274)
!3646 = !DILocation(line: 0, scope: !3641)
!3647 = !DILocation(line: 266, column: 2, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3641, file: !3497, line: 266, column: 2)
!3649 = !{i64 2155071642}
!3650 = !DILocation(line: 267, column: 9, scope: !3641)
!3651 = !DILocation(line: 267, column: 2, scope: !3641)
!3652 = distinct !DISubprogram(name: "k_msgq_get", scope: !3497, file: !3497, line: 1147, type: !3653, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3655)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!105, !3500, !104, !3501}
!3655 = !{!3656, !3657, !3658}
!3656 = !DILocalVariable(name: "msgq", arg: 1, scope: !3652, file: !3497, line: 1147, type: !3500)
!3657 = !DILocalVariable(name: "data", arg: 2, scope: !3652, file: !3497, line: 1147, type: !104)
!3658 = !DILocalVariable(name: "timeout", arg: 3, scope: !3652, file: !3497, line: 1147, type: !3501)
!3659 = !DILocation(line: 0, scope: !3652)
!3660 = !DILocation(line: 1157, column: 2, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3652, file: !3497, line: 1157, column: 2)
!3662 = !{i64 2155075214}
!3663 = !DILocation(line: 1158, column: 9, scope: !3652)
!3664 = !DILocation(line: 1158, column: 2, scope: !3652)
!3665 = distinct !DISubprogram(name: "record_latencies", scope: !120, file: !120, line: 111, type: !3666, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3669)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{null, !3668, !113}
!3668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!3669 = !{!3670, !3671, !3672, !3673, !3674, !3677, !3678, !3679, !3680, !3681}
!3670 = !DILocalVariable(name: "m", arg: 1, scope: !3665, file: !120, line: 111, type: !3668)
!3671 = !DILocalVariable(name: "latency", arg: 2, scope: !3665, file: !120, line: 111, type: !113)
!3672 = !DILocalVariable(name: "t", scope: !3665, file: !120, line: 129, type: !105)
!3673 = !DILocalVariable(name: "lidx", scope: !3665, file: !120, line: 130, type: !105)
!3674 = !DILocalVariable(name: "hi", scope: !3675, file: !120, line: 145, type: !113)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !120, line: 144, column: 32)
!3676 = distinct !DILexicalBlock(scope: !3665, file: !120, line: 144, column: 6)
!3677 = !DILocalVariable(name: "lo", scope: !3675, file: !120, line: 145, type: !113)
!3678 = !DILocalVariable(name: "mean", scope: !3675, file: !120, line: 145, type: !113)
!3679 = !DILocalVariable(name: "stdev", scope: !3675, file: !120, line: 145, type: !113)
!3680 = !DILocalVariable(name: "ret", scope: !3675, file: !120, line: 145, type: !113)
!3681 = !DILocalVariable(name: "i", scope: !3682, file: !120, line: 159, type: !105)
!3682 = distinct !DILexicalBlock(scope: !3675, file: !120, line: 159, column: 3)
!3683 = !DILocation(line: 0, scope: !3665)
!3684 = !DILocation(line: 125, column: 9, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3665, file: !120, line: 125, column: 6)
!3686 = !DILocation(line: 125, column: 13, scope: !3685)
!3687 = !DILocation(line: 125, column: 6, scope: !3665)
!3688 = !DILocation(line: 129, column: 13, scope: !3665)
!3689 = !DILocation(line: 130, column: 30, scope: !3665)
!3690 = !DILocation(line: 130, column: 34, scope: !3665)
!3691 = !DILocation(line: 132, column: 11, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3665, file: !120, line: 132, column: 6)
!3693 = !DILocation(line: 132, column: 6, scope: !3665)
!3694 = !DILocation(line: 133, column: 3, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3692, file: !120, line: 132, column: 53)
!3696 = !DILocation(line: 133, column: 36, scope: !3695)
!3697 = !DILocation(line: 134, column: 2, scope: !3695)
!3698 = !DILocation(line: 136, column: 57, scope: !3665)
!3699 = !DILocation(line: 136, column: 23, scope: !3665)
!3700 = !DILocation(line: 136, column: 2, scope: !3665)
!3701 = !DILocation(line: 136, column: 52, scope: !3665)
!3702 = !DILocation(line: 144, column: 9, scope: !3676)
!3703 = !DILocation(line: 144, column: 13, scope: !3676)
!3704 = !DILocation(line: 144, column: 6, scope: !3665)
!3705 = !DILocation(line: 145, column: 3, scope: !3675)
!3706 = !DILocation(line: 147, column: 9, scope: !3675)
!3707 = !DILocation(line: 0, scope: !3675)
!3708 = !DILocation(line: 148, column: 3, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !120, line: 148, column: 3)
!3710 = distinct !DILexicalBlock(scope: !3675, file: !120, line: 148, column: 3)
!3711 = !DILocation(line: 148, column: 3, scope: !3710)
!3712 = !DILocation(line: 148, column: 3, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3709, file: !120, line: 148, column: 3)
!3714 = !DILocation(line: 149, column: 3, scope: !3675)
!3715 = !DILocation(line: 151, column: 42, scope: !3675)
!3716 = !DILocation(line: 151, column: 3, scope: !3675)
!3717 = !DILocation(line: 154, column: 3, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3719, file: !120, line: 154, column: 3)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !120, line: 154, column: 3)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !120, line: 154, column: 3)
!3721 = distinct !DILexicalBlock(scope: !3675, file: !120, line: 154, column: 3)
!3722 = !DILocation(line: 155, column: 3, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3724, file: !120, line: 155, column: 3)
!3724 = distinct !DILexicalBlock(scope: !3725, file: !120, line: 155, column: 3)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !120, line: 155, column: 3)
!3726 = distinct !DILexicalBlock(scope: !3675, file: !120, line: 155, column: 3)
!3727 = !DILocation(line: 156, column: 3, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !120, line: 156, column: 3)
!3729 = distinct !DILexicalBlock(scope: !3730, file: !120, line: 156, column: 3)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !120, line: 156, column: 3)
!3731 = distinct !DILexicalBlock(scope: !3675, file: !120, line: 156, column: 3)
!3732 = !DILocation(line: 0, scope: !3682)
!3733 = !DILocation(line: 159, column: 3, scope: !3682)
!3734 = !DILocation(line: 173, column: 3, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !120, line: 173, column: 3)
!3736 = distinct !DILexicalBlock(scope: !3737, file: !120, line: 173, column: 3)
!3737 = distinct !DILexicalBlock(scope: !3738, file: !120, line: 173, column: 3)
!3738 = distinct !DILexicalBlock(scope: !3675, file: !120, line: 173, column: 3)
!3739 = !DILocation(line: 174, column: 2, scope: !3676)
!3740 = !DILocation(line: 174, column: 2, scope: !3675)
!3741 = !DILocation(line: 160, column: 25, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3743, file: !120, line: 160, column: 8)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !120, line: 159, column: 41)
!3744 = distinct !DILexicalBlock(scope: !3682, file: !120, line: 159, column: 3)
!3745 = !DILocation(line: 160, column: 30, scope: !3742)
!3746 = !DILocation(line: 160, column: 8, scope: !3743)
!3747 = !DILocation(line: 161, column: 5, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3749, file: !120, line: 161, column: 5)
!3749 = distinct !DILexicalBlock(scope: !3750, file: !120, line: 161, column: 5)
!3750 = distinct !DILexicalBlock(scope: !3751, file: !120, line: 161, column: 5)
!3751 = distinct !DILexicalBlock(scope: !3752, file: !120, line: 161, column: 5)
!3752 = distinct !DILexicalBlock(scope: !3742, file: !120, line: 160, column: 36)
!3753 = !DILocation(line: 162, column: 5, scope: !3752)
!3754 = !DILocation(line: 165, column: 15, scope: !3743)
!3755 = !DILocation(line: 165, column: 4, scope: !3743)
!3756 = !DILocation(line: 169, column: 4, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !120, line: 169, column: 4)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !120, line: 169, column: 4)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !120, line: 169, column: 4)
!3760 = distinct !DILexicalBlock(scope: !3743, file: !120, line: 169, column: 4)
!3761 = !DILocation(line: 171, column: 3, scope: !3743)
!3762 = !DILocation(line: 159, column: 37, scope: !3744)
!3763 = !DILocation(line: 159, column: 21, scope: !3744)
!3764 = distinct !{!3764, !3733, !3765}
!3765 = !DILocation(line: 171, column: 3, scope: !3682)
!3766 = !DILocation(line: 175, column: 1, scope: !3665)
!3767 = distinct !DISubprogram(name: "atomic_inc", scope: !3768, file: !3768, line: 123, type: !3769, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3773)
!3768 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3769 = !DISubroutineType(types: !3770)
!3770 = !{!3771, !3772}
!3771 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !332, line: 23, baseType: !331)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!3773 = !{!3774}
!3774 = !DILocalVariable(name: "target", arg: 1, scope: !3767, file: !3768, line: 123, type: !3772)
!3775 = !DILocation(line: 0, scope: !3767)
!3776 = !DILocation(line: 125, column: 9, scope: !3767)
!3777 = !DILocation(line: 125, column: 2, scope: !3767)
!3778 = distinct !DISubprogram(name: "k_sem_take", scope: !3497, file: !3497, line: 1044, type: !3779, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3782)
!3779 = !DISubroutineType(types: !3780)
!3780 = !{!105, !3781, !3501}
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!3782 = !{!3783, !3784}
!3783 = !DILocalVariable(name: "sem", arg: 1, scope: !3778, file: !3497, line: 1044, type: !3781)
!3784 = !DILocalVariable(name: "timeout", arg: 2, scope: !3778, file: !3497, line: 1044, type: !3501)
!3785 = !DILocation(line: 0, scope: !3778)
!3786 = !DILocation(line: 1053, column: 2, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3778, file: !3497, line: 1053, column: 2)
!3788 = !{i64 2155074806}
!3789 = !DILocation(line: 1054, column: 9, scope: !3778)
!3790 = !DILocation(line: 1054, column: 2, scope: !3778)
!3791 = distinct !DISubprogram(name: "k_msleep", scope: !122, file: !122, line: 439, type: !3792, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3794)
!3792 = !DISubroutineType(types: !3793)
!3793 = !{!116, !116}
!3794 = !{!3795}
!3795 = !DILocalVariable(name: "ms", arg: 1, scope: !3791, file: !122, line: 439, type: !116)
!3796 = !DILocation(line: 0, scope: !3791)
!3797 = !DILocation(line: 441, column: 9, scope: !3791)
!3798 = !DILocation(line: 441, column: 2, scope: !3791)
!3799 = distinct !DISubprogram(name: "calc_stats", scope: !120, file: !120, line: 87, type: !3800, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3804)
!3800 = !DISubroutineType(types: !3801)
!3801 = !{null, !3802, !113, !1043, !1043, !1043, !1043}
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 32)
!3803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!3804 = !{!3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3815, !3817}
!3805 = !DILocalVariable(name: "array", arg: 1, scope: !3799, file: !120, line: 87, type: !3802)
!3806 = !DILocalVariable(name: "n", arg: 2, scope: !3799, file: !120, line: 87, type: !113)
!3807 = !DILocalVariable(name: "lo", arg: 3, scope: !3799, file: !120, line: 88, type: !1043)
!3808 = !DILocalVariable(name: "hi", arg: 4, scope: !3799, file: !120, line: 88, type: !1043)
!3809 = !DILocalVariable(name: "mean", arg: 5, scope: !3799, file: !120, line: 88, type: !1043)
!3810 = !DILocalVariable(name: "stdev", arg: 6, scope: !3799, file: !120, line: 88, type: !1043)
!3811 = !DILocalVariable(name: "tot", scope: !3799, file: !120, line: 90, type: !114)
!3812 = !DILocalVariable(name: "totsq", scope: !3799, file: !120, line: 90, type: !114)
!3813 = !DILocalVariable(name: "i", scope: !3814, file: !120, line: 94, type: !105)
!3814 = distinct !DILexicalBlock(scope: !3799, file: !120, line: 94, column: 2)
!3815 = !DILocalVariable(name: "i", scope: !3816, file: !120, line: 102, type: !105)
!3816 = distinct !DILexicalBlock(scope: !3799, file: !120, line: 102, column: 2)
!3817 = !DILocalVariable(name: "d", scope: !3818, file: !120, line: 103, type: !109)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !120, line: 102, column: 30)
!3819 = distinct !DILexicalBlock(scope: !3816, file: !120, line: 102, column: 2)
!3820 = !DILocation(line: 0, scope: !3799)
!3821 = !DILocation(line: 92, column: 6, scope: !3799)
!3822 = !DILocation(line: 93, column: 6, scope: !3799)
!3823 = !DILocation(line: 0, scope: !3814)
!3824 = !DILocation(line: 94, column: 20, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3814, file: !120, line: 94, column: 2)
!3826 = !DILocation(line: 94, column: 2, scope: !3814)
!3827 = !DILocation(line: 100, column: 31, scope: !3799)
!3828 = !DILocation(line: 100, column: 37, scope: !3799)
!3829 = !DILocation(line: 100, column: 10, scope: !3799)
!3830 = !DILocation(line: 100, column: 8, scope: !3799)
!3831 = !DILocation(line: 0, scope: !3816)
!3832 = !DILocation(line: 102, column: 2, scope: !3816)
!3833 = !DILocation(line: 100, column: 28, scope: !3799)
!3834 = !DILocation(line: 100, column: 26, scope: !3799)
!3835 = !DILocation(line: 100, column: 39, scope: !3799)
!3836 = !DILocation(line: 95, column: 9, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3825, file: !120, line: 94, column: 30)
!3838 = !DILocation(line: 95, column: 7, scope: !3837)
!3839 = !DILocation(line: 96, column: 9, scope: !3837)
!3840 = !DILocation(line: 96, column: 7, scope: !3837)
!3841 = !DILocation(line: 97, column: 10, scope: !3837)
!3842 = !DILocation(line: 97, column: 7, scope: !3837)
!3843 = !DILocation(line: 94, column: 26, scope: !3825)
!3844 = distinct !{!3844, !3826, !3845}
!3845 = !DILocation(line: 98, column: 2, scope: !3814)
!3846 = !DILocation(line: 108, column: 24, scope: !3799)
!3847 = !DILocation(line: 108, column: 35, scope: !3799)
!3848 = !DILocation(line: 108, column: 11, scope: !3799)
!3849 = !DILocation(line: 108, column: 9, scope: !3799)
!3850 = !DILocation(line: 109, column: 1, scope: !3799)
!3851 = !DILocation(line: 103, column: 26, scope: !3818)
!3852 = !DILocation(line: 103, column: 35, scope: !3818)
!3853 = !DILocation(line: 103, column: 15, scope: !3818)
!3854 = !DILocation(line: 0, scope: !3818)
!3855 = !DILocation(line: 105, column: 14, scope: !3818)
!3856 = !DILocation(line: 105, column: 9, scope: !3818)
!3857 = !DILocation(line: 102, column: 26, scope: !3819)
!3858 = !DILocation(line: 102, column: 20, scope: !3819)
!3859 = distinct !{!3859, !3832, !3860}
!3860 = !DILocation(line: 106, column: 2, scope: !3816)
!3861 = distinct !DISubprogram(name: "isqrt", scope: !120, file: !120, line: 76, type: !3862, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3864)
!3862 = !DISubroutineType(types: !3863)
!3863 = !{!113, !114}
!3864 = !{!3865, !3866, !3869}
!3865 = !DILocalVariable(name: "n", arg: 1, scope: !3861, file: !120, line: 76, type: !114)
!3866 = !DILocalVariable(name: "lo", scope: !3867, file: !120, line: 79, type: !114)
!3867 = distinct !DILexicalBlock(scope: !3868, file: !120, line: 78, column: 13)
!3868 = distinct !DILexicalBlock(scope: !3861, file: !120, line: 78, column: 6)
!3869 = !DILocalVariable(name: "hi", scope: !3867, file: !120, line: 80, type: !114)
!3870 = !DILocation(line: 0, scope: !3861)
!3871 = !DILocation(line: 78, column: 8, scope: !3868)
!3872 = !DILocation(line: 78, column: 6, scope: !3861)
!3873 = !DILocation(line: 85, column: 1, scope: !3861)
!3874 = !DILocation(line: 79, column: 25, scope: !3867)
!3875 = !DILocation(line: 79, column: 17, scope: !3867)
!3876 = !DILocation(line: 79, column: 31, scope: !3867)
!3877 = !DILocation(line: 0, scope: !3867)
!3878 = !DILocation(line: 80, column: 20, scope: !3867)
!3879 = !DILocation(line: 82, column: 26, scope: !3867)
!3880 = !DILocation(line: 82, column: 32, scope: !3867)
!3881 = !DILocation(line: 82, column: 21, scope: !3867)
!3882 = distinct !DISubprogram(name: "k_sleep", scope: !3497, file: !3497, line: 91, type: !3883, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3885)
!3883 = !DISubroutineType(types: !3884)
!3884 = !{!116, !3501}
!3885 = !{!3886}
!3886 = !DILocalVariable(name: "timeout", arg: 1, scope: !3882, file: !3497, line: 91, type: !3501)
!3887 = !DILocation(line: 0, scope: !3882)
!3888 = !DILocation(line: 99, column: 2, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3882, file: !3497, line: 99, column: 2)
!3890 = !{i64 2155070962}
!3891 = !DILocation(line: 100, column: 9, scope: !3882)
!3892 = !DILocation(line: 100, column: 2, scope: !3882)
!3893 = distinct !DISubprogram(name: "atomic_add", scope: !3768, file: !3768, line: 86, type: !3894, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3896)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!3771, !3772, !3771}
!3896 = !{!3897, !3898}
!3897 = !DILocalVariable(name: "target", arg: 1, scope: !3893, file: !3768, line: 86, type: !3772)
!3898 = !DILocalVariable(name: "value", arg: 2, scope: !3893, file: !3768, line: 86, type: !3771)
!3899 = !DILocation(line: 0, scope: !3893)
!3900 = !DILocation(line: 88, column: 9, scope: !3893)
!3901 = !DILocation(line: 88, column: 2, scope: !3893)
!3902 = distinct !DISubprogram(name: "z_current_get", scope: !3497, file: !3497, line: 173, type: !3637, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3903 = !DILocation(line: 180, column: 2, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3902, file: !3497, line: 180, column: 2)
!3905 = !{i64 2155071302}
!3906 = !DILocation(line: 181, column: 9, scope: !3902)
!3907 = !DILocation(line: 181, column: 2, scope: !3902)
!3908 = distinct !DISubprogram(name: "message_dev_init", scope: !360, file: !360, line: 83, type: !266, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3909)
!3909 = !{!3910, !3911, !3912}
!3910 = !DILocalVariable(name: "cyc_per_tick", scope: !3908, file: !360, line: 90, type: !114)
!3911 = !DILocalVariable(name: "avg_ticks_per_event", scope: !3908, file: !360, line: 91, type: !114)
!3912 = !DILocalVariable(name: "avg_cyc_per_event", scope: !3908, file: !360, line: 92, type: !114)
!3913 = !DILocation(line: 0, scope: !3908)
!3914 = !DILocation(line: 94, column: 15, scope: !3908)
!3915 = !DILocation(line: 96, column: 2, scope: !3908)
!3916 = !DILocation(line: 97, column: 1, scope: !3908)
!3917 = distinct !DISubprogram(name: "dev_timer_expired", scope: !360, file: !360, line: 54, type: !381, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3918)
!3918 = !{!3919, !3920, !3921, !3929}
!3919 = !DILocalVariable(name: "t", arg: 1, scope: !3917, file: !360, line: 54, type: !383)
!3920 = !DILocalVariable(name: "timestamp", scope: !3917, file: !360, line: 57, type: !113)
!3921 = !DILocalVariable(name: "m", scope: !3917, file: !360, line: 58, type: !3922)
!3922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !3923)
!3923 = !{!3924, !3925, !3926, !3927, !3928}
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3922, file: !304, line: 46, baseType: !113, size: 32)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !3922, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !3922, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !3922, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !3922, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!3929 = !DILocalVariable(name: "ret", scope: !3917, file: !360, line: 65, type: !105)
!3930 = !DILocation(line: 0, scope: !3917)
!3931 = !DILocation(line: 56, column: 2, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !360, line: 56, column: 2)
!3933 = distinct !DILexicalBlock(scope: !3917, file: !360, line: 56, column: 2)
!3934 = !DILocation(line: 56, column: 2, scope: !3933)
!3935 = !DILocation(line: 56, column: 2, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3932, file: !360, line: 56, column: 2)
!3937 = !DILocation(line: 57, column: 23, scope: !3917)
!3938 = !DILocation(line: 58, column: 2, scope: !3917)
!3939 = !DILocation(line: 58, column: 13, scope: !3917)
!3940 = !DILocation(line: 60, column: 17, scope: !3917)
!3941 = !DILocation(line: 60, column: 4, scope: !3917)
!3942 = !DILocation(line: 60, column: 8, scope: !3917)
!3943 = !DILocation(line: 61, column: 4, scope: !3917)
!3944 = !DILocation(line: 61, column: 14, scope: !3917)
!3945 = !DILocation(line: 62, column: 13, scope: !3917)
!3946 = !DILocation(line: 62, column: 22, scope: !3917)
!3947 = !DILocation(line: 62, column: 4, scope: !3917)
!3948 = !DILocation(line: 62, column: 11, scope: !3917)
!3949 = !DILocation(line: 63, column: 15, scope: !3917)
!3950 = !DILocation(line: 63, column: 26, scope: !3917)
!3951 = !DILocation(line: 63, column: 24, scope: !3917)
!3952 = !DILocation(line: 63, column: 4, scope: !3917)
!3953 = !DILocation(line: 63, column: 13, scope: !3917)
!3954 = !DILocation(line: 65, column: 12, scope: !3917)
!3955 = !DILocation(line: 67, column: 10, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3917, file: !360, line: 67, column: 6)
!3957 = !DILocation(line: 67, column: 6, scope: !3917)
!3958 = !DILocation(line: 68, column: 3, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3956, file: !360, line: 67, column: 16)
!3960 = !DILocation(line: 69, column: 2, scope: !3959)
!3961 = !DILocation(line: 71, column: 8, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3917, file: !360, line: 71, column: 6)
!3963 = !DILocation(line: 71, column: 12, scope: !3962)
!3964 = !DILocation(line: 71, column: 6, scope: !3917)
!3965 = !DILocation(line: 72, column: 3, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3962, file: !360, line: 71, column: 26)
!3967 = !DILocation(line: 73, column: 2, scope: !3966)
!3968 = !DILocation(line: 74, column: 1, scope: !3917)
!3969 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!3970 = !DILocation(line: 1677, column: 9, scope: !3969)
!3971 = !DILocation(line: 1677, column: 2, scope: !3969)
!3972 = !DILocation(line: 40, column: 7, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !394, file: !360, line: 40, column: 6)
!3974 = !DILocation(line: 40, column: 6, scope: !394)
!3975 = !DILocation(line: 41, column: 22, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3973, file: !360, line: 40, column: 14)
!3977 = !DILocation(line: 41, column: 12, scope: !3976)
!3978 = !DILocation(line: 41, column: 40, scope: !3976)
!3979 = !DILocation(line: 42, column: 2, scope: !3976)
!3980 = !DILocation(line: 45, column: 10, scope: !394)
!3981 = !DILocation(line: 45, column: 16, scope: !394)
!3982 = !DILocation(line: 45, column: 41, scope: !394)
!3983 = !DILocation(line: 45, column: 8, scope: !394)
!3984 = !DILocation(line: 46, column: 26, scope: !394)
!3985 = !DILocation(line: 46, column: 9, scope: !394)
!3986 = !DILocation(line: 46, column: 2, scope: !394)
!3987 = distinct !DISubprogram(name: "k_msgq_put", scope: !3497, file: !3497, line: 1129, type: !3988, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3995)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{!105, !3990, !13, !3991}
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!3991 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3992)
!3992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3993)
!3993 = !{!3994}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3992, file: !108, line: 66, baseType: !107, size: 64)
!3995 = !{!3996, !3997, !3998}
!3996 = !DILocalVariable(name: "msgq", arg: 1, scope: !3987, file: !3497, line: 1129, type: !3990)
!3997 = !DILocalVariable(name: "data", arg: 2, scope: !3987, file: !3497, line: 1129, type: !13)
!3998 = !DILocalVariable(name: "timeout", arg: 3, scope: !3987, file: !3497, line: 1129, type: !3991)
!3999 = !DILocation(line: 0, scope: !3987)
!4000 = !DILocation(line: 1139, column: 2, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3987, file: !3497, line: 1139, column: 2)
!4002 = !{i64 2155073409}
!4003 = !DILocation(line: 1140, column: 9, scope: !3987)
!4004 = !DILocation(line: 1140, column: 2, scope: !3987)
!4005 = distinct !DISubprogram(name: "timeout_reset", scope: !360, file: !360, line: 76, type: !266, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !4006)
!4006 = !{!4007}
!4007 = !DILocalVariable(name: "ticks", scope: !4005, file: !360, line: 78, type: !113)
!4008 = !DILocation(line: 78, column: 19, scope: !4005)
!4009 = !DILocation(line: 78, column: 28, scope: !4005)
!4010 = !DILocation(line: 0, scope: !4005)
!4011 = !DILocation(line: 80, column: 45, scope: !4005)
!4012 = !DILocation(line: 80, column: 2, scope: !4005)
!4013 = !DILocation(line: 81, column: 1, scope: !4005)
!4014 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3525, file: !3525, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!4015 = !DILocation(line: 26, column: 9, scope: !4014)
!4016 = !DILocation(line: 26, column: 2, scope: !4014)
!4017 = distinct !DISubprogram(name: "message_dev_fetch", scope: !360, file: !360, line: 99, type: !4018, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !4021)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{null, !4020}
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3922, size: 32)
!4021 = !{!4022, !4023}
!4022 = !DILocalVariable(name: "m", arg: 1, scope: !4017, file: !360, line: 99, type: !4020)
!4023 = !DILocalVariable(name: "ret", scope: !4017, file: !360, line: 101, type: !105)
!4024 = !DILocation(line: 0, scope: !4017)
!4025 = !DILocation(line: 101, column: 33, scope: !4017)
!4026 = !DILocation(line: 101, column: 12, scope: !4017)
!4027 = !DILocation(line: 103, column: 2, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !360, line: 103, column: 2)
!4029 = distinct !DILexicalBlock(scope: !4017, file: !360, line: 103, column: 2)
!4030 = !DILocation(line: 103, column: 2, scope: !4029)
!4031 = !DILocation(line: 103, column: 2, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4028, file: !360, line: 103, column: 2)
!4033 = !DILocation(line: 104, column: 1, scope: !4017)
!4034 = distinct !DISubprogram(name: "k_msgq_get", scope: !3497, file: !3497, line: 1147, type: !4035, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !4037)
!4035 = !DISubroutineType(types: !4036)
!4036 = !{!105, !3990, !104, !3991}
!4037 = !{!4038, !4039, !4040}
!4038 = !DILocalVariable(name: "msgq", arg: 1, scope: !4034, file: !3497, line: 1147, type: !3990)
!4039 = !DILocalVariable(name: "data", arg: 2, scope: !4034, file: !3497, line: 1147, type: !104)
!4040 = !DILocalVariable(name: "timeout", arg: 3, scope: !4034, file: !3497, line: 1147, type: !3991)
!4041 = !DILocation(line: 0, scope: !4034)
!4042 = !DILocation(line: 1157, column: 2, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4034, file: !3497, line: 1157, column: 2)
!4044 = !{i64 2155073477}
!4045 = !DILocation(line: 1158, column: 9, scope: !4034)
!4046 = !DILocation(line: 1158, column: 2, scope: !4034)
!4047 = distinct !DISubprogram(name: "cbvprintf_package", scope: !434, file: !434, line: 233, type: !4048, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4057)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{!105, !104, !111, !113, !269, !4050}
!4050 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4051, line: 99, baseType: !4052)
!4051 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4052 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4051, line: 40, baseType: !4053)
!4053 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !434, baseType: !4054)
!4054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4055)
!4055 = !{!4056}
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4054, file: !434, line: 18, baseType: !104, size: 32)
!4057 = !{!4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4093, !4102, !4105, !4106, !4109, !4112, !4115, !4118, !4124}
!4058 = !DILocalVariable(name: "packaged", arg: 1, scope: !4047, file: !434, line: 233, type: !104)
!4059 = !DILocalVariable(name: "len", arg: 2, scope: !4047, file: !434, line: 233, type: !111)
!4060 = !DILocalVariable(name: "flags", arg: 3, scope: !4047, file: !434, line: 233, type: !113)
!4061 = !DILocalVariable(name: "fmt", arg: 4, scope: !4047, file: !434, line: 234, type: !269)
!4062 = !DILocalVariable(name: "ap", arg: 5, scope: !4047, file: !434, line: 234, type: !4050)
!4063 = !DILocalVariable(name: "buf0", scope: !4047, file: !434, line: 247, type: !432)
!4064 = !DILocalVariable(name: "buf", scope: !4047, file: !434, line: 248, type: !432)
!4065 = !DILocalVariable(name: "size", scope: !4047, file: !434, line: 249, type: !32)
!4066 = !DILocalVariable(name: "align", scope: !4047, file: !434, line: 250, type: !32)
!4067 = !DILocalVariable(name: "str_ptr_pos", scope: !4047, file: !434, line: 251, type: !4068)
!4068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 128, elements: !311)
!4069 = !DILocalVariable(name: "str_ptr_arg", scope: !4047, file: !434, line: 252, type: !4068)
!4070 = !DILocalVariable(name: "s_idx", scope: !4047, file: !434, line: 253, type: !32)
!4071 = !DILocalVariable(name: "s_rw_cnt", scope: !4047, file: !434, line: 254, type: !32)
!4072 = !DILocalVariable(name: "s_ro_cnt", scope: !4047, file: !434, line: 255, type: !32)
!4073 = !DILocalVariable(name: "arg_idx", scope: !4047, file: !434, line: 256, type: !105)
!4074 = !DILocalVariable(name: "i", scope: !4047, file: !434, line: 257, type: !32)
!4075 = !DILocalVariable(name: "s", scope: !4047, file: !434, line: 258, type: !269)
!4076 = !DILocalVariable(name: "parsing", scope: !4047, file: !434, line: 259, type: !492)
!4077 = !DILocalVariable(name: "rws_pos_en", scope: !4047, file: !434, line: 263, type: !492)
!4078 = !DILocalVariable(name: "fros_cnt", scope: !4047, file: !434, line: 268, type: !105)
!4079 = !DILocalVariable(name: "is_str_arg", scope: !4047, file: !434, line: 269, type: !492)
!4080 = !DILocalVariable(name: "pkg_hdr", scope: !4047, file: !434, line: 270, type: !4081)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 32)
!4082 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4083, line: 78, size: 32, elements: !4084)
!4083 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4084 = !{!4085, !4092}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4082, file: !4083, line: 80, baseType: !4086, size: 32)
!4086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4083, line: 45, size: 32, elements: !4087)
!4087 = !{!4088, !4089, !4090, !4091}
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4086, file: !4083, line: 47, baseType: !169, size: 8)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4086, file: !4083, line: 50, baseType: !169, size: 8, offset: 8)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4086, file: !4083, line: 53, baseType: !169, size: 8, offset: 16)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4086, file: !4083, line: 56, baseType: !169, size: 8, offset: 24)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4082, file: !4083, line: 82, baseType: !104, size: 32)
!4093 = !DILocalVariable(name: "v", scope: !4094, file: !434, line: 567, type: !4098)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !434, line: 562, column: 14)
!4095 = distinct !DILexicalBlock(scope: !4096, file: !434, line: 481, column: 18)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !434, line: 466, column: 3)
!4097 = distinct !DILexicalBlock(scope: !4047, file: !434, line: 343, column: 15)
!4098 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4047, file: !434, line: 567, size: 64, elements: !4099)
!4099 = !{!4100, !4101}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4098, file: !434, line: 567, baseType: !426, size: 64)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4098, file: !434, line: 567, baseType: !424, size: 64)
!4102 = !DILocalVariable(name: "is_ro", scope: !4103, file: !434, line: 620, type: !492)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !434, line: 613, column: 19)
!4104 = distinct !DILexicalBlock(scope: !4097, file: !434, line: 613, column: 7)
!4105 = !DILocalVariable(name: "do_ro", scope: !4103, file: !434, line: 621, type: !492)
!4106 = !DILocalVariable(name: "s_ptr_idx", scope: !4107, file: !434, line: 626, type: !113)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !434, line: 625, column: 11)
!4108 = distinct !DILexicalBlock(scope: !4103, file: !434, line: 623, column: 8)
!4109 = !DILocalVariable(name: "v", scope: !4110, file: !434, line: 684, type: !105)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !434, line: 683, column: 35)
!4111 = distinct !DILexicalBlock(scope: !4104, file: !434, line: 683, column: 14)
!4112 = !DILocalVariable(name: "v", scope: !4113, file: !434, line: 691, type: !106)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !434, line: 690, column: 36)
!4114 = distinct !DILexicalBlock(scope: !4111, file: !434, line: 690, column: 14)
!4115 = !DILocalVariable(name: "v", scope: !4116, file: !434, line: 698, type: !110)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !434, line: 697, column: 41)
!4117 = distinct !DILexicalBlock(scope: !4114, file: !434, line: 697, column: 14)
!4118 = !DILocalVariable(name: "pos", scope: !4119, file: !434, line: 762, type: !169)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !434, line: 757, column: 31)
!4120 = distinct !DILexicalBlock(scope: !4121, file: !434, line: 757, column: 3)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !434, line: 757, column: 3)
!4122 = distinct !DILexicalBlock(scope: !4123, file: !434, line: 756, column: 16)
!4123 = distinct !DILexicalBlock(scope: !4047, file: !434, line: 756, column: 6)
!4124 = !DILabel(scope: !4103, name: "process_string", file: !434, line: 615)
!4125 = !DILocation(line: 0, scope: !4047)
!4126 = !DILocation(line: 251, column: 2, scope: !4047)
!4127 = !DILocation(line: 251, column: 10, scope: !4047)
!4128 = !DILocation(line: 252, column: 2, scope: !4047)
!4129 = !DILocation(line: 252, column: 10, scope: !4047)
!4130 = !DILocation(line: 263, column: 29, scope: !4047)
!4131 = !DILocation(line: 263, column: 21, scope: !4047)
!4132 = !DILocation(line: 268, column: 21, scope: !4047)
!4133 = !DILocation(line: 268, column: 19, scope: !4047)
!4134 = !DILocation(line: 273, column: 6, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4047, file: !434, line: 273, column: 6)
!4136 = !DILocation(line: 273, column: 26, scope: !4135)
!4137 = !DILocation(line: 273, column: 6, scope: !4047)
!4138 = !DILocation(line: 297, column: 6, scope: !4047)
!4139 = !DILocation(line: 305, column: 11, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4047, file: !434, line: 305, column: 6)
!4141 = !DILocation(line: 305, column: 6, scope: !4047)
!4142 = !DILocation(line: 327, column: 19, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4047, file: !434, line: 327, column: 6)
!4144 = !DILocation(line: 327, column: 22, scope: !4143)
!4145 = !DILocation(line: 327, column: 33, scope: !4143)
!4146 = !DILocation(line: 327, column: 50, scope: !4143)
!4147 = !DILocation(line: 327, column: 6, scope: !4047)
!4148 = !DILocation(line: 338, column: 9, scope: !4047)
!4149 = !DILocation(line: 341, column: 2, scope: !4047)
!4150 = !DILocation(line: 472, column: 8, scope: !4096)
!4151 = !DILocation(line: 473, column: 14, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4153, file: !434, line: 473, column: 9)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !434, line: 472, column: 18)
!4154 = distinct !DILexicalBlock(scope: !4096, file: !434, line: 472, column: 8)
!4155 = !DILocation(line: 473, column: 9, scope: !4153)
!4156 = !DILocation(line: 479, column: 5, scope: !4153)
!4157 = !DILocation(line: 468, column: 9, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4096, file: !434, line: 468, column: 8)
!4159 = !DILocation(line: 468, column: 8, scope: !4158)
!4160 = !DILocation(line: 468, column: 15, scope: !4158)
!4161 = !DILocation(line: 468, column: 8, scope: !4096)
!4162 = distinct !{!4162, !4163, !4164}
!4163 = !DILocation(line: 343, column: 2, scope: !4047)
!4164 = !DILocation(line: 712, column: 2, scope: !4047)
!4165 = !DILocation(line: 481, column: 4, scope: !4096)
!4166 = !DILocation(line: 484, column: 12, scope: !4095)
!4167 = !DILocation(line: 485, column: 5, scope: !4095)
!4168 = !DILocation(line: 505, column: 5, scope: !4095)
!4169 = !DILocation(line: 518, column: 5, scope: !4095)
!4170 = !DILocation(line: 523, column: 5, scope: !4095)
!4171 = !DILocation(line: 532, column: 9, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4095, file: !434, line: 532, column: 9)
!4173 = !DILocation(line: 532, column: 17, scope: !4172)
!4174 = !DILocation(line: 532, column: 9, scope: !4095)
!4175 = !DILocation(line: 533, column: 10, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !434, line: 533, column: 10)
!4177 = distinct !DILexicalBlock(scope: !4172, file: !434, line: 532, column: 25)
!4178 = !DILocation(line: 533, column: 18, scope: !4176)
!4179 = !DILocation(line: 0, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4094, file: !434, line: 569, column: 9)
!4181 = !DILocation(line: 0, scope: !4094)
!4182 = !DILocation(line: 579, column: 20, scope: !4094)
!4183 = !DILocation(line: 579, column: 11, scope: !4094)
!4184 = !DILocation(line: 580, column: 9, scope: !4094)
!4185 = !DILocation(line: 582, column: 21, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4187, file: !434, line: 582, column: 10)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !434, line: 580, column: 23)
!4188 = distinct !DILexicalBlock(scope: !4094, file: !434, line: 580, column: 9)
!4189 = !DILocation(line: 582, column: 28, scope: !4186)
!4190 = !DILocation(line: 582, column: 10, scope: !4187)
!4191 = !DILocation(line: 0, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !434, line: 587, column: 17)
!4193 = distinct !DILexicalBlock(scope: !4187, file: !434, line: 585, column: 10)
!4194 = !DILocation(line: 593, column: 9, scope: !4094)
!4195 = !DILocation(line: 600, column: 5, scope: !4095)
!4196 = !DILocation(line: 605, column: 18, scope: !4097)
!4197 = !DILocation(line: 605, column: 9, scope: !4097)
!4198 = !DILocation(line: 608, column: 20, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4097, file: !434, line: 608, column: 7)
!4200 = !DILocation(line: 608, column: 23, scope: !4199)
!4201 = !DILocation(line: 608, column: 34, scope: !4199)
!4202 = !DILocation(line: 608, column: 41, scope: !4199)
!4203 = !DILocation(line: 608, column: 7, scope: !4097)
!4204 = !DILocation(line: 613, column: 7, scope: !4097)
!4205 = !DILocation(line: 614, column: 8, scope: !4103)
!4206 = !DILocation(line: 614, column: 4, scope: !4103)
!4207 = !DILocation(line: 256, column: 6, scope: !4047)
!4208 = !DILocation(line: 254, column: 15, scope: !4047)
!4209 = !DILocation(line: 320, column: 7, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4140, file: !434, line: 305, column: 20)
!4211 = !DILocation(line: 615, column: 1, scope: !4103)
!4212 = !DILocation(line: 616, column: 8, scope: !4103)
!4213 = !DILocation(line: 617, column: 5, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !434, line: 616, column: 22)
!4215 = distinct !DILexicalBlock(scope: !4103, file: !434, line: 616, column: 8)
!4216 = !DILocation(line: 617, column: 25, scope: !4214)
!4217 = !DILocation(line: 618, column: 4, scope: !4214)
!4218 = !DILocation(line: 620, column: 26, scope: !4103)
!4219 = !DILocation(line: 620, column: 29, scope: !4103)
!4220 = !DILocation(line: 620, column: 17, scope: !4103)
!4221 = !DILocation(line: 620, column: 43, scope: !4103)
!4222 = !DILocation(line: 0, scope: !4103)
!4223 = !DILocation(line: 623, column: 14, scope: !4108)
!4224 = !DILocation(line: 626, column: 26, scope: !4107)
!4225 = !DILocation(line: 626, column: 37, scope: !4107)
!4226 = !DILocation(line: 0, scope: !4107)
!4227 = !DILocation(line: 634, column: 15, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4107, file: !434, line: 634, column: 9)
!4229 = !DILocation(line: 635, column: 6, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4231, file: !434, line: 635, column: 6)
!4231 = distinct !DILexicalBlock(scope: !4232, file: !434, line: 635, column: 6)
!4232 = distinct !DILexicalBlock(scope: !4233, file: !434, line: 635, column: 6)
!4233 = distinct !DILexicalBlock(scope: !4228, file: !434, line: 634, column: 44)
!4234 = !DILocation(line: 639, column: 15, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4107, file: !434, line: 639, column: 9)
!4236 = !DILocation(line: 639, column: 9, scope: !4107)
!4237 = !DILocation(line: 640, column: 6, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !434, line: 640, column: 6)
!4239 = distinct !DILexicalBlock(scope: !4240, file: !434, line: 640, column: 6)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !434, line: 640, column: 6)
!4241 = distinct !DILexicalBlock(scope: !4235, file: !434, line: 639, column: 43)
!4242 = !DILocation(line: 644, column: 9, scope: !4107)
!4243 = !DILocation(line: 649, column: 27, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !434, line: 644, column: 23)
!4245 = distinct !DILexicalBlock(scope: !4107, file: !434, line: 644, column: 9)
!4246 = !DILocation(line: 649, column: 6, scope: !4244)
!4247 = !DILocation(line: 649, column: 25, scope: !4244)
!4248 = !DILocation(line: 650, column: 27, scope: !4244)
!4249 = !DILocation(line: 650, column: 6, scope: !4244)
!4250 = !DILocation(line: 650, column: 25, scope: !4244)
!4251 = !DILocation(line: 651, column: 10, scope: !4244)
!4252 = !DILocation(line: 653, column: 26, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !434, line: 651, column: 17)
!4254 = distinct !DILexicalBlock(scope: !4244, file: !434, line: 651, column: 10)
!4255 = !DILocation(line: 654, column: 15, scope: !4253)
!4256 = !DILocation(line: 655, column: 6, scope: !4253)
!4257 = !DILocation(line: 656, column: 15, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4254, file: !434, line: 655, column: 13)
!4259 = !DILocation(line: 658, column: 16, scope: !4245)
!4260 = !DILocation(line: 663, column: 10, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !434, line: 658, column: 23)
!4262 = distinct !DILexicalBlock(scope: !4245, file: !434, line: 658, column: 16)
!4263 = !DILocation(line: 664, column: 5, scope: !4261)
!4264 = !DILocation(line: 664, column: 16, scope: !4262)
!4265 = !DILocation(line: 669, column: 10, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !434, line: 664, column: 28)
!4267 = distinct !DILexicalBlock(scope: !4262, file: !434, line: 664, column: 16)
!4268 = !DILocation(line: 670, column: 5, scope: !4266)
!4269 = !DILocation(line: 675, column: 13, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4267, file: !434, line: 670, column: 12)
!4271 = !DILocation(line: 675, column: 27, scope: !4270)
!4272 = !DILocation(line: 675, column: 10, scope: !4270)
!4273 = !DILocation(line: 678, column: 10, scope: !4107)
!4274 = !DILocation(line: 680, column: 8, scope: !4103)
!4275 = !DILocation(line: 683, column: 14, scope: !4104)
!4276 = !DILocation(line: 684, column: 12, scope: !4110)
!4277 = !DILocation(line: 0, scope: !4110)
!4278 = !DILocation(line: 686, column: 8, scope: !4110)
!4279 = !DILocation(line: 687, column: 5, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !434, line: 686, column: 22)
!4281 = distinct !DILexicalBlock(scope: !4110, file: !434, line: 686, column: 8)
!4282 = !DILocation(line: 687, column: 17, scope: !4280)
!4283 = !DILocation(line: 688, column: 4, scope: !4280)
!4284 = !DILocation(line: 698, column: 18, scope: !4116)
!4285 = !DILocation(line: 0, scope: !4116)
!4286 = !DILocation(line: 700, column: 8, scope: !4116)
!4287 = !DILocation(line: 704, column: 6, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !434, line: 703, column: 12)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !434, line: 701, column: 9)
!4290 = distinct !DILexicalBlock(scope: !4291, file: !434, line: 700, column: 22)
!4291 = distinct !DILexicalBlock(scope: !4116, file: !434, line: 700, column: 8)
!4292 = !DILocation(line: 704, column: 24, scope: !4288)
!4293 = !DILocation(line: 706, column: 4, scope: !4290)
!4294 = !DILocation(line: 709, column: 4, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !434, line: 709, column: 4)
!4296 = distinct !DILexicalBlock(scope: !4297, file: !434, line: 709, column: 4)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !434, line: 709, column: 4)
!4298 = distinct !DILexicalBlock(scope: !4117, file: !434, line: 708, column: 10)
!4299 = !DILocation(line: 0, scope: !4111)
!4300 = !DILocation(line: 0, scope: !4097)
!4301 = !DILocation(line: 720, column: 6, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4047, file: !434, line: 720, column: 6)
!4303 = !DILocation(line: 720, column: 17, scope: !4302)
!4304 = !DILocation(line: 720, column: 31, scope: !4302)
!4305 = !DILocation(line: 720, column: 6, scope: !4047)
!4306 = !DILocation(line: 721, column: 3, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4308, file: !434, line: 721, column: 3)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !434, line: 721, column: 3)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !434, line: 721, column: 3)
!4310 = distinct !DILexicalBlock(scope: !4302, file: !434, line: 720, column: 38)
!4311 = !DILocation(line: 729, column: 6, scope: !4047)
!4312 = !DILocation(line: 730, column: 21, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !434, line: 729, column: 20)
!4314 = distinct !DILexicalBlock(scope: !4047, file: !434, line: 729, column: 6)
!4315 = !DILocation(line: 730, column: 27, scope: !4313)
!4316 = !DILocation(line: 730, column: 3, scope: !4313)
!4317 = !DILocation(line: 737, column: 22, scope: !4047)
!4318 = !DILocation(line: 737, column: 20, scope: !4047)
!4319 = !DILocation(line: 0, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4047, file: !434, line: 739, column: 6)
!4321 = !DILocation(line: 745, column: 17, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4320, file: !434, line: 743, column: 9)
!4323 = !DILocation(line: 745, column: 25, scope: !4322)
!4324 = !DILocation(line: 746, column: 17, scope: !4322)
!4325 = !DILocation(line: 746, column: 28, scope: !4322)
!4326 = !DILocation(line: 749, column: 29, scope: !4047)
!4327 = !DILocation(line: 749, column: 16, scope: !4047)
!4328 = !DILocation(line: 749, column: 27, scope: !4047)
!4329 = !DILocation(line: 756, column: 6, scope: !4123)
!4330 = !DILocation(line: 756, column: 6, scope: !4047)
!4331 = !DILocation(line: 757, column: 3, scope: !4121)
!4332 = !DILocation(line: 758, column: 10, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4119, file: !434, line: 758, column: 8)
!4334 = !DILocation(line: 758, column: 25, scope: !4333)
!4335 = !DILocation(line: 758, column: 8, scope: !4119)
!4336 = !DILocation(line: 0, scope: !4119)
!4337 = !DILocation(line: 765, column: 8, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4119, file: !434, line: 765, column: 8)
!4339 = !DILocation(line: 765, column: 19, scope: !4338)
!4340 = !DILocation(line: 765, column: 23, scope: !4338)
!4341 = !DILocation(line: 765, column: 8, scope: !4119)
!4342 = !DILocation(line: 762, column: 33, scope: !4119)
!4343 = !DILocation(line: 769, column: 8, scope: !4119)
!4344 = !DILocation(line: 769, column: 11, scope: !4119)
!4345 = !DILocation(line: 757, column: 27, scope: !4120)
!4346 = !DILocation(line: 757, column: 17, scope: !4120)
!4347 = distinct !{!4347, !4331, !4348}
!4348 = !DILocation(line: 770, column: 3, scope: !4121)
!4349 = !DILocation(line: 774, column: 16, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4351, file: !434, line: 774, column: 2)
!4351 = distinct !DILexicalBlock(scope: !4047, file: !434, line: 774, column: 2)
!4352 = !DILocation(line: 774, column: 2, scope: !4351)
!4353 = !DILocation(line: 776, column: 16, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4355, file: !434, line: 776, column: 7)
!4355 = distinct !DILexicalBlock(scope: !4350, file: !434, line: 774, column: 30)
!4356 = !DILocation(line: 776, column: 19, scope: !4354)
!4357 = !DILocation(line: 776, column: 34, scope: !4354)
!4358 = !DILocation(line: 776, column: 7, scope: !4355)
!4359 = !DILocation(line: 780, column: 7, scope: !4355)
!4360 = !DILocation(line: 782, column: 13, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !434, line: 780, column: 19)
!4362 = distinct !DILexicalBlock(scope: !4355, file: !434, line: 780, column: 7)
!4363 = !DILocation(line: 782, column: 8, scope: !4361)
!4364 = !DILocation(line: 782, column: 11, scope: !4361)
!4365 = !DILocation(line: 783, column: 3, scope: !4361)
!4366 = !DILocation(line: 785, column: 26, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4362, file: !434, line: 783, column: 10)
!4368 = !DILocation(line: 785, column: 41, scope: !4367)
!4369 = !DILocation(line: 785, column: 24, scope: !4367)
!4370 = !DILocation(line: 785, column: 8, scope: !4367)
!4371 = !DILocation(line: 787, column: 52, scope: !4367)
!4372 = !DILocation(line: 789, column: 11, scope: !4367)
!4373 = !DILocation(line: 789, column: 21, scope: !4367)
!4374 = !DILocation(line: 0, scope: !4362)
!4375 = !DILocation(line: 793, column: 7, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4355, file: !434, line: 793, column: 7)
!4377 = !DILocation(line: 793, column: 18, scope: !4376)
!4378 = !DILocation(line: 793, column: 22, scope: !4376)
!4379 = !DILocation(line: 793, column: 29, scope: !4376)
!4380 = !DILocation(line: 793, column: 7, scope: !4355)
!4381 = !DILocation(line: 797, column: 12, scope: !4355)
!4382 = !DILocation(line: 797, column: 7, scope: !4355)
!4383 = !DILocation(line: 797, column: 10, scope: !4355)
!4384 = !DILocation(line: 799, column: 3, scope: !4355)
!4385 = !DILocation(line: 800, column: 7, scope: !4355)
!4386 = !DILocation(line: 801, column: 2, scope: !4355)
!4387 = !DILocation(line: 338, column: 4, scope: !4047)
!4388 = !DILocation(line: 774, column: 26, scope: !4350)
!4389 = distinct !{!4389, !4352, !4390}
!4390 = !DILocation(line: 801, column: 2, scope: !4351)
!4391 = !DILocation(line: 808, column: 9, scope: !4047)
!4392 = !DILocation(line: 808, column: 2, scope: !4047)
!4393 = !DILocation(line: 813, column: 1, scope: !4047)
!4394 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !434, file: !434, line: 33, type: !4395, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4397)
!4395 = !DISubroutineType(types: !4396)
!4396 = !{!492, !269}
!4397 = !{!4398}
!4398 = !DILocalVariable(name: "addr", arg: 1, scope: !4394, file: !434, line: 33, type: !269)
!4399 = !DILocation(line: 0, scope: !4394)
!4400 = !DILocation(line: 41, column: 9, scope: !4394)
!4401 = !DILocation(line: 41, column: 2, scope: !4394)
!4402 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4403, file: !4403, line: 24, type: !4404, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4406)
!4403 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4404 = !DISubroutineType(types: !4405)
!4405 = !{!492, !13}
!4406 = !{!4407}
!4407 = !DILocalVariable(name: "addr", arg: 1, scope: !4402, file: !4403, line: 24, type: !13)
!4408 = !DILocation(line: 0, scope: !4402)
!4409 = !DILocation(line: 49, column: 30, scope: !4402)
!4410 = !DILocation(line: 49, column: 57, scope: !4402)
!4411 = !DILocation(line: 49, column: 2, scope: !4402)
!4412 = distinct !DISubprogram(name: "cbprintf_package", scope: !434, file: !434, line: 815, type: !4413, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4415)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{!105, !104, !111, !113, !269, null}
!4415 = !{!4416, !4417, !4418, !4419, !4420, !4421}
!4416 = !DILocalVariable(name: "packaged", arg: 1, scope: !4412, file: !434, line: 815, type: !104)
!4417 = !DILocalVariable(name: "len", arg: 2, scope: !4412, file: !434, line: 815, type: !111)
!4418 = !DILocalVariable(name: "flags", arg: 3, scope: !4412, file: !434, line: 815, type: !113)
!4419 = !DILocalVariable(name: "format", arg: 4, scope: !4412, file: !434, line: 816, type: !269)
!4420 = !DILocalVariable(name: "ap", scope: !4412, file: !434, line: 818, type: !4050)
!4421 = !DILocalVariable(name: "ret", scope: !4412, file: !434, line: 819, type: !105)
!4422 = !DILocation(line: 0, scope: !4412)
!4423 = !DILocation(line: 818, column: 2, scope: !4412)
!4424 = !DILocation(line: 818, column: 10, scope: !4412)
!4425 = !DILocation(line: 821, column: 2, scope: !4412)
!4426 = !DILocation(line: 822, column: 8, scope: !4412)
!4427 = !DILocation(line: 823, column: 2, scope: !4412)
!4428 = !DILocation(line: 825, column: 1, scope: !4412)
!4429 = !DILocation(line: 824, column: 2, scope: !4412)
!4430 = distinct !DISubprogram(name: "cbpprintf_external", scope: !434, file: !434, line: 827, type: !4431, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4441)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{!105, !4433, !4437, !104, !104}
!4433 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4083, line: 297, baseType: !4434)
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4435, size: 32)
!4435 = !DISubroutineType(types: !4436)
!4436 = !{!105, null}
!4437 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4083, line: 328, baseType: !4438)
!4438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4439, size: 32)
!4439 = !DISubroutineType(types: !4440)
!4440 = !{!105, !4433, !104, !269, !4050}
!4441 = !{!4442, !4443, !4444, !4445, !4446, !4447, !4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460}
!4442 = !DILocalVariable(name: "out", arg: 1, scope: !4430, file: !434, line: 827, type: !4433)
!4443 = !DILocalVariable(name: "formatter", arg: 2, scope: !4430, file: !434, line: 828, type: !4437)
!4444 = !DILocalVariable(name: "ctx", arg: 3, scope: !4430, file: !434, line: 829, type: !104)
!4445 = !DILocalVariable(name: "packaged", arg: 4, scope: !4430, file: !434, line: 829, type: !104)
!4446 = !DILocalVariable(name: "buf", scope: !4430, file: !434, line: 831, type: !432)
!4447 = !DILocalVariable(name: "hdr", scope: !4430, file: !434, line: 832, type: !4448)
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4449, size: 32)
!4449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4083, line: 96, size: 64, elements: !4450)
!4450 = !{!4451, !4452}
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4449, file: !4083, line: 98, baseType: !4082, size: 32)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4449, file: !4083, line: 101, baseType: !102, size: 32, offset: 32)
!4453 = !DILocalVariable(name: "s", scope: !4430, file: !434, line: 833, type: !102)
!4454 = !DILocalVariable(name: "ps", scope: !4430, file: !434, line: 833, type: !431)
!4455 = !DILocalVariable(name: "i", scope: !4430, file: !434, line: 834, type: !32)
!4456 = !DILocalVariable(name: "args_size", scope: !4430, file: !434, line: 834, type: !32)
!4457 = !DILocalVariable(name: "s_nbr", scope: !4430, file: !434, line: 834, type: !32)
!4458 = !DILocalVariable(name: "ros_nbr", scope: !4430, file: !434, line: 834, type: !32)
!4459 = !DILocalVariable(name: "rws_nbr", scope: !4430, file: !434, line: 834, type: !32)
!4460 = !DILocalVariable(name: "s_idx", scope: !4430, file: !434, line: 834, type: !32)
!4461 = !DILocation(line: 0, scope: !4430)
!4462 = !DILocation(line: 836, column: 10, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4430, file: !434, line: 836, column: 6)
!4464 = !DILocation(line: 836, column: 6, scope: !4430)
!4465 = !DILocation(line: 842, column: 28, scope: !4430)
!4466 = !DILocation(line: 842, column: 14, scope: !4430)
!4467 = !DILocation(line: 852, column: 16, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !434, line: 852, column: 2)
!4469 = distinct !DILexicalBlock(scope: !4430, file: !434, line: 852, column: 2)
!4470 = !DILocation(line: 852, column: 2, scope: !4469)
!4471 = !DILocation(line: 841, column: 28, scope: !4430)
!4472 = !DILocation(line: 841, column: 14, scope: !4430)
!4473 = !DILocation(line: 841, column: 32, scope: !4430)
!4474 = !DILocation(line: 847, column: 19, scope: !4430)
!4475 = !DILocation(line: 843, column: 28, scope: !4430)
!4476 = !DILocation(line: 843, column: 14, scope: !4430)
!4477 = !DILocation(line: 847, column: 31, scope: !4430)
!4478 = !DILocation(line: 844, column: 28, scope: !4430)
!4479 = !DILocation(line: 844, column: 14, scope: !4430)
!4480 = !DILocation(line: 847, column: 45, scope: !4430)
!4481 = !DILocation(line: 847, column: 41, scope: !4430)
!4482 = !DILocation(line: 854, column: 24, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4468, file: !434, line: 852, column: 30)
!4484 = !DILocation(line: 854, column: 11, scope: !4483)
!4485 = !DILocation(line: 855, column: 30, scope: !4483)
!4486 = !DILocation(line: 855, column: 22, scope: !4483)
!4487 = !DILocation(line: 855, column: 8, scope: !4483)
!4488 = !DILocation(line: 857, column: 7, scope: !4483)
!4489 = !DILocation(line: 859, column: 8, scope: !4483)
!4490 = !DILocation(line: 859, column: 18, scope: !4483)
!4491 = !DILocation(line: 859, column: 5, scope: !4483)
!4492 = !DILocation(line: 852, column: 26, scope: !4468)
!4493 = distinct !{!4493, !4470, !4494}
!4494 = !DILocation(line: 860, column: 2, scope: !4469)
!4495 = !DILocation(line: 863, column: 6, scope: !4430)
!4496 = !DILocation(line: 866, column: 56, scope: !4430)
!4497 = !DILocation(line: 866, column: 9, scope: !4430)
!4498 = !DILocation(line: 866, column: 2, scope: !4430)
!4499 = !DILocation(line: 867, column: 1, scope: !4430)
!4500 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !434, file: !434, line: 179, type: !4501, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4503)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{!105, !4433, !4437, !104, !269, !104}
!4503 = !{!4504, !4505, !4506, !4507, !4508, !4509}
!4504 = !DILocalVariable(name: "out", arg: 1, scope: !4500, file: !434, line: 179, type: !4433)
!4505 = !DILocalVariable(name: "formatter", arg: 2, scope: !4500, file: !434, line: 180, type: !4437)
!4506 = !DILocalVariable(name: "ctx", arg: 3, scope: !4500, file: !434, line: 181, type: !104)
!4507 = !DILocalVariable(name: "fmt", arg: 4, scope: !4500, file: !434, line: 182, type: !269)
!4508 = !DILocalVariable(name: "buf", arg: 5, scope: !4500, file: !434, line: 182, type: !104)
!4509 = !DILocalVariable(name: "u", scope: !4500, file: !434, line: 187, type: !4510)
!4510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4500, file: !434, line: 184, size: 32, elements: !4511)
!4511 = !{!4512, !4513}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4510, file: !434, line: 185, baseType: !4050, size: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4510, file: !434, line: 186, baseType: !104, size: 32)
!4514 = !DILocation(line: 0, scope: !4500)
!4515 = !DILocation(line: 191, column: 9, scope: !4500)
!4516 = !DILocation(line: 191, column: 2, scope: !4500)
!4517 = distinct !DISubprogram(name: "is_ptr", scope: !434, file: !434, line: 881, type: !4518, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4520)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{!492, !269, !105}
!4520 = !{!4521, !4522, !4523, !4524, !4525}
!4521 = !DILocalVariable(name: "fmt", arg: 1, scope: !4517, file: !434, line: 881, type: !269)
!4522 = !DILocalVariable(name: "n", arg: 2, scope: !4517, file: !434, line: 881, type: !105)
!4523 = !DILocalVariable(name: "c", scope: !4517, file: !434, line: 883, type: !103)
!4524 = !DILocalVariable(name: "mod", scope: !4517, file: !434, line: 884, type: !492)
!4525 = !DILocalVariable(name: "cnt", scope: !4517, file: !434, line: 885, type: !105)
!4526 = !DILocation(line: 0, scope: !4517)
!4527 = !DILocation(line: 887, column: 14, scope: !4517)
!4528 = !DILocation(line: 887, column: 22, scope: !4517)
!4529 = !DILocation(line: 887, column: 2, scope: !4517)
!4530 = !DILocation(line: 887, column: 18, scope: !4517)
!4531 = !DILocation(line: 888, column: 7, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4517, file: !434, line: 887, column: 31)
!4533 = !DILocation(line: 889, column: 12, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !434, line: 889, column: 8)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !434, line: 888, column: 12)
!4536 = distinct !DILexicalBlock(scope: !4532, file: !434, line: 888, column: 7)
!4537 = !DILocation(line: 889, column: 8, scope: !4535)
!4538 = !DILocation(line: 890, column: 11, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !434, line: 890, column: 9)
!4540 = distinct !DILexicalBlock(scope: !4534, file: !434, line: 889, column: 18)
!4541 = !DILocation(line: 890, column: 9, scope: !4540)
!4542 = !DILocation(line: 892, column: 16, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4539, file: !434, line: 892, column: 16)
!4544 = !DILocation(line: 892, column: 16, scope: !4539)
!4545 = !DILocation(line: 895, column: 15, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4534, file: !434, line: 895, column: 15)
!4547 = !DILocation(line: 895, column: 15, scope: !4534)
!4548 = !DILocation(line: 900, column: 9, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4532, file: !434, line: 900, column: 7)
!4550 = !DILocation(line: 900, column: 7, scope: !4532)
!4551 = distinct !{!4551, !4529, !4552}
!4552 = !DILocation(line: 903, column: 2, scope: !4517)
!4553 = !DILocation(line: 906, column: 1, scope: !4517)
!4554 = distinct !DISubprogram(name: "is_fmt_spec", scope: !434, file: !434, line: 873, type: !4555, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4557)
!4555 = !DISubroutineType(types: !4556)
!4556 = !{!492, !103}
!4557 = !{!4558}
!4558 = !DILocalVariable(name: "c", arg: 1, scope: !4554, file: !434, line: 873, type: !103)
!4559 = !DILocation(line: 0, scope: !4554)
!4560 = !DILocation(line: 875, column: 19, scope: !4554)
!4561 = !DILocation(line: 875, column: 2, scope: !4554)
!4562 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !434, file: !434, line: 908, type: !4563, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4569)
!4563 = !DISubroutineType(types: !4564)
!4564 = !{!105, !104, !111, !4565, !104, !113, !2683, !111}
!4565 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4083, line: 308, baseType: !4566)
!4566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4567, size: 32)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{!105, !13, !111, !104}
!4569 = !{!4570, !4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4587, !4588, !4589, !4590, !4591, !4597, !4600, !4601, !4602, !4604, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4620, !4623, !4624, !4625, !4626, !4627, !4628, !4630, !4633, !4634, !4635}
!4570 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4562, file: !434, line: 908, type: !104)
!4571 = !DILocalVariable(name: "in_len", arg: 2, scope: !4562, file: !434, line: 909, type: !111)
!4572 = !DILocalVariable(name: "cb", arg: 3, scope: !4562, file: !434, line: 910, type: !4565)
!4573 = !DILocalVariable(name: "ctx", arg: 4, scope: !4562, file: !434, line: 911, type: !104)
!4574 = !DILocalVariable(name: "flags", arg: 5, scope: !4562, file: !434, line: 912, type: !113)
!4575 = !DILocalVariable(name: "strl", arg: 6, scope: !4562, file: !434, line: 913, type: !2683)
!4576 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4562, file: !434, line: 914, type: !111)
!4577 = !DILocalVariable(name: "buf", scope: !4562, file: !434, line: 918, type: !432)
!4578 = !DILocalVariable(name: "buf32", scope: !4562, file: !434, line: 919, type: !1043)
!4579 = !DILocalVariable(name: "args_size", scope: !4562, file: !434, line: 920, type: !32)
!4580 = !DILocalVariable(name: "ros_nbr", scope: !4562, file: !434, line: 920, type: !32)
!4581 = !DILocalVariable(name: "rws_nbr", scope: !4562, file: !434, line: 920, type: !32)
!4582 = !DILocalVariable(name: "fmt_present", scope: !4562, file: !434, line: 921, type: !492)
!4583 = !DILocalVariable(name: "rw_cpy", scope: !4562, file: !434, line: 922, type: !492)
!4584 = !DILocalVariable(name: "ro_cpy", scope: !4562, file: !434, line: 923, type: !492)
!4585 = !DILocalVariable(name: "in_desc", scope: !4562, file: !434, line: 924, type: !4586)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 32)
!4587 = !DILocalVariable(name: "out_len", scope: !4562, file: !434, line: 960, type: !105)
!4588 = !DILocalVariable(name: "fmt", scope: !4562, file: !434, line: 965, type: !269)
!4589 = !DILocalVariable(name: "str_pos", scope: !4562, file: !434, line: 966, type: !432)
!4590 = !DILocalVariable(name: "strl_cnt", scope: !4562, file: !434, line: 967, type: !111)
!4591 = !DILocalVariable(name: "i", scope: !4592, file: !434, line: 973, type: !105)
!4592 = distinct !DILexicalBlock(scope: !4593, file: !434, line: 973, column: 4)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !434, line: 972, column: 15)
!4594 = distinct !DILexicalBlock(scope: !4595, file: !434, line: 972, column: 7)
!4595 = distinct !DILexicalBlock(scope: !4596, file: !434, line: 970, column: 18)
!4596 = distinct !DILexicalBlock(scope: !4562, file: !434, line: 970, column: 6)
!4597 = !DILocalVariable(name: "str", scope: !4598, file: !434, line: 974, type: !269)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !434, line: 973, column: 38)
!4599 = distinct !DILexicalBlock(scope: !4592, file: !434, line: 973, column: 4)
!4600 = !DILocalVariable(name: "len", scope: !4598, file: !434, line: 975, type: !105)
!4601 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4595, file: !434, line: 990, type: !492)
!4602 = !DILocalVariable(name: "i", scope: !4603, file: !434, line: 995, type: !105)
!4603 = distinct !DILexicalBlock(scope: !4595, file: !434, line: 995, column: 3)
!4604 = !DILocalVariable(name: "arg_idx", scope: !4605, file: !434, line: 996, type: !169)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !434, line: 995, column: 37)
!4606 = distinct !DILexicalBlock(scope: !4603, file: !434, line: 995, column: 3)
!4607 = !DILocalVariable(name: "arg_pos", scope: !4605, file: !434, line: 997, type: !169)
!4608 = !DILocalVariable(name: "str", scope: !4605, file: !434, line: 998, type: !269)
!4609 = !DILocalVariable(name: "is_ro", scope: !4605, file: !434, line: 999, type: !492)
!4610 = !DILocalVariable(name: "len", scope: !4605, file: !434, line: 1000, type: !105)
!4611 = !DILocalVariable(name: "out_desc", scope: !4562, file: !434, line: 1038, type: !4086)
!4612 = !DILocalVariable(name: "cpy_str_pos", scope: !4562, file: !434, line: 1040, type: !4068)
!4613 = !DILocalVariable(name: "keep_str_pos", scope: !4562, file: !434, line: 1042, type: !4068)
!4614 = !DILocalVariable(name: "scpy_cnt", scope: !4562, file: !434, line: 1043, type: !169)
!4615 = !DILocalVariable(name: "keep_cnt", scope: !4562, file: !434, line: 1044, type: !169)
!4616 = !DILocalVariable(name: "dst", scope: !4562, file: !434, line: 1045, type: !432)
!4617 = !DILocalVariable(name: "rv", scope: !4562, file: !434, line: 1046, type: !105)
!4618 = !DILocalVariable(name: "i", scope: !4619, file: !434, line: 1074, type: !105)
!4619 = distinct !DILexicalBlock(scope: !4562, file: !434, line: 1074, column: 2)
!4620 = !DILocalVariable(name: "arg_idx", scope: !4621, file: !434, line: 1075, type: !169)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !434, line: 1074, column: 36)
!4622 = distinct !DILexicalBlock(scope: !4619, file: !434, line: 1074, column: 2)
!4623 = !DILocalVariable(name: "arg_pos", scope: !4621, file: !434, line: 1076, type: !169)
!4624 = !DILocalVariable(name: "str", scope: !4621, file: !434, line: 1077, type: !269)
!4625 = !DILocalVariable(name: "is_ro", scope: !4621, file: !434, line: 1078, type: !492)
!4626 = !DILocalVariable(name: "in_desc_backup", scope: !4562, file: !434, line: 1114, type: !4086)
!4627 = !DILocalVariable(name: "strs_len", scope: !4562, file: !434, line: 1134, type: !111)
!4628 = !DILocalVariable(name: "i", scope: !4629, file: !434, line: 1143, type: !105)
!4629 = distinct !DILexicalBlock(scope: !4562, file: !434, line: 1143, column: 2)
!4630 = !DILocalVariable(name: "loc", scope: !4631, file: !434, line: 1144, type: !169)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !434, line: 1143, column: 37)
!4632 = distinct !DILexicalBlock(scope: !4629, file: !434, line: 1143, column: 2)
!4633 = !DILocalVariable(name: "str", scope: !4631, file: !434, line: 1145, type: !269)
!4634 = !DILocalVariable(name: "str_len", scope: !4631, file: !434, line: 1146, type: !183)
!4635 = !DILabel(scope: !4636, name: "calculate_string_length", file: !434, line: 1021)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !434, line: 1020, column: 56)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !434, line: 1020, column: 15)
!4638 = distinct !DILexicalBlock(scope: !4605, file: !434, line: 1014, column: 8)
!4639 = !DILocation(line: 0, scope: !4562)
!4640 = !DILocation(line: 916, column: 2, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !434, line: 916, column: 2)
!4642 = distinct !DILexicalBlock(scope: !4562, file: !434, line: 916, column: 2)
!4643 = !DILocation(line: 916, column: 2, scope: !4642)
!4644 = !DILocation(line: 916, column: 2, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4641, file: !434, line: 916, column: 2)
!4646 = !DILocation(line: 919, column: 20, scope: !4562)
!4647 = !DILocation(line: 921, column: 27, scope: !4562)
!4648 = !DILocation(line: 921, column: 21, scope: !4562)
!4649 = !DILocation(line: 926, column: 18, scope: !4562)
!4650 = !DILocation(line: 926, column: 11, scope: !4562)
!4651 = !DILocation(line: 926, column: 34, scope: !4562)
!4652 = !DILocation(line: 931, column: 21, scope: !4562)
!4653 = !DILocation(line: 931, column: 12, scope: !4562)
!4654 = !DILocation(line: 932, column: 11, scope: !4562)
!4655 = !DILocation(line: 932, column: 19, scope: !4562)
!4656 = !DILocation(line: 938, column: 21, scope: !4562)
!4657 = !DILocation(line: 938, column: 12, scope: !4562)
!4658 = !DILocation(line: 939, column: 19, scope: !4562)
!4659 = !DILocation(line: 939, column: 23, scope: !4562)
!4660 = !DILocation(line: 946, column: 14, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4562, file: !434, line: 946, column: 6)
!4662 = !DILocation(line: 947, column: 7, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !434, line: 947, column: 7)
!4664 = distinct !DILexicalBlock(scope: !4661, file: !434, line: 946, column: 26)
!4665 = !DILocation(line: 947, column: 7, scope: !4664)
!4666 = !DILocation(line: 948, column: 4, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4663, file: !434, line: 947, column: 11)
!4668 = !DILocation(line: 949, column: 3, scope: !4667)
!4669 = !DILocation(line: 958, column: 23, scope: !4562)
!4670 = !DILocation(line: 958, column: 14, scope: !4562)
!4671 = !DILocation(line: 958, column: 27, scope: !4562)
!4672 = !DILocation(line: 965, column: 41, scope: !4562)
!4673 = !DILocation(line: 965, column: 20, scope: !4562)
!4674 = !DILocation(line: 966, column: 22, scope: !4562)
!4675 = !DILocation(line: 970, column: 9, scope: !4596)
!4676 = !DILocation(line: 970, column: 6, scope: !4562)
!4677 = !DILocation(line: 972, column: 7, scope: !4595)
!4678 = !DILocation(line: 0, scope: !4592)
!4679 = !DILocation(line: 973, column: 4, scope: !4592)
!4680 = !DILocation(line: 974, column: 46, scope: !4598)
!4681 = !DILocation(line: 974, column: 40, scope: !4598)
!4682 = !DILocation(line: 974, column: 23, scope: !4598)
!4683 = !DILocation(line: 0, scope: !4598)
!4684 = !DILocation(line: 975, column: 15, scope: !4598)
!4685 = !DILocation(line: 978, column: 14, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4598, file: !434, line: 978, column: 9)
!4687 = !DILocation(line: 979, column: 25, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4686, file: !434, line: 978, column: 38)
!4689 = !DILocation(line: 979, column: 19, scope: !4688)
!4690 = !DILocation(line: 979, column: 6, scope: !4688)
!4691 = !DILocation(line: 979, column: 23, scope: !4688)
!4692 = !DILocation(line: 980, column: 5, scope: !4688)
!4693 = !DILocation(line: 981, column: 13, scope: !4598)
!4694 = !DILocation(line: 982, column: 12, scope: !4598)
!4695 = !DILocation(line: 973, column: 34, scope: !4599)
!4696 = !DILocation(line: 973, column: 22, scope: !4599)
!4697 = distinct !{!4697, !4679, !4698}
!4698 = !DILocation(line: 983, column: 4, scope: !4592)
!4699 = !DILocation(line: 985, column: 16, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4701, file: !434, line: 985, column: 8)
!4701 = distinct !DILexicalBlock(scope: !4594, file: !434, line: 984, column: 10)
!4702 = !DILocation(line: 967, column: 9, scope: !4562)
!4703 = !DILocation(line: 971, column: 11, scope: !4595)
!4704 = !DILocation(line: 0, scope: !4595)
!4705 = !DILocation(line: 0, scope: !4603)
!4706 = !DILocation(line: 995, column: 21, scope: !4606)
!4707 = !DILocation(line: 995, column: 3, scope: !4603)
!4708 = !DILocation(line: 990, column: 34, scope: !4595)
!4709 = !DILocation(line: 990, column: 26, scope: !4595)
!4710 = !DILocation(line: 996, column: 30, scope: !4605)
!4711 = !DILocation(line: 0, scope: !4605)
!4712 = !DILocation(line: 997, column: 30, scope: !4605)
!4713 = !DILocation(line: 997, column: 22, scope: !4605)
!4714 = !DILocation(line: 998, column: 39, scope: !4605)
!4715 = !DILocation(line: 998, column: 22, scope: !4605)
!4716 = !DILocation(line: 999, column: 17, scope: !4605)
!4717 = !DILocation(line: 1002, column: 20, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4605, file: !434, line: 1002, column: 8)
!4719 = !DILocation(line: 996, column: 22, scope: !4605)
!4720 = !DILocation(line: 1002, column: 35, scope: !4718)
!4721 = !DILocation(line: 1002, column: 23, scope: !4718)
!4722 = !DILocation(line: 1002, column: 8, scope: !4605)
!4723 = !DILocation(line: 1003, column: 5, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !434, line: 1003, column: 5)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !434, line: 1003, column: 5)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !434, line: 1003, column: 5)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !434, line: 1003, column: 5)
!4728 = distinct !DILexicalBlock(scope: !4718, file: !434, line: 1002, column: 45)
!4729 = !DILocation(line: 1010, column: 13, scope: !4728)
!4730 = !DILocation(line: 1011, column: 5, scope: !4728)
!4731 = !DILocation(line: 1014, column: 8, scope: !4605)
!4732 = !DILocation(line: 1015, column: 9, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4638, file: !434, line: 1014, column: 15)
!4734 = !DILocation(line: 1018, column: 14, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !434, line: 1017, column: 12)
!4736 = distinct !DILexicalBlock(scope: !4733, file: !434, line: 1015, column: 9)
!4737 = !DILocation(line: 1020, column: 4, scope: !4733)
!4738 = !DILocation(line: 1020, column: 15, scope: !4638)
!4739 = !DILocation(line: 1021, column: 1, scope: !4636)
!4740 = !DILocation(line: 1022, column: 11, scope: !4636)
!4741 = !DILocation(line: 1025, column: 14, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4636, file: !434, line: 1025, column: 9)
!4743 = !DILocation(line: 1026, column: 25, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4742, file: !434, line: 1025, column: 38)
!4745 = !DILocation(line: 1026, column: 19, scope: !4744)
!4746 = !DILocation(line: 1026, column: 6, scope: !4744)
!4747 = !DILocation(line: 1026, column: 23, scope: !4744)
!4748 = !DILocation(line: 1027, column: 5, scope: !4744)
!4749 = !DILocation(line: 1031, column: 21, scope: !4636)
!4750 = !DILocation(line: 1031, column: 13, scope: !4636)
!4751 = !DILocation(line: 1032, column: 4, scope: !4636)
!4752 = !DILocation(line: 995, column: 33, scope: !4606)
!4753 = distinct !{!4753, !4707, !4754}
!4754 = !DILocation(line: 1033, column: 3, scope: !4603)
!4755 = !DILocation(line: 1040, column: 10, scope: !4562)
!4756 = !DILocation(line: 1042, column: 10, scope: !4562)
!4757 = !DILocation(line: 1052, column: 6, scope: !4562)
!4758 = !DILocation(line: 1055, column: 9, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !434, line: 1052, column: 14)
!4760 = distinct !DILexicalBlock(scope: !4562, file: !434, line: 1052, column: 6)
!4761 = !DILocation(line: 1056, column: 2, scope: !4759)
!4762 = !DILocation(line: 1056, column: 21, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4760, file: !434, line: 1056, column: 13)
!4764 = !DILocation(line: 1066, column: 3, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !434, line: 1065, column: 11)
!4766 = distinct !DILexicalBlock(scope: !4562, file: !434, line: 1065, column: 6)
!4767 = !DILocation(line: 1067, column: 2, scope: !4765)
!4768 = !DILocation(line: 1068, column: 10, scope: !4562)
!4769 = !DILocation(line: 0, scope: !4619)
!4770 = !DILocation(line: 1074, column: 20, scope: !4622)
!4771 = !DILocation(line: 1074, column: 2, scope: !4619)
!4772 = !DILocation(line: 1110, column: 24, scope: !4562)
!4773 = !DILocation(line: 1053, column: 12, scope: !4759)
!4774 = !DILocation(line: 1054, column: 12, scope: !4759)
!4775 = !DILocation(line: 1108, column: 30, scope: !4562)
!4776 = !DILocation(line: 1108, column: 40, scope: !4562)
!4777 = !DILocation(line: 1108, column: 38, scope: !4562)
!4778 = !DILocation(line: 1109, column: 31, scope: !4562)
!4779 = !DILocation(line: 1109, column: 24, scope: !4562)
!4780 = !DILocation(line: 1110, column: 31, scope: !4562)
!4781 = !DILocation(line: 1114, column: 31, scope: !4562)
!4782 = !DILocation(line: 1114, column: 48, scope: !4562)
!4783 = !DILocation(line: 1115, column: 13, scope: !4562)
!4784 = !DILocation(line: 1118, column: 7, scope: !4562)
!4785 = !DILocation(line: 1119, column: 9, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4562, file: !434, line: 1119, column: 6)
!4787 = !DILocation(line: 1119, column: 6, scope: !4562)
!4788 = !DILocation(line: 1075, column: 29, scope: !4621)
!4789 = !DILocation(line: 1075, column: 21, scope: !4621)
!4790 = !DILocation(line: 0, scope: !4621)
!4791 = !DILocation(line: 1076, column: 29, scope: !4621)
!4792 = !DILocation(line: 1076, column: 21, scope: !4621)
!4793 = !DILocation(line: 1077, column: 38, scope: !4621)
!4794 = !DILocation(line: 1077, column: 21, scope: !4621)
!4795 = !DILocation(line: 1078, column: 16, scope: !4621)
!4796 = !DILocation(line: 1080, column: 19, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4621, file: !434, line: 1080, column: 7)
!4798 = !DILocation(line: 1080, column: 34, scope: !4797)
!4799 = !DILocation(line: 1080, column: 22, scope: !4797)
!4800 = !DILocation(line: 1080, column: 7, scope: !4621)
!4801 = !DILocation(line: 1084, column: 7, scope: !4621)
!4802 = !DILocation(line: 1085, column: 8, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4804, file: !434, line: 1084, column: 14)
!4804 = distinct !DILexicalBlock(scope: !4621, file: !434, line: 1084, column: 7)
!4805 = !DILocation(line: 1086, column: 5, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !434, line: 1086, column: 5)
!4807 = distinct !DILexicalBlock(scope: !4808, file: !434, line: 1086, column: 5)
!4808 = distinct !DILexicalBlock(scope: !4809, file: !434, line: 1085, column: 49)
!4809 = distinct !DILexicalBlock(scope: !4803, file: !434, line: 1085, column: 8)
!4810 = !DILocation(line: 1086, column: 5, scope: !4807)
!4811 = !DILocation(line: 1086, column: 5, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4806, file: !434, line: 1086, column: 5)
!4813 = !DILocation(line: 1087, column: 25, scope: !4808)
!4814 = !DILocation(line: 1087, column: 5, scope: !4808)
!4815 = !DILocation(line: 1088, column: 4, scope: !4808)
!4816 = !DILocation(line: 1088, column: 15, scope: !4809)
!4817 = !DILocation(line: 1089, column: 5, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4819, file: !434, line: 1089, column: 5)
!4819 = distinct !DILexicalBlock(scope: !4820, file: !434, line: 1089, column: 5)
!4820 = distinct !DILexicalBlock(scope: !4821, file: !434, line: 1088, column: 61)
!4821 = distinct !DILexicalBlock(scope: !4809, file: !434, line: 1088, column: 15)
!4822 = !DILocation(line: 1089, column: 5, scope: !4819)
!4823 = !DILocation(line: 1089, column: 5, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4818, file: !434, line: 1089, column: 5)
!4825 = !DILocation(line: 1090, column: 26, scope: !4820)
!4826 = !DILocation(line: 1090, column: 5, scope: !4820)
!4827 = !DILocation(line: 1091, column: 4, scope: !4820)
!4828 = !DILocation(line: 1095, column: 8, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4804, file: !434, line: 1094, column: 10)
!4830 = !DILocation(line: 1096, column: 5, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4832, file: !434, line: 1096, column: 5)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !434, line: 1096, column: 5)
!4833 = distinct !DILexicalBlock(scope: !4834, file: !434, line: 1095, column: 49)
!4834 = distinct !DILexicalBlock(scope: !4829, file: !434, line: 1095, column: 8)
!4835 = !DILocation(line: 1096, column: 5, scope: !4832)
!4836 = !DILocation(line: 1096, column: 5, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4831, file: !434, line: 1096, column: 5)
!4838 = !DILocation(line: 1097, column: 25, scope: !4833)
!4839 = !DILocation(line: 1097, column: 5, scope: !4833)
!4840 = !DILocation(line: 1098, column: 4, scope: !4833)
!4841 = !DILocation(line: 1099, column: 5, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4843, file: !434, line: 1099, column: 5)
!4843 = distinct !DILexicalBlock(scope: !4844, file: !434, line: 1099, column: 5)
!4844 = distinct !DILexicalBlock(scope: !4834, file: !434, line: 1098, column: 11)
!4845 = !DILocation(line: 1099, column: 5, scope: !4843)
!4846 = !DILocation(line: 1099, column: 5, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4842, file: !434, line: 1099, column: 5)
!4848 = !DILocation(line: 1100, column: 26, scope: !4844)
!4849 = !DILocation(line: 1100, column: 5, scope: !4844)
!4850 = !DILocation(line: 1100, column: 30, scope: !4844)
!4851 = !DILocation(line: 1101, column: 26, scope: !4844)
!4852 = !DILocation(line: 1101, column: 5, scope: !4844)
!4853 = !DILocation(line: 0, scope: !4804)
!4854 = !DILocation(line: 1074, column: 32, scope: !4622)
!4855 = distinct !{!4855, !4771, !4856}
!4856 = !DILocation(line: 1104, column: 2, scope: !4619)
!4857 = !DILocation(line: 1124, column: 13, scope: !4562)
!4858 = !DILocation(line: 1127, column: 10, scope: !4562)
!4859 = !DILocation(line: 1127, column: 7, scope: !4562)
!4860 = !DILocation(line: 1128, column: 9, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4562, file: !434, line: 1128, column: 6)
!4862 = !DILocation(line: 1128, column: 6, scope: !4562)
!4863 = !DILocation(line: 1134, column: 27, scope: !4562)
!4864 = !DILocation(line: 1136, column: 7, scope: !4562)
!4865 = !DILocation(line: 1137, column: 9, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4562, file: !434, line: 1137, column: 6)
!4867 = !DILocation(line: 1137, column: 6, scope: !4562)
!4868 = !DILocation(line: 1131, column: 10, scope: !4562)
!4869 = !DILocation(line: 1140, column: 10, scope: !4562)
!4870 = !DILocation(line: 0, scope: !4629)
!4871 = !DILocation(line: 1143, column: 20, scope: !4632)
!4872 = !DILocation(line: 1143, column: 2, scope: !4629)
!4873 = !DILocation(line: 1144, column: 3, scope: !4631)
!4874 = !DILocation(line: 1144, column: 17, scope: !4631)
!4875 = !DILocation(line: 0, scope: !4631)
!4876 = !DILocation(line: 1144, column: 11, scope: !4631)
!4877 = !DILocation(line: 1145, column: 38, scope: !4631)
!4878 = !DILocation(line: 1145, column: 21, scope: !4631)
!4879 = !DILocation(line: 1146, column: 22, scope: !4631)
!4880 = !DILocation(line: 1146, column: 29, scope: !4631)
!4881 = !DILocation(line: 1148, column: 8, scope: !4631)
!4882 = !DILocation(line: 1149, column: 10, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4631, file: !434, line: 1149, column: 7)
!4884 = !DILocation(line: 1149, column: 7, scope: !4631)
!4885 = !DILocation(line: 1154, column: 8, scope: !4631)
!4886 = !DILocation(line: 1155, column: 10, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4631, file: !434, line: 1155, column: 7)
!4888 = !DILocation(line: 1155, column: 7, scope: !4631)
!4889 = !DILocation(line: 1159, column: 2, scope: !4632)
!4890 = !DILocation(line: 1152, column: 11, scope: !4631)
!4891 = !DILocation(line: 1158, column: 11, scope: !4631)
!4892 = !DILocation(line: 1143, column: 33, scope: !4632)
!4893 = distinct !{!4893, !4872, !4894}
!4894 = !DILocation(line: 1159, column: 2, scope: !4629)
!4895 = !DILocation(line: 1162, column: 8, scope: !4562)
!4896 = !DILocation(line: 1164, column: 2, scope: !4562)
!4897 = !DILocation(line: 1165, column: 1, scope: !4562)
!4898 = distinct !DISubprogram(name: "get_package_len", scope: !434, file: !434, line: 196, type: !4899, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4901)
!4899 = !DISubroutineType(types: !4900)
!4900 = !{!111, !104}
!4901 = !{!4902, !4903, !4904, !4905, !4906, !4907, !4908}
!4902 = !DILocalVariable(name: "packaged", arg: 1, scope: !4898, file: !434, line: 196, type: !104)
!4903 = !DILocalVariable(name: "buf", scope: !4898, file: !434, line: 200, type: !432)
!4904 = !DILocalVariable(name: "start", scope: !4898, file: !434, line: 201, type: !432)
!4905 = !DILocalVariable(name: "args_size", scope: !4898, file: !434, line: 202, type: !32)
!4906 = !DILocalVariable(name: "s_nbr", scope: !4898, file: !434, line: 202, type: !32)
!4907 = !DILocalVariable(name: "ros_nbr", scope: !4898, file: !434, line: 202, type: !32)
!4908 = !DILocalVariable(name: "i", scope: !4909, file: !434, line: 215, type: !105)
!4909 = distinct !DILexicalBlock(scope: !4898, file: !434, line: 215, column: 2)
!4910 = !DILocation(line: 0, scope: !4898)
!4911 = !DILocation(line: 198, column: 2, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4913, file: !434, line: 198, column: 2)
!4913 = distinct !DILexicalBlock(scope: !4898, file: !434, line: 198, column: 2)
!4914 = !DILocation(line: 198, column: 2, scope: !4913)
!4915 = !DILocation(line: 198, column: 2, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4912, file: !434, line: 198, column: 2)
!4917 = !DILocation(line: 204, column: 14, scope: !4898)
!4918 = !DILocation(line: 204, column: 21, scope: !4898)
!4919 = !DILocation(line: 205, column: 14, scope: !4898)
!4920 = !DILocation(line: 206, column: 14, scope: !4898)
!4921 = !DILocation(line: 209, column: 6, scope: !4898)
!4922 = !DILocation(line: 212, column: 6, scope: !4898)
!4923 = !DILocation(line: 0, scope: !4909)
!4924 = !DILocation(line: 215, column: 20, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4909, file: !434, line: 215, column: 2)
!4926 = !DILocation(line: 215, column: 2, scope: !4909)
!4927 = !DILocation(line: 220, column: 33, scope: !4898)
!4928 = !DILocation(line: 220, column: 2, scope: !4898)
!4929 = !DILocation(line: 216, column: 6, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4925, file: !434, line: 215, column: 34)
!4931 = !DILocation(line: 217, column: 10, scope: !4930)
!4932 = !DILocation(line: 217, column: 36, scope: !4930)
!4933 = !DILocation(line: 217, column: 7, scope: !4930)
!4934 = !DILocation(line: 215, column: 30, scope: !4925)
!4935 = distinct !{!4935, !4926, !4936}
!4936 = !DILocation(line: 218, column: 2, scope: !4909)
!4937 = distinct !DISubprogram(name: "append_string", scope: !434, file: !434, line: 223, type: !4938, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4940)
!4938 = !DISubroutineType(types: !4939)
!4939 = !{!105, !4565, !104, !269, !183}
!4940 = !{!4941, !4942, !4943, !4944}
!4941 = !DILocalVariable(name: "cb", arg: 1, scope: !4937, file: !434, line: 223, type: !4565)
!4942 = !DILocalVariable(name: "ctx", arg: 2, scope: !4937, file: !434, line: 223, type: !104)
!4943 = !DILocalVariable(name: "str", arg: 3, scope: !4937, file: !434, line: 223, type: !269)
!4944 = !DILocalVariable(name: "strl", arg: 4, scope: !4937, file: !434, line: 223, type: !183)
!4945 = !DILocation(line: 0, scope: !4937)
!4946 = !DILocation(line: 225, column: 9, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4937, file: !434, line: 225, column: 6)
!4948 = !DILocation(line: 225, column: 6, scope: !4937)
!4949 = !DILocation(line: 226, column: 14, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4947, file: !434, line: 225, column: 18)
!4951 = !DILocation(line: 226, column: 12, scope: !4950)
!4952 = !DILocation(line: 226, column: 3, scope: !4950)
!4953 = !DILocation(line: 229, column: 14, scope: !4937)
!4954 = !DILocation(line: 229, column: 9, scope: !4937)
!4955 = !DILocation(line: 229, column: 27, scope: !4937)
!4956 = !DILocation(line: 229, column: 39, scope: !4937)
!4957 = !DILocation(line: 230, column: 17, scope: !4937)
!4958 = !DILocation(line: 230, column: 9, scope: !4937)
!4959 = !DILocation(line: 230, column: 2, scope: !4937)
!4960 = !DILocation(line: 231, column: 1, scope: !4937)
!4961 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !446, file: !446, line: 45, type: !448, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4962)
!4962 = !{!4963}
!4963 = !DILocalVariable(name: "c", arg: 1, scope: !4961, file: !446, line: 45, type: !105)
!4964 = !DILocation(line: 0, scope: !4961)
!4965 = !DILocation(line: 50, column: 2, scope: !4961)
!4966 = distinct !DISubprogram(name: "__printk_hook_install", scope: !446, file: !446, line: 63, type: !4967, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4969)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{null, !447}
!4969 = !{!4970}
!4970 = !DILocalVariable(name: "fn", arg: 1, scope: !4966, file: !446, line: 63, type: !447)
!4971 = !DILocation(line: 0, scope: !4966)
!4972 = !DILocation(line: 65, column: 12, scope: !4966)
!4973 = !DILocation(line: 66, column: 1, scope: !4966)
!4974 = distinct !DISubprogram(name: "__printk_get_hook", scope: !446, file: !446, line: 76, type: !4975, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !397)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!104}
!4977 = !DILocation(line: 78, column: 9, scope: !4974)
!4978 = !DILocation(line: 78, column: 2, scope: !4974)
!4979 = distinct !DISubprogram(name: "vprintk", scope: !446, file: !446, line: 113, type: !4980, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4988)
!4980 = !DISubroutineType(types: !4981)
!4981 = !{null, !269, !4982}
!4982 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4051, line: 99, baseType: !4983)
!4983 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4051, line: 40, baseType: !4984)
!4984 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !446, baseType: !4985)
!4985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4986)
!4986 = !{!4987}
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4985, file: !446, line: 79, baseType: !104, size: 32)
!4988 = !{!4989, !4990, !4991}
!4989 = !DILocalVariable(name: "fmt", arg: 1, scope: !4979, file: !446, line: 113, type: !269)
!4990 = !DILocalVariable(name: "ap", arg: 2, scope: !4979, file: !446, line: 113, type: !4982)
!4991 = !DILocalVariable(name: "ctx", scope: !4992, file: !446, line: 121, type: !4994)
!4992 = distinct !DILexicalBlock(scope: !4993, file: !446, line: 120, column: 27)
!4993 = distinct !DILexicalBlock(scope: !4979, file: !446, line: 120, column: 6)
!4994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !446, line: 81, size: 32, elements: !4995)
!4995 = !{!4996, !4997}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4994, file: !446, line: 85, baseType: !32, size: 32)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4994, file: !446, line: 86, baseType: !4998, offset: 32)
!4998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, elements: !2681)
!4999 = !DILocation(line: 0, scope: !4979)
!5000 = !DILocation(line: 148, column: 3, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4993, file: !446, line: 138, column: 9)
!5002 = !DILocation(line: 155, column: 1, scope: !4979)
!5003 = distinct !DISubprogram(name: "char_out", scope: !446, file: !446, line: 107, type: !5004, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5006)
!5004 = !DISubroutineType(types: !5005)
!5005 = !{!105, !105, !104}
!5006 = !{!5007, !5008}
!5007 = !DILocalVariable(name: "c", arg: 1, scope: !5003, file: !446, line: 107, type: !105)
!5008 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5003, file: !446, line: 107, type: !104)
!5009 = !DILocation(line: 0, scope: !5003)
!5010 = !DILocation(line: 110, column: 9, scope: !5003)
!5011 = !DILocation(line: 110, column: 2, scope: !5003)
!5012 = distinct !DISubprogram(name: "cbvprintf", scope: !4083, file: !4083, line: 739, type: !5013, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5015)
!5013 = !DISubroutineType(types: !5014)
!5014 = !{!105, !4433, !104, !269, !4982}
!5015 = !{!5016, !5017, !5018, !5019}
!5016 = !DILocalVariable(name: "out", arg: 1, scope: !5012, file: !4083, line: 739, type: !4433)
!5017 = !DILocalVariable(name: "ctx", arg: 2, scope: !5012, file: !4083, line: 739, type: !104)
!5018 = !DILocalVariable(name: "format", arg: 3, scope: !5012, file: !4083, line: 739, type: !269)
!5019 = !DILocalVariable(name: "ap", arg: 4, scope: !5012, file: !4083, line: 739, type: !4982)
!5020 = !DILocation(line: 0, scope: !5012)
!5021 = !DILocation(line: 741, column: 9, scope: !5012)
!5022 = !DILocation(line: 741, column: 2, scope: !5012)
!5023 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !446, file: !446, line: 157, type: !5024, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5026)
!5024 = !DISubroutineType(types: !5025)
!5025 = !{null, !102, !111}
!5026 = !{!5027, !5028, !5029}
!5027 = !DILocalVariable(name: "c", arg: 1, scope: !5023, file: !446, line: 157, type: !102)
!5028 = !DILocalVariable(name: "n", arg: 2, scope: !5023, file: !446, line: 157, type: !111)
!5029 = !DILocalVariable(name: "i", scope: !5023, file: !446, line: 159, type: !111)
!5030 = !DILocation(line: 0, scope: !5023)
!5031 = !DILocation(line: 164, column: 16, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5033, file: !446, line: 164, column: 2)
!5033 = distinct !DILexicalBlock(scope: !5023, file: !446, line: 164, column: 2)
!5034 = !DILocation(line: 164, column: 2, scope: !5033)
!5035 = !DILocation(line: 165, column: 3, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5032, file: !446, line: 164, column: 26)
!5037 = !DILocation(line: 165, column: 13, scope: !5036)
!5038 = !DILocation(line: 164, column: 22, scope: !5032)
!5039 = distinct !{!5039, !5034, !5040}
!5040 = !DILocation(line: 166, column: 2, scope: !5033)
!5041 = !DILocation(line: 171, column: 1, scope: !5023)
!5042 = distinct !DISubprogram(name: "printk", scope: !446, file: !446, line: 203, type: !5043, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5045)
!5043 = !DISubroutineType(types: !5044)
!5044 = !{null, !269, null}
!5045 = !{!5046, !5047}
!5046 = !DILocalVariable(name: "fmt", arg: 1, scope: !5042, file: !446, line: 203, type: !269)
!5047 = !DILocalVariable(name: "ap", scope: !5042, file: !446, line: 205, type: !4982)
!5048 = !DILocation(line: 0, scope: !5042)
!5049 = !DILocation(line: 205, column: 2, scope: !5042)
!5050 = !DILocation(line: 205, column: 10, scope: !5042)
!5051 = !DILocation(line: 207, column: 2, scope: !5042)
!5052 = !DILocation(line: 209, column: 2, scope: !5042)
!5053 = !DILocation(line: 211, column: 2, scope: !5042)
!5054 = !DILocation(line: 212, column: 1, scope: !5042)
!5055 = distinct !DISubprogram(name: "snprintk", scope: !446, file: !446, line: 239, type: !5056, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5058)
!5056 = !DISubroutineType(types: !5057)
!5057 = !{!105, !102, !111, !269, null}
!5058 = !{!5059, !5060, !5061, !5062, !5063}
!5059 = !DILocalVariable(name: "str", arg: 1, scope: !5055, file: !446, line: 239, type: !102)
!5060 = !DILocalVariable(name: "size", arg: 2, scope: !5055, file: !446, line: 239, type: !111)
!5061 = !DILocalVariable(name: "fmt", arg: 3, scope: !5055, file: !446, line: 239, type: !269)
!5062 = !DILocalVariable(name: "ap", scope: !5055, file: !446, line: 241, type: !4982)
!5063 = !DILocalVariable(name: "ret", scope: !5055, file: !446, line: 242, type: !105)
!5064 = !DILocation(line: 0, scope: !5055)
!5065 = !DILocation(line: 241, column: 2, scope: !5055)
!5066 = !DILocation(line: 241, column: 10, scope: !5055)
!5067 = !DILocation(line: 244, column: 2, scope: !5055)
!5068 = !DILocation(line: 245, column: 8, scope: !5055)
!5069 = !DILocation(line: 246, column: 2, scope: !5055)
!5070 = !DILocation(line: 249, column: 1, scope: !5055)
!5071 = !DILocation(line: 248, column: 2, scope: !5055)
!5072 = distinct !DISubprogram(name: "vsnprintk", scope: !446, file: !446, line: 251, type: !5073, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5075)
!5073 = !DISubroutineType(types: !5074)
!5074 = !{!105, !102, !111, !269, !4982}
!5075 = !{!5076, !5077, !5078, !5079, !5080}
!5076 = !DILocalVariable(name: "str", arg: 1, scope: !5072, file: !446, line: 251, type: !102)
!5077 = !DILocalVariable(name: "size", arg: 2, scope: !5072, file: !446, line: 251, type: !111)
!5078 = !DILocalVariable(name: "fmt", arg: 3, scope: !5072, file: !446, line: 251, type: !269)
!5079 = !DILocalVariable(name: "ap", arg: 4, scope: !5072, file: !446, line: 251, type: !4982)
!5080 = !DILocalVariable(name: "ctx", scope: !5072, file: !446, line: 253, type: !5081)
!5081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !446, line: 217, size: 96, elements: !5082)
!5082 = !{!5083, !5084, !5085}
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5081, file: !446, line: 218, baseType: !102, size: 32)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5081, file: !446, line: 219, baseType: !105, size: 32, offset: 32)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5081, file: !446, line: 220, baseType: !105, size: 32, offset: 64)
!5086 = !DILocation(line: 0, scope: !5072)
!5087 = !DILocation(line: 253, column: 2, scope: !5072)
!5088 = !DILocation(line: 253, column: 21, scope: !5072)
!5089 = !DILocation(line: 253, column: 27, scope: !5072)
!5090 = !DILocation(line: 255, column: 2, scope: !5072)
!5091 = !DILocation(line: 257, column: 10, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5072, file: !446, line: 257, column: 6)
!5093 = !DILocation(line: 257, column: 22, scope: !5092)
!5094 = !DILocation(line: 257, column: 16, scope: !5092)
!5095 = !DILocation(line: 257, column: 6, scope: !5072)
!5096 = !DILocation(line: 258, column: 3, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5092, file: !446, line: 257, column: 27)
!5098 = !DILocation(line: 258, column: 18, scope: !5097)
!5099 = !DILocation(line: 259, column: 2, scope: !5097)
!5100 = !DILocation(line: 262, column: 1, scope: !5072)
!5101 = !DILocation(line: 261, column: 2, scope: !5072)
!5102 = distinct !DISubprogram(name: "str_out", scope: !446, file: !446, line: 223, type: !5103, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5106)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{!105, !105, !5105}
!5105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5081, size: 32)
!5106 = !{!5107, !5108}
!5107 = !DILocalVariable(name: "c", arg: 1, scope: !5102, file: !446, line: 223, type: !105)
!5108 = !DILocalVariable(name: "ctx", arg: 2, scope: !5102, file: !446, line: 223, type: !5105)
!5109 = !DILocation(line: 0, scope: !5102)
!5110 = !DILocation(line: 225, column: 11, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5102, file: !446, line: 225, column: 6)
!5112 = !DILocation(line: 225, column: 15, scope: !5111)
!5113 = !DILocation(line: 0, scope: !5111)
!5114 = !DILocation(line: 225, column: 23, scope: !5111)
!5115 = !DILocation(line: 225, column: 45, scope: !5111)
!5116 = !DILocation(line: 225, column: 37, scope: !5111)
!5117 = !DILocation(line: 225, column: 6, scope: !5102)
!5118 = !DILocation(line: 226, column: 8, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5111, file: !446, line: 225, column: 50)
!5120 = !DILocation(line: 226, column: 13, scope: !5119)
!5121 = !DILocation(line: 227, column: 3, scope: !5119)
!5122 = !DILocation(line: 230, column: 29, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5102, file: !446, line: 230, column: 6)
!5124 = !DILocation(line: 230, column: 17, scope: !5123)
!5125 = !DILocation(line: 230, column: 6, scope: !5102)
!5126 = !DILocation(line: 231, column: 22, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5123, file: !446, line: 230, column: 34)
!5128 = !DILocation(line: 231, column: 3, scope: !5127)
!5129 = !DILocation(line: 231, column: 26, scope: !5127)
!5130 = !DILocation(line: 232, column: 2, scope: !5127)
!5131 = !DILocation(line: 233, column: 28, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5123, file: !446, line: 232, column: 9)
!5133 = !DILocation(line: 233, column: 22, scope: !5132)
!5134 = !DILocation(line: 233, column: 3, scope: !5132)
!5135 = !DILocation(line: 233, column: 26, scope: !5132)
!5136 = !DILocation(line: 237, column: 1, scope: !5102)
!5137 = distinct !DISubprogram(name: "z_thread_entry", scope: !5138, file: !5138, line: 30, type: !5139, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2649, retainedNodes: !5141)
!5138 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5139 = !DISubroutineType(types: !5140)
!5140 = !{null, !254, !104, !104, !104}
!5141 = !{!5142, !5143, !5144, !5145}
!5142 = !DILocalVariable(name: "entry", arg: 1, scope: !5137, file: !5138, line: 30, type: !254)
!5143 = !DILocalVariable(name: "p1", arg: 2, scope: !5137, file: !5138, line: 31, type: !104)
!5144 = !DILocalVariable(name: "p2", arg: 3, scope: !5137, file: !5138, line: 31, type: !104)
!5145 = !DILocalVariable(name: "p3", arg: 4, scope: !5137, file: !5138, line: 31, type: !104)
!5146 = !DILocation(line: 0, scope: !5137)
!5147 = !DILocation(line: 36, column: 2, scope: !5137)
!5148 = !DILocation(line: 38, column: 17, scope: !5137)
!5149 = !DILocation(line: 38, column: 2, scope: !5137)
!5150 = !DILocation(line: 45, column: 2, scope: !5137)
!5151 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !5152, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2649, retainedNodes: !397)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{!5154}
!5154 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !5155)
!5155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5156, size: 32)
!5156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !5157)
!5157 = !{!5158, !5216, !5228, !5229, !5230, !5231, !5237, !5252}
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5156, file: !127, line: 247, baseType: !5159, size: 384)
!5159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !5160)
!5160 = !{!5161, !5185, !5192, !5193, !5194, !5203, !5204, !5205}
!5161 = !DIDerivedType(tag: DW_TAG_member, scope: !5159, file: !127, line: 60, baseType: !5162, size: 64)
!5162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5159, file: !127, line: 60, size: 64, elements: !5163)
!5163 = !{!5164, !5179}
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5162, file: !127, line: 61, baseType: !5165, size: 64)
!5165 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !5166)
!5166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !5167)
!5167 = !{!5168, !5174}
!5168 = !DIDerivedType(tag: DW_TAG_member, scope: !5166, file: !137, line: 38, baseType: !5169, size: 32)
!5169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5166, file: !137, line: 38, size: 32, elements: !5170)
!5170 = !{!5171, !5173}
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5169, file: !137, line: 39, baseType: !5172, size: 32)
!5172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 32)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5169, file: !137, line: 40, baseType: !5172, size: 32)
!5174 = !DIDerivedType(tag: DW_TAG_member, scope: !5166, file: !137, line: 42, baseType: !5175, size: 32, offset: 32)
!5175 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5166, file: !137, line: 42, size: 32, elements: !5176)
!5176 = !{!5177, !5178}
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5175, file: !137, line: 43, baseType: !5172, size: 32)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5175, file: !137, line: 44, baseType: !5172, size: 32)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5162, file: !127, line: 62, baseType: !5180, size: 64)
!5180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !5181)
!5181 = !{!5182}
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5180, file: !153, line: 50, baseType: !5183, size: 64)
!5183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5184, size: 64, elements: !158)
!5184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5180, size: 32)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5159, file: !127, line: 68, baseType: !5186, size: 32, offset: 64)
!5186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5187, size: 32)
!5187 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !5188)
!5188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !5189)
!5189 = !{!5190}
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5188, file: !163, line: 232, baseType: !5191, size: 64)
!5191 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !5166)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5159, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5159, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!5194 = !DIDerivedType(tag: DW_TAG_member, scope: !5159, file: !127, line: 90, baseType: !5195, size: 16, offset: 112)
!5195 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5159, file: !127, line: 90, size: 16, elements: !5196)
!5196 = !{!5197, !5202}
!5197 = !DIDerivedType(tag: DW_TAG_member, scope: !5195, file: !127, line: 91, baseType: !5198, size: 16)
!5198 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5195, file: !127, line: 91, size: 16, elements: !5199)
!5199 = !{!5200, !5201}
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5198, file: !127, line: 96, baseType: !179, size: 8)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5198, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5195, file: !127, line: 100, baseType: !183, size: 16)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5159, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5159, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5159, file: !127, line: 131, baseType: !5206, size: 192, offset: 192)
!5206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !5207)
!5207 = !{!5208, !5209, !5215}
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5206, file: !163, line: 245, baseType: !5165, size: 64)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5206, file: !163, line: 246, baseType: !5210, size: 32, offset: 64)
!5210 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !5211)
!5211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5212, size: 32)
!5212 = !DISubroutineType(types: !5213)
!5213 = !{null, !5214}
!5214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5206, size: 32)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5206, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5156, file: !127, line: 250, baseType: !5217, size: 288, offset: 384)
!5217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !5218)
!5218 = !{!5219, !5220, !5221, !5222, !5223, !5224, !5225, !5226, !5227}
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5217, file: !200, line: 26, baseType: !113, size: 32)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5217, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5217, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5217, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5217, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5217, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5217, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5217, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5217, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5156, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5156, file: !127, line: 256, baseType: !5187, size: 64, offset: 704)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5156, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5156, file: !127, line: 300, baseType: !5232, size: 96, offset: 800)
!5232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !5233)
!5233 = !{!5234, !5235, !5236}
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5232, file: !127, line: 153, baseType: !22, size: 32)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5232, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5232, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5156, file: !127, line: 325, baseType: !5238, size: 32, offset: 896)
!5238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5239, size: 32)
!5239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !5240)
!5240 = !{!5241, !5247, !5248}
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5239, file: !122, line: 5074, baseType: !5242, size: 96)
!5242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !5243)
!5243 = !{!5244, !5245, !5246}
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5242, file: !226, line: 57, baseType: !229, size: 32)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5242, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5242, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5239, file: !122, line: 5075, baseType: !5187, size: 64, offset: 96)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5239, file: !122, line: 5076, baseType: !5249, size: 32, offset: 160)
!5249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !5250)
!5250 = !{!5251}
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5249, file: !236, line: 52, baseType: !22, size: 32)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5156, file: !127, line: 343, baseType: !5253, size: 64, offset: 928)
!5253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !5254)
!5254 = !{!5255, !5256}
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5253, file: !200, line: 63, baseType: !113, size: 32)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5253, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!5257 = !DILocation(line: 535, column: 9, scope: !5151)
!5258 = !DILocation(line: 535, column: 2, scope: !5151)
!5259 = distinct !DISubprogram(name: "k_thread_abort", scope: !3497, file: !3497, line: 188, type: !5260, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2649, retainedNodes: !5262)
!5260 = !DISubroutineType(types: !5261)
!5261 = !{null, !5154}
!5262 = !{!5263}
!5263 = !DILocalVariable(name: "thread", arg: 1, scope: !5259, file: !3497, line: 188, type: !5154)
!5264 = !DILocation(line: 0, scope: !5259)
!5265 = !DILocation(line: 197, column: 2, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5259, file: !3497, line: 197, column: 2)
!5267 = !{i64 2155066090}
!5268 = !DILocation(line: 198, column: 2, scope: !5259)
!5269 = !DILocation(line: 199, column: 1, scope: !5259)
!5270 = distinct !DISubprogram(name: "z_current_get", scope: !3497, file: !3497, line: 173, type: !5152, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2649, retainedNodes: !397)
!5271 = !DILocation(line: 180, column: 2, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5270, file: !3497, line: 180, column: 2)
!5273 = !{i64 2155066022}
!5274 = !DILocation(line: 181, column: 9, scope: !5270)
!5275 = !DILocation(line: 181, column: 2, scope: !5270)
!5276 = distinct !DISubprogram(name: "sys_heap_free", scope: !5277, file: !5277, line: 163, type: !5278, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5286)
!5277 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5278 = !DISubroutineType(types: !5279)
!5279 = !{null, !5280, !104}
!5280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5281, size: 32)
!5281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !5282)
!5282 = !{!5283, !5284, !5285}
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5281, file: !226, line: 57, baseType: !2668, size: 32)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5281, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5281, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!5286 = !{!5287, !5288, !5289, !5290}
!5287 = !DILocalVariable(name: "heap", arg: 1, scope: !5276, file: !5277, line: 163, type: !5280)
!5288 = !DILocalVariable(name: "mem", arg: 2, scope: !5276, file: !5277, line: 163, type: !104)
!5289 = !DILocalVariable(name: "h", scope: !5276, file: !5277, line: 168, type: !2668)
!5290 = !DILocalVariable(name: "c", scope: !5276, file: !5277, line: 169, type: !2673)
!5291 = !DILocation(line: 0, scope: !5276)
!5292 = !DILocation(line: 165, column: 10, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5276, file: !5277, line: 165, column: 6)
!5294 = !DILocation(line: 165, column: 6, scope: !5276)
!5295 = !DILocation(line: 168, column: 27, scope: !5276)
!5296 = !DILocation(line: 169, column: 16, scope: !5276)
!5297 = !{i32 0, i32 536870912}
!5298 = !DILocation(line: 175, column: 2, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5300, file: !5277, line: 175, column: 2)
!5300 = distinct !DILexicalBlock(scope: !5276, file: !5277, line: 175, column: 2)
!5301 = !DILocation(line: 175, column: 2, scope: !5300)
!5302 = !DILocation(line: 175, column: 2, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5299, file: !5277, line: 175, column: 2)
!5304 = !DILocation(line: 183, column: 2, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5306, file: !5277, line: 183, column: 2)
!5306 = distinct !DILexicalBlock(scope: !5276, file: !5277, line: 183, column: 2)
!5307 = !DILocation(line: 183, column: 2, scope: !5306)
!5308 = !DILocation(line: 183, column: 2, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5305, file: !5277, line: 183, column: 2)
!5310 = !DILocation(line: 187, column: 2, scope: !5276)
!5311 = !DILocation(line: 197, column: 2, scope: !5276)
!5312 = !DILocation(line: 198, column: 1, scope: !5276)
!5313 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5277, file: !5277, line: 157, type: !5314, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5316)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{!2673, !2668, !104}
!5316 = !{!5317, !5318, !5319, !5320}
!5317 = !DILocalVariable(name: "h", arg: 1, scope: !5313, file: !5277, line: 157, type: !2668)
!5318 = !DILocalVariable(name: "p", arg: 2, scope: !5313, file: !5277, line: 157, type: !104)
!5319 = !DILocalVariable(name: "mem", scope: !5313, file: !5277, line: 159, type: !432)
!5320 = !DILocalVariable(name: "base", scope: !5313, file: !5277, line: 159, type: !432)
!5321 = !DILocation(line: 0, scope: !5313)
!5322 = !DILocation(line: 159, column: 39, scope: !5313)
!5323 = !DILocation(line: 160, column: 14, scope: !5313)
!5324 = !DILocation(line: 160, column: 38, scope: !5313)
!5325 = !DILocation(line: 160, column: 46, scope: !5313)
!5326 = !DILocation(line: 160, column: 2, scope: !5313)
!5327 = distinct !DISubprogram(name: "chunk_used", scope: !2655, file: !2655, line: 137, type: !5328, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5330)
!5328 = !DISubroutineType(types: !5329)
!5329 = !{!492, !2668, !2673}
!5330 = !{!5331, !5332}
!5331 = !DILocalVariable(name: "h", arg: 1, scope: !5327, file: !2655, line: 137, type: !2668)
!5332 = !DILocalVariable(name: "c", arg: 2, scope: !5327, file: !2655, line: 137, type: !2673)
!5333 = !DILocation(line: 0, scope: !5327)
!5334 = !DILocation(line: 139, column: 9, scope: !5327)
!5335 = !DILocation(line: 139, column: 42, scope: !5327)
!5336 = !DILocation(line: 139, column: 2, scope: !5327)
!5337 = distinct !DISubprogram(name: "right_chunk", scope: !2655, file: !2655, line: 204, type: !5338, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5340)
!5338 = !DISubroutineType(types: !5339)
!5339 = !{!2673, !2668, !2673}
!5340 = !{!5341, !5342}
!5341 = !DILocalVariable(name: "h", arg: 1, scope: !5337, file: !2655, line: 204, type: !2668)
!5342 = !DILocalVariable(name: "c", arg: 2, scope: !5337, file: !2655, line: 204, type: !2673)
!5343 = !DILocation(line: 0, scope: !5337)
!5344 = !DILocation(line: 206, column: 13, scope: !5337)
!5345 = !DILocation(line: 206, column: 11, scope: !5337)
!5346 = !DILocation(line: 206, column: 2, scope: !5337)
!5347 = distinct !DISubprogram(name: "left_chunk", scope: !2655, file: !2655, line: 199, type: !5338, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5348)
!5348 = !{!5349, !5350}
!5349 = !DILocalVariable(name: "h", arg: 1, scope: !5347, file: !2655, line: 199, type: !2668)
!5350 = !DILocalVariable(name: "c", arg: 2, scope: !5347, file: !2655, line: 199, type: !2673)
!5351 = !DILocation(line: 0, scope: !5347)
!5352 = !DILocation(line: 201, column: 13, scope: !5347)
!5353 = !DILocation(line: 201, column: 11, scope: !5347)
!5354 = !DILocation(line: 201, column: 2, scope: !5347)
!5355 = distinct !DISubprogram(name: "set_chunk_used", scope: !2655, file: !2655, line: 147, type: !5356, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5358)
!5356 = !DISubroutineType(types: !5357)
!5357 = !{null, !2668, !2673, !492}
!5358 = !{!5359, !5360, !5361, !5362, !5363}
!5359 = !DILocalVariable(name: "h", arg: 1, scope: !5355, file: !2655, line: 147, type: !2668)
!5360 = !DILocalVariable(name: "c", arg: 2, scope: !5355, file: !2655, line: 147, type: !2673)
!5361 = !DILocalVariable(name: "used", arg: 3, scope: !5355, file: !2655, line: 147, type: !492)
!5362 = !DILocalVariable(name: "buf", scope: !5355, file: !2655, line: 149, type: !2662)
!5363 = !DILocalVariable(name: "cmem", scope: !5355, file: !2655, line: 150, type: !104)
!5364 = !DILocation(line: 0, scope: !5355)
!5365 = !DILocation(line: 149, column: 22, scope: !5355)
!5366 = !DILocation(line: 0, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5368, file: !2655, line: 159, column: 7)
!5368 = distinct !DILexicalBlock(scope: !5369, file: !2655, line: 158, column: 9)
!5369 = distinct !DILexicalBlock(scope: !5355, file: !2655, line: 152, column: 6)
!5370 = !DILocation(line: 159, column: 7, scope: !5368)
!5371 = !DILocation(line: 165, column: 1, scope: !5355)
!5372 = distinct !DISubprogram(name: "free_chunk", scope: !5277, file: !5277, line: 133, type: !5373, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5375)
!5373 = !DISubroutineType(types: !5374)
!5374 = !{null, !2668, !2673}
!5375 = !{!5376, !5377}
!5376 = !DILocalVariable(name: "h", arg: 1, scope: !5372, file: !5277, line: 133, type: !2668)
!5377 = !DILocalVariable(name: "c", arg: 2, scope: !5372, file: !5277, line: 133, type: !2673)
!5378 = !DILocation(line: 0, scope: !5372)
!5379 = !DILocation(line: 136, column: 21, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5372, file: !5277, line: 136, column: 6)
!5381 = !DILocation(line: 136, column: 7, scope: !5380)
!5382 = !DILocation(line: 136, column: 6, scope: !5372)
!5383 = !DILocation(line: 137, column: 3, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5380, file: !5277, line: 136, column: 41)
!5385 = !DILocation(line: 138, column: 22, scope: !5384)
!5386 = !DILocation(line: 138, column: 3, scope: !5384)
!5387 = !DILocation(line: 139, column: 2, scope: !5384)
!5388 = !DILocation(line: 142, column: 21, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5372, file: !5277, line: 142, column: 6)
!5390 = !DILocation(line: 142, column: 7, scope: !5389)
!5391 = !DILocation(line: 142, column: 6, scope: !5372)
!5392 = !DILocation(line: 143, column: 3, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5389, file: !5277, line: 142, column: 40)
!5394 = !DILocation(line: 144, column: 19, scope: !5393)
!5395 = !DILocation(line: 144, column: 3, scope: !5393)
!5396 = !DILocation(line: 145, column: 7, scope: !5393)
!5397 = !DILocation(line: 146, column: 2, scope: !5393)
!5398 = !DILocation(line: 148, column: 2, scope: !5372)
!5399 = !DILocation(line: 149, column: 1, scope: !5372)
!5400 = distinct !DISubprogram(name: "free_list_remove", scope: !5277, file: !5277, line: 60, type: !5373, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5401)
!5401 = !{!5402, !5403, !5404}
!5402 = !DILocalVariable(name: "h", arg: 1, scope: !5400, file: !5277, line: 60, type: !2668)
!5403 = !DILocalVariable(name: "c", arg: 2, scope: !5400, file: !5277, line: 60, type: !2673)
!5404 = !DILocalVariable(name: "bidx", scope: !5405, file: !5277, line: 63, type: !105)
!5405 = distinct !DILexicalBlock(scope: !5406, file: !5277, line: 62, column: 31)
!5406 = distinct !DILexicalBlock(scope: !5400, file: !5277, line: 62, column: 6)
!5407 = !DILocation(line: 0, scope: !5400)
!5408 = !DILocation(line: 63, column: 28, scope: !5405)
!5409 = !{i32 0, i32 32768}
!5410 = !DILocation(line: 63, column: 14, scope: !5405)
!5411 = !DILocation(line: 0, scope: !5405)
!5412 = !DILocation(line: 64, column: 3, scope: !5405)
!5413 = !DILocation(line: 66, column: 1, scope: !5400)
!5414 = distinct !DISubprogram(name: "merge_chunks", scope: !5277, file: !5277, line: 125, type: !5415, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5417)
!5415 = !DISubroutineType(types: !5416)
!5416 = !{null, !2668, !2673, !2673}
!5417 = !{!5418, !5419, !5420, !5421}
!5418 = !DILocalVariable(name: "h", arg: 1, scope: !5414, file: !5277, line: 125, type: !2668)
!5419 = !DILocalVariable(name: "lc", arg: 2, scope: !5414, file: !5277, line: 125, type: !2673)
!5420 = !DILocalVariable(name: "rc", arg: 3, scope: !5414, file: !5277, line: 125, type: !2673)
!5421 = !DILocalVariable(name: "newsz", scope: !5414, file: !5277, line: 127, type: !5422)
!5422 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2655, line: 62, baseType: !113)
!5423 = !DILocation(line: 0, scope: !5414)
!5424 = !DILocation(line: 127, column: 20, scope: !5414)
!5425 = !DILocation(line: 127, column: 40, scope: !5414)
!5426 = !DILocation(line: 127, column: 38, scope: !5414)
!5427 = !DILocation(line: 129, column: 2, scope: !5414)
!5428 = !DILocation(line: 130, column: 25, scope: !5414)
!5429 = !DILocation(line: 130, column: 2, scope: !5414)
!5430 = !DILocation(line: 131, column: 1, scope: !5414)
!5431 = distinct !DISubprogram(name: "free_list_add", scope: !5277, file: !5277, line: 98, type: !5373, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5432)
!5432 = !{!5433, !5434, !5435}
!5433 = !DILocalVariable(name: "h", arg: 1, scope: !5431, file: !5277, line: 98, type: !2668)
!5434 = !DILocalVariable(name: "c", arg: 2, scope: !5431, file: !5277, line: 98, type: !2673)
!5435 = !DILocalVariable(name: "bidx", scope: !5436, file: !5277, line: 101, type: !105)
!5436 = distinct !DILexicalBlock(scope: !5437, file: !5277, line: 100, column: 31)
!5437 = distinct !DILexicalBlock(scope: !5431, file: !5277, line: 100, column: 6)
!5438 = !DILocation(line: 0, scope: !5431)
!5439 = !DILocation(line: 101, column: 28, scope: !5436)
!5440 = !DILocation(line: 101, column: 14, scope: !5436)
!5441 = !DILocation(line: 0, scope: !5436)
!5442 = !DILocation(line: 102, column: 3, scope: !5436)
!5443 = !DILocation(line: 104, column: 1, scope: !5431)
!5444 = distinct !DISubprogram(name: "chunk_size", scope: !2655, file: !2655, line: 142, type: !5445, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5447)
!5445 = !DISubroutineType(types: !5446)
!5446 = !{!5422, !2668, !2673}
!5447 = !{!5448, !5449}
!5448 = !DILocalVariable(name: "h", arg: 1, scope: !5444, file: !2655, line: 142, type: !2668)
!5449 = !DILocalVariable(name: "c", arg: 2, scope: !5444, file: !2655, line: 142, type: !2673)
!5450 = !DILocation(line: 0, scope: !5444)
!5451 = !DILocation(line: 144, column: 9, scope: !5444)
!5452 = !DILocation(line: 144, column: 42, scope: !5444)
!5453 = !DILocation(line: 144, column: 2, scope: !5444)
!5454 = distinct !DISubprogram(name: "bucket_idx", scope: !2655, file: !2655, line: 250, type: !5455, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5457)
!5455 = !DISubroutineType(types: !5456)
!5456 = !{!105, !2668, !5422}
!5457 = !{!5458, !5459, !5460}
!5458 = !DILocalVariable(name: "h", arg: 1, scope: !5454, file: !2655, line: 250, type: !2668)
!5459 = !DILocalVariable(name: "sz", arg: 2, scope: !5454, file: !2655, line: 250, type: !5422)
!5460 = !DILocalVariable(name: "usable_sz", scope: !5454, file: !2655, line: 252, type: !32)
!5461 = !DILocation(line: 0, scope: !5454)
!5462 = !DILocation(line: 252, column: 32, scope: !5454)
!5463 = !DILocation(line: 252, column: 30, scope: !5454)
!5464 = !DILocation(line: 252, column: 50, scope: !5454)
!5465 = !DILocation(line: 253, column: 14, scope: !5454)
!5466 = !{i32 0, i32 33}
!5467 = !DILocation(line: 253, column: 12, scope: !5454)
!5468 = !DILocation(line: 253, column: 2, scope: !5454)
!5469 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5277, file: !5277, line: 68, type: !5470, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5472)
!5470 = !DISubroutineType(types: !5471)
!5471 = !{null, !2668, !2673, !105}
!5472 = !{!5473, !5474, !5475, !5476, !5478, !5481}
!5473 = !DILocalVariable(name: "h", arg: 1, scope: !5469, file: !5277, line: 68, type: !2668)
!5474 = !DILocalVariable(name: "c", arg: 2, scope: !5469, file: !5277, line: 68, type: !2673)
!5475 = !DILocalVariable(name: "bidx", arg: 3, scope: !5469, file: !5277, line: 68, type: !105)
!5476 = !DILocalVariable(name: "b", scope: !5469, file: !5277, line: 70, type: !5477)
!5477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 32)
!5478 = !DILocalVariable(name: "second", scope: !5479, file: !5277, line: 84, type: !2673)
!5479 = distinct !DILexicalBlock(scope: !5480, file: !5277, line: 80, column: 9)
!5480 = distinct !DILexicalBlock(scope: !5469, file: !5277, line: 72, column: 6)
!5481 = !DILocalVariable(name: "first", scope: !5479, file: !5277, line: 85, type: !2673)
!5482 = !DILocation(line: 0, scope: !5469)
!5483 = !DILocation(line: 72, column: 9, scope: !5480)
!5484 = !DILocation(line: 72, column: 14, scope: !5480)
!5485 = !DILocation(line: 72, column: 6, scope: !5469)
!5486 = !DILocation(line: 76, column: 23, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5480, file: !5277, line: 72, column: 21)
!5488 = !DILocation(line: 76, column: 6, scope: !5487)
!5489 = !DILocation(line: 76, column: 20, scope: !5487)
!5490 = !DILocation(line: 77, column: 11, scope: !5487)
!5491 = !DILocation(line: 78, column: 3, scope: !5487)
!5492 = !DILocation(line: 79, column: 3, scope: !5487)
!5493 = !DILocation(line: 80, column: 2, scope: !5487)
!5494 = !DILocation(line: 0, scope: !5479)
!5495 = !DILocation(line: 85, column: 21, scope: !5479)
!5496 = !{i32 0, i32 65536}
!5497 = !DILocation(line: 87, column: 3, scope: !5479)
!5498 = !DILocation(line: 88, column: 3, scope: !5479)
!5499 = !DILocation(line: 89, column: 3, scope: !5479)
!5500 = !DILocation(line: 90, column: 3, scope: !5479)
!5501 = !DILocation(line: 96, column: 1, scope: !5469)
!5502 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2655, file: !2655, line: 187, type: !5415, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5503)
!5503 = !{!5504, !5505, !5506}
!5504 = !DILocalVariable(name: "h", arg: 1, scope: !5502, file: !2655, line: 187, type: !2668)
!5505 = !DILocalVariable(name: "c", arg: 2, scope: !5502, file: !2655, line: 187, type: !2673)
!5506 = !DILocalVariable(name: "prev", arg: 3, scope: !5502, file: !2655, line: 188, type: !2673)
!5507 = !DILocation(line: 0, scope: !5502)
!5508 = !DILocation(line: 190, column: 2, scope: !5502)
!5509 = !DILocation(line: 191, column: 1, scope: !5502)
!5510 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2655, file: !2655, line: 193, type: !5415, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5511)
!5511 = !{!5512, !5513, !5514}
!5512 = !DILocalVariable(name: "h", arg: 1, scope: !5510, file: !2655, line: 193, type: !2668)
!5513 = !DILocalVariable(name: "c", arg: 2, scope: !5510, file: !2655, line: 193, type: !2673)
!5514 = !DILocalVariable(name: "next", arg: 3, scope: !5510, file: !2655, line: 194, type: !2673)
!5515 = !DILocation(line: 0, scope: !5510)
!5516 = !DILocation(line: 196, column: 2, scope: !5510)
!5517 = !DILocation(line: 197, column: 1, scope: !5510)
!5518 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2655, file: !2655, line: 177, type: !5338, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5519)
!5519 = !{!5520, !5521}
!5520 = !DILocalVariable(name: "h", arg: 1, scope: !5518, file: !2655, line: 177, type: !2668)
!5521 = !DILocalVariable(name: "c", arg: 2, scope: !5518, file: !2655, line: 177, type: !2673)
!5522 = !DILocation(line: 0, scope: !5518)
!5523 = !DILocation(line: 179, column: 9, scope: !5518)
!5524 = !DILocation(line: 179, column: 2, scope: !5518)
!5525 = distinct !DISubprogram(name: "chunk_field", scope: !2655, file: !2655, line: 107, type: !5526, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5528)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{!2673, !2668, !2673, !2654}
!5528 = !{!5529, !5530, !5531, !5532, !5533}
!5529 = !DILocalVariable(name: "h", arg: 1, scope: !5525, file: !2655, line: 107, type: !2668)
!5530 = !DILocalVariable(name: "c", arg: 2, scope: !5525, file: !2655, line: 107, type: !2673)
!5531 = !DILocalVariable(name: "f", arg: 3, scope: !5525, file: !2655, line: 108, type: !2654)
!5532 = !DILocalVariable(name: "buf", scope: !5525, file: !2655, line: 110, type: !2662)
!5533 = !DILocalVariable(name: "cmem", scope: !5525, file: !2655, line: 111, type: !104)
!5534 = !DILocation(line: 0, scope: !5525)
!5535 = !DILocation(line: 110, column: 22, scope: !5525)
!5536 = !DILocation(line: 111, column: 15, scope: !5525)
!5537 = !DILocation(line: 116, column: 11, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !2655, line: 115, column: 9)
!5539 = distinct !DILexicalBlock(scope: !5525, file: !2655, line: 113, column: 6)
!5540 = !DILocation(line: 116, column: 10, scope: !5538)
!5541 = !DILocation(line: 118, column: 1, scope: !5525)
!5542 = distinct !DISubprogram(name: "chunk_buf", scope: !2655, file: !2655, line: 101, type: !5543, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5545)
!5543 = !DISubroutineType(types: !5544)
!5544 = !{!2662, !2668}
!5545 = !{!5546}
!5546 = !DILocalVariable(name: "h", arg: 1, scope: !5542, file: !2655, line: 101, type: !2668)
!5547 = !DILocation(line: 0, scope: !5542)
!5548 = !DILocation(line: 104, column: 9, scope: !5542)
!5549 = !DILocation(line: 104, column: 2, scope: !5542)
!5550 = distinct !DISubprogram(name: "chunk_set", scope: !2655, file: !2655, line: 120, type: !5551, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5553)
!5551 = !DISubroutineType(types: !5552)
!5552 = !{null, !2668, !2673, !2654, !2673}
!5553 = !{!5554, !5555, !5556, !5557, !5558, !5559}
!5554 = !DILocalVariable(name: "h", arg: 1, scope: !5550, file: !2655, line: 120, type: !2668)
!5555 = !DILocalVariable(name: "c", arg: 2, scope: !5550, file: !2655, line: 120, type: !2673)
!5556 = !DILocalVariable(name: "f", arg: 3, scope: !5550, file: !2655, line: 121, type: !2654)
!5557 = !DILocalVariable(name: "val", arg: 4, scope: !5550, file: !2655, line: 121, type: !2673)
!5558 = !DILocalVariable(name: "buf", scope: !5550, file: !2655, line: 125, type: !2662)
!5559 = !DILocalVariable(name: "cmem", scope: !5550, file: !2655, line: 126, type: !104)
!5560 = !DILocation(line: 0, scope: !5550)
!5561 = !DILocation(line: 125, column: 22, scope: !5550)
!5562 = !DILocation(line: 126, column: 15, scope: !5550)
!5563 = !DILocation(line: 133, column: 27, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !2655, line: 131, column: 9)
!5565 = distinct !DILexicalBlock(scope: !5550, file: !2655, line: 128, column: 6)
!5566 = !DILocation(line: 133, column: 4, scope: !5564)
!5567 = !DILocation(line: 133, column: 3, scope: !5564)
!5568 = !DILocation(line: 133, column: 25, scope: !5564)
!5569 = !DILocation(line: 135, column: 1, scope: !5550)
!5570 = distinct !DISubprogram(name: "min_chunk_size", scope: !2655, file: !2655, line: 240, type: !5571, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5573)
!5571 = !DISubroutineType(types: !5572)
!5572 = !{!5422, !2668}
!5573 = !{!5574}
!5574 = !DILocalVariable(name: "h", arg: 1, scope: !5570, file: !2655, line: 240, type: !2668)
!5575 = !DILocation(line: 0, scope: !5570)
!5576 = !DILocation(line: 242, column: 9, scope: !5570)
!5577 = !DILocation(line: 242, column: 2, scope: !5570)
!5578 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2655, file: !2655, line: 235, type: !5579, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5581)
!5579 = !DISubroutineType(types: !5580)
!5580 = !{!5422, !2668, !111}
!5581 = !{!5582, !5583}
!5582 = !DILocalVariable(name: "h", arg: 1, scope: !5578, file: !2655, line: 235, type: !2668)
!5583 = !DILocalVariable(name: "bytes", arg: 2, scope: !5578, file: !2655, line: 235, type: !111)
!5584 = !DILocation(line: 0, scope: !5578)
!5585 = !DILocation(line: 237, column: 39, scope: !5578)
!5586 = !DILocation(line: 237, column: 9, scope: !5578)
!5587 = !DILocation(line: 237, column: 2, scope: !5578)
!5588 = distinct !DISubprogram(name: "chunksz", scope: !2655, file: !2655, line: 230, type: !5589, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5591)
!5589 = !DISubroutineType(types: !5590)
!5590 = !{!5422, !111}
!5591 = !{!5592}
!5592 = !DILocalVariable(name: "bytes", arg: 1, scope: !5588, file: !2655, line: 230, type: !111)
!5593 = !DILocation(line: 0, scope: !5588)
!5594 = !DILocation(line: 232, column: 29, scope: !5588)
!5595 = !DILocation(line: 232, column: 35, scope: !5588)
!5596 = !DILocation(line: 232, column: 2, scope: !5588)
!5597 = distinct !DISubprogram(name: "set_chunk_size", scope: !2655, file: !2655, line: 172, type: !5598, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5600)
!5598 = !DISubroutineType(types: !5599)
!5599 = !{null, !2668, !2673, !5422}
!5600 = !{!5601, !5602, !5603}
!5601 = !DILocalVariable(name: "h", arg: 1, scope: !5597, file: !2655, line: 172, type: !2668)
!5602 = !DILocalVariable(name: "c", arg: 2, scope: !5597, file: !2655, line: 172, type: !2673)
!5603 = !DILocalVariable(name: "size", arg: 3, scope: !5597, file: !2655, line: 172, type: !5422)
!5604 = !DILocation(line: 0, scope: !5597)
!5605 = !DILocation(line: 174, column: 38, scope: !5597)
!5606 = !DILocation(line: 174, column: 2, scope: !5597)
!5607 = !DILocation(line: 175, column: 1, scope: !5597)
!5608 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2655, file: !2655, line: 209, type: !5598, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5609)
!5609 = !{!5610, !5611, !5612}
!5610 = !DILocalVariable(name: "h", arg: 1, scope: !5608, file: !2655, line: 209, type: !2668)
!5611 = !DILocalVariable(name: "c", arg: 2, scope: !5608, file: !2655, line: 209, type: !2673)
!5612 = !DILocalVariable(name: "size", arg: 3, scope: !5608, file: !2655, line: 210, type: !5422)
!5613 = !DILocation(line: 0, scope: !5608)
!5614 = !DILocation(line: 212, column: 2, scope: !5608)
!5615 = !DILocation(line: 213, column: 1, scope: !5608)
!5616 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5277, file: !5277, line: 34, type: !5470, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5617)
!5617 = !{!5618, !5619, !5620, !5621, !5622, !5625}
!5618 = !DILocalVariable(name: "h", arg: 1, scope: !5616, file: !5277, line: 34, type: !2668)
!5619 = !DILocalVariable(name: "c", arg: 2, scope: !5616, file: !5277, line: 34, type: !2673)
!5620 = !DILocalVariable(name: "bidx", arg: 3, scope: !5616, file: !5277, line: 34, type: !105)
!5621 = !DILocalVariable(name: "b", scope: !5616, file: !5277, line: 36, type: !5477)
!5622 = !DILocalVariable(name: "first", scope: !5623, file: !5277, line: 47, type: !2673)
!5623 = distinct !DILexicalBlock(scope: !5624, file: !5277, line: 46, column: 9)
!5624 = distinct !DILexicalBlock(scope: !5616, file: !5277, line: 42, column: 6)
!5625 = !DILocalVariable(name: "second", scope: !5623, file: !5277, line: 48, type: !2673)
!5626 = !DILocation(line: 0, scope: !5616)
!5627 = !DILocation(line: 36, column: 29, scope: !5616)
!5628 = !DILocation(line: 42, column: 6, scope: !5624)
!5629 = !DILocation(line: 42, column: 28, scope: !5624)
!5630 = !DILocation(line: 42, column: 6, scope: !5616)
!5631 = !DILocation(line: 44, column: 24, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5624, file: !5277, line: 42, column: 34)
!5633 = !DILocation(line: 44, column: 23, scope: !5632)
!5634 = !DILocation(line: 44, column: 6, scope: !5632)
!5635 = !DILocation(line: 44, column: 20, scope: !5632)
!5636 = !DILocation(line: 45, column: 6, scope: !5632)
!5637 = !DILocation(line: 45, column: 11, scope: !5632)
!5638 = !DILocation(line: 46, column: 2, scope: !5632)
!5639 = !DILocation(line: 47, column: 21, scope: !5623)
!5640 = !DILocation(line: 0, scope: !5623)
!5641 = !DILocation(line: 50, column: 6, scope: !5623)
!5642 = !DILocation(line: 50, column: 11, scope: !5623)
!5643 = !DILocation(line: 51, column: 3, scope: !5623)
!5644 = !DILocation(line: 52, column: 3, scope: !5623)
!5645 = !DILocation(line: 58, column: 1, scope: !5616)
!5646 = distinct !DISubprogram(name: "next_free_chunk", scope: !2655, file: !2655, line: 182, type: !5338, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5647)
!5647 = !{!5648, !5649}
!5648 = !DILocalVariable(name: "h", arg: 1, scope: !5646, file: !2655, line: 182, type: !2668)
!5649 = !DILocalVariable(name: "c", arg: 2, scope: !5646, file: !2655, line: 182, type: !2673)
!5650 = !DILocation(line: 0, scope: !5646)
!5651 = !DILocation(line: 184, column: 9, scope: !5646)
!5652 = !DILocation(line: 184, column: 2, scope: !5646)
!5653 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5277, file: !5277, line: 200, type: !5654, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5656)
!5654 = !DISubroutineType(types: !5655)
!5655 = !{!111, !5280, !104}
!5656 = !{!5657, !5658, !5659, !5660, !5661, !5662, !5663}
!5657 = !DILocalVariable(name: "heap", arg: 1, scope: !5653, file: !5277, line: 200, type: !5280)
!5658 = !DILocalVariable(name: "mem", arg: 2, scope: !5653, file: !5277, line: 200, type: !104)
!5659 = !DILocalVariable(name: "h", scope: !5653, file: !5277, line: 202, type: !2668)
!5660 = !DILocalVariable(name: "c", scope: !5653, file: !5277, line: 203, type: !2673)
!5661 = !DILocalVariable(name: "addr", scope: !5653, file: !5277, line: 204, type: !111)
!5662 = !DILocalVariable(name: "chunk_base", scope: !5653, file: !5277, line: 205, type: !111)
!5663 = !DILocalVariable(name: "chunk_sz", scope: !5653, file: !5277, line: 206, type: !111)
!5664 = !DILocation(line: 0, scope: !5653)
!5665 = !DILocation(line: 202, column: 27, scope: !5653)
!5666 = !DILocation(line: 203, column: 16, scope: !5653)
!5667 = !DILocation(line: 204, column: 16, scope: !5653)
!5668 = !DILocation(line: 205, column: 31, scope: !5653)
!5669 = !DILocation(line: 205, column: 22, scope: !5653)
!5670 = !DILocation(line: 206, column: 20, scope: !5653)
!5671 = !DILocation(line: 206, column: 37, scope: !5653)
!5672 = !DILocation(line: 208, column: 26, scope: !5653)
!5673 = !DILocation(line: 208, column: 18, scope: !5653)
!5674 = !DILocation(line: 208, column: 2, scope: !5653)
!5675 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5277, file: !5277, line: 263, type: !5676, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5678)
!5676 = !DISubroutineType(types: !5677)
!5677 = !{!104, !5280, !111}
!5678 = !{!5679, !5680, !5681, !5682, !5683, !5684}
!5679 = !DILocalVariable(name: "heap", arg: 1, scope: !5675, file: !5277, line: 263, type: !5280)
!5680 = !DILocalVariable(name: "bytes", arg: 2, scope: !5675, file: !5277, line: 263, type: !111)
!5681 = !DILocalVariable(name: "h", scope: !5675, file: !5277, line: 265, type: !2668)
!5682 = !DILocalVariable(name: "mem", scope: !5675, file: !5277, line: 266, type: !104)
!5683 = !DILocalVariable(name: "chunk_sz", scope: !5675, file: !5277, line: 272, type: !5422)
!5684 = !DILocalVariable(name: "c", scope: !5675, file: !5277, line: 273, type: !2673)
!5685 = !DILocation(line: 0, scope: !5675)
!5686 = !DILocation(line: 265, column: 27, scope: !5675)
!5687 = !DILocation(line: 268, column: 12, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5675, file: !5277, line: 268, column: 6)
!5689 = !DILocation(line: 268, column: 18, scope: !5688)
!5690 = !DILocation(line: 268, column: 21, scope: !5688)
!5691 = !DILocation(line: 268, column: 6, scope: !5675)
!5692 = !DILocation(line: 272, column: 23, scope: !5675)
!5693 = !DILocation(line: 273, column: 16, scope: !5675)
!5694 = !DILocation(line: 274, column: 8, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5675, file: !5277, line: 274, column: 6)
!5696 = !DILocation(line: 274, column: 6, scope: !5675)
!5697 = !DILocation(line: 279, column: 6, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5675, file: !5277, line: 279, column: 6)
!5699 = !DILocation(line: 279, column: 23, scope: !5698)
!5700 = !DILocation(line: 279, column: 6, scope: !5675)
!5701 = !DILocation(line: 280, column: 24, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5698, file: !5277, line: 279, column: 35)
!5703 = !DILocation(line: 280, column: 3, scope: !5702)
!5704 = !DILocation(line: 281, column: 3, scope: !5702)
!5705 = !DILocation(line: 282, column: 2, scope: !5702)
!5706 = !DILocation(line: 284, column: 2, scope: !5675)
!5707 = !DILocation(line: 286, column: 8, scope: !5675)
!5708 = !DILocation(line: 298, column: 2, scope: !5675)
!5709 = !DILocation(line: 299, column: 1, scope: !5675)
!5710 = distinct !DISubprogram(name: "size_too_big", scope: !2655, file: !2655, line: 256, type: !5711, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5713)
!5711 = !DISubroutineType(types: !5712)
!5712 = !{!492, !2668, !111}
!5713 = !{!5714, !5715}
!5714 = !DILocalVariable(name: "h", arg: 1, scope: !5710, file: !2655, line: 256, type: !2668)
!5715 = !DILocalVariable(name: "bytes", arg: 2, scope: !5710, file: !2655, line: 256, type: !111)
!5716 = !DILocation(line: 0, scope: !5710)
!5717 = !DILocation(line: 262, column: 16, scope: !5710)
!5718 = !DILocation(line: 262, column: 36, scope: !5710)
!5719 = !DILocation(line: 262, column: 30, scope: !5710)
!5720 = !DILocation(line: 262, column: 2, scope: !5710)
!5721 = distinct !DISubprogram(name: "alloc_chunk", scope: !5277, file: !5277, line: 211, type: !5722, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5724)
!5722 = !DISubroutineType(types: !5723)
!5723 = !{!2673, !2668, !5422}
!5724 = !{!5725, !5726, !5727, !5728, !5729, !5732, !5733, !5735, !5736, !5739}
!5725 = !DILocalVariable(name: "h", arg: 1, scope: !5721, file: !5277, line: 211, type: !2668)
!5726 = !DILocalVariable(name: "sz", arg: 2, scope: !5721, file: !5277, line: 211, type: !5422)
!5727 = !DILocalVariable(name: "bi", scope: !5721, file: !5277, line: 213, type: !105)
!5728 = !DILocalVariable(name: "b", scope: !5721, file: !5277, line: 214, type: !5477)
!5729 = !DILocalVariable(name: "first", scope: !5730, file: !5277, line: 233, type: !2673)
!5730 = distinct !DILexicalBlock(scope: !5731, file: !5277, line: 232, column: 15)
!5731 = distinct !DILexicalBlock(scope: !5721, file: !5277, line: 232, column: 6)
!5732 = !DILocalVariable(name: "i", scope: !5730, file: !5277, line: 234, type: !105)
!5733 = !DILocalVariable(name: "c", scope: !5734, file: !5277, line: 236, type: !2673)
!5734 = distinct !DILexicalBlock(scope: !5730, file: !5277, line: 235, column: 6)
!5735 = !DILocalVariable(name: "bmask", scope: !5721, file: !5277, line: 249, type: !113)
!5736 = !DILocalVariable(name: "minbucket", scope: !5737, file: !5277, line: 252, type: !105)
!5737 = distinct !DILexicalBlock(scope: !5738, file: !5277, line: 251, column: 19)
!5738 = distinct !DILexicalBlock(scope: !5721, file: !5277, line: 251, column: 6)
!5739 = !DILocalVariable(name: "c", scope: !5737, file: !5277, line: 253, type: !2673)
!5740 = !DILocation(line: 0, scope: !5721)
!5741 = !DILocation(line: 213, column: 11, scope: !5721)
!5742 = !DILocation(line: 232, column: 9, scope: !5731)
!5743 = !DILocation(line: 232, column: 6, scope: !5731)
!5744 = !DILocation(line: 232, column: 6, scope: !5721)
!5745 = !DILocation(line: 236, column: 21, scope: !5734)
!5746 = !DILocation(line: 0, scope: !5730)
!5747 = !DILocation(line: 0, scope: !5734)
!5748 = !DILocation(line: 237, column: 8, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5734, file: !5277, line: 237, column: 8)
!5750 = !DILocation(line: 237, column: 25, scope: !5749)
!5751 = !DILocation(line: 237, column: 8, scope: !5734)
!5752 = !DILocation(line: 238, column: 5, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5749, file: !5277, line: 237, column: 32)
!5754 = !DILocation(line: 241, column: 14, scope: !5734)
!5755 = !DILocation(line: 241, column: 12, scope: !5734)
!5756 = !DILocation(line: 243, column: 12, scope: !5730)
!5757 = !DILocation(line: 243, column: 16, scope: !5730)
!5758 = distinct !{!5758, !5759, !5760}
!5759 = !DILocation(line: 235, column: 3, scope: !5730)
!5760 = !DILocation(line: 243, column: 35, scope: !5730)
!5761 = !DILocation(line: 249, column: 22, scope: !5721)
!5762 = !DILocation(line: 249, column: 39, scope: !5721)
!5763 = !DILocation(line: 249, column: 36, scope: !5721)
!5764 = !DILocation(line: 251, column: 12, scope: !5738)
!5765 = !DILocation(line: 251, column: 6, scope: !5721)
!5766 = !DILocation(line: 252, column: 19, scope: !5737)
!5767 = !DILocation(line: 0, scope: !5737)
!5768 = !DILocation(line: 253, column: 39, scope: !5737)
!5769 = !DILocation(line: 255, column: 3, scope: !5737)
!5770 = !DILocation(line: 261, column: 1, scope: !5721)
!5771 = distinct !DISubprogram(name: "split_chunks", scope: !5277, file: !5277, line: 109, type: !5415, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5772)
!5772 = !{!5773, !5774, !5775, !5776, !5777, !5778}
!5773 = !DILocalVariable(name: "h", arg: 1, scope: !5771, file: !5277, line: 109, type: !2668)
!5774 = !DILocalVariable(name: "lc", arg: 2, scope: !5771, file: !5277, line: 109, type: !2673)
!5775 = !DILocalVariable(name: "rc", arg: 3, scope: !5771, file: !5277, line: 109, type: !2673)
!5776 = !DILocalVariable(name: "sz0", scope: !5771, file: !5277, line: 114, type: !5422)
!5777 = !DILocalVariable(name: "lsz", scope: !5771, file: !5277, line: 115, type: !5422)
!5778 = !DILocalVariable(name: "rsz", scope: !5771, file: !5277, line: 116, type: !5422)
!5779 = !DILocation(line: 0, scope: !5771)
!5780 = !DILocation(line: 114, column: 18, scope: !5771)
!5781 = !DILocation(line: 115, column: 21, scope: !5771)
!5782 = !DILocation(line: 116, column: 22, scope: !5771)
!5783 = !DILocation(line: 118, column: 2, scope: !5771)
!5784 = !DILocation(line: 119, column: 2, scope: !5771)
!5785 = !DILocation(line: 120, column: 2, scope: !5771)
!5786 = !DILocation(line: 121, column: 25, scope: !5771)
!5787 = !DILocation(line: 121, column: 2, scope: !5771)
!5788 = !DILocation(line: 122, column: 1, scope: !5771)
!5789 = distinct !DISubprogram(name: "chunk_mem", scope: !5277, file: !5277, line: 24, type: !5790, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5792)
!5790 = !DISubroutineType(types: !5791)
!5791 = !{!104, !2668, !2673}
!5792 = !{!5793, !5794, !5795, !5796}
!5793 = !DILocalVariable(name: "h", arg: 1, scope: !5789, file: !5277, line: 24, type: !2668)
!5794 = !DILocalVariable(name: "c", arg: 2, scope: !5789, file: !5277, line: 24, type: !2673)
!5795 = !DILocalVariable(name: "buf", scope: !5789, file: !5277, line: 26, type: !2662)
!5796 = !DILocalVariable(name: "ret", scope: !5789, file: !5277, line: 27, type: !432)
!5797 = !DILocation(line: 0, scope: !5789)
!5798 = !DILocation(line: 26, column: 22, scope: !5789)
!5799 = !DILocation(line: 27, column: 38, scope: !5789)
!5800 = !DILocation(line: 31, column: 2, scope: !5789)
!5801 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5277, file: !5277, line: 301, type: !5802, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5804)
!5802 = !DISubroutineType(types: !5803)
!5803 = !{!104, !5280, !111, !111}
!5804 = !{!5805, !5806, !5807, !5808, !5809, !5810, !5811, !5812, !5813, !5814, !5815, !5816}
!5805 = !DILocalVariable(name: "heap", arg: 1, scope: !5801, file: !5277, line: 301, type: !5280)
!5806 = !DILocalVariable(name: "align", arg: 2, scope: !5801, file: !5277, line: 301, type: !111)
!5807 = !DILocalVariable(name: "bytes", arg: 3, scope: !5801, file: !5277, line: 301, type: !111)
!5808 = !DILocalVariable(name: "h", scope: !5801, file: !5277, line: 303, type: !2668)
!5809 = !DILocalVariable(name: "gap", scope: !5801, file: !5277, line: 304, type: !111)
!5810 = !DILocalVariable(name: "rew", scope: !5801, file: !5277, line: 304, type: !111)
!5811 = !DILocalVariable(name: "padded_sz", scope: !5801, file: !5277, line: 335, type: !5422)
!5812 = !DILocalVariable(name: "c0", scope: !5801, file: !5277, line: 336, type: !2673)
!5813 = !DILocalVariable(name: "mem", scope: !5801, file: !5277, line: 341, type: !432)
!5814 = !DILocalVariable(name: "end", scope: !5801, file: !5277, line: 345, type: !2662)
!5815 = !DILocalVariable(name: "c", scope: !5801, file: !5277, line: 348, type: !2673)
!5816 = !DILocalVariable(name: "c_end", scope: !5801, file: !5277, line: 349, type: !2673)
!5817 = !DILocation(line: 0, scope: !5801)
!5818 = !DILocation(line: 303, column: 27, scope: !5801)
!5819 = !DILocation(line: 313, column: 16, scope: !5801)
!5820 = !DILocation(line: 313, column: 14, scope: !5801)
!5821 = !DILocation(line: 314, column: 12, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5801, file: !5277, line: 314, column: 6)
!5823 = !DILocation(line: 314, column: 6, scope: !5801)
!5824 = !DILocation(line: 315, column: 9, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5822, file: !5277, line: 314, column: 20)
!5826 = !DILocation(line: 316, column: 9, scope: !5825)
!5827 = !DILocation(line: 318, column: 13, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !5277, line: 318, column: 7)
!5829 = distinct !DILexicalBlock(scope: !5822, file: !5277, line: 317, column: 9)
!5830 = !DILocation(line: 318, column: 7, scope: !5829)
!5831 = !DILocation(line: 319, column: 11, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5828, file: !5277, line: 318, column: 39)
!5833 = !DILocation(line: 319, column: 4, scope: !5832)
!5834 = !DILocation(line: 0, scope: !5822)
!5835 = !DILocation(line: 324, column: 2, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5837, file: !5277, line: 324, column: 2)
!5837 = distinct !DILexicalBlock(scope: !5801, file: !5277, line: 324, column: 2)
!5838 = !DILocation(line: 324, column: 2, scope: !5837)
!5839 = !DILocation(line: 324, column: 2, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5836, file: !5277, line: 324, column: 2)
!5841 = !DILocation(line: 326, column: 12, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5801, file: !5277, line: 326, column: 6)
!5843 = !DILocation(line: 326, column: 17, scope: !5842)
!5844 = !DILocation(line: 326, column: 20, scope: !5842)
!5845 = !DILocation(line: 326, column: 6, scope: !5801)
!5846 = !DILocation(line: 335, column: 50, scope: !5801)
!5847 = !DILocation(line: 335, column: 58, scope: !5801)
!5848 = !DILocation(line: 335, column: 24, scope: !5801)
!5849 = !DILocation(line: 336, column: 17, scope: !5801)
!5850 = !DILocation(line: 338, column: 9, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5801, file: !5277, line: 338, column: 6)
!5852 = !DILocation(line: 338, column: 6, scope: !5801)
!5853 = !DILocation(line: 341, column: 17, scope: !5801)
!5854 = !DILocation(line: 344, column: 20, scope: !5801)
!5855 = !DILocation(line: 344, column: 8, scope: !5801)
!5856 = !DILocation(line: 344, column: 47, scope: !5801)
!5857 = !DILocation(line: 345, column: 39, scope: !5801)
!5858 = !DILocation(line: 348, column: 16, scope: !5801)
!5859 = !DILocation(line: 349, column: 26, scope: !5801)
!5860 = !DILocation(line: 349, column: 24, scope: !5801)
!5861 = !DILocation(line: 353, column: 8, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5801, file: !5277, line: 353, column: 6)
!5863 = !DILocation(line: 353, column: 6, scope: !5801)
!5864 = !DILocation(line: 354, column: 3, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5862, file: !5277, line: 353, column: 14)
!5866 = !DILocation(line: 355, column: 3, scope: !5865)
!5867 = !DILocation(line: 356, column: 2, scope: !5865)
!5868 = !DILocation(line: 359, column: 6, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5801, file: !5277, line: 359, column: 6)
!5870 = !DILocation(line: 359, column: 24, scope: !5869)
!5871 = !DILocation(line: 359, column: 6, scope: !5801)
!5872 = !DILocation(line: 360, column: 3, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5869, file: !5277, line: 359, column: 33)
!5874 = !DILocation(line: 361, column: 3, scope: !5873)
!5875 = !DILocation(line: 362, column: 2, scope: !5873)
!5876 = !DILocation(line: 364, column: 2, scope: !5801)
!5877 = !DILocation(line: 377, column: 1, scope: !5801)
!5878 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5277, file: !5277, line: 379, type: !5879, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5881)
!5879 = !DISubroutineType(types: !5880)
!5880 = !{!104, !5280, !104, !111, !111}
!5881 = !{!5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5897, !5898}
!5882 = !DILocalVariable(name: "heap", arg: 1, scope: !5878, file: !5277, line: 379, type: !5280)
!5883 = !DILocalVariable(name: "ptr", arg: 2, scope: !5878, file: !5277, line: 379, type: !104)
!5884 = !DILocalVariable(name: "align", arg: 3, scope: !5878, file: !5277, line: 380, type: !111)
!5885 = !DILocalVariable(name: "bytes", arg: 4, scope: !5878, file: !5277, line: 380, type: !111)
!5886 = !DILocalVariable(name: "h", scope: !5878, file: !5277, line: 382, type: !2668)
!5887 = !DILocalVariable(name: "c", scope: !5878, file: !5277, line: 399, type: !2673)
!5888 = !DILocalVariable(name: "rc", scope: !5878, file: !5277, line: 400, type: !2673)
!5889 = !DILocalVariable(name: "align_gap", scope: !5878, file: !5277, line: 401, type: !111)
!5890 = !DILocalVariable(name: "chunks_need", scope: !5878, file: !5277, line: 402, type: !5422)
!5891 = !DILocalVariable(name: "split_size", scope: !5892, file: !5277, line: 435, type: !5422)
!5892 = distinct !DILexicalBlock(scope: !5893, file: !5277, line: 433, column: 61)
!5893 = distinct !DILexicalBlock(scope: !5894, file: !5277, line: 432, column: 13)
!5894 = distinct !DILexicalBlock(scope: !5895, file: !5277, line: 409, column: 13)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !5277, line: 406, column: 13)
!5896 = distinct !DILexicalBlock(scope: !5878, file: !5277, line: 404, column: 6)
!5897 = !DILocalVariable(name: "ptr2", scope: !5878, file: !5277, line: 474, type: !104)
!5898 = !DILocalVariable(name: "prev_size", scope: !5899, file: !5277, line: 477, type: !111)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !5277, line: 476, column: 20)
!5900 = distinct !DILexicalBlock(scope: !5878, file: !5277, line: 476, column: 6)
!5901 = !DILocation(line: 0, scope: !5878)
!5902 = !DILocation(line: 382, column: 27, scope: !5878)
!5903 = !DILocation(line: 385, column: 10, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5878, file: !5277, line: 385, column: 6)
!5905 = !DILocation(line: 385, column: 6, scope: !5878)
!5906 = !DILocation(line: 386, column: 10, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5904, file: !5277, line: 385, column: 19)
!5908 = !DILocation(line: 386, column: 3, scope: !5907)
!5909 = !DILocation(line: 388, column: 12, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5878, file: !5277, line: 388, column: 6)
!5911 = !DILocation(line: 388, column: 6, scope: !5878)
!5912 = !DILocation(line: 389, column: 3, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5910, file: !5277, line: 388, column: 18)
!5914 = !DILocation(line: 390, column: 3, scope: !5913)
!5915 = !DILocation(line: 393, column: 2, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5917, file: !5277, line: 393, column: 2)
!5917 = distinct !DILexicalBlock(scope: !5878, file: !5277, line: 393, column: 2)
!5918 = !DILocation(line: 393, column: 2, scope: !5917)
!5919 = !DILocation(line: 393, column: 2, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5916, file: !5277, line: 393, column: 2)
!5921 = !DILocation(line: 395, column: 6, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5878, file: !5277, line: 395, column: 6)
!5923 = !DILocation(line: 395, column: 6, scope: !5878)
!5924 = !DILocation(line: 399, column: 16, scope: !5878)
!5925 = !DILocation(line: 400, column: 17, scope: !5878)
!5926 = !DILocation(line: 401, column: 49, scope: !5878)
!5927 = !DILocation(line: 401, column: 36, scope: !5878)
!5928 = !DILocation(line: 402, column: 52, scope: !5878)
!5929 = !DILocation(line: 402, column: 26, scope: !5878)
!5930 = !DILocation(line: 404, column: 6, scope: !5896)
!5931 = !DILocation(line: 404, column: 12, scope: !5896)
!5932 = !DILocation(line: 406, column: 13, scope: !5895)
!5933 = !DILocation(line: 406, column: 30, scope: !5895)
!5934 = !DILocation(line: 406, column: 13, scope: !5896)
!5935 = !DILocation(line: 409, column: 30, scope: !5894)
!5936 = !DILocation(line: 409, column: 13, scope: !5895)
!5937 = !DILocation(line: 420, column: 24, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5894, file: !5277, line: 409, column: 45)
!5939 = !DILocation(line: 420, column: 3, scope: !5938)
!5940 = !DILocation(line: 421, column: 3, scope: !5938)
!5941 = !DILocation(line: 422, column: 3, scope: !5938)
!5942 = !DILocation(line: 431, column: 3, scope: !5938)
!5943 = !DILocation(line: 432, column: 14, scope: !5893)
!5944 = !DILocation(line: 432, column: 32, scope: !5893)
!5945 = !DILocation(line: 433, column: 26, scope: !5893)
!5946 = !DILocation(line: 433, column: 24, scope: !5893)
!5947 = !DILocation(line: 433, column: 44, scope: !5893)
!5948 = !DILocation(line: 432, column: 13, scope: !5894)
!5949 = !DILocation(line: 435, column: 38, scope: !5892)
!5950 = !DILocation(line: 0, scope: !5892)
!5951 = !DILocation(line: 445, column: 3, scope: !5892)
!5952 = !DILocation(line: 447, column: 20, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5892, file: !5277, line: 447, column: 7)
!5954 = !DILocation(line: 447, column: 18, scope: !5953)
!5955 = !DILocation(line: 447, column: 7, scope: !5892)
!5956 = !DILocation(line: 448, column: 27, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5953, file: !5277, line: 447, column: 39)
!5958 = !DILocation(line: 448, column: 4, scope: !5957)
!5959 = !DILocation(line: 449, column: 4, scope: !5957)
!5960 = !DILocation(line: 450, column: 3, scope: !5957)
!5961 = !DILocation(line: 452, column: 3, scope: !5892)
!5962 = !DILocation(line: 453, column: 3, scope: !5892)
!5963 = !DILocation(line: 474, column: 15, scope: !5878)
!5964 = !DILocation(line: 476, column: 11, scope: !5900)
!5965 = !DILocation(line: 476, column: 6, scope: !5878)
!5966 = !DILocation(line: 477, column: 42, scope: !5899)
!5967 = !DILocation(line: 477, column: 22, scope: !5899)
!5968 = !DILocation(line: 477, column: 60, scope: !5899)
!5969 = !DILocation(line: 0, scope: !5899)
!5970 = !DILocation(line: 479, column: 21, scope: !5899)
!5971 = !DILocation(line: 479, column: 3, scope: !5899)
!5972 = !DILocation(line: 480, column: 3, scope: !5899)
!5973 = !DILocation(line: 481, column: 2, scope: !5899)
!5974 = !DILocation(line: 483, column: 1, scope: !5878)
!5975 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2655, file: !2655, line: 245, type: !5976, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5978)
!5976 = !DISubroutineType(types: !5977)
!5977 = !{!111, !2668, !5422}
!5978 = !{!5979, !5980}
!5979 = !DILocalVariable(name: "h", arg: 1, scope: !5975, file: !2655, line: 245, type: !2668)
!5980 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5975, file: !2655, line: 245, type: !5422)
!5981 = !DILocation(line: 0, scope: !5975)
!5982 = !DILocation(line: 247, column: 20, scope: !5975)
!5983 = !DILocation(line: 247, column: 33, scope: !5975)
!5984 = !DILocation(line: 247, column: 2, scope: !5975)
!5985 = distinct !DISubprogram(name: "sys_heap_init", scope: !5277, file: !5277, line: 485, type: !5986, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5988)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{null, !5280, !104, !111}
!5988 = !{!5989, !5990, !5991, !5992, !5993, !5994, !5995, !5996, !5997, !5998}
!5989 = !DILocalVariable(name: "heap", arg: 1, scope: !5985, file: !5277, line: 485, type: !5280)
!5990 = !DILocalVariable(name: "mem", arg: 2, scope: !5985, file: !5277, line: 485, type: !104)
!5991 = !DILocalVariable(name: "bytes", arg: 3, scope: !5985, file: !5277, line: 485, type: !111)
!5992 = !DILocalVariable(name: "addr", scope: !5985, file: !5277, line: 502, type: !22)
!5993 = !DILocalVariable(name: "end", scope: !5985, file: !5277, line: 503, type: !22)
!5994 = !DILocalVariable(name: "heap_sz", scope: !5985, file: !5277, line: 504, type: !5422)
!5995 = !DILocalVariable(name: "h", scope: !5985, file: !5277, line: 509, type: !2668)
!5996 = !DILocalVariable(name: "nb_buckets", scope: !5985, file: !5277, line: 520, type: !105)
!5997 = !DILocalVariable(name: "chunk0_size", scope: !5985, file: !5277, line: 521, type: !5422)
!5998 = !DILocalVariable(name: "i", scope: !5999, file: !5277, line: 526, type: !105)
!5999 = distinct !DILexicalBlock(scope: !5985, file: !5277, line: 526, column: 2)
!6000 = !DILocation(line: 0, scope: !5985)
!6001 = !DILocation(line: 491, column: 3, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !6003, file: !5277, line: 491, column: 3)
!6003 = distinct !DILexicalBlock(scope: !6004, file: !5277, line: 491, column: 3)
!6004 = distinct !DILexicalBlock(scope: !6005, file: !5277, line: 489, column: 46)
!6005 = distinct !DILexicalBlock(scope: !5985, file: !5277, line: 489, column: 6)
!6006 = !DILocation(line: 491, column: 3, scope: !6003)
!6007 = !DILocation(line: 491, column: 3, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6002, file: !5277, line: 491, column: 3)
!6009 = !DILocation(line: 498, column: 2, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6011, file: !5277, line: 498, column: 2)
!6011 = distinct !DILexicalBlock(scope: !5985, file: !5277, line: 498, column: 2)
!6012 = !DILocation(line: 498, column: 2, scope: !6011)
!6013 = !DILocation(line: 498, column: 2, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6010, file: !5277, line: 498, column: 2)
!6015 = !DILocation(line: 499, column: 8, scope: !5985)
!6016 = !DILocation(line: 502, column: 19, scope: !5985)
!6017 = !DILocation(line: 503, column: 18, scope: !5985)
!6018 = !DILocation(line: 504, column: 27, scope: !5985)
!6019 = !DILocation(line: 504, column: 35, scope: !5985)
!6020 = !DILocation(line: 507, column: 2, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6022, file: !5277, line: 507, column: 2)
!6022 = distinct !DILexicalBlock(scope: !5985, file: !5277, line: 507, column: 2)
!6023 = !DILocation(line: 507, column: 2, scope: !6022)
!6024 = !DILocation(line: 507, column: 2, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6021, file: !5277, line: 507, column: 2)
!6026 = !DILocation(line: 509, column: 21, scope: !5985)
!6027 = !DILocation(line: 510, column: 8, scope: !5985)
!6028 = !DILocation(line: 510, column: 13, scope: !5985)
!6029 = !DILocation(line: 511, column: 5, scope: !5985)
!6030 = !DILocation(line: 511, column: 15, scope: !5985)
!6031 = !DILocation(line: 512, column: 5, scope: !5985)
!6032 = !DILocation(line: 512, column: 19, scope: !5985)
!6033 = !DILocation(line: 520, column: 19, scope: !5985)
!6034 = !DILocation(line: 522, column: 21, scope: !5985)
!6035 = !DILocation(line: 521, column: 56, scope: !5985)
!6036 = !DILocation(line: 521, column: 26, scope: !5985)
!6037 = !DILocation(line: 524, column: 2, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6039, file: !5277, line: 524, column: 2)
!6039 = distinct !DILexicalBlock(scope: !5985, file: !5277, line: 524, column: 2)
!6040 = !DILocation(line: 524, column: 2, scope: !6039)
!6041 = !DILocation(line: 0, scope: !5999)
!6042 = !DILocation(line: 526, column: 20, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !5999, file: !5277, line: 526, column: 2)
!6044 = !DILocation(line: 526, column: 2, scope: !5999)
!6045 = !DILocation(line: 524, column: 2, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6038, file: !5277, line: 524, column: 2)
!6047 = !DILocation(line: 531, column: 2, scope: !5985)
!6048 = !DILocation(line: 532, column: 2, scope: !5985)
!6049 = !DILocation(line: 533, column: 2, scope: !5985)
!6050 = !DILocation(line: 536, column: 41, scope: !5985)
!6051 = !DILocation(line: 536, column: 2, scope: !5985)
!6052 = !DILocation(line: 537, column: 2, scope: !5985)
!6053 = !DILocation(line: 540, column: 2, scope: !5985)
!6054 = !DILocation(line: 541, column: 2, scope: !5985)
!6055 = !DILocation(line: 542, column: 2, scope: !5985)
!6056 = !DILocation(line: 544, column: 2, scope: !5985)
!6057 = !DILocation(line: 545, column: 1, scope: !5985)
!6058 = !DILocation(line: 527, column: 17, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6043, file: !5277, line: 526, column: 39)
!6060 = !DILocation(line: 527, column: 22, scope: !6059)
!6061 = !DILocation(line: 526, column: 35, scope: !6043)
!6062 = distinct !{!6062, !6044, !6063}
!6063 = !DILocation(line: 528, column: 2, scope: !5999)
!6064 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2688, file: !2688, line: 1338, type: !6065, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6073)
!6065 = !DISubroutineType(types: !6066)
!6066 = !{!105, !4433, !104, !269, !6067, !113}
!6067 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4051, line: 99, baseType: !6068)
!6068 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4051, line: 40, baseType: !6069)
!6069 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2688, baseType: !6070)
!6070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6071)
!6071 = !{!6072}
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6070, file: !2688, baseType: !104, size: 32)
!6073 = !{!6074, !6075, !6076, !6077, !6078, !6079, !6083, !6084, !6085, !6087, !6092, !6135, !6138, !6141, !6142, !6143, !6144, !6145, !6146, !6147, !6150, !6151, !6152, !6156, !6159, !6161, !6164, !6165, !6166, !6171, !6177, !6180, !6184, !6190, !6194, !6197, !6199, !6202}
!6074 = !DILocalVariable(name: "out", arg: 1, scope: !6064, file: !2688, line: 1338, type: !4433)
!6075 = !DILocalVariable(name: "ctx", arg: 2, scope: !6064, file: !2688, line: 1338, type: !104)
!6076 = !DILocalVariable(name: "fp", arg: 3, scope: !6064, file: !2688, line: 1338, type: !269)
!6077 = !DILocalVariable(name: "ap", arg: 4, scope: !6064, file: !2688, line: 1339, type: !6067)
!6078 = !DILocalVariable(name: "flags", arg: 5, scope: !6064, file: !2688, line: 1339, type: !113)
!6079 = !DILocalVariable(name: "buf", scope: !6064, file: !2688, line: 1341, type: !6080)
!6080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 176, elements: !6081)
!6081 = !{!6082}
!6082 = !DISubrange(count: 22)
!6083 = !DILocalVariable(name: "count", scope: !6064, file: !2688, line: 1342, type: !111)
!6084 = !DILocalVariable(name: "sint", scope: !6064, file: !2688, line: 1343, type: !2707)
!6085 = !DILocalVariable(name: "tagged_ap", scope: !6064, file: !2688, line: 1345, type: !6086)
!6086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!6087 = !DILocalVariable(name: "rc", scope: !6088, file: !2688, line: 1377, type: !105)
!6088 = distinct !DILexicalBlock(scope: !6089, file: !2688, line: 1377, column: 4)
!6089 = distinct !DILexicalBlock(scope: !6090, file: !2688, line: 1376, column: 19)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1376, column: 7)
!6091 = distinct !DILexicalBlock(scope: !6064, file: !2688, line: 1375, column: 19)
!6092 = !DILocalVariable(name: "state", scope: !6091, file: !2688, line: 1395, type: !6093)
!6093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6064, file: !2688, line: 1392, size: 192, elements: !6094)
!6094 = !{!6095, !6103}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6093, file: !2688, line: 1393, baseType: !6096, size: 64)
!6096 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2688, line: 166, size: 64, elements: !6097)
!6097 = !{!6098, !6099, !6100, !6101, !6102}
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6096, file: !2688, line: 168, baseType: !2707, size: 64)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6096, file: !2688, line: 171, baseType: !2710, size: 64)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6096, file: !2688, line: 174, baseType: !426, size: 64)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6096, file: !2688, line: 177, baseType: !424, size: 64)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6096, file: !2688, line: 180, baseType: !104, size: 32)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6093, file: !2688, line: 1394, baseType: !6104, size: 96, offset: 64)
!6104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2688, line: 189, size: 96, elements: !6105)
!6105 = !{!6106, !6107, !6108, !6109, !6110, !6111, !6112, !6113, !6114, !6115, !6116, !6117, !6118, !6119, !6120, !6121, !6122, !6123, !6124, !6125, !6130}
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6104, file: !2688, line: 191, baseType: !492, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6104, file: !2688, line: 194, baseType: !492, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6104, file: !2688, line: 197, baseType: !492, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6104, file: !2688, line: 200, baseType: !492, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6104, file: !2688, line: 203, baseType: !492, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6104, file: !2688, line: 206, baseType: !492, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6104, file: !2688, line: 209, baseType: !492, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6104, file: !2688, line: 212, baseType: !492, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6104, file: !2688, line: 219, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6104, file: !2688, line: 222, baseType: !492, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6104, file: !2688, line: 229, baseType: !492, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6104, file: !2688, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6104, file: !2688, line: 238, baseType: !492, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6104, file: !2688, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6104, file: !2688, line: 244, baseType: !492, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6104, file: !2688, line: 247, baseType: !492, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6104, file: !2688, line: 252, baseType: !492, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6104, file: !2688, line: 257, baseType: !492, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6104, file: !2688, line: 260, baseType: !170, size: 8, offset: 24)
!6125 = !DIDerivedType(tag: DW_TAG_member, scope: !6104, file: !2688, line: 262, baseType: !6126, size: 32, offset: 32)
!6126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6104, file: !2688, line: 262, size: 32, elements: !6127)
!6127 = !{!6128, !6129}
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6126, file: !2688, line: 267, baseType: !105, size: 32)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6126, file: !2688, line: 289, baseType: !105, size: 32)
!6130 = !DIDerivedType(tag: DW_TAG_member, scope: !6104, file: !2688, line: 292, baseType: !6131, size: 32, offset: 64)
!6131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6104, file: !2688, line: 292, size: 32, elements: !6132)
!6132 = !{!6133, !6134}
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6131, file: !2688, line: 297, baseType: !105, size: 32)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6131, file: !2688, line: 306, baseType: !105, size: 32)
!6135 = !DILocalVariable(name: "conv", scope: !6091, file: !2688, line: 1400, type: !6136)
!6136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6137)
!6137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6104, size: 32)
!6138 = !DILocalVariable(name: "value", scope: !6091, file: !2688, line: 1401, type: !6139)
!6139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6140)
!6140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 32)
!6141 = !DILocalVariable(name: "sp", scope: !6091, file: !2688, line: 1402, type: !269)
!6142 = !DILocalVariable(name: "width", scope: !6091, file: !2688, line: 1403, type: !105)
!6143 = !DILocalVariable(name: "precision", scope: !6091, file: !2688, line: 1404, type: !105)
!6144 = !DILocalVariable(name: "bps", scope: !6091, file: !2688, line: 1405, type: !269)
!6145 = !DILocalVariable(name: "bpe", scope: !6091, file: !2688, line: 1406, type: !269)
!6146 = !DILocalVariable(name: "sign", scope: !6091, file: !2688, line: 1407, type: !103)
!6147 = !DILocalVariable(name: "arg", scope: !6148, file: !2688, line: 1432, type: !105)
!6148 = distinct !DILexicalBlock(scope: !6149, file: !2688, line: 1431, column: 24)
!6149 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1431, column: 7)
!6150 = !DILocalVariable(name: "specifier_cat", scope: !6091, file: !2688, line: 1468, type: !2687)
!6151 = !DILocalVariable(name: "length_mod", scope: !6091, file: !2688, line: 1470, type: !2695)
!6152 = !DILocalVariable(name: "rc", scope: !6153, file: !2688, line: 1575, type: !105)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !2688, line: 1575, column: 4)
!6154 = distinct !DILexicalBlock(scope: !6155, file: !2688, line: 1574, column: 43)
!6155 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1574, column: 7)
!6156 = !DILocalVariable(name: "rc", scope: !6157, file: !2688, line: 1584, type: !105)
!6157 = distinct !DILexicalBlock(scope: !6158, file: !2688, line: 1584, column: 4)
!6158 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1582, column: 28)
!6159 = !DILocalVariable(name: "len", scope: !6160, file: !2688, line: 1589, type: !111)
!6160 = distinct !DILexicalBlock(scope: !6158, file: !2688, line: 1586, column: 13)
!6161 = !DILocalVariable(name: "len", scope: !6162, file: !2688, line: 1641, type: !111)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !2688, line: 1640, column: 24)
!6163 = distinct !DILexicalBlock(scope: !6158, file: !2688, line: 1640, column: 8)
!6164 = !DILocalVariable(name: "nj_len", scope: !6091, file: !2688, line: 1722, type: !111)
!6165 = !DILocalVariable(name: "pad_len", scope: !6091, file: !2688, line: 1723, type: !105)
!6166 = !DILocalVariable(name: "pad", scope: !6167, file: !2688, line: 1751, type: !103)
!6167 = distinct !DILexicalBlock(scope: !6168, file: !2688, line: 1750, column: 26)
!6168 = distinct !DILexicalBlock(scope: !6169, file: !2688, line: 1750, column: 8)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !2688, line: 1747, column: 18)
!6170 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1747, column: 7)
!6171 = !DILocalVariable(name: "rc", scope: !6172, file: !2688, line: 1758, type: !105)
!6172 = distinct !DILexicalBlock(scope: !6173, file: !2688, line: 1758, column: 7)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !2688, line: 1757, column: 21)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !2688, line: 1757, column: 10)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !2688, line: 1756, column: 26)
!6176 = distinct !DILexicalBlock(scope: !6167, file: !2688, line: 1756, column: 9)
!6177 = !DILocalVariable(name: "rc", scope: !6178, file: !2688, line: 1765, type: !105)
!6178 = distinct !DILexicalBlock(scope: !6179, file: !2688, line: 1765, column: 6)
!6179 = distinct !DILexicalBlock(scope: !6167, file: !2688, line: 1764, column: 25)
!6180 = !DILocalVariable(name: "rc", scope: !6181, file: !2688, line: 1774, type: !105)
!6181 = distinct !DILexicalBlock(scope: !6182, file: !2688, line: 1774, column: 4)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !2688, line: 1773, column: 18)
!6183 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1773, column: 7)
!6184 = !DILocalVariable(name: "rc", scope: !6185, file: !2688, line: 1819, type: !105)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !2688, line: 1819, column: 5)
!6186 = distinct !DILexicalBlock(scope: !6187, file: !2688, line: 1818, column: 44)
!6187 = distinct !DILexicalBlock(scope: !6188, file: !2688, line: 1818, column: 8)
!6188 = distinct !DILexicalBlock(scope: !6189, file: !2688, line: 1817, column: 10)
!6189 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1777, column: 7)
!6190 = !DILocalVariable(name: "rc", scope: !6191, file: !2688, line: 1823, type: !105)
!6191 = distinct !DILexicalBlock(scope: !6192, file: !2688, line: 1823, column: 5)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !2688, line: 1822, column: 26)
!6193 = distinct !DILexicalBlock(scope: !6188, file: !2688, line: 1822, column: 8)
!6194 = !DILocalVariable(name: "rc", scope: !6195, file: !2688, line: 1828, type: !105)
!6195 = distinct !DILexicalBlock(scope: !6196, file: !2688, line: 1828, column: 5)
!6196 = distinct !DILexicalBlock(scope: !6188, file: !2688, line: 1827, column: 26)
!6197 = !DILocalVariable(name: "rc", scope: !6198, file: !2688, line: 1831, type: !105)
!6198 = distinct !DILexicalBlock(scope: !6188, file: !2688, line: 1831, column: 4)
!6199 = !DILocalVariable(name: "rc", scope: !6200, file: !2688, line: 1836, type: !105)
!6200 = distinct !DILexicalBlock(scope: !6201, file: !2688, line: 1836, column: 4)
!6201 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1835, column: 21)
!6202 = !DILabel(scope: !6158, name: "prec_int_pad0", file: !2688, line: 1634)
!6203 = !DILocation(line: 0, scope: !6064)
!6204 = !DILocation(line: 1341, column: 2, scope: !6064)
!6205 = !DILocation(line: 1341, column: 7, scope: !6064)
!6206 = !DILocation(line: 1375, column: 2, scope: !6064)
!6207 = !DILocation(line: 1342, column: 9, scope: !6064)
!6208 = !DILocation(line: 1375, column: 9, scope: !6064)
!6209 = !DILocation(line: 1377, column: 4, scope: !6088)
!6210 = !DILocation(line: 0, scope: !6088)
!6211 = !DILocation(line: 1377, column: 4, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6088, file: !2688, line: 1377, column: 4)
!6213 = distinct !{!6213, !6206, !6214}
!6214 = !DILocation(line: 1839, column: 2, scope: !6064)
!6215 = !DILocation(line: 1392, column: 3, scope: !6091)
!6216 = !DILocation(line: 1395, column: 5, scope: !6091)
!6217 = !DILocation(line: 0, scope: !6091)
!6218 = !DILocation(line: 1409, column: 8, scope: !6091)
!6219 = !DILocation(line: 1414, column: 13, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1414, column: 7)
!6221 = !DILocation(line: 1414, column: 7, scope: !6091)
!6222 = !DILocation(line: 1415, column: 12, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6220, file: !2688, line: 1414, column: 25)
!6224 = !DILocation(line: 1417, column: 14, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6223, file: !2688, line: 1417, column: 8)
!6226 = !DILocation(line: 1417, column: 8, scope: !6223)
!6227 = !DILocation(line: 1418, column: 21, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6225, file: !2688, line: 1417, column: 19)
!6229 = !DILocation(line: 1419, column: 13, scope: !6228)
!6230 = !DILocation(line: 1420, column: 4, scope: !6228)
!6231 = !DILocation(line: 1421, column: 20, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6220, file: !2688, line: 1421, column: 14)
!6233 = !DILocation(line: 1421, column: 14, scope: !6220)
!6234 = !DILocation(line: 1431, column: 13, scope: !6149)
!6235 = !DILocation(line: 1431, column: 7, scope: !6091)
!6236 = !DILocation(line: 1432, column: 14, scope: !6148)
!6237 = !DILocation(line: 0, scope: !6148)
!6238 = !DILocation(line: 1434, column: 12, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6148, file: !2688, line: 1434, column: 8)
!6240 = !DILocation(line: 1434, column: 8, scope: !6148)
!6241 = !DILocation(line: 1435, column: 24, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6239, file: !2688, line: 1434, column: 17)
!6243 = !DILocation(line: 1436, column: 4, scope: !6242)
!6244 = !DILocation(line: 1439, column: 20, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6149, file: !2688, line: 1439, column: 14)
!6246 = !DILocation(line: 1439, column: 14, scope: !6149)
!6247 = !DILocation(line: 1469, column: 37, scope: !6091)
!6248 = !DILocation(line: 1448, column: 20, scope: !6091)
!6249 = !DILocation(line: 1449, column: 22, scope: !6091)
!6250 = !DILocation(line: 1471, column: 34, scope: !6091)
!6251 = !DILocation(line: 1478, column: 7, scope: !6091)
!6252 = !DILocation(line: 1479, column: 4, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !2688, line: 1478, column: 40)
!6254 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1478, column: 7)
!6255 = !DILocation(line: 1484, column: 19, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6253, file: !2688, line: 1479, column: 24)
!6257 = !DILocation(line: 1484, column: 17, scope: !6256)
!6258 = !DILocation(line: 1485, column: 5, scope: !6256)
!6259 = !DILocation(line: 1492, column: 20, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6261, file: !2688, line: 1491, column: 12)
!6261 = distinct !DILexicalBlock(scope: !6256, file: !2688, line: 1487, column: 9)
!6262 = !DILocation(line: 1492, column: 18, scope: !6260)
!6263 = !DILocation(line: 1494, column: 5, scope: !6256)
!6264 = !DILocation(line: 1497, column: 23, scope: !6256)
!6265 = !DILocation(line: 1496, column: 17, scope: !6256)
!6266 = !DILocation(line: 1498, column: 5, scope: !6256)
!6267 = !DILocation(line: 1501, column: 23, scope: !6256)
!6268 = !DILocation(line: 1500, column: 17, scope: !6256)
!6269 = !DILocation(line: 1502, column: 5, scope: !6256)
!6270 = !DILocation(line: 1513, column: 23, scope: !6256)
!6271 = !DILocation(line: 1513, column: 6, scope: !6256)
!6272 = !DILocation(line: 1512, column: 17, scope: !6256)
!6273 = !DILocation(line: 1514, column: 5, scope: !6256)
!6274 = !DILocation(line: 0, scope: !6256)
!6275 = !DILocation(line: 1516, column: 8, scope: !6253)
!6276 = !DILocation(line: 1517, column: 19, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !2688, line: 1516, column: 33)
!6278 = distinct !DILexicalBlock(scope: !6253, file: !2688, line: 1516, column: 8)
!6279 = !DILocation(line: 1517, column: 17, scope: !6277)
!6280 = !DILocation(line: 1518, column: 4, scope: !6277)
!6281 = !DILocation(line: 1519, column: 19, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6283, file: !2688, line: 1518, column: 39)
!6283 = distinct !DILexicalBlock(scope: !6278, file: !2688, line: 1518, column: 15)
!6284 = !DILocation(line: 1519, column: 17, scope: !6282)
!6285 = !DILocation(line: 1520, column: 4, scope: !6282)
!6286 = !DILocation(line: 1522, column: 4, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6288, file: !2688, line: 1521, column: 47)
!6288 = distinct !DILexicalBlock(scope: !6254, file: !2688, line: 1521, column: 14)
!6289 = !DILocation(line: 1527, column: 19, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6287, file: !2688, line: 1522, column: 24)
!6291 = !DILocation(line: 1527, column: 17, scope: !6290)
!6292 = !DILocation(line: 1528, column: 5, scope: !6290)
!6293 = !DILocation(line: 0, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6290, file: !2688, line: 1530, column: 9)
!6295 = !DILocation(line: 1540, column: 23, scope: !6290)
!6296 = !DILocation(line: 1539, column: 17, scope: !6290)
!6297 = !DILocation(line: 1542, column: 5, scope: !6290)
!6298 = !DILocation(line: 1545, column: 23, scope: !6290)
!6299 = !DILocation(line: 1544, column: 17, scope: !6290)
!6300 = !DILocation(line: 1547, column: 5, scope: !6290)
!6301 = !DILocation(line: 1551, column: 23, scope: !6290)
!6302 = !DILocation(line: 1551, column: 6, scope: !6290)
!6303 = !DILocation(line: 1550, column: 17, scope: !6290)
!6304 = !DILocation(line: 1552, column: 5, scope: !6290)
!6305 = !DILocation(line: 0, scope: !6290)
!6306 = !DILocation(line: 1554, column: 8, scope: !6287)
!6307 = !DILocation(line: 1555, column: 19, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6309, file: !2688, line: 1554, column: 33)
!6309 = distinct !DILexicalBlock(scope: !6287, file: !2688, line: 1554, column: 8)
!6310 = !DILocation(line: 1555, column: 17, scope: !6308)
!6311 = !DILocation(line: 1556, column: 4, scope: !6308)
!6312 = !DILocation(line: 1557, column: 19, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !2688, line: 1556, column: 39)
!6314 = distinct !DILexicalBlock(scope: !6309, file: !2688, line: 1556, column: 15)
!6315 = !DILocation(line: 1557, column: 17, scope: !6313)
!6316 = !DILocation(line: 1558, column: 4, scope: !6313)
!6317 = !DILocation(line: 0, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !2688, line: 1560, column: 8)
!6319 = distinct !DILexicalBlock(scope: !6320, file: !2688, line: 1559, column: 45)
!6320 = distinct !DILexicalBlock(scope: !6288, file: !2688, line: 1559, column: 14)
!6321 = !DILocation(line: 1566, column: 17, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6323, file: !2688, line: 1565, column: 46)
!6323 = distinct !DILexicalBlock(scope: !6320, file: !2688, line: 1565, column: 14)
!6324 = !DILocation(line: 1566, column: 15, scope: !6322)
!6325 = !DILocation(line: 1567, column: 3, scope: !6322)
!6326 = !DILocation(line: 1574, column: 21, scope: !6155)
!6327 = !DILocation(line: 1575, column: 4, scope: !6153)
!6328 = !DILocation(line: 0, scope: !6153)
!6329 = !DILocation(line: 1575, column: 4, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6153, file: !2688, line: 1575, column: 4)
!6331 = !DILocation(line: 1582, column: 17, scope: !6091)
!6332 = !DILocation(line: 1582, column: 3, scope: !6091)
!6333 = !DILocation(line: 1584, column: 4, scope: !6157)
!6334 = !DILocation(line: 0, scope: !6157)
!6335 = !DILocation(line: 1584, column: 4, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6157, file: !2688, line: 1584, column: 4)
!6337 = !DILocation(line: 1587, column: 31, scope: !6160)
!6338 = !DILocation(line: 1591, column: 18, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6160, file: !2688, line: 1591, column: 8)
!6340 = !DILocation(line: 1591, column: 8, scope: !6160)
!6341 = !DILocation(line: 1592, column: 11, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6339, file: !2688, line: 1591, column: 24)
!6343 = !DILocation(line: 0, scope: !6160)
!6344 = !DILocation(line: 1593, column: 4, scope: !6342)
!6345 = !DILocation(line: 1594, column: 11, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6339, file: !2688, line: 1593, column: 11)
!6347 = !DILocation(line: 1604, column: 51, scope: !6158)
!6348 = !DILocation(line: 1604, column: 13, scope: !6158)
!6349 = !DILocation(line: 1604, column: 11, scope: !6158)
!6350 = !DILocation(line: 1606, column: 4, scope: !6158)
!6351 = !DILocation(line: 1609, column: 14, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6158, file: !2688, line: 1609, column: 8)
!6353 = !DILocation(line: 1609, column: 8, scope: !6158)
!6354 = !DILocation(line: 1619, column: 18, scope: !6158)
!6355 = !DILocation(line: 1620, column: 13, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6158, file: !2688, line: 1620, column: 8)
!6357 = !DILocation(line: 1620, column: 8, scope: !6158)
!6358 = !DILocation(line: 1622, column: 36, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6356, file: !2688, line: 1620, column: 18)
!6360 = !DILocation(line: 1622, column: 17, scope: !6359)
!6361 = !DILocation(line: 1623, column: 4, scope: !6359)
!6362 = !DILocation(line: 1632, column: 29, scope: !6158)
!6363 = !DILocation(line: 1632, column: 10, scope: !6158)
!6364 = !DILocation(line: 1632, column: 4, scope: !6158)
!6365 = !DILocation(line: 1407, column: 8, scope: !6091)
!6366 = !DILocation(line: 0, scope: !6158)
!6367 = !DILocation(line: 1634, column: 3, scope: !6158)
!6368 = !DILocation(line: 1640, column: 18, scope: !6163)
!6369 = !DILocation(line: 1640, column: 8, scope: !6158)
!6370 = !DILocation(line: 1729, column: 13, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1729, column: 7)
!6372 = !DILocation(line: 1641, column: 22, scope: !6162)
!6373 = !DILocation(line: 0, scope: !6162)
!6374 = !DILocation(line: 1646, column: 21, scope: !6162)
!6375 = !DILocation(line: 1649, column: 13, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6162, file: !2688, line: 1649, column: 9)
!6377 = !DILocation(line: 1649, column: 9, scope: !6162)
!6378 = !DILocation(line: 1650, column: 35, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6376, file: !2688, line: 1649, column: 34)
!6380 = !DILocation(line: 1650, column: 23, scope: !6379)
!6381 = !DILocation(line: 1651, column: 5, scope: !6379)
!6382 = !DILocation(line: 1660, column: 15, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6158, file: !2688, line: 1660, column: 8)
!6384 = !DILocation(line: 1660, column: 19, scope: !6383)
!6385 = !DILocation(line: 1660, column: 8, scope: !6158)
!6386 = !DILocation(line: 1661, column: 23, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6383, file: !2688, line: 1660, column: 28)
!6388 = !DILocation(line: 1661, column: 11, scope: !6387)
!6389 = !DILocation(line: 1665, column: 22, scope: !6387)
!6390 = !DILocation(line: 1666, column: 21, scope: !6387)
!6391 = !DILocation(line: 1668, column: 5, scope: !6387)
!6392 = !DILocation(line: 1677, column: 30, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6394, file: !2688, line: 1676, column: 49)
!6394 = distinct !DILexicalBlock(scope: !6158, file: !2688, line: 1676, column: 8)
!6395 = !DILocation(line: 1677, column: 5, scope: !6393)
!6396 = !DILocation(line: 1680, column: 4, scope: !6158)
!6397 = !DILocation(line: 0, scope: !6339)
!6398 = !DILocation(line: 1597, column: 14, scope: !6160)
!6399 = !DILocation(line: 1699, column: 11, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1699, column: 7)
!6401 = !DILocation(line: 1699, column: 7, scope: !6091)
!6402 = !DILocation(line: 1725, column: 7, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1725, column: 7)
!6404 = !DILocation(line: 1725, column: 12, scope: !6403)
!6405 = !DILocation(line: 1747, column: 13, scope: !6170)
!6406 = !DILocation(line: 1747, column: 7, scope: !6091)
!6407 = !DILocation(line: 1722, column: 24, scope: !6091)
!6408 = !DILocation(line: 1725, column: 7, scope: !6091)
!6409 = !DILocation(line: 1729, column: 7, scope: !6091)
!6410 = !DILocation(line: 1736, column: 13, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6091, file: !2688, line: 1736, column: 7)
!6412 = !DILocation(line: 1735, column: 19, scope: !6091)
!6413 = !DILocation(line: 1736, column: 7, scope: !6091)
!6414 = !DILocation(line: 1748, column: 10, scope: !6169)
!6415 = !DILocation(line: 1750, column: 15, scope: !6168)
!6416 = !DILocation(line: 1750, column: 8, scope: !6169)
!6417 = !DILocation(line: 0, scope: !6167)
!6418 = !DILocation(line: 1756, column: 15, scope: !6176)
!6419 = !DILocation(line: 1756, column: 9, scope: !6167)
!6420 = !DILocation(line: 1758, column: 7, scope: !6172)
!6421 = !DILocation(line: 0, scope: !6172)
!6422 = !DILocation(line: 1758, column: 7, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6172, file: !2688, line: 1758, column: 7)
!6424 = !DILocation(line: 1764, column: 5, scope: !6167)
!6425 = !DILocation(line: 0, scope: !6169)
!6426 = !DILocation(line: 1764, column: 20, scope: !6167)
!6427 = !DILocation(line: 1764, column: 17, scope: !6167)
!6428 = !DILocation(line: 1765, column: 6, scope: !6178)
!6429 = !DILocation(line: 0, scope: !6178)
!6430 = !DILocation(line: 1765, column: 6, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6178, file: !2688, line: 1765, column: 6)
!6432 = distinct !{!6432, !6424, !6433}
!6433 = !DILocation(line: 1766, column: 5, scope: !6167)
!6434 = !DILocation(line: 1773, column: 12, scope: !6183)
!6435 = !DILocation(line: 1773, column: 7, scope: !6091)
!6436 = !DILocation(line: 1773, column: 7, scope: !6183)
!6437 = !DILocation(line: 1774, column: 4, scope: !6181)
!6438 = !DILocation(line: 0, scope: !6181)
!6439 = !DILocation(line: 1774, column: 4, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6181, file: !2688, line: 1774, column: 4)
!6441 = !DILocation(line: 1818, column: 8, scope: !6187)
!6442 = !DILocation(line: 1818, column: 27, scope: !6187)
!6443 = !DILocation(line: 1818, column: 25, scope: !6187)
!6444 = !DILocation(line: 1818, column: 8, scope: !6188)
!6445 = !DILocation(line: 1819, column: 5, scope: !6185)
!6446 = !DILocation(line: 0, scope: !6185)
!6447 = !DILocation(line: 1819, column: 5, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6185, file: !2688, line: 1819, column: 5)
!6449 = !DILocation(line: 1822, column: 14, scope: !6193)
!6450 = !DILocation(line: 1822, column: 8, scope: !6188)
!6451 = !DILocation(line: 1823, column: 5, scope: !6191)
!6452 = !DILocation(line: 0, scope: !6191)
!6453 = !DILocation(line: 1823, column: 5, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6191, file: !2688, line: 1823, column: 5)
!6455 = !DILocation(line: 1826, column: 20, scope: !6188)
!6456 = !DILocation(line: 1827, column: 4, scope: !6188)
!6457 = !DILocation(line: 0, scope: !6188)
!6458 = !DILocation(line: 1827, column: 21, scope: !6188)
!6459 = !DILocation(line: 1827, column: 18, scope: !6188)
!6460 = !DILocation(line: 1828, column: 5, scope: !6195)
!6461 = !DILocation(line: 0, scope: !6195)
!6462 = !DILocation(line: 1828, column: 5, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6195, file: !2688, line: 1828, column: 5)
!6464 = distinct !{!6464, !6456, !6465}
!6465 = !DILocation(line: 1829, column: 4, scope: !6188)
!6466 = !DILocation(line: 1831, column: 4, scope: !6198)
!6467 = !DILocation(line: 0, scope: !6198)
!6468 = !DILocation(line: 1831, column: 4, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6198, file: !2688, line: 1831, column: 4)
!6470 = !DILocation(line: 1835, column: 16, scope: !6091)
!6471 = !DILocation(line: 1835, column: 3, scope: !6091)
!6472 = !DILocation(line: 1836, column: 4, scope: !6200)
!6473 = !DILocation(line: 0, scope: !6200)
!6474 = !DILocation(line: 1836, column: 4, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6200, file: !2688, line: 1836, column: 4)
!6476 = !DILocation(line: 1837, column: 4, scope: !6201)
!6477 = distinct !{!6477, !6471, !6478}
!6478 = !DILocation(line: 1838, column: 3, scope: !6091)
!6479 = !DILocation(line: 1844, column: 1, scope: !6064)
!6480 = distinct !DISubprogram(name: "extract_conversion", scope: !2688, file: !2688, line: 642, type: !6481, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6483)
!6481 = !DISubroutineType(types: !6482)
!6482 = !{!269, !6137, !269}
!6483 = !{!6484, !6485}
!6484 = !DILocalVariable(name: "conv", arg: 1, scope: !6480, file: !2688, line: 642, type: !6137)
!6485 = !DILocalVariable(name: "sp", arg: 2, scope: !6480, file: !2688, line: 643, type: !269)
!6486 = !DILocation(line: 0, scope: !6480)
!6487 = !DILocation(line: 645, column: 10, scope: !6480)
!6488 = !DILocation(line: 653, column: 2, scope: !6480)
!6489 = !DILocation(line: 654, column: 6, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6480, file: !2688, line: 654, column: 6)
!6491 = !DILocation(line: 654, column: 10, scope: !6490)
!6492 = !DILocation(line: 654, column: 6, scope: !6480)
!6493 = !DILocation(line: 655, column: 24, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6490, file: !2688, line: 654, column: 18)
!6495 = !DILocation(line: 655, column: 19, scope: !6494)
!6496 = !DILocation(line: 656, column: 3, scope: !6494)
!6497 = !DILocation(line: 659, column: 7, scope: !6480)
!6498 = !DILocation(line: 660, column: 7, scope: !6480)
!6499 = !DILocation(line: 661, column: 7, scope: !6480)
!6500 = !DILocation(line: 662, column: 7, scope: !6480)
!6501 = !DILocation(line: 663, column: 7, scope: !6480)
!6502 = !DILocation(line: 665, column: 2, scope: !6480)
!6503 = !DILocation(line: 666, column: 1, scope: !6480)
!6504 = distinct !DISubprogram(name: "outs", scope: !2688, file: !2688, line: 1319, type: !6505, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6507)
!6505 = !DISubroutineType(types: !6506)
!6506 = !{!105, !4433, !104, !269, !269}
!6507 = !{!6508, !6509, !6510, !6511, !6512, !6513}
!6508 = !DILocalVariable(name: "out", arg: 1, scope: !6504, file: !2688, line: 1319, type: !4433)
!6509 = !DILocalVariable(name: "ctx", arg: 2, scope: !6504, file: !2688, line: 1320, type: !104)
!6510 = !DILocalVariable(name: "sp", arg: 3, scope: !6504, file: !2688, line: 1321, type: !269)
!6511 = !DILocalVariable(name: "ep", arg: 4, scope: !6504, file: !2688, line: 1322, type: !269)
!6512 = !DILocalVariable(name: "count", scope: !6504, file: !2688, line: 1324, type: !111)
!6513 = !DILocalVariable(name: "rc", scope: !6514, file: !2688, line: 1327, type: !105)
!6514 = distinct !DILexicalBlock(scope: !6504, file: !2688, line: 1326, column: 45)
!6515 = !DILocation(line: 0, scope: !6504)
!6516 = !DILocation(line: 1326, column: 2, scope: !6504)
!6517 = !DILocation(line: 1324, column: 9, scope: !6504)
!6518 = !DILocation(line: 1326, column: 13, scope: !6504)
!6519 = !DILocation(line: 1326, column: 19, scope: !6504)
!6520 = !DILocation(line: 1327, column: 21, scope: !6514)
!6521 = !DILocation(line: 1326, column: 36, scope: !6504)
!6522 = !DILocation(line: 1326, column: 39, scope: !6504)
!6523 = !DILocation(line: 1327, column: 24, scope: !6514)
!6524 = !DILocation(line: 1327, column: 16, scope: !6514)
!6525 = !DILocation(line: 1327, column: 12, scope: !6514)
!6526 = !DILocation(line: 0, scope: !6514)
!6527 = !DILocation(line: 1329, column: 10, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6514, file: !2688, line: 1329, column: 7)
!6529 = !DILocation(line: 1329, column: 7, scope: !6514)
!6530 = distinct !{!6530, !6516, !6531}
!6531 = !DILocation(line: 1333, column: 2, scope: !6504)
!6532 = !DILocation(line: 1336, column: 1, scope: !6504)
!6533 = distinct !DISubprogram(name: "encode_uint", scope: !2688, file: !2688, line: 788, type: !6534, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6536)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{!102, !2710, !6137, !102, !269}
!6536 = !{!6537, !6538, !6539, !6540, !6541, !6542, !6544, !6545}
!6537 = !DILocalVariable(name: "value", arg: 1, scope: !6533, file: !2688, line: 788, type: !2710)
!6538 = !DILocalVariable(name: "conv", arg: 2, scope: !6533, file: !2688, line: 789, type: !6137)
!6539 = !DILocalVariable(name: "bps", arg: 3, scope: !6533, file: !2688, line: 790, type: !102)
!6540 = !DILocalVariable(name: "bpe", arg: 4, scope: !6533, file: !2688, line: 791, type: !269)
!6541 = !DILocalVariable(name: "upcase", scope: !6533, file: !2688, line: 793, type: !492)
!6542 = !DILocalVariable(name: "radix", scope: !6533, file: !2688, line: 794, type: !6543)
!6543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6544 = !DILocalVariable(name: "bp", scope: !6533, file: !2688, line: 795, type: !102)
!6545 = !DILocalVariable(name: "lsv", scope: !6546, file: !2688, line: 798, type: !32)
!6546 = distinct !DILexicalBlock(scope: !6533, file: !2688, line: 797, column: 5)
!6547 = !DILocation(line: 0, scope: !6533)
!6548 = !DILocation(line: 793, column: 35, scope: !6533)
!6549 = !DILocation(line: 793, column: 24, scope: !6533)
!6550 = !DILocation(line: 793, column: 16, scope: !6533)
!6551 = !DILocation(line: 794, column: 29, scope: !6533)
!6552 = !DILocation(line: 795, column: 24, scope: !6533)
!6553 = !DILocation(line: 795, column: 17, scope: !6533)
!6554 = !DILocation(line: 797, column: 2, scope: !6533)
!6555 = !DILocation(line: 802, column: 9, scope: !6546)
!6556 = !DILocation(line: 798, column: 22, scope: !6546)
!6557 = !DILocation(line: 0, scope: !6546)
!6558 = !DILocation(line: 800, column: 16, scope: !6546)
!6559 = !DILocation(line: 800, column: 11, scope: !6546)
!6560 = !DILocation(line: 800, column: 4, scope: !6546)
!6561 = !DILocation(line: 800, column: 9, scope: !6546)
!6562 = !DILocation(line: 803, column: 18, scope: !6533)
!6563 = !DILocation(line: 803, column: 24, scope: !6533)
!6564 = !DILocation(line: 803, column: 2, scope: !6546)
!6565 = distinct !{!6565, !6554, !6566}
!6566 = !DILocation(line: 803, column: 37, scope: !6533)
!6567 = !DILocation(line: 808, column: 12, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6533, file: !2688, line: 808, column: 6)
!6569 = !DILocation(line: 808, column: 6, scope: !6533)
!6570 = !DILocation(line: 809, column: 7, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6568, file: !2688, line: 808, column: 23)
!6572 = !DILocation(line: 813, column: 3, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6574, file: !2688, line: 811, column: 27)
!6574 = distinct !DILexicalBlock(scope: !6575, file: !2688, line: 811, column: 14)
!6575 = distinct !DILexicalBlock(scope: !6571, file: !2688, line: 809, column: 7)
!6576 = !DILocation(line: 0, scope: !6575)
!6577 = !DILocation(line: 818, column: 2, scope: !6533)
!6578 = distinct !DISubprogram(name: "store_count", scope: !2688, file: !2688, line: 1280, type: !6579, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6583)
!6579 = !DISubroutineType(types: !6580)
!6580 = !{null, !6581, !104, !105}
!6581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6582, size: 32)
!6582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6104)
!6583 = !{!6584, !6585, !6586}
!6584 = !DILocalVariable(name: "conv", arg: 1, scope: !6578, file: !2688, line: 1280, type: !6581)
!6585 = !DILocalVariable(name: "dp", arg: 2, scope: !6578, file: !2688, line: 1281, type: !104)
!6586 = !DILocalVariable(name: "count", arg: 3, scope: !6578, file: !2688, line: 1282, type: !105)
!6587 = !DILocation(line: 0, scope: !6578)
!6588 = !DILocation(line: 1284, column: 38, scope: !6578)
!6589 = !DILocation(line: 1284, column: 2, scope: !6578)
!6590 = !DILocation(line: 1286, column: 4, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6578, file: !2688, line: 1284, column: 50)
!6592 = !DILocation(line: 1286, column: 14, scope: !6591)
!6593 = !DILocation(line: 1287, column: 3, scope: !6591)
!6594 = !DILocation(line: 1289, column: 24, scope: !6591)
!6595 = !DILocation(line: 1289, column: 22, scope: !6591)
!6596 = !DILocation(line: 1290, column: 3, scope: !6591)
!6597 = !DILocation(line: 1292, column: 18, scope: !6591)
!6598 = !DILocation(line: 1292, column: 4, scope: !6591)
!6599 = !DILocation(line: 1292, column: 16, scope: !6591)
!6600 = !DILocation(line: 1293, column: 3, scope: !6591)
!6601 = !DILocation(line: 1295, column: 4, scope: !6591)
!6602 = !DILocation(line: 1295, column: 15, scope: !6591)
!6603 = !DILocation(line: 1296, column: 3, scope: !6591)
!6604 = !DILocation(line: 1298, column: 22, scope: !6591)
!6605 = !DILocation(line: 1298, column: 4, scope: !6591)
!6606 = !DILocation(line: 1298, column: 20, scope: !6591)
!6607 = !DILocation(line: 1299, column: 3, scope: !6591)
!6608 = !DILocation(line: 1301, column: 21, scope: !6591)
!6609 = !DILocation(line: 1301, column: 4, scope: !6591)
!6610 = !DILocation(line: 1301, column: 19, scope: !6591)
!6611 = !DILocation(line: 1302, column: 3, scope: !6591)
!6612 = !DILocation(line: 1304, column: 4, scope: !6591)
!6613 = !DILocation(line: 1304, column: 17, scope: !6591)
!6614 = !DILocation(line: 1305, column: 3, scope: !6591)
!6615 = !DILocation(line: 1307, column: 4, scope: !6591)
!6616 = !DILocation(line: 1307, column: 20, scope: !6591)
!6617 = !DILocation(line: 1308, column: 3, scope: !6591)
!6618 = !DILocation(line: 1316, column: 1, scope: !6578)
!6619 = distinct !DISubprogram(name: "isupper", scope: !6620, file: !6620, line: 16, type: !448, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6621)
!6620 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6621 = !{!6622}
!6622 = !DILocalVariable(name: "a", arg: 1, scope: !6619, file: !6620, line: 16, type: !105)
!6623 = !DILocation(line: 0, scope: !6619)
!6624 = !DILocation(line: 18, column: 29, scope: !6619)
!6625 = !DILocation(line: 18, column: 45, scope: !6619)
!6626 = !DILocation(line: 18, column: 2, scope: !6619)
!6627 = distinct !DISubprogram(name: "conversion_radix", scope: !2688, file: !2688, line: 761, type: !6628, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6630)
!6628 = !DISubroutineType(types: !6629)
!6629 = !{!111, !103}
!6630 = !{!6631}
!6631 = !DILocalVariable(name: "specifier", arg: 1, scope: !6627, file: !2688, line: 761, type: !103)
!6632 = !DILocation(line: 0, scope: !6627)
!6633 = !DILocation(line: 763, column: 2, scope: !6627)
!6634 = !DILocation(line: 770, column: 3, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6627, file: !2688, line: 763, column: 21)
!6636 = !DILocation(line: 774, column: 3, scope: !6635)
!6637 = !DILocation(line: 0, scope: !6635)
!6638 = !DILocation(line: 776, column: 1, scope: !6627)
!6639 = distinct !DISubprogram(name: "extract_flags", scope: !2688, file: !2688, line: 339, type: !6481, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6640)
!6640 = !{!6641, !6642, !6643}
!6641 = !DILocalVariable(name: "conv", arg: 1, scope: !6639, file: !2688, line: 339, type: !6137)
!6642 = !DILocalVariable(name: "sp", arg: 2, scope: !6639, file: !2688, line: 340, type: !269)
!6643 = !DILocalVariable(name: "loop", scope: !6639, file: !2688, line: 342, type: !492)
!6644 = !DILocation(line: 0, scope: !6639)
!6645 = !DILocation(line: 344, column: 2, scope: !6639)
!6646 = !DILocation(line: 345, column: 11, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6639, file: !2688, line: 344, column: 5)
!6648 = !DILocation(line: 345, column: 3, scope: !6647)
!6649 = !DILocation(line: 351, column: 4, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6647, file: !2688, line: 345, column: 16)
!6651 = !DILocation(line: 354, column: 4, scope: !6650)
!6652 = !DILocation(line: 357, column: 4, scope: !6650)
!6653 = !DILocation(line: 360, column: 4, scope: !6650)
!6654 = !DILocation(line: 0, scope: !6650)
!6655 = !DILocation(line: 370, column: 12, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6639, file: !2688, line: 370, column: 6)
!6657 = !DILocation(line: 370, column: 22, scope: !6656)
!6658 = !DILocation(line: 371, column: 19, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6656, file: !2688, line: 370, column: 42)
!6660 = !DILocation(line: 372, column: 2, scope: !6659)
!6661 = !DILocation(line: 376, column: 2, scope: !6639)
!6662 = distinct !DISubprogram(name: "extract_width", scope: !2688, file: !2688, line: 388, type: !6481, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6663)
!6663 = !{!6664, !6665, !6666, !6667}
!6664 = !DILocalVariable(name: "conv", arg: 1, scope: !6662, file: !2688, line: 388, type: !6137)
!6665 = !DILocalVariable(name: "sp", arg: 2, scope: !6662, file: !2688, line: 389, type: !269)
!6666 = !DILocalVariable(name: "wp", scope: !6662, file: !2688, line: 398, type: !269)
!6667 = !DILocalVariable(name: "width", scope: !6662, file: !2688, line: 399, type: !111)
!6668 = !DILocation(line: 0, scope: !6662)
!6669 = !DILocation(line: 391, column: 8, scope: !6662)
!6670 = !DILocation(line: 391, column: 22, scope: !6662)
!6671 = !DILocation(line: 393, column: 6, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6662, file: !2688, line: 393, column: 6)
!6673 = !DILocation(line: 393, column: 10, scope: !6672)
!6674 = !DILocation(line: 393, column: 6, scope: !6662)
!6675 = !DILocation(line: 394, column: 20, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6672, file: !2688, line: 393, column: 18)
!6677 = !DILocation(line: 395, column: 10, scope: !6676)
!6678 = !DILocation(line: 395, column: 3, scope: !6676)
!6679 = !DILocation(line: 399, column: 17, scope: !6662)
!6680 = !DILocation(line: 401, column: 6, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6662, file: !2688, line: 401, column: 6)
!6682 = !DILocation(line: 401, column: 9, scope: !6681)
!6683 = !DILocation(line: 401, column: 6, scope: !6662)
!6684 = !DILocation(line: 402, column: 23, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6681, file: !2688, line: 401, column: 16)
!6686 = !DILocation(line: 403, column: 9, scope: !6685)
!6687 = !DILocation(line: 403, column: 21, scope: !6685)
!6688 = !DILocation(line: 405, column: 11, scope: !6685)
!6689 = !DILocation(line: 404, column: 21, scope: !6685)
!6690 = !DILocation(line: 406, column: 2, scope: !6685)
!6691 = !DILocation(line: 409, column: 1, scope: !6662)
!6692 = distinct !DISubprogram(name: "extract_prec", scope: !2688, file: !2688, line: 420, type: !6481, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6693)
!6693 = !{!6694, !6695, !6696}
!6694 = !DILocalVariable(name: "conv", arg: 1, scope: !6692, file: !2688, line: 420, type: !6137)
!6695 = !DILocalVariable(name: "sp", arg: 2, scope: !6692, file: !2688, line: 421, type: !269)
!6696 = !DILocalVariable(name: "prec", scope: !6692, file: !2688, line: 435, type: !111)
!6697 = !DILocation(line: 0, scope: !6692)
!6698 = !DILocation(line: 423, column: 24, scope: !6692)
!6699 = !DILocation(line: 423, column: 28, scope: !6692)
!6700 = !DILocation(line: 423, column: 8, scope: !6692)
!6701 = !DILocation(line: 423, column: 21, scope: !6692)
!6702 = !DILocation(line: 425, column: 6, scope: !6692)
!6703 = !DILocation(line: 428, column: 2, scope: !6692)
!6704 = !DILocation(line: 430, column: 6, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6692, file: !2688, line: 430, column: 6)
!6706 = !DILocation(line: 430, column: 10, scope: !6705)
!6707 = !DILocation(line: 430, column: 6, scope: !6692)
!6708 = !DILocation(line: 431, column: 19, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6705, file: !2688, line: 430, column: 18)
!6710 = !DILocation(line: 432, column: 10, scope: !6709)
!6711 = !DILocation(line: 432, column: 3, scope: !6709)
!6712 = !DILocation(line: 435, column: 16, scope: !6692)
!6713 = !DILocation(line: 437, column: 8, scope: !6692)
!6714 = !DILocation(line: 437, column: 19, scope: !6692)
!6715 = !DILocation(line: 439, column: 10, scope: !6692)
!6716 = !DILocation(line: 438, column: 20, scope: !6692)
!6717 = !DILocation(line: 441, column: 9, scope: !6692)
!6718 = !DILocation(line: 442, column: 1, scope: !6692)
!6719 = distinct !DISubprogram(name: "extract_length", scope: !2688, file: !2688, line: 453, type: !6481, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6720)
!6720 = !{!6721, !6722}
!6721 = !DILocalVariable(name: "conv", arg: 1, scope: !6719, file: !2688, line: 453, type: !6137)
!6722 = !DILocalVariable(name: "sp", arg: 2, scope: !6719, file: !2688, line: 454, type: !269)
!6723 = !DILocation(line: 0, scope: !6719)
!6724 = !DILocation(line: 456, column: 10, scope: !6719)
!6725 = !DILocation(line: 456, column: 2, scope: !6719)
!6726 = !DILocation(line: 458, column: 8, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6728, file: !2688, line: 458, column: 7)
!6728 = distinct !DILexicalBlock(scope: !6719, file: !2688, line: 456, column: 15)
!6729 = !DILocation(line: 458, column: 7, scope: !6727)
!6730 = !DILocation(line: 458, column: 13, scope: !6727)
!6731 = !DILocation(line: 0, scope: !6727)
!6732 = !DILocation(line: 458, column: 7, scope: !6728)
!6733 = !DILocation(line: 459, column: 21, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6727, file: !2688, line: 458, column: 21)
!6735 = !DILocation(line: 460, column: 4, scope: !6734)
!6736 = !DILocation(line: 461, column: 3, scope: !6734)
!6737 = !DILocation(line: 462, column: 21, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6727, file: !2688, line: 461, column: 10)
!6739 = !DILocation(line: 466, column: 8, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6728, file: !2688, line: 466, column: 7)
!6741 = !DILocation(line: 466, column: 7, scope: !6740)
!6742 = !DILocation(line: 466, column: 13, scope: !6740)
!6743 = !DILocation(line: 0, scope: !6740)
!6744 = !DILocation(line: 466, column: 7, scope: !6728)
!6745 = !DILocation(line: 467, column: 21, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6740, file: !2688, line: 466, column: 21)
!6747 = !DILocation(line: 468, column: 4, scope: !6746)
!6748 = !DILocation(line: 469, column: 3, scope: !6746)
!6749 = !DILocation(line: 470, column: 21, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6740, file: !2688, line: 469, column: 10)
!6751 = !DILocation(line: 474, column: 9, scope: !6728)
!6752 = !DILocation(line: 474, column: 20, scope: !6728)
!6753 = !DILocation(line: 475, column: 3, scope: !6728)
!6754 = !DILocation(line: 476, column: 3, scope: !6728)
!6755 = !DILocation(line: 478, column: 9, scope: !6728)
!6756 = !DILocation(line: 478, column: 20, scope: !6728)
!6757 = !DILocation(line: 479, column: 3, scope: !6728)
!6758 = !DILocation(line: 480, column: 3, scope: !6728)
!6759 = !DILocation(line: 482, column: 9, scope: !6728)
!6760 = !DILocation(line: 482, column: 20, scope: !6728)
!6761 = !DILocation(line: 483, column: 3, scope: !6728)
!6762 = !DILocation(line: 484, column: 3, scope: !6728)
!6763 = !DILocation(line: 486, column: 9, scope: !6728)
!6764 = !DILocation(line: 486, column: 20, scope: !6728)
!6765 = !DILocation(line: 487, column: 3, scope: !6728)
!6766 = !DILocation(line: 492, column: 21, scope: !6728)
!6767 = !DILocation(line: 493, column: 3, scope: !6728)
!6768 = !DILocation(line: 495, column: 9, scope: !6728)
!6769 = !DILocation(line: 495, column: 20, scope: !6728)
!6770 = !DILocation(line: 496, column: 3, scope: !6728)
!6771 = !DILocation(line: 498, column: 2, scope: !6719)
!6772 = distinct !DISubprogram(name: "extract_specifier", scope: !2688, file: !2688, line: 513, type: !6481, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6773)
!6773 = !{!6774, !6775, !6776, !6777}
!6774 = !DILocalVariable(name: "conv", arg: 1, scope: !6772, file: !2688, line: 513, type: !6137)
!6775 = !DILocalVariable(name: "sp", arg: 2, scope: !6772, file: !2688, line: 514, type: !269)
!6776 = !DILocalVariable(name: "unsupported", scope: !6772, file: !2688, line: 516, type: !492)
!6777 = !DILabel(scope: !6778, name: "int_conv", file: !2688, line: 526)
!6778 = distinct !DILexicalBlock(scope: !6772, file: !2688, line: 520, column: 27)
!6779 = !DILocation(line: 0, scope: !6772)
!6780 = !DILocation(line: 518, column: 20, scope: !6772)
!6781 = !DILocation(line: 518, column: 8, scope: !6772)
!6782 = !DILocation(line: 518, column: 18, scope: !6772)
!6783 = !DILocation(line: 520, column: 2, scope: !6772)
!6784 = !DILocation(line: 525, column: 3, scope: !6778)
!6785 = !DILocation(line: 0, scope: !6778)
!6786 = !DILocation(line: 526, column: 1, scope: !6778)
!6787 = !DILocation(line: 528, column: 24, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6778, file: !2688, line: 528, column: 7)
!6789 = !DILocation(line: 528, column: 7, scope: !6778)
!6790 = !DILocation(line: 535, column: 23, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6778, file: !2688, line: 535, column: 7)
!6792 = !DILocation(line: 535, column: 7, scope: !6778)
!6793 = !DILocation(line: 536, column: 36, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6791, file: !2688, line: 535, column: 31)
!6795 = !DILocation(line: 537, column: 3, scope: !6794)
!6796 = !DILocation(line: 570, column: 9, scope: !6778)
!6797 = !DILocation(line: 570, column: 23, scope: !6778)
!6798 = !DILocation(line: 575, column: 4, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !2688, line: 573, column: 48)
!6800 = distinct !DILexicalBlock(scope: !6778, file: !2688, line: 573, column: 7)
!6801 = !DILocation(line: 603, column: 9, scope: !6778)
!6802 = !DILocation(line: 603, column: 23, scope: !6778)
!6803 = !DILocation(line: 605, column: 24, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6778, file: !2688, line: 605, column: 7)
!6805 = !DILocation(line: 605, column: 7, scope: !6778)
!6806 = !DILocation(line: 612, column: 9, scope: !6778)
!6807 = !DILocation(line: 612, column: 23, scope: !6778)
!6808 = !DILocation(line: 619, column: 24, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6778, file: !2688, line: 619, column: 7)
!6810 = !DILocation(line: 619, column: 7, scope: !6778)
!6811 = !DILocation(line: 625, column: 9, scope: !6778)
!6812 = !DILocation(line: 625, column: 17, scope: !6778)
!6813 = !DILocation(line: 626, column: 3, scope: !6778)
!6814 = !DILocation(line: 629, column: 20, scope: !6772)
!6815 = !DILocation(line: 629, column: 8, scope: !6772)
!6816 = !DILocation(line: 518, column: 23, scope: !6772)
!6817 = !DILocation(line: 631, column: 2, scope: !6772)
!6818 = distinct !DISubprogram(name: "extract_decimal", scope: !2688, file: !2688, line: 318, type: !6819, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6821)
!6819 = !DISubroutineType(types: !6820)
!6820 = !{!111, !427}
!6821 = !{!6822, !6823, !6824}
!6822 = !DILocalVariable(name: "str", arg: 1, scope: !6818, file: !2688, line: 318, type: !427)
!6823 = !DILocalVariable(name: "sp", scope: !6818, file: !2688, line: 320, type: !269)
!6824 = !DILocalVariable(name: "val", scope: !6818, file: !2688, line: 321, type: !111)
!6825 = !DILocation(line: 0, scope: !6818)
!6826 = !DILocation(line: 320, column: 19, scope: !6818)
!6827 = !DILocation(line: 323, column: 37, scope: !6818)
!6828 = !DILocation(line: 323, column: 17, scope: !6818)
!6829 = !DILocation(line: 323, column: 9, scope: !6818)
!6830 = !DILocation(line: 323, column: 2, scope: !6818)
!6831 = !DILocation(line: 324, column: 13, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6818, file: !2688, line: 323, column: 43)
!6833 = !DILocation(line: 324, column: 24, scope: !6832)
!6834 = !DILocation(line: 324, column: 19, scope: !6832)
!6835 = !DILocation(line: 324, column: 27, scope: !6832)
!6836 = distinct !{!6836, !6830, !6837}
!6837 = !DILocation(line: 325, column: 2, scope: !6818)
!6838 = !DILocation(line: 326, column: 7, scope: !6818)
!6839 = !DILocation(line: 327, column: 2, scope: !6818)
!6840 = distinct !DISubprogram(name: "isdigit", scope: !6620, file: !6620, line: 43, type: !448, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6841)
!6841 = !{!6842}
!6842 = !DILocalVariable(name: "a", arg: 1, scope: !6840, file: !6620, line: 43, type: !105)
!6843 = !DILocation(line: 0, scope: !6840)
!6844 = !DILocation(line: 45, column: 29, scope: !6840)
!6845 = !DILocation(line: 45, column: 45, scope: !6840)
!6846 = !DILocation(line: 45, column: 2, scope: !6840)
!6847 = distinct !DISubprogram(name: "assert_post_action", scope: !6848, file: !6848, line: 26, type: !6849, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !6851)
!6848 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6849 = !DISubroutineType(types: !6850)
!6850 = !{null, !269, !32}
!6851 = !{!6852, !6853}
!6852 = !DILocalVariable(name: "file", arg: 1, scope: !6847, file: !6848, line: 26, type: !269)
!6853 = !DILocalVariable(name: "line", arg: 2, scope: !6847, file: !6848, line: 26, type: !32)
!6854 = !DILocation(line: 0, scope: !6847)
!6855 = !DILocation(line: 43, column: 2, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6847, file: !6848, line: 43, column: 2)
!6857 = !{i64 2155071434, i64 2155071450, i64 2155071476, i64 2155071504, i64 2155071524}
!6858 = !DILocation(line: 44, column: 1, scope: !6847)
!6859 = distinct !DISubprogram(name: "assert_print", scope: !6848, file: !6848, line: 46, type: !5043, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !6860)
!6860 = !{!6861, !6862}
!6861 = !DILocalVariable(name: "fmt", arg: 1, scope: !6859, file: !6848, line: 46, type: !269)
!6862 = !DILocalVariable(name: "ap", scope: !6859, file: !6848, line: 48, type: !6863)
!6863 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4051, line: 99, baseType: !6864)
!6864 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4051, line: 40, baseType: !6865)
!6865 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6848, baseType: !6866)
!6866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6867)
!6867 = !{!6868}
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6866, file: !6848, line: 48, baseType: !104, size: 32)
!6869 = !DILocation(line: 0, scope: !6859)
!6870 = !DILocation(line: 48, column: 2, scope: !6859)
!6871 = !DILocation(line: 48, column: 10, scope: !6859)
!6872 = !DILocation(line: 50, column: 2, scope: !6859)
!6873 = !DILocation(line: 52, column: 2, scope: !6859)
!6874 = !DILocation(line: 54, column: 2, scope: !6859)
!6875 = !DILocation(line: 55, column: 1, scope: !6859)
!6876 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6877, file: !6877, line: 9, type: !266, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !397)
!6877 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!6878 = !DILocation(line: 11, column: 1, scope: !6876)
!6879 = !{i64 2147565314, i64 2147565357, i64 2147565397}
!6880 = !DILocation(line: 12, column: 1, scope: !6876)
!6881 = !{i64 2147569541, i64 2147569584, i64 2147569624}
!6882 = !DILocation(line: 13, column: 1, scope: !6876)
!6883 = !{i64 2147569750, i64 2147569793, i64 2147569833}
!6884 = !DILocation(line: 14, column: 1, scope: !6876)
!6885 = !{i64 2147569919, i64 2147569962, i64 2147570002}
!6886 = !DILocation(line: 15, column: 1, scope: !6876)
!6887 = !{i64 2147570082, i64 2147570125, i64 2147570165}
!6888 = !DILocation(line: 16, column: 1, scope: !6876)
!6889 = !{i64 2147570266, i64 2147570309, i64 2147570349}
!6890 = !DILocation(line: 17, column: 1, scope: !6876)
!6891 = !{i64 2147570445, i64 2147570488, i64 2147570528}
!6892 = !DILocation(line: 18, column: 1, scope: !6876)
!6893 = !{i64 2147570687, i64 2147570730, i64 2147570770}
!6894 = !DILocation(line: 19, column: 1, scope: !6876)
!6895 = !{i64 2147570922, i64 2147570965, i64 2147571005}
!6896 = !DILocation(line: 20, column: 1, scope: !6876)
!6897 = !{i64 2147571108, i64 2147571151, i64 2147571191}
!6898 = !DILocation(line: 21, column: 1, scope: !6876)
!6899 = !{i64 2147571324, i64 2147571367, i64 2147571407}
!6900 = !DILocation(line: 22, column: 1, scope: !6876)
!6901 = !{i64 2147571527, i64 2147571570, i64 2147571610}
!6902 = !DILocation(line: 23, column: 1, scope: !6876)
!6903 = !{i64 2147571730, i64 2147571773, i64 2147571813}
!6904 = !DILocation(line: 24, column: 1, scope: !6876)
!6905 = !{i64 2147571905, i64 2147571948, i64 2147571988}
!6906 = !DILocation(line: 25, column: 1, scope: !6876)
!6907 = !{i64 2147572113, i64 2147572156, i64 2147572196}
!6908 = !DILocation(line: 26, column: 1, scope: !6876)
!6909 = !{i64 2147572317, i64 2147572360, i64 2147572400}
!6910 = !DILocation(line: 27, column: 1, scope: !6876)
!6911 = !{i64 2147572510, i64 2147572553, i64 2147572593}
!6912 = !DILocation(line: 28, column: 1, scope: !6876)
!6913 = !{i64 2147572712, i64 2147572755, i64 2147572795}
!6914 = !DILocation(line: 29, column: 1, scope: !6876)
!6915 = !{i64 2147572911, i64 2147572954, i64 2147572994}
!6916 = !DILocation(line: 30, column: 1, scope: !6876)
!6917 = !{i64 2147573138, i64 2147573181, i64 2147573221}
!6918 = !DILocation(line: 31, column: 1, scope: !6876)
!6919 = !{i64 2147573340, i64 2147573383, i64 2147573423}
!6920 = !DILocation(line: 32, column: 1, scope: !6876)
!6921 = !{i64 2147573555, i64 2147573598, i64 2147573638}
!6922 = !DILocation(line: 33, column: 1, scope: !6876)
!6923 = !{i64 2147573727, i64 2147573770, i64 2147573810}
!6924 = !DILocation(line: 34, column: 1, scope: !6876)
!6925 = !{i64 2147573929, i64 2147573972, i64 2147574012}
!6926 = !DILocation(line: 35, column: 1, scope: !6876)
!6927 = !{i64 2147574155, i64 2147574198, i64 2147574238}
!6928 = !DILocation(line: 36, column: 1, scope: !6876)
!6929 = !{i64 2147574354, i64 2147574397, i64 2147574437}
!6930 = !DILocation(line: 37, column: 1, scope: !6876)
!6931 = !{i64 2147574529, i64 2147574572, i64 2147574612}
!6932 = !DILocation(line: 38, column: 1, scope: !6876)
!6933 = !{i64 2147574782, i64 2147574825, i64 2147574865}
!6934 = !DILocation(line: 39, column: 1, scope: !6876)
!6935 = !{i64 2147575023, i64 2147575066, i64 2147575106}
!6936 = !DILocation(line: 40, column: 1, scope: !6876)
!6937 = !{i64 2147575258, i64 2147575301, i64 2147575341}
!6938 = !DILocation(line: 41, column: 1, scope: !6876)
!6939 = !{i64 2147575490, i64 2147575533, i64 2147575573}
!6940 = !DILocation(line: 42, column: 1, scope: !6876)
!6941 = !{i64 2147575716, i64 2147575759, i64 2147575799}
!6942 = !DILocation(line: 43, column: 1, scope: !6876)
!6943 = !{i64 2147575942, i64 2147575985, i64 2147576025}
!6944 = !DILocation(line: 44, column: 1, scope: !6876)
!6945 = !{i64 2147576168, i64 2147576211, i64 2147576251}
!6946 = !DILocation(line: 45, column: 1, scope: !6876)
!6947 = !{i64 2147576403, i64 2147576446, i64 2147576486}
!6948 = !DILocation(line: 46, column: 1, scope: !6876)
!6949 = !{i64 2147576647, i64 2147576690, i64 2147576730}
!6950 = !DILocation(line: 47, column: 1, scope: !6876)
!6951 = !{i64 2147576894, i64 2147576937, i64 2147576977}
!6952 = !DILocation(line: 48, column: 1, scope: !6876)
!6953 = !{i64 2147577126, i64 2147577169, i64 2147577209}
!6954 = !DILocation(line: 49, column: 1, scope: !6876)
!6955 = !{i64 2147577370, i64 2147577413, i64 2147577453}
!6956 = !DILocation(line: 50, column: 1, scope: !6876)
!6957 = !{i64 2147577608, i64 2147577651, i64 2147577691}
!6958 = !DILocation(line: 51, column: 1, scope: !6876)
!6959 = !{i64 2147577882, i64 2147577925, i64 2147577965}
!6960 = !DILocation(line: 52, column: 1, scope: !6876)
!6961 = !{i64 2147578120, i64 2147578163, i64 2147578203}
!6962 = !DILocation(line: 53, column: 1, scope: !6876)
!6963 = !{i64 2147582434, i64 2147582477, i64 2147582517}
!6964 = !DILocation(line: 54, column: 1, scope: !6876)
!6965 = !{i64 2147582678, i64 2147582721, i64 2147582761}
!6966 = !DILocation(line: 55, column: 1, scope: !6876)
!6967 = !{i64 2147582913, i64 2147582956, i64 2147582996}
!6968 = !DILocation(line: 56, column: 1, scope: !6876)
!6969 = !{i64 2147583163, i64 2147583206, i64 2147583246}
!6970 = !DILocation(line: 57, column: 1, scope: !6876)
!6971 = !{i64 2147583410, i64 2147583453, i64 2147583493}
!6972 = !DILocation(line: 58, column: 1, scope: !6876)
!6973 = !{i64 2147583645, i64 2147583688, i64 2147583728}
!6974 = !DILocation(line: 59, column: 1, scope: !6876)
!6975 = !{i64 2147583880, i64 2147583923, i64 2147583963}
!6976 = !DILocation(line: 60, column: 1, scope: !6876)
!6977 = !{i64 2147584115, i64 2147584158, i64 2147584198}
!6978 = !DILocation(line: 61, column: 1, scope: !6876)
!6979 = !{i64 2147584350, i64 2147584393, i64 2147584433}
!6980 = !DILocation(line: 62, column: 1, scope: !6876)
!6981 = !{i64 2147584594, i64 2147584637, i64 2147584677}
!6982 = !DILocation(line: 63, column: 1, scope: !6876)
!6983 = !{i64 2147584832, i64 2147584875, i64 2147584915}
!6984 = !DILocation(line: 64, column: 1, scope: !6876)
!6985 = !{i64 2147585073, i64 2147585116, i64 2147585156}
!6986 = !DILocation(line: 65, column: 1, scope: !6876)
!6987 = !{i64 2147585353, i64 2147585396, i64 2147585436}
!6988 = !DILocation(line: 66, column: 1, scope: !6876)
!6989 = !{i64 2147585612, i64 2147585655, i64 2147585695}
!6990 = !DILocation(line: 67, column: 1, scope: !6876)
!6991 = !{i64 2147585850, i64 2147585893, i64 2147585933}
!6992 = !DILocation(line: 68, column: 1, scope: !6876)
!6993 = !{i64 2147586079, i64 2147586122, i64 2147586162}
!6994 = !DILocation(line: 69, column: 1, scope: !6876)
!6995 = !{i64 2147586287, i64 2147586330, i64 2147586370}
!6996 = !DILocation(line: 70, column: 1, scope: !6876)
!6997 = !{i64 2147586498, i64 2147586541, i64 2147586581}
!6998 = !DILocation(line: 71, column: 1, scope: !6876)
!6999 = !{i64 2147586733, i64 2147586776, i64 2147586816}
!7000 = !DILocation(line: 72, column: 1, scope: !6876)
!7001 = !{i64 2147586962, i64 2147587005, i64 2147587045}
!7002 = !DILocation(line: 73, column: 1, scope: !6876)
!7003 = !{i64 2147587179, i64 2147587222, i64 2147587262}
!7004 = !DILocation(line: 74, column: 1, scope: !6876)
!7005 = !{i64 2147587408, i64 2147587451, i64 2147587491}
!7006 = !DILocation(line: 75, column: 1, scope: !6876)
!7007 = !{i64 2147587646, i64 2147587689, i64 2147587729}
!7008 = !DILocation(line: 76, column: 1, scope: !6876)
!7009 = !{i64 2147587878, i64 2147587921, i64 2147587961}
!7010 = !DILocation(line: 77, column: 1, scope: !6876)
!7011 = !{i64 2147588104, i64 2147588147, i64 2147588187}
!7012 = !DILocation(line: 78, column: 1, scope: !6876)
!7013 = !{i64 2147588321, i64 2147588364, i64 2147588404}
!7014 = !DILocation(line: 79, column: 1, scope: !6876)
!7015 = !{i64 2147588553, i64 2147588596, i64 2147588636}
!7016 = !DILocation(line: 80, column: 1, scope: !6876)
!7017 = !{i64 2147588779, i64 2147588822, i64 2147588862}
!7018 = !DILocation(line: 81, column: 1, scope: !6876)
!7019 = !{i64 2147588993, i64 2147589036, i64 2147589076}
!7020 = !DILocation(line: 82, column: 1, scope: !6876)
!7021 = !{i64 2147589213, i64 2147589256, i64 2147589296}
!7022 = !DILocation(line: 83, column: 1, scope: !6876)
!7023 = !{i64 2147589445, i64 2147589488, i64 2147589528}
!7024 = !DILocation(line: 84, column: 1, scope: !6876)
!7025 = !{i64 2147589653, i64 2147589696, i64 2147589736}
!7026 = !DILocation(line: 85, column: 1, scope: !6876)
!7027 = !{i64 2147589858, i64 2147589901, i64 2147589941}
!7028 = !DILocation(line: 86, column: 1, scope: !6876)
!7029 = !{i64 2147590075, i64 2147590118, i64 2147590158}
!7030 = !DILocation(line: 87, column: 1, scope: !6876)
!7031 = !{i64 2147590289, i64 2147590332, i64 2147590372}
!7032 = !DILocation(line: 88, column: 1, scope: !6876)
!7033 = !{i64 2147594576, i64 2147594619, i64 2147594659}
!7034 = !DILocation(line: 89, column: 1, scope: !6876)
!7035 = !{i64 2147594796, i64 2147594839, i64 2147594879}
!7036 = !DILocation(line: 90, column: 1, scope: !6876)
!7037 = !{i64 2147595001, i64 2147595044, i64 2147595084}
!7038 = !DILocation(line: 91, column: 1, scope: !6876)
!7039 = !{i64 2147595233, i64 2147595276, i64 2147595316}
!7040 = !DILocation(line: 92, column: 1, scope: !6876)
!7041 = !{i64 2147595468, i64 2147595511, i64 2147595551}
!7042 = !DILocation(line: 93, column: 1, scope: !6876)
!7043 = !{i64 2147595718, i64 2147595761, i64 2147595801}
!7044 = !DILocation(line: 94, column: 1, scope: !6876)
!7045 = !{i64 2147595968, i64 2147596011, i64 2147596051}
!7046 = !DILocation(line: 95, column: 1, scope: !6876)
!7047 = !{i64 2147596206, i64 2147596249, i64 2147596289}
!7048 = !DILocation(line: 96, column: 1, scope: !6876)
!7049 = !{i64 2147596417, i64 2147596460, i64 2147596500}
!7050 = !DILocation(line: 97, column: 1, scope: !6876)
!7051 = !{i64 2147596634, i64 2147596677, i64 2147596717}
!7052 = !DILocation(line: 98, column: 1, scope: !6876)
!7053 = !{i64 2147596830, i64 2147596873, i64 2147596913}
!7054 = !DILocation(line: 99, column: 1, scope: !6876)
!7055 = !{i64 2147597032, i64 2147597075, i64 2147597115}
!7056 = !DILocation(line: 100, column: 1, scope: !6876)
!7057 = !{i64 2147597225, i64 2147597268, i64 2147597308}
!7058 = !DILocation(line: 101, column: 1, scope: !6876)
!7059 = !{i64 2147597433, i64 2147597476, i64 2147597516}
!7060 = !DILocation(line: 102, column: 1, scope: !6876)
!7061 = !{i64 2147597629, i64 2147597672, i64 2147597712}
!7062 = !DILocation(line: 103, column: 1, scope: !6876)
!7063 = !{i64 2147597861, i64 2147597904, i64 2147597944}
!7064 = !DILocation(line: 104, column: 1, scope: !6876)
!7065 = !{i64 2147598072, i64 2147598115, i64 2147598155}
!7066 = !DILocation(line: 105, column: 1, scope: !6876)
!7067 = !{i64 2147598271, i64 2147598314, i64 2147598354}
!7068 = !DILocation(line: 106, column: 1, scope: !6876)
!7069 = !{i64 2147598446, i64 2147598489, i64 2147598529}
!7070 = !DILocation(line: 107, column: 1, scope: !6876)
!7071 = !{i64 2147598630, i64 2147598673, i64 2147598713}
!7072 = !DILocation(line: 108, column: 1, scope: !6876)
!7073 = !{i64 2147598832, i64 2147598875, i64 2147598915}
!7074 = !DILocation(line: 109, column: 1, scope: !6876)
!7075 = !{i64 2147599031, i64 2147599074, i64 2147599114}
!7076 = !DILocation(line: 110, column: 1, scope: !6876)
!7077 = !{i64 2147599236, i64 2147599279, i64 2147599319}
!7078 = !DILocation(line: 111, column: 1, scope: !6876)
!7079 = !{i64 2147599429, i64 2147599472, i64 2147599512}
!7080 = !DILocation(line: 112, column: 1, scope: !6876)
!7081 = !{i64 2147599595, i64 2147599638, i64 2147599678}
!7082 = !DILocation(line: 113, column: 1, scope: !6876)
!7083 = !{i64 2147599779, i64 2147599822, i64 2147599862}
!7084 = !DILocation(line: 114, column: 1, scope: !6876)
!7085 = !{i64 2147599969, i64 2147600012, i64 2147600052}
!7086 = !DILocation(line: 115, column: 1, scope: !6876)
!7087 = !{i64 2147600153, i64 2147600196, i64 2147600236}
!7088 = !DILocation(line: 116, column: 1, scope: !6876)
!7089 = !{i64 2147600367, i64 2147600410, i64 2147600450}
!7090 = !DILocation(line: 117, column: 1, scope: !6876)
!7091 = !{i64 2147600578, i64 2147600621, i64 2147600661}
!7092 = !DILocation(line: 118, column: 1, scope: !6876)
!7093 = !{i64 2147600801, i64 2147600844, i64 2147600884}
!7094 = !DILocation(line: 119, column: 1, scope: !6876)
!7095 = !{i64 2147600985, i64 2147601028, i64 2147601068}
!7096 = !DILocation(line: 120, column: 1, scope: !6876)
!7097 = !{i64 2147601199, i64 2147601242, i64 2147601282}
!7098 = !DILocation(line: 121, column: 1, scope: !6876)
!7099 = !{i64 2147601365, i64 2147601408, i64 2147601448}
!7100 = !DILocation(line: 122, column: 1, scope: !6876)
!7101 = !{i64 2147601546, i64 2147601589, i64 2147601629}
!7102 = !DILocation(line: 123, column: 1, scope: !6876)
!7103 = !{i64 2147601739, i64 2147601782, i64 2147601822}
!7104 = !DILocation(line: 124, column: 1, scope: !6876)
!7105 = !{i64 2147601965, i64 2147602008, i64 2147602048}
!7106 = !DILocation(line: 125, column: 1, scope: !6876)
!7107 = !{i64 2147602179, i64 2147602222, i64 2147602262}
!7108 = !DILocation(line: 126, column: 1, scope: !6876)
!7109 = !{i64 2147602405, i64 2147602448, i64 2147602488}
!7110 = !DILocation(line: 127, column: 1, scope: !6876)
!7111 = !{i64 2147602622, i64 2147602665, i64 2147602705}
!7112 = !DILocation(line: 128, column: 1, scope: !6876)
!7113 = !{i64 2147602899, i64 2147602942, i64 2147602982}
!7114 = !DILocation(line: 129, column: 1, scope: !6876)
!7115 = !{i64 2147603125, i64 2147603168, i64 2147603208}
!7116 = !DILocation(line: 130, column: 1, scope: !6876)
!7117 = !{i64 2147603333, i64 2147603376, i64 2147603416}
!7118 = !DILocation(line: 131, column: 1, scope: !6876)
!7119 = !{i64 2147603529, i64 2147603572, i64 2147603612}
!7120 = !DILocation(line: 132, column: 1, scope: !6876)
!7121 = !{i64 2147607855, i64 2147607898, i64 2147607938}
!7122 = !DILocation(line: 133, column: 1, scope: !6876)
!7123 = !{i64 2147608069, i64 2147608112, i64 2147608152}
!7124 = !DILocation(line: 134, column: 1, scope: !6876)
!7125 = !{i64 2147608244, i64 2147608287, i64 2147608327}
!7126 = !DILocation(line: 135, column: 1, scope: !6876)
!7127 = !{i64 2147608498, i64 2147608541, i64 2147608581}
!7128 = !DILocation(line: 136, column: 1, scope: !6876)
!7129 = !{i64 2147608697, i64 2147608740, i64 2147608780}
!7130 = !DILocation(line: 137, column: 1, scope: !6876)
!7131 = !{i64 2147608939, i64 2147608982, i64 2147609022}
!7132 = !DILocation(line: 138, column: 1, scope: !6876)
!7133 = !{i64 2147609102, i64 2147609145, i64 2147609185}
!7134 = !DILocation(line: 139, column: 1, scope: !6876)
!7135 = !{i64 2147609289, i64 2147609332, i64 2147609372}
!7136 = !DILocation(line: 140, column: 1, scope: !6876)
!7137 = !{i64 2147609497, i64 2147609540, i64 2147609580}
!7138 = !DILocation(line: 141, column: 1, scope: !6876)
!7139 = !{i64 2147609693, i64 2147609736, i64 2147609776}
!7140 = !DILocation(line: 142, column: 1, scope: !6876)
!7141 = !{i64 2147609886, i64 2147609929, i64 2147609969}
!7142 = !DILocation(line: 143, column: 1, scope: !6876)
!7143 = !{i64 2147610069, i64 2147610112, i64 2147610152}
!7144 = !DILocation(line: 144, column: 1, scope: !6876)
!7145 = !{i64 2147610283, i64 2147610326, i64 2147610366}
!7146 = !DILocation(line: 145, column: 1, scope: !6876)
!7147 = !{i64 2147610494, i64 2147610537, i64 2147610577}
!7148 = !DILocation(line: 146, column: 1, scope: !6876)
!7149 = !{i64 2147610714, i64 2147610757, i64 2147610797}
!7150 = !DILocation(line: 147, column: 1, scope: !6876)
!7151 = !{i64 2147610921, i64 2147610964, i64 2147611004}
!7152 = !DILocation(line: 148, column: 1, scope: !6876)
!7153 = !{i64 2147611194, i64 2147611237, i64 2147611277}
!7154 = !DILocation(line: 149, column: 1, scope: !6876)
!7155 = !{i64 2147611442, i64 2147611485, i64 2147611525}
!7156 = !DILocation(line: 150, column: 1, scope: !6876)
!7157 = !{i64 2147611641, i64 2147611684, i64 2147611724}
!7158 = !DILocation(line: 151, column: 1, scope: !6876)
!7159 = !{i64 2147611876, i64 2147611919, i64 2147611959}
!7160 = !DILocation(line: 152, column: 1, scope: !6876)
!7161 = !{i64 2147612126, i64 2147612169, i64 2147612209}
!7162 = !DILocation(line: 153, column: 1, scope: !6876)
!7163 = !{i64 2147612328, i64 2147612371, i64 2147612411}
!7164 = !DILocation(line: 154, column: 1, scope: !6876)
!7165 = !{i64 2147612551, i64 2147612594, i64 2147612634}
!7166 = !DILocation(line: 155, column: 1, scope: !6876)
!7167 = !{i64 2147612765, i64 2147612808, i64 2147612848}
!7168 = !DILocation(line: 156, column: 1, scope: !6876)
!7169 = !{i64 2147613009, i64 2147613052, i64 2147613092}
!7170 = !DILocation(line: 157, column: 1, scope: !6876)
!7171 = !{i64 2147613238, i64 2147613281, i64 2147613321}
!7172 = !DILocation(line: 158, column: 1, scope: !6876)
!7173 = !{i64 2147613467, i64 2147613510, i64 2147613550}
!7174 = !DILocation(line: 159, column: 1, scope: !6876)
!7175 = !{i64 2147613675, i64 2147613718, i64 2147613758}
!7176 = !DILocation(line: 160, column: 1, scope: !6876)
!7177 = !{i64 2147613913, i64 2147613956, i64 2147613996}
!7178 = !DILocation(line: 161, column: 1, scope: !6876)
!7179 = !{i64 2147614139, i64 2147614182, i64 2147614222}
!7180 = !DILocation(line: 162, column: 1, scope: !6876)
!7181 = !{i64 2147614398, i64 2147614441, i64 2147614481}
!7182 = !DILocation(line: 163, column: 1, scope: !6876)
!7183 = !{i64 2147614618, i64 2147614661, i64 2147614701}
!7184 = !DILocation(line: 164, column: 1, scope: !6876)
!7185 = !{i64 2147614850, i64 2147614893, i64 2147614933}
!7186 = !DILocation(line: 165, column: 1, scope: !6876)
!7187 = !{i64 2147615091, i64 2147615134, i64 2147615174}
!7188 = !DILocation(line: 166, column: 1, scope: !6876)
!7189 = !{i64 2147615332, i64 2147615375, i64 2147615415}
!7190 = !DILocation(line: 167, column: 1, scope: !6876)
!7191 = !{i64 2147615555, i64 2147615598, i64 2147615638}
!7192 = !DILocation(line: 168, column: 1, scope: !6876)
!7193 = !{i64 2147615772, i64 2147615815, i64 2147615855}
!7194 = !DILocation(line: 169, column: 1, scope: !6876)
!7195 = !{i64 2147616013, i64 2147616056, i64 2147616096}
!7196 = !DILocation(line: 170, column: 1, scope: !6876)
!7197 = !{i64 2147620261, i64 2147620304, i64 2147620344}
!7198 = !DILocation(line: 171, column: 1, scope: !6876)
!7199 = !{i64 2147620448, i64 2147620491, i64 2147620531}
!7200 = !DILocation(line: 172, column: 1, scope: !6876)
!7201 = !{i64 2147620611, i64 2147620654, i64 2147620694}
!7202 = !DILocation(line: 173, column: 1, scope: !6876)
!7203 = !{i64 2147620816, i64 2147620859, i64 2147620899}
!7204 = !DILocation(line: 174, column: 1, scope: !6876)
!7205 = !{i64 2147621009, i64 2147621052, i64 2147621092}
!7206 = !DILocation(line: 175, column: 1, scope: !6876)
!7207 = !{i64 2147621268, i64 2147621311, i64 2147621351}
!7208 = !DILocation(line: 176, column: 1, scope: !6876)
!7209 = !{i64 2147621491, i64 2147621534, i64 2147621574}
!7210 = !DILocation(line: 177, column: 1, scope: !6876)
!7211 = !{i64 2147621720, i64 2147621763, i64 2147621803}
!7212 = !DILocation(line: 178, column: 1, scope: !6876)
!7213 = !{i64 2147621934, i64 2147621977, i64 2147622017}
!7214 = !DILocation(line: 179, column: 1, scope: !6876)
!7215 = !{i64 2147622136, i64 2147622179, i64 2147622219}
!7216 = !DILocation(line: 180, column: 1, scope: !6876)
!7217 = !{i64 2147622332, i64 2147622375, i64 2147622415}
!7218 = !DILocation(line: 181, column: 1, scope: !6876)
!7219 = !{i64 2147622544, i64 2147622587, i64 2147622627}
!7220 = !DILocation(line: 182, column: 1, scope: !6876)
!7221 = !{i64 2147622765, i64 2147622808, i64 2147622848}
!7222 = !DILocation(line: 183, column: 1, scope: !6876)
!7223 = !{i64 2147622979, i64 2147623022, i64 2147623062}
!7224 = !DILocation(line: 184, column: 1, scope: !6876)
!7225 = !{i64 2147623169, i64 2147623212, i64 2147623252}
!7226 = !DILocation(line: 185, column: 1, scope: !6876)
!7227 = !{i64 2147623368, i64 2147623411, i64 2147623451}
!7228 = !DILocation(line: 186, column: 1, scope: !6876)
!7229 = !{i64 2147623573, i64 2147623616, i64 2147623656}
!7230 = !DILocation(line: 187, column: 1, scope: !6876)
!7231 = !{i64 2147623793, i64 2147623836, i64 2147623876}
!7232 = !DILocation(line: 188, column: 1, scope: !6876)
!7233 = !{i64 2147623994, i64 2147624037, i64 2147624077}
!7234 = !DILocation(line: 189, column: 1, scope: !6876)
!7235 = !{i64 2147624193, i64 2147624236, i64 2147624276}
!7236 = !DILocation(line: 190, column: 1, scope: !6876)
!7237 = !{i64 2147624398, i64 2147624441, i64 2147624481}
!7238 = !DILocation(line: 191, column: 1, scope: !6876)
!7239 = !{i64 2147624567, i64 2147624610, i64 2147624650}
!7240 = !DILocation(line: 192, column: 1, scope: !6876)
!7241 = !{i64 2147624751, i64 2147624794, i64 2147624834}
!7242 = !DILocation(line: 193, column: 1, scope: !6876)
!7243 = !{i64 2147624935, i64 2147624978, i64 2147625018}
!7244 = !DILocation(line: 194, column: 1, scope: !6876)
!7245 = !{i64 2147625122, i64 2147625165, i64 2147625205}
!7246 = !DILocation(line: 195, column: 1, scope: !6876)
!7247 = !{i64 2147625306, i64 2147625349, i64 2147625389}
!7248 = !DILocation(line: 196, column: 1, scope: !6876)
!7249 = !{i64 2147625544, i64 2147625587, i64 2147625627}
!7250 = !DILocation(line: 197, column: 1, scope: !6876)
!7251 = !{i64 2147625774, i64 2147625817, i64 2147625857}
!7252 = !DILocation(line: 198, column: 1, scope: !6876)
!7253 = !{i64 2147626003, i64 2147626046, i64 2147626086}
!7254 = !DILocation(line: 199, column: 1, scope: !6876)
!7255 = !{i64 2147626190, i64 2147626233, i64 2147626273}
!7256 = !DILocation(line: 200, column: 1, scope: !6876)
!7257 = !{i64 2147626386, i64 2147626429, i64 2147626469}
!7258 = !DILocation(line: 201, column: 1, scope: !6876)
!7259 = !{i64 2147626594, i64 2147626637, i64 2147626677}
!7260 = !DILocation(line: 202, column: 1, scope: !6876)
!7261 = !{i64 2147626806, i64 2147626849, i64 2147626889}
!7262 = !DILocation(line: 203, column: 1, scope: !6876)
!7263 = !{i64 2147627005, i64 2147627048, i64 2147627088}
!7264 = !DILocation(line: 204, column: 1, scope: !6876)
!7265 = !{i64 2147627243, i64 2147627286, i64 2147627326}
!7266 = !DILocation(line: 205, column: 1, scope: !6876)
!7267 = !{i64 2147627439, i64 2147627482, i64 2147627522}
!7268 = !DILocation(line: 206, column: 1, scope: !6876)
!7269 = !{i64 2147627641, i64 2147627684, i64 2147627724}
!7270 = !DILocation(line: 207, column: 1, scope: !6876)
!7271 = !{i64 2147627834, i64 2147627877, i64 2147627917}
!7272 = !DILocation(line: 208, column: 1, scope: !6876)
!7273 = !{i64 2147628068, i64 2147628111, i64 2147628151}
!7274 = !DILocation(line: 209, column: 1, scope: !6876)
!7275 = !{i64 2147628231, i64 2147628274, i64 2147628314}
!7276 = !DILocation(line: 210, column: 1, scope: !6876)
!7277 = !{i64 2147628470, i64 2147628513, i64 2147628553}
!7278 = !DILocation(line: 211, column: 1, scope: !6876)
!7279 = !{i64 2147628709, i64 2147628752, i64 2147628792}
!7280 = !DILocation(line: 212, column: 1, scope: !6876)
!7281 = !{i64 2147628945, i64 2147628988, i64 2147629028}
!7282 = !DILocation(line: 213, column: 1, scope: !6876)
!7283 = !{i64 2147629175, i64 2147629218, i64 2147629258}
!7284 = !DILocation(line: 214, column: 1, scope: !6876)
!7285 = !{i64 2147629389, i64 2147629432, i64 2147629472}
!7286 = !DILocation(line: 215, column: 1, scope: !6876)
!7287 = !{i64 2147633637, i64 2147633680, i64 2147633720}
!7288 = !DILocation(line: 216, column: 1, scope: !6876)
!7289 = !{i64 2147633836, i64 2147633879, i64 2147633919}
!7290 = !DILocation(line: 217, column: 1, scope: !6876)
!7291 = !{i64 2147634107, i64 2147634150, i64 2147634190}
!7292 = !DILocation(line: 218, column: 1, scope: !6876)
!7293 = !{i64 2147634282, i64 2147634325, i64 2147634365}
!7294 = !DILocation(line: 219, column: 1, scope: !6876)
!7295 = !{i64 2147634516, i64 2147634559, i64 2147634599}
!7296 = !DILocation(line: 220, column: 1, scope: !6876)
!7297 = !{i64 2147634724, i64 2147634767, i64 2147634807}
!7298 = !DILocation(line: 221, column: 1, scope: !6876)
!7299 = !{i64 2147634942, i64 2147634985, i64 2147635025}
!7300 = !DILocation(line: 222, column: 1, scope: !6876)
!7301 = !{i64 2147635132, i64 2147635175, i64 2147635215}
!7302 = !DILocation(line: 223, column: 1, scope: !6876)
!7303 = !{i64 2147635364, i64 2147635407, i64 2147635447}
!7304 = !DILocation(line: 224, column: 1, scope: !6876)
!7305 = !{i64 2147635584, i64 2147635627, i64 2147635667}
!7306 = !DILocation(line: 225, column: 1, scope: !6876)
!7307 = !{i64 2147635780, i64 2147635823, i64 2147635863}
!7308 = !DILocation(line: 226, column: 1, scope: !6876)
!7309 = !{i64 2147635986, i64 2147636029, i64 2147636069}
!7310 = !DILocation(line: 227, column: 1, scope: !6876)
!7311 = !{i64 2147636191, i64 2147636234, i64 2147636274}
!7312 = !DILocation(line: 228, column: 1, scope: !6876)
!7313 = !{i64 2147636405, i64 2147636448, i64 2147636488}
!7314 = !DILocation(line: 229, column: 1, scope: !6876)
!7315 = !{i64 2147636631, i64 2147636674, i64 2147636714}
!7316 = !DILocation(line: 230, column: 1, scope: !6876)
!7317 = !{i64 2147636839, i64 2147636882, i64 2147636922}
!7318 = !DILocation(line: 231, column: 1, scope: !6876)
!7319 = !{i64 2147637035, i64 2147637078, i64 2147637118}
!7320 = !DILocation(line: 232, column: 1, scope: !6876)
!7321 = !{i64 2147637267, i64 2147637310, i64 2147637350}
!7322 = !DILocation(line: 233, column: 1, scope: !6876)
!7323 = !{i64 2147637451, i64 2147637494, i64 2147637534}
!7324 = !DILocation(line: 234, column: 1, scope: !6876)
!7325 = !{i64 2147637660, i64 2147637703, i64 2147637743}
!7326 = !DILocation(line: 235, column: 1, scope: !6876)
!7327 = !{i64 2147637868, i64 2147637911, i64 2147637951}
!7328 = !DILocation(line: 236, column: 1, scope: !6876)
!7329 = !{i64 2147638064, i64 2147638107, i64 2147638147}
!7330 = !DILocation(line: 237, column: 1, scope: !6876)
!7331 = !{i64 2147638248, i64 2147638291, i64 2147638331}
!7332 = !DILocation(line: 238, column: 1, scope: !6876)
!7333 = !{i64 2147638474, i64 2147638517, i64 2147638557}
!7334 = !DILocation(line: 239, column: 1, scope: !6876)
!7335 = !{i64 2147638700, i64 2147638743, i64 2147638783}
!7336 = !DILocation(line: 240, column: 1, scope: !6876)
!7337 = !{i64 2147638926, i64 2147638969, i64 2147639009}
!7338 = !DILocation(line: 241, column: 1, scope: !6876)
!7339 = !{i64 2147639152, i64 2147639195, i64 2147639235}
!7340 = !DILocation(line: 242, column: 1, scope: !6876)
!7341 = !{i64 2147639378, i64 2147639421, i64 2147639461}
!7342 = !DILocation(line: 243, column: 1, scope: !6876)
!7343 = !{i64 2147639610, i64 2147639653, i64 2147639693}
!7344 = !DILocation(line: 244, column: 1, scope: !6876)
!7345 = !{i64 2147639848, i64 2147639891, i64 2147639931}
!7346 = !DILocation(line: 245, column: 1, scope: !6876)
!7347 = !{i64 2147640068, i64 2147640111, i64 2147640151}
!7348 = !DILocation(line: 246, column: 1, scope: !6876)
!7349 = !{i64 2147640312, i64 2147640355, i64 2147640395}
!7350 = !DILocation(line: 247, column: 1, scope: !6876)
!7351 = !{i64 2147640553, i64 2147640596, i64 2147640636}
!7352 = !DILocation(line: 248, column: 1, scope: !6876)
!7353 = !{i64 2147640788, i64 2147640831, i64 2147640871}
!7354 = !DILocation(line: 249, column: 1, scope: !6876)
!7355 = !{i64 2147641020, i64 2147641063, i64 2147641103}
!7356 = !DILocation(line: 250, column: 1, scope: !6876)
!7357 = !{i64 2147641222, i64 2147641265, i64 2147641305}
!7358 = !DILocation(line: 251, column: 1, scope: !6876)
!7359 = !{i64 2147641472, i64 2147641515, i64 2147641555}
!7360 = !DILocation(line: 252, column: 1, scope: !6876)
!7361 = !{i64 2147641710, i64 2147641753, i64 2147641793}
!7362 = !DILocation(line: 253, column: 1, scope: !6876)
!7363 = !{i64 2147641918, i64 2147641961, i64 2147642001}
!7364 = !DILocation(line: 254, column: 1, scope: !6876)
!7365 = !{i64 2147642114, i64 2147642157, i64 2147642197}
!7366 = !DILocation(line: 255, column: 1, scope: !6876)
!7367 = !{i64 2147646359, i64 2147646402, i64 2147646442}
!7368 = !DILocation(line: 256, column: 1, scope: !6876)
!7369 = !{i64 2147646576, i64 2147646619, i64 2147646659}
!7370 = !DILocation(line: 257, column: 1, scope: !6876)
!7371 = !{i64 2147646781, i64 2147646824, i64 2147646864}
!7372 = !DILocation(line: 258, column: 1, scope: !6876)
!7373 = !{i64 2147647016, i64 2147647059, i64 2147647099}
!7374 = !DILocation(line: 259, column: 1, scope: !6876)
!7375 = !{i64 2147647239, i64 2147647282, i64 2147647322}
!7376 = !DILocation(line: 260, column: 1, scope: !6876)
!7377 = !{i64 2147647463, i64 2147647506, i64 2147647546}
!7378 = !DILocation(line: 261, column: 1, scope: !6876)
!7379 = !{i64 2147647701, i64 2147647744, i64 2147647784}
!7380 = !DILocation(line: 262, column: 1, scope: !6876)
!7381 = !{i64 2147647939, i64 2147647982, i64 2147648022}
!7382 = !DILocation(line: 263, column: 1, scope: !6876)
!7383 = !{i64 2147648156, i64 2147648199, i64 2147648239}
!7384 = !DILocation(line: 264, column: 1, scope: !6876)
!7385 = !{i64 2147648361, i64 2147648404, i64 2147648444}
!7386 = !DILocation(line: 265, column: 1, scope: !6876)
!7387 = !{i64 2147648554, i64 2147648597, i64 2147648637}
!7388 = !DILocation(line: 266, column: 1, scope: !6876)
!7389 = !{i64 2147648807, i64 2147648850, i64 2147648890}
!7390 = !DILocation(line: 267, column: 1, scope: !6876)
!7391 = !{i64 2147649015, i64 2147649058, i64 2147649098}
!7392 = !DILocation(line: 268, column: 1, scope: !6876)
!7393 = !{i64 2147649211, i64 2147649254, i64 2147649294}
!7394 = !DILocation(line: 269, column: 1, scope: !6876)
!7395 = !{i64 2147649425, i64 2147649468, i64 2147649508}
!7396 = !DILocation(line: 270, column: 1, scope: !6876)
!7397 = !{i64 2147649633, i64 2147649676, i64 2147649716}
!7398 = !DILocation(line: 271, column: 1, scope: !6876)
!7399 = !{i64 2147649823, i64 2147649866, i64 2147649906}
!7400 = !DILocation(line: 272, column: 1, scope: !6876)
!7401 = !{i64 2147650037, i64 2147650080, i64 2147650120}
!7402 = !DILocation(line: 273, column: 1, scope: !6876)
!7403 = !{i64 2147650299, i64 2147650342, i64 2147650382}
!7404 = !DILocation(line: 274, column: 1, scope: !6876)
!7405 = !{i64 2147650510, i64 2147650553, i64 2147650593}
!7406 = !DILocation(line: 275, column: 1, scope: !6876)
!7407 = !{i64 2147650754, i64 2147650797, i64 2147650837}
!7408 = !DILocation(line: 276, column: 1, scope: !6876)
!7409 = !{i64 2147650965, i64 2147651008, i64 2147651048}
!7410 = !DILocation(line: 277, column: 1, scope: !6876)
!7411 = !{i64 2147651194, i64 2147651237, i64 2147651277}
!7412 = !DILocation(line: 278, column: 1, scope: !6876)
!7413 = !{i64 2147651459, i64 2147651502, i64 2147651542}
!7414 = !DILocation(line: 279, column: 1, scope: !6876)
!7415 = !{i64 2147651664, i64 2147651707, i64 2147651747}
!7416 = !DILocation(line: 280, column: 1, scope: !6876)
!7417 = !{i64 2147651860, i64 2147651903, i64 2147651943}
!7418 = !DILocation(line: 281, column: 1, scope: !6876)
!7419 = !{i64 2147652083, i64 2147652126, i64 2147652166}
!7420 = !DILocation(line: 282, column: 1, scope: !6876)
!7421 = !{i64 2147652246, i64 2147652289, i64 2147652329}
!7422 = !DILocation(line: 283, column: 1, scope: !6876)
!7423 = !{i64 2147652451, i64 2147652494, i64 2147652534}
!7424 = !DILocation(line: 284, column: 1, scope: !6876)
!7425 = !{i64 2147652671, i64 2147652714, i64 2147652754}
!7426 = !DILocation(line: 285, column: 1, scope: !6876)
!7427 = !{i64 2147652885, i64 2147652928, i64 2147652968}
!7428 = !DILocation(line: 286, column: 1, scope: !6876)
!7429 = !{i64 2147653129, i64 2147653172, i64 2147653212}
!7430 = !DILocation(line: 287, column: 1, scope: !6876)
!7431 = !{i64 2147653361, i64 2147653404, i64 2147653444}
!7432 = !DILocation(line: 288, column: 1, scope: !6876)
!7433 = !{i64 2147653575, i64 2147653618, i64 2147653658}
!7434 = !DILocation(line: 289, column: 1, scope: !6876)
!7435 = !{i64 2147653786, i64 2147653829, i64 2147653869}
!7436 = !DILocation(line: 290, column: 1, scope: !6876)
!7437 = !{i64 2147653979, i64 2147654022, i64 2147654062}
!7438 = !DILocation(line: 291, column: 1, scope: !6876)
!7439 = !{i64 2147654178, i64 2147654221, i64 2147654261}
!7440 = !DILocation(line: 292, column: 1, scope: !6876)
!7441 = !{i64 2147654350, i64 2147654393, i64 2147654433}
!7442 = !DILocation(line: 293, column: 1, scope: !6876)
!7443 = !{i64 2147654543, i64 2147654586, i64 2147654626}
!7444 = !DILocation(line: 294, column: 1, scope: !6876)
!7445 = !{i64 2147654715, i64 2147654758, i64 2147654798}
!7446 = !DILocation(line: 295, column: 1, scope: !6876)
!7447 = !{i64 2147654905, i64 2147654948, i64 2147654988}
!7448 = !DILocation(line: 296, column: 1, scope: !6876)
!7449 = !{i64 2147655098, i64 2147655141, i64 2147655181}
!7450 = !DILocation(line: 297, column: 1, scope: !6876)
!7451 = !{i64 2147659355, i64 2147659398, i64 2147659438}
!7452 = !DILocation(line: 298, column: 1, scope: !6876)
!7453 = !{i64 2147659518, i64 2147659561, i64 2147659601}
!7454 = !DILocation(line: 299, column: 1, scope: !6876)
!7455 = !{i64 2147659720, i64 2147659763, i64 2147659803}
!7456 = !DILocation(line: 300, column: 1, scope: !6876)
!7457 = !{i64 2147659925, i64 2147659968, i64 2147660008}
!7458 = !DILocation(line: 301, column: 1, scope: !6876)
!7459 = !{i64 2147660133, i64 2147660176, i64 2147660216}
!7460 = !DILocation(line: 302, column: 1, scope: !6876)
!7461 = !{i64 2147660326, i64 2147660369, i64 2147660409}
!7462 = !DILocation(line: 303, column: 1, scope: !6876)
!7463 = !{i64 2147660513, i64 2147660556, i64 2147660596}
!7464 = !DILocation(line: 304, column: 1, scope: !6876)
!7465 = !{i64 2147660730, i64 2147660773, i64 2147660813}
!7466 = !DILocation(line: 305, column: 1, scope: !6876)
!7467 = !{i64 2147660950, i64 2147660993, i64 2147661033}
!7468 = !DILocation(line: 306, column: 1, scope: !6876)
!7469 = !{i64 2147661177, i64 2147661220, i64 2147661260}
!7470 = !DILocation(line: 307, column: 1, scope: !6876)
!7471 = !{i64 2147661394, i64 2147661437, i64 2147661477}
!7472 = !DILocation(line: 308, column: 1, scope: !6876)
!7473 = !{i64 2147661686, i64 2147661729, i64 2147661769}
!7474 = !DILocation(line: 309, column: 1, scope: !6876)
!7475 = !{i64 2147661918, i64 2147661961, i64 2147662001}
!7476 = !DILocation(line: 310, column: 1, scope: !6876)
!7477 = !{i64 2147662135, i64 2147662178, i64 2147662218}
!7478 = !DILocation(line: 311, column: 1, scope: !6876)
!7479 = !{i64 2147662342, i64 2147662385, i64 2147662425}
!7480 = !DILocation(line: 312, column: 1, scope: !6876)
!7481 = !{i64 2147662543, i64 2147662586, i64 2147662626}
!7482 = !DILocation(line: 313, column: 1, scope: !6876)
!7483 = !{i64 2147662775, i64 2147662818, i64 2147662858}
!7484 = !DILocation(line: 314, column: 1, scope: !6876)
!7485 = !{i64 2147662983, i64 2147663026, i64 2147663066}
!7486 = !DILocation(line: 315, column: 1, scope: !6876)
!7487 = !{i64 2147663173, i64 2147663216, i64 2147663256}
!7488 = !DILocation(line: 316, column: 1, scope: !6876)
!7489 = !{i64 2147663399, i64 2147663442, i64 2147663482}
!7490 = !DILocation(line: 317, column: 1, scope: !6876)
!7491 = !{i64 2147663588, i64 2147663631, i64 2147663671}
!7492 = !DILocation(line: 318, column: 1, scope: !6876)
!7493 = !{i64 2147663859, i64 2147663902, i64 2147663942}
!7494 = !DILocation(line: 319, column: 1, scope: !6876)
!7495 = !{i64 2147664079, i64 2147664122, i64 2147664162}
!7496 = !DILocation(line: 320, column: 1, scope: !6876)
!7497 = !{i64 2147664332, i64 2147664375, i64 2147664415}
!7498 = !DILocation(line: 321, column: 1, scope: !6876)
!7499 = !{i64 2147664540, i64 2147664583, i64 2147664623}
!7500 = !DILocation(line: 322, column: 1, scope: !6876)
!7501 = !{i64 2147664772, i64 2147664815, i64 2147664855}
!7502 = !DILocation(line: 323, column: 1, scope: !6876)
!7503 = !{i64 2147664983, i64 2147665026, i64 2147665066}
!7504 = !DILocation(line: 324, column: 1, scope: !6876)
!7505 = !{i64 2147665173, i64 2147665216, i64 2147665256}
!7506 = !DILocation(line: 325, column: 1, scope: !6876)
!7507 = !{i64 2147665387, i64 2147665430, i64 2147665470}
!7508 = !DILocation(line: 326, column: 1, scope: !6876)
!7509 = !{i64 2147665586, i64 2147665629, i64 2147665669}
!7510 = !DILocation(line: 327, column: 1, scope: !6876)
!7511 = !{i64 2147665773, i64 2147665816, i64 2147665856}
!7512 = !DILocation(line: 328, column: 1, scope: !6876)
!7513 = !{i64 2147665981, i64 2147666024, i64 2147666064}
!7514 = !DILocation(line: 329, column: 1, scope: !6876)
!7515 = !{i64 2147666210, i64 2147666253, i64 2147666293}
!7516 = !DILocation(line: 330, column: 1, scope: !6876)
!7517 = !{i64 2147666412, i64 2147666455, i64 2147666495}
!7518 = !DILocation(line: 331, column: 1, scope: !6876)
!7519 = !{i64 2147666611, i64 2147666654, i64 2147666694}
!7520 = !DILocation(line: 332, column: 1, scope: !6876)
!7521 = !{i64 2147666828, i64 2147666871, i64 2147666911}
!7522 = !DILocation(line: 334, column: 1, scope: !6876)
!7523 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !469, file: !469, line: 30, type: !476, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7524)
!7524 = !{!7525, !7526}
!7525 = !DILocalVariable(name: "arg", arg: 1, scope: !7523, file: !469, line: 30, type: !478)
!7526 = !DILocalVariable(name: "key", scope: !7523, file: !469, line: 32, type: !113)
!7527 = !DILocation(line: 0, scope: !7523)
!7528 = !DILocation(line: 37, column: 2, scope: !7523)
!7529 = !DILocation(line: 38, column: 2, scope: !7523)
!7530 = !DILocation(line: 55, column: 2, scope: !7531, inlinedAt: !7538)
!7531 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7532, file: !7532, line: 42, type: !7533, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7535)
!7532 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7533 = !DISubroutineType(types: !7534)
!7534 = !{!32}
!7535 = !{!7536, !7537}
!7536 = !DILocalVariable(name: "key", scope: !7531, file: !7532, line: 44, type: !32)
!7537 = !DILocalVariable(name: "tmp", scope: !7531, file: !7532, line: 53, type: !32)
!7538 = distinct !DILocation(line: 40, column: 8, scope: !7523)
!7539 = !{i64 2189142}
!7540 = !DILocation(line: 0, scope: !7531, inlinedAt: !7538)
!7541 = !DILocalVariable(name: "key", arg: 1, scope: !7542, file: !7532, line: 84, type: !32)
!7542 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7532, file: !7532, line: 84, type: !7543, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7545)
!7543 = !DISubroutineType(types: !7544)
!7544 = !{null, !32}
!7545 = !{!7541}
!7546 = !DILocation(line: 0, scope: !7542, inlinedAt: !7547)
!7547 = distinct !DILocation(line: 47, column: 2, scope: !7523)
!7548 = !DILocation(line: 95, column: 2, scope: !7542, inlinedAt: !7547)
!7549 = !{i64 2189959}
!7550 = !DILocation(line: 51, column: 18, scope: !7523)
!7551 = !DILocation(line: 53, column: 2, scope: !7523)
!7552 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7553, file: !7553, line: 1609, type: !266, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !397)
!7553 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7554 = !DILocation(line: 1611, column: 3, scope: !7552)
!7555 = !DILocation(line: 1612, column: 1, scope: !7552)
!7556 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7553, file: !7553, line: 1629, type: !266, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !397)
!7557 = !DILocation(line: 1631, column: 3, scope: !7556)
!7558 = !DILocation(line: 1632, column: 1, scope: !7556)
!7559 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !506, file: !506, line: 26, type: !512, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7560)
!7560 = !{!7561}
!7561 = !DILocalVariable(name: "dev", arg: 1, scope: !7559, file: !506, line: 26, type: !514)
!7562 = !DILocation(line: 0, scope: !7559)
!7563 = !DILocation(line: 68, column: 2, scope: !7559)
!7564 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7565, file: !7565, line: 14, type: !5043, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7566)
!7565 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7566 = !{!7567, !7568}
!7567 = !DILocalVariable(name: "fmt", arg: 1, scope: !7564, file: !7565, line: 14, type: !269)
!7568 = !DILocalVariable(name: "ap", scope: !7564, file: !7565, line: 16, type: !7569)
!7569 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4051, line: 99, baseType: !7570)
!7570 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4051, line: 40, baseType: !7571)
!7571 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7565, baseType: !7572)
!7572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7573)
!7573 = !{!7574}
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7572, file: !7565, line: 16, baseType: !104, size: 32)
!7575 = !DILocation(line: 0, scope: !7564)
!7576 = !DILocation(line: 16, column: 2, scope: !7564)
!7577 = !DILocation(line: 16, column: 10, scope: !7564)
!7578 = !DILocation(line: 18, column: 2, scope: !7564)
!7579 = !DILocation(line: 19, column: 2, scope: !7564)
!7580 = !DILocation(line: 20, column: 2, scope: !7564)
!7581 = !DILocation(line: 21, column: 1, scope: !7564)
!7582 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7565, file: !7565, line: 23, type: !7583, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7585)
!7583 = !DISubroutineType(types: !7584)
!7584 = !{null, !269, !7569}
!7585 = !{!7586, !7587}
!7586 = !DILocalVariable(name: "fmt", arg: 1, scope: !7582, file: !7565, line: 23, type: !269)
!7587 = !DILocalVariable(name: "ap", arg: 2, scope: !7582, file: !7565, line: 23, type: !7569)
!7588 = !DILocation(line: 0, scope: !7582)
!7589 = !DILocation(line: 25, column: 2, scope: !7582)
!7590 = !DILocation(line: 26, column: 1, scope: !7582)
!7591 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7565, file: !7565, line: 52, type: !7592, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7594)
!7592 = !DISubroutineType(types: !7593)
!7593 = !{null, !105, !13, !111}
!7594 = !{!7595, !7596, !7597, !7598}
!7595 = !DILocalVariable(name: "level", arg: 1, scope: !7591, file: !7565, line: 52, type: !105)
!7596 = !DILocalVariable(name: "data", arg: 2, scope: !7591, file: !7565, line: 52, type: !13)
!7597 = !DILocalVariable(name: "size", arg: 3, scope: !7591, file: !7565, line: 52, type: !111)
!7598 = !DILocalVariable(name: "data_buffer", scope: !7591, file: !7565, line: 54, type: !269)
!7599 = !DILocation(line: 0, scope: !7591)
!7600 = !DILocation(line: 55, column: 14, scope: !7591)
!7601 = !DILocation(line: 55, column: 2, scope: !7591)
!7602 = !DILocation(line: 56, column: 3, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7591, file: !7565, line: 55, column: 20)
!7604 = !DILocation(line: 57, column: 3, scope: !7603)
!7605 = !DILocation(line: 59, column: 7, scope: !7603)
!7606 = distinct !{!7606, !7601, !7607}
!7607 = !DILocation(line: 65, column: 2, scope: !7591)
!7608 = !DILocation(line: 66, column: 1, scope: !7591)
!7609 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3516, file: !3516, line: 175, type: !3517, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7610)
!7610 = !{!7611}
!7611 = !DILocalVariable(name: "level", arg: 1, scope: !7609, file: !3516, line: 175, type: !105)
!7612 = !DILocation(line: 0, scope: !7609)
!7613 = !DILocation(line: 177, column: 2, scope: !7609)
!7614 = !DILocation(line: 189, column: 1, scope: !7609)
!7615 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7565, file: !7565, line: 28, type: !7616, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7618)
!7616 = !DISubroutineType(types: !7617)
!7617 = !{null, !269, !111}
!7618 = !{!7619, !7620, !7621, !7623, !7625}
!7619 = !DILocalVariable(name: "data", arg: 1, scope: !7615, file: !7565, line: 28, type: !269)
!7620 = !DILocalVariable(name: "length", arg: 2, scope: !7615, file: !7565, line: 28, type: !111)
!7621 = !DILocalVariable(name: "i", scope: !7622, file: !7565, line: 30, type: !111)
!7622 = distinct !DILexicalBlock(scope: !7615, file: !7565, line: 30, column: 2)
!7623 = !DILocalVariable(name: "i", scope: !7624, file: !7565, line: 40, type: !111)
!7624 = distinct !DILexicalBlock(scope: !7615, file: !7565, line: 40, column: 2)
!7625 = !DILocalVariable(name: "c", scope: !7626, file: !7565, line: 42, type: !170)
!7626 = distinct !DILexicalBlock(scope: !7627, file: !7565, line: 41, column: 19)
!7627 = distinct !DILexicalBlock(scope: !7628, file: !7565, line: 41, column: 7)
!7628 = distinct !DILexicalBlock(scope: !7629, file: !7565, line: 40, column: 54)
!7629 = distinct !DILexicalBlock(scope: !7624, file: !7565, line: 40, column: 2)
!7630 = !DILocation(line: 0, scope: !7615)
!7631 = !DILocation(line: 0, scope: !7622)
!7632 = !DILocation(line: 30, column: 2, scope: !7622)
!7633 = !DILocation(line: 38, column: 2, scope: !7615)
!7634 = !DILocation(line: 0, scope: !7624)
!7635 = !DILocation(line: 40, column: 2, scope: !7624)
!7636 = !DILocation(line: 31, column: 9, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7638, file: !7565, line: 31, column: 7)
!7638 = distinct !DILexicalBlock(scope: !7639, file: !7565, line: 30, column: 54)
!7639 = distinct !DILexicalBlock(scope: !7622, file: !7565, line: 30, column: 2)
!7640 = !DILocation(line: 31, column: 7, scope: !7638)
!7641 = !DILocation(line: 32, column: 35, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7637, file: !7565, line: 31, column: 19)
!7643 = !DILocation(line: 32, column: 20, scope: !7642)
!7644 = !DILocation(line: 32, column: 4, scope: !7642)
!7645 = !DILocation(line: 33, column: 3, scope: !7642)
!7646 = !DILocation(line: 34, column: 4, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7637, file: !7565, line: 33, column: 10)
!7648 = !DILocation(line: 30, column: 50, scope: !7639)
!7649 = !DILocation(line: 30, column: 24, scope: !7639)
!7650 = distinct !{!7650, !7632, !7651}
!7651 = !DILocation(line: 36, column: 2, scope: !7622)
!7652 = !DILocation(line: 49, column: 2, scope: !7615)
!7653 = !DILocation(line: 50, column: 1, scope: !7615)
!7654 = !DILocation(line: 41, column: 9, scope: !7627)
!7655 = !DILocation(line: 41, column: 7, scope: !7628)
!7656 = !DILocation(line: 42, column: 22, scope: !7626)
!7657 = !DILocation(line: 0, scope: !7626)
!7658 = !DILocation(line: 44, column: 25, scope: !7626)
!7659 = !DILocation(line: 44, column: 17, scope: !7626)
!7660 = !DILocation(line: 44, column: 33, scope: !7626)
!7661 = !DILocation(line: 44, column: 4, scope: !7626)
!7662 = !DILocation(line: 45, column: 3, scope: !7626)
!7663 = !DILocation(line: 46, column: 4, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7627, file: !7565, line: 45, column: 10)
!7665 = !DILocation(line: 40, column: 50, scope: !7629)
!7666 = !DILocation(line: 40, column: 24, scope: !7629)
!7667 = distinct !{!7667, !7635, !7668}
!7668 = !DILocation(line: 48, column: 2, scope: !7624)
!7669 = distinct !DISubprogram(name: "isprint", scope: !6620, file: !6620, line: 37, type: !448, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7670)
!7670 = !{!7671}
!7671 = !DILocalVariable(name: "c", arg: 1, scope: !7669, file: !6620, line: 37, type: !105)
!7672 = !DILocation(line: 0, scope: !7669)
!7673 = !DILocation(line: 39, column: 38, scope: !7669)
!7674 = !DILocation(line: 39, column: 2, scope: !7669)
!7675 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7676, file: !7676, line: 57, type: !7677, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !7723)
!7676 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7677 = !DISubroutineType(types: !7678)
!7678 = !{null, !32, !7679}
!7679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7680, size: 32)
!7680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7681)
!7681 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2845, line: 141, baseType: !7682)
!7682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2845, line: 97, size: 256, elements: !7683)
!7683 = !{!7684}
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7682, file: !2845, line: 107, baseType: !7685, size: 256)
!7685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2845, line: 98, size: 256, elements: !7686)
!7686 = !{!7687, !7692, !7697, !7702, !7707, !7712, !7717, !7722}
!7687 = !DIDerivedType(tag: DW_TAG_member, scope: !7685, file: !2845, line: 99, baseType: !7688, size: 32)
!7688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7685, file: !2845, line: 99, size: 32, elements: !7689)
!7689 = !{!7690, !7691}
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7688, file: !2845, line: 99, baseType: !113, size: 32)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7688, file: !2845, line: 99, baseType: !113, size: 32)
!7692 = !DIDerivedType(tag: DW_TAG_member, scope: !7685, file: !2845, line: 100, baseType: !7693, size: 32, offset: 32)
!7693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7685, file: !2845, line: 100, size: 32, elements: !7694)
!7694 = !{!7695, !7696}
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7693, file: !2845, line: 100, baseType: !113, size: 32)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7693, file: !2845, line: 100, baseType: !113, size: 32)
!7697 = !DIDerivedType(tag: DW_TAG_member, scope: !7685, file: !2845, line: 101, baseType: !7698, size: 32, offset: 64)
!7698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7685, file: !2845, line: 101, size: 32, elements: !7699)
!7699 = !{!7700, !7701}
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7698, file: !2845, line: 101, baseType: !113, size: 32)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7698, file: !2845, line: 101, baseType: !113, size: 32)
!7702 = !DIDerivedType(tag: DW_TAG_member, scope: !7685, file: !2845, line: 102, baseType: !7703, size: 32, offset: 96)
!7703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7685, file: !2845, line: 102, size: 32, elements: !7704)
!7704 = !{!7705, !7706}
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7703, file: !2845, line: 102, baseType: !113, size: 32)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7703, file: !2845, line: 102, baseType: !113, size: 32)
!7707 = !DIDerivedType(tag: DW_TAG_member, scope: !7685, file: !2845, line: 103, baseType: !7708, size: 32, offset: 128)
!7708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7685, file: !2845, line: 103, size: 32, elements: !7709)
!7709 = !{!7710, !7711}
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7708, file: !2845, line: 103, baseType: !113, size: 32)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7708, file: !2845, line: 103, baseType: !113, size: 32)
!7712 = !DIDerivedType(tag: DW_TAG_member, scope: !7685, file: !2845, line: 104, baseType: !7713, size: 32, offset: 160)
!7713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7685, file: !2845, line: 104, size: 32, elements: !7714)
!7714 = !{!7715, !7716}
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7713, file: !2845, line: 104, baseType: !113, size: 32)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7713, file: !2845, line: 104, baseType: !113, size: 32)
!7717 = !DIDerivedType(tag: DW_TAG_member, scope: !7685, file: !2845, line: 105, baseType: !7718, size: 32, offset: 192)
!7718 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7685, file: !2845, line: 105, size: 32, elements: !7719)
!7719 = !{!7720, !7721}
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7718, file: !2845, line: 105, baseType: !113, size: 32)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7718, file: !2845, line: 105, baseType: !113, size: 32)
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7685, file: !2845, line: 106, baseType: !113, size: 32, offset: 224)
!7723 = !{!7724, !7725}
!7724 = !DILocalVariable(name: "reason", arg: 1, scope: !7675, file: !7676, line: 57, type: !32)
!7725 = !DILocalVariable(name: "esf", arg: 2, scope: !7675, file: !7676, line: 57, type: !7679)
!7726 = !DILocation(line: 0, scope: !7675)
!7727 = !DILocation(line: 60, column: 10, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7675, file: !7676, line: 60, column: 6)
!7729 = !DILocation(line: 60, column: 6, scope: !7675)
!7730 = !DILocation(line: 61, column: 3, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7728, file: !7676, line: 60, column: 19)
!7732 = !DILocation(line: 62, column: 2, scope: !7731)
!7733 = !DILocation(line: 63, column: 2, scope: !7675)
!7734 = !DILocation(line: 64, column: 1, scope: !7675)
!7735 = distinct !DISubprogram(name: "esf_dump", scope: !7676, file: !7676, line: 20, type: !7736, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !7738)
!7736 = !DISubroutineType(types: !7737)
!7737 = !{null, !7679}
!7738 = !{!7739}
!7739 = !DILocalVariable(name: "esf", arg: 1, scope: !7735, file: !7676, line: 20, type: !7679)
!7740 = !DILocation(line: 0, scope: !7735)
!7741 = !DILocation(line: 22, column: 2, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7743, file: !7676, line: 22, column: 2)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !7676, line: 22, column: 2)
!7744 = distinct !DILexicalBlock(scope: !7745, file: !7676, line: 22, column: 2)
!7745 = distinct !DILexicalBlock(scope: !7735, file: !7676, line: 22, column: 2)
!7746 = !DILocation(line: 24, column: 2, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7676, line: 24, column: 2)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !7676, line: 24, column: 2)
!7749 = distinct !DILexicalBlock(scope: !7750, file: !7676, line: 24, column: 2)
!7750 = distinct !DILexicalBlock(scope: !7735, file: !7676, line: 24, column: 2)
!7751 = !DILocation(line: 26, column: 2, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !7676, line: 26, column: 2)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !7676, line: 26, column: 2)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !7676, line: 26, column: 2)
!7755 = distinct !DILexicalBlock(scope: !7735, file: !7676, line: 26, column: 2)
!7756 = !DILocation(line: 53, column: 2, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !7676, line: 53, column: 2)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !7676, line: 53, column: 2)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !7676, line: 53, column: 2)
!7760 = distinct !DILexicalBlock(scope: !7735, file: !7676, line: 53, column: 2)
!7761 = !DILocation(line: 55, column: 1, scope: !7735)
!7762 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7676, file: !7676, line: 82, type: !7763, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !7778)
!7763 = !DISubroutineType(types: !7764)
!7764 = !{null, !7679, !7765}
!7765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7766, size: 32)
!7766 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !7767)
!7767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7768)
!7768 = !{!7769, !7770, !7771, !7772, !7773, !7774, !7775, !7776, !7777}
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7767, file: !200, line: 26, baseType: !113, size: 32)
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7767, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7771 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7767, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7772 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7767, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7773 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7767, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7774 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7767, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7767, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7776 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7767, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7777 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7767, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7778 = !{!7779, !7780, !7781}
!7779 = !DILocalVariable(name: "esf", arg: 1, scope: !7762, file: !7676, line: 82, type: !7679)
!7780 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7762, file: !7676, line: 82, type: !7765)
!7781 = !DILocalVariable(name: "reason", scope: !7762, file: !7676, line: 88, type: !32)
!7782 = !DILocation(line: 0, scope: !7762)
!7783 = !DILocation(line: 88, column: 35, scope: !7762)
!7784 = !DILocation(line: 108, column: 2, scope: !7762)
!7785 = !DILocation(line: 131, column: 1, scope: !7762)
!7786 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7676, file: !7676, line: 133, type: !7787, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !7789)
!7787 = !DISubroutineType(types: !7788)
!7788 = !{null, !104}
!7789 = !{!7790, !7791, !7792}
!7790 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7786, file: !7676, line: 133, type: !104)
!7791 = !DILocalVariable(name: "ssf_contents", scope: !7786, file: !7676, line: 135, type: !1043)
!7792 = !DILocalVariable(name: "oops_esf", scope: !7786, file: !7676, line: 136, type: !7681)
!7793 = !DILocation(line: 0, scope: !7786)
!7794 = !DILocation(line: 136, column: 2, scope: !7786)
!7795 = !DILocation(line: 136, column: 15, scope: !7786)
!7796 = !DILocation(line: 139, column: 22, scope: !7786)
!7797 = !DILocation(line: 139, column: 17, scope: !7786)
!7798 = !DILocation(line: 139, column: 20, scope: !7786)
!7799 = !DILocation(line: 141, column: 2, scope: !7786)
!7800 = !DILocation(line: 142, column: 2, scope: !7786)
!7801 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7802, file: !7802, line: 40, type: !7543, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7803)
!7802 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7803 = !{!7804}
!7804 = !DILocalVariable(name: "irq", arg: 1, scope: !7801, file: !7802, line: 40, type: !32)
!7805 = !DILocation(line: 0, scope: !7801)
!7806 = !DILocation(line: 42, column: 2, scope: !7801)
!7807 = !DILocation(line: 43, column: 1, scope: !7801)
!7808 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !679, file: !679, line: 1684, type: !7809, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7811)
!7809 = !DISubroutineType(types: !7810)
!7810 = !{null, !941}
!7811 = !{!7812}
!7812 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7808, file: !679, line: 1684, type: !941)
!7813 = !DILocation(line: 0, scope: !7808)
!7814 = !DILocation(line: 1686, column: 23, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7808, file: !679, line: 1686, column: 7)
!7816 = !DILocation(line: 1686, column: 7, scope: !7808)
!7817 = !DILocation(line: 1688, column: 5, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7815, file: !679, line: 1687, column: 3)
!7819 = !{i64 2151257918}
!7820 = !DILocation(line: 1689, column: 81, scope: !7818)
!7821 = !DILocation(line: 1689, column: 60, scope: !7818)
!7822 = !DILocation(line: 1689, column: 34, scope: !7818)
!7823 = !DILocation(line: 1689, column: 5, scope: !7818)
!7824 = !DILocation(line: 1689, column: 43, scope: !7818)
!7825 = !DILocation(line: 1690, column: 5, scope: !7818)
!7826 = !{i64 2151258032}
!7827 = !DILocation(line: 1691, column: 3, scope: !7818)
!7828 = !DILocation(line: 1692, column: 1, scope: !7808)
!7829 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7802, file: !7802, line: 45, type: !7543, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7830)
!7830 = !{!7831}
!7831 = !DILocalVariable(name: "irq", arg: 1, scope: !7829, file: !7802, line: 45, type: !32)
!7832 = !DILocation(line: 0, scope: !7829)
!7833 = !DILocation(line: 47, column: 2, scope: !7829)
!7834 = !DILocation(line: 48, column: 1, scope: !7829)
!7835 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !679, file: !679, line: 1722, type: !7809, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7836)
!7836 = !{!7837}
!7837 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7835, file: !679, line: 1722, type: !941)
!7838 = !DILocation(line: 0, scope: !7835)
!7839 = !DILocation(line: 1724, column: 23, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7835, file: !679, line: 1724, column: 7)
!7841 = !DILocation(line: 1724, column: 7, scope: !7835)
!7842 = !DILocation(line: 1726, column: 81, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7840, file: !679, line: 1725, column: 3)
!7844 = !DILocation(line: 1726, column: 60, scope: !7843)
!7845 = !DILocation(line: 1726, column: 34, scope: !7843)
!7846 = !DILocation(line: 1726, column: 5, scope: !7843)
!7847 = !DILocation(line: 1726, column: 43, scope: !7843)
!7848 = !DILocation(line: 271, column: 3, scope: !7849, inlinedAt: !7851)
!7849 = distinct !DISubprogram(name: "__DSB", scope: !7850, file: !7850, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !397)
!7850 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7851 = distinct !DILocation(line: 1727, column: 5, scope: !7843)
!7852 = !{i64 3712301}
!7853 = !DILocation(line: 260, column: 3, scope: !7854, inlinedAt: !7855)
!7854 = distinct !DISubprogram(name: "__ISB", scope: !7850, file: !7850, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !397)
!7855 = distinct !DILocation(line: 1728, column: 5, scope: !7843)
!7856 = !{i64 3712018}
!7857 = !DILocation(line: 1729, column: 3, scope: !7843)
!7858 = !DILocation(line: 1730, column: 1, scope: !7835)
!7859 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7802, file: !7802, line: 50, type: !7860, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7862)
!7860 = !DISubroutineType(types: !7861)
!7861 = !{!105, !32}
!7862 = !{!7863}
!7863 = !DILocalVariable(name: "irq", arg: 1, scope: !7859, file: !7802, line: 50, type: !32)
!7864 = !DILocation(line: 0, scope: !7859)
!7865 = !DILocation(line: 52, column: 20, scope: !7859)
!7866 = !DILocation(line: 52, column: 9, scope: !7859)
!7867 = !DILocation(line: 52, column: 41, scope: !7859)
!7868 = !DILocation(line: 52, column: 39, scope: !7859)
!7869 = !DILocation(line: 52, column: 2, scope: !7859)
!7870 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7802, file: !7802, line: 64, type: !7871, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7873)
!7871 = !DISubroutineType(types: !7872)
!7872 = !{null, !32, !32, !113}
!7873 = !{!7874, !7875, !7876}
!7874 = !DILocalVariable(name: "irq", arg: 1, scope: !7870, file: !7802, line: 64, type: !32)
!7875 = !DILocalVariable(name: "prio", arg: 2, scope: !7870, file: !7802, line: 64, type: !32)
!7876 = !DILocalVariable(name: "flags", arg: 3, scope: !7870, file: !7802, line: 64, type: !113)
!7877 = !DILocation(line: 0, scope: !7870)
!7878 = !DILocation(line: 83, column: 8, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7880, file: !7802, line: 82, column: 9)
!7880 = distinct !DILexicalBlock(scope: !7870, file: !7802, line: 76, column: 6)
!7881 = !DILocation(line: 91, column: 2, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7883, file: !7802, line: 91, column: 2)
!7883 = distinct !DILexicalBlock(scope: !7870, file: !7802, line: 91, column: 2)
!7884 = !DILocation(line: 91, column: 2, scope: !7883)
!7885 = !DILocation(line: 91, column: 2, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7882, file: !7802, line: 91, column: 2)
!7887 = !DILocation(line: 95, column: 2, scope: !7870)
!7888 = !DILocation(line: 96, column: 1, scope: !7870)
!7889 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7890, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7892)
!7890 = !DISubroutineType(types: !7891)
!7891 = !{null, !941, !113}
!7892 = !{!7893, !7894}
!7893 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7889, file: !679, line: 1814, type: !941)
!7894 = !DILocalVariable(name: "priority", arg: 2, scope: !7889, file: !679, line: 1814, type: !113)
!7895 = !DILocation(line: 0, scope: !7889)
!7896 = !DILocation(line: 0, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7889, file: !679, line: 1816, column: 7)
!7898 = !DILocation(line: 1816, column: 7, scope: !7889)
!7899 = !DILocation(line: 1824, column: 1, scope: !7889)
!7900 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7802, file: !7802, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7901)
!7901 = !{!7902}
!7902 = !DILocalVariable(name: "unused", arg: 1, scope: !7900, file: !7802, line: 155, type: !13)
!7903 = !DILocation(line: 0, scope: !7900)
!7904 = !DILocation(line: 159, column: 2, scope: !7900)
!7905 = !DILocation(line: 160, column: 1, scope: !7900)
!7906 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7907, file: !7907, line: 87, type: !266, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !397)
!7907 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7908 = !DILocation(line: 89, column: 2, scope: !7906)
!7909 = !DILocation(line: 90, column: 2, scope: !7906)
!7910 = !DILocation(line: 91, column: 1, scope: !7906)
!7911 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7907, file: !7907, line: 23, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7912 = !DISubprogram(name: "z_arm_int_exit", scope: !7913, file: !7913, line: 153, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7913 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7914 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7915, file: !7915, line: 256, type: !266, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !397)
!7915 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7916 = !DILocation(line: 258, column: 2, scope: !7914)
!7917 = !DILocation(line: 260, column: 2, scope: !7914)
!7918 = !DILocation(line: 262, column: 2, scope: !7914)
!7919 = !DILocation(line: 263, column: 2, scope: !7914)
!7920 = !DILocation(line: 267, column: 2, scope: !7914)
!7921 = !DILocation(line: 268, column: 2, scope: !7914)
!7922 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7915, file: !7915, line: 53, type: !266, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !397)
!7923 = !DILocation(line: 55, column: 12, scope: !7922)
!7924 = !DILocation(line: 271, column: 3, scope: !7925, inlinedAt: !7926)
!7925 = distinct !DISubprogram(name: "__DSB", scope: !7850, file: !7850, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !397)
!7926 = distinct !DILocation(line: 56, column: 2, scope: !7922)
!7927 = !{i64 3710972}
!7928 = !DILocation(line: 260, column: 3, scope: !7929, inlinedAt: !7930)
!7929 = distinct !DISubprogram(name: "__ISB", scope: !7850, file: !7850, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !397)
!7930 = distinct !DILocation(line: 57, column: 2, scope: !7922)
!7931 = !{i64 3710689}
!7932 = !DILocation(line: 58, column: 1, scope: !7922)
!7933 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7915, file: !7915, line: 96, type: !266, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !397)
!7934 = !DILocation(line: 103, column: 13, scope: !7933)
!7935 = !DILocation(line: 975, column: 3, scope: !7936, inlinedAt: !7939)
!7936 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7850, file: !7850, line: 971, type: !395, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !7937)
!7937 = !{!7938}
!7938 = !DILocalVariable(name: "result", scope: !7936, file: !7850, line: 973, type: !113)
!7939 = distinct !DILocation(line: 189, column: 16, scope: !7933)
!7940 = !{i64 3731802}
!7941 = !DILocation(line: 0, scope: !7936, inlinedAt: !7939)
!7942 = !DILocation(line: 189, column: 32, scope: !7933)
!7943 = !DILocalVariable(name: "control", arg: 1, scope: !7944, file: !7850, line: 1001, type: !113)
!7944 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7850, file: !7850, line: 1001, type: !7945, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !7947)
!7945 = !DISubroutineType(types: !7946)
!7946 = !{null, !113}
!7947 = !{!7943}
!7948 = !DILocation(line: 0, scope: !7944, inlinedAt: !7949)
!7949 = distinct !DILocation(line: 189, column: 2, scope: !7933)
!7950 = !DILocation(line: 1003, column: 3, scope: !7944, inlinedAt: !7949)
!7951 = !{i64 3732522}
!7952 = !DILocation(line: 260, column: 3, scope: !7929, inlinedAt: !7953)
!7953 = distinct !DILocation(line: 1004, column: 3, scope: !7944, inlinedAt: !7949)
!7954 = !DILocation(line: 191, column: 1, scope: !7933)
!7955 = distinct !DISubprogram(name: "arch_swap", scope: !7956, file: !7956, line: 33, type: !7860, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2812, retainedNodes: !7957)
!7956 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7957 = !{!7958}
!7958 = !DILocalVariable(name: "key", arg: 1, scope: !7955, file: !7956, line: 33, type: !32)
!7959 = !DILocation(line: 0, scope: !7955)
!7960 = !DILocation(line: 36, column: 2, scope: !7955)
!7961 = !DILocation(line: 36, column: 17, scope: !7955)
!7962 = !DILocation(line: 36, column: 25, scope: !7955)
!7963 = !DILocation(line: 37, column: 37, scope: !7955)
!7964 = !DILocation(line: 37, column: 17, scope: !7955)
!7965 = !DILocation(line: 37, column: 35, scope: !7955)
!7966 = !DILocation(line: 41, column: 12, scope: !7955)
!7967 = !DILocalVariable(name: "key", arg: 1, scope: !7968, file: !7532, line: 84, type: !32)
!7968 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7532, file: !7532, line: 84, type: !7543, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2812, retainedNodes: !7969)
!7969 = !{!7967}
!7970 = !DILocation(line: 0, scope: !7968, inlinedAt: !7971)
!7971 = distinct !DILocation(line: 44, column: 2, scope: !7955)
!7972 = !DILocation(line: 95, column: 2, scope: !7968, inlinedAt: !7971)
!7973 = !{i64 2281473}
!7974 = !DILocation(line: 53, column: 9, scope: !7955)
!7975 = !DILocation(line: 53, column: 24, scope: !7955)
!7976 = !DILocation(line: 53, column: 2, scope: !7955)
!7977 = distinct !DISubprogram(name: "arch_new_thread", scope: !7978, file: !7978, line: 56, type: !7979, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !8088)
!7978 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7979 = !DISubroutineType(types: !7980)
!7980 = !{null, !7981, !8083, !102, !254, !104, !104, !104}
!7981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7982, size: 32)
!7982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !7983)
!7983 = !{!7984, !8042, !8054, !8055, !8056, !8057, !8063, !8078}
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7982, file: !127, line: 247, baseType: !7985, size: 384)
!7985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !7986)
!7986 = !{!7987, !8011, !8018, !8019, !8020, !8029, !8030, !8031}
!7987 = !DIDerivedType(tag: DW_TAG_member, scope: !7985, file: !127, line: 60, baseType: !7988, size: 64)
!7988 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7985, file: !127, line: 60, size: 64, elements: !7989)
!7989 = !{!7990, !8005}
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7988, file: !127, line: 61, baseType: !7991, size: 64)
!7991 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !7992)
!7992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !7993)
!7993 = !{!7994, !8000}
!7994 = !DIDerivedType(tag: DW_TAG_member, scope: !7992, file: !137, line: 38, baseType: !7995, size: 32)
!7995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7992, file: !137, line: 38, size: 32, elements: !7996)
!7996 = !{!7997, !7999}
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7995, file: !137, line: 39, baseType: !7998, size: 32)
!7998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7992, size: 32)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7995, file: !137, line: 40, baseType: !7998, size: 32)
!8000 = !DIDerivedType(tag: DW_TAG_member, scope: !7992, file: !137, line: 42, baseType: !8001, size: 32, offset: 32)
!8001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7992, file: !137, line: 42, size: 32, elements: !8002)
!8002 = !{!8003, !8004}
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8001, file: !137, line: 43, baseType: !7998, size: 32)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8001, file: !137, line: 44, baseType: !7998, size: 32)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7988, file: !127, line: 62, baseType: !8006, size: 64)
!8006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !8007)
!8007 = !{!8008}
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8006, file: !153, line: 50, baseType: !8009, size: 64)
!8009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8010, size: 64, elements: !158)
!8010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8006, size: 32)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7985, file: !127, line: 68, baseType: !8012, size: 32, offset: 64)
!8012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8013, size: 32)
!8013 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !8014)
!8014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !8015)
!8015 = !{!8016}
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8014, file: !163, line: 232, baseType: !8017, size: 64)
!8017 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !7992)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7985, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7985, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!8020 = !DIDerivedType(tag: DW_TAG_member, scope: !7985, file: !127, line: 90, baseType: !8021, size: 16, offset: 112)
!8021 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7985, file: !127, line: 90, size: 16, elements: !8022)
!8022 = !{!8023, !8028}
!8023 = !DIDerivedType(tag: DW_TAG_member, scope: !8021, file: !127, line: 91, baseType: !8024, size: 16)
!8024 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8021, file: !127, line: 91, size: 16, elements: !8025)
!8025 = !{!8026, !8027}
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8024, file: !127, line: 96, baseType: !179, size: 8)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8024, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8021, file: !127, line: 100, baseType: !183, size: 16)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7985, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7985, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7985, file: !127, line: 131, baseType: !8032, size: 192, offset: 192)
!8032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !8033)
!8033 = !{!8034, !8035, !8041}
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8032, file: !163, line: 245, baseType: !7991, size: 64)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8032, file: !163, line: 246, baseType: !8036, size: 32, offset: 64)
!8036 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !8037)
!8037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8038, size: 32)
!8038 = !DISubroutineType(types: !8039)
!8039 = !{null, !8040}
!8040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8032, size: 32)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8032, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7982, file: !127, line: 250, baseType: !8043, size: 288, offset: 384)
!8043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8044)
!8044 = !{!8045, !8046, !8047, !8048, !8049, !8050, !8051, !8052, !8053}
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8043, file: !200, line: 26, baseType: !113, size: 32)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8043, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8043, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8043, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8043, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8043, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8043, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8043, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8043, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7982, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7982, file: !127, line: 256, baseType: !8013, size: 64, offset: 704)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7982, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7982, file: !127, line: 300, baseType: !8058, size: 96, offset: 800)
!8058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !8059)
!8059 = !{!8060, !8061, !8062}
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8058, file: !127, line: 153, baseType: !22, size: 32)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8058, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8058, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7982, file: !127, line: 325, baseType: !8064, size: 32, offset: 896)
!8064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8065, size: 32)
!8065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !8066)
!8066 = !{!8067, !8073, !8074}
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8065, file: !122, line: 5074, baseType: !8068, size: 96)
!8068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !8069)
!8069 = !{!8070, !8071, !8072}
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8068, file: !226, line: 57, baseType: !229, size: 32)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8068, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8068, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8065, file: !122, line: 5075, baseType: !8013, size: 64, offset: 96)
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8065, file: !122, line: 5076, baseType: !8075, size: 32, offset: 160)
!8075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !8076)
!8076 = !{!8077}
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8075, file: !236, line: 52, baseType: !22, size: 32)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7982, file: !127, line: 343, baseType: !8079, size: 64, offset: 928)
!8079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !8080)
!8080 = !{!8081, !8082}
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8079, file: !200, line: 63, baseType: !113, size: 32)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8079, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!8083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8084, size: 32)
!8084 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !8085)
!8085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !8086)
!8086 = !{!8087}
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8085, file: !249, line: 48, baseType: !103, size: 8)
!8088 = !{!8089, !8090, !8091, !8092, !8093, !8094, !8095, !8096}
!8089 = !DILocalVariable(name: "thread", arg: 1, scope: !7977, file: !7978, line: 56, type: !7981)
!8090 = !DILocalVariable(name: "stack", arg: 2, scope: !7977, file: !7978, line: 56, type: !8083)
!8091 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7977, file: !7978, line: 57, type: !102)
!8092 = !DILocalVariable(name: "entry", arg: 4, scope: !7977, file: !7978, line: 57, type: !254)
!8093 = !DILocalVariable(name: "p1", arg: 5, scope: !7977, file: !7978, line: 58, type: !104)
!8094 = !DILocalVariable(name: "p2", arg: 6, scope: !7977, file: !7978, line: 58, type: !104)
!8095 = !DILocalVariable(name: "p3", arg: 7, scope: !7977, file: !7978, line: 58, type: !104)
!8096 = !DILocalVariable(name: "iframe", scope: !7977, file: !7978, line: 60, type: !2843)
!8097 = !DILocation(line: 0, scope: !7977)
!8098 = !DILocation(line: 85, column: 11, scope: !7977)
!8099 = !DILocation(line: 93, column: 10, scope: !7977)
!8100 = !DILocation(line: 98, column: 13, scope: !7977)
!8101 = !DILocation(line: 100, column: 15, scope: !7977)
!8102 = !DILocation(line: 100, column: 10, scope: !7977)
!8103 = !DILocation(line: 100, column: 13, scope: !7977)
!8104 = !DILocation(line: 101, column: 15, scope: !7977)
!8105 = !DILocation(line: 101, column: 10, scope: !7977)
!8106 = !DILocation(line: 101, column: 13, scope: !7977)
!8107 = !DILocation(line: 102, column: 15, scope: !7977)
!8108 = !DILocation(line: 102, column: 10, scope: !7977)
!8109 = !DILocation(line: 102, column: 13, scope: !7977)
!8110 = !DILocation(line: 103, column: 15, scope: !7977)
!8111 = !DILocation(line: 103, column: 10, scope: !7977)
!8112 = !DILocation(line: 103, column: 13, scope: !7977)
!8113 = !DILocation(line: 106, column: 10, scope: !7977)
!8114 = !DILocation(line: 106, column: 15, scope: !7977)
!8115 = !DILocation(line: 122, column: 29, scope: !7977)
!8116 = !DILocation(line: 122, column: 23, scope: !7977)
!8117 = !DILocation(line: 122, column: 27, scope: !7977)
!8118 = !DILocation(line: 123, column: 15, scope: !7977)
!8119 = !DILocation(line: 123, column: 23, scope: !7977)
!8120 = !DILocation(line: 143, column: 1, scope: !7977)
!8121 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7978, file: !7978, line: 385, type: !8122, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !8124)
!8122 = !DISubroutineType(types: !8123)
!8123 = !{!113, !3803, !3803}
!8124 = !{!8125, !8126, !8127, !8130}
!8125 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8121, file: !7978, line: 385, type: !3803)
!8126 = !DILocalVariable(name: "psp", arg: 2, scope: !8121, file: !7978, line: 385, type: !3803)
!8127 = !DILocalVariable(name: "thread", scope: !8121, file: !7978, line: 388, type: !8128)
!8128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8129, size: 32)
!8129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7982)
!8130 = !DILocalVariable(name: "guard_len", scope: !8121, file: !7978, line: 405, type: !113)
!8131 = !DILocation(line: 0, scope: !8121)
!8132 = !DILocation(line: 388, column: 34, scope: !8121)
!8133 = !DILocation(line: 390, column: 13, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8121, file: !7978, line: 390, column: 6)
!8135 = !DILocation(line: 390, column: 6, scope: !8121)
!8136 = !DILocation(line: 438, column: 6, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8121, file: !7978, line: 438, column: 6)
!8138 = !DILocation(line: 438, column: 6, scope: !8121)
!8139 = !DILocation(line: 442, column: 3, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8137, file: !7978, line: 440, column: 22)
!8141 = !DILocation(line: 455, column: 1, scope: !8121)
!8142 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7978, file: !7978, line: 530, type: !8143, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !8145)
!8143 = !DISubroutineType(types: !8144)
!8144 = !{null, !7981, !102, !254}
!8145 = !{!8146, !8147, !8148}
!8146 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8142, file: !7978, line: 530, type: !7981)
!8147 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8142, file: !7978, line: 530, type: !102)
!8148 = !DILocalVariable(name: "_main", arg: 3, scope: !8142, file: !7978, line: 531, type: !254)
!8149 = !DILocation(line: 0, scope: !8142)
!8150 = !DILocation(line: 535, column: 11, scope: !8142)
!8151 = !DILocation(line: 560, column: 2, scope: !8142)
!8152 = !DILocation(line: 576, column: 2, scope: !8142)
!8153 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8154 = !DILocation(line: 603, column: 2, scope: !8142)
!8155 = distinct !DISubprogram(name: "z_arm_fault", scope: !8156, file: !8156, line: 1036, type: !8157, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !8172)
!8156 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8157 = !DISubroutineType(types: !8158)
!8158 = !{null, !113, !113, !113, !8159}
!8159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8160, size: 32)
!8160 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !8161)
!8161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8162)
!8162 = !{!8163, !8164, !8165, !8166, !8167, !8168, !8169, !8170, !8171}
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8161, file: !200, line: 26, baseType: !113, size: 32)
!8164 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8161, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8165 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8161, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8161, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8161, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8168 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8161, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8161, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8161, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8161, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8172 = !{!8173, !8174, !8175, !8176, !8177, !8178, !8179, !8180, !8181, !8182}
!8173 = !DILocalVariable(name: "msp", arg: 1, scope: !8155, file: !8156, line: 1036, type: !113)
!8174 = !DILocalVariable(name: "psp", arg: 2, scope: !8155, file: !8156, line: 1036, type: !113)
!8175 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8155, file: !8156, line: 1036, type: !113)
!8176 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8155, file: !8156, line: 1037, type: !8159)
!8177 = !DILocalVariable(name: "reason", scope: !8155, file: !8156, line: 1039, type: !113)
!8178 = !DILocalVariable(name: "fault", scope: !8155, file: !8156, line: 1040, type: !105)
!8179 = !DILocalVariable(name: "recoverable", scope: !8155, file: !8156, line: 1041, type: !492)
!8180 = !DILocalVariable(name: "nested_exc", scope: !8155, file: !8156, line: 1041, type: !492)
!8181 = !DILocalVariable(name: "esf", scope: !8155, file: !8156, line: 1042, type: !2911)
!8182 = !DILocalVariable(name: "esf_copy", scope: !8155, file: !8156, line: 1047, type: !2912)
!8183 = !DILocation(line: 0, scope: !8155)
!8184 = !DILocation(line: 1040, column: 19, scope: !8155)
!8185 = !DILocation(line: 1041, column: 2, scope: !8155)
!8186 = !DILocation(line: 1047, column: 2, scope: !8155)
!8187 = !DILocation(line: 1047, column: 15, scope: !8155)
!8188 = !DILocalVariable(name: "key", arg: 1, scope: !8189, file: !7532, line: 84, type: !32)
!8189 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7532, file: !7532, line: 84, type: !7543, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !8190)
!8190 = !{!8188}
!8191 = !DILocation(line: 0, scope: !8189, inlinedAt: !8192)
!8192 = distinct !DILocation(line: 1050, column: 2, scope: !8155)
!8193 = !DILocation(line: 95, column: 2, scope: !8189, inlinedAt: !8192)
!8194 = !{i64 2314717}
!8195 = !DILocation(line: 1055, column: 9, scope: !8155)
!8196 = !DILocation(line: 1056, column: 2, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !8156, line: 1056, column: 2)
!8198 = distinct !DILexicalBlock(scope: !8155, file: !8156, line: 1056, column: 2)
!8199 = !DILocation(line: 1056, column: 2, scope: !8198)
!8200 = !DILocation(line: 1056, column: 2, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8197, file: !8156, line: 1056, column: 2)
!8202 = !DILocation(line: 1040, column: 24, scope: !8155)
!8203 = !DILocation(line: 1063, column: 11, scope: !8155)
!8204 = !DILocation(line: 1064, column: 6, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8155, file: !8156, line: 1064, column: 6)
!8206 = !{i8 0, i8 2}
!8207 = !DILocation(line: 1064, column: 6, scope: !8155)
!8208 = !DILocation(line: 1070, column: 20, scope: !8155)
!8209 = !DILocation(line: 1070, column: 2, scope: !8155)
!8210 = !DILocation(line: 1089, column: 6, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8155, file: !8156, line: 1089, column: 6)
!8212 = !DILocation(line: 0, scope: !8211)
!8213 = !DILocation(line: 1089, column: 6, scope: !8155)
!8214 = !DILocation(line: 1090, column: 28, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !8156, line: 1090, column: 7)
!8216 = distinct !DILexicalBlock(scope: !8211, file: !8156, line: 1089, column: 18)
!8217 = !DILocation(line: 1090, column: 44, scope: !8215)
!8218 = !DILocation(line: 1090, column: 7, scope: !8216)
!8219 = !DILocation(line: 1091, column: 24, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8215, file: !8156, line: 1090, column: 50)
!8221 = !DILocation(line: 1092, column: 3, scope: !8220)
!8222 = !DILocation(line: 1094, column: 23, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8211, file: !8156, line: 1093, column: 9)
!8224 = !DILocation(line: 1097, column: 2, scope: !8155)
!8225 = !DILocation(line: 1098, column: 1, scope: !8155)
!8226 = distinct !DISubprogram(name: "get_esf", scope: !8156, file: !8156, line: 894, type: !8227, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !8230)
!8227 = !DISubroutineType(types: !8228)
!8228 = !{!2911, !113, !113, !113, !8229}
!8229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!8230 = !{!8231, !8232, !8233, !8234, !8235, !8236}
!8231 = !DILocalVariable(name: "msp", arg: 1, scope: !8226, file: !8156, line: 894, type: !113)
!8232 = !DILocalVariable(name: "psp", arg: 2, scope: !8226, file: !8156, line: 894, type: !113)
!8233 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8226, file: !8156, line: 894, type: !113)
!8234 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8226, file: !8156, line: 895, type: !8229)
!8235 = !DILocalVariable(name: "alternative_state_exc", scope: !8226, file: !8156, line: 897, type: !492)
!8236 = !DILocalVariable(name: "ptr_esf", scope: !8226, file: !8156, line: 898, type: !2911)
!8237 = !DILocation(line: 0, scope: !8226)
!8238 = !DILocation(line: 900, column: 14, scope: !8226)
!8239 = !DILocation(line: 902, column: 49, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8226, file: !8156, line: 902, column: 6)
!8241 = !DILocation(line: 902, column: 6, scope: !8226)
!8242 = !DILocation(line: 983, column: 44, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8226, file: !8156, line: 983, column: 6)
!8244 = !DILocation(line: 985, column: 3, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8246, file: !8156, line: 985, column: 3)
!8246 = distinct !DILexicalBlock(scope: !8247, file: !8156, line: 985, column: 3)
!8247 = distinct !DILexicalBlock(scope: !8248, file: !8156, line: 985, column: 3)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !8156, line: 985, column: 3)
!8249 = distinct !DILexicalBlock(scope: !8243, file: !8156, line: 984, column: 47)
!8250 = !DILocation(line: 986, column: 3, scope: !8249)
!8251 = !DILocation(line: 983, column: 18, scope: !8243)
!8252 = !DILocation(line: 991, column: 7, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8254, file: !8156, line: 990, column: 30)
!8254 = distinct !DILexicalBlock(scope: !8226, file: !8156, line: 990, column: 6)
!8255 = !DILocation(line: 998, column: 16, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8257, file: !8156, line: 995, column: 10)
!8257 = distinct !DILexicalBlock(scope: !8253, file: !8156, line: 991, column: 7)
!8258 = !DILocation(line: 1002, column: 2, scope: !8226)
!8259 = !DILocation(line: 1003, column: 1, scope: !8226)
!8260 = distinct !DISubprogram(name: "fault_handle", scope: !8156, file: !8156, line: 786, type: !8261, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !8263)
!8261 = !DISubroutineType(types: !8262)
!8262 = !{!113, !2911, !105, !8229}
!8263 = !{!8264, !8265, !8266, !8267}
!8264 = !DILocalVariable(name: "esf", arg: 1, scope: !8260, file: !8156, line: 786, type: !2911)
!8265 = !DILocalVariable(name: "fault", arg: 2, scope: !8260, file: !8156, line: 786, type: !105)
!8266 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8260, file: !8156, line: 786, type: !8229)
!8267 = !DILocalVariable(name: "reason", scope: !8260, file: !8156, line: 788, type: !113)
!8268 = !DILocation(line: 0, scope: !8260)
!8269 = !DILocation(line: 790, column: 15, scope: !8260)
!8270 = !DILocation(line: 792, column: 2, scope: !8260)
!8271 = !DILocation(line: 794, column: 12, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8260, file: !8156, line: 792, column: 17)
!8273 = !DILocation(line: 795, column: 3, scope: !8272)
!8274 = !DILocation(line: 800, column: 12, scope: !8272)
!8275 = !DILocation(line: 801, column: 3, scope: !8272)
!8276 = !DILocation(line: 803, column: 12, scope: !8272)
!8277 = !DILocation(line: 804, column: 3, scope: !8272)
!8278 = !DILocation(line: 806, column: 12, scope: !8272)
!8279 = !DILocation(line: 807, column: 3, scope: !8272)
!8280 = !DILocation(line: 814, column: 3, scope: !8272)
!8281 = !DILocation(line: 815, column: 3, scope: !8272)
!8282 = !DILocation(line: 820, column: 3, scope: !8272)
!8283 = !DILocation(line: 821, column: 3, scope: !8272)
!8284 = !DILocation(line: 829, column: 2, scope: !8260)
!8285 = distinct !DISubprogram(name: "hard_fault", scope: !8156, file: !8156, line: 709, type: !8286, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !8288)
!8286 = !DISubroutineType(types: !8287)
!8287 = !{!113, !2911, !8229}
!8288 = !{!8289, !8290, !8291}
!8289 = !DILocalVariable(name: "esf", arg: 1, scope: !8285, file: !8156, line: 709, type: !2911)
!8290 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8285, file: !8156, line: 709, type: !8229)
!8291 = !DILocalVariable(name: "reason", scope: !8285, file: !8156, line: 711, type: !113)
!8292 = !DILocation(line: 0, scope: !8285)
!8293 = !DILocation(line: 713, column: 2, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8295, file: !8156, line: 713, column: 2)
!8295 = distinct !DILexicalBlock(scope: !8296, file: !8156, line: 713, column: 2)
!8296 = distinct !DILexicalBlock(scope: !8297, file: !8156, line: 713, column: 2)
!8297 = distinct !DILexicalBlock(scope: !8285, file: !8156, line: 713, column: 2)
!8298 = !DILocation(line: 732, column: 15, scope: !8285)
!8299 = !DILocation(line: 734, column: 12, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8285, file: !8156, line: 734, column: 6)
!8301 = !DILocation(line: 734, column: 17, scope: !8300)
!8302 = !DILocation(line: 734, column: 41, scope: !8300)
!8303 = !DILocation(line: 734, column: 6, scope: !8285)
!8304 = !DILocation(line: 735, column: 3, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8306, file: !8156, line: 735, column: 3)
!8306 = distinct !DILexicalBlock(scope: !8307, file: !8156, line: 735, column: 3)
!8307 = distinct !DILexicalBlock(scope: !8308, file: !8156, line: 735, column: 3)
!8308 = distinct !DILexicalBlock(scope: !8309, file: !8156, line: 735, column: 3)
!8309 = distinct !DILexicalBlock(scope: !8300, file: !8156, line: 734, column: 47)
!8310 = !DILocation(line: 736, column: 2, scope: !8309)
!8311 = !DILocation(line: 736, column: 19, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8300, file: !8156, line: 736, column: 13)
!8313 = !DILocation(line: 736, column: 49, scope: !8312)
!8314 = !DILocation(line: 736, column: 13, scope: !8300)
!8315 = !DILocation(line: 737, column: 3, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8317, file: !8156, line: 737, column: 3)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !8156, line: 737, column: 3)
!8318 = distinct !DILexicalBlock(scope: !8319, file: !8156, line: 737, column: 3)
!8319 = distinct !DILexicalBlock(scope: !8320, file: !8156, line: 737, column: 3)
!8320 = distinct !DILexicalBlock(scope: !8312, file: !8156, line: 736, column: 55)
!8321 = !DILocation(line: 738, column: 2, scope: !8320)
!8322 = !DILocation(line: 738, column: 19, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8312, file: !8156, line: 738, column: 13)
!8324 = !DILocation(line: 738, column: 24, scope: !8323)
!8325 = !DILocation(line: 738, column: 47, scope: !8323)
!8326 = !DILocation(line: 738, column: 13, scope: !8312)
!8327 = !DILocation(line: 739, column: 3, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !8156, line: 739, column: 3)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !8156, line: 739, column: 3)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !8156, line: 739, column: 3)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !8156, line: 739, column: 3)
!8332 = distinct !DILexicalBlock(scope: !8323, file: !8156, line: 738, column: 53)
!8333 = !DILocation(line: 740, column: 7, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8332, file: !8156, line: 740, column: 7)
!8335 = !DILocation(line: 740, column: 7, scope: !8332)
!8336 = !DILocation(line: 741, column: 4, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !8156, line: 741, column: 4)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !8156, line: 741, column: 4)
!8339 = distinct !DILexicalBlock(scope: !8340, file: !8156, line: 741, column: 4)
!8340 = distinct !DILexicalBlock(scope: !8341, file: !8156, line: 741, column: 4)
!8341 = distinct !DILexicalBlock(scope: !8334, file: !8156, line: 740, column: 38)
!8342 = !DILocation(line: 742, column: 24, scope: !8341)
!8343 = !DILocation(line: 743, column: 3, scope: !8341)
!8344 = !DILocation(line: 743, column: 20, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8334, file: !8156, line: 743, column: 14)
!8346 = !DILocation(line: 743, column: 25, scope: !8345)
!8347 = !DILocation(line: 743, column: 52, scope: !8345)
!8348 = !DILocation(line: 743, column: 14, scope: !8334)
!8349 = !DILocation(line: 744, column: 13, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8345, file: !8156, line: 743, column: 58)
!8351 = !DILocation(line: 745, column: 3, scope: !8350)
!8352 = !DILocation(line: 745, column: 20, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8345, file: !8156, line: 745, column: 14)
!8354 = !DILocation(line: 745, column: 25, scope: !8353)
!8355 = !DILocation(line: 745, column: 52, scope: !8353)
!8356 = !DILocation(line: 745, column: 14, scope: !8345)
!8357 = !DILocation(line: 746, column: 13, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8353, file: !8156, line: 745, column: 58)
!8359 = !DILocation(line: 747, column: 3, scope: !8358)
!8360 = !DILocation(line: 747, column: 20, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8353, file: !8156, line: 747, column: 14)
!8362 = !DILocation(line: 747, column: 52, scope: !8361)
!8363 = !DILocation(line: 747, column: 14, scope: !8353)
!8364 = !DILocation(line: 748, column: 13, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8361, file: !8156, line: 747, column: 58)
!8366 = !DILocation(line: 754, column: 4, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !8156, line: 754, column: 4)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !8156, line: 754, column: 4)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !8156, line: 754, column: 4)
!8370 = distinct !DILexicalBlock(scope: !8361, file: !8156, line: 753, column: 10)
!8371 = !DILocation(line: 758, column: 3, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !8156, line: 758, column: 3)
!8373 = distinct !DILexicalBlock(scope: !8374, file: !8156, line: 758, column: 3)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !8156, line: 758, column: 3)
!8375 = distinct !DILexicalBlock(scope: !8323, file: !8156, line: 757, column: 9)
!8376 = !DILocation(line: 766, column: 2, scope: !8285)
!8377 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8156, file: !8156, line: 229, type: !8261, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !8378)
!8378 = !{!8379, !8380, !8381, !8382, !8383, !8384, !8387}
!8379 = !DILocalVariable(name: "esf", arg: 1, scope: !8377, file: !8156, line: 229, type: !2911)
!8380 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8377, file: !8156, line: 229, type: !105)
!8381 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8377, file: !8156, line: 230, type: !8229)
!8382 = !DILocalVariable(name: "reason", scope: !8377, file: !8156, line: 232, type: !113)
!8383 = !DILocalVariable(name: "mmfar", scope: !8377, file: !8156, line: 233, type: !113)
!8384 = !DILocalVariable(name: "temp", scope: !8385, file: !8156, line: 254, type: !113)
!8385 = distinct !DILexicalBlock(scope: !8386, file: !8156, line: 244, column: 48)
!8386 = distinct !DILexicalBlock(scope: !8377, file: !8156, line: 244, column: 6)
!8387 = !DILocalVariable(name: "min_stack_ptr", scope: !8388, file: !8156, line: 309, type: !113)
!8388 = distinct !DILexicalBlock(scope: !8389, file: !8156, line: 308, column: 43)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !8156, line: 308, column: 7)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !8156, line: 289, column: 40)
!8391 = distinct !DILexicalBlock(scope: !8377, file: !8156, line: 288, column: 6)
!8392 = !DILocation(line: 0, scope: !8377)
!8393 = !DILocation(line: 235, column: 2, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !8156, line: 235, column: 2)
!8395 = distinct !DILexicalBlock(scope: !8396, file: !8156, line: 235, column: 2)
!8396 = distinct !DILexicalBlock(scope: !8397, file: !8156, line: 235, column: 2)
!8397 = distinct !DILexicalBlock(scope: !8377, file: !8156, line: 235, column: 2)
!8398 = !DILocation(line: 237, column: 12, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8377, file: !8156, line: 237, column: 6)
!8400 = !DILocation(line: 237, column: 17, scope: !8399)
!8401 = !DILocation(line: 237, column: 41, scope: !8399)
!8402 = !DILocation(line: 237, column: 6, scope: !8377)
!8403 = !DILocation(line: 238, column: 3, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !8156, line: 238, column: 3)
!8405 = distinct !DILexicalBlock(scope: !8406, file: !8156, line: 238, column: 3)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !8156, line: 238, column: 3)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !8156, line: 238, column: 3)
!8408 = distinct !DILexicalBlock(scope: !8399, file: !8156, line: 237, column: 47)
!8409 = !DILocation(line: 240, column: 2, scope: !8408)
!8410 = !DILocation(line: 241, column: 12, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8377, file: !8156, line: 241, column: 6)
!8412 = !DILocation(line: 241, column: 17, scope: !8411)
!8413 = !DILocation(line: 241, column: 43, scope: !8411)
!8414 = !DILocation(line: 241, column: 6, scope: !8377)
!8415 = !DILocation(line: 242, column: 3, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !8156, line: 242, column: 3)
!8417 = distinct !DILexicalBlock(scope: !8418, file: !8156, line: 242, column: 3)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !8156, line: 242, column: 3)
!8419 = distinct !DILexicalBlock(scope: !8420, file: !8156, line: 242, column: 3)
!8420 = distinct !DILexicalBlock(scope: !8411, file: !8156, line: 241, column: 49)
!8421 = !DILocation(line: 243, column: 2, scope: !8420)
!8422 = !DILocation(line: 244, column: 12, scope: !8386)
!8423 = !DILocation(line: 244, column: 17, scope: !8386)
!8424 = !DILocation(line: 244, column: 42, scope: !8386)
!8425 = !DILocation(line: 244, column: 6, scope: !8377)
!8426 = !DILocation(line: 245, column: 3, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8428, file: !8156, line: 245, column: 3)
!8428 = distinct !DILexicalBlock(scope: !8429, file: !8156, line: 245, column: 3)
!8429 = distinct !DILexicalBlock(scope: !8430, file: !8156, line: 245, column: 3)
!8430 = distinct !DILexicalBlock(scope: !8385, file: !8156, line: 245, column: 3)
!8431 = !DILocation(line: 254, column: 24, scope: !8385)
!8432 = !DILocation(line: 0, scope: !8385)
!8433 = !DILocation(line: 256, column: 13, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8385, file: !8156, line: 256, column: 7)
!8435 = !DILocation(line: 256, column: 18, scope: !8434)
!8436 = !DILocation(line: 256, column: 44, scope: !8434)
!8437 = !DILocation(line: 256, column: 7, scope: !8385)
!8438 = !DILocation(line: 258, column: 4, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8440, file: !8156, line: 258, column: 4)
!8440 = distinct !DILexicalBlock(scope: !8441, file: !8156, line: 258, column: 4)
!8441 = distinct !DILexicalBlock(scope: !8442, file: !8156, line: 258, column: 4)
!8442 = distinct !DILexicalBlock(scope: !8443, file: !8156, line: 258, column: 4)
!8443 = distinct !DILexicalBlock(scope: !8434, file: !8156, line: 256, column: 50)
!8444 = !DILocation(line: 259, column: 24, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8443, file: !8156, line: 259, column: 8)
!8446 = !DILocation(line: 259, column: 8, scope: !8443)
!8447 = !DILocation(line: 261, column: 15, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8445, file: !8156, line: 259, column: 30)
!8449 = !DILocation(line: 262, column: 4, scope: !8448)
!8450 = !DILocation(line: 265, column: 12, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8377, file: !8156, line: 265, column: 6)
!8452 = !DILocation(line: 265, column: 17, scope: !8451)
!8453 = !DILocation(line: 265, column: 42, scope: !8451)
!8454 = !DILocation(line: 265, column: 6, scope: !8377)
!8455 = !DILocation(line: 266, column: 3, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !8156, line: 266, column: 3)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !8156, line: 266, column: 3)
!8458 = distinct !DILexicalBlock(scope: !8459, file: !8156, line: 266, column: 3)
!8459 = distinct !DILexicalBlock(scope: !8460, file: !8156, line: 266, column: 3)
!8460 = distinct !DILexicalBlock(scope: !8451, file: !8156, line: 265, column: 48)
!8461 = !DILocation(line: 267, column: 2, scope: !8460)
!8462 = !DILocation(line: 269, column: 12, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8377, file: !8156, line: 269, column: 6)
!8464 = !DILocation(line: 269, column: 17, scope: !8463)
!8465 = !DILocation(line: 269, column: 41, scope: !8463)
!8466 = !DILocation(line: 269, column: 6, scope: !8377)
!8467 = !DILocation(line: 270, column: 3, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8469, file: !8156, line: 270, column: 3)
!8469 = distinct !DILexicalBlock(scope: !8470, file: !8156, line: 270, column: 3)
!8470 = distinct !DILexicalBlock(scope: !8471, file: !8156, line: 270, column: 3)
!8471 = distinct !DILexicalBlock(scope: !8472, file: !8156, line: 270, column: 3)
!8472 = distinct !DILexicalBlock(scope: !8463, file: !8156, line: 269, column: 47)
!8473 = !DILocation(line: 272, column: 2, scope: !8472)
!8474 = !DILocation(line: 288, column: 12, scope: !8391)
!8475 = !DILocation(line: 288, column: 17, scope: !8391)
!8476 = !DILocation(line: 288, column: 41, scope: !8391)
!8477 = !DILocation(line: 289, column: 9, scope: !8391)
!8478 = !DILocation(line: 289, column: 14, scope: !8391)
!8479 = !DILocation(line: 288, column: 6, scope: !8377)
!8480 = !DILocation(line: 308, column: 12, scope: !8389)
!8481 = !DILocation(line: 308, column: 17, scope: !8389)
!8482 = !DILocation(line: 308, column: 7, scope: !8390)
!8483 = !DILocation(line: 310, column: 6, scope: !8388)
!8484 = !DILocation(line: 309, column: 29, scope: !8388)
!8485 = !DILocation(line: 0, scope: !8388)
!8486 = !DILocation(line: 312, column: 8, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8388, file: !8156, line: 312, column: 8)
!8488 = !DILocation(line: 312, column: 8, scope: !8388)
!8489 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8490, file: !7850, line: 1099, type: !113)
!8490 = distinct !DISubprogram(name: "__set_PSP", scope: !7850, file: !7850, line: 1099, type: !7945, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !8491)
!8491 = !{!8489}
!8492 = !DILocation(line: 0, scope: !8490, inlinedAt: !8493)
!8493 = distinct !DILocation(line: 338, column: 5, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8487, file: !8156, line: 312, column: 23)
!8495 = !DILocation(line: 1101, column: 3, scope: !8490, inlinedAt: !8493)
!8496 = !{i64 3761941}
!8497 = !DILocation(line: 341, column: 4, scope: !8494)
!8498 = !DILocation(line: 342, column: 5, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8500, file: !8156, line: 342, column: 5)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !8156, line: 342, column: 5)
!8501 = distinct !DILexicalBlock(scope: !8487, file: !8156, line: 341, column: 11)
!8502 = !DILocation(line: 342, column: 5, scope: !8500)
!8503 = !DILocation(line: 342, column: 5, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8499, file: !8156, line: 342, column: 5)
!8505 = !DILocation(line: 360, column: 12, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8377, file: !8156, line: 360, column: 6)
!8507 = !DILocation(line: 360, column: 17, scope: !8506)
!8508 = !DILocation(line: 360, column: 41, scope: !8506)
!8509 = !DILocation(line: 360, column: 6, scope: !8377)
!8510 = !DILocation(line: 361, column: 14, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8506, file: !8156, line: 360, column: 47)
!8512 = !DILocation(line: 362, column: 2, scope: !8511)
!8513 = !DILocation(line: 366, column: 12, scope: !8377)
!8514 = !DILocation(line: 369, column: 15, scope: !8377)
!8515 = !DILocation(line: 371, column: 2, scope: !8377)
!8516 = distinct !DISubprogram(name: "bus_fault", scope: !8156, file: !8156, line: 383, type: !8517, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !8519)
!8517 = !DISubroutineType(types: !8518)
!8518 = !{!105, !2911, !105, !8229}
!8519 = !{!8520, !8521, !8522, !8523, !8524}
!8520 = !DILocalVariable(name: "esf", arg: 1, scope: !8516, file: !8156, line: 383, type: !2911)
!8521 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8516, file: !8156, line: 383, type: !105)
!8522 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8516, file: !8156, line: 383, type: !8229)
!8523 = !DILocalVariable(name: "reason", scope: !8516, file: !8156, line: 385, type: !113)
!8524 = !DILocalVariable(name: "bfar", scope: !8525, file: !8156, line: 405, type: !113)
!8525 = distinct !DILexicalBlock(scope: !8526, file: !8156, line: 395, column: 42)
!8526 = distinct !DILexicalBlock(scope: !8516, file: !8156, line: 395, column: 6)
!8527 = !DILocation(line: 0, scope: !8516)
!8528 = !DILocation(line: 387, column: 2, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8530, file: !8156, line: 387, column: 2)
!8530 = distinct !DILexicalBlock(scope: !8531, file: !8156, line: 387, column: 2)
!8531 = distinct !DILexicalBlock(scope: !8532, file: !8156, line: 387, column: 2)
!8532 = distinct !DILexicalBlock(scope: !8516, file: !8156, line: 387, column: 2)
!8533 = !DILocation(line: 389, column: 11, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8516, file: !8156, line: 389, column: 6)
!8535 = !DILocation(line: 389, column: 16, scope: !8534)
!8536 = !DILocation(line: 389, column: 6, scope: !8516)
!8537 = !DILocation(line: 390, column: 3, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8539, file: !8156, line: 390, column: 3)
!8539 = distinct !DILexicalBlock(scope: !8540, file: !8156, line: 390, column: 3)
!8540 = distinct !DILexicalBlock(scope: !8541, file: !8156, line: 390, column: 3)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !8156, line: 390, column: 3)
!8542 = distinct !DILexicalBlock(scope: !8534, file: !8156, line: 389, column: 39)
!8543 = !DILocation(line: 391, column: 2, scope: !8542)
!8544 = !DILocation(line: 392, column: 11, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8516, file: !8156, line: 392, column: 6)
!8546 = !DILocation(line: 392, column: 16, scope: !8545)
!8547 = !DILocation(line: 392, column: 6, scope: !8516)
!8548 = !DILocation(line: 393, column: 3, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8550, file: !8156, line: 393, column: 3)
!8550 = distinct !DILexicalBlock(scope: !8551, file: !8156, line: 393, column: 3)
!8551 = distinct !DILexicalBlock(scope: !8552, file: !8156, line: 393, column: 3)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !8156, line: 393, column: 3)
!8553 = distinct !DILexicalBlock(scope: !8545, file: !8156, line: 392, column: 41)
!8554 = !DILocation(line: 394, column: 2, scope: !8553)
!8555 = !DILocation(line: 395, column: 11, scope: !8526)
!8556 = !DILocation(line: 395, column: 16, scope: !8526)
!8557 = !DILocation(line: 395, column: 6, scope: !8516)
!8558 = !DILocation(line: 396, column: 3, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !8156, line: 396, column: 3)
!8560 = distinct !DILexicalBlock(scope: !8561, file: !8156, line: 396, column: 3)
!8561 = distinct !DILexicalBlock(scope: !8562, file: !8156, line: 396, column: 3)
!8562 = distinct !DILexicalBlock(scope: !8525, file: !8156, line: 396, column: 3)
!8563 = !DILocation(line: 405, column: 3, scope: !8525)
!8564 = !DILocation(line: 0, scope: !8525)
!8565 = !DILocation(line: 407, column: 13, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8525, file: !8156, line: 407, column: 7)
!8567 = !DILocation(line: 407, column: 18, scope: !8566)
!8568 = !DILocation(line: 407, column: 44, scope: !8566)
!8569 = !DILocation(line: 407, column: 7, scope: !8525)
!8570 = !DILocation(line: 408, column: 4, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8572, file: !8156, line: 408, column: 4)
!8572 = distinct !DILexicalBlock(scope: !8573, file: !8156, line: 408, column: 4)
!8573 = distinct !DILexicalBlock(scope: !8574, file: !8156, line: 408, column: 4)
!8574 = distinct !DILexicalBlock(scope: !8575, file: !8156, line: 408, column: 4)
!8575 = distinct !DILexicalBlock(scope: !8566, file: !8156, line: 407, column: 50)
!8576 = !DILocation(line: 409, column: 24, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8575, file: !8156, line: 409, column: 8)
!8578 = !DILocation(line: 409, column: 8, scope: !8575)
!8579 = !DILocation(line: 411, column: 15, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8577, file: !8156, line: 409, column: 30)
!8581 = !DILocation(line: 412, column: 4, scope: !8580)
!8582 = !DILocation(line: 415, column: 11, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8516, file: !8156, line: 415, column: 6)
!8584 = !DILocation(line: 415, column: 16, scope: !8583)
!8585 = !DILocation(line: 415, column: 6, scope: !8516)
!8586 = !DILocation(line: 416, column: 3, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !8156, line: 416, column: 3)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !8156, line: 416, column: 3)
!8589 = distinct !DILexicalBlock(scope: !8590, file: !8156, line: 416, column: 3)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !8156, line: 416, column: 3)
!8591 = distinct !DILexicalBlock(scope: !8583, file: !8156, line: 415, column: 44)
!8592 = !DILocation(line: 417, column: 2, scope: !8591)
!8593 = !DILocation(line: 418, column: 12, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8516, file: !8156, line: 418, column: 6)
!8595 = !DILocation(line: 418, column: 17, scope: !8594)
!8596 = !DILocation(line: 418, column: 41, scope: !8594)
!8597 = !DILocation(line: 418, column: 6, scope: !8516)
!8598 = !DILocation(line: 423, column: 18, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8594, file: !8156, line: 423, column: 13)
!8600 = !DILocation(line: 423, column: 23, scope: !8599)
!8601 = !DILocation(line: 423, column: 13, scope: !8594)
!8602 = !DILocation(line: 0, scope: !8594)
!8603 = !DILocation(line: 524, column: 12, scope: !8516)
!8604 = !DILocation(line: 526, column: 15, scope: !8516)
!8605 = !DILocation(line: 528, column: 2, scope: !8516)
!8606 = distinct !DISubprogram(name: "usage_fault", scope: !8156, file: !8156, line: 539, type: !8607, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !8611)
!8607 = !DISubroutineType(types: !8608)
!8608 = !{!113, !8609}
!8609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8610, size: 32)
!8610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2912)
!8611 = !{!8612, !8613}
!8612 = !DILocalVariable(name: "esf", arg: 1, scope: !8606, file: !8156, line: 539, type: !8609)
!8613 = !DILocalVariable(name: "reason", scope: !8606, file: !8156, line: 541, type: !113)
!8614 = !DILocation(line: 0, scope: !8606)
!8615 = !DILocation(line: 543, column: 2, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8617, file: !8156, line: 543, column: 2)
!8617 = distinct !DILexicalBlock(scope: !8618, file: !8156, line: 543, column: 2)
!8618 = distinct !DILexicalBlock(scope: !8619, file: !8156, line: 543, column: 2)
!8619 = distinct !DILexicalBlock(scope: !8606, file: !8156, line: 543, column: 2)
!8620 = !DILocation(line: 546, column: 12, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8606, file: !8156, line: 546, column: 6)
!8622 = !DILocation(line: 546, column: 17, scope: !8621)
!8623 = !DILocation(line: 546, column: 43, scope: !8621)
!8624 = !DILocation(line: 546, column: 6, scope: !8606)
!8625 = !DILocation(line: 547, column: 3, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8627, file: !8156, line: 547, column: 3)
!8627 = distinct !DILexicalBlock(scope: !8628, file: !8156, line: 547, column: 3)
!8628 = distinct !DILexicalBlock(scope: !8629, file: !8156, line: 547, column: 3)
!8629 = distinct !DILexicalBlock(scope: !8630, file: !8156, line: 547, column: 3)
!8630 = distinct !DILexicalBlock(scope: !8621, file: !8156, line: 546, column: 49)
!8631 = !DILocation(line: 548, column: 2, scope: !8630)
!8632 = !DILocation(line: 549, column: 12, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8606, file: !8156, line: 549, column: 6)
!8634 = !DILocation(line: 549, column: 17, scope: !8633)
!8635 = !DILocation(line: 549, column: 43, scope: !8633)
!8636 = !DILocation(line: 549, column: 6, scope: !8606)
!8637 = !DILocation(line: 550, column: 3, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8639, file: !8156, line: 550, column: 3)
!8639 = distinct !DILexicalBlock(scope: !8640, file: !8156, line: 550, column: 3)
!8640 = distinct !DILexicalBlock(scope: !8641, file: !8156, line: 550, column: 3)
!8641 = distinct !DILexicalBlock(scope: !8642, file: !8156, line: 550, column: 3)
!8642 = distinct !DILexicalBlock(scope: !8633, file: !8156, line: 549, column: 49)
!8643 = !DILocation(line: 551, column: 2, scope: !8642)
!8644 = !DILocation(line: 567, column: 12, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8606, file: !8156, line: 567, column: 6)
!8646 = !DILocation(line: 567, column: 17, scope: !8645)
!8647 = !DILocation(line: 567, column: 38, scope: !8645)
!8648 = !DILocation(line: 567, column: 6, scope: !8606)
!8649 = !DILocation(line: 568, column: 3, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8651, file: !8156, line: 568, column: 3)
!8651 = distinct !DILexicalBlock(scope: !8652, file: !8156, line: 568, column: 3)
!8652 = distinct !DILexicalBlock(scope: !8653, file: !8156, line: 568, column: 3)
!8653 = distinct !DILexicalBlock(scope: !8654, file: !8156, line: 568, column: 3)
!8654 = distinct !DILexicalBlock(scope: !8645, file: !8156, line: 567, column: 44)
!8655 = !DILocation(line: 569, column: 2, scope: !8654)
!8656 = !DILocation(line: 570, column: 12, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8606, file: !8156, line: 570, column: 6)
!8658 = !DILocation(line: 570, column: 17, scope: !8657)
!8659 = !DILocation(line: 570, column: 39, scope: !8657)
!8660 = !DILocation(line: 570, column: 6, scope: !8606)
!8661 = !DILocation(line: 571, column: 3, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8663, file: !8156, line: 571, column: 3)
!8663 = distinct !DILexicalBlock(scope: !8664, file: !8156, line: 571, column: 3)
!8664 = distinct !DILexicalBlock(scope: !8665, file: !8156, line: 571, column: 3)
!8665 = distinct !DILexicalBlock(scope: !8666, file: !8156, line: 571, column: 3)
!8666 = distinct !DILexicalBlock(scope: !8657, file: !8156, line: 570, column: 45)
!8667 = !DILocation(line: 572, column: 2, scope: !8666)
!8668 = !DILocation(line: 573, column: 12, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8606, file: !8156, line: 573, column: 6)
!8670 = !DILocation(line: 573, column: 17, scope: !8669)
!8671 = !DILocation(line: 573, column: 42, scope: !8669)
!8672 = !DILocation(line: 573, column: 6, scope: !8606)
!8673 = !DILocation(line: 574, column: 3, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8675, file: !8156, line: 574, column: 3)
!8675 = distinct !DILexicalBlock(scope: !8676, file: !8156, line: 574, column: 3)
!8676 = distinct !DILexicalBlock(scope: !8677, file: !8156, line: 574, column: 3)
!8677 = distinct !DILexicalBlock(scope: !8678, file: !8156, line: 574, column: 3)
!8678 = distinct !DILexicalBlock(scope: !8669, file: !8156, line: 573, column: 48)
!8679 = !DILocation(line: 575, column: 2, scope: !8678)
!8680 = !DILocation(line: 576, column: 12, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8606, file: !8156, line: 576, column: 6)
!8682 = !DILocation(line: 576, column: 17, scope: !8681)
!8683 = !DILocation(line: 576, column: 44, scope: !8681)
!8684 = !DILocation(line: 576, column: 6, scope: !8606)
!8685 = !DILocation(line: 577, column: 3, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8687, file: !8156, line: 577, column: 3)
!8687 = distinct !DILexicalBlock(scope: !8688, file: !8156, line: 577, column: 3)
!8688 = distinct !DILexicalBlock(scope: !8689, file: !8156, line: 577, column: 3)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !8156, line: 577, column: 3)
!8690 = distinct !DILexicalBlock(scope: !8681, file: !8156, line: 576, column: 50)
!8691 = !DILocation(line: 578, column: 2, scope: !8690)
!8692 = !DILocation(line: 581, column: 12, scope: !8606)
!8693 = !DILocation(line: 583, column: 2, scope: !8606)
!8694 = distinct !DISubprogram(name: "debug_monitor", scope: !8156, file: !8156, line: 632, type: !8695, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !8697)
!8695 = !DISubroutineType(types: !8696)
!8696 = !{null, !2911, !8229}
!8697 = !{!8698, !8699}
!8698 = !DILocalVariable(name: "esf", arg: 1, scope: !8694, file: !8156, line: 632, type: !2911)
!8699 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8694, file: !8156, line: 632, type: !8229)
!8700 = !DILocation(line: 0, scope: !8694)
!8701 = !DILocation(line: 634, column: 15, scope: !8694)
!8702 = !DILocation(line: 636, column: 2, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8704, file: !8156, line: 636, column: 2)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !8156, line: 636, column: 2)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !8156, line: 636, column: 2)
!8706 = distinct !DILexicalBlock(scope: !8694, file: !8156, line: 636, column: 2)
!8707 = !DILocation(line: 652, column: 1, scope: !8694)
!8708 = distinct !DISubprogram(name: "reserved_exception", scope: !8156, file: !8156, line: 776, type: !8709, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !8711)
!8709 = !DISubroutineType(types: !8710)
!8710 = !{null, !8609, !105}
!8711 = !{!8712, !8713}
!8712 = !DILocalVariable(name: "esf", arg: 1, scope: !8708, file: !8156, line: 776, type: !8609)
!8713 = !DILocalVariable(name: "fault", arg: 2, scope: !8708, file: !8156, line: 776, type: !105)
!8714 = !DILocation(line: 0, scope: !8708)
!8715 = !DILocation(line: 780, column: 2, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8717, file: !8156, line: 780, column: 2)
!8717 = distinct !DILexicalBlock(scope: !8718, file: !8156, line: 780, column: 2)
!8718 = distinct !DILexicalBlock(scope: !8719, file: !8156, line: 780, column: 2)
!8719 = distinct !DILexicalBlock(scope: !8708, file: !8156, line: 780, column: 2)
!8720 = !DILocation(line: 783, column: 1, scope: !8708)
!8721 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8156, file: !8156, line: 658, type: !8722, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !8724)
!8722 = !DISubroutineType(types: !8723)
!8723 = !{!492, !2911}
!8724 = !{!8725, !8726, !8727}
!8725 = !DILocalVariable(name: "esf", arg: 1, scope: !8721, file: !8156, line: 658, type: !2911)
!8726 = !DILocalVariable(name: "ret_addr", scope: !8721, file: !8156, line: 660, type: !2683)
!8727 = !DILocalVariable(name: "fault_insn", scope: !8721, file: !8156, line: 686, type: !183)
!8728 = !DILocation(line: 0, scope: !8721)
!8729 = !DILocation(line: 660, column: 46, scope: !8721)
!8730 = !DILocation(line: 660, column: 23, scope: !8721)
!8731 = !DILocation(line: 682, column: 11, scope: !8721)
!8732 = !DILocation(line: 271, column: 3, scope: !8733, inlinedAt: !8734)
!8733 = distinct !DISubprogram(name: "__DSB", scope: !7850, file: !7850, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !397)
!8734 = distinct !DILocation(line: 683, column: 2, scope: !8721)
!8735 = !{i64 3738076}
!8736 = !DILocation(line: 260, column: 3, scope: !8737, inlinedAt: !8738)
!8737 = distinct !DISubprogram(name: "__ISB", scope: !7850, file: !7850, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !397)
!8738 = distinct !DILocation(line: 684, column: 2, scope: !8721)
!8739 = !{i64 3737793}
!8740 = !DILocation(line: 686, column: 35, scope: !8721)
!8741 = !DILocation(line: 686, column: 24, scope: !8721)
!8742 = !DILocation(line: 688, column: 11, scope: !8721)
!8743 = !DILocation(line: 271, column: 3, scope: !8733, inlinedAt: !8744)
!8744 = distinct !DILocation(line: 689, column: 2, scope: !8721)
!8745 = !DILocation(line: 260, column: 3, scope: !8737, inlinedAt: !8746)
!8746 = distinct !DILocation(line: 690, column: 2, scope: !8721)
!8747 = !DILocation(line: 693, column: 45, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8721, file: !8156, line: 693, column: 6)
!8749 = !DILocation(line: 699, column: 1, scope: !8721)
!8750 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8156, file: !8156, line: 1107, type: !266, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2883, retainedNodes: !397)
!8751 = !DILocation(line: 1111, column: 11, scope: !8750)
!8752 = !DILocation(line: 1136, column: 1, scope: !8750)
!8753 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8754, file: !8754, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2954, retainedNodes: !8755)
!8754 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8755 = !{!8756}
!8756 = !DILocalVariable(name: "irq", scope: !8753, file: !8754, line: 28, type: !105)
!8757 = !DILocation(line: 0, scope: !8753)
!8758 = !DILocation(line: 30, column: 2, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8753, file: !8754, line: 30, column: 2)
!8760 = !DILocation(line: 31, column: 3, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8762, file: !8754, line: 30, column: 39)
!8762 = distinct !DILexicalBlock(scope: !8759, file: !8754, line: 30, column: 2)
!8763 = !DILocation(line: 30, column: 35, scope: !8762)
!8764 = !DILocation(line: 30, column: 13, scope: !8762)
!8765 = distinct !{!8765, !8758, !8766}
!8766 = !DILocation(line: 32, column: 2, scope: !8759)
!8767 = !DILocation(line: 33, column: 1, scope: !8753)
!8768 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7890, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2954, retainedNodes: !8769)
!8769 = !{!8770, !8771}
!8770 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8768, file: !679, line: 1814, type: !941)
!8771 = !DILocalVariable(name: "priority", arg: 2, scope: !8768, file: !679, line: 1814, type: !113)
!8772 = !DILocation(line: 0, scope: !8768)
!8773 = !DILocation(line: 1816, column: 7, scope: !8768)
!8774 = !DILocation(line: 0, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8768, file: !679, line: 1816, column: 7)
!8776 = !DILocation(line: 1824, column: 1, scope: !8768)
!8777 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8778, file: !8778, line: 27, type: !8779, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !8884)
!8778 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8779 = !DISubroutineType(types: !8780)
!8780 = !{null, !8781}
!8781 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !8782)
!8782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8783, size: 32)
!8783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !8784)
!8784 = !{!8785, !8843, !8855, !8856, !8857, !8858, !8864, !8879}
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8783, file: !127, line: 247, baseType: !8786, size: 384)
!8786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !8787)
!8787 = !{!8788, !8812, !8819, !8820, !8821, !8830, !8831, !8832}
!8788 = !DIDerivedType(tag: DW_TAG_member, scope: !8786, file: !127, line: 60, baseType: !8789, size: 64)
!8789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8786, file: !127, line: 60, size: 64, elements: !8790)
!8790 = !{!8791, !8806}
!8791 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8789, file: !127, line: 61, baseType: !8792, size: 64)
!8792 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !8793)
!8793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !8794)
!8794 = !{!8795, !8801}
!8795 = !DIDerivedType(tag: DW_TAG_member, scope: !8793, file: !137, line: 38, baseType: !8796, size: 32)
!8796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8793, file: !137, line: 38, size: 32, elements: !8797)
!8797 = !{!8798, !8800}
!8798 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8796, file: !137, line: 39, baseType: !8799, size: 32)
!8799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8793, size: 32)
!8800 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8796, file: !137, line: 40, baseType: !8799, size: 32)
!8801 = !DIDerivedType(tag: DW_TAG_member, scope: !8793, file: !137, line: 42, baseType: !8802, size: 32, offset: 32)
!8802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8793, file: !137, line: 42, size: 32, elements: !8803)
!8803 = !{!8804, !8805}
!8804 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8802, file: !137, line: 43, baseType: !8799, size: 32)
!8805 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8802, file: !137, line: 44, baseType: !8799, size: 32)
!8806 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8789, file: !127, line: 62, baseType: !8807, size: 64)
!8807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !8808)
!8808 = !{!8809}
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8807, file: !153, line: 50, baseType: !8810, size: 64)
!8810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8811, size: 64, elements: !158)
!8811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8807, size: 32)
!8812 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8786, file: !127, line: 68, baseType: !8813, size: 32, offset: 64)
!8813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8814, size: 32)
!8814 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !8815)
!8815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !8816)
!8816 = !{!8817}
!8817 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8815, file: !163, line: 232, baseType: !8818, size: 64)
!8818 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !8793)
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8786, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8786, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!8821 = !DIDerivedType(tag: DW_TAG_member, scope: !8786, file: !127, line: 90, baseType: !8822, size: 16, offset: 112)
!8822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8786, file: !127, line: 90, size: 16, elements: !8823)
!8823 = !{!8824, !8829}
!8824 = !DIDerivedType(tag: DW_TAG_member, scope: !8822, file: !127, line: 91, baseType: !8825, size: 16)
!8825 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8822, file: !127, line: 91, size: 16, elements: !8826)
!8826 = !{!8827, !8828}
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8825, file: !127, line: 96, baseType: !179, size: 8)
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8825, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!8829 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8822, file: !127, line: 100, baseType: !183, size: 16)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8786, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!8831 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8786, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!8832 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8786, file: !127, line: 131, baseType: !8833, size: 192, offset: 192)
!8833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !8834)
!8834 = !{!8835, !8836, !8842}
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8833, file: !163, line: 245, baseType: !8792, size: 64)
!8836 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8833, file: !163, line: 246, baseType: !8837, size: 32, offset: 64)
!8837 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !8838)
!8838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8839, size: 32)
!8839 = !DISubroutineType(types: !8840)
!8840 = !{null, !8841}
!8841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8833, size: 32)
!8842 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8833, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!8843 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8783, file: !127, line: 250, baseType: !8844, size: 288, offset: 384)
!8844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8845)
!8845 = !{!8846, !8847, !8848, !8849, !8850, !8851, !8852, !8853, !8854}
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8844, file: !200, line: 26, baseType: !113, size: 32)
!8847 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8844, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8848 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8844, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8849 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8844, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8850 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8844, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8844, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8852 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8844, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8853 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8844, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8844, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8855 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8783, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!8856 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8783, file: !127, line: 256, baseType: !8814, size: 64, offset: 704)
!8857 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8783, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8783, file: !127, line: 300, baseType: !8859, size: 96, offset: 800)
!8859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !8860)
!8860 = !{!8861, !8862, !8863}
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8859, file: !127, line: 153, baseType: !22, size: 32)
!8862 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8859, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!8863 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8859, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8783, file: !127, line: 325, baseType: !8865, size: 32, offset: 896)
!8865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8866, size: 32)
!8866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !8867)
!8867 = !{!8868, !8874, !8875}
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8866, file: !122, line: 5074, baseType: !8869, size: 96)
!8869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !8870)
!8870 = !{!8871, !8872, !8873}
!8871 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8869, file: !226, line: 57, baseType: !229, size: 32)
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8869, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8869, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8866, file: !122, line: 5075, baseType: !8814, size: 64, offset: 96)
!8875 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8866, file: !122, line: 5076, baseType: !8876, size: 32, offset: 160)
!8876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !8877)
!8877 = !{!8878}
!8878 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8876, file: !236, line: 52, baseType: !22, size: 32)
!8879 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8783, file: !127, line: 343, baseType: !8880, size: 64, offset: 928)
!8880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !8881)
!8881 = !{!8882, !8883}
!8882 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8880, file: !200, line: 63, baseType: !113, size: 32)
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8880, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!8884 = !{!8885}
!8885 = !DILocalVariable(name: "thread", arg: 1, scope: !8777, file: !8778, line: 27, type: !8781)
!8886 = !DILocation(line: 0, scope: !8777)
!8887 = !DILocation(line: 29, column: 6, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8777, file: !8778, line: 29, column: 6)
!8889 = !DILocation(line: 29, column: 15, scope: !8888)
!8890 = !DILocation(line: 29, column: 6, scope: !8777)
!8891 = !DILocation(line: 1031, column: 3, scope: !8892, inlinedAt: !8895)
!8892 = distinct !DISubprogram(name: "__get_IPSR", scope: !7850, file: !7850, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !8893)
!8893 = !{!8894}
!8894 = !DILocalVariable(name: "result", scope: !8892, file: !7850, line: 1029, type: !113)
!8895 = distinct !DILocation(line: 48, column: 10, scope: !8896, inlinedAt: !8900)
!8896 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8897, file: !8897, line: 46, type: !8898, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !397)
!8897 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8898 = !DISubroutineType(types: !8899)
!8899 = !{!492}
!8900 = distinct !DILocation(line: 30, column: 7, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8902, file: !8778, line: 30, column: 7)
!8902 = distinct !DILexicalBlock(scope: !8888, file: !8778, line: 29, column: 26)
!8903 = !{i64 3726924}
!8904 = !DILocation(line: 0, scope: !8892, inlinedAt: !8895)
!8905 = !DILocation(line: 48, column: 9, scope: !8896, inlinedAt: !8900)
!8906 = !DILocation(line: 30, column: 7, scope: !8902)
!8907 = !DILocation(line: 42, column: 14, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8901, file: !8778, line: 30, column: 25)
!8909 = !DILocation(line: 48, column: 15, scope: !8908)
!8910 = !DILocation(line: 49, column: 3, scope: !8908)
!8911 = !DILocation(line: 52, column: 2, scope: !8777)
!8912 = !DILocation(line: 53, column: 1, scope: !8777)
!8913 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !539, file: !539, line: 127, type: !266, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !397)
!8914 = !DILocation(line: 134, column: 2, scope: !8913)
!8915 = !DILocation(line: 156, column: 1, scope: !8913)
!8916 = !DILocation(line: 0, scope: !538)
!8917 = !DILocation(line: 289, column: 36, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !538, file: !539, line: 285, column: 2)
!8919 = !DILocation(line: 289, column: 42, scope: !8918)
!8920 = !DILocation(line: 300, column: 36, scope: !538)
!8921 = !DILocation(line: 301, column: 35, scope: !538)
!8922 = !DILocation(line: 302, column: 37, scope: !538)
!8923 = !DILocation(line: 311, column: 2, scope: !538)
!8924 = !DILocation(line: 316, column: 1, scope: !538)
!8925 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !707, file: !707, line: 180, type: !266, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8926 = !DILocation(line: 188, column: 12, scope: !8925)
!8927 = !DILocation(line: 271, column: 3, scope: !8928, inlinedAt: !8929)
!8928 = distinct !DISubprogram(name: "__DSB", scope: !7850, file: !7850, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8929 = distinct !DILocation(line: 192, column: 2, scope: !8925)
!8930 = !{i64 3917814}
!8931 = !DILocation(line: 260, column: 3, scope: !8932, inlinedAt: !8933)
!8932 = distinct !DISubprogram(name: "__ISB", scope: !7850, file: !7850, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8933 = distinct !DILocation(line: 193, column: 2, scope: !8925)
!8934 = !{i64 3917531}
!8935 = !DILocation(line: 194, column: 1, scope: !8925)
!8936 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !707, file: !707, line: 199, type: !266, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8937 = !DILocation(line: 282, column: 3, scope: !8938, inlinedAt: !8939)
!8938 = distinct !DISubprogram(name: "__DMB", scope: !7850, file: !7850, line: 280, type: !266, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8939 = distinct !DILocation(line: 202, column: 2, scope: !8936)
!8940 = !{i64 3918090}
!8941 = !DILocation(line: 205, column: 12, scope: !8936)
!8942 = !DILocation(line: 206, column: 1, scope: !8936)
!8943 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !707, file: !707, line: 275, type: !8944, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8957)
!8944 = !DISubroutineType(types: !8945)
!8945 = !{null, !8946, !2029, !3803, !3803}
!8946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8947, size: 32)
!8947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8948)
!8948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !651, line: 52, size: 96, elements: !8949)
!8949 = !{!8950, !8951, !8952}
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8948, file: !651, line: 53, baseType: !22, size: 32)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8948, file: !651, line: 54, baseType: !111, size: 32, offset: 32)
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8948, file: !651, line: 55, baseType: !8953, size: 32, offset: 64)
!8953 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !657, line: 151, baseType: !8954)
!8954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 149, size: 32, elements: !8955)
!8955 = !{!8956}
!8956 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8954, file: !657, line: 150, baseType: !113, size: 32)
!8957 = !{!8958, !8959, !8960, !8961}
!8958 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8943, file: !707, line: 276, type: !8946)
!8959 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8943, file: !707, line: 276, type: !2029)
!8960 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8943, file: !707, line: 277, type: !3803)
!8961 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8943, file: !707, line: 277, type: !3803)
!8962 = !DILocation(line: 0, scope: !8943)
!8963 = !DILocation(line: 279, column: 6, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8943, file: !707, line: 279, column: 6)
!8965 = !DILocation(line: 280, column: 57, scope: !8964)
!8966 = !DILocation(line: 279, column: 6, scope: !8943)
!8967 = !DILocation(line: 282, column: 3, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8969, file: !707, line: 282, column: 3)
!8969 = distinct !DILexicalBlock(scope: !8970, file: !707, line: 282, column: 3)
!8970 = distinct !DILexicalBlock(scope: !8971, file: !707, line: 282, column: 3)
!8971 = distinct !DILexicalBlock(scope: !8964, file: !707, line: 280, column: 69)
!8972 = !DILocation(line: 285, column: 1, scope: !8943)
!8973 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8974, file: !8974, line: 220, type: !8975, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8977)
!8974 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8975 = !DISubroutineType(types: !8976)
!8976 = !{!105, !8946, !2029, !3803, !3803}
!8977 = !{!8978, !8979, !8980, !8981, !8982}
!8978 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8973, file: !8974, line: 221, type: !8946)
!8979 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8973, file: !8974, line: 221, type: !2029)
!8980 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8973, file: !8974, line: 222, type: !3803)
!8981 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8973, file: !8974, line: 223, type: !3803)
!8982 = !DILocalVariable(name: "mpu_reg_index", scope: !8973, file: !8974, line: 225, type: !105)
!8983 = !DILocation(line: 0, scope: !8973)
!8984 = !DILocation(line: 225, column: 22, scope: !8973)
!8985 = !DILocation(line: 233, column: 18, scope: !8973)
!8986 = !DILocation(line: 236, column: 23, scope: !8973)
!8987 = !DILocation(line: 236, column: 21, scope: !8973)
!8988 = !DILocation(line: 238, column: 2, scope: !8973)
!8989 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !707, file: !707, line: 105, type: !8990, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8992)
!8990 = !DISubroutineType(types: !8991)
!8991 = !{!105, !8946, !169, !169, !492}
!8992 = !{!8993, !8994, !8995, !8996, !8997, !8998}
!8993 = !DILocalVariable(name: "regions", arg: 1, scope: !8989, file: !707, line: 106, type: !8946)
!8994 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8989, file: !707, line: 106, type: !169)
!8995 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8989, file: !707, line: 106, type: !169)
!8996 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8989, file: !707, line: 107, type: !492)
!8997 = !DILocalVariable(name: "i", scope: !8989, file: !707, line: 109, type: !105)
!8998 = !DILocalVariable(name: "reg_index", scope: !8989, file: !707, line: 110, type: !105)
!8999 = !DILocation(line: 0, scope: !8989)
!9000 = !DILocation(line: 110, column: 18, scope: !8989)
!9001 = !DILocation(line: 112, column: 16, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !707, line: 112, column: 2)
!9003 = distinct !DILexicalBlock(scope: !8989, file: !707, line: 112, column: 2)
!9004 = !DILocation(line: 112, column: 2, scope: !9003)
!9005 = !DILocation(line: 113, column: 7, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9007, file: !707, line: 113, column: 7)
!9007 = distinct !DILexicalBlock(scope: !9002, file: !707, line: 112, column: 36)
!9008 = !DILocation(line: 113, column: 18, scope: !9006)
!9009 = !DILocation(line: 113, column: 23, scope: !9006)
!9010 = !DILocation(line: 113, column: 7, scope: !9007)
!9011 = !DILocation(line: 118, column: 23, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9007, file: !707, line: 118, column: 7)
!9013 = !DILocation(line: 119, column: 7, scope: !9012)
!9014 = !DILocation(line: 118, column: 7, scope: !9007)
!9015 = !DILocation(line: 120, column: 4, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9017, file: !707, line: 120, column: 4)
!9017 = distinct !DILexicalBlock(scope: !9018, file: !707, line: 120, column: 4)
!9018 = distinct !DILexicalBlock(scope: !9019, file: !707, line: 120, column: 4)
!9019 = distinct !DILexicalBlock(scope: !9020, file: !707, line: 120, column: 4)
!9020 = distinct !DILexicalBlock(scope: !9012, file: !707, line: 119, column: 45)
!9021 = !DILocation(line: 121, column: 4, scope: !9020)
!9022 = !DILocation(line: 124, column: 36, scope: !9007)
!9023 = !DILocation(line: 124, column: 15, scope: !9007)
!9024 = !DILocation(line: 126, column: 17, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9007, file: !707, line: 126, column: 7)
!9026 = !DILocation(line: 126, column: 7, scope: !9007)
!9027 = !DILocation(line: 131, column: 12, scope: !9007)
!9028 = !DILocation(line: 132, column: 2, scope: !9007)
!9029 = !DILocation(line: 112, column: 32, scope: !9002)
!9030 = distinct !{!9030, !9004, !9031}
!9031 = !DILocation(line: 132, column: 2, scope: !9003)
!9032 = !DILocation(line: 135, column: 1, scope: !8989)
!9033 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8974, file: !8974, line: 63, type: !9034, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9036)
!9034 = !DISubroutineType(types: !9035)
!9035 = !{!105, !8946}
!9036 = !{!9037, !9038}
!9037 = !DILocalVariable(name: "part", arg: 1, scope: !9033, file: !8974, line: 63, type: !8946)
!9038 = !DILocalVariable(name: "partition_is_valid", scope: !9033, file: !8974, line: 70, type: !105)
!9039 = !DILocation(line: 0, scope: !9033)
!9040 = !DILocation(line: 71, column: 11, scope: !9033)
!9041 = !DILocation(line: 71, column: 37, scope: !9033)
!9042 = !DILocation(line: 72, column: 3, scope: !9033)
!9043 = !DILocation(line: 71, column: 30, scope: !9033)
!9044 = !DILocation(line: 75, column: 11, scope: !9033)
!9045 = !DILocation(line: 75, column: 17, scope: !9033)
!9046 = !DILocation(line: 75, column: 38, scope: !9033)
!9047 = !DILocation(line: 77, column: 2, scope: !9033)
!9048 = distinct !DISubprogram(name: "mpu_configure_region", scope: !707, file: !707, line: 79, type: !9049, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9051)
!9049 = !DISubroutineType(types: !9050)
!9050 = !{!105, !2029, !8946}
!9051 = !{!9052, !9053, !9054}
!9052 = !DILocalVariable(name: "index", arg: 1, scope: !9048, file: !707, line: 79, type: !2029)
!9053 = !DILocalVariable(name: "new_region", arg: 2, scope: !9048, file: !707, line: 80, type: !8946)
!9054 = !DILocalVariable(name: "region_conf", scope: !9048, file: !707, line: 82, type: !696)
!9055 = !DILocation(line: 0, scope: !9048)
!9056 = !DILocation(line: 82, column: 2, scope: !9048)
!9057 = !DILocation(line: 82, column: 24, scope: !9048)
!9058 = !DILocation(line: 87, column: 33, scope: !9048)
!9059 = !DILocation(line: 87, column: 14, scope: !9048)
!9060 = !DILocation(line: 87, column: 19, scope: !9048)
!9061 = !DILocation(line: 91, column: 55, scope: !9048)
!9062 = !DILocation(line: 92, column: 16, scope: !9048)
!9063 = !DILocation(line: 92, column: 53, scope: !9048)
!9064 = !DILocation(line: 91, column: 2, scope: !9048)
!9065 = !DILocation(line: 95, column: 9, scope: !9048)
!9066 = !DILocation(line: 97, column: 1, scope: !9048)
!9067 = !DILocation(line: 95, column: 2, scope: !9048)
!9068 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8974, file: !8974, line: 113, type: !9069, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9074)
!9069 = !DISubroutineType(types: !9070)
!9070 = !{null, !9071, !9072, !113, !113}
!9071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!9072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9073, size: 32)
!9073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8953)
!9074 = !{!9075, !9076, !9077, !9078}
!9075 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9068, file: !8974, line: 114, type: !9071)
!9076 = !DILocalVariable(name: "attr", arg: 2, scope: !9068, file: !8974, line: 115, type: !9072)
!9077 = !DILocalVariable(name: "base", arg: 3, scope: !9068, file: !8974, line: 115, type: !113)
!9078 = !DILocalVariable(name: "size", arg: 4, scope: !9068, file: !8974, line: 115, type: !113)
!9079 = !DILocation(line: 0, scope: !9068)
!9080 = !DILocation(line: 127, column: 23, scope: !9068)
!9081 = !DILocation(line: 127, column: 35, scope: !9068)
!9082 = !DILocation(line: 127, column: 33, scope: !9068)
!9083 = !DILocation(line: 127, column: 10, scope: !9068)
!9084 = !DILocation(line: 127, column: 15, scope: !9068)
!9085 = !DILocation(line: 129, column: 1, scope: !9068)
!9086 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !707, file: !707, line: 57, type: !9087, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9089)
!9087 = !DISubroutineType(types: !9088)
!9088 = !{!105, !2029, !694}
!9089 = !{!9090, !9091}
!9090 = !DILocalVariable(name: "index", arg: 1, scope: !9086, file: !707, line: 57, type: !2029)
!9091 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9086, file: !707, line: 58, type: !694)
!9092 = !DILocation(line: 0, scope: !9086)
!9093 = !DILocation(line: 61, column: 6, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9086, file: !707, line: 61, column: 6)
!9095 = !DILocation(line: 61, column: 12, scope: !9094)
!9096 = !DILocation(line: 61, column: 6, scope: !9086)
!9097 = !DILocation(line: 64, column: 3, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9099, file: !707, line: 64, column: 3)
!9099 = distinct !DILexicalBlock(scope: !9100, file: !707, line: 64, column: 3)
!9100 = distinct !DILexicalBlock(scope: !9101, file: !707, line: 64, column: 3)
!9101 = distinct !DILexicalBlock(scope: !9102, file: !707, line: 64, column: 3)
!9102 = distinct !DILexicalBlock(scope: !9094, file: !707, line: 61, column: 40)
!9103 = !DILocation(line: 65, column: 3, scope: !9102)
!9104 = !DILocation(line: 71, column: 2, scope: !9086)
!9105 = !DILocation(line: 73, column: 2, scope: !9086)
!9106 = !DILocation(line: 74, column: 1, scope: !9086)
!9107 = distinct !DISubprogram(name: "region_init", scope: !8974, file: !8974, line: 29, type: !9108, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9110)
!9108 = !DISubroutineType(types: !9109)
!9109 = !{null, !3803, !694}
!9110 = !{!9111, !9112}
!9111 = !DILocalVariable(name: "index", arg: 1, scope: !9107, file: !8974, line: 29, type: !3803)
!9112 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9107, file: !8974, line: 30, type: !694)
!9113 = !DILocation(line: 0, scope: !9107)
!9114 = !DILocation(line: 33, column: 2, scope: !9107)
!9115 = !DILocation(line: 47, column: 28, scope: !9107)
!9116 = !DILocation(line: 47, column: 33, scope: !9107)
!9117 = !DILocation(line: 48, column: 26, scope: !9107)
!9118 = !DILocation(line: 47, column: 12, scope: !9107)
!9119 = !DILocation(line: 49, column: 32, scope: !9107)
!9120 = !DILocation(line: 49, column: 37, scope: !9107)
!9121 = !DILocation(line: 49, column: 12, scope: !9107)
!9122 = !DILocation(line: 53, column: 1, scope: !9107)
!9123 = distinct !DISubprogram(name: "set_region_number", scope: !9124, file: !9124, line: 32, type: !7945, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9125)
!9124 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9125 = !{!9126}
!9126 = !DILocalVariable(name: "index", arg: 1, scope: !9123, file: !9124, line: 32, type: !113)
!9127 = !DILocation(line: 0, scope: !9123)
!9128 = !DILocation(line: 34, column: 11, scope: !9123)
!9129 = !DILocation(line: 35, column: 1, scope: !9123)
!9130 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8974, file: !8974, line: 88, type: !9131, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9133)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{!113, !113}
!9133 = !{!9134}
!9134 = !DILocalVariable(name: "size", arg: 1, scope: !9130, file: !8974, line: 88, type: !113)
!9135 = !DILocation(line: 0, scope: !9130)
!9136 = !DILocation(line: 91, column: 11, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9130, file: !8974, line: 91, column: 6)
!9138 = !DILocation(line: 91, column: 6, scope: !9130)
!9139 = !DILocation(line: 100, column: 11, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9130, file: !8974, line: 100, column: 6)
!9141 = !DILocation(line: 100, column: 6, scope: !9130)
!9142 = !DILocation(line: 104, column: 35, scope: !9130)
!9143 = !DILocation(line: 104, column: 16, scope: !9130)
!9144 = !DILocation(line: 104, column: 50, scope: !9130)
!9145 = !DILocation(line: 104, column: 72, scope: !9130)
!9146 = !DILocation(line: 104, column: 2, scope: !9130)
!9147 = !DILocation(line: 106, column: 1, scope: !9130)
!9148 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !707, file: !707, line: 307, type: !9149, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9151)
!9149 = !DISubroutineType(types: !9150)
!9150 = !{null, !8946, !169}
!9151 = !{!9152, !9153}
!9152 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9148, file: !707, line: 308, type: !8946)
!9153 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9148, file: !707, line: 308, type: !169)
!9154 = !DILocation(line: 0, scope: !9148)
!9155 = !DILocation(line: 310, column: 6, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9148, file: !707, line: 310, column: 6)
!9157 = !DILocation(line: 311, column: 3, scope: !9156)
!9158 = !DILocation(line: 310, column: 6, scope: !9148)
!9159 = !DILocation(line: 313, column: 3, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9161, file: !707, line: 313, column: 3)
!9161 = distinct !DILexicalBlock(scope: !9162, file: !707, line: 313, column: 3)
!9162 = distinct !DILexicalBlock(scope: !9163, file: !707, line: 313, column: 3)
!9163 = distinct !DILexicalBlock(scope: !9156, file: !707, line: 311, column: 15)
!9164 = !DILocation(line: 316, column: 1, scope: !9148)
!9165 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8974, file: !8974, line: 249, type: !9166, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9168)
!9166 = !DISubroutineType(types: !9167)
!9167 = !{!105, !8946, !169}
!9168 = !{!9169, !9170, !9171, !9172}
!9169 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9165, file: !8974, line: 250, type: !8946)
!9170 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9165, file: !8974, line: 250, type: !169)
!9171 = !DILocalVariable(name: "mpu_reg_index", scope: !9165, file: !8974, line: 252, type: !105)
!9172 = !DILocalVariable(name: "i", scope: !9173, file: !8974, line: 264, type: !105)
!9173 = distinct !DILexicalBlock(scope: !9174, file: !8974, line: 264, column: 3)
!9174 = distinct !DILexicalBlock(scope: !9175, file: !8974, line: 261, column: 32)
!9175 = distinct !DILexicalBlock(scope: !9165, file: !8974, line: 261, column: 6)
!9176 = !DILocation(line: 0, scope: !9165)
!9177 = !DILocation(line: 252, column: 22, scope: !9165)
!9178 = !DILocation(line: 258, column: 18, scope: !9165)
!9179 = !DILocation(line: 261, column: 20, scope: !9175)
!9180 = !DILocation(line: 261, column: 6, scope: !9165)
!9181 = !DILocation(line: 0, scope: !9173)
!9182 = !DILocation(line: 265, column: 4, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9184, file: !8974, line: 264, column: 59)
!9184 = distinct !DILexicalBlock(scope: !9173, file: !8974, line: 264, column: 3)
!9185 = !DILocation(line: 264, column: 55, scope: !9184)
!9186 = !DILocation(line: 264, column: 33, scope: !9184)
!9187 = !DILocation(line: 264, column: 3, scope: !9173)
!9188 = distinct !{!9188, !9187, !9189}
!9189 = !DILocation(line: 266, column: 3, scope: !9173)
!9190 = !DILocation(line: 269, column: 2, scope: !9165)
!9191 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9192, file: !9192, line: 218, type: !7945, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9193)
!9192 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9193 = !{!9194}
!9194 = !DILocalVariable(name: "rnr", arg: 1, scope: !9191, file: !9192, line: 218, type: !113)
!9195 = !DILocation(line: 0, scope: !9191)
!9196 = !DILocation(line: 220, column: 12, scope: !9191)
!9197 = !DILocation(line: 221, column: 13, scope: !9191)
!9198 = !DILocation(line: 222, column: 1, scope: !9191)
!9199 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !707, file: !707, line: 326, type: !9200, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9202)
!9200 = !DISubroutineType(types: !9201)
!9201 = !{!105}
!9202 = !{!9203}
!9203 = !DILocalVariable(name: "r_index", scope: !9199, file: !707, line: 328, type: !113)
!9204 = !DILocation(line: 330, column: 17, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9199, file: !707, line: 330, column: 6)
!9206 = !DILocation(line: 330, column: 29, scope: !9205)
!9207 = !DILocation(line: 330, column: 6, scope: !9199)
!9208 = !DILocation(line: 337, column: 3, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9210, file: !707, line: 337, column: 3)
!9210 = distinct !DILexicalBlock(scope: !9211, file: !707, line: 337, column: 3)
!9211 = distinct !DILexicalBlock(scope: !9212, file: !707, line: 337, column: 3)
!9212 = distinct !DILexicalBlock(scope: !9205, file: !707, line: 330, column: 50)
!9213 = !DILocation(line: 347, column: 2, scope: !9199)
!9214 = !DILocation(line: 0, scope: !9199)
!9215 = !DILocation(line: 364, column: 29, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !707, line: 364, column: 2)
!9217 = distinct !DILexicalBlock(scope: !9199, file: !707, line: 364, column: 2)
!9218 = !DILocation(line: 364, column: 2, scope: !9217)
!9219 = !DILocation(line: 365, column: 25, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9216, file: !707, line: 364, column: 66)
!9221 = !DILocation(line: 365, column: 3, scope: !9220)
!9222 = !DILocation(line: 364, column: 62, scope: !9216)
!9223 = distinct !{!9223, !9218, !9224}
!9224 = !DILocation(line: 366, column: 2, scope: !9217)
!9225 = !DILocation(line: 369, column: 23, scope: !9199)
!9226 = !DILocation(line: 369, column: 21, scope: !9199)
!9227 = !DILocation(line: 372, column: 2, scope: !9199)
!9228 = !DILocation(line: 433, column: 2, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9230, file: !707, line: 433, column: 2)
!9230 = distinct !DILexicalBlock(scope: !9199, file: !707, line: 433, column: 2)
!9231 = !DILocation(line: 433, column: 2, scope: !9230)
!9232 = !DILocation(line: 433, column: 2, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9229, file: !707, line: 433, column: 2)
!9234 = !DILocation(line: 444, column: 1, scope: !9199)
!9235 = distinct !DISubprogram(name: "strcpy", scope: !9236, file: !9236, line: 20, type: !9237, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9241)
!9236 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9237 = !DISubroutineType(types: !9238)
!9238 = !{!102, !9239, !9240}
!9239 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9240 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !269)
!9241 = !{!9242, !9243, !9244}
!9242 = !DILocalVariable(name: "d", arg: 1, scope: !9235, file: !9236, line: 20, type: !9239)
!9243 = !DILocalVariable(name: "s", arg: 2, scope: !9235, file: !9236, line: 20, type: !9240)
!9244 = !DILocalVariable(name: "dest", scope: !9235, file: !9236, line: 22, type: !102)
!9245 = !DILocation(line: 0, scope: !9235)
!9246 = !DILocation(line: 24, column: 9, scope: !9235)
!9247 = !DILocation(line: 24, column: 12, scope: !9235)
!9248 = !DILocation(line: 24, column: 2, scope: !9235)
!9249 = !DILocation(line: 25, column: 6, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9235, file: !9236, line: 24, column: 21)
!9251 = !DILocation(line: 26, column: 4, scope: !9250)
!9252 = !DILocation(line: 27, column: 4, scope: !9250)
!9253 = distinct !{!9253, !9248, !9254}
!9254 = !DILocation(line: 28, column: 2, scope: !9235)
!9255 = !DILocation(line: 30, column: 5, scope: !9235)
!9256 = !DILocation(line: 32, column: 2, scope: !9235)
!9257 = distinct !DISubprogram(name: "strncpy", scope: !9236, file: !9236, line: 42, type: !9258, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9260)
!9258 = !DISubroutineType(types: !9259)
!9259 = !{!102, !9239, !9240, !111}
!9260 = !{!9261, !9262, !9263, !9264}
!9261 = !DILocalVariable(name: "d", arg: 1, scope: !9257, file: !9236, line: 42, type: !9239)
!9262 = !DILocalVariable(name: "s", arg: 2, scope: !9257, file: !9236, line: 42, type: !9240)
!9263 = !DILocalVariable(name: "n", arg: 3, scope: !9257, file: !9236, line: 42, type: !111)
!9264 = !DILocalVariable(name: "dest", scope: !9257, file: !9236, line: 44, type: !102)
!9265 = !DILocation(line: 0, scope: !9257)
!9266 = !DILocation(line: 46, column: 12, scope: !9257)
!9267 = !DILocation(line: 46, column: 17, scope: !9257)
!9268 = !DILocation(line: 46, column: 20, scope: !9257)
!9269 = !DILocation(line: 46, column: 23, scope: !9257)
!9270 = !DILocation(line: 46, column: 2, scope: !9257)
!9271 = !DILocation(line: 47, column: 6, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9257, file: !9236, line: 46, column: 32)
!9273 = !DILocation(line: 48, column: 4, scope: !9272)
!9274 = !DILocation(line: 49, column: 4, scope: !9272)
!9275 = !DILocation(line: 50, column: 4, scope: !9272)
!9276 = distinct !{!9276, !9270, !9277}
!9277 = !DILocation(line: 51, column: 2, scope: !9257)
!9278 = !DILocation(line: 54, column: 6, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9257, file: !9236, line: 53, column: 16)
!9280 = !DILocation(line: 55, column: 4, scope: !9279)
!9281 = !DILocation(line: 56, column: 4, scope: !9279)
!9282 = !DILocation(line: 53, column: 11, scope: !9257)
!9283 = !DILocation(line: 53, column: 2, scope: !9257)
!9284 = distinct !{!9284, !9283, !9285}
!9285 = !DILocation(line: 57, column: 2, scope: !9257)
!9286 = !DILocation(line: 59, column: 2, scope: !9257)
!9287 = distinct !DISubprogram(name: "strchr", scope: !9236, file: !9236, line: 69, type: !9288, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9290)
!9288 = !DISubroutineType(types: !9289)
!9289 = !{!102, !269, !105}
!9290 = !{!9291, !9292, !9293}
!9291 = !DILocalVariable(name: "s", arg: 1, scope: !9287, file: !9236, line: 69, type: !269)
!9292 = !DILocalVariable(name: "c", arg: 2, scope: !9287, file: !9236, line: 69, type: !105)
!9293 = !DILocalVariable(name: "tmp", scope: !9287, file: !9236, line: 71, type: !103)
!9294 = !DILocation(line: 0, scope: !9287)
!9295 = !DILocation(line: 73, column: 2, scope: !9287)
!9296 = !DILocation(line: 73, column: 10, scope: !9287)
!9297 = !DILocation(line: 73, column: 13, scope: !9287)
!9298 = !DILocation(line: 73, column: 21, scope: !9287)
!9299 = !DILocation(line: 74, column: 4, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9287, file: !9236, line: 73, column: 38)
!9301 = distinct !{!9301, !9295, !9302}
!9302 = !DILocation(line: 75, column: 2, scope: !9287)
!9303 = !DILocation(line: 77, column: 9, scope: !9287)
!9304 = !DILocation(line: 77, column: 2, scope: !9287)
!9305 = distinct !DISubprogram(name: "strrchr", scope: !9236, file: !9236, line: 87, type: !9288, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9306)
!9306 = !{!9307, !9308, !9309}
!9307 = !DILocalVariable(name: "s", arg: 1, scope: !9305, file: !9236, line: 87, type: !269)
!9308 = !DILocalVariable(name: "c", arg: 2, scope: !9305, file: !9236, line: 87, type: !105)
!9309 = !DILocalVariable(name: "match", scope: !9305, file: !9236, line: 89, type: !102)
!9310 = !DILocation(line: 0, scope: !9305)
!9311 = !DILocation(line: 91, column: 2, scope: !9305)
!9312 = !DILocation(line: 92, column: 7, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9314, file: !9236, line: 92, column: 7)
!9314 = distinct !DILexicalBlock(scope: !9305, file: !9236, line: 91, column: 5)
!9315 = !DILocation(line: 92, column: 10, scope: !9313)
!9316 = !DILocation(line: 92, column: 7, scope: !9314)
!9317 = !DILocation(line: 95, column: 13, scope: !9305)
!9318 = !DILocation(line: 95, column: 2, scope: !9314)
!9319 = distinct !{!9319, !9311, !9320}
!9320 = !DILocation(line: 95, column: 15, scope: !9305)
!9321 = !DILocation(line: 97, column: 2, scope: !9305)
!9322 = distinct !DISubprogram(name: "strlen", scope: !9236, file: !9236, line: 107, type: !9323, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9325)
!9323 = !DISubroutineType(types: !9324)
!9324 = !{!111, !269}
!9325 = !{!9326, !9327}
!9326 = !DILocalVariable(name: "s", arg: 1, scope: !9322, file: !9236, line: 107, type: !269)
!9327 = !DILocalVariable(name: "n", scope: !9322, file: !9236, line: 109, type: !111)
!9328 = !DILocation(line: 0, scope: !9322)
!9329 = !DILocation(line: 111, column: 9, scope: !9322)
!9330 = !DILocation(line: 111, column: 12, scope: !9322)
!9331 = !DILocation(line: 111, column: 2, scope: !9322)
!9332 = !DILocation(line: 112, column: 4, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9322, file: !9236, line: 111, column: 21)
!9334 = !DILocation(line: 113, column: 4, scope: !9333)
!9335 = distinct !{!9335, !9331, !9336}
!9336 = !DILocation(line: 114, column: 2, scope: !9322)
!9337 = !DILocation(line: 116, column: 2, scope: !9322)
!9338 = distinct !DISubprogram(name: "strnlen", scope: !9236, file: !9236, line: 126, type: !9339, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9341)
!9339 = !DISubroutineType(types: !9340)
!9340 = !{!111, !269, !111}
!9341 = !{!9342, !9343, !9344}
!9342 = !DILocalVariable(name: "s", arg: 1, scope: !9338, file: !9236, line: 126, type: !269)
!9343 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9338, file: !9236, line: 126, type: !111)
!9344 = !DILocalVariable(name: "n", scope: !9338, file: !9236, line: 128, type: !111)
!9345 = !DILocation(line: 0, scope: !9338)
!9346 = !DILocation(line: 130, column: 9, scope: !9338)
!9347 = !DILocation(line: 130, column: 12, scope: !9338)
!9348 = !DILocation(line: 130, column: 20, scope: !9338)
!9349 = !DILocation(line: 130, column: 2, scope: !9338)
!9350 = !DILocation(line: 131, column: 4, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9338, file: !9236, line: 130, column: 35)
!9352 = !DILocation(line: 132, column: 4, scope: !9351)
!9353 = distinct !{!9353, !9349, !9354}
!9354 = !DILocation(line: 133, column: 2, scope: !9338)
!9355 = !DILocation(line: 135, column: 2, scope: !9338)
!9356 = distinct !DISubprogram(name: "strcmp", scope: !9236, file: !9236, line: 145, type: !9357, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9359)
!9357 = !DISubroutineType(types: !9358)
!9358 = !{!105, !269, !269}
!9359 = !{!9360, !9361}
!9360 = !DILocalVariable(name: "s1", arg: 1, scope: !9356, file: !9236, line: 145, type: !269)
!9361 = !DILocalVariable(name: "s2", arg: 2, scope: !9356, file: !9236, line: 145, type: !269)
!9362 = !DILocation(line: 0, scope: !9356)
!9363 = !DILocation(line: 147, column: 10, scope: !9356)
!9364 = !DILocation(line: 147, column: 17, scope: !9356)
!9365 = !DILocation(line: 147, column: 14, scope: !9356)
!9366 = !DILocation(line: 147, column: 22, scope: !9356)
!9367 = !DILocation(line: 148, column: 5, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9356, file: !9236, line: 147, column: 40)
!9369 = !DILocation(line: 149, column: 5, scope: !9368)
!9370 = distinct !{!9370, !9371, !9372}
!9371 = !DILocation(line: 147, column: 2, scope: !9356)
!9372 = !DILocation(line: 150, column: 2, scope: !9356)
!9373 = !DILocation(line: 152, column: 9, scope: !9356)
!9374 = !DILocation(line: 152, column: 15, scope: !9356)
!9375 = !DILocation(line: 152, column: 13, scope: !9356)
!9376 = !DILocation(line: 152, column: 2, scope: !9356)
!9377 = distinct !DISubprogram(name: "strncmp", scope: !9236, file: !9236, line: 162, type: !9378, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9380)
!9378 = !DISubroutineType(types: !9379)
!9379 = !{!105, !269, !269, !111}
!9380 = !{!9381, !9382, !9383}
!9381 = !DILocalVariable(name: "s1", arg: 1, scope: !9377, file: !9236, line: 162, type: !269)
!9382 = !DILocalVariable(name: "s2", arg: 2, scope: !9377, file: !9236, line: 162, type: !269)
!9383 = !DILocalVariable(name: "n", arg: 3, scope: !9377, file: !9236, line: 162, type: !111)
!9384 = !DILocation(line: 0, scope: !9377)
!9385 = !DILocation(line: 164, column: 17, scope: !9377)
!9386 = !DILocation(line: 164, column: 21, scope: !9377)
!9387 = !DILocation(line: 164, column: 28, scope: !9377)
!9388 = !DILocation(line: 164, column: 25, scope: !9377)
!9389 = !DILocation(line: 164, column: 33, scope: !9377)
!9390 = !DILocation(line: 165, column: 5, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9377, file: !9236, line: 164, column: 51)
!9392 = !DILocation(line: 166, column: 5, scope: !9391)
!9393 = !DILocation(line: 167, column: 4, scope: !9391)
!9394 = distinct !{!9394, !9395, !9396}
!9395 = !DILocation(line: 164, column: 2, scope: !9377)
!9396 = !DILocation(line: 168, column: 2, scope: !9377)
!9397 = !DILocation(line: 170, column: 25, scope: !9377)
!9398 = !DILocation(line: 170, column: 31, scope: !9377)
!9399 = !DILocation(line: 170, column: 29, scope: !9377)
!9400 = !DILocation(line: 170, column: 9, scope: !9377)
!9401 = !DILocation(line: 170, column: 2, scope: !9377)
!9402 = distinct !DISubprogram(name: "strtok_r", scope: !9236, file: !9236, line: 180, type: !9403, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9405)
!9403 = !DISubroutineType(types: !9404)
!9404 = !{!102, !102, !269, !431}
!9405 = !{!9406, !9407, !9408, !9409, !9410}
!9406 = !DILocalVariable(name: "str", arg: 1, scope: !9402, file: !9236, line: 180, type: !102)
!9407 = !DILocalVariable(name: "sep", arg: 2, scope: !9402, file: !9236, line: 180, type: !269)
!9408 = !DILocalVariable(name: "state", arg: 3, scope: !9402, file: !9236, line: 180, type: !431)
!9409 = !DILocalVariable(name: "start", scope: !9402, file: !9236, line: 182, type: !102)
!9410 = !DILocalVariable(name: "end", scope: !9402, file: !9236, line: 182, type: !102)
!9411 = !DILocation(line: 0, scope: !9402)
!9412 = !DILocation(line: 184, column: 10, scope: !9402)
!9413 = !DILocation(line: 184, column: 22, scope: !9402)
!9414 = !DILocation(line: 187, column: 9, scope: !9402)
!9415 = !DILocation(line: 187, column: 16, scope: !9402)
!9416 = !DILocation(line: 187, column: 19, scope: !9402)
!9417 = !DILocation(line: 187, column: 2, scope: !9402)
!9418 = !DILocation(line: 188, column: 8, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9402, file: !9236, line: 187, column: 40)
!9420 = distinct !{!9420, !9417, !9421}
!9421 = !DILocation(line: 189, column: 2, scope: !9402)
!9422 = !DILocation(line: 198, column: 9, scope: !9402)
!9423 = !DILocation(line: 198, column: 18, scope: !9402)
!9424 = !DILocation(line: 198, column: 17, scope: !9402)
!9425 = !DILocation(line: 198, column: 2, scope: !9402)
!9426 = !DILocation(line: 199, column: 6, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9402, file: !9236, line: 198, column: 37)
!9428 = !DILocation(line: 198, column: 14, scope: !9402)
!9429 = distinct !{!9429, !9425, !9430}
!9430 = !DILocation(line: 200, column: 2, scope: !9402)
!9431 = !DILocation(line: 203, column: 8, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9433, file: !9236, line: 202, column: 20)
!9433 = distinct !DILexicalBlock(scope: !9402, file: !9236, line: 202, column: 6)
!9434 = !DILocation(line: 204, column: 16, scope: !9432)
!9435 = !DILocation(line: 205, column: 2, scope: !9432)
!9436 = !DILocation(line: 210, column: 1, scope: !9402)
!9437 = distinct !DISubprogram(name: "strcat", scope: !9236, file: !9236, line: 212, type: !9237, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9438)
!9438 = !{!9439, !9440}
!9439 = !DILocalVariable(name: "dest", arg: 1, scope: !9437, file: !9236, line: 212, type: !9239)
!9440 = !DILocalVariable(name: "src", arg: 2, scope: !9437, file: !9236, line: 212, type: !9240)
!9441 = !DILocation(line: 0, scope: !9437)
!9442 = !DILocation(line: 214, column: 16, scope: !9437)
!9443 = !DILocation(line: 214, column: 14, scope: !9437)
!9444 = !DILocation(line: 214, column: 2, scope: !9437)
!9445 = !DILocation(line: 215, column: 2, scope: !9437)
!9446 = distinct !DISubprogram(name: "strncat", scope: !9236, file: !9236, line: 218, type: !9258, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9447)
!9447 = !{!9448, !9449, !9450, !9451, !9452}
!9448 = !DILocalVariable(name: "dest", arg: 1, scope: !9446, file: !9236, line: 218, type: !9239)
!9449 = !DILocalVariable(name: "src", arg: 2, scope: !9446, file: !9236, line: 218, type: !9240)
!9450 = !DILocalVariable(name: "n", arg: 3, scope: !9446, file: !9236, line: 219, type: !111)
!9451 = !DILocalVariable(name: "orig_dest", scope: !9446, file: !9236, line: 221, type: !102)
!9452 = !DILocalVariable(name: "len", scope: !9446, file: !9236, line: 222, type: !111)
!9453 = !DILocation(line: 0, scope: !9446)
!9454 = !DILocation(line: 222, column: 15, scope: !9446)
!9455 = !DILocation(line: 224, column: 7, scope: !9446)
!9456 = !DILocation(line: 225, column: 14, scope: !9446)
!9457 = !DILocation(line: 225, column: 19, scope: !9446)
!9458 = !DILocation(line: 225, column: 11, scope: !9446)
!9459 = !DILocation(line: 225, column: 23, scope: !9446)
!9460 = !DILocation(line: 225, column: 28, scope: !9446)
!9461 = !DILocation(line: 225, column: 2, scope: !9446)
!9462 = !DILocation(line: 226, column: 17, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9446, file: !9236, line: 225, column: 38)
!9464 = !DILocation(line: 226, column: 8, scope: !9463)
!9465 = !DILocation(line: 226, column: 11, scope: !9463)
!9466 = distinct !{!9466, !9461, !9467}
!9467 = !DILocation(line: 227, column: 2, scope: !9446)
!9468 = !DILocation(line: 228, column: 8, scope: !9446)
!9469 = !DILocation(line: 230, column: 2, scope: !9446)
!9470 = distinct !DISubprogram(name: "memcmp", scope: !9236, file: !9236, line: 239, type: !9471, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9473)
!9471 = !DISubroutineType(types: !9472)
!9472 = !{!105, !13, !13, !111}
!9473 = !{!9474, !9475, !9476, !9477, !9478}
!9474 = !DILocalVariable(name: "m1", arg: 1, scope: !9470, file: !9236, line: 239, type: !13)
!9475 = !DILocalVariable(name: "m2", arg: 2, scope: !9470, file: !9236, line: 239, type: !13)
!9476 = !DILocalVariable(name: "n", arg: 3, scope: !9470, file: !9236, line: 239, type: !111)
!9477 = !DILocalVariable(name: "c1", scope: !9470, file: !9236, line: 241, type: !269)
!9478 = !DILocalVariable(name: "c2", scope: !9470, file: !9236, line: 242, type: !269)
!9479 = !DILocation(line: 0, scope: !9470)
!9480 = !DILocation(line: 244, column: 7, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9470, file: !9236, line: 244, column: 6)
!9482 = !DILocation(line: 244, column: 6, scope: !9470)
!9483 = !DILocation(line: 248, column: 10, scope: !9470)
!9484 = !DILocation(line: 248, column: 14, scope: !9470)
!9485 = !DILocation(line: 248, column: 19, scope: !9470)
!9486 = !DILocation(line: 248, column: 2, scope: !9470)
!9487 = !DILocation(line: 248, column: 23, scope: !9470)
!9488 = !DILocation(line: 248, column: 30, scope: !9470)
!9489 = !DILocation(line: 248, column: 27, scope: !9470)
!9490 = !DILocation(line: 249, column: 5, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9470, file: !9236, line: 248, column: 36)
!9492 = !DILocation(line: 250, column: 5, scope: !9491)
!9493 = distinct !{!9493, !9486, !9494}
!9494 = !DILocation(line: 251, column: 2, scope: !9470)
!9495 = !DILocation(line: 253, column: 9, scope: !9470)
!9496 = !DILocation(line: 253, column: 15, scope: !9470)
!9497 = !DILocation(line: 253, column: 13, scope: !9470)
!9498 = !DILocation(line: 253, column: 2, scope: !9470)
!9499 = !DILocation(line: 254, column: 1, scope: !9470)
!9500 = distinct !DISubprogram(name: "memmove", scope: !9236, file: !9236, line: 263, type: !9501, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9503)
!9501 = !DISubroutineType(types: !9502)
!9502 = !{!104, !104, !13, !111}
!9503 = !{!9504, !9505, !9506, !9507, !9508}
!9504 = !DILocalVariable(name: "d", arg: 1, scope: !9500, file: !9236, line: 263, type: !104)
!9505 = !DILocalVariable(name: "s", arg: 2, scope: !9500, file: !9236, line: 263, type: !13)
!9506 = !DILocalVariable(name: "n", arg: 3, scope: !9500, file: !9236, line: 263, type: !111)
!9507 = !DILocalVariable(name: "dest", scope: !9500, file: !9236, line: 265, type: !102)
!9508 = !DILocalVariable(name: "src", scope: !9500, file: !9236, line: 266, type: !269)
!9509 = !DILocation(line: 0, scope: !9500)
!9510 = !DILocation(line: 268, column: 21, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9500, file: !9236, line: 268, column: 6)
!9512 = !DILocation(line: 268, column: 28, scope: !9511)
!9513 = !DILocation(line: 268, column: 6, scope: !9500)
!9514 = !DILocation(line: 280, column: 12, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9511, file: !9236, line: 278, column: 9)
!9516 = !DILocation(line: 280, column: 3, scope: !9515)
!9517 = !DILocation(line: 275, column: 5, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9519, file: !9236, line: 274, column: 17)
!9519 = distinct !DILexicalBlock(scope: !9511, file: !9236, line: 268, column: 33)
!9520 = !DILocation(line: 276, column: 14, scope: !9518)
!9521 = !DILocation(line: 276, column: 4, scope: !9518)
!9522 = !DILocation(line: 276, column: 12, scope: !9518)
!9523 = !DILocation(line: 274, column: 12, scope: !9519)
!9524 = !DILocation(line: 274, column: 3, scope: !9519)
!9525 = distinct !{!9525, !9524, !9526}
!9526 = !DILocation(line: 277, column: 3, scope: !9519)
!9527 = !DILocation(line: 281, column: 12, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9515, file: !9236, line: 280, column: 17)
!9529 = !DILocation(line: 281, column: 10, scope: !9528)
!9530 = !DILocation(line: 282, column: 8, scope: !9528)
!9531 = !DILocation(line: 283, column: 7, scope: !9528)
!9532 = !DILocation(line: 284, column: 5, scope: !9528)
!9533 = distinct !{!9533, !9516, !9534}
!9534 = !DILocation(line: 285, column: 3, scope: !9515)
!9535 = !DILocation(line: 288, column: 2, scope: !9500)
!9536 = distinct !DISubprogram(name: "memcpy", scope: !9236, file: !9236, line: 298, type: !9537, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9541)
!9537 = !DISubroutineType(types: !9538)
!9538 = !{!104, !9539, !9540, !111}
!9539 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!9540 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9541 = !{!9542, !9543, !9544, !9545, !9546}
!9542 = !DILocalVariable(name: "d", arg: 1, scope: !9536, file: !9236, line: 298, type: !9539)
!9543 = !DILocalVariable(name: "s", arg: 2, scope: !9536, file: !9236, line: 298, type: !9540)
!9544 = !DILocalVariable(name: "n", arg: 3, scope: !9536, file: !9236, line: 298, type: !111)
!9545 = !DILocalVariable(name: "d_byte", scope: !9536, file: !9236, line: 302, type: !1148)
!9546 = !DILocalVariable(name: "s_byte", scope: !9536, file: !9236, line: 303, type: !3030)
!9547 = !DILocation(line: 0, scope: !9536)
!9548 = !DILocation(line: 337, column: 11, scope: !9536)
!9549 = !DILocation(line: 337, column: 2, scope: !9536)
!9550 = !DILocation(line: 338, column: 25, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9536, file: !9236, line: 337, column: 16)
!9552 = !DILocation(line: 338, column: 17, scope: !9551)
!9553 = !DILocation(line: 338, column: 11, scope: !9551)
!9554 = !DILocation(line: 338, column: 15, scope: !9551)
!9555 = !DILocation(line: 339, column: 4, scope: !9551)
!9556 = distinct !{!9556, !9549, !9557}
!9557 = !DILocation(line: 340, column: 2, scope: !9536)
!9558 = !DILocation(line: 342, column: 2, scope: !9536)
!9559 = distinct !DISubprogram(name: "memset", scope: !9236, file: !9236, line: 352, type: !9560, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9562)
!9560 = !DISubroutineType(types: !9561)
!9561 = !{!104, !104, !105, !111}
!9562 = !{!9563, !9564, !9565, !9566, !9567}
!9563 = !DILocalVariable(name: "buf", arg: 1, scope: !9559, file: !9236, line: 352, type: !104)
!9564 = !DILocalVariable(name: "c", arg: 2, scope: !9559, file: !9236, line: 352, type: !105)
!9565 = !DILocalVariable(name: "n", arg: 3, scope: !9559, file: !9236, line: 352, type: !111)
!9566 = !DILocalVariable(name: "d_byte", scope: !9559, file: !9236, line: 356, type: !1148)
!9567 = !DILocalVariable(name: "c_byte", scope: !9559, file: !9236, line: 357, type: !170)
!9568 = !DILocation(line: 0, scope: !9559)
!9569 = !DILocation(line: 357, column: 25, scope: !9559)
!9570 = !DILocation(line: 389, column: 11, scope: !9559)
!9571 = !DILocation(line: 389, column: 2, scope: !9559)
!9572 = !DILocation(line: 390, column: 11, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9559, file: !9236, line: 389, column: 16)
!9574 = !DILocation(line: 390, column: 15, scope: !9573)
!9575 = !DILocation(line: 391, column: 4, scope: !9573)
!9576 = distinct !{!9576, !9571, !9577}
!9577 = !DILocation(line: 392, column: 2, scope: !9559)
!9578 = !DILocation(line: 394, column: 2, scope: !9559)
!9579 = distinct !DISubprogram(name: "memchr", scope: !9236, file: !9236, line: 404, type: !9580, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !9582)
!9580 = !DISubroutineType(types: !9581)
!9581 = !{!104, !13, !105, !111}
!9582 = !{!9583, !9584, !9585, !9586}
!9583 = !DILocalVariable(name: "s", arg: 1, scope: !9579, file: !9236, line: 404, type: !13)
!9584 = !DILocalVariable(name: "c", arg: 2, scope: !9579, file: !9236, line: 404, type: !105)
!9585 = !DILocalVariable(name: "n", arg: 3, scope: !9579, file: !9236, line: 404, type: !111)
!9586 = !DILocalVariable(name: "p", scope: !9587, file: !9236, line: 407, type: !3030)
!9587 = distinct !DILexicalBlock(scope: !9588, file: !9236, line: 406, column: 14)
!9588 = distinct !DILexicalBlock(scope: !9579, file: !9236, line: 406, column: 6)
!9589 = !DILocation(line: 0, scope: !9579)
!9590 = !DILocation(line: 406, column: 8, scope: !9588)
!9591 = !DILocation(line: 406, column: 6, scope: !9579)
!9592 = !DILocation(line: 409, column: 3, scope: !9587)
!9593 = !DILocation(line: 0, scope: !9587)
!9594 = !DILocation(line: 410, column: 8, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9596, file: !9236, line: 410, column: 8)
!9596 = distinct !DILexicalBlock(scope: !9587, file: !9236, line: 409, column: 6)
!9597 = !DILocation(line: 410, column: 13, scope: !9595)
!9598 = !DILocation(line: 410, column: 8, scope: !9596)
!9599 = distinct !{!9599, !9592, !9600}
!9600 = !DILocation(line: 414, column: 20, scope: !9587)
!9601 = !DILocation(line: 417, column: 2, scope: !9579)
!9602 = !DILocation(line: 418, column: 1, scope: !9579)
!9603 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !717, file: !717, line: 23, type: !4967, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9604)
!9604 = !{!9605}
!9605 = !DILocalVariable(name: "hook", arg: 1, scope: !9603, file: !717, line: 23, type: !447)
!9606 = !DILocation(line: 0, scope: !9603)
!9607 = !DILocation(line: 25, column: 15, scope: !9603)
!9608 = !DILocation(line: 26, column: 1, scope: !9603)
!9609 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !717, file: !717, line: 14, type: !448, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9610)
!9610 = !{!9611}
!9611 = !DILocalVariable(name: "c", arg: 1, scope: !9609, file: !717, line: 14, type: !105)
!9612 = !DILocation(line: 0, scope: !9609)
!9613 = !DILocation(line: 18, column: 2, scope: !9609)
!9614 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !717, file: !717, line: 28, type: !9615, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9617)
!9615 = !DISubroutineType(types: !9616)
!9616 = !{!105, !105, !713}
!9617 = !{!9618, !9619}
!9618 = !DILocalVariable(name: "c", arg: 1, scope: !9614, file: !717, line: 28, type: !105)
!9619 = !DILocalVariable(name: "stream", arg: 2, scope: !9614, file: !717, line: 28, type: !713)
!9620 = !DILocation(line: 0, scope: !9614)
!9621 = !DILocation(line: 30, column: 27, scope: !9614)
!9622 = !DILocation(line: 30, column: 50, scope: !9614)
!9623 = !DILocation(line: 30, column: 9, scope: !9614)
!9624 = !DILocation(line: 30, column: 2, scope: !9614)
!9625 = distinct !DISubprogram(name: "fputc", scope: !717, file: !717, line: 41, type: !9615, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9626)
!9626 = !{!9627, !9628}
!9627 = !DILocalVariable(name: "c", arg: 1, scope: !9625, file: !717, line: 41, type: !105)
!9628 = !DILocalVariable(name: "stream", arg: 2, scope: !9625, file: !717, line: 41, type: !713)
!9629 = !DILocation(line: 0, scope: !9625)
!9630 = !DILocation(line: 43, column: 9, scope: !9625)
!9631 = !DILocation(line: 43, column: 2, scope: !9625)
!9632 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9633, file: !9633, line: 72, type: !9615, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9634)
!9633 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!9634 = !{!9635, !9636}
!9635 = !DILocalVariable(name: "c", arg: 1, scope: !9632, file: !9633, line: 72, type: !105)
!9636 = !DILocalVariable(name: "stream", arg: 2, scope: !9632, file: !9633, line: 72, type: !713)
!9637 = !DILocation(line: 0, scope: !9632)
!9638 = !DILocation(line: 81, column: 2, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9632, file: !9633, line: 81, column: 2)
!9640 = !{i64 2155131639}
!9641 = !DILocation(line: 82, column: 9, scope: !9632)
!9642 = !DILocation(line: 82, column: 2, scope: !9632)
!9643 = distinct !DISubprogram(name: "fputs", scope: !717, file: !717, line: 46, type: !9644, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9647)
!9644 = !DISubroutineType(types: !9645)
!9645 = !{!105, !9240, !9646}
!9646 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !713)
!9647 = !{!9648, !9649, !9650, !9651}
!9648 = !DILocalVariable(name: "s", arg: 1, scope: !9643, file: !717, line: 46, type: !9240)
!9649 = !DILocalVariable(name: "stream", arg: 2, scope: !9643, file: !717, line: 46, type: !9646)
!9650 = !DILocalVariable(name: "len", scope: !9643, file: !717, line: 48, type: !105)
!9651 = !DILocalVariable(name: "ret", scope: !9643, file: !717, line: 49, type: !105)
!9652 = !DILocation(line: 0, scope: !9643)
!9653 = !DILocation(line: 48, column: 12, scope: !9643)
!9654 = !DILocation(line: 51, column: 8, scope: !9643)
!9655 = !DILocation(line: 53, column: 13, scope: !9643)
!9656 = !DILocation(line: 53, column: 9, scope: !9643)
!9657 = !DILocation(line: 53, column: 2, scope: !9643)
!9658 = distinct !DISubprogram(name: "fwrite", scope: !717, file: !717, line: 99, type: !9659, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9661)
!9659 = !DISubroutineType(types: !9660)
!9660 = !{!111, !9540, !111, !111, !9646}
!9661 = !{!9662, !9663, !9664, !9665}
!9662 = !DILocalVariable(name: "ptr", arg: 1, scope: !9658, file: !717, line: 99, type: !9540)
!9663 = !DILocalVariable(name: "size", arg: 2, scope: !9658, file: !717, line: 99, type: !111)
!9664 = !DILocalVariable(name: "nitems", arg: 3, scope: !9658, file: !717, line: 99, type: !111)
!9665 = !DILocalVariable(name: "stream", arg: 4, scope: !9658, file: !717, line: 100, type: !9646)
!9666 = !DILocation(line: 0, scope: !9658)
!9667 = !DILocation(line: 102, column: 9, scope: !9658)
!9668 = !DILocation(line: 102, column: 2, scope: !9658)
!9669 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9633, file: !9633, line: 96, type: !9659, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9670)
!9670 = !{!9671, !9672, !9673, !9674}
!9671 = !DILocalVariable(name: "ptr", arg: 1, scope: !9669, file: !9633, line: 96, type: !9540)
!9672 = !DILocalVariable(name: "size", arg: 2, scope: !9669, file: !9633, line: 96, type: !111)
!9673 = !DILocalVariable(name: "nitems", arg: 3, scope: !9669, file: !9633, line: 96, type: !111)
!9674 = !DILocalVariable(name: "stream", arg: 4, scope: !9669, file: !9633, line: 96, type: !9646)
!9675 = !DILocation(line: 0, scope: !9669)
!9676 = !DILocation(line: 107, column: 2, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9669, file: !9633, line: 107, column: 2)
!9678 = !{i64 2155131743}
!9679 = !DILocation(line: 108, column: 9, scope: !9669)
!9680 = !DILocation(line: 108, column: 2, scope: !9669)
!9681 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !717, file: !717, line: 56, type: !9659, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9682)
!9682 = !{!9683, !9684, !9685, !9686, !9687, !9688, !9689, !9690}
!9683 = !DILocalVariable(name: "ptr", arg: 1, scope: !9681, file: !717, line: 56, type: !9540)
!9684 = !DILocalVariable(name: "size", arg: 2, scope: !9681, file: !717, line: 56, type: !111)
!9685 = !DILocalVariable(name: "nitems", arg: 3, scope: !9681, file: !717, line: 57, type: !111)
!9686 = !DILocalVariable(name: "stream", arg: 4, scope: !9681, file: !717, line: 57, type: !9646)
!9687 = !DILocalVariable(name: "i", scope: !9681, file: !717, line: 59, type: !111)
!9688 = !DILocalVariable(name: "j", scope: !9681, file: !717, line: 60, type: !111)
!9689 = !DILocalVariable(name: "p", scope: !9681, file: !717, line: 61, type: !3030)
!9690 = !DILabel(scope: !9681, name: "done", file: !717, line: 82)
!9691 = !DILocation(line: 0, scope: !9681)
!9692 = !DILocation(line: 63, column: 14, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9681, file: !717, line: 63, column: 6)
!9694 = !DILocation(line: 63, column: 24, scope: !9693)
!9695 = !DILocation(line: 72, column: 3, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9681, file: !717, line: 70, column: 5)
!9697 = !DILocation(line: 0, scope: !9696)
!9698 = !DILocation(line: 73, column: 8, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9700, file: !717, line: 73, column: 8)
!9700 = distinct !DILexicalBlock(scope: !9696, file: !717, line: 72, column: 6)
!9701 = !DILocation(line: 73, column: 29, scope: !9699)
!9702 = !DILocation(line: 73, column: 27, scope: !9699)
!9703 = !DILocation(line: 73, column: 21, scope: !9699)
!9704 = !DILocation(line: 73, column: 33, scope: !9699)
!9705 = !DILocation(line: 73, column: 8, scope: !9700)
!9706 = !DILocation(line: 76, column: 5, scope: !9700)
!9707 = !DILocation(line: 77, column: 14, scope: !9696)
!9708 = !DILocation(line: 77, column: 3, scope: !9700)
!9709 = distinct !{!9709, !9695, !9710}
!9710 = !DILocation(line: 77, column: 17, scope: !9696)
!9711 = !DILocation(line: 79, column: 4, scope: !9696)
!9712 = !DILocation(line: 80, column: 13, scope: !9681)
!9713 = !DILocation(line: 80, column: 2, scope: !9696)
!9714 = distinct !{!9714, !9715, !9716}
!9715 = !DILocation(line: 70, column: 2, scope: !9681)
!9716 = !DILocation(line: 80, column: 16, scope: !9681)
!9717 = !DILocation(line: 82, column: 1, scope: !9681)
!9718 = !DILocation(line: 83, column: 17, scope: !9681)
!9719 = !DILocation(line: 83, column: 2, scope: !9681)
!9720 = !DILocation(line: 84, column: 1, scope: !9681)
!9721 = distinct !DISubprogram(name: "puts", scope: !717, file: !717, line: 106, type: !9722, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9724)
!9722 = !DISubroutineType(types: !9723)
!9723 = !{!105, !269}
!9724 = !{!9725}
!9725 = !DILocalVariable(name: "s", arg: 1, scope: !9721, file: !717, line: 106, type: !269)
!9726 = !DILocation(line: 0, scope: !9721)
!9727 = !DILocation(line: 108, column: 6, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9721, file: !717, line: 108, column: 6)
!9729 = !DILocation(line: 108, column: 23, scope: !9728)
!9730 = !DILocation(line: 108, column: 6, scope: !9721)
!9731 = !DILocation(line: 112, column: 9, scope: !9721)
!9732 = !DILocation(line: 112, column: 29, scope: !9721)
!9733 = !DILocation(line: 112, column: 2, scope: !9721)
!9734 = !DILocation(line: 113, column: 1, scope: !9721)
!9735 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !858, file: !858, line: 368, type: !909, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9736)
!9736 = !{!9737}
!9737 = !DILocalVariable(name: "dev", arg: 1, scope: !9735, file: !858, line: 368, type: !885)
!9738 = !DILocation(line: 0, scope: !9735)
!9739 = !DILocation(line: 370, column: 2, scope: !9735)
!9740 = !DILocation(line: 371, column: 1, scope: !9735)
!9741 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !858, file: !858, line: 243, type: !9742, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9744)
!9742 = !DISubroutineType(types: !9743)
!9743 = !{null, !105, !105, !885}
!9744 = !{!9745, !9746, !9747, !9748, !9750}
!9745 = !DILocalVariable(name: "min", arg: 1, scope: !9741, file: !858, line: 243, type: !105)
!9746 = !DILocalVariable(name: "max", arg: 2, scope: !9741, file: !858, line: 243, type: !105)
!9747 = !DILocalVariable(name: "dev", arg: 3, scope: !9741, file: !858, line: 243, type: !885)
!9748 = !DILocalVariable(name: "data", scope: !9741, file: !858, line: 245, type: !9749)
!9749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!9750 = !DILocalVariable(name: "line", scope: !9741, file: !858, line: 246, type: !105)
!9751 = !DILocation(line: 0, scope: !9741)
!9752 = !DILocation(line: 245, column: 38, scope: !9741)
!9753 = !DILocation(line: 249, column: 24, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9755, file: !858, line: 249, column: 2)
!9755 = distinct !DILexicalBlock(scope: !9741, file: !858, line: 249, column: 2)
!9756 = !DILocation(line: 249, column: 2, scope: !9755)
!9757 = !DILocation(line: 251, column: 7, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9759, file: !858, line: 251, column: 7)
!9759 = distinct !DILexicalBlock(scope: !9754, file: !858, line: 249, column: 39)
!9760 = !DILocation(line: 251, column: 7, scope: !9759)
!9761 = !DILocation(line: 253, column: 4, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9758, file: !858, line: 251, column: 36)
!9763 = !DILocation(line: 256, column: 24, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9762, file: !858, line: 256, column: 8)
!9765 = !DILocation(line: 256, column: 9, scope: !9764)
!9766 = !DILocation(line: 256, column: 8, scope: !9762)
!9767 = !DILocation(line: 260, column: 43, scope: !9762)
!9768 = !DILocation(line: 260, column: 4, scope: !9762)
!9769 = !DILocation(line: 261, column: 3, scope: !9762)
!9770 = !DILocation(line: 249, column: 35, scope: !9754)
!9771 = distinct !{!9771, !9756, !9772}
!9772 = !DILocation(line: 262, column: 2, scope: !9755)
!9773 = !DILocation(line: 263, column: 1, scope: !9741)
!9774 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !858, file: !858, line: 158, type: !448, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9775)
!9775 = !{!9776}
!9776 = !DILocalVariable(name: "line", arg: 1, scope: !9774, file: !858, line: 158, type: !105)
!9777 = !DILocation(line: 0, scope: !9774)
!9778 = !DILocation(line: 170, column: 38, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9780, file: !858, line: 160, column: 17)
!9780 = distinct !DILexicalBlock(scope: !9774, file: !858, line: 160, column: 6)
!9781 = !DILocation(line: 170, column: 10, scope: !9779)
!9782 = !DILocation(line: 176, column: 1, scope: !9774)
!9783 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !858, file: !858, line: 183, type: !9784, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9786)
!9784 = !DISubroutineType(types: !9785)
!9785 = !{null, !105}
!9786 = !{!9787}
!9787 = !DILocalVariable(name: "line", arg: 1, scope: !9783, file: !858, line: 183, type: !105)
!9788 = !DILocation(line: 0, scope: !9783)
!9789 = !DILocation(line: 195, column: 28, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9791, file: !858, line: 185, column: 17)
!9791 = distinct !DILexicalBlock(scope: !9783, file: !858, line: 185, column: 6)
!9792 = !DILocation(line: 195, column: 3, scope: !9790)
!9793 = !DILocation(line: 200, column: 1, scope: !9783)
!9794 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9795, file: !9795, line: 910, type: !7945, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9796)
!9795 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9796 = !{!9797}
!9797 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9794, file: !9795, line: 910, type: !113)
!9798 = !DILocation(line: 0, scope: !9794)
!9799 = !DILocation(line: 912, column: 3, scope: !9794)
!9800 = !DILocation(line: 913, column: 1, scope: !9794)
!9801 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9795, file: !9795, line: 834, type: !9131, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9802)
!9802 = !{!9803}
!9803 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9801, file: !9795, line: 834, type: !113)
!9804 = !DILocation(line: 0, scope: !9801)
!9805 = !DILocation(line: 836, column: 11, scope: !9801)
!9806 = !DILocation(line: 836, column: 40, scope: !9801)
!9807 = !DILocation(line: 836, column: 3, scope: !9801)
!9808 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !858, file: !858, line: 304, type: !909, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9809)
!9809 = !{!9810}
!9810 = !DILocalVariable(name: "dev", arg: 1, scope: !9808, file: !858, line: 304, type: !885)
!9811 = !DILocation(line: 0, scope: !9808)
!9812 = !DILocation(line: 306, column: 2, scope: !9808)
!9813 = !DILocation(line: 307, column: 1, scope: !9808)
!9814 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !858, file: !858, line: 299, type: !909, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9815)
!9815 = !{!9816}
!9816 = !DILocalVariable(name: "dev", arg: 1, scope: !9814, file: !858, line: 299, type: !885)
!9817 = !DILocation(line: 0, scope: !9814)
!9818 = !DILocation(line: 301, column: 2, scope: !9814)
!9819 = !DILocation(line: 302, column: 1, scope: !9814)
!9820 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !858, file: !858, line: 294, type: !909, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9821)
!9821 = !{!9822}
!9822 = !DILocalVariable(name: "dev", arg: 1, scope: !9820, file: !858, line: 294, type: !885)
!9823 = !DILocation(line: 0, scope: !9820)
!9824 = !DILocation(line: 296, column: 2, scope: !9820)
!9825 = !DILocation(line: 297, column: 1, scope: !9820)
!9826 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !858, file: !858, line: 397, type: !909, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9827)
!9827 = !{!9828}
!9828 = !DILocalVariable(name: "dev", arg: 1, scope: !9826, file: !858, line: 397, type: !885)
!9829 = !DILocation(line: 0, scope: !9826)
!9830 = !DILocation(line: 399, column: 2, scope: !9826)
!9831 = !DILocation(line: 400, column: 1, scope: !9826)
!9832 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !858, file: !858, line: 392, type: !909, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9833)
!9833 = !{!9834}
!9834 = !DILocalVariable(name: "dev", arg: 1, scope: !9832, file: !858, line: 392, type: !885)
!9835 = !DILocation(line: 0, scope: !9832)
!9836 = !DILocation(line: 394, column: 2, scope: !9832)
!9837 = !DILocation(line: 395, column: 1, scope: !9832)
!9838 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !858, file: !858, line: 289, type: !909, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9839)
!9839 = !{!9840}
!9840 = !DILocalVariable(name: "dev", arg: 1, scope: !9838, file: !858, line: 289, type: !885)
!9841 = !DILocation(line: 0, scope: !9838)
!9842 = !DILocation(line: 291, column: 2, scope: !9838)
!9843 = !DILocation(line: 292, column: 1, scope: !9838)
!9844 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !858, file: !858, line: 387, type: !909, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9845)
!9845 = !{!9846}
!9846 = !DILocalVariable(name: "dev", arg: 1, scope: !9844, file: !858, line: 387, type: !885)
!9847 = !DILocation(line: 0, scope: !9844)
!9848 = !DILocation(line: 389, column: 2, scope: !9844)
!9849 = !DILocation(line: 390, column: 1, scope: !9844)
!9850 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !858, file: !858, line: 382, type: !909, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9851)
!9851 = !{!9852}
!9852 = !DILocalVariable(name: "dev", arg: 1, scope: !9850, file: !858, line: 382, type: !885)
!9853 = !DILocation(line: 0, scope: !9850)
!9854 = !DILocation(line: 384, column: 2, scope: !9850)
!9855 = !DILocation(line: 385, column: 1, scope: !9850)
!9856 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !858, file: !858, line: 373, type: !909, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9857)
!9857 = !{!9858}
!9858 = !DILocalVariable(name: "dev", arg: 1, scope: !9856, file: !858, line: 373, type: !885)
!9859 = !DILocation(line: 0, scope: !9856)
!9860 = !DILocation(line: 375, column: 2, scope: !9856)
!9861 = !DILocation(line: 376, column: 1, scope: !9856)
!9862 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !858, file: !858, line: 284, type: !909, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9863)
!9863 = !{!9864}
!9864 = !DILocalVariable(name: "dev", arg: 1, scope: !9862, file: !858, line: 284, type: !885)
!9865 = !DILocation(line: 0, scope: !9862)
!9866 = !DILocation(line: 286, column: 2, scope: !9862)
!9867 = !DILocation(line: 287, column: 1, scope: !9862)
!9868 = distinct !DISubprogram(name: "stm32_exti_init", scope: !858, file: !858, line: 416, type: !883, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9869)
!9869 = !{!9870}
!9870 = !DILocalVariable(name: "dev", arg: 1, scope: !9868, file: !858, line: 416, type: !885)
!9871 = !DILocation(line: 0, scope: !9868)
!9872 = !DILocation(line: 418, column: 2, scope: !9868)
!9873 = !DILocation(line: 420, column: 2, scope: !9868)
!9874 = !DILocation(line: 0, scope: !908)
!9875 = !DILocation(line: 493, column: 2, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !908, file: !858, line: 493, column: 2)
!9877 = !DILocation(line: 497, column: 2, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !908, file: !858, line: 497, column: 2)
!9879 = !DILocation(line: 507, column: 2, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !908, file: !858, line: 507, column: 2)
!9881 = !DILocation(line: 512, column: 2, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !908, file: !858, line: 512, column: 2)
!9883 = !DILocation(line: 516, column: 2, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !908, file: !858, line: 516, column: 2)
!9885 = !DILocation(line: 523, column: 2, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !908, file: !858, line: 523, column: 2)
!9887 = !DILocation(line: 527, column: 2, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !908, file: !858, line: 527, column: 2)
!9889 = !DILocation(line: 581, column: 2, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !908, file: !858, line: 581, column: 2)
!9891 = !DILocation(line: 586, column: 2, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !908, file: !858, line: 586, column: 2)
!9893 = !DILocation(line: 591, column: 2, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !908, file: !858, line: 591, column: 2)
!9895 = !DILocation(line: 595, column: 2, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !908, file: !858, line: 595, column: 2)
!9897 = !DILocation(line: 607, column: 1, scope: !908)
!9898 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !858, file: !858, line: 112, type: !9784, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9899)
!9899 = !{!9900, !9901}
!9900 = !DILocalVariable(name: "line", arg: 1, scope: !9898, file: !858, line: 112, type: !105)
!9901 = !DILocalVariable(name: "irqnum", scope: !9898, file: !858, line: 114, type: !105)
!9902 = !DILocation(line: 0, scope: !9898)
!9903 = !DILocation(line: 122, column: 13, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9898, file: !858, line: 122, column: 6)
!9905 = !DILocation(line: 122, column: 6, scope: !9898)
!9906 = !DILocation(line: 123, column: 3, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9908, file: !858, line: 123, column: 3)
!9908 = distinct !DILexicalBlock(scope: !9909, file: !858, line: 123, column: 3)
!9909 = distinct !DILexicalBlock(scope: !9910, file: !858, line: 123, column: 3)
!9910 = distinct !DILexicalBlock(scope: !9904, file: !858, line: 122, column: 22)
!9911 = !DILocation(line: 121, column: 11, scope: !9898)
!9912 = !DILocation(line: 130, column: 26, scope: !9898)
!9913 = !DILocation(line: 130, column: 2, scope: !9898)
!9914 = !DILocation(line: 134, column: 2, scope: !9898)
!9915 = !DILocation(line: 135, column: 1, scope: !9898)
!9916 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9795, file: !9795, line: 268, type: !7945, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9917)
!9917 = !{!9918}
!9918 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9916, file: !9795, line: 268, type: !113)
!9919 = !DILocation(line: 0, scope: !9916)
!9920 = !DILocation(line: 270, column: 3, scope: !9916)
!9921 = !DILocation(line: 271, column: 1, scope: !9916)
!9922 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !858, file: !858, line: 137, type: !9784, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9923)
!9923 = !{!9924}
!9924 = !DILocalVariable(name: "line", arg: 1, scope: !9922, file: !858, line: 137, type: !105)
!9925 = !DILocation(line: 0, scope: !9922)
!9926 = !DILocation(line: 141, column: 11, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9922, file: !858, line: 141, column: 6)
!9928 = !DILocation(line: 141, column: 6, scope: !9922)
!9929 = !DILocation(line: 145, column: 28, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9927, file: !858, line: 141, column: 17)
!9931 = !DILocation(line: 145, column: 3, scope: !9930)
!9932 = !DILocation(line: 147, column: 2, scope: !9930)
!9933 = !DILocation(line: 151, column: 1, scope: !9922)
!9934 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9795, file: !9795, line: 309, type: !7945, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9935)
!9935 = !{!9936}
!9936 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9934, file: !9795, line: 309, type: !113)
!9937 = !DILocation(line: 0, scope: !9934)
!9938 = !DILocation(line: 311, column: 3, scope: !9934)
!9939 = !DILocation(line: 312, column: 1, scope: !9934)
!9940 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !858, file: !858, line: 202, type: !9941, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9943)
!9941 = !DISubroutineType(types: !9942)
!9942 = !{null, !105, !105}
!9943 = !{!9944, !9945}
!9944 = !DILocalVariable(name: "line", arg: 1, scope: !9940, file: !858, line: 202, type: !105)
!9945 = !DILocalVariable(name: "trigger", arg: 2, scope: !9940, file: !858, line: 202, type: !105)
!9946 = !DILocation(line: 0, scope: !9940)
!9947 = !DILocation(line: 211, column: 2, scope: !9940)
!9948 = !DILocation(line: 213, column: 36, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9940, file: !858, line: 211, column: 19)
!9950 = !DILocation(line: 213, column: 3, scope: !9949)
!9951 = !DILocation(line: 214, column: 3, scope: !9949)
!9952 = !DILocation(line: 215, column: 3, scope: !9949)
!9953 = !DILocation(line: 217, column: 35, scope: !9949)
!9954 = !DILocation(line: 217, column: 3, scope: !9949)
!9955 = !DILocation(line: 218, column: 3, scope: !9949)
!9956 = !DILocation(line: 219, column: 3, scope: !9949)
!9957 = !DILocation(line: 221, column: 36, scope: !9949)
!9958 = !DILocation(line: 221, column: 3, scope: !9949)
!9959 = !DILocation(line: 222, column: 3, scope: !9949)
!9960 = !DILocation(line: 223, column: 3, scope: !9949)
!9961 = !DILocation(line: 225, column: 35, scope: !9949)
!9962 = !DILocation(line: 225, column: 3, scope: !9949)
!9963 = !DILocation(line: 226, column: 3, scope: !9949)
!9964 = !DILocation(line: 227, column: 3, scope: !9949)
!9965 = !DILocation(line: 232, column: 1, scope: !9940)
!9966 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9795, file: !9795, line: 573, type: !7945, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9967)
!9967 = !{!9968}
!9968 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9966, file: !9795, line: 573, type: !113)
!9969 = !DILocation(line: 0, scope: !9966)
!9970 = !DILocation(line: 575, column: 3, scope: !9966)
!9971 = !DILocation(line: 577, column: 1, scope: !9966)
!9972 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9795, file: !9795, line: 703, type: !7945, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9973)
!9973 = !{!9974}
!9974 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9972, file: !9795, line: 703, type: !113)
!9975 = !DILocation(line: 0, scope: !9972)
!9976 = !DILocation(line: 705, column: 3, scope: !9972)
!9977 = !DILocation(line: 706, column: 1, scope: !9972)
!9978 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9795, file: !9795, line: 529, type: !7945, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9979)
!9979 = !{!9980}
!9980 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9978, file: !9795, line: 529, type: !113)
!9981 = !DILocation(line: 0, scope: !9978)
!9982 = !DILocation(line: 531, column: 3, scope: !9978)
!9983 = !DILocation(line: 533, column: 1, scope: !9978)
!9984 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9795, file: !9795, line: 661, type: !7945, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9985)
!9985 = !{!9986}
!9986 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9984, file: !9795, line: 661, type: !113)
!9987 = !DILocation(line: 0, scope: !9984)
!9988 = !DILocation(line: 663, column: 3, scope: !9984)
!9989 = !DILocation(line: 664, column: 1, scope: !9984)
!9990 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !858, file: !858, line: 433, type: !9991, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9993)
!9991 = !DISubroutineType(types: !9992)
!9992 = !{!105, !105, !896, !104}
!9993 = !{!9994, !9995, !9996, !9997, !9999}
!9994 = !DILocalVariable(name: "line", arg: 1, scope: !9990, file: !858, line: 433, type: !105)
!9995 = !DILocalVariable(name: "cb", arg: 2, scope: !9990, file: !858, line: 433, type: !896)
!9996 = !DILocalVariable(name: "arg", arg: 3, scope: !9990, file: !858, line: 433, type: !104)
!9997 = !DILocalVariable(name: "dev", scope: !9990, file: !858, line: 435, type: !9998)
!9998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !885)
!9999 = !DILocalVariable(name: "data", scope: !9990, file: !858, line: 436, type: !9749)
!10000 = !DILocation(line: 0, scope: !9990)
!10001 = !DILocation(line: 438, column: 21, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9990, file: !858, line: 438, column: 6)
!10003 = !DILocation(line: 438, column: 6, scope: !10002)
!10004 = !DILocation(line: 438, column: 6, scope: !9990)
!10005 = !DILocation(line: 442, column: 20, scope: !9990)
!10006 = !DILocation(line: 443, column: 17, scope: !9990)
!10007 = !DILocation(line: 443, column: 22, scope: !9990)
!10008 = !DILocation(line: 445, column: 2, scope: !9990)
!10009 = !DILocation(line: 446, column: 1, scope: !9990)
!10010 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !858, file: !858, line: 448, type: !9784, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !10011)
!10011 = !{!10012, !10013, !10014}
!10012 = !DILocalVariable(name: "line", arg: 1, scope: !10010, file: !858, line: 448, type: !105)
!10013 = !DILocalVariable(name: "dev", scope: !10010, file: !858, line: 450, type: !9998)
!10014 = !DILocalVariable(name: "data", scope: !10010, file: !858, line: 451, type: !9749)
!10015 = !DILocation(line: 0, scope: !10010)
!10016 = !DILocation(line: 453, column: 17, scope: !10010)
!10017 = !DILocation(line: 453, column: 20, scope: !10010)
!10018 = !DILocation(line: 454, column: 17, scope: !10010)
!10019 = !DILocation(line: 454, column: 22, scope: !10010)
!10020 = !DILocation(line: 455, column: 1, scope: !10010)
!10021 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1047, file: !1047, line: 183, type: !1085, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10022)
!10022 = !{!10023, !10024, !10025, !10026, !10027}
!10023 = !DILocalVariable(name: "dev", arg: 1, scope: !10021, file: !1047, line: 183, type: !1076)
!10024 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10021, file: !1047, line: 184, type: !1087)
!10025 = !DILocalVariable(name: "pclken", scope: !10021, file: !1047, line: 186, type: !1037)
!10026 = !DILocalVariable(name: "reg", scope: !10021, file: !1047, line: 187, type: !1627)
!10027 = !DILocalVariable(name: "reg_val", scope: !10021, file: !1047, line: 188, type: !113)
!10028 = !DILocation(line: 0, scope: !10021)
!10029 = !DILocation(line: 192, column: 6, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10021, file: !1047, line: 192, column: 6)
!10031 = !DILocation(line: 192, column: 6, scope: !10021)
!10032 = !DILocation(line: 197, column: 52, scope: !10021)
!10033 = !DILocation(line: 197, column: 8, scope: !10021)
!10034 = !DILocation(line: 198, column: 12, scope: !10021)
!10035 = !DILocation(line: 199, column: 21, scope: !10021)
!10036 = !DILocation(line: 199, column: 10, scope: !10021)
!10037 = !DILocation(line: 200, column: 7, scope: !10021)
!10038 = !DILocation(line: 202, column: 2, scope: !10021)
!10039 = !DILocation(line: 203, column: 1, scope: !10021)
!10040 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1047, file: !1047, line: 205, type: !1085, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10041)
!10041 = !{!10042, !10043, !10044, !10045, !10046}
!10042 = !DILocalVariable(name: "dev", arg: 1, scope: !10040, file: !1047, line: 205, type: !1076)
!10043 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10040, file: !1047, line: 206, type: !1087)
!10044 = !DILocalVariable(name: "pclken", scope: !10040, file: !1047, line: 208, type: !1037)
!10045 = !DILocalVariable(name: "reg", scope: !10040, file: !1047, line: 209, type: !1627)
!10046 = !DILocalVariable(name: "reg_val", scope: !10040, file: !1047, line: 210, type: !113)
!10047 = !DILocation(line: 0, scope: !10040)
!10048 = !DILocation(line: 214, column: 6, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10040, file: !1047, line: 214, column: 6)
!10050 = !DILocation(line: 214, column: 6, scope: !10040)
!10051 = !DILocation(line: 219, column: 52, scope: !10040)
!10052 = !DILocation(line: 219, column: 8, scope: !10040)
!10053 = !DILocation(line: 220, column: 12, scope: !10040)
!10054 = !DILocation(line: 221, column: 22, scope: !10040)
!10055 = !DILocation(line: 221, column: 13, scope: !10040)
!10056 = !DILocation(line: 221, column: 10, scope: !10040)
!10057 = !DILocation(line: 222, column: 7, scope: !10040)
!10058 = !DILocation(line: 224, column: 2, scope: !10040)
!10059 = !DILocation(line: 225, column: 1, scope: !10040)
!10060 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1047, file: !1047, line: 262, type: !1101, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10061)
!10061 = !{!10062, !10063, !10064, !10065, !10066, !10067, !10068, !10069}
!10062 = !DILocalVariable(name: "clock", arg: 1, scope: !10060, file: !1047, line: 262, type: !1076)
!10063 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10060, file: !1047, line: 263, type: !1087)
!10064 = !DILocalVariable(name: "rate", arg: 3, scope: !10060, file: !1047, line: 264, type: !1043)
!10065 = !DILocalVariable(name: "pclken", scope: !10060, file: !1047, line: 266, type: !1037)
!10066 = !DILocalVariable(name: "ahb_clock", scope: !10060, file: !1047, line: 273, type: !113)
!10067 = !DILocalVariable(name: "apb1_clock", scope: !10060, file: !1047, line: 274, type: !113)
!10068 = !DILocalVariable(name: "apb2_clock", scope: !10060, file: !1047, line: 276, type: !113)
!10069 = !DILocalVariable(name: "ahb3_clock", scope: !10060, file: !1047, line: 286, type: !113)
!10070 = !DILocation(line: 0, scope: !10060)
!10071 = !DILocation(line: 273, column: 23, scope: !10060)
!10072 = !DILocation(line: 299, column: 18, scope: !10060)
!10073 = !DILocation(line: 299, column: 2, scope: !10060)
!10074 = !DILocation(line: 274, column: 24, scope: !10060)
!10075 = !DILocation(line: 319, column: 3, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10060, file: !1047, line: 299, column: 23)
!10077 = !DILocation(line: 276, column: 24, scope: !10060)
!10078 = !DILocation(line: 323, column: 3, scope: !10076)
!10079 = !DILocation(line: 346, column: 33, scope: !10076)
!10080 = !DILocation(line: 346, column: 11, scope: !10076)
!10081 = !DILocation(line: 350, column: 3, scope: !10076)
!10082 = !DILocation(line: 354, column: 33, scope: !10076)
!10083 = !DILocation(line: 354, column: 11, scope: !10076)
!10084 = !DILocation(line: 358, column: 3, scope: !10076)
!10085 = !DILocation(line: 374, column: 3, scope: !10076)
!10086 = !DILocation(line: 379, column: 3, scope: !10076)
!10087 = !DILocation(line: 0, scope: !10076)
!10088 = !DILocation(line: 396, column: 1, scope: !10060)
!10089 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1047, file: !1047, line: 227, type: !1117, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10090)
!10090 = !{!10091, !10092, !10093, !10094, !10095, !10096, !10097, !10098}
!10091 = !DILocalVariable(name: "dev", arg: 1, scope: !10089, file: !1047, line: 227, type: !1076)
!10092 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10089, file: !1047, line: 228, type: !1087)
!10093 = !DILocalVariable(name: "data", arg: 3, scope: !10089, file: !1047, line: 229, type: !104)
!10094 = !DILocalVariable(name: "pclken", scope: !10089, file: !1047, line: 233, type: !1037)
!10095 = !DILocalVariable(name: "reg", scope: !10089, file: !1047, line: 234, type: !1627)
!10096 = !DILocalVariable(name: "reg_val", scope: !10089, file: !1047, line: 235, type: !113)
!10097 = !DILocalVariable(name: "dt_val", scope: !10089, file: !1047, line: 235, type: !113)
!10098 = !DILocalVariable(name: "err", scope: !10089, file: !1047, line: 236, type: !105)
!10099 = !DILocation(line: 0, scope: !10089)
!10100 = !DILocation(line: 241, column: 30, scope: !10089)
!10101 = !DILocation(line: 241, column: 8, scope: !10089)
!10102 = !DILocation(line: 242, column: 10, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10089, file: !1047, line: 242, column: 6)
!10104 = !DILocation(line: 242, column: 6, scope: !10089)
!10105 = !DILocation(line: 247, column: 11, scope: !10089)
!10106 = !DILocation(line: 248, column: 6, scope: !10089)
!10107 = !DILocation(line: 247, column: 44, scope: !10089)
!10108 = !DILocation(line: 250, column: 6, scope: !10089)
!10109 = !DILocation(line: 249, column: 52, scope: !10089)
!10110 = !DILocation(line: 249, column: 8, scope: !10089)
!10111 = !DILocation(line: 251, column: 12, scope: !10089)
!10112 = !DILocation(line: 252, column: 10, scope: !10089)
!10113 = !DILocation(line: 253, column: 7, scope: !10089)
!10114 = !DILocation(line: 255, column: 2, scope: !10089)
!10115 = !DILocation(line: 260, column: 1, scope: !10089)
!10116 = distinct !DISubprogram(name: "enabled_clock", scope: !1047, file: !1047, line: 100, type: !10117, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10119)
!10117 = !DISubroutineType(types: !10118)
!10118 = !{!105, !113}
!10119 = !{!10120, !10121}
!10120 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10116, file: !1047, line: 100, type: !113)
!10121 = !DILocalVariable(name: "r", scope: !10116, file: !1047, line: 102, type: !105)
!10122 = !DILocation(line: 0, scope: !10116)
!10123 = !DILocation(line: 104, column: 2, scope: !10116)
!10124 = !DILocation(line: 180, column: 2, scope: !10116)
!10125 = !DILocation(line: 181, column: 1, scope: !10116)
!10126 = distinct !DISubprogram(name: "get_bus_clock", scope: !1047, file: !1047, line: 79, type: !10127, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10129)
!10127 = !DISubroutineType(types: !10128)
!10128 = !{!113, !113, !113}
!10129 = !{!10130, !10131}
!10130 = !DILocalVariable(name: "clock", arg: 1, scope: !10126, file: !1047, line: 79, type: !113)
!10131 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10126, file: !1047, line: 79, type: !113)
!10132 = !DILocation(line: 0, scope: !10126)
!10133 = !DILocation(line: 81, column: 15, scope: !10126)
!10134 = !DILocation(line: 81, column: 2, scope: !10126)
!10135 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1047, file: !1047, line: 68, type: !10136, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10138)
!10136 = !DISubroutineType(types: !10137)
!10137 = !{!113, !113, !105, !105, !105}
!10138 = !{!10139, !10140, !10141, !10142}
!10139 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10135, file: !1047, line: 68, type: !113)
!10140 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10135, file: !1047, line: 69, type: !105)
!10141 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10135, file: !1047, line: 70, type: !105)
!10142 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10135, file: !1047, line: 71, type: !105)
!10143 = !DILocation(line: 0, scope: !10135)
!10144 = !DILocation(line: 75, column: 22, scope: !10135)
!10145 = !DILocation(line: 76, column: 13, scope: !10135)
!10146 = !DILocation(line: 75, column: 34, scope: !10135)
!10147 = !DILocation(line: 75, column: 2, scope: !10135)
!10148 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1047, file: !1047, line: 641, type: !1074, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10149)
!10149 = !{!10150, !10151, !10152}
!10150 = !DILocalVariable(name: "dev", arg: 1, scope: !10148, file: !1047, line: 641, type: !1076)
!10151 = !DILocalVariable(name: "old_flash_freq", scope: !10148, file: !1047, line: 664, type: !113)
!10152 = !DILocalVariable(name: "new_flash_freq", scope: !10148, file: !1047, line: 665, type: !113)
!10153 = !DILocation(line: 0, scope: !10148)
!10154 = !DILocation(line: 646, column: 2, scope: !10148)
!10155 = !DILocation(line: 667, column: 19, scope: !10148)
!10156 = !DILocation(line: 674, column: 21, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10148, file: !1047, line: 674, column: 6)
!10158 = !DILocation(line: 674, column: 6, scope: !10148)
!10159 = !DILocation(line: 675, column: 3, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10157, file: !1047, line: 674, column: 59)
!10161 = !DILocation(line: 676, column: 2, scope: !10160)
!10162 = !DILocation(line: 680, column: 2, scope: !10148)
!10163 = !DILocation(line: 683, column: 2, scope: !10148)
!10164 = !DILocation(line: 690, column: 3, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10166, file: !1047, line: 689, column: 9)
!10166 = distinct !DILexicalBlock(scope: !10148, file: !1047, line: 685, column: 6)
!10167 = !DILocation(line: 695, column: 2, scope: !10148)
!10168 = !DILocation(line: 696, column: 2, scope: !10148)
!10169 = !DILocation(line: 696, column: 9, scope: !10148)
!10170 = !DILocation(line: 696, column: 34, scope: !10148)
!10171 = distinct !{!10171, !10168, !10172}
!10172 = !DILocation(line: 697, column: 2, scope: !10148)
!10173 = !DILocation(line: 720, column: 21, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10148, file: !1047, line: 720, column: 6)
!10175 = !DILocation(line: 720, column: 6, scope: !10148)
!10176 = !DILocation(line: 721, column: 3, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10174, file: !1047, line: 720, column: 60)
!10178 = !DILocation(line: 722, column: 2, scope: !10177)
!10179 = !DILocation(line: 725, column: 18, scope: !10148)
!10180 = !DILocation(line: 728, column: 2, scope: !10148)
!10181 = !DILocation(line: 730, column: 2, scope: !10148)
!10182 = !DILocation(line: 745, column: 2, scope: !10148)
!10183 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10184, file: !10184, line: 3275, type: !395, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10184 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10185 = !DILocation(line: 3277, column: 21, scope: !10183)
!10186 = !DILocation(line: 3277, column: 3, scope: !10183)
!10187 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1047, file: !1047, line: 507, type: !266, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10188 = !DILocation(line: 516, column: 4, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10190, file: !1047, line: 515, column: 10)
!10190 = distinct !DILexicalBlock(scope: !10191, file: !1047, line: 513, column: 7)
!10191 = distinct !DILexicalBlock(scope: !10192, file: !1047, line: 510, column: 37)
!10192 = distinct !DILexicalBlock(scope: !10187, file: !1047, line: 510, column: 6)
!10193 = !DILocation(line: 526, column: 3, scope: !10191)
!10194 = !DILocation(line: 527, column: 3, scope: !10191)
!10195 = !DILocation(line: 527, column: 10, scope: !10191)
!10196 = !DILocation(line: 527, column: 31, scope: !10191)
!10197 = distinct !{!10197, !10194, !10198}
!10198 = !DILocation(line: 529, column: 3, scope: !10191)
!10199 = !DILocation(line: 583, column: 3, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10201, file: !1047, line: 577, column: 37)
!10201 = distinct !DILexicalBlock(scope: !10187, file: !1047, line: 577, column: 6)
!10202 = !DILocation(line: 584, column: 3, scope: !10200)
!10203 = !DILocation(line: 584, column: 10, scope: !10200)
!10204 = !DILocation(line: 584, column: 31, scope: !10200)
!10205 = distinct !{!10205, !10202, !10206}
!10206 = !DILocation(line: 585, column: 3, scope: !10200)
!10207 = !DILocation(line: 627, column: 1, scope: !10187)
!10208 = distinct !DISubprogram(name: "set_up_plls", scope: !1047, file: !1047, line: 448, type: !266, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10209 = !DILocation(line: 460, column: 6, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10208, file: !1047, line: 460, column: 6)
!10211 = !DILocation(line: 460, column: 31, scope: !10210)
!10212 = !DILocation(line: 460, column: 6, scope: !10208)
!10213 = !DILocation(line: 461, column: 3, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10210, file: !1047, line: 460, column: 67)
!10215 = !DILocation(line: 462, column: 3, scope: !10214)
!10216 = !DILocation(line: 463, column: 2, scope: !10214)
!10217 = !DILocation(line: 464, column: 2, scope: !10208)
!10218 = !DILocation(line: 488, column: 2, scope: !10208)
!10219 = !DILocation(line: 492, column: 2, scope: !10208)
!10220 = !DILocation(line: 496, column: 2, scope: !10208)
!10221 = !DILocation(line: 499, column: 2, scope: !10208)
!10222 = !DILocation(line: 500, column: 2, scope: !10208)
!10223 = !DILocation(line: 500, column: 9, scope: !10208)
!10224 = !DILocation(line: 500, column: 30, scope: !10208)
!10225 = distinct !{!10225, !10222, !10226}
!10226 = !DILocation(line: 502, column: 2, scope: !10208)
!10227 = !DILocation(line: 505, column: 1, scope: !10208)
!10228 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10184, file: !10184, line: 3224, type: !7945, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10229)
!10229 = !{!10230}
!10230 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10228, file: !10184, line: 3224, type: !113)
!10231 = !DILocation(line: 0, scope: !10228)
!10232 = !DILocation(line: 3226, column: 3, scope: !10228)
!10233 = !DILocation(line: 3227, column: 1, scope: !10228)
!10234 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10184, file: !10184, line: 3188, type: !7945, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10235)
!10235 = !{!10236}
!10236 = !DILocalVariable(name: "Source", arg: 1, scope: !10234, file: !10184, line: 3188, type: !113)
!10237 = !DILocation(line: 0, scope: !10234)
!10238 = !DILocation(line: 3190, column: 3, scope: !10234)
!10239 = !DILocation(line: 3191, column: 1, scope: !10234)
!10240 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10184, file: !10184, line: 3204, type: !395, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10241 = !DILocation(line: 3206, column: 21, scope: !10240)
!10242 = !DILocation(line: 3206, column: 3, scope: !10240)
!10243 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10184, file: !10184, line: 3240, type: !7945, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10244)
!10244 = !{!10245}
!10245 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10243, file: !10184, line: 3240, type: !113)
!10246 = !DILocation(line: 0, scope: !10243)
!10247 = !DILocation(line: 3242, column: 3, scope: !10243)
!10248 = !DILocation(line: 3243, column: 1, scope: !10243)
!10249 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10184, file: !10184, line: 3256, type: !7945, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10250)
!10250 = !{!10251}
!10251 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10249, file: !10184, line: 3256, type: !113)
!10252 = !DILocation(line: 0, scope: !10249)
!10253 = !DILocation(line: 3258, column: 3, scope: !10249)
!10254 = !DILocation(line: 3259, column: 1, scope: !10249)
!10255 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1047, file: !1047, line: 409, type: !266, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10256 = !DILocation(line: 412, column: 6, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10255, file: !1047, line: 412, column: 6)
!10258 = !DILocation(line: 412, column: 27, scope: !10257)
!10259 = !DILocation(line: 412, column: 6, scope: !10255)
!10260 = !DILocation(line: 414, column: 3, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10257, file: !1047, line: 412, column: 33)
!10262 = !DILocation(line: 415, column: 3, scope: !10261)
!10263 = !DILocation(line: 415, column: 10, scope: !10261)
!10264 = !DILocation(line: 415, column: 31, scope: !10261)
!10265 = distinct !{!10265, !10262, !10266}
!10266 = !DILocation(line: 417, column: 3, scope: !10261)
!10267 = !DILocation(line: 421, column: 2, scope: !10255)
!10268 = !DILocation(line: 422, column: 2, scope: !10255)
!10269 = !DILocation(line: 422, column: 9, scope: !10255)
!10270 = !DILocation(line: 422, column: 34, scope: !10255)
!10271 = distinct !{!10271, !10268, !10272}
!10272 = !DILocation(line: 423, column: 2, scope: !10255)
!10273 = !DILocation(line: 424, column: 1, scope: !10255)
!10274 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10184, file: !10184, line: 4195, type: !266, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10275 = !DILocation(line: 4197, column: 3, scope: !10274)
!10276 = !DILocation(line: 4198, column: 1, scope: !10274)
!10277 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10184, file: !10184, line: 4184, type: !266, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10278 = !DILocation(line: 4186, column: 3, scope: !10277)
!10279 = !DILocation(line: 4187, column: 1, scope: !10277)
!10280 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10184, file: !10184, line: 4205, type: !395, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10281 = !DILocation(line: 4207, column: 11, scope: !10280)
!10282 = !DILocation(line: 4207, column: 44, scope: !10280)
!10283 = !DILocation(line: 4207, column: 3, scope: !10280)
!10284 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10184, file: !10184, line: 3007, type: !395, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10285 = !DILocation(line: 3009, column: 11, scope: !10284)
!10286 = !DILocation(line: 3009, column: 44, scope: !10284)
!10287 = !DILocation(line: 3009, column: 3, scope: !10284)
!10288 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10184, file: !10184, line: 2987, type: !266, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10289 = !DILocation(line: 2989, column: 3, scope: !10288)
!10290 = !DILocation(line: 2990, column: 1, scope: !10288)
!10291 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10184, file: !10184, line: 2939, type: !266, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10292 = !DILocation(line: 2941, column: 3, scope: !10291)
!10293 = !DILocation(line: 2942, column: 1, scope: !10291)
!10294 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10184, file: !10184, line: 2949, type: !266, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10295 = !DILocation(line: 2951, column: 3, scope: !10294)
!10296 = !DILocation(line: 2952, column: 1, scope: !10294)
!10297 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10184, file: !10184, line: 2969, type: !395, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10298 = !DILocation(line: 2971, column: 11, scope: !10297)
!10299 = !DILocation(line: 2971, column: 44, scope: !10297)
!10300 = !DILocation(line: 2971, column: 3, scope: !10297)
!10301 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10184, file: !10184, line: 3143, type: !266, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10302 = !DILocation(line: 3145, column: 3, scope: !10301)
!10303 = !DILocation(line: 3146, column: 1, scope: !10301)
!10304 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10184, file: !10184, line: 3163, type: !395, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !397)
!10305 = !DILocation(line: 3165, column: 11, scope: !10304)
!10306 = !DILocation(line: 3165, column: 46, scope: !10304)
!10307 = !DILocation(line: 3165, column: 3, scope: !10304)
!10308 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10309, file: !10309, line: 40, type: !395, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !397)
!10309 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10310 = !DILocation(line: 45, column: 3, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10312, file: !10309, line: 44, column: 44)
!10312 = distinct !DILexicalBlock(scope: !10313, file: !10309, line: 44, column: 13)
!10313 = distinct !DILexicalBlock(scope: !10308, file: !10309, line: 42, column: 6)
!10314 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10309, file: !10309, line: 56, type: !266, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !397)
!10315 = !DILocation(line: 58, column: 2, scope: !10314)
!10316 = !DILocation(line: 62, column: 1, scope: !10314)
!10317 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10184, file: !10184, line: 4304, type: !10318, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !10320)
!10318 = !DISubroutineType(types: !10319)
!10319 = !{null, !113, !113, !113, !113}
!10320 = !{!10321, !10322, !10323, !10324}
!10321 = !DILocalVariable(name: "Source", arg: 1, scope: !10317, file: !10184, line: 4304, type: !113)
!10322 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10317, file: !10184, line: 4304, type: !113)
!10323 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10317, file: !10184, line: 4304, type: !113)
!10324 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10317, file: !10184, line: 4304, type: !113)
!10325 = !DILocation(line: 0, scope: !10317)
!10326 = !DILocation(line: 4306, column: 3, scope: !10317)
!10327 = !DILocation(line: 4308, column: 3, scope: !10317)
!10328 = !DILocation(line: 4310, column: 3, scope: !10317)
!10329 = !DILocation(line: 4312, column: 1, scope: !10317)
!10330 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10309, file: !10309, line: 69, type: !266, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !397)
!10331 = !DILocation(line: 72, column: 2, scope: !10330)
!10332 = !DILocation(line: 73, column: 1, scope: !10330)
!10333 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10334, file: !10334, line: 1185, type: !7945, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !10335)
!10334 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10335 = !{!10336, !10337}
!10336 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10333, file: !10334, line: 1185, type: !113)
!10337 = !DILocalVariable(name: "tmpreg", scope: !10333, file: !10334, line: 1187, type: !461)
!10338 = !DILocation(line: 0, scope: !10333)
!10339 = !DILocation(line: 1187, column: 3, scope: !10333)
!10340 = !DILocation(line: 1187, column: 17, scope: !10333)
!10341 = !DILocation(line: 1188, column: 3, scope: !10333)
!10342 = !DILocation(line: 1190, column: 12, scope: !10333)
!10343 = !DILocation(line: 1190, column: 10, scope: !10333)
!10344 = !DILocation(line: 1191, column: 9, scope: !10333)
!10345 = !DILocation(line: 1192, column: 1, scope: !10333)
!10346 = distinct !DISubprogram(name: "uart_console_init", scope: !1178, file: !1178, line: 588, type: !1155, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1121, retainedNodes: !10347)
!10347 = !{!10348}
!10348 = !DILocalVariable(name: "arg", arg: 1, scope: !10346, file: !1178, line: 588, type: !1133)
!10349 = !DILocation(line: 0, scope: !10346)
!10350 = !DILocation(line: 593, column: 7, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10346, file: !1178, line: 593, column: 6)
!10352 = !DILocation(line: 593, column: 6, scope: !10346)
!10353 = !DILocation(line: 597, column: 2, scope: !10346)
!10354 = !DILocation(line: 599, column: 2, scope: !10346)
!10355 = !DILocation(line: 600, column: 1, scope: !10346)
!10356 = distinct !DISubprogram(name: "device_is_ready", scope: !10357, file: !10357, line: 47, type: !10358, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1121, retainedNodes: !10360)
!10357 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!10358 = !DISubroutineType(types: !10359)
!10359 = !{!492, !1133}
!10360 = !{!10361}
!10361 = !DILocalVariable(name: "dev", arg: 1, scope: !10356, file: !10357, line: 47, type: !1133)
!10362 = !DILocation(line: 0, scope: !10356)
!10363 = !DILocation(line: 55, column: 2, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10356, file: !10357, line: 55, column: 2)
!10365 = !{i64 2155297720}
!10366 = !DILocation(line: 56, column: 9, scope: !10356)
!10367 = !DILocation(line: 56, column: 2, scope: !10356)
!10368 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1178, file: !1178, line: 573, type: !266, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1121, retainedNodes: !397)
!10369 = !DILocation(line: 576, column: 2, scope: !10368)
!10370 = !DILocation(line: 579, column: 2, scope: !10368)
!10371 = !DILocation(line: 581, column: 1, scope: !10368)
!10372 = distinct !DISubprogram(name: "console_out", scope: !1178, file: !1178, line: 77, type: !448, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1121, retainedNodes: !10373)
!10373 = !{!10374}
!10374 = !DILocalVariable(name: "c", arg: 1, scope: !10372, file: !1178, line: 77, type: !105)
!10375 = !DILocation(line: 0, scope: !10372)
!10376 = !DILocation(line: 89, column: 11, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10372, file: !1178, line: 89, column: 6)
!10378 = !DILocation(line: 89, column: 6, scope: !10372)
!10379 = !DILocation(line: 90, column: 3, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10377, file: !1178, line: 89, column: 17)
!10381 = !DILocation(line: 91, column: 2, scope: !10380)
!10382 = !DILocation(line: 92, column: 34, scope: !10372)
!10383 = !DILocation(line: 92, column: 2, scope: !10372)
!10384 = !DILocation(line: 94, column: 2, scope: !10372)
!10385 = distinct !DISubprogram(name: "uart_poll_out", scope: !10386, file: !10386, line: 95, type: !1151, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1121, retainedNodes: !10387)
!10386 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!10387 = !{!10388, !10389}
!10388 = !DILocalVariable(name: "dev", arg: 1, scope: !10385, file: !10386, line: 95, type: !1133)
!10389 = !DILocalVariable(name: "out_char", arg: 2, scope: !10385, file: !10386, line: 95, type: !170)
!10390 = !DILocation(line: 0, scope: !10385)
!10391 = !DILocation(line: 105, column: 2, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10385, file: !10386, line: 105, column: 2)
!10393 = !{i64 2155381111}
!10394 = !DILocation(line: 106, column: 2, scope: !10385)
!10395 = !DILocation(line: 107, column: 1, scope: !10385)
!10396 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1127, file: !1127, line: 574, type: !1151, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1121, retainedNodes: !10397)
!10397 = !{!10398, !10399, !10400}
!10398 = !DILocalVariable(name: "dev", arg: 1, scope: !10396, file: !1127, line: 574, type: !1133)
!10399 = !DILocalVariable(name: "out_char", arg: 2, scope: !10396, file: !1127, line: 575, type: !170)
!10400 = !DILocalVariable(name: "api", scope: !10396, file: !1127, line: 577, type: !1124)
!10401 = !DILocation(line: 0, scope: !10396)
!10402 = !DILocation(line: 578, column: 40, scope: !10396)
!10403 = !DILocation(line: 580, column: 7, scope: !10396)
!10404 = !DILocation(line: 580, column: 2, scope: !10396)
!10405 = !DILocation(line: 581, column: 1, scope: !10396)
!10406 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !10358, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1121, retainedNodes: !10407)
!10407 = !{!10408}
!10408 = !DILocalVariable(name: "dev", arg: 1, scope: !10406, file: !481, line: 730, type: !1133)
!10409 = !DILocation(line: 0, scope: !10406)
!10410 = !DILocation(line: 732, column: 9, scope: !10406)
!10411 = !DILocation(line: 732, column: 2, scope: !10406)
!10412 = distinct !DISubprogram(name: "uart_register_input", scope: !1178, file: !1178, line: 560, type: !10413, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1121, retainedNodes: !10460)
!10413 = !DISubroutineType(types: !10414)
!10414 = !{null, !10415, !10415, !10457}
!10415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10416, size: 32)
!10416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !122, line: 2208, size: 160, elements: !10417)
!10417 = !{!10418}
!10418 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10416, file: !122, line: 2209, baseType: !10419, size: 160)
!10419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !122, line: 1709, size: 160, elements: !10420)
!10420 = !{!10421, !10434, !10438}
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10419, file: !122, line: 1710, baseType: !10422, size: 64)
!10422 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10423, line: 46, baseType: !10424)
!10423 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10423, line: 41, size: 64, elements: !10425)
!10425 = !{!10426, !10433}
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10424, file: !10423, line: 42, baseType: !10427, size: 32)
!10427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10428, size: 32)
!10428 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10423, line: 39, baseType: !10429)
!10429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10423, line: 35, size: 32, elements: !10430)
!10430 = !{!10431}
!10431 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10429, file: !10423, line: 36, baseType: !10432, size: 32)
!10432 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10423, line: 32, baseType: !113)
!10433 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10424, file: !10423, line: 43, baseType: !10427, size: 32, offset: 32)
!10434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10419, file: !122, line: 1711, baseType: !10435, size: 32, offset: 64)
!10435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !10436)
!10436 = !{!10437}
!10437 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !10435, file: !236, line: 52, baseType: !22, size: 32)
!10438 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10419, file: !122, line: 1712, baseType: !10439, size: 64, offset: 96)
!10439 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !10440)
!10440 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !10441)
!10441 = !{!10442}
!10442 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10440, file: !163, line: 232, baseType: !10443, size: 64)
!10443 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !10444)
!10444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !10445)
!10445 = !{!10446, !10452}
!10446 = !DIDerivedType(tag: DW_TAG_member, scope: !10444, file: !137, line: 38, baseType: !10447, size: 32)
!10447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10444, file: !137, line: 38, size: 32, elements: !10448)
!10448 = !{!10449, !10451}
!10449 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10447, file: !137, line: 39, baseType: !10450, size: 32)
!10450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10444, size: 32)
!10451 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10447, file: !137, line: 40, baseType: !10450, size: 32)
!10452 = !DIDerivedType(tag: DW_TAG_member, scope: !10444, file: !137, line: 42, baseType: !10453, size: 32, offset: 32)
!10453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10444, file: !137, line: 42, size: 32, elements: !10454)
!10454 = !{!10455, !10456}
!10455 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10453, file: !137, line: 43, baseType: !10450, size: 32)
!10456 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10453, file: !137, line: 44, baseType: !10450, size: 32)
!10457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10458, size: 32)
!10458 = !DISubroutineType(types: !10459)
!10459 = !{!169, !102, !169}
!10460 = !{!10461, !10462, !10463}
!10461 = !DILocalVariable(name: "avail", arg: 1, scope: !10412, file: !1178, line: 560, type: !10415)
!10462 = !DILocalVariable(name: "lines", arg: 2, scope: !10412, file: !1178, line: 560, type: !10415)
!10463 = !DILocalVariable(name: "completion", arg: 3, scope: !10412, file: !1178, line: 561, type: !10457)
!10464 = !DILocation(line: 0, scope: !10412)
!10465 = !DILocation(line: 566, column: 1, scope: !10412)
!10466 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1358, file: !1358, line: 523, type: !1214, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10467)
!10467 = !{!10468, !10469, !10470, !10471, !10472}
!10468 = !DILocalVariable(name: "dev", arg: 1, scope: !10466, file: !1358, line: 523, type: !1216)
!10469 = !DILocalVariable(name: "pin", arg: 2, scope: !10466, file: !1358, line: 524, type: !1231)
!10470 = !DILocalVariable(name: "flags", arg: 3, scope: !10466, file: !1358, line: 524, type: !1232)
!10471 = !DILocalVariable(name: "err", scope: !10466, file: !1358, line: 526, type: !105)
!10472 = !DILocalVariable(name: "pincfg", scope: !10466, file: !1358, line: 527, type: !105)
!10473 = !DILocation(line: 0, scope: !10466)
!10474 = !DILocation(line: 527, column: 2, scope: !10466)
!10475 = !DILocation(line: 532, column: 8, scope: !10466)
!10476 = !DILocation(line: 533, column: 10, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10466, file: !1358, line: 533, column: 6)
!10478 = !DILocation(line: 533, column: 6, scope: !10466)
!10479 = !DILocation(line: 543, column: 13, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10466, file: !1358, line: 543, column: 6)
!10481 = !DILocation(line: 543, column: 28, scope: !10480)
!10482 = !DILocation(line: 543, column: 6, scope: !10466)
!10483 = !DILocation(line: 544, column: 14, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10485, file: !1358, line: 544, column: 7)
!10485 = distinct !DILexicalBlock(scope: !10480, file: !1358, line: 543, column: 34)
!10486 = !DILocation(line: 544, column: 39, scope: !10484)
!10487 = !DILocation(line: 544, column: 7, scope: !10485)
!10488 = !DILocation(line: 545, column: 38, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10484, file: !1358, line: 544, column: 45)
!10490 = !DILocation(line: 545, column: 4, scope: !10489)
!10491 = !DILocation(line: 546, column: 3, scope: !10489)
!10492 = !DILocation(line: 546, column: 21, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10484, file: !1358, line: 546, column: 14)
!10494 = !DILocation(line: 546, column: 45, scope: !10493)
!10495 = !DILocation(line: 546, column: 14, scope: !10484)
!10496 = !DILocation(line: 547, column: 40, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10493, file: !1358, line: 546, column: 51)
!10498 = !DILocation(line: 547, column: 4, scope: !10497)
!10499 = !DILocation(line: 548, column: 3, scope: !10497)
!10500 = !DILocation(line: 551, column: 32, scope: !10466)
!10501 = !DILocation(line: 551, column: 37, scope: !10466)
!10502 = !DILocation(line: 551, column: 2, scope: !10466)
!10503 = !DILocation(line: 554, column: 6, scope: !10466)
!10504 = !DILocation(line: 562, column: 1, scope: !10466)
!10505 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1358, file: !1358, line: 410, type: !10506, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10508)
!10506 = !DISubroutineType(types: !10507)
!10507 = !{!105, !1216, !1043}
!10508 = !{!10509, !10510, !10511, !10513}
!10509 = !DILocalVariable(name: "dev", arg: 1, scope: !10505, file: !1358, line: 410, type: !1216)
!10510 = !DILocalVariable(name: "value", arg: 2, scope: !10505, file: !1358, line: 410, type: !1043)
!10511 = !DILocalVariable(name: "cfg", scope: !10505, file: !1358, line: 412, type: !10512)
!10512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!10513 = !DILocalVariable(name: "gpio", scope: !10505, file: !1358, line: 413, type: !1289)
!10514 = !DILocation(line: 0, scope: !10505)
!10515 = !DILocation(line: 412, column: 45, scope: !10505)
!10516 = !DILocation(line: 413, column: 44, scope: !10505)
!10517 = !DILocation(line: 415, column: 11, scope: !10505)
!10518 = !DILocation(line: 415, column: 9, scope: !10505)
!10519 = !DILocation(line: 417, column: 2, scope: !10505)
!10520 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1358, file: !1358, line: 420, type: !1241, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10521)
!10521 = !{!10522, !10523, !10524, !10525, !10526, !10527}
!10522 = !DILocalVariable(name: "dev", arg: 1, scope: !10520, file: !1358, line: 420, type: !1216)
!10523 = !DILocalVariable(name: "mask", arg: 2, scope: !10520, file: !1358, line: 421, type: !1243)
!10524 = !DILocalVariable(name: "value", arg: 3, scope: !10520, file: !1358, line: 422, type: !1238)
!10525 = !DILocalVariable(name: "cfg", scope: !10520, file: !1358, line: 424, type: !10512)
!10526 = !DILocalVariable(name: "gpio", scope: !10520, file: !1358, line: 425, type: !1289)
!10527 = !DILocalVariable(name: "port_value", scope: !10520, file: !1358, line: 426, type: !113)
!10528 = !DILocation(line: 0, scope: !10520)
!10529 = !DILocation(line: 424, column: 45, scope: !10520)
!10530 = !DILocation(line: 425, column: 44, scope: !10520)
!10531 = !DILocation(line: 430, column: 15, scope: !10520)
!10532 = !DILocation(line: 431, column: 46, scope: !10520)
!10533 = !DILocation(line: 431, column: 44, scope: !10520)
!10534 = !DILocation(line: 431, column: 61, scope: !10520)
!10535 = !DILocation(line: 431, column: 53, scope: !10520)
!10536 = !DILocation(line: 431, column: 2, scope: !10520)
!10537 = !DILocation(line: 435, column: 2, scope: !10520)
!10538 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1358, file: !1358, line: 438, type: !1246, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10539)
!10539 = !{!10540, !10541, !10542, !10543}
!10540 = !DILocalVariable(name: "dev", arg: 1, scope: !10538, file: !1358, line: 438, type: !1216)
!10541 = !DILocalVariable(name: "pins", arg: 2, scope: !10538, file: !1358, line: 439, type: !1243)
!10542 = !DILocalVariable(name: "cfg", scope: !10538, file: !1358, line: 441, type: !10512)
!10543 = !DILocalVariable(name: "gpio", scope: !10538, file: !1358, line: 442, type: !1289)
!10544 = !DILocation(line: 0, scope: !10538)
!10545 = !DILocation(line: 441, column: 45, scope: !10538)
!10546 = !DILocation(line: 442, column: 44, scope: !10538)
!10547 = !DILocation(line: 448, column: 2, scope: !10538)
!10548 = !DILocation(line: 450, column: 2, scope: !10538)
!10549 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1358, file: !1358, line: 453, type: !1246, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10550)
!10550 = !{!10551, !10552, !10553, !10554}
!10551 = !DILocalVariable(name: "dev", arg: 1, scope: !10549, file: !1358, line: 453, type: !1216)
!10552 = !DILocalVariable(name: "pins", arg: 2, scope: !10549, file: !1358, line: 454, type: !1243)
!10553 = !DILocalVariable(name: "cfg", scope: !10549, file: !1358, line: 456, type: !10512)
!10554 = !DILocalVariable(name: "gpio", scope: !10549, file: !1358, line: 457, type: !1289)
!10555 = !DILocation(line: 0, scope: !10549)
!10556 = !DILocation(line: 456, column: 45, scope: !10549)
!10557 = !DILocation(line: 457, column: 44, scope: !10549)
!10558 = !DILocation(line: 467, column: 2, scope: !10549)
!10559 = !DILocation(line: 470, column: 2, scope: !10549)
!10560 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1358, file: !1358, line: 473, type: !1246, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10561)
!10561 = !{!10562, !10563, !10564, !10565}
!10562 = !DILocalVariable(name: "dev", arg: 1, scope: !10560, file: !1358, line: 473, type: !1216)
!10563 = !DILocalVariable(name: "pins", arg: 2, scope: !10560, file: !1358, line: 474, type: !1243)
!10564 = !DILocalVariable(name: "cfg", scope: !10560, file: !1358, line: 476, type: !10512)
!10565 = !DILocalVariable(name: "gpio", scope: !10560, file: !1358, line: 477, type: !1289)
!10566 = !DILocation(line: 0, scope: !10560)
!10567 = !DILocation(line: 476, column: 45, scope: !10560)
!10568 = !DILocation(line: 477, column: 44, scope: !10560)
!10569 = !DILocation(line: 484, column: 2, scope: !10560)
!10570 = !DILocation(line: 487, column: 2, scope: !10560)
!10571 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1358, file: !1358, line: 594, type: !1252, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10572)
!10572 = !{!10573, !10574, !10575, !10576, !10577, !10578, !10580, !10581, !10582}
!10573 = !DILocalVariable(name: "dev", arg: 1, scope: !10571, file: !1358, line: 594, type: !1216)
!10574 = !DILocalVariable(name: "pin", arg: 2, scope: !10571, file: !1358, line: 595, type: !1231)
!10575 = !DILocalVariable(name: "mode", arg: 3, scope: !10571, file: !1358, line: 596, type: !1190)
!10576 = !DILocalVariable(name: "trig", arg: 4, scope: !10571, file: !1358, line: 597, type: !1196)
!10577 = !DILocalVariable(name: "cfg", scope: !10571, file: !1358, line: 599, type: !10512)
!10578 = !DILocalVariable(name: "data", scope: !10571, file: !1358, line: 600, type: !10579)
!10579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!10580 = !DILocalVariable(name: "edge", scope: !10571, file: !1358, line: 601, type: !105)
!10581 = !DILocalVariable(name: "err", scope: !10571, file: !1358, line: 602, type: !105)
!10582 = !DILabel(scope: !10571, name: "exit", file: !1358, line: 643)
!10583 = !DILocation(line: 0, scope: !10571)
!10584 = !DILocation(line: 599, column: 45, scope: !10571)
!10585 = !DILocation(line: 604, column: 6, scope: !10571)
!10586 = !DILocation(line: 605, column: 34, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10588, file: !1358, line: 605, column: 7)
!10588 = distinct !DILexicalBlock(scope: !10589, file: !1358, line: 604, column: 38)
!10589 = distinct !DILexicalBlock(scope: !10571, file: !1358, line: 604, column: 6)
!10590 = !DILocation(line: 605, column: 7, scope: !10587)
!10591 = !DILocation(line: 605, column: 47, scope: !10587)
!10592 = !DILocation(line: 605, column: 39, scope: !10587)
!10593 = !DILocation(line: 605, column: 7, scope: !10588)
!10594 = !DILocation(line: 606, column: 4, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10587, file: !1358, line: 605, column: 53)
!10596 = !DILocation(line: 607, column: 4, scope: !10595)
!10597 = !DILocation(line: 608, column: 4, scope: !10595)
!10598 = !DILocation(line: 609, column: 3, scope: !10595)
!10599 = !DILocation(line: 600, column: 38, scope: !10571)
!10600 = !DILocation(line: 620, column: 30, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10571, file: !1358, line: 620, column: 6)
!10602 = !DILocation(line: 620, column: 6, scope: !10601)
!10603 = !DILocation(line: 620, column: 57, scope: !10601)
!10604 = !DILocation(line: 620, column: 6, scope: !10571)
!10605 = !DILocation(line: 625, column: 29, scope: !10571)
!10606 = !DILocation(line: 625, column: 2, scope: !10571)
!10607 = !DILocation(line: 627, column: 2, scope: !10571)
!10608 = !DILocation(line: 630, column: 3, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10571, file: !1358, line: 627, column: 16)
!10610 = !DILocation(line: 633, column: 3, scope: !10609)
!10611 = !DILocation(line: 636, column: 3, scope: !10609)
!10612 = !DILocation(line: 639, column: 2, scope: !10571)
!10613 = !DILocation(line: 641, column: 2, scope: !10571)
!10614 = !DILocation(line: 643, column: 1, scope: !10571)
!10615 = !DILocation(line: 644, column: 2, scope: !10571)
!10616 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1358, file: !1358, line: 647, type: !1256, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10617)
!10617 = !{!10618, !10619, !10620, !10621}
!10618 = !DILocalVariable(name: "dev", arg: 1, scope: !10616, file: !1358, line: 647, type: !1216)
!10619 = !DILocalVariable(name: "callback", arg: 2, scope: !10616, file: !1358, line: 648, type: !1258)
!10620 = !DILocalVariable(name: "set", arg: 3, scope: !10616, file: !1358, line: 649, type: !492)
!10621 = !DILocalVariable(name: "data", scope: !10616, file: !1358, line: 651, type: !10579)
!10622 = !DILocation(line: 0, scope: !10616)
!10623 = !DILocation(line: 651, column: 38, scope: !10616)
!10624 = !DILocation(line: 653, column: 37, scope: !10616)
!10625 = !DILocation(line: 653, column: 9, scope: !10616)
!10626 = !DILocation(line: 653, column: 2, scope: !10616)
!10627 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10628, file: !10628, line: 38, type: !10629, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10632)
!10628 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10629 = !DISubroutineType(types: !10630)
!10630 = !{!105, !10631, !1258, !492}
!10631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 32)
!10632 = !{!10633, !10634, !10635}
!10633 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10627, file: !10628, line: 38, type: !10631)
!10634 = !DILocalVariable(name: "callback", arg: 2, scope: !10627, file: !10628, line: 39, type: !1258)
!10635 = !DILocalVariable(name: "set", arg: 3, scope: !10627, file: !10628, line: 40, type: !492)
!10636 = !DILocation(line: 0, scope: !10627)
!10637 = !DILocation(line: 42, column: 2, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10639, file: !10628, line: 42, column: 2)
!10639 = distinct !DILexicalBlock(scope: !10627, file: !10628, line: 42, column: 2)
!10640 = !DILocation(line: 42, column: 2, scope: !10639)
!10641 = !DILocation(line: 42, column: 2, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10638, file: !10628, line: 42, column: 2)
!10643 = !DILocation(line: 43, column: 2, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10645, file: !10628, line: 43, column: 2)
!10645 = distinct !DILexicalBlock(scope: !10627, file: !10628, line: 43, column: 2)
!10646 = !DILocation(line: 43, column: 2, scope: !10645)
!10647 = !DILocation(line: 43, column: 2, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10644, file: !10628, line: 43, column: 2)
!10649 = !DILocation(line: 45, column: 7, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10627, file: !10628, line: 45, column: 6)
!10651 = !DILocation(line: 45, column: 6, scope: !10627)
!10652 = !DILocation(line: 46, column: 56, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10654, file: !10628, line: 46, column: 7)
!10654 = distinct !DILexicalBlock(scope: !10650, file: !10628, line: 45, column: 38)
!10655 = !DILocation(line: 46, column: 8, scope: !10653)
!10656 = !DILocation(line: 46, column: 7, scope: !10654)
!10657 = !DILocation(line: 51, column: 13, scope: !10650)
!10658 = !DILocation(line: 56, column: 43, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10660, file: !10628, line: 55, column: 11)
!10660 = distinct !DILexicalBlock(scope: !10627, file: !10628, line: 55, column: 6)
!10661 = !DILocation(line: 56, column: 3, scope: !10659)
!10662 = !DILocation(line: 57, column: 2, scope: !10659)
!10663 = !DILocation(line: 60, column: 1, scope: !10627)
!10664 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1263, file: !1263, line: 261, type: !10665, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10667)
!10665 = !DISubroutineType(types: !10666)
!10666 = !{!492, !10631}
!10667 = !{!10668}
!10668 = !DILocalVariable(name: "list", arg: 1, scope: !10664, file: !1263, line: 261, type: !10631)
!10669 = !DILocation(line: 0, scope: !10664)
!10670 = !DILocation(line: 261, column: 1, scope: !10664)
!10671 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1263, file: !1263, line: 417, type: !10672, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10674)
!10672 = !DISubroutineType(types: !10673)
!10673 = !{!492, !10631, !1431}
!10674 = !{!10675, !10676, !10677, !10678}
!10675 = !DILocalVariable(name: "list", arg: 1, scope: !10671, file: !1263, line: 417, type: !10631)
!10676 = !DILocalVariable(name: "node", arg: 2, scope: !10671, file: !1263, line: 417, type: !1431)
!10677 = !DILocalVariable(name: "prev", scope: !10671, file: !1263, line: 417, type: !1431)
!10678 = !DILocalVariable(name: "test", scope: !10671, file: !1263, line: 417, type: !1431)
!10679 = !DILocation(line: 0, scope: !10671)
!10680 = !DILocation(line: 417, column: 1, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10671, file: !1263, line: 417, column: 1)
!10682 = !DILocation(line: 417, column: 1, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10681, file: !1263, line: 417, column: 1)
!10684 = !DILocation(line: 417, column: 1, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10686, file: !1263, line: 417, column: 1)
!10686 = distinct !DILexicalBlock(scope: !10683, file: !1263, line: 417, column: 1)
!10687 = !DILocation(line: 417, column: 1, scope: !10686)
!10688 = distinct !{!10688, !10680, !10680}
!10689 = !DILocation(line: 417, column: 1, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10685, file: !1263, line: 417, column: 1)
!10691 = !DILocation(line: 417, column: 1, scope: !10671)
!10692 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1263, file: !1263, line: 298, type: !10693, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10695)
!10693 = !DISubroutineType(types: !10694)
!10694 = !{null, !10631, !1431}
!10695 = !{!10696, !10697}
!10696 = !DILocalVariable(name: "list", arg: 1, scope: !10692, file: !1263, line: 298, type: !10631)
!10697 = !DILocalVariable(name: "node", arg: 2, scope: !10692, file: !1263, line: 298, type: !1431)
!10698 = !DILocation(line: 0, scope: !10692)
!10699 = !DILocation(line: 298, column: 1, scope: !10692)
!10700 = !DILocation(line: 298, column: 1, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10692, file: !1263, line: 298, column: 1)
!10702 = !DILocation(line: 298, column: 1, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10701, file: !1263, line: 298, column: 1)
!10704 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1263, file: !1263, line: 231, type: !10705, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10707)
!10705 = !DISubroutineType(types: !10706)
!10706 = !{!1431, !10631}
!10707 = !{!10708}
!10708 = !DILocalVariable(name: "list", arg: 1, scope: !10704, file: !1263, line: 231, type: !10631)
!10709 = !DILocation(line: 0, scope: !10704)
!10710 = !DILocation(line: 233, column: 15, scope: !10704)
!10711 = !DILocation(line: 233, column: 2, scope: !10704)
!10712 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1263, file: !1263, line: 209, type: !10713, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10715)
!10713 = !DISubroutineType(types: !10714)
!10714 = !{null, !1431, !1431}
!10715 = !{!10716, !10717}
!10716 = !DILocalVariable(name: "parent", arg: 1, scope: !10712, file: !1263, line: 209, type: !1431)
!10717 = !DILocalVariable(name: "child", arg: 2, scope: !10712, file: !1263, line: 209, type: !1431)
!10718 = !DILocation(line: 0, scope: !10712)
!10719 = !DILocation(line: 211, column: 10, scope: !10712)
!10720 = !DILocation(line: 211, column: 15, scope: !10712)
!10721 = !DILocation(line: 212, column: 1, scope: !10712)
!10722 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1263, file: !1263, line: 214, type: !10693, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10723)
!10723 = !{!10724, !10725}
!10724 = !DILocalVariable(name: "list", arg: 1, scope: !10722, file: !1263, line: 214, type: !10631)
!10725 = !DILocalVariable(name: "node", arg: 2, scope: !10722, file: !1263, line: 214, type: !1431)
!10726 = !DILocation(line: 0, scope: !10722)
!10727 = !DILocation(line: 216, column: 8, scope: !10722)
!10728 = !DILocation(line: 216, column: 13, scope: !10722)
!10729 = !DILocation(line: 217, column: 1, scope: !10722)
!10730 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1263, file: !1263, line: 243, type: !10705, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10731)
!10731 = !{!10732}
!10732 = !DILocalVariable(name: "list", arg: 1, scope: !10730, file: !1263, line: 243, type: !10631)
!10733 = !DILocation(line: 0, scope: !10730)
!10734 = !DILocation(line: 245, column: 15, scope: !10730)
!10735 = !DILocation(line: 245, column: 2, scope: !10730)
!10736 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1263, file: !1263, line: 219, type: !10693, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10737)
!10737 = !{!10738, !10739}
!10738 = !DILocalVariable(name: "list", arg: 1, scope: !10736, file: !1263, line: 219, type: !10631)
!10739 = !DILocalVariable(name: "node", arg: 2, scope: !10736, file: !1263, line: 219, type: !1431)
!10740 = !DILocation(line: 0, scope: !10736)
!10741 = !DILocation(line: 221, column: 8, scope: !10736)
!10742 = !DILocation(line: 221, column: 13, scope: !10736)
!10743 = !DILocation(line: 222, column: 1, scope: !10736)
!10744 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1263, file: !1263, line: 401, type: !10745, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10747)
!10745 = !DISubroutineType(types: !10746)
!10746 = !{null, !10631, !1431, !1431}
!10747 = !{!10748, !10749, !10750}
!10748 = !DILocalVariable(name: "list", arg: 1, scope: !10744, file: !1263, line: 401, type: !10631)
!10749 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10744, file: !1263, line: 401, type: !1431)
!10750 = !DILocalVariable(name: "node", arg: 3, scope: !10744, file: !1263, line: 401, type: !1431)
!10751 = !DILocation(line: 0, scope: !10744)
!10752 = !DILocation(line: 401, column: 1, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10744, file: !1263, line: 401, column: 1)
!10754 = !DILocation(line: 0, scope: !10753)
!10755 = !DILocation(line: 401, column: 1, scope: !10744)
!10756 = !DILocation(line: 401, column: 1, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10753, file: !1263, line: 401, column: 1)
!10758 = !DILocation(line: 401, column: 1, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10757, file: !1263, line: 401, column: 1)
!10760 = !DILocation(line: 401, column: 1, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10759, file: !1263, line: 401, column: 1)
!10762 = !DILocation(line: 401, column: 1, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10753, file: !1263, line: 401, column: 1)
!10764 = !DILocation(line: 401, column: 1, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10763, file: !1263, line: 401, column: 1)
!10766 = !DILocation(line: 401, column: 1, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10765, file: !1263, line: 401, column: 1)
!10768 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1263, file: !1263, line: 285, type: !10769, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10771)
!10769 = !DISubroutineType(types: !10770)
!10770 = !{!1431, !1431}
!10771 = !{!10772}
!10772 = !DILocalVariable(name: "node", arg: 1, scope: !10768, file: !1263, line: 285, type: !1431)
!10773 = !DILocation(line: 0, scope: !10768)
!10774 = !DILocation(line: 285, column: 1, scope: !10768)
!10775 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1263, file: !1263, line: 274, type: !10769, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10776)
!10776 = !{!10777}
!10777 = !DILocalVariable(name: "node", arg: 1, scope: !10775, file: !1263, line: 274, type: !1431)
!10778 = !DILocation(line: 0, scope: !10775)
!10779 = !DILocation(line: 274, column: 1, scope: !10775)
!10780 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1263, file: !1263, line: 204, type: !10769, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10781)
!10781 = !{!10782}
!10782 = !DILocalVariable(name: "node", arg: 1, scope: !10780, file: !1263, line: 204, type: !1431)
!10783 = !DILocation(line: 0, scope: !10780)
!10784 = !DILocation(line: 206, column: 15, scope: !10780)
!10785 = !DILocation(line: 206, column: 2, scope: !10780)
!10786 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1358, file: !1358, line: 342, type: !448, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10787)
!10787 = !{!10788, !10789, !10790}
!10788 = !DILocalVariable(name: "pin", arg: 1, scope: !10786, file: !1358, line: 342, type: !105)
!10789 = !DILocalVariable(name: "line", scope: !10786, file: !1358, line: 344, type: !113)
!10790 = !DILocalVariable(name: "port", scope: !10786, file: !1358, line: 345, type: !105)
!10791 = !DILocation(line: 0, scope: !10786)
!10792 = !DILocation(line: 344, column: 18, scope: !10786)
!10793 = !{i32 983040, i32 0}
!10794 = !DILocation(line: 356, column: 9, scope: !10786)
!10795 = !DILocation(line: 370, column: 2, scope: !10786)
!10796 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1358, file: !1358, line: 37, type: !899, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10797)
!10797 = !{!10798, !10799, !10800}
!10798 = !DILocalVariable(name: "line", arg: 1, scope: !10796, file: !1358, line: 37, type: !105)
!10799 = !DILocalVariable(name: "arg", arg: 2, scope: !10796, file: !1358, line: 37, type: !104)
!10800 = !DILocalVariable(name: "data", scope: !10796, file: !1358, line: 39, type: !10579)
!10801 = !DILocation(line: 0, scope: !10796)
!10802 = !DILocation(line: 41, column: 29, scope: !10796)
!10803 = !DILocation(line: 41, column: 39, scope: !10796)
!10804 = !DILocation(line: 41, column: 44, scope: !10796)
!10805 = !DILocation(line: 41, column: 2, scope: !10796)
!10806 = !DILocation(line: 42, column: 1, scope: !10796)
!10807 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1358, file: !1358, line: 376, type: !10808, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10810)
!10808 = !DISubroutineType(types: !10809)
!10809 = !{!105, !105, !105}
!10810 = !{!10811, !10812, !10813, !10815, !10816}
!10811 = !DILocalVariable(name: "port", arg: 1, scope: !10807, file: !1358, line: 376, type: !105)
!10812 = !DILocalVariable(name: "pin", arg: 2, scope: !10807, file: !1358, line: 376, type: !105)
!10813 = !DILocalVariable(name: "clk", scope: !10807, file: !1358, line: 386, type: !10814)
!10814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1216)
!10815 = !DILocalVariable(name: "pclken", scope: !10807, file: !1358, line: 387, type: !1474)
!10816 = !DILocalVariable(name: "ret", scope: !10807, file: !1358, line: 396, type: !105)
!10817 = !DILocation(line: 0, scope: !10807)
!10818 = !DILocation(line: 387, column: 2, scope: !10807)
!10819 = !DILocation(line: 387, column: 22, scope: !10807)
!10820 = !DILocation(line: 399, column: 8, scope: !10807)
!10821 = !DILocation(line: 400, column: 10, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10807, file: !1358, line: 400, column: 6)
!10823 = !DILocation(line: 400, column: 6, scope: !10807)
!10824 = !DILocation(line: 405, column: 2, scope: !10807)
!10825 = !DILocation(line: 407, column: 2, scope: !10807)
!10826 = !DILocation(line: 408, column: 1, scope: !10807)
!10827 = distinct !DISubprogram(name: "clock_control_on", scope: !991, file: !991, line: 123, type: !1323, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10828)
!10828 = !{!10829, !10830, !10831}
!10829 = !DILocalVariable(name: "dev", arg: 1, scope: !10827, file: !991, line: 123, type: !1216)
!10830 = !DILocalVariable(name: "sys", arg: 2, scope: !10827, file: !991, line: 124, type: !1087)
!10831 = !DILocalVariable(name: "api", scope: !10827, file: !991, line: 126, type: !1316)
!10832 = !DILocation(line: 0, scope: !10827)
!10833 = !DILocation(line: 127, column: 49, scope: !10827)
!10834 = !DILocation(line: 129, column: 14, scope: !10827)
!10835 = !DILocation(line: 129, column: 9, scope: !10827)
!10836 = !DILocation(line: 129, column: 2, scope: !10827)
!10837 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1358, file: !1358, line: 311, type: !9941, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10838)
!10838 = !{!10839, !10840, !10841}
!10839 = !DILocalVariable(name: "port", arg: 1, scope: !10837, file: !1358, line: 311, type: !105)
!10840 = !DILocalVariable(name: "pin", arg: 2, scope: !10837, file: !1358, line: 311, type: !105)
!10841 = !DILocalVariable(name: "line", scope: !10837, file: !1358, line: 313, type: !113)
!10842 = !DILocation(line: 0, scope: !10837)
!10843 = !DILocation(line: 313, column: 18, scope: !10837)
!10844 = !DILocation(line: 337, column: 2, scope: !10837)
!10845 = !DILocation(line: 340, column: 1, scope: !10837)
!10846 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1358, file: !1358, line: 295, type: !10847, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10849)
!10847 = !DISubroutineType(types: !10848)
!10848 = !{!113, !105}
!10849 = !{!10850}
!10850 = !DILocalVariable(name: "pin", arg: 1, scope: !10846, file: !1358, line: 295, type: !105)
!10851 = !DILocation(line: 0, scope: !10846)
!10852 = !DILocation(line: 307, column: 46, scope: !10846)
!10853 = !DILocation(line: 307, column: 27, scope: !10846)
!10854 = !DILocation(line: 307, column: 32, scope: !10846)
!10855 = !DILocation(line: 307, column: 14, scope: !10846)
!10856 = !DILocation(line: 307, column: 39, scope: !10846)
!10857 = !DILocation(line: 307, column: 2, scope: !10846)
!10858 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7553, file: !7553, line: 671, type: !10859, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10861)
!10859 = !DISubroutineType(types: !10860)
!10860 = !{null, !113, !113}
!10861 = !{!10862, !10863}
!10862 = !DILocalVariable(name: "Port", arg: 1, scope: !10858, file: !7553, line: 671, type: !113)
!10863 = !DILocalVariable(name: "Line", arg: 2, scope: !10858, file: !7553, line: 671, type: !113)
!10864 = !DILocation(line: 0, scope: !10858)
!10865 = !DILocation(line: 673, column: 3, scope: !10858)
!10866 = !DILocalVariable(name: "value", arg: 1, scope: !10867, file: !7850, line: 373, type: !113)
!10867 = distinct !DISubprogram(name: "__RBIT", scope: !7850, file: !7850, line: 373, type: !9131, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10868)
!10868 = !{!10866, !10869}
!10869 = !DILocalVariable(name: "result", scope: !10867, file: !7850, line: 375, type: !113)
!10870 = !DILocation(line: 0, scope: !10867, inlinedAt: !10871)
!10871 = distinct !DILocation(line: 673, column: 3, scope: !10858)
!10872 = !DILocation(line: 380, column: 4, scope: !10867, inlinedAt: !10871)
!10873 = !{i64 3734224}
!10874 = !DILocalVariable(name: "value", arg: 1, scope: !10875, file: !7850, line: 403, type: !113)
!10875 = distinct !DISubprogram(name: "__CLZ", scope: !7850, file: !7850, line: 403, type: !10876, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10878)
!10876 = !DISubroutineType(types: !10877)
!10877 = !{!169, !113}
!10878 = !{!10874}
!10879 = !DILocation(line: 0, scope: !10875, inlinedAt: !10880)
!10880 = distinct !DILocation(line: 673, column: 3, scope: !10858)
!10881 = !DILocation(line: 414, column: 7, scope: !10875, inlinedAt: !10880)
!10882 = !DILocation(line: 674, column: 1, scope: !10858)
!10883 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10628, file: !10628, line: 69, type: !10884, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10886)
!10884 = !DISubroutineType(types: !10885)
!10885 = !{null, !10631, !1216, !113}
!10886 = !{!10887, !10888, !10889, !10890, !10891}
!10887 = !DILocalVariable(name: "list", arg: 1, scope: !10883, file: !10628, line: 69, type: !10631)
!10888 = !DILocalVariable(name: "port", arg: 2, scope: !10883, file: !10628, line: 70, type: !1216)
!10889 = !DILocalVariable(name: "pins", arg: 3, scope: !10883, file: !10628, line: 71, type: !113)
!10890 = !DILocalVariable(name: "cb", scope: !10883, file: !10628, line: 73, type: !1258)
!10891 = !DILocalVariable(name: "tmp", scope: !10883, file: !10628, line: 73, type: !1258)
!10892 = !DILocation(line: 0, scope: !10883)
!10893 = !DILocation(line: 75, column: 2, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10883, file: !10628, line: 75, column: 2)
!10895 = !DILocation(line: 0, scope: !10894)
!10896 = !DILocation(line: 76, column: 11, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10898, file: !10628, line: 76, column: 7)
!10898 = distinct !DILexicalBlock(scope: !10899, file: !10628, line: 75, column: 57)
!10899 = distinct !DILexicalBlock(scope: !10894, file: !10628, line: 75, column: 2)
!10900 = !DILocation(line: 76, column: 20, scope: !10897)
!10901 = !DILocation(line: 76, column: 7, scope: !10898)
!10902 = !DILocation(line: 77, column: 4, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10904, file: !10628, line: 77, column: 4)
!10904 = distinct !DILexicalBlock(scope: !10905, file: !10628, line: 77, column: 4)
!10905 = distinct !DILexicalBlock(scope: !10897, file: !10628, line: 76, column: 28)
!10906 = !DILocation(line: 77, column: 4, scope: !10904)
!10907 = !DILocation(line: 77, column: 4, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10903, file: !10628, line: 77, column: 4)
!10909 = !DILocation(line: 78, column: 4, scope: !10905)
!10910 = !DILocation(line: 79, column: 3, scope: !10905)
!10911 = !DILocation(line: 75, column: 2, scope: !10899)
!10912 = !DILocation(line: 81, column: 1, scope: !10883)
!10913 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7553, file: !7553, line: 710, type: !9131, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10914)
!10914 = !{!10915}
!10915 = !DILocalVariable(name: "Line", arg: 1, scope: !10913, file: !7553, line: 710, type: !113)
!10916 = !DILocation(line: 0, scope: !10913)
!10917 = !DILocation(line: 712, column: 21, scope: !10913)
!10918 = !DILocation(line: 0, scope: !10867, inlinedAt: !10919)
!10919 = distinct !DILocation(line: 712, column: 76, scope: !10913)
!10920 = !DILocation(line: 380, column: 4, scope: !10867, inlinedAt: !10919)
!10921 = !DILocation(line: 0, scope: !10875, inlinedAt: !10922)
!10922 = distinct !DILocation(line: 712, column: 76, scope: !10913)
!10923 = !DILocation(line: 414, column: 7, scope: !10875, inlinedAt: !10922)
!10924 = !DILocation(line: 712, column: 73, scope: !10913)
!10925 = !DILocation(line: 712, column: 3, scope: !10913)
!10926 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10927, file: !10927, line: 910, type: !10928, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10930)
!10927 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10928 = !DISubroutineType(types: !10929)
!10929 = !{null, !1289, !113}
!10930 = !{!10931, !10932}
!10931 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10926, file: !10927, line: 910, type: !1289)
!10932 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10926, file: !10927, line: 910, type: !113)
!10933 = !DILocation(line: 0, scope: !10926)
!10934 = !DILocation(line: 912, column: 3, scope: !10926)
!10935 = !DILocation(line: 913, column: 1, scope: !10926)
!10936 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10927, file: !10927, line: 823, type: !10937, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10939)
!10937 = !DISubroutineType(types: !10938)
!10938 = !{!113, !1289}
!10939 = !{!10940}
!10940 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10936, file: !10927, line: 823, type: !1289)
!10941 = !DILocation(line: 0, scope: !10936)
!10942 = !DILocation(line: 825, column: 21, scope: !10936)
!10943 = !DILocation(line: 825, column: 3, scope: !10936)
!10944 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10927, file: !10927, line: 812, type: !10928, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10945)
!10945 = !{!10946, !10947}
!10946 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10944, file: !10927, line: 812, type: !1289)
!10947 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10944, file: !10927, line: 812, type: !113)
!10948 = !DILocation(line: 0, scope: !10944)
!10949 = !DILocation(line: 814, column: 3, scope: !10944)
!10950 = !DILocation(line: 815, column: 1, scope: !10944)
!10951 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10927, file: !10927, line: 771, type: !10937, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10952)
!10952 = !{!10953}
!10953 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10951, file: !10927, line: 771, type: !1289)
!10954 = !DILocation(line: 0, scope: !10951)
!10955 = !DILocation(line: 773, column: 21, scope: !10951)
!10956 = !DILocation(line: 773, column: 3, scope: !10951)
!10957 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1358, file: !1358, line: 47, type: !10958, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !10960)
!10958 = !DISubroutineType(types: !10959)
!10959 = !{!105, !1232, !428}
!10960 = !{!10961, !10962}
!10961 = !DILocalVariable(name: "flags", arg: 1, scope: !10957, file: !1358, line: 47, type: !1232)
!10962 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10957, file: !1358, line: 47, type: !428)
!10963 = !DILocation(line: 0, scope: !10957)
!10964 = !DILocation(line: 50, column: 13, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10957, file: !1358, line: 50, column: 6)
!10966 = !DILocation(line: 50, column: 28, scope: !10965)
!10967 = !DILocation(line: 50, column: 6, scope: !10957)
!10968 = !DILocation(line: 53, column: 11, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10965, file: !1358, line: 50, column: 34)
!10970 = !DILocation(line: 55, column: 14, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10969, file: !1358, line: 55, column: 7)
!10972 = !DILocation(line: 55, column: 35, scope: !10971)
!10973 = !DILocation(line: 55, column: 7, scope: !10969)
!10974 = !DILocation(line: 56, column: 14, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !1358, line: 56, column: 8)
!10976 = distinct !DILexicalBlock(scope: !10971, file: !1358, line: 55, column: 41)
!10977 = !DILocation(line: 56, column: 8, scope: !10976)
!10978 = !DILocation(line: 0, scope: !10971)
!10979 = !DILocation(line: 66, column: 14, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10969, file: !1358, line: 66, column: 7)
!10981 = !DILocation(line: 66, column: 30, scope: !10980)
!10982 = !DILocation(line: 66, column: 7, scope: !10969)
!10983 = !DILocation(line: 67, column: 12, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10980, file: !1358, line: 66, column: 36)
!10985 = !DILocation(line: 68, column: 3, scope: !10984)
!10986 = !DILocation(line: 68, column: 21, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10980, file: !1358, line: 68, column: 14)
!10988 = !DILocation(line: 68, column: 39, scope: !10987)
!10989 = !DILocation(line: 68, column: 14, scope: !10980)
!10990 = !DILocation(line: 69, column: 12, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10987, file: !1358, line: 68, column: 45)
!10992 = !DILocation(line: 70, column: 3, scope: !10991)
!10993 = !DILocation(line: 72, column: 21, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10965, file: !1358, line: 72, column: 14)
!10995 = !DILocation(line: 72, column: 35, scope: !10994)
!10996 = !DILocation(line: 72, column: 14, scope: !10965)
!10997 = !DILocation(line: 77, column: 14, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10999, file: !1358, line: 77, column: 7)
!10999 = distinct !DILexicalBlock(scope: !10994, file: !1358, line: 72, column: 41)
!11000 = !DILocation(line: 77, column: 30, scope: !10998)
!11001 = !DILocation(line: 77, column: 7, scope: !10999)
!11002 = !DILocation(line: 0, scope: !10965)
!11003 = !DILocation(line: 90, column: 1, scope: !10957)
!11004 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1358, file: !1358, line: 157, type: !11005, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !11007)
!11005 = !DISubroutineType(types: !11006)
!11006 = !{null, !1216, !105, !105, !105}
!11007 = !{!11008, !11009, !11010, !11011, !11012, !11013, !11014, !11015, !11016, !11017, !11018}
!11008 = !DILocalVariable(name: "dev", arg: 1, scope: !11004, file: !1358, line: 157, type: !1216)
!11009 = !DILocalVariable(name: "pin", arg: 2, scope: !11004, file: !1358, line: 157, type: !105)
!11010 = !DILocalVariable(name: "conf", arg: 3, scope: !11004, file: !1358, line: 158, type: !105)
!11011 = !DILocalVariable(name: "func", arg: 4, scope: !11004, file: !1358, line: 158, type: !105)
!11012 = !DILocalVariable(name: "cfg", scope: !11004, file: !1358, line: 160, type: !10512)
!11013 = !DILocalVariable(name: "gpio", scope: !11004, file: !1358, line: 161, type: !1289)
!11014 = !DILocalVariable(name: "pin_ll", scope: !11004, file: !1358, line: 163, type: !105)
!11015 = !DILocalVariable(name: "mode", scope: !11004, file: !1358, line: 227, type: !32)
!11016 = !DILocalVariable(name: "otype", scope: !11004, file: !1358, line: 227, type: !32)
!11017 = !DILocalVariable(name: "ospeed", scope: !11004, file: !1358, line: 227, type: !32)
!11018 = !DILocalVariable(name: "pupd", scope: !11004, file: !1358, line: 227, type: !32)
!11019 = !DILocation(line: 0, scope: !11004)
!11020 = !DILocation(line: 160, column: 45, scope: !11004)
!11021 = !DILocation(line: 161, column: 44, scope: !11004)
!11022 = !DILocation(line: 163, column: 15, scope: !11004)
!11023 = !DILocation(line: 229, column: 14, scope: !11004)
!11024 = !DILocation(line: 246, column: 47, scope: !11004)
!11025 = !DILocation(line: 246, column: 2, scope: !11004)
!11026 = !DILocation(line: 248, column: 43, scope: !11004)
!11027 = !DILocation(line: 248, column: 2, scope: !11004)
!11028 = !DILocation(line: 250, column: 40, scope: !11004)
!11029 = !DILocation(line: 250, column: 2, scope: !11004)
!11030 = !DILocation(line: 252, column: 11, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11004, file: !1358, line: 252, column: 6)
!11032 = !DILocation(line: 252, column: 6, scope: !11004)
!11033 = !DILocation(line: 253, column: 11, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !1358, line: 253, column: 7)
!11035 = distinct !DILexicalBlock(scope: !11031, file: !1358, line: 252, column: 36)
!11036 = !DILocation(line: 253, column: 7, scope: !11035)
!11037 = !DILocation(line: 254, column: 4, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11034, file: !1358, line: 253, column: 16)
!11039 = !DILocation(line: 255, column: 3, scope: !11038)
!11040 = !DILocation(line: 256, column: 4, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11034, file: !1358, line: 255, column: 10)
!11042 = !DILocation(line: 260, column: 40, scope: !11004)
!11043 = !DILocation(line: 260, column: 2, scope: !11004)
!11044 = !DILocation(line: 265, column: 1, scope: !11004)
!11045 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1358, file: !1358, line: 137, type: !10847, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !11046)
!11046 = !{!11047, !11048}
!11047 = !DILocalVariable(name: "pin", arg: 1, scope: !11045, file: !1358, line: 137, type: !105)
!11048 = !DILocalVariable(name: "pinval", scope: !11045, file: !1358, line: 139, type: !113)
!11049 = !DILocation(line: 0, scope: !11045)
!11050 = !DILocation(line: 149, column: 13, scope: !11045)
!11051 = !DILocation(line: 151, column: 2, scope: !11045)
!11052 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10927, file: !10927, line: 342, type: !11053, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !11055)
!11053 = !DISubroutineType(types: !11054)
!11054 = !{null, !1289, !113, !113}
!11055 = !{!11056, !11057, !11058}
!11056 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11052, file: !10927, line: 342, type: !1289)
!11057 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11052, file: !10927, line: 342, type: !113)
!11058 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11052, file: !10927, line: 342, type: !113)
!11059 = !DILocation(line: 0, scope: !11052)
!11060 = !DILocation(line: 344, column: 3, scope: !11052)
!11061 = !DILocation(line: 345, column: 1, scope: !11052)
!11062 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10927, file: !10927, line: 413, type: !11053, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !11063)
!11063 = !{!11064, !11065, !11066}
!11064 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11062, file: !10927, line: 413, type: !1289)
!11065 = !DILocalVariable(name: "Pin", arg: 2, scope: !11062, file: !10927, line: 413, type: !113)
!11066 = !DILocalVariable(name: "Speed", arg: 3, scope: !11062, file: !10927, line: 413, type: !113)
!11067 = !DILocation(line: 0, scope: !11062)
!11068 = !DILocation(line: 415, column: 3, scope: !11062)
!11069 = !DILocation(line: 0, scope: !10867, inlinedAt: !11070)
!11070 = distinct !DILocation(line: 415, column: 3, scope: !11062)
!11071 = !DILocation(line: 380, column: 4, scope: !10867, inlinedAt: !11070)
!11072 = !DILocation(line: 0, scope: !10875, inlinedAt: !11073)
!11073 = distinct !DILocation(line: 415, column: 3, scope: !11062)
!11074 = !DILocation(line: 414, column: 7, scope: !10875, inlinedAt: !11073)
!11075 = !DILocation(line: 0, scope: !10867, inlinedAt: !11076)
!11076 = distinct !DILocation(line: 415, column: 3, scope: !11062)
!11077 = !DILocation(line: 0, scope: !10875, inlinedAt: !11078)
!11078 = distinct !DILocation(line: 415, column: 3, scope: !11062)
!11079 = !DILocation(line: 417, column: 1, scope: !11062)
!11080 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10927, file: !10927, line: 484, type: !11053, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !11081)
!11081 = !{!11082, !11083, !11084}
!11082 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11080, file: !10927, line: 484, type: !1289)
!11083 = !DILocalVariable(name: "Pin", arg: 2, scope: !11080, file: !10927, line: 484, type: !113)
!11084 = !DILocalVariable(name: "Pull", arg: 3, scope: !11080, file: !10927, line: 484, type: !113)
!11085 = !DILocation(line: 0, scope: !11080)
!11086 = !DILocation(line: 486, column: 3, scope: !11080)
!11087 = !DILocation(line: 0, scope: !10867, inlinedAt: !11088)
!11088 = distinct !DILocation(line: 486, column: 3, scope: !11080)
!11089 = !DILocation(line: 380, column: 4, scope: !10867, inlinedAt: !11088)
!11090 = !DILocation(line: 0, scope: !10875, inlinedAt: !11091)
!11091 = distinct !DILocation(line: 486, column: 3, scope: !11080)
!11092 = !DILocation(line: 414, column: 7, scope: !10875, inlinedAt: !11091)
!11093 = !DILocation(line: 0, scope: !10867, inlinedAt: !11094)
!11094 = distinct !DILocation(line: 486, column: 3, scope: !11080)
!11095 = !DILocation(line: 0, scope: !10875, inlinedAt: !11096)
!11096 = distinct !DILocation(line: 486, column: 3, scope: !11080)
!11097 = !DILocation(line: 487, column: 1, scope: !11080)
!11098 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10927, file: !10927, line: 556, type: !11053, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !11099)
!11099 = !{!11100, !11101, !11102}
!11100 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11098, file: !10927, line: 556, type: !1289)
!11101 = !DILocalVariable(name: "Pin", arg: 2, scope: !11098, file: !10927, line: 556, type: !113)
!11102 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11098, file: !10927, line: 556, type: !113)
!11103 = !DILocation(line: 0, scope: !11098)
!11104 = !DILocation(line: 558, column: 3, scope: !11098)
!11105 = !DILocation(line: 0, scope: !10867, inlinedAt: !11106)
!11106 = distinct !DILocation(line: 558, column: 3, scope: !11098)
!11107 = !DILocation(line: 380, column: 4, scope: !10867, inlinedAt: !11106)
!11108 = !DILocation(line: 0, scope: !10875, inlinedAt: !11109)
!11109 = distinct !DILocation(line: 558, column: 3, scope: !11098)
!11110 = !DILocation(line: 414, column: 7, scope: !10875, inlinedAt: !11109)
!11111 = !DILocation(line: 0, scope: !10867, inlinedAt: !11112)
!11112 = distinct !DILocation(line: 558, column: 3, scope: !11098)
!11113 = !DILocation(line: 0, scope: !10875, inlinedAt: !11114)
!11114 = distinct !DILocation(line: 558, column: 3, scope: !11098)
!11115 = !DILocation(line: 560, column: 1, scope: !11098)
!11116 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10927, file: !10927, line: 633, type: !11053, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !11117)
!11117 = !{!11118, !11119, !11120}
!11118 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11116, file: !10927, line: 633, type: !1289)
!11119 = !DILocalVariable(name: "Pin", arg: 2, scope: !11116, file: !10927, line: 633, type: !113)
!11120 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11116, file: !10927, line: 633, type: !113)
!11121 = !DILocation(line: 0, scope: !11116)
!11122 = !DILocation(line: 635, column: 3, scope: !11116)
!11123 = !DILocation(line: 0, scope: !10867, inlinedAt: !11124)
!11124 = distinct !DILocation(line: 635, column: 3, scope: !11116)
!11125 = !DILocation(line: 380, column: 4, scope: !10867, inlinedAt: !11124)
!11126 = !DILocation(line: 0, scope: !10875, inlinedAt: !11127)
!11127 = distinct !DILocation(line: 635, column: 3, scope: !11116)
!11128 = !DILocation(line: 414, column: 7, scope: !10875, inlinedAt: !11127)
!11129 = !DILocation(line: 0, scope: !10867, inlinedAt: !11130)
!11130 = distinct !DILocation(line: 635, column: 3, scope: !11116)
!11131 = !DILocation(line: 0, scope: !10875, inlinedAt: !11132)
!11132 = distinct !DILocation(line: 635, column: 3, scope: !11116)
!11133 = !DILocation(line: 637, column: 1, scope: !11116)
!11134 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10927, file: !10927, line: 273, type: !11053, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !11135)
!11135 = !{!11136, !11137, !11138}
!11136 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11134, file: !10927, line: 273, type: !1289)
!11137 = !DILocalVariable(name: "Pin", arg: 2, scope: !11134, file: !10927, line: 273, type: !113)
!11138 = !DILocalVariable(name: "Mode", arg: 3, scope: !11134, file: !10927, line: 273, type: !113)
!11139 = !DILocation(line: 0, scope: !11134)
!11140 = !DILocation(line: 275, column: 3, scope: !11134)
!11141 = !DILocation(line: 0, scope: !10867, inlinedAt: !11142)
!11142 = distinct !DILocation(line: 275, column: 3, scope: !11134)
!11143 = !DILocation(line: 380, column: 4, scope: !10867, inlinedAt: !11142)
!11144 = !DILocation(line: 0, scope: !10875, inlinedAt: !11145)
!11145 = distinct !DILocation(line: 275, column: 3, scope: !11134)
!11146 = !DILocation(line: 414, column: 7, scope: !10875, inlinedAt: !11145)
!11147 = !DILocation(line: 0, scope: !10867, inlinedAt: !11148)
!11148 = distinct !DILocation(line: 275, column: 3, scope: !11134)
!11149 = !DILocation(line: 0, scope: !10875, inlinedAt: !11150)
!11150 = distinct !DILocation(line: 275, column: 3, scope: !11134)
!11151 = !DILocation(line: 276, column: 1, scope: !11134)
!11152 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1358, file: !1358, line: 698, type: !1371, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !11153)
!11153 = !{!11154, !11155, !11156}
!11154 = !DILocalVariable(name: "dev", arg: 1, scope: !11152, file: !1358, line: 698, type: !1216)
!11155 = !DILocalVariable(name: "data", scope: !11152, file: !1358, line: 700, type: !10579)
!11156 = !DILocalVariable(name: "ret", scope: !11152, file: !1358, line: 701, type: !105)
!11157 = !DILocation(line: 0, scope: !11152)
!11158 = !DILocation(line: 700, column: 38, scope: !11152)
!11159 = !DILocation(line: 703, column: 8, scope: !11152)
!11160 = !DILocation(line: 703, column: 12, scope: !11152)
!11161 = !DILocation(line: 705, column: 7, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11152, file: !1358, line: 705, column: 6)
!11163 = !DILocation(line: 705, column: 6, scope: !11152)
!11164 = !DILocation(line: 722, column: 8, scope: !11152)
!11165 = !DILocation(line: 723, column: 10, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11152, file: !1358, line: 723, column: 6)
!11167 = !DILocation(line: 723, column: 6, scope: !11152)
!11168 = !DILocation(line: 731, column: 1, scope: !11152)
!11169 = distinct !DISubprogram(name: "device_is_ready", scope: !10357, file: !10357, line: 47, type: !11170, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !11172)
!11170 = !DISubroutineType(types: !11171)
!11171 = !{!492, !1216}
!11172 = !{!11173}
!11173 = !DILocalVariable(name: "dev", arg: 1, scope: !11169, file: !10357, line: 47, type: !1216)
!11174 = !DILocation(line: 0, scope: !11169)
!11175 = !DILocation(line: 55, column: 2, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11169, file: !10357, line: 55, column: 2)
!11177 = !{i64 2155288927}
!11178 = !DILocation(line: 56, column: 9, scope: !11169)
!11179 = !DILocation(line: 56, column: 2, scope: !11169)
!11180 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1358, file: !1358, line: 270, type: !11181, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !11183)
!11181 = !DISubroutineType(types: !11182)
!11182 = !{!105, !1216, !492}
!11183 = !{!11184, !11185, !11186, !11187, !11188}
!11184 = !DILocalVariable(name: "dev", arg: 1, scope: !11180, file: !1358, line: 270, type: !1216)
!11185 = !DILocalVariable(name: "on", arg: 2, scope: !11180, file: !1358, line: 270, type: !492)
!11186 = !DILocalVariable(name: "cfg", scope: !11180, file: !1358, line: 272, type: !10512)
!11187 = !DILocalVariable(name: "ret", scope: !11180, file: !1358, line: 273, type: !105)
!11188 = !DILocalVariable(name: "clk", scope: !11180, file: !1358, line: 278, type: !10814)
!11189 = !DILocation(line: 0, scope: !11180)
!11190 = !DILocation(line: 272, column: 45, scope: !11180)
!11191 = !DILocation(line: 282, column: 38, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11193, file: !1358, line: 280, column: 10)
!11193 = distinct !DILexicalBlock(scope: !11180, file: !1358, line: 280, column: 6)
!11194 = !DILocation(line: 282, column: 6, scope: !11192)
!11195 = !DILocation(line: 281, column: 9, scope: !11192)
!11196 = !DILocation(line: 293, column: 1, scope: !11180)
!11197 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !11170, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !11198)
!11198 = !{!11199}
!11199 = !DILocalVariable(name: "dev", arg: 1, scope: !11197, file: !481, line: 730, type: !1216)
!11200 = !DILocation(line: 0, scope: !11197)
!11201 = !DILocation(line: 732, column: 9, scope: !11197)
!11202 = !DILocation(line: 732, column: 2, scope: !11197)
!11203 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1358, file: !1358, line: 496, type: !11204, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1187, retainedNodes: !11206)
!11204 = !DISubroutineType(types: !11205)
!11205 = !{!105, !1216, !105, !105, !105}
!11206 = !{!11207, !11208, !11209, !11210, !11211, !11212}
!11207 = !DILocalVariable(name: "dev", arg: 1, scope: !11203, file: !1358, line: 496, type: !1216)
!11208 = !DILocalVariable(name: "pin", arg: 2, scope: !11203, file: !1358, line: 496, type: !105)
!11209 = !DILocalVariable(name: "conf", arg: 3, scope: !11203, file: !1358, line: 496, type: !105)
!11210 = !DILocalVariable(name: "func", arg: 4, scope: !11203, file: !1358, line: 496, type: !105)
!11211 = !DILocalVariable(name: "ret", scope: !11203, file: !1358, line: 498, type: !105)
!11212 = !DILocalVariable(name: "gpio_out", scope: !11213, file: !1358, line: 508, type: !113)
!11213 = distinct !DILexicalBlock(scope: !11214, file: !1358, line: 507, column: 27)
!11214 = distinct !DILexicalBlock(scope: !11203, file: !1358, line: 507, column: 6)
!11215 = !DILocation(line: 0, scope: !11203)
!11216 = !DILocation(line: 505, column: 2, scope: !11203)
!11217 = !DILocation(line: 507, column: 11, scope: !11214)
!11218 = !DILocation(line: 507, column: 6, scope: !11203)
!11219 = !DILocation(line: 508, column: 28, scope: !11213)
!11220 = !DILocation(line: 0, scope: !11213)
!11221 = !DILocation(line: 510, column: 16, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11213, file: !1358, line: 510, column: 7)
!11223 = !DILocation(line: 0, scope: !11222)
!11224 = !DILocation(line: 510, column: 7, scope: !11213)
!11225 = !DILocation(line: 511, column: 4, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11222, file: !1358, line: 510, column: 32)
!11227 = !DILocation(line: 512, column: 3, scope: !11226)
!11228 = !DILocation(line: 513, column: 4, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11230, file: !1358, line: 512, column: 39)
!11230 = distinct !DILexicalBlock(scope: !11222, file: !1358, line: 512, column: 14)
!11231 = !DILocation(line: 514, column: 3, scope: !11229)
!11232 = !DILocation(line: 518, column: 1, scope: !11203)
!11233 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1631, file: !1631, line: 526, type: !1534, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11234)
!11234 = !{!11235, !11236, !11237}
!11235 = !DILocalVariable(name: "dev", arg: 1, scope: !11233, file: !1631, line: 526, type: !1536)
!11236 = !DILocalVariable(name: "c", arg: 2, scope: !11233, file: !1631, line: 526, type: !1148)
!11237 = !DILocalVariable(name: "config", scope: !11233, file: !1631, line: 528, type: !11238)
!11238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 32)
!11239 = !DILocation(line: 0, scope: !11233)
!11240 = !DILocation(line: 528, column: 48, scope: !11233)
!11241 = !DILocation(line: 531, column: 40, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11233, file: !1631, line: 531, column: 6)
!11243 = !DILocation(line: 531, column: 6, scope: !11242)
!11244 = !DILocation(line: 531, column: 6, scope: !11233)
!11245 = !DILocation(line: 532, column: 34, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11242, file: !1631, line: 531, column: 48)
!11247 = !DILocation(line: 532, column: 3, scope: !11246)
!11248 = !DILocation(line: 533, column: 2, scope: !11246)
!11249 = !DILocation(line: 539, column: 42, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11233, file: !1631, line: 539, column: 6)
!11251 = !DILocation(line: 539, column: 7, scope: !11250)
!11252 = !DILocation(line: 539, column: 6, scope: !11233)
!11253 = !DILocation(line: 543, column: 52, scope: !11233)
!11254 = !DILocation(line: 543, column: 22, scope: !11233)
!11255 = !DILocation(line: 543, column: 5, scope: !11233)
!11256 = !DILocation(line: 545, column: 2, scope: !11233)
!11257 = !DILocation(line: 546, column: 1, scope: !11233)
!11258 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1631, file: !1631, line: 548, type: !1553, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11259)
!11259 = !{!11260, !11261, !11262, !11263}
!11260 = !DILocalVariable(name: "dev", arg: 1, scope: !11258, file: !1631, line: 548, type: !1536)
!11261 = !DILocalVariable(name: "c", arg: 2, scope: !11258, file: !1631, line: 549, type: !170)
!11262 = !DILocalVariable(name: "config", scope: !11258, file: !1631, line: 551, type: !11238)
!11263 = !DILocalVariable(name: "key", scope: !11258, file: !1631, line: 555, type: !32)
!11264 = !DILocation(line: 0, scope: !11258)
!11265 = !DILocation(line: 551, column: 48, scope: !11258)
!11266 = !DILocation(line: 562, column: 2, scope: !11258)
!11267 = !DILocation(line: 563, column: 41, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11269, file: !1631, line: 563, column: 7)
!11269 = distinct !DILexicalBlock(scope: !11258, file: !1631, line: 562, column: 12)
!11270 = !DILocation(line: 563, column: 7, scope: !11268)
!11271 = !DILocation(line: 563, column: 7, scope: !11269)
!11272 = !DILocation(line: 55, column: 2, scope: !11273, inlinedAt: !11277)
!11273 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7532, file: !7532, line: 42, type: !7533, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11274)
!11274 = !{!11275, !11276}
!11275 = !DILocalVariable(name: "key", scope: !11273, file: !7532, line: 44, type: !32)
!11276 = !DILocalVariable(name: "tmp", scope: !11273, file: !7532, line: 53, type: !32)
!11277 = distinct !DILocation(line: 564, column: 10, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11268, file: !1631, line: 563, column: 49)
!11279 = !{i64 2331074}
!11280 = !DILocation(line: 0, scope: !11273, inlinedAt: !11277)
!11281 = !DILocation(line: 565, column: 42, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11278, file: !1631, line: 565, column: 8)
!11283 = !DILocation(line: 565, column: 8, scope: !11282)
!11284 = !DILocation(line: 565, column: 8, scope: !11278)
!11285 = !DILocalVariable(name: "key", arg: 1, scope: !11286, file: !7532, line: 84, type: !32)
!11286 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7532, file: !7532, line: 84, type: !7543, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11287)
!11287 = !{!11285}
!11288 = !DILocation(line: 0, scope: !11286, inlinedAt: !11289)
!11289 = distinct !DILocation(line: 568, column: 4, scope: !11278)
!11290 = !DILocation(line: 95, column: 2, scope: !11286, inlinedAt: !11289)
!11291 = !{i64 2331891}
!11292 = !DILocation(line: 569, column: 3, scope: !11278)
!11293 = distinct !{!11293, !11266, !11294}
!11294 = !DILocation(line: 570, column: 2, scope: !11258)
!11295 = !DILocation(line: 592, column: 33, scope: !11258)
!11296 = !DILocation(line: 592, column: 2, scope: !11258)
!11297 = !DILocation(line: 0, scope: !11286, inlinedAt: !11298)
!11298 = distinct !DILocation(line: 593, column: 2, scope: !11258)
!11299 = !DILocation(line: 95, column: 2, scope: !11286, inlinedAt: !11298)
!11300 = !DILocation(line: 594, column: 1, scope: !11258)
!11301 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1631, file: !1631, line: 596, type: !1557, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11302)
!11302 = !{!11303, !11304, !11305}
!11303 = !DILocalVariable(name: "dev", arg: 1, scope: !11301, file: !1631, line: 596, type: !1536)
!11304 = !DILocalVariable(name: "config", scope: !11301, file: !1631, line: 598, type: !11238)
!11305 = !DILocalVariable(name: "err", scope: !11301, file: !1631, line: 599, type: !113)
!11306 = !DILocation(line: 0, scope: !11301)
!11307 = !DILocation(line: 598, column: 48, scope: !11301)
!11308 = !DILocation(line: 606, column: 40, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11301, file: !1631, line: 606, column: 6)
!11310 = !DILocation(line: 606, column: 6, scope: !11309)
!11311 = !DILocation(line: 606, column: 6, scope: !11301)
!11312 = !DILocation(line: 610, column: 39, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11301, file: !1631, line: 610, column: 6)
!11314 = !DILocation(line: 610, column: 6, scope: !11313)
!11315 = !DILocation(line: 610, column: 6, scope: !11301)
!11316 = !DILocation(line: 614, column: 39, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11301, file: !1631, line: 614, column: 6)
!11318 = !DILocation(line: 614, column: 6, scope: !11317)
!11319 = !DILocation(line: 614, column: 6, scope: !11301)
!11320 = !DILocation(line: 619, column: 40, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11301, file: !1631, line: 619, column: 6)
!11322 = !DILocation(line: 619, column: 6, scope: !11321)
!11323 = !DILocation(line: 619, column: 6, scope: !11301)
!11324 = !DILocation(line: 623, column: 10, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11301, file: !1631, line: 623, column: 6)
!11326 = !DILocation(line: 623, column: 6, scope: !11301)
!11327 = !DILocation(line: 624, column: 34, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11325, file: !1631, line: 623, column: 24)
!11329 = !DILocation(line: 624, column: 3, scope: !11328)
!11330 = !DILocation(line: 625, column: 2, scope: !11328)
!11331 = !DILocation(line: 632, column: 10, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11301, file: !1631, line: 632, column: 6)
!11333 = !DILocation(line: 632, column: 6, scope: !11301)
!11334 = !DILocation(line: 633, column: 34, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11332, file: !1631, line: 632, column: 32)
!11336 = !DILocation(line: 633, column: 3, scope: !11335)
!11337 = !DILocation(line: 634, column: 2, scope: !11335)
!11338 = !DILocation(line: 636, column: 10, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11301, file: !1631, line: 636, column: 6)
!11340 = !DILocation(line: 636, column: 6, scope: !11301)
!11341 = !DILocation(line: 637, column: 33, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11339, file: !1631, line: 636, column: 31)
!11343 = !DILocation(line: 637, column: 3, scope: !11342)
!11344 = !DILocation(line: 638, column: 2, scope: !11342)
!11345 = !DILocation(line: 640, column: 10, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11301, file: !1631, line: 640, column: 6)
!11347 = !DILocation(line: 640, column: 6, scope: !11301)
!11348 = !DILocation(line: 641, column: 33, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11346, file: !1631, line: 640, column: 32)
!11350 = !DILocation(line: 641, column: 3, scope: !11349)
!11351 = !DILocation(line: 642, column: 2, scope: !11349)
!11352 = !DILocation(line: 646, column: 32, scope: !11301)
!11353 = !DILocation(line: 646, column: 2, scope: !11301)
!11354 = !DILocation(line: 648, column: 2, scope: !11301)
!11355 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1631, file: !1631, line: 419, type: !1561, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11356)
!11356 = !{!11357, !11358, !11359, !11360, !11362, !11363, !11364, !11365}
!11357 = !DILocalVariable(name: "dev", arg: 1, scope: !11355, file: !1631, line: 419, type: !1536)
!11358 = !DILocalVariable(name: "cfg", arg: 2, scope: !11355, file: !1631, line: 420, type: !1563)
!11359 = !DILocalVariable(name: "config", scope: !11355, file: !1631, line: 422, type: !11238)
!11360 = !DILocalVariable(name: "data", scope: !11355, file: !1631, line: 423, type: !11361)
!11361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!11362 = !DILocalVariable(name: "parity", scope: !11355, file: !1631, line: 424, type: !3803)
!11363 = !DILocalVariable(name: "stopbits", scope: !11355, file: !1631, line: 425, type: !3803)
!11364 = !DILocalVariable(name: "databits", scope: !11355, file: !1631, line: 426, type: !3803)
!11365 = !DILocalVariable(name: "flowctrl", scope: !11355, file: !1631, line: 428, type: !3803)
!11366 = !DILocation(line: 0, scope: !11355)
!11367 = !DILocation(line: 422, column: 48, scope: !11355)
!11368 = !DILocation(line: 423, column: 38, scope: !11355)
!11369 = !DILocation(line: 424, column: 56, scope: !11355)
!11370 = !DILocation(line: 424, column: 51, scope: !11355)
!11371 = !DILocation(line: 424, column: 26, scope: !11355)
!11372 = !DILocation(line: 425, column: 60, scope: !11355)
!11373 = !DILocation(line: 425, column: 55, scope: !11355)
!11374 = !DILocation(line: 425, column: 28, scope: !11355)
!11375 = !DILocation(line: 426, column: 60, scope: !11355)
!11376 = !DILocation(line: 426, column: 55, scope: !11355)
!11377 = !DILocation(line: 426, column: 28, scope: !11355)
!11378 = !DILocation(line: 428, column: 58, scope: !11355)
!11379 = !DILocation(line: 428, column: 53, scope: !11355)
!11380 = !DILocation(line: 428, column: 28, scope: !11355)
!11381 = !DILocation(line: 431, column: 44, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11355, file: !1631, line: 431, column: 6)
!11383 = !DILocation(line: 438, column: 22, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11355, file: !1631, line: 437, column: 6)
!11385 = !DILocation(line: 437, column: 6, scope: !11355)
!11386 = !DILocation(line: 448, column: 6, scope: !11355)
!11387 = !DILocation(line: 465, column: 47, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11355, file: !1631, line: 465, column: 6)
!11389 = !DILocation(line: 475, column: 21, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11355, file: !1631, line: 475, column: 6)
!11391 = !DILocation(line: 475, column: 6, scope: !11355)
!11392 = !DILocation(line: 476, column: 8, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11394, file: !1631, line: 476, column: 7)
!11394 = distinct !DILexicalBlock(scope: !11390, file: !1631, line: 475, column: 49)
!11395 = !DILocation(line: 477, column: 34, scope: !11393)
!11396 = !DILocation(line: 476, column: 7, scope: !11394)
!11397 = !DILocation(line: 482, column: 27, scope: !11355)
!11398 = !DILocation(line: 482, column: 2, scope: !11355)
!11399 = !DILocation(line: 484, column: 16, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11355, file: !1631, line: 484, column: 6)
!11401 = !DILocation(line: 484, column: 13, scope: !11400)
!11402 = !DILocation(line: 484, column: 6, scope: !11355)
!11403 = !DILocation(line: 485, column: 3, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11400, file: !1631, line: 484, column: 44)
!11405 = !DILocation(line: 486, column: 2, scope: !11404)
!11406 = !DILocation(line: 488, column: 18, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11355, file: !1631, line: 488, column: 6)
!11408 = !DILocation(line: 488, column: 15, scope: !11407)
!11409 = !DILocation(line: 488, column: 6, scope: !11355)
!11410 = !DILocation(line: 489, column: 3, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11407, file: !1631, line: 488, column: 48)
!11412 = !DILocation(line: 490, column: 2, scope: !11411)
!11413 = !DILocation(line: 492, column: 18, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11355, file: !1631, line: 492, column: 6)
!11415 = !DILocation(line: 492, column: 15, scope: !11414)
!11416 = !DILocation(line: 492, column: 6, scope: !11355)
!11417 = !DILocation(line: 493, column: 3, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11414, file: !1631, line: 492, column: 48)
!11419 = !DILocation(line: 494, column: 2, scope: !11418)
!11420 = !DILocation(line: 496, column: 18, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11355, file: !1631, line: 496, column: 6)
!11422 = !DILocation(line: 496, column: 15, scope: !11421)
!11423 = !DILocation(line: 496, column: 6, scope: !11355)
!11424 = !DILocation(line: 497, column: 3, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11421, file: !1631, line: 496, column: 46)
!11426 = !DILocation(line: 498, column: 2, scope: !11425)
!11427 = !DILocation(line: 500, column: 11, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11355, file: !1631, line: 500, column: 6)
!11429 = !DILocation(line: 500, column: 29, scope: !11428)
!11430 = !DILocation(line: 500, column: 20, scope: !11428)
!11431 = !DILocation(line: 500, column: 6, scope: !11355)
!11432 = !DILocation(line: 501, column: 3, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11428, file: !1631, line: 500, column: 40)
!11434 = !DILocation(line: 502, column: 26, scope: !11433)
!11435 = !DILocation(line: 502, column: 19, scope: !11433)
!11436 = !DILocation(line: 503, column: 2, scope: !11433)
!11437 = !DILocation(line: 505, column: 26, scope: !11355)
!11438 = !DILocation(line: 505, column: 2, scope: !11355)
!11439 = !DILocation(line: 506, column: 2, scope: !11355)
!11440 = !DILocation(line: 507, column: 1, scope: !11355)
!11441 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1631, file: !1631, line: 509, type: !1574, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11442)
!11442 = !{!11443, !11444, !11445}
!11443 = !DILocalVariable(name: "dev", arg: 1, scope: !11441, file: !1631, line: 509, type: !1536)
!11444 = !DILocalVariable(name: "cfg", arg: 2, scope: !11441, file: !1631, line: 510, type: !1576)
!11445 = !DILocalVariable(name: "data", scope: !11441, file: !1631, line: 512, type: !11361)
!11446 = !DILocation(line: 0, scope: !11441)
!11447 = !DILocation(line: 512, column: 38, scope: !11441)
!11448 = !DILocation(line: 514, column: 24, scope: !11441)
!11449 = !DILocation(line: 514, column: 7, scope: !11441)
!11450 = !DILocation(line: 514, column: 16, scope: !11441)
!11451 = !DILocation(line: 515, column: 41, scope: !11441)
!11452 = !{i32 0, i32 1537}
!11453 = !DILocation(line: 515, column: 16, scope: !11441)
!11454 = !DILocation(line: 515, column: 7, scope: !11441)
!11455 = !DILocation(line: 515, column: 14, scope: !11441)
!11456 = !DILocation(line: 517, column: 3, scope: !11441)
!11457 = !{i32 0, i32 12289}
!11458 = !DILocation(line: 516, column: 19, scope: !11441)
!11459 = !DILocation(line: 516, column: 7, scope: !11441)
!11460 = !DILocation(line: 516, column: 17, scope: !11441)
!11461 = !DILocation(line: 519, column: 3, scope: !11441)
!11462 = !DILocation(line: 519, column: 33, scope: !11441)
!11463 = !DILocation(line: 518, column: 19, scope: !11441)
!11464 = !DILocation(line: 518, column: 7, scope: !11441)
!11465 = !DILocation(line: 518, column: 17, scope: !11441)
!11466 = !DILocation(line: 521, column: 3, scope: !11441)
!11467 = !{i32 0, i32 769}
!11468 = !DILocation(line: 520, column: 19, scope: !11441)
!11469 = !DILocation(line: 520, column: 7, scope: !11441)
!11470 = !DILocation(line: 520, column: 17, scope: !11441)
!11471 = !DILocation(line: 522, column: 2, scope: !11441)
!11472 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1631, file: !1631, line: 205, type: !11473, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11475)
!11473 = !DISubroutineType(types: !11474)
!11474 = !{!113, !1536}
!11475 = !{!11476, !11477}
!11476 = !DILocalVariable(name: "dev", arg: 1, scope: !11472, file: !1631, line: 205, type: !1536)
!11477 = !DILocalVariable(name: "config", scope: !11472, file: !1631, line: 207, type: !11238)
!11478 = !DILocation(line: 0, scope: !11472)
!11479 = !DILocation(line: 207, column: 48, scope: !11472)
!11480 = !DILocation(line: 209, column: 36, scope: !11472)
!11481 = !DILocation(line: 209, column: 9, scope: !11472)
!11482 = !DILocation(line: 209, column: 2, scope: !11472)
!11483 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1631, file: !1631, line: 270, type: !11484, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11486)
!11484 = !DISubroutineType(types: !11485)
!11485 = !{!1502, !113}
!11486 = !{!11487}
!11487 = !DILocalVariable(name: "parity", arg: 1, scope: !11483, file: !1631, line: 270, type: !113)
!11488 = !DILocation(line: 0, scope: !11483)
!11489 = !DILocation(line: 272, column: 2, scope: !11483)
!11490 = !DILocation(line: 281, column: 1, scope: !11483)
!11491 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1631, file: !1631, line: 220, type: !11473, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11492)
!11492 = !{!11493, !11494}
!11493 = !DILocalVariable(name: "dev", arg: 1, scope: !11491, file: !1631, line: 220, type: !1536)
!11494 = !DILocalVariable(name: "config", scope: !11491, file: !1631, line: 222, type: !11238)
!11495 = !DILocation(line: 0, scope: !11491)
!11496 = !DILocation(line: 222, column: 48, scope: !11491)
!11497 = !DILocation(line: 224, column: 44, scope: !11491)
!11498 = !DILocation(line: 224, column: 9, scope: !11491)
!11499 = !DILocation(line: 224, column: 2, scope: !11491)
!11500 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1631, file: !1631, line: 304, type: !11501, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11503)
!11501 = !DISubroutineType(types: !11502)
!11502 = !{!1516, !113}
!11503 = !{!11504}
!11504 = !DILocalVariable(name: "sb", arg: 1, scope: !11500, file: !1631, line: 304, type: !113)
!11505 = !DILocation(line: 0, scope: !11500)
!11506 = !DILocation(line: 306, column: 2, scope: !11500)
!11507 = !DILocation(line: 0, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11500, file: !1631, line: 306, column: 14)
!11509 = !DILocation(line: 323, column: 1, scope: !11500)
!11510 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1631, file: !1631, line: 235, type: !11473, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11511)
!11511 = !{!11512, !11513}
!11512 = !DILocalVariable(name: "dev", arg: 1, scope: !11510, file: !1631, line: 235, type: !1536)
!11513 = !DILocalVariable(name: "config", scope: !11510, file: !1631, line: 237, type: !11238)
!11514 = !DILocation(line: 0, scope: !11510)
!11515 = !DILocation(line: 237, column: 48, scope: !11510)
!11516 = !DILocation(line: 239, column: 39, scope: !11510)
!11517 = !DILocation(line: 239, column: 9, scope: !11510)
!11518 = !DILocation(line: 239, column: 2, scope: !11510)
!11519 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1631, file: !1631, line: 355, type: !11520, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11522)
!11520 = !DISubroutineType(types: !11521)
!11521 = !{!1509, !113, !113}
!11522 = !{!11523, !11524}
!11523 = !DILocalVariable(name: "db", arg: 1, scope: !11519, file: !1631, line: 355, type: !113)
!11524 = !DILocalVariable(name: "p", arg: 2, scope: !11519, file: !1631, line: 356, type: !113)
!11525 = !DILocation(line: 0, scope: !11519)
!11526 = !DILocation(line: 358, column: 2, scope: !11519)
!11527 = !DILocation(line: 384, column: 1, scope: !11519)
!11528 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1631, file: !1631, line: 250, type: !11473, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11529)
!11529 = !{!11530, !11531}
!11530 = !DILocalVariable(name: "dev", arg: 1, scope: !11528, file: !1631, line: 250, type: !1536)
!11531 = !DILocalVariable(name: "config", scope: !11528, file: !1631, line: 252, type: !11238)
!11532 = !DILocation(line: 0, scope: !11528)
!11533 = !DILocation(line: 252, column: 48, scope: !11528)
!11534 = !DILocation(line: 254, column: 40, scope: !11528)
!11535 = !DILocation(line: 254, column: 9, scope: !11528)
!11536 = !DILocation(line: 254, column: 2, scope: !11528)
!11537 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1631, file: !1631, line: 409, type: !11538, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11540)
!11538 = !DISubroutineType(types: !11539)
!11539 = !{!1522, !113}
!11540 = !{!11541}
!11541 = !DILocalVariable(name: "fc", arg: 1, scope: !11537, file: !1631, line: 409, type: !113)
!11542 = !DILocation(line: 0, scope: !11537)
!11543 = !DILocation(line: 411, column: 9, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11537, file: !1631, line: 411, column: 6)
!11545 = !DILocation(line: 416, column: 1, scope: !11537)
!11546 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11547, file: !11547, line: 967, type: !11548, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11550)
!11547 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11548 = !DISubroutineType(types: !11549)
!11549 = !{!113, !1577}
!11550 = !{!11551}
!11551 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11546, file: !11547, line: 967, type: !1577)
!11552 = !DILocation(line: 0, scope: !11546)
!11553 = !DILocation(line: 969, column: 21, scope: !11546)
!11554 = !DILocation(line: 969, column: 3, scope: !11546)
!11555 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11547, file: !11547, line: 601, type: !11548, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11556)
!11556 = !{!11557}
!11557 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11555, file: !11547, line: 601, type: !1577)
!11558 = !DILocation(line: 0, scope: !11555)
!11559 = !DILocation(line: 603, column: 21, scope: !11555)
!11560 = !DILocation(line: 603, column: 3, scope: !11555)
!11561 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11547, file: !11547, line: 820, type: !11548, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11562)
!11562 = !{!11563}
!11563 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11561, file: !11547, line: 820, type: !1577)
!11564 = !DILocation(line: 0, scope: !11561)
!11565 = !DILocation(line: 822, column: 21, scope: !11561)
!11566 = !DILocation(line: 822, column: 3, scope: !11561)
!11567 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11547, file: !11547, line: 547, type: !11548, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11568)
!11568 = !{!11569}
!11569 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11567, file: !11547, line: 547, type: !1577)
!11570 = !DILocation(line: 0, scope: !11567)
!11571 = !DILocation(line: 549, column: 21, scope: !11567)
!11572 = !DILocation(line: 549, column: 3, scope: !11567)
!11573 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1631, file: !1631, line: 257, type: !11574, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11576)
!11574 = !DISubroutineType(types: !11575)
!11575 = !{!113, !1502}
!11576 = !{!11577}
!11577 = !DILocalVariable(name: "parity", arg: 1, scope: !11573, file: !1631, line: 257, type: !1502)
!11578 = !DILocation(line: 0, scope: !11573)
!11579 = !DILocation(line: 259, column: 2, scope: !11573)
!11580 = !DILocation(line: 268, column: 1, scope: !11573)
!11581 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1631, file: !1631, line: 283, type: !11582, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11584)
!11582 = !DISubroutineType(types: !11583)
!11583 = !{!113, !1516}
!11584 = !{!11585}
!11585 = !DILocalVariable(name: "sb", arg: 1, scope: !11581, file: !1631, line: 283, type: !1516)
!11586 = !DILocation(line: 0, scope: !11581)
!11587 = !DILocation(line: 285, column: 2, scope: !11581)
!11588 = !DILocation(line: 0, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11581, file: !1631, line: 285, column: 14)
!11590 = !DILocation(line: 302, column: 1, scope: !11581)
!11591 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1631, file: !1631, line: 325, type: !11592, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11594)
!11592 = !DISubroutineType(types: !11593)
!11593 = !{!113, !1509, !1502}
!11594 = !{!11595, !11596}
!11595 = !DILocalVariable(name: "db", arg: 1, scope: !11591, file: !1631, line: 325, type: !1509)
!11596 = !DILocalVariable(name: "p", arg: 2, scope: !11591, file: !1631, line: 326, type: !1502)
!11597 = !DILocation(line: 0, scope: !11591)
!11598 = !DILocation(line: 328, column: 2, scope: !11591)
!11599 = !DILocation(line: 353, column: 1, scope: !11591)
!11600 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1631, file: !1631, line: 393, type: !11601, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11603)
!11601 = !DISubroutineType(types: !11602)
!11602 = !{!113, !1522}
!11603 = !{!11604}
!11604 = !DILocalVariable(name: "fc", arg: 1, scope: !11600, file: !1631, line: 393, type: !1522)
!11605 = !DILocation(line: 0, scope: !11600)
!11606 = !DILocation(line: 395, column: 9, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11600, file: !1631, line: 395, column: 6)
!11608 = !DILocation(line: 400, column: 1, scope: !11600)
!11609 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11547, file: !11547, line: 424, type: !11610, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11612)
!11610 = !DISubroutineType(types: !11611)
!11611 = !{null, !1577}
!11612 = !{!11613}
!11613 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11609, file: !11547, line: 424, type: !1577)
!11614 = !DILocation(line: 0, scope: !11609)
!11615 = !DILocation(line: 426, column: 3, scope: !11609)
!11616 = !DILocation(line: 427, column: 1, scope: !11609)
!11617 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1631, file: !1631, line: 197, type: !11618, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11620)
!11618 = !DISubroutineType(types: !11619)
!11619 = !{null, !1536, !113}
!11620 = !{!11621, !11622, !11623}
!11621 = !DILocalVariable(name: "dev", arg: 1, scope: !11617, file: !1631, line: 197, type: !1536)
!11622 = !DILocalVariable(name: "parity", arg: 2, scope: !11617, file: !1631, line: 198, type: !113)
!11623 = !DILocalVariable(name: "config", scope: !11617, file: !1631, line: 200, type: !11238)
!11624 = !DILocation(line: 0, scope: !11617)
!11625 = !DILocation(line: 200, column: 48, scope: !11617)
!11626 = !DILocation(line: 202, column: 29, scope: !11617)
!11627 = !DILocation(line: 202, column: 2, scope: !11617)
!11628 = !DILocation(line: 203, column: 1, scope: !11617)
!11629 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1631, file: !1631, line: 212, type: !11618, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11630)
!11630 = !{!11631, !11632, !11633}
!11631 = !DILocalVariable(name: "dev", arg: 1, scope: !11629, file: !1631, line: 212, type: !1536)
!11632 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11629, file: !1631, line: 213, type: !113)
!11633 = !DILocalVariable(name: "config", scope: !11629, file: !1631, line: 215, type: !11238)
!11634 = !DILocation(line: 0, scope: !11629)
!11635 = !DILocation(line: 215, column: 48, scope: !11629)
!11636 = !DILocation(line: 217, column: 37, scope: !11629)
!11637 = !DILocation(line: 217, column: 2, scope: !11629)
!11638 = !DILocation(line: 218, column: 1, scope: !11629)
!11639 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1631, file: !1631, line: 227, type: !11618, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11640)
!11640 = !{!11641, !11642, !11643}
!11641 = !DILocalVariable(name: "dev", arg: 1, scope: !11639, file: !1631, line: 227, type: !1536)
!11642 = !DILocalVariable(name: "databits", arg: 2, scope: !11639, file: !1631, line: 228, type: !113)
!11643 = !DILocalVariable(name: "config", scope: !11639, file: !1631, line: 230, type: !11238)
!11644 = !DILocation(line: 0, scope: !11639)
!11645 = !DILocation(line: 230, column: 48, scope: !11639)
!11646 = !DILocation(line: 232, column: 32, scope: !11639)
!11647 = !DILocation(line: 232, column: 2, scope: !11639)
!11648 = !DILocation(line: 233, column: 1, scope: !11639)
!11649 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1631, file: !1631, line: 242, type: !11618, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11650)
!11650 = !{!11651, !11652, !11653}
!11651 = !DILocalVariable(name: "dev", arg: 1, scope: !11649, file: !1631, line: 242, type: !1536)
!11652 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11649, file: !1631, line: 243, type: !113)
!11653 = !DILocalVariable(name: "config", scope: !11649, file: !1631, line: 245, type: !11238)
!11654 = !DILocation(line: 0, scope: !11649)
!11655 = !DILocation(line: 245, column: 48, scope: !11649)
!11656 = !DILocation(line: 247, column: 33, scope: !11649)
!11657 = !DILocation(line: 247, column: 2, scope: !11649)
!11658 = !DILocation(line: 248, column: 1, scope: !11649)
!11659 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1631, file: !1631, line: 107, type: !11618, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11660)
!11660 = !{!11661, !11662, !11663, !11664, !11665}
!11661 = !DILocalVariable(name: "dev", arg: 1, scope: !11659, file: !1631, line: 107, type: !1536)
!11662 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11659, file: !1631, line: 107, type: !113)
!11663 = !DILocalVariable(name: "config", scope: !11659, file: !1631, line: 109, type: !11238)
!11664 = !DILocalVariable(name: "data", scope: !11659, file: !1631, line: 110, type: !11361)
!11665 = !DILocalVariable(name: "clock_rate", scope: !11659, file: !1631, line: 112, type: !113)
!11666 = !DILocation(line: 0, scope: !11659)
!11667 = !DILocation(line: 109, column: 48, scope: !11659)
!11668 = !DILocation(line: 110, column: 38, scope: !11659)
!11669 = !DILocation(line: 112, column: 2, scope: !11659)
!11670 = !DILocation(line: 123, column: 36, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11672, file: !1631, line: 123, column: 7)
!11672 = distinct !DILexicalBlock(scope: !11673, file: !1631, line: 122, column: 9)
!11673 = distinct !DILexicalBlock(scope: !11659, file: !1631, line: 115, column: 6)
!11674 = !DILocation(line: 124, column: 42, scope: !11671)
!11675 = !DILocation(line: 123, column: 7, scope: !11671)
!11676 = !DILocation(line: 125, column: 22, scope: !11671)
!11677 = !DILocation(line: 123, column: 7, scope: !11672)
!11678 = !DILocation(line: 126, column: 4, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11680, file: !1631, line: 126, column: 4)
!11680 = distinct !DILexicalBlock(scope: !11681, file: !1631, line: 126, column: 4)
!11681 = distinct !DILexicalBlock(scope: !11682, file: !1631, line: 126, column: 4)
!11682 = distinct !DILexicalBlock(scope: !11683, file: !1631, line: 126, column: 4)
!11683 = distinct !DILexicalBlock(scope: !11671, file: !1631, line: 125, column: 27)
!11684 = !DILocation(line: 127, column: 4, scope: !11683)
!11685 = !DILocation(line: 176, column: 36, scope: !11659)
!11686 = !DILocation(line: 176, column: 3, scope: !11659)
!11687 = !DILocation(line: 179, column: 32, scope: !11659)
!11688 = !DILocation(line: 180, column: 10, scope: !11659)
!11689 = !DILocation(line: 179, column: 3, scope: !11659)
!11690 = !DILocation(line: 189, column: 3, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11692, file: !1631, line: 189, column: 3)
!11692 = distinct !DILexicalBlock(scope: !11659, file: !1631, line: 189, column: 3)
!11693 = !DILocation(line: 189, column: 3, scope: !11692)
!11694 = !DILocation(line: 189, column: 3, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11691, file: !1631, line: 189, column: 3)
!11696 = !DILocation(line: 195, column: 1, scope: !11659)
!11697 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11547, file: !11547, line: 410, type: !11610, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11698)
!11698 = !{!11699}
!11699 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11697, file: !11547, line: 410, type: !1577)
!11700 = !DILocation(line: 0, scope: !11697)
!11701 = !DILocation(line: 412, column: 3, scope: !11697)
!11702 = !DILocation(line: 413, column: 1, scope: !11697)
!11703 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !991, file: !991, line: 216, type: !1610, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11704)
!11704 = !{!11705, !11706, !11707, !11708}
!11705 = !DILocalVariable(name: "dev", arg: 1, scope: !11703, file: !991, line: 216, type: !1536)
!11706 = !DILocalVariable(name: "sys", arg: 2, scope: !11703, file: !991, line: 217, type: !1087)
!11707 = !DILocalVariable(name: "rate", arg: 3, scope: !11703, file: !991, line: 218, type: !1043)
!11708 = !DILocalVariable(name: "api", scope: !11703, file: !991, line: 220, type: !1588)
!11709 = !DILocation(line: 0, scope: !11703)
!11710 = !DILocation(line: 221, column: 49, scope: !11703)
!11711 = !DILocation(line: 223, column: 11, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11703, file: !991, line: 223, column: 6)
!11713 = !DILocation(line: 223, column: 20, scope: !11712)
!11714 = !DILocation(line: 223, column: 6, scope: !11703)
!11715 = !DILocation(line: 227, column: 9, scope: !11703)
!11716 = !DILocation(line: 227, column: 2, scope: !11703)
!11717 = !DILocation(line: 228, column: 1, scope: !11703)
!11718 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3516, file: !3516, line: 175, type: !3517, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11719)
!11719 = !{!11720}
!11720 = !DILocalVariable(name: "level", arg: 1, scope: !11718, file: !3516, line: 175, type: !105)
!11721 = !DILocation(line: 0, scope: !11718)
!11722 = !DILocation(line: 177, column: 2, scope: !11718)
!11723 = !DILocation(line: 189, column: 1, scope: !11718)
!11724 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11547, file: !11547, line: 615, type: !11725, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11727)
!11725 = !DISubroutineType(types: !11726)
!11726 = !{null, !1577, !113}
!11727 = !{!11728, !11729}
!11728 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11724, file: !11547, line: 615, type: !1577)
!11729 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11724, file: !11547, line: 615, type: !113)
!11730 = !DILocation(line: 0, scope: !11724)
!11731 = !DILocation(line: 617, column: 3, scope: !11724)
!11732 = !DILocation(line: 618, column: 1, scope: !11724)
!11733 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11547, file: !11547, line: 1020, type: !11734, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11736)
!11734 = !DISubroutineType(types: !11735)
!11735 = !{null, !1577, !113, !113, !113}
!11736 = !{!11737, !11738, !11739, !11740}
!11737 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11733, file: !11547, line: 1020, type: !1577)
!11738 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11733, file: !11547, line: 1020, type: !113)
!11739 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11733, file: !11547, line: 1020, type: !113)
!11740 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11733, file: !11547, line: 1021, type: !113)
!11741 = !DILocation(line: 0, scope: !11733)
!11742 = !DILocation(line: 1029, column: 30, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11744, file: !11547, line: 1028, column: 3)
!11744 = distinct !DILexicalBlock(scope: !11733, file: !11547, line: 1023, column: 7)
!11745 = !DILocation(line: 1029, column: 19, scope: !11743)
!11746 = !DILocation(line: 1029, column: 13, scope: !11743)
!11747 = !DILocation(line: 1029, column: 17, scope: !11743)
!11748 = !DILocation(line: 1031, column: 1, scope: !11733)
!11749 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11547, file: !11547, line: 949, type: !11725, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11750)
!11750 = !{!11751, !11752}
!11751 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11749, file: !11547, line: 949, type: !1577)
!11752 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11749, file: !11547, line: 949, type: !113)
!11753 = !DILocation(line: 0, scope: !11749)
!11754 = !DILocation(line: 951, column: 3, scope: !11749)
!11755 = !DILocation(line: 952, column: 1, scope: !11749)
!11756 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11547, file: !11547, line: 588, type: !11725, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11757)
!11757 = !{!11758, !11759}
!11758 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11756, file: !11547, line: 588, type: !1577)
!11759 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11756, file: !11547, line: 588, type: !113)
!11760 = !DILocation(line: 0, scope: !11756)
!11761 = !DILocation(line: 590, column: 3, scope: !11756)
!11762 = !DILocation(line: 591, column: 1, scope: !11756)
!11763 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11547, file: !11547, line: 805, type: !11725, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11764)
!11764 = !{!11765, !11766}
!11765 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11763, file: !11547, line: 805, type: !1577)
!11766 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11763, file: !11547, line: 805, type: !113)
!11767 = !DILocation(line: 0, scope: !11763)
!11768 = !DILocation(line: 807, column: 3, scope: !11763)
!11769 = !DILocation(line: 808, column: 1, scope: !11763)
!11770 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11547, file: !11547, line: 532, type: !11725, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11771)
!11771 = !{!11772, !11773}
!11772 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11770, file: !11547, line: 532, type: !1577)
!11773 = !DILocalVariable(name: "Parity", arg: 2, scope: !11770, file: !11547, line: 532, type: !113)
!11774 = !DILocation(line: 0, scope: !11770)
!11775 = !DILocation(line: 534, column: 3, scope: !11770)
!11776 = !DILocation(line: 535, column: 1, scope: !11770)
!11777 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11547, file: !11547, line: 1770, type: !11548, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11778)
!11778 = !{!11779}
!11779 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11777, file: !11547, line: 1770, type: !1577)
!11780 = !DILocation(line: 0, scope: !11777)
!11781 = !DILocation(line: 1772, column: 11, scope: !11777)
!11782 = !DILocation(line: 1772, column: 46, scope: !11777)
!11783 = !DILocation(line: 1772, column: 3, scope: !11777)
!11784 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11547, file: !11547, line: 1737, type: !11548, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11785)
!11785 = !{!11786}
!11786 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11784, file: !11547, line: 1737, type: !1577)
!11787 = !DILocation(line: 0, scope: !11784)
!11788 = !DILocation(line: 1739, column: 11, scope: !11784)
!11789 = !DILocation(line: 1739, column: 3, scope: !11784)
!11790 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11547, file: !11547, line: 1748, type: !11548, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11791)
!11791 = !{!11792}
!11792 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11790, file: !11547, line: 1748, type: !1577)
!11793 = !DILocation(line: 0, scope: !11790)
!11794 = !DILocation(line: 1750, column: 11, scope: !11790)
!11795 = !DILocation(line: 1750, column: 45, scope: !11790)
!11796 = !DILocation(line: 1750, column: 3, scope: !11790)
!11797 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11547, file: !11547, line: 1827, type: !11548, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11798)
!11798 = !{!11799}
!11799 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11797, file: !11547, line: 1827, type: !1577)
!11800 = !DILocation(line: 0, scope: !11797)
!11801 = !DILocation(line: 1829, column: 11, scope: !11797)
!11802 = !DILocation(line: 1829, column: 46, scope: !11797)
!11803 = !DILocation(line: 1829, column: 3, scope: !11797)
!11804 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11547, file: !11547, line: 1992, type: !11610, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11805)
!11805 = !{!11806}
!11806 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11804, file: !11547, line: 1992, type: !1577)
!11807 = !DILocation(line: 0, scope: !11804)
!11808 = !DILocation(line: 1994, column: 3, scope: !11804)
!11809 = !DILocation(line: 1995, column: 1, scope: !11804)
!11810 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11547, file: !11547, line: 1934, type: !11610, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11811)
!11811 = !{!11812, !11813}
!11812 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11810, file: !11547, line: 1934, type: !1577)
!11813 = !DILocalVariable(name: "tmpreg", scope: !11810, file: !11547, line: 1936, type: !461)
!11814 = !DILocation(line: 0, scope: !11810)
!11815 = !DILocation(line: 1936, column: 3, scope: !11810)
!11816 = !DILocation(line: 1936, column: 17, scope: !11810)
!11817 = !DILocation(line: 1937, column: 20, scope: !11810)
!11818 = !DILocation(line: 1937, column: 10, scope: !11810)
!11819 = !DILocation(line: 1938, column: 10, scope: !11810)
!11820 = !DILocation(line: 1939, column: 20, scope: !11810)
!11821 = !DILocation(line: 1939, column: 10, scope: !11810)
!11822 = !DILocation(line: 1940, column: 10, scope: !11810)
!11823 = !DILocation(line: 1941, column: 1, scope: !11810)
!11824 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11547, file: !11547, line: 1877, type: !11610, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11825)
!11825 = !{!11826, !11827}
!11826 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11824, file: !11547, line: 1877, type: !1577)
!11827 = !DILocalVariable(name: "tmpreg", scope: !11824, file: !11547, line: 1879, type: !461)
!11828 = !DILocation(line: 0, scope: !11824)
!11829 = !DILocation(line: 1879, column: 3, scope: !11824)
!11830 = !DILocation(line: 1879, column: 17, scope: !11824)
!11831 = !DILocation(line: 1880, column: 20, scope: !11824)
!11832 = !DILocation(line: 1880, column: 10, scope: !11824)
!11833 = !DILocation(line: 1881, column: 10, scope: !11824)
!11834 = !DILocation(line: 1882, column: 20, scope: !11824)
!11835 = !DILocation(line: 1882, column: 10, scope: !11824)
!11836 = !DILocation(line: 1883, column: 10, scope: !11824)
!11837 = !DILocation(line: 1884, column: 1, scope: !11824)
!11838 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11547, file: !11547, line: 1896, type: !11610, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11839)
!11839 = !{!11840, !11841}
!11840 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11838, file: !11547, line: 1896, type: !1577)
!11841 = !DILocalVariable(name: "tmpreg", scope: !11838, file: !11547, line: 1898, type: !461)
!11842 = !DILocation(line: 0, scope: !11838)
!11843 = !DILocation(line: 1898, column: 3, scope: !11838)
!11844 = !DILocation(line: 1898, column: 17, scope: !11838)
!11845 = !DILocation(line: 1899, column: 20, scope: !11838)
!11846 = !DILocation(line: 1899, column: 10, scope: !11838)
!11847 = !DILocation(line: 1900, column: 10, scope: !11838)
!11848 = !DILocation(line: 1901, column: 20, scope: !11838)
!11849 = !DILocation(line: 1901, column: 10, scope: !11838)
!11850 = !DILocation(line: 1902, column: 10, scope: !11838)
!11851 = !DILocation(line: 1903, column: 1, scope: !11838)
!11852 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11547, file: !11547, line: 1915, type: !11610, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11853)
!11853 = !{!11854, !11855}
!11854 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11852, file: !11547, line: 1915, type: !1577)
!11855 = !DILocalVariable(name: "tmpreg", scope: !11852, file: !11547, line: 1917, type: !461)
!11856 = !DILocation(line: 0, scope: !11852)
!11857 = !DILocation(line: 1917, column: 3, scope: !11852)
!11858 = !DILocation(line: 1917, column: 17, scope: !11852)
!11859 = !DILocation(line: 1918, column: 20, scope: !11852)
!11860 = !DILocation(line: 1918, column: 10, scope: !11852)
!11861 = !DILocation(line: 1919, column: 10, scope: !11852)
!11862 = !DILocation(line: 1920, column: 20, scope: !11852)
!11863 = !DILocation(line: 1920, column: 10, scope: !11852)
!11864 = !DILocation(line: 1921, column: 10, scope: !11852)
!11865 = !DILocation(line: 1922, column: 1, scope: !11852)
!11866 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11547, file: !11547, line: 1814, type: !11548, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11867)
!11867 = !{!11868}
!11868 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11866, file: !11547, line: 1814, type: !1577)
!11869 = !DILocation(line: 0, scope: !11866)
!11870 = !DILocation(line: 1816, column: 11, scope: !11866)
!11871 = !DILocation(line: 1816, column: 46, scope: !11866)
!11872 = !DILocation(line: 1816, column: 3, scope: !11866)
!11873 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11547, file: !11547, line: 2426, type: !11874, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11876)
!11874 = !DISubroutineType(types: !11875)
!11875 = !{null, !1577, !169}
!11876 = !{!11877, !11878}
!11877 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11873, file: !11547, line: 2426, type: !1577)
!11878 = !DILocalVariable(name: "Value", arg: 2, scope: !11873, file: !11547, line: 2426, type: !169)
!11879 = !DILocation(line: 0, scope: !11873)
!11880 = !DILocation(line: 2428, column: 16, scope: !11873)
!11881 = !DILocation(line: 2428, column: 11, scope: !11873)
!11882 = !DILocation(line: 2428, column: 14, scope: !11873)
!11883 = !DILocation(line: 2429, column: 1, scope: !11873)
!11884 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11547, file: !11547, line: 1792, type: !11548, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11885)
!11885 = !{!11886}
!11886 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11884, file: !11547, line: 1792, type: !1577)
!11887 = !DILocation(line: 0, scope: !11884)
!11888 = !DILocation(line: 1794, column: 11, scope: !11884)
!11889 = !DILocation(line: 1794, column: 47, scope: !11884)
!11890 = !DILocation(line: 1794, column: 3, scope: !11884)
!11891 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11547, file: !11547, line: 2403, type: !11892, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11894)
!11892 = !DISubroutineType(types: !11893)
!11893 = !{!169, !1577}
!11894 = !{!11895}
!11895 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11891, file: !11547, line: 2403, type: !1577)
!11896 = !DILocation(line: 0, scope: !11891)
!11897 = !DILocation(line: 2405, column: 20, scope: !11891)
!11898 = !DILocation(line: 2405, column: 10, scope: !11891)
!11899 = !DILocation(line: 2405, column: 3, scope: !11891)
!11900 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1631, file: !1631, line: 1583, type: !1557, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11901)
!11901 = !{!11902, !11903, !11904, !11905, !11906, !11907}
!11902 = !DILocalVariable(name: "dev", arg: 1, scope: !11900, file: !1631, line: 1583, type: !1536)
!11903 = !DILocalVariable(name: "config", scope: !11900, file: !1631, line: 1585, type: !11238)
!11904 = !DILocalVariable(name: "data", scope: !11900, file: !1631, line: 1586, type: !11361)
!11905 = !DILocalVariable(name: "ll_parity", scope: !11900, file: !1631, line: 1587, type: !113)
!11906 = !DILocalVariable(name: "ll_datawidth", scope: !11900, file: !1631, line: 1588, type: !113)
!11907 = !DILocalVariable(name: "err", scope: !11900, file: !1631, line: 1589, type: !105)
!11908 = !DILocation(line: 0, scope: !11900)
!11909 = !DILocation(line: 1585, column: 48, scope: !11900)
!11910 = !DILocation(line: 1586, column: 38, scope: !11900)
!11911 = !DILocation(line: 1591, column: 2, scope: !11900)
!11912 = !DILocation(line: 1593, column: 29, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11900, file: !1631, line: 1593, column: 6)
!11914 = !DILocation(line: 1593, column: 7, scope: !11913)
!11915 = !DILocation(line: 1593, column: 6, scope: !11900)
!11916 = !DILocation(line: 1594, column: 3, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11918, file: !1631, line: 1594, column: 3)
!11918 = distinct !DILexicalBlock(scope: !11919, file: !1631, line: 1594, column: 3)
!11919 = distinct !DILexicalBlock(scope: !11920, file: !1631, line: 1594, column: 3)
!11920 = distinct !DILexicalBlock(scope: !11921, file: !1631, line: 1594, column: 3)
!11921 = distinct !DILexicalBlock(scope: !11913, file: !1631, line: 1593, column: 37)
!11922 = !DILocation(line: 1595, column: 3, scope: !11921)
!11923 = !DILocation(line: 1599, column: 31, scope: !11900)
!11924 = !DILocation(line: 1599, column: 71, scope: !11900)
!11925 = !DILocation(line: 1599, column: 8, scope: !11900)
!11926 = !DILocation(line: 1600, column: 10, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11900, file: !1631, line: 1600, column: 6)
!11928 = !DILocation(line: 1600, column: 6, scope: !11900)
!11929 = !DILocation(line: 1601, column: 3, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11931, file: !1631, line: 1601, column: 3)
!11931 = distinct !DILexicalBlock(scope: !11932, file: !1631, line: 1601, column: 3)
!11932 = distinct !DILexicalBlock(scope: !11933, file: !1631, line: 1601, column: 3)
!11933 = distinct !DILexicalBlock(scope: !11934, file: !1631, line: 1601, column: 3)
!11934 = distinct !DILexicalBlock(scope: !11927, file: !1631, line: 1600, column: 16)
!11935 = !DILocation(line: 1602, column: 3, scope: !11934)
!11936 = !DILocation(line: 1616, column: 36, scope: !11900)
!11937 = !DILocation(line: 1616, column: 8, scope: !11900)
!11938 = !DILocation(line: 1617, column: 10, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11900, file: !1631, line: 1617, column: 6)
!11940 = !DILocation(line: 1617, column: 6, scope: !11900)
!11941 = !DILocation(line: 1621, column: 27, scope: !11900)
!11942 = !DILocation(line: 1621, column: 2, scope: !11900)
!11943 = !DILocation(line: 1624, column: 40, scope: !11900)
!11944 = !DILocation(line: 1624, column: 2, scope: !11900)
!11945 = !DILocation(line: 1630, column: 14, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11900, file: !1631, line: 1630, column: 6)
!11947 = !DILocation(line: 1630, column: 6, scope: !11900)
!11948 = !DILocation(line: 1640, column: 4, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11950, file: !1631, line: 1640, column: 4)
!11950 = distinct !DILexicalBlock(scope: !11951, file: !1631, line: 1640, column: 4)
!11951 = distinct !DILexicalBlock(scope: !11952, file: !1631, line: 1640, column: 4)
!11952 = distinct !DILexicalBlock(scope: !11953, file: !1631, line: 1640, column: 4)
!11953 = distinct !DILexicalBlock(scope: !11954, file: !1631, line: 1639, column: 28)
!11954 = distinct !DILexicalBlock(scope: !11955, file: !1631, line: 1639, column: 7)
!11955 = distinct !DILexicalBlock(scope: !11956, file: !1631, line: 1638, column: 9)
!11956 = distinct !DILexicalBlock(scope: !11946, file: !1631, line: 1634, column: 13)
!11957 = !DILocation(line: 0, scope: !11946)
!11958 = !DILocation(line: 1649, column: 35, scope: !11900)
!11959 = !DILocation(line: 1649, column: 2, scope: !11900)
!11960 = !DILocation(line: 1654, column: 14, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11900, file: !1631, line: 1654, column: 6)
!11962 = !DILocation(line: 1654, column: 6, scope: !11900)
!11963 = !DILocation(line: 1655, column: 3, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11961, file: !1631, line: 1654, column: 31)
!11965 = !DILocation(line: 1656, column: 2, scope: !11964)
!11966 = !DILocation(line: 1659, column: 37, scope: !11900)
!11967 = !DILocation(line: 1659, column: 2, scope: !11900)
!11968 = !DILocation(line: 1662, column: 14, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11900, file: !1631, line: 1662, column: 6)
!11970 = !DILocation(line: 1662, column: 6, scope: !11900)
!11971 = !DILocation(line: 1663, column: 37, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11969, file: !1631, line: 1662, column: 27)
!11973 = !DILocation(line: 1663, column: 3, scope: !11972)
!11974 = !DILocation(line: 1664, column: 2, scope: !11972)
!11975 = !DILocation(line: 1684, column: 26, scope: !11900)
!11976 = !DILocation(line: 1684, column: 2, scope: !11900)
!11977 = !DILocation(line: 1722, column: 2, scope: !11900)
!11978 = !DILocation(line: 1724, column: 1, scope: !11900)
!11979 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1631, file: !1631, line: 651, type: !11980, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11982)
!11980 = !DISubroutineType(types: !11981)
!11981 = !{null, !1536}
!11982 = !{!11983, !11984, !11985}
!11983 = !DILocalVariable(name: "dev", arg: 1, scope: !11979, file: !1631, line: 651, type: !1536)
!11984 = !DILocalVariable(name: "data", scope: !11979, file: !1631, line: 653, type: !11361)
!11985 = !DILocalVariable(name: "clk", scope: !11979, file: !1631, line: 654, type: !11986)
!11986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1536)
!11987 = !DILocation(line: 0, scope: !11979)
!11988 = !DILocation(line: 653, column: 38, scope: !11979)
!11989 = !DILocation(line: 656, column: 8, scope: !11979)
!11990 = !DILocation(line: 656, column: 14, scope: !11979)
!11991 = !DILocation(line: 657, column: 1, scope: !11979)
!11992 = distinct !DISubprogram(name: "device_is_ready", scope: !10357, file: !10357, line: 47, type: !11993, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !11995)
!11993 = !DISubroutineType(types: !11994)
!11994 = !{!492, !1536}
!11995 = !{!11996}
!11996 = !DILocalVariable(name: "dev", arg: 1, scope: !11992, file: !10357, line: 47, type: !1536)
!11997 = !DILocation(line: 0, scope: !11992)
!11998 = !DILocation(line: 55, column: 2, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11992, file: !10357, line: 55, column: 2)
!12000 = !{i64 2155380090}
!12001 = !DILocation(line: 56, column: 9, scope: !11992)
!12002 = !DILocation(line: 56, column: 2, scope: !11992)
!12003 = distinct !DISubprogram(name: "clock_control_on", scope: !991, file: !991, line: 123, type: !1595, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !12004)
!12004 = !{!12005, !12006, !12007}
!12005 = !DILocalVariable(name: "dev", arg: 1, scope: !12003, file: !991, line: 123, type: !1536)
!12006 = !DILocalVariable(name: "sys", arg: 2, scope: !12003, file: !991, line: 124, type: !1087)
!12007 = !DILocalVariable(name: "api", scope: !12003, file: !991, line: 126, type: !1588)
!12008 = !DILocation(line: 0, scope: !12003)
!12009 = !DILocation(line: 127, column: 49, scope: !12003)
!12010 = !DILocation(line: 129, column: 14, scope: !12003)
!12011 = !DILocation(line: 129, column: 9, scope: !12003)
!12012 = !DILocation(line: 129, column: 2, scope: !12003)
!12013 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1695, file: !1695, line: 342, type: !12014, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !12016)
!12014 = !DISubroutineType(types: !12015)
!12015 = !{!105, !1692, !169}
!12016 = !{!12017, !12018, !12019, !12020}
!12017 = !DILocalVariable(name: "config", arg: 1, scope: !12013, file: !1695, line: 342, type: !1692)
!12018 = !DILocalVariable(name: "id", arg: 2, scope: !12013, file: !1695, line: 343, type: !169)
!12019 = !DILocalVariable(name: "ret", scope: !12013, file: !1695, line: 345, type: !105)
!12020 = !DILocalVariable(name: "state", scope: !12013, file: !1695, line: 346, type: !1698)
!12021 = !DILocation(line: 0, scope: !12013)
!12022 = !DILocation(line: 346, column: 2, scope: !12013)
!12023 = !DILocation(line: 348, column: 8, scope: !12013)
!12024 = !DILocation(line: 349, column: 10, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12013, file: !1695, line: 349, column: 6)
!12026 = !DILocation(line: 349, column: 6, scope: !12013)
!12027 = !DILocation(line: 353, column: 44, scope: !12013)
!12028 = !DILocation(line: 353, column: 9, scope: !12013)
!12029 = !DILocation(line: 353, column: 2, scope: !12013)
!12030 = !DILocation(line: 354, column: 1, scope: !12013)
!12031 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11547, file: !11547, line: 497, type: !11725, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !12032)
!12032 = !{!12033, !12034, !12035}
!12033 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12031, file: !11547, line: 497, type: !1577)
!12034 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12031, file: !11547, line: 497, type: !113)
!12035 = !DILocalVariable(name: "val", scope: !12036, file: !11547, line: 499, type: !113)
!12036 = distinct !DILexicalBlock(scope: !12031, file: !11547, line: 499, column: 3)
!12037 = !DILocation(line: 0, scope: !12031)
!12038 = !DILocation(line: 499, column: 3, scope: !12036)
!12039 = !DILocalVariable(name: "addr", arg: 1, scope: !12040, file: !7850, line: 476, type: !1627)
!12040 = distinct !DISubprogram(name: "__LDREXW", scope: !7850, file: !7850, line: 476, type: !12041, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !12043)
!12041 = !DISubroutineType(types: !12042)
!12042 = !{!113, !1627}
!12043 = !{!12039, !12044}
!12044 = !DILocalVariable(name: "result", scope: !12040, file: !7850, line: 478, type: !113)
!12045 = !DILocation(line: 0, scope: !12040, inlinedAt: !12046)
!12046 = distinct !DILocation(line: 499, column: 3, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12036, file: !11547, line: 499, column: 3)
!12048 = !DILocation(line: 480, column: 4, scope: !12040, inlinedAt: !12046)
!12049 = !{i64 3761831}
!12050 = !DILocation(line: 499, column: 3, scope: !12047)
!12051 = !DILocation(line: 0, scope: !12036)
!12052 = !DILocalVariable(name: "value", arg: 1, scope: !12053, file: !7850, line: 527, type: !113)
!12053 = distinct !DISubprogram(name: "__STREXW", scope: !7850, file: !7850, line: 527, type: !12054, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !12056)
!12054 = !DISubroutineType(types: !12055)
!12055 = !{!113, !113, !1627}
!12056 = !{!12052, !12057, !12058}
!12057 = !DILocalVariable(name: "addr", arg: 2, scope: !12053, file: !7850, line: 527, type: !1627)
!12058 = !DILocalVariable(name: "result", scope: !12053, file: !7850, line: 529, type: !113)
!12059 = !DILocation(line: 0, scope: !12053, inlinedAt: !12060)
!12060 = distinct !DILocation(line: 499, column: 3, scope: !12036)
!12061 = !DILocation(line: 531, column: 4, scope: !12053, inlinedAt: !12060)
!12062 = !{i64 3763267}
!12063 = distinct !{!12063, !12038, !12038}
!12064 = !DILocation(line: 500, column: 1, scope: !12031)
!12065 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11547, file: !11547, line: 850, type: !11734, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !12066)
!12066 = !{!12067, !12068, !12069, !12070}
!12067 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12065, file: !11547, line: 850, type: !1577)
!12068 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12065, file: !11547, line: 850, type: !113)
!12069 = !DILocalVariable(name: "Parity", arg: 3, scope: !12065, file: !11547, line: 850, type: !113)
!12070 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12065, file: !11547, line: 851, type: !113)
!12071 = !DILocation(line: 0, scope: !12065)
!12072 = !DILocation(line: 853, column: 3, scope: !12065)
!12073 = !DILocation(line: 854, column: 3, scope: !12065)
!12074 = !DILocation(line: 855, column: 1, scope: !12065)
!12075 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11547, file: !11547, line: 1337, type: !11610, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !12076)
!12076 = !{!12077}
!12077 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12075, file: !11547, line: 1337, type: !1577)
!12078 = !DILocation(line: 0, scope: !12075)
!12079 = !DILocation(line: 1339, column: 3, scope: !12075)
!12080 = !DILocation(line: 1340, column: 1, scope: !12075)
!12081 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1695, file: !1695, line: 316, type: !12082, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !12084)
!12082 = !DISubroutineType(types: !12083)
!12083 = !{!105, !1692, !1698}
!12084 = !{!12085, !12086, !12087}
!12085 = !DILocalVariable(name: "config", arg: 1, scope: !12081, file: !1695, line: 317, type: !1692)
!12086 = !DILocalVariable(name: "state", arg: 2, scope: !12081, file: !1695, line: 318, type: !1698)
!12087 = !DILocalVariable(name: "reg", scope: !12081, file: !1695, line: 320, type: !22)
!12088 = !DILocation(line: 0, scope: !12081)
!12089 = !DILocation(line: 329, column: 39, scope: !12081)
!12090 = !DILocation(line: 329, column: 52, scope: !12081)
!12091 = !DILocation(line: 329, column: 9, scope: !12081)
!12092 = !DILocation(line: 329, column: 2, scope: !12081)
!12093 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !11993, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1492, retainedNodes: !12094)
!12094 = !{!12095}
!12095 = !DILocalVariable(name: "dev", arg: 1, scope: !12093, file: !481, line: 730, type: !1536)
!12096 = !DILocation(line: 0, scope: !12093)
!12097 = !DILocation(line: 732, column: 9, scope: !12093)
!12098 = !DILocation(line: 732, column: 2, scope: !12093)
!12099 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1854, file: !1854, line: 270, type: !1860, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !12100)
!12100 = !{!12101}
!12101 = !DILocalVariable(name: "dev", arg: 1, scope: !12099, file: !1854, line: 270, type: !1862)
!12102 = !DILocation(line: 0, scope: !12099)
!12103 = !DILocation(line: 274, column: 2, scope: !12099)
!12104 = !DILocation(line: 275, column: 12, scope: !12099)
!12105 = !DILocation(line: 276, column: 15, scope: !12099)
!12106 = !DILocation(line: 277, column: 16, scope: !12099)
!12107 = !DILocation(line: 278, column: 15, scope: !12099)
!12108 = !DILocation(line: 279, column: 16, scope: !12099)
!12109 = !DILocation(line: 282, column: 2, scope: !12099)
!12110 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7890, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !12111)
!12111 = !{!12112, !12113}
!12112 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12110, file: !679, line: 1814, type: !941)
!12113 = !DILocalVariable(name: "priority", arg: 2, scope: !12110, file: !679, line: 1814, type: !113)
!12114 = !DILocation(line: 0, scope: !12110)
!12115 = !DILocation(line: 1822, column: 46, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !12117, file: !679, line: 1821, column: 3)
!12117 = distinct !DILexicalBlock(scope: !12110, file: !679, line: 1816, column: 7)
!12118 = !DILocation(line: 1824, column: 1, scope: !12110)
!12119 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1854, file: !1854, line: 118, type: !7787, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !12120)
!12120 = !{!12121, !12122}
!12121 = !DILocalVariable(name: "arg", arg: 1, scope: !12119, file: !1854, line: 118, type: !104)
!12122 = !DILocalVariable(name: "dticks", scope: !12119, file: !1854, line: 121, type: !113)
!12123 = !DILocation(line: 0, scope: !12119)
!12124 = !DILocation(line: 124, column: 2, scope: !12119)
!12125 = !DILocation(line: 129, column: 17, scope: !12119)
!12126 = !DILocation(line: 129, column: 14, scope: !12119)
!12127 = !DILocation(line: 130, column: 15, scope: !12119)
!12128 = !DILocation(line: 145, column: 27, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !1854, line: 132, column: 16)
!12130 = distinct !DILexicalBlock(scope: !12119, file: !1854, line: 132, column: 6)
!12131 = !DILocation(line: 145, column: 25, scope: !12129)
!12132 = !DILocation(line: 145, column: 45, scope: !12129)
!12133 = !DILocation(line: 146, column: 30, scope: !12129)
!12134 = !DILocation(line: 146, column: 20, scope: !12129)
!12135 = !DILocation(line: 147, column: 3, scope: !12129)
!12136 = !DILocation(line: 151, column: 2, scope: !12119)
!12137 = !DILocation(line: 152, column: 1, scope: !12119)
!12138 = distinct !DISubprogram(name: "elapsed", scope: !1854, file: !1854, line: 85, type: !395, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !12139)
!12139 = !{!12140, !12141, !12142}
!12140 = !DILocalVariable(name: "val1", scope: !12138, file: !1854, line: 87, type: !113)
!12141 = !DILocalVariable(name: "ctrl", scope: !12138, file: !1854, line: 88, type: !113)
!12142 = !DILocalVariable(name: "val2", scope: !12138, file: !1854, line: 89, type: !113)
!12143 = !DILocation(line: 87, column: 27, scope: !12138)
!12144 = !DILocation(line: 0, scope: !12138)
!12145 = !DILocation(line: 88, column: 27, scope: !12138)
!12146 = !DILocation(line: 89, column: 27, scope: !12138)
!12147 = !DILocation(line: 105, column: 12, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12138, file: !1854, line: 105, column: 6)
!12149 = !DILocation(line: 106, column: 6, scope: !12148)
!12150 = !DILocation(line: 107, column: 16, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12148, file: !1854, line: 106, column: 24)
!12152 = !DILocation(line: 111, column: 18, scope: !12151)
!12153 = !DILocation(line: 112, column: 2, scope: !12151)
!12154 = !DILocation(line: 114, column: 20, scope: !12138)
!12155 = !DILocation(line: 114, column: 30, scope: !12138)
!12156 = !DILocation(line: 114, column: 28, scope: !12138)
!12157 = !DILocation(line: 114, column: 2, scope: !12138)
!12158 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1854, file: !1854, line: 154, type: !12159, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !12161)
!12159 = !DISubroutineType(types: !12160)
!12160 = !{null, !116, !492}
!12161 = !{!12162, !12163, !12164, !12165, !12166, !12167, !12168, !12173, !12174}
!12162 = !DILocalVariable(name: "ticks", arg: 1, scope: !12158, file: !1854, line: 154, type: !116)
!12163 = !DILocalVariable(name: "idle", arg: 2, scope: !12158, file: !1854, line: 154, type: !492)
!12164 = !DILocalVariable(name: "delay", scope: !12158, file: !1854, line: 169, type: !113)
!12165 = !DILocalVariable(name: "val1", scope: !12158, file: !1854, line: 170, type: !113)
!12166 = !DILocalVariable(name: "val2", scope: !12158, file: !1854, line: 170, type: !113)
!12167 = !DILocalVariable(name: "last_load_", scope: !12158, file: !1854, line: 171, type: !113)
!12168 = !DILocalVariable(name: "key", scope: !12158, file: !1854, line: 176, type: !12169)
!12169 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !12170)
!12170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !12171)
!12171 = !{!12172}
!12172 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12170, file: !236, line: 33, baseType: !105, size: 32)
!12173 = !DILocalVariable(name: "pending", scope: !12158, file: !1854, line: 178, type: !113)
!12174 = !DILocalVariable(name: "unannounced", scope: !12158, file: !1854, line: 185, type: !113)
!12175 = !DILocation(line: 0, scope: !12158)
!12176 = !DILocation(line: 162, column: 49, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12158, file: !1854, line: 162, column: 6)
!12178 = !DILocation(line: 163, column: 17, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12177, file: !1854, line: 162, column: 78)
!12180 = !DILocation(line: 164, column: 13, scope: !12179)
!12181 = !DILocation(line: 165, column: 3, scope: !12179)
!12182 = !DILocation(line: 171, column: 24, scope: !12158)
!12183 = !DILocation(line: 173, column: 10, scope: !12158)
!12184 = !DILocation(line: 174, column: 10, scope: !12158)
!12185 = !DILocalVariable(name: "l", arg: 1, scope: !12186, file: !236, line: 136, type: !12189)
!12186 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !12187, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !12190)
!12187 = !DISubroutineType(types: !12188)
!12188 = !{!12169, !12189}
!12189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!12190 = !{!12185, !12191}
!12191 = !DILocalVariable(name: "k", scope: !12186, file: !236, line: 139, type: !12169)
!12192 = !DILocation(line: 0, scope: !12186, inlinedAt: !12193)
!12193 = distinct !DILocation(line: 176, column: 25, scope: !12158)
!12194 = !DILocation(line: 55, column: 2, scope: !12195, inlinedAt: !12199)
!12195 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7532, file: !7532, line: 42, type: !7533, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !12196)
!12196 = !{!12197, !12198}
!12197 = !DILocalVariable(name: "key", scope: !12195, file: !7532, line: 44, type: !32)
!12198 = !DILocalVariable(name: "tmp", scope: !12195, file: !7532, line: 53, type: !32)
!12199 = distinct !DILocation(line: 145, column: 10, scope: !12186, inlinedAt: !12193)
!12200 = !{i64 2283429}
!12201 = !DILocation(line: 0, scope: !12195, inlinedAt: !12199)
!12202 = !DILocation(line: 148, column: 2, scope: !12203, inlinedAt: !12193)
!12203 = distinct !DILexicalBlock(scope: !12204, file: !236, line: 148, column: 2)
!12204 = distinct !DILexicalBlock(scope: !12186, file: !236, line: 148, column: 2)
!12205 = !DILocation(line: 148, column: 2, scope: !12204, inlinedAt: !12193)
!12206 = !DILocation(line: 148, column: 2, scope: !12207, inlinedAt: !12193)
!12207 = distinct !DILexicalBlock(scope: !12203, file: !236, line: 148, column: 2)
!12208 = !DILocation(line: 160, column: 2, scope: !12186, inlinedAt: !12193)
!12209 = !DILocation(line: 178, column: 21, scope: !12158)
!12210 = !DILocation(line: 180, column: 18, scope: !12158)
!12211 = !DILocation(line: 182, column: 14, scope: !12158)
!12212 = !DILocation(line: 183, column: 15, scope: !12158)
!12213 = !DILocation(line: 185, column: 39, scope: !12158)
!12214 = !DILocation(line: 185, column: 37, scope: !12158)
!12215 = !DILocation(line: 187, column: 27, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12158, file: !1854, line: 187, column: 6)
!12217 = !DILocation(line: 187, column: 6, scope: !12158)
!12218 = !DILocation(line: 202, column: 27, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12216, file: !1854, line: 195, column: 9)
!12220 = !DILocation(line: 202, column: 48, scope: !12219)
!12221 = !DILocation(line: 203, column: 9, scope: !12219)
!12222 = !DILocation(line: 204, column: 11, scope: !12219)
!12223 = !DILocation(line: 205, column: 13, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12219, file: !1854, line: 205, column: 7)
!12225 = !DILocation(line: 205, column: 7, scope: !12219)
!12226 = !DILocation(line: 0, scope: !12216)
!12227 = !DILocation(line: 212, column: 18, scope: !12158)
!12228 = !DILocation(line: 214, column: 28, scope: !12158)
!12229 = !DILocation(line: 214, column: 16, scope: !12158)
!12230 = !DILocation(line: 215, column: 15, scope: !12158)
!12231 = !DILocation(line: 227, column: 11, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12158, file: !1854, line: 227, column: 6)
!12233 = !DILocation(line: 227, column: 6, scope: !12158)
!12234 = !DILocation(line: 228, column: 15, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12232, file: !1854, line: 227, column: 19)
!12236 = !DILocation(line: 228, column: 38, scope: !12235)
!12237 = !DILocation(line: 228, column: 24, scope: !12235)
!12238 = !DILocation(line: 229, column: 2, scope: !12235)
!12239 = !DILocation(line: 230, column: 24, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12232, file: !1854, line: 229, column: 9)
!12241 = !DILocation(line: 230, column: 15, scope: !12240)
!12242 = !DILocation(line: 0, scope: !12232)
!12243 = !DILocalVariable(name: "key", arg: 2, scope: !12244, file: !236, line: 190, type: !12169)
!12244 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !12245, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !12247)
!12245 = !DISubroutineType(types: !12246)
!12246 = !{null, !12189, !12169}
!12247 = !{!12248, !12243}
!12248 = !DILocalVariable(name: "l", arg: 1, scope: !12244, file: !236, line: 189, type: !12189)
!12249 = !DILocation(line: 0, scope: !12244, inlinedAt: !12250)
!12250 = distinct !DILocation(line: 232, column: 2, scope: !12158)
!12251 = !DILocation(line: 194, column: 2, scope: !12252, inlinedAt: !12250)
!12252 = distinct !DILexicalBlock(scope: !12253, file: !236, line: 194, column: 2)
!12253 = distinct !DILexicalBlock(scope: !12244, file: !236, line: 194, column: 2)
!12254 = !DILocation(line: 194, column: 2, scope: !12253, inlinedAt: !12250)
!12255 = !DILocation(line: 194, column: 2, scope: !12256, inlinedAt: !12250)
!12256 = distinct !DILexicalBlock(scope: !12252, file: !236, line: 194, column: 2)
!12257 = !DILocalVariable(name: "key", arg: 1, scope: !12258, file: !7532, line: 84, type: !32)
!12258 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7532, file: !7532, line: 84, type: !7543, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !12259)
!12259 = !{!12257}
!12260 = !DILocation(line: 0, scope: !12258, inlinedAt: !12261)
!12261 = distinct !DILocation(line: 215, column: 2, scope: !12244, inlinedAt: !12250)
!12262 = !DILocation(line: 95, column: 2, scope: !12258, inlinedAt: !12261)
!12263 = !{i64 2284246}
!12264 = !DILocation(line: 234, column: 1, scope: !12158)
!12265 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1854, file: !1854, line: 236, type: !395, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !12266)
!12266 = !{!12267, !12268}
!12267 = !DILocalVariable(name: "key", scope: !12265, file: !1854, line: 242, type: !12169)
!12268 = !DILocalVariable(name: "cyc", scope: !12265, file: !1854, line: 243, type: !113)
!12269 = !DILocation(line: 0, scope: !12186, inlinedAt: !12270)
!12270 = distinct !DILocation(line: 242, column: 25, scope: !12265)
!12271 = !DILocation(line: 55, column: 2, scope: !12195, inlinedAt: !12272)
!12272 = distinct !DILocation(line: 145, column: 10, scope: !12186, inlinedAt: !12270)
!12273 = !DILocation(line: 0, scope: !12195, inlinedAt: !12272)
!12274 = !DILocation(line: 148, column: 2, scope: !12203, inlinedAt: !12270)
!12275 = !DILocation(line: 148, column: 2, scope: !12204, inlinedAt: !12270)
!12276 = !DILocation(line: 148, column: 2, scope: !12207, inlinedAt: !12270)
!12277 = !DILocation(line: 160, column: 2, scope: !12186, inlinedAt: !12270)
!12278 = !DILocation(line: 0, scope: !12265)
!12279 = !DILocation(line: 243, column: 17, scope: !12265)
!12280 = !DILocation(line: 243, column: 29, scope: !12265)
!12281 = !DILocation(line: 243, column: 43, scope: !12265)
!12282 = !DILocation(line: 0, scope: !12244, inlinedAt: !12283)
!12283 = distinct !DILocation(line: 245, column: 2, scope: !12265)
!12284 = !DILocation(line: 194, column: 2, scope: !12252, inlinedAt: !12283)
!12285 = !DILocation(line: 194, column: 2, scope: !12253, inlinedAt: !12283)
!12286 = !DILocation(line: 194, column: 2, scope: !12256, inlinedAt: !12283)
!12287 = !DILocation(line: 243, column: 27, scope: !12265)
!12288 = !DILocation(line: 243, column: 41, scope: !12265)
!12289 = !DILocation(line: 0, scope: !12258, inlinedAt: !12290)
!12290 = distinct !DILocation(line: 215, column: 2, scope: !12244, inlinedAt: !12283)
!12291 = !DILocation(line: 95, column: 2, scope: !12258, inlinedAt: !12290)
!12292 = !DILocation(line: 246, column: 13, scope: !12265)
!12293 = !DILocation(line: 246, column: 2, scope: !12265)
!12294 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1854, file: !1854, line: 249, type: !395, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !12295)
!12295 = !{!12296, !12297}
!12296 = !DILocalVariable(name: "key", scope: !12294, file: !1854, line: 251, type: !12169)
!12297 = !DILocalVariable(name: "ret", scope: !12294, file: !1854, line: 252, type: !113)
!12298 = !DILocation(line: 0, scope: !12186, inlinedAt: !12299)
!12299 = distinct !DILocation(line: 251, column: 25, scope: !12294)
!12300 = !DILocation(line: 55, column: 2, scope: !12195, inlinedAt: !12301)
!12301 = distinct !DILocation(line: 145, column: 10, scope: !12186, inlinedAt: !12299)
!12302 = !DILocation(line: 0, scope: !12195, inlinedAt: !12301)
!12303 = !DILocation(line: 148, column: 2, scope: !12203, inlinedAt: !12299)
!12304 = !DILocation(line: 148, column: 2, scope: !12204, inlinedAt: !12299)
!12305 = !DILocation(line: 148, column: 2, scope: !12207, inlinedAt: !12299)
!12306 = !DILocation(line: 160, column: 2, scope: !12186, inlinedAt: !12299)
!12307 = !DILocation(line: 0, scope: !12294)
!12308 = !DILocation(line: 252, column: 17, scope: !12294)
!12309 = !DILocation(line: 252, column: 29, scope: !12294)
!12310 = !DILocation(line: 0, scope: !12244, inlinedAt: !12311)
!12311 = distinct !DILocation(line: 254, column: 2, scope: !12294)
!12312 = !DILocation(line: 194, column: 2, scope: !12252, inlinedAt: !12311)
!12313 = !DILocation(line: 194, column: 2, scope: !12253, inlinedAt: !12311)
!12314 = !DILocation(line: 194, column: 2, scope: !12256, inlinedAt: !12311)
!12315 = !DILocation(line: 252, column: 27, scope: !12294)
!12316 = !DILocation(line: 0, scope: !12258, inlinedAt: !12317)
!12317 = distinct !DILocation(line: 215, column: 2, scope: !12244, inlinedAt: !12311)
!12318 = !DILocation(line: 95, column: 2, scope: !12258, inlinedAt: !12317)
!12319 = !DILocation(line: 255, column: 2, scope: !12294)
!12320 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1854, file: !1854, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !397)
!12321 = !DILocation(line: 260, column: 6, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12320, file: !1854, line: 260, column: 6)
!12323 = !DILocation(line: 260, column: 16, scope: !12322)
!12324 = !DILocation(line: 260, column: 6, scope: !12320)
!12325 = !DILocation(line: 261, column: 17, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12322, file: !1854, line: 260, column: 34)
!12327 = !DILocation(line: 262, column: 2, scope: !12326)
!12328 = !DILocation(line: 263, column: 1, scope: !12320)
!12329 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1854, file: !1854, line: 265, type: !266, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !397)
!12330 = !DILocation(line: 267, column: 16, scope: !12329)
!12331 = !DILocation(line: 268, column: 1, scope: !12329)
!12332 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12333, file: !12333, line: 9, type: !12334, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !12357)
!12333 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12334 = !DISubroutineType(types: !12335)
!12335 = !{!105, !12336, !169, !12356}
!12336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12337, size: 32)
!12337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12338)
!12338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1695, line: 60, size: 64, elements: !12339)
!12339 = !{!12340, !12355}
!12340 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12338, file: !1695, line: 69, baseType: !12341, size: 32)
!12341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12342, size: 32)
!12342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12343)
!12343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1695, line: 50, size: 64, elements: !12344)
!12344 = !{!12345, !12353, !12354}
!12345 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12343, file: !1695, line: 52, baseType: !12346, size: 32)
!12346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12347, size: 32)
!12347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12348)
!12348 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1706, line: 37, baseType: !12349)
!12349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1706, line: 32, size: 64, elements: !12350)
!12350 = !{!12351, !12352}
!12351 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12349, file: !1706, line: 34, baseType: !113, size: 32)
!12352 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12349, file: !1706, line: 36, baseType: !113, size: 32, offset: 32)
!12353 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12343, file: !1695, line: 54, baseType: !169, size: 8, offset: 32)
!12354 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12343, file: !1695, line: 56, baseType: !169, size: 8, offset: 40)
!12355 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12338, file: !1695, line: 71, baseType: !169, size: 8, offset: 32)
!12356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12341, size: 32)
!12357 = !{!12358, !12359, !12360}
!12358 = !DILocalVariable(name: "config", arg: 1, scope: !12332, file: !12333, line: 9, type: !12336)
!12359 = !DILocalVariable(name: "id", arg: 2, scope: !12332, file: !12333, line: 9, type: !169)
!12360 = !DILocalVariable(name: "state", arg: 3, scope: !12332, file: !12333, line: 10, type: !12356)
!12361 = !DILocation(line: 0, scope: !12332)
!12362 = !DILocation(line: 12, column: 20, scope: !12332)
!12363 = !DILocation(line: 13, column: 27, scope: !12332)
!12364 = !DILocation(line: 13, column: 42, scope: !12332)
!12365 = !DILocation(line: 13, column: 19, scope: !12332)
!12366 = !DILocation(line: 13, column: 16, scope: !12332)
!12367 = !DILocation(line: 13, column: 2, scope: !12332)
!12368 = distinct !{!12368, !12367, !12369}
!12369 = !DILocation(line: 19, column: 2, scope: !12332)
!12370 = !DILocation(line: 14, column: 23, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12372, file: !12333, line: 14, column: 7)
!12372 = distinct !DILexicalBlock(scope: !12332, file: !12333, line: 13, column: 54)
!12373 = !DILocation(line: 14, column: 10, scope: !12371)
!12374 = !DILocation(line: 18, column: 11, scope: !12372)
!12375 = !DILocation(line: 14, column: 7, scope: !12372)
!12376 = !DILocation(line: 22, column: 1, scope: !12332)
!12377 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1973, file: !1973, line: 193, type: !12378, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1891, retainedNodes: !12387)
!12378 = !DISubroutineType(types: !12379)
!12379 = !{!105, !12380, !169, !22}
!12380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12381, size: 32)
!12381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12382)
!12382 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1706, line: 37, baseType: !12383)
!12383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1706, line: 32, size: 64, elements: !12384)
!12384 = !{!12385, !12386}
!12385 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12383, file: !1706, line: 34, baseType: !113, size: 32)
!12386 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12383, file: !1706, line: 36, baseType: !113, size: 32, offset: 32)
!12387 = !{!12388, !12389, !12390, !12391, !12392, !12393, !12394, !12395, !12397}
!12388 = !DILocalVariable(name: "pins", arg: 1, scope: !12377, file: !1973, line: 193, type: !12380)
!12389 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12377, file: !1973, line: 193, type: !169)
!12390 = !DILocalVariable(name: "reg", arg: 3, scope: !12377, file: !1973, line: 194, type: !22)
!12391 = !DILocalVariable(name: "pin", scope: !12377, file: !1973, line: 196, type: !113)
!12392 = !DILocalVariable(name: "mux", scope: !12377, file: !1973, line: 196, type: !113)
!12393 = !DILocalVariable(name: "pin_cgf", scope: !12377, file: !1973, line: 197, type: !113)
!12394 = !DILocalVariable(name: "ret", scope: !12377, file: !1973, line: 198, type: !105)
!12395 = !DILocalVariable(name: "i", scope: !12396, file: !1973, line: 209, type: !169)
!12396 = distinct !DILexicalBlock(scope: !12377, file: !1973, line: 209, column: 2)
!12397 = !DILocalVariable(name: "gpio_out", scope: !12398, file: !1973, line: 239, type: !113)
!12398 = distinct !DILexicalBlock(scope: !12399, file: !1973, line: 238, column: 55)
!12399 = distinct !DILexicalBlock(scope: !12400, file: !1973, line: 238, column: 14)
!12400 = distinct !DILexicalBlock(scope: !12401, file: !1973, line: 236, column: 14)
!12401 = distinct !DILexicalBlock(scope: !12402, file: !1973, line: 234, column: 7)
!12402 = distinct !DILexicalBlock(scope: !12403, file: !1973, line: 209, column: 41)
!12403 = distinct !DILexicalBlock(scope: !12396, file: !1973, line: 209, column: 2)
!12404 = !DILocation(line: 0, scope: !12377)
!12405 = !DILocation(line: 0, scope: !12396)
!12406 = !DILocation(line: 209, column: 25, scope: !12403)
!12407 = !DILocation(line: 209, column: 2, scope: !12396)
!12408 = distinct !{!12408, !12407, !12409}
!12409 = !DILocation(line: 259, column: 2, scope: !12396)
!12410 = !DILocation(line: 210, column: 17, scope: !12402)
!12411 = !DILocation(line: 234, column: 7, scope: !12401)
!12412 = !DILocation(line: 234, column: 33, scope: !12401)
!12413 = !DILocation(line: 234, column: 7, scope: !12402)
!12414 = !DILocation(line: 235, column: 22, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12401, file: !1973, line: 234, column: 49)
!12416 = !DILocation(line: 235, column: 29, scope: !12415)
!12417 = !DILocation(line: 236, column: 3, scope: !12415)
!12418 = !DILocation(line: 236, column: 14, scope: !12401)
!12419 = !DILocation(line: 239, column: 32, scope: !12398)
!12420 = !DILocation(line: 0, scope: !12398)
!12421 = !DILocation(line: 241, column: 8, scope: !12398)
!12422 = !DILocation(line: 246, column: 3, scope: !12398)
!12423 = !DILocation(line: 252, column: 9, scope: !12402)
!12424 = !DILocation(line: 255, column: 9, scope: !12402)
!12425 = !DILocation(line: 256, column: 11, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12402, file: !1973, line: 256, column: 7)
!12427 = !DILocation(line: 209, column: 37, scope: !12403)
!12428 = !DILocation(line: 256, column: 7, scope: !12402)
!12429 = !DILocation(line: 262, column: 1, scope: !12377)
!12430 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1973, file: !1973, line: 176, type: !12431, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1891, retainedNodes: !12433)
!12431 = !DISubroutineType(types: !12432)
!12432 = !{!105, !113, !113, !113}
!12433 = !{!12434, !12435, !12436, !12437}
!12434 = !DILocalVariable(name: "pin", arg: 1, scope: !12430, file: !1973, line: 176, type: !113)
!12435 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12430, file: !1973, line: 176, type: !113)
!12436 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12430, file: !1973, line: 176, type: !113)
!12437 = !DILocalVariable(name: "port_device", scope: !12430, file: !1973, line: 178, type: !1903)
!12438 = !DILocation(line: 0, scope: !12430)
!12439 = !DILocation(line: 180, column: 22, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12430, file: !1973, line: 180, column: 6)
!12441 = !DILocation(line: 180, column: 6, scope: !12430)
!12442 = !DILocation(line: 180, column: 6, scope: !12440)
!12443 = !DILocation(line: 184, column: 16, scope: !12430)
!12444 = !DILocation(line: 186, column: 19, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12430, file: !1973, line: 186, column: 6)
!12446 = !DILocation(line: 186, column: 28, scope: !12445)
!12447 = !DILocation(line: 186, column: 33, scope: !12445)
!12448 = !DILocation(line: 186, column: 6, scope: !12430)
!12449 = !DILocation(line: 190, column: 43, scope: !12430)
!12450 = !DILocation(line: 190, column: 9, scope: !12430)
!12451 = !DILocation(line: 190, column: 2, scope: !12430)
!12452 = !DILocation(line: 191, column: 1, scope: !12430)
!12453 = distinct !DISubprogram(name: "device_is_ready", scope: !10357, file: !10357, line: 47, type: !12454, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1891, retainedNodes: !12456)
!12454 = !DISubroutineType(types: !12455)
!12455 = !{!492, !1903}
!12456 = !{!12457}
!12457 = !DILocalVariable(name: "dev", arg: 1, scope: !12453, file: !10357, line: 47, type: !1903)
!12458 = !DILocation(line: 0, scope: !12453)
!12459 = !DILocation(line: 55, column: 2, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12453, file: !10357, line: 55, column: 2)
!12461 = !{i64 2149517438}
!12462 = !DILocation(line: 56, column: 9, scope: !12453)
!12463 = !DILocation(line: 56, column: 2, scope: !12453)
!12464 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !12454, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1891, retainedNodes: !12465)
!12465 = !{!12466}
!12466 = !DILocalVariable(name: "dev", arg: 1, scope: !12464, file: !481, line: 730, type: !1903)
!12467 = !DILocation(line: 0, scope: !12464)
!12468 = !DILocation(line: 732, column: 9, scope: !12464)
!12469 = !DILocation(line: 732, column: 2, scope: !12464)
!12470 = distinct !DISubprogram(name: "SystemInit", scope: !2025, file: !2025, line: 167, type: !266, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !397)
!12471 = !DILocation(line: 182, column: 1, scope: !12470)
!12472 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2025, file: !2025, line: 220, type: !266, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !12473)
!12473 = !{!12474, !12475, !12476, !12477, !12478}
!12474 = !DILocalVariable(name: "tmp", scope: !12472, file: !2025, line: 222, type: !113)
!12475 = !DILocalVariable(name: "pllvco", scope: !12472, file: !2025, line: 222, type: !113)
!12476 = !DILocalVariable(name: "pllp", scope: !12472, file: !2025, line: 222, type: !113)
!12477 = !DILocalVariable(name: "pllsource", scope: !12472, file: !2025, line: 222, type: !113)
!12478 = !DILocalVariable(name: "pllm", scope: !12472, file: !2025, line: 222, type: !113)
!12479 = !DILocation(line: 0, scope: !12472)
!12480 = !DILocation(line: 225, column: 14, scope: !12472)
!12481 = !DILocation(line: 225, column: 19, scope: !12472)
!12482 = !DILocation(line: 227, column: 3, scope: !12472)
!12483 = !DILocation(line: 240, column: 25, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12472, file: !2025, line: 228, column: 3)
!12485 = !DILocation(line: 241, column: 19, scope: !12484)
!12486 = !DILocation(line: 241, column: 27, scope: !12484)
!12487 = !DILocation(line: 0, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12484, file: !2025, line: 243, column: 11)
!12489 = !DILocation(line: 254, column: 22, scope: !12484)
!12490 = !DILocation(line: 254, column: 62, scope: !12484)
!12491 = !DILocation(line: 255, column: 31, scope: !12484)
!12492 = !DILocation(line: 256, column: 7, scope: !12484)
!12493 = !DILocation(line: 0, scope: !12484)
!12494 = !DILocation(line: 263, column: 30, scope: !12472)
!12495 = !DILocation(line: 263, column: 52, scope: !12472)
!12496 = !DILocation(line: 263, column: 9, scope: !12472)
!12497 = !DILocation(line: 265, column: 19, scope: !12472)
!12498 = !DILocation(line: 266, column: 1, scope: !12472)
!12499 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !12500, file: !12500, line: 87, type: !12501, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !12540)
!12500 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12501 = !DISubroutineType(types: !12502)
!12502 = !{!12503, !12504}
!12503 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3079, line: 44, baseType: !3078)
!12504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12505, size: 32)
!12505 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !12506, line: 172, baseType: !12507)
!12506 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12507 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12506, line: 121, size: 736, elements: !12508)
!12508 = !{!12509, !12510, !12519, !12527, !12528, !12529, !12530, !12531, !12532, !12533, !12534, !12535, !12536, !12537, !12538, !12539}
!12509 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !12507, file: !12506, line: 123, baseType: !113, size: 32)
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !12507, file: !12506, line: 126, baseType: !12511, size: 160, offset: 32)
!12511 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !12506, line: 97, baseType: !12512)
!12512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12506, line: 79, size: 160, elements: !12513)
!12513 = !{!12514, !12515, !12516, !12517, !12518}
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !12512, file: !12506, line: 81, baseType: !113, size: 32)
!12515 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !12512, file: !12506, line: 84, baseType: !113, size: 32, offset: 32)
!12516 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !12512, file: !12506, line: 87, baseType: !113, size: 32, offset: 64)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !12512, file: !12506, line: 90, baseType: !113, size: 32, offset: 96)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !12512, file: !12506, line: 94, baseType: !113, size: 32, offset: 128)
!12519 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !12507, file: !12506, line: 129, baseType: !12520, size: 128, offset: 192)
!12520 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !12506, line: 116, baseType: !12521)
!12521 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12506, line: 102, size: 128, elements: !12522)
!12522 = !{!12523, !12524, !12525, !12526}
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !12521, file: !12506, line: 104, baseType: !113, size: 32)
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !12521, file: !12506, line: 107, baseType: !113, size: 32, offset: 32)
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !12521, file: !12506, line: 110, baseType: !113, size: 32, offset: 64)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !12521, file: !12506, line: 113, baseType: !113, size: 32, offset: 96)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !12507, file: !12506, line: 132, baseType: !113, size: 32, offset: 320)
!12528 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !12507, file: !12506, line: 136, baseType: !113, size: 32, offset: 352)
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !12507, file: !12506, line: 140, baseType: !113, size: 32, offset: 384)
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !12507, file: !12506, line: 143, baseType: !113, size: 32, offset: 416)
!12531 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !12507, file: !12506, line: 146, baseType: !113, size: 32, offset: 448)
!12532 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !12507, file: !12506, line: 149, baseType: !113, size: 32, offset: 480)
!12533 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !12507, file: !12506, line: 152, baseType: !113, size: 32, offset: 512)
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !12507, file: !12506, line: 155, baseType: !113, size: 32, offset: 544)
!12535 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !12507, file: !12506, line: 158, baseType: !113, size: 32, offset: 576)
!12536 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !12507, file: !12506, line: 161, baseType: !113, size: 32, offset: 608)
!12537 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !12507, file: !12506, line: 164, baseType: !113, size: 32, offset: 640)
!12538 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !12507, file: !12506, line: 167, baseType: !113, size: 32, offset: 672)
!12539 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !12507, file: !12506, line: 170, baseType: !169, size: 8, offset: 704)
!12540 = !{!12541, !12542, !12543, !12544, !12545, !12546, !12547, !12548, !12549, !12550, !12551}
!12541 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12499, file: !12500, line: 87, type: !12504)
!12542 = !DILocalVariable(name: "tickstart", scope: !12499, file: !12500, line: 89, type: !113)
!12543 = !DILocalVariable(name: "tmpreg1", scope: !12499, file: !12500, line: 90, type: !113)
!12544 = !DILocalVariable(name: "plli2sp", scope: !12499, file: !12500, line: 91, type: !113)
!12545 = !DILocalVariable(name: "plli2sq", scope: !12499, file: !12500, line: 92, type: !113)
!12546 = !DILocalVariable(name: "plli2sr", scope: !12499, file: !12500, line: 93, type: !113)
!12547 = !DILocalVariable(name: "pllsaip", scope: !12499, file: !12500, line: 94, type: !113)
!12548 = !DILocalVariable(name: "pllsaiq", scope: !12499, file: !12500, line: 95, type: !113)
!12549 = !DILocalVariable(name: "plli2sused", scope: !12499, file: !12500, line: 96, type: !113)
!12550 = !DILocalVariable(name: "pllsaiused", scope: !12499, file: !12500, line: 97, type: !113)
!12551 = !DILocalVariable(name: "tmpreg", scope: !12552, file: !12500, line: 184, type: !461)
!12552 = distinct !DILexicalBlock(scope: !12553, file: !12500, line: 184, column: 5)
!12553 = distinct !DILexicalBlock(scope: !12554, file: !12500, line: 179, column: 3)
!12554 = distinct !DILexicalBlock(scope: !12499, file: !12500, line: 178, column: 6)
!12555 = !DILocation(line: 0, scope: !12499)
!12556 = !DILocation(line: 103, column: 23, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12499, file: !12500, line: 103, column: 6)
!12558 = !DILocation(line: 103, column: 45, scope: !12557)
!12559 = !DILocation(line: 103, column: 71, scope: !12557)
!12560 = !DILocation(line: 103, column: 6, scope: !12499)
!12561 = !DILocation(line: 109, column: 5, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12557, file: !12500, line: 104, column: 3)
!12563 = !DILocation(line: 111, column: 23, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12562, file: !12500, line: 111, column: 8)
!12565 = !DILocation(line: 111, column: 45, scope: !12564)
!12566 = !DILocation(line: 111, column: 8, scope: !12562)
!12567 = !DILocation(line: 119, column: 23, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12499, file: !12500, line: 119, column: 6)
!12569 = !DILocation(line: 119, column: 45, scope: !12568)
!12570 = !DILocation(line: 119, column: 71, scope: !12568)
!12571 = !DILocation(line: 119, column: 6, scope: !12499)
!12572 = !DILocation(line: 125, column: 5, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12568, file: !12500, line: 120, column: 3)
!12574 = !DILocation(line: 127, column: 23, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12573, file: !12500, line: 127, column: 8)
!12576 = !DILocation(line: 127, column: 45, scope: !12575)
!12577 = !DILocation(line: 127, column: 8, scope: !12573)
!12578 = !DILocation(line: 135, column: 23, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12499, file: !12500, line: 135, column: 6)
!12580 = !DILocation(line: 135, column: 45, scope: !12579)
!12581 = !DILocation(line: 135, column: 67, scope: !12579)
!12582 = !DILocation(line: 135, column: 6, scope: !12499)
!12583 = !DILocation(line: 141, column: 5, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12579, file: !12500, line: 136, column: 3)
!12585 = !DILocation(line: 143, column: 23, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12584, file: !12500, line: 143, column: 8)
!12587 = !DILocation(line: 143, column: 42, scope: !12586)
!12588 = !DILocation(line: 143, column: 8, scope: !12584)
!12589 = !DILocation(line: 148, column: 42, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12584, file: !12500, line: 148, column: 8)
!12591 = !DILocation(line: 148, column: 8, scope: !12584)
!12592 = !DILocation(line: 156, column: 23, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12499, file: !12500, line: 156, column: 6)
!12594 = !DILocation(line: 156, column: 45, scope: !12593)
!12595 = !DILocation(line: 156, column: 67, scope: !12593)
!12596 = !DILocation(line: 156, column: 6, scope: !12499)
!12597 = !DILocation(line: 162, column: 5, scope: !12598)
!12598 = distinct !DILexicalBlock(scope: !12593, file: !12500, line: 157, column: 3)
!12599 = !DILocation(line: 165, column: 23, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12598, file: !12500, line: 165, column: 8)
!12601 = !DILocation(line: 165, column: 42, scope: !12600)
!12602 = !DILocation(line: 165, column: 8, scope: !12598)
!12603 = !DILocation(line: 170, column: 42, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12598, file: !12500, line: 170, column: 8)
!12605 = !DILocation(line: 170, column: 8, scope: !12598)
!12606 = !DILocation(line: 178, column: 23, scope: !12554)
!12607 = !DILocation(line: 178, column: 45, scope: !12554)
!12608 = !DILocation(line: 178, column: 66, scope: !12554)
!12609 = !DILocation(line: 178, column: 6, scope: !12499)
!12610 = !DILocation(line: 184, column: 5, scope: !12552)
!12611 = !DILocation(line: 184, column: 5, scope: !12553)
!12612 = !DILocation(line: 187, column: 13, scope: !12553)
!12613 = !DILocation(line: 190, column: 17, scope: !12553)
!12614 = !DILocation(line: 192, column: 5, scope: !12553)
!12615 = !DILocation(line: 192, column: 17, scope: !12553)
!12616 = !DILocation(line: 192, column: 20, scope: !12553)
!12617 = !DILocation(line: 192, column: 34, scope: !12553)
!12618 = !DILocation(line: 194, column: 11, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12620, file: !12500, line: 194, column: 10)
!12620 = distinct !DILexicalBlock(scope: !12553, file: !12500, line: 193, column: 5)
!12621 = !DILocation(line: 194, column: 25, scope: !12619)
!12622 = !DILocation(line: 194, column: 39, scope: !12619)
!12623 = !DILocation(line: 194, column: 10, scope: !12620)
!12624 = distinct !{!12624, !12614, !12625}
!12625 = !DILocation(line: 198, column: 5, scope: !12553)
!12626 = !DILocation(line: 200, column: 21, scope: !12553)
!12627 = !DILocation(line: 200, column: 26, scope: !12553)
!12628 = !DILocation(line: 201, column: 17, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12553, file: !12500, line: 201, column: 8)
!12630 = !DILocation(line: 201, column: 33, scope: !12629)
!12631 = !DILocation(line: 201, column: 66, scope: !12629)
!12632 = !DILocation(line: 201, column: 84, scope: !12629)
!12633 = !DILocation(line: 201, column: 47, scope: !12629)
!12634 = !DILocation(line: 201, column: 8, scope: !12553)
!12635 = !DILocation(line: 204, column: 23, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12629, file: !12500, line: 202, column: 5)
!12637 = !DILocation(line: 204, column: 28, scope: !12636)
!12638 = !DILocation(line: 206, column: 7, scope: !12636)
!12639 = !DILocation(line: 207, column: 7, scope: !12636)
!12640 = !DILocation(line: 209, column: 17, scope: !12636)
!12641 = !DILocation(line: 212, column: 10, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12636, file: !12500, line: 212, column: 10)
!12643 = !DILocation(line: 212, column: 10, scope: !12636)
!12644 = !DILocation(line: 215, column: 21, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12642, file: !12500, line: 213, column: 7)
!12646 = !DILocation(line: 218, column: 9, scope: !12645)
!12647 = !DILocation(line: 218, column: 15, scope: !12645)
!12648 = !DILocation(line: 218, column: 51, scope: !12645)
!12649 = !DILocation(line: 220, column: 15, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12651, file: !12500, line: 220, column: 14)
!12651 = distinct !DILexicalBlock(scope: !12645, file: !12500, line: 219, column: 9)
!12652 = !DILocation(line: 220, column: 29, scope: !12650)
!12653 = !DILocation(line: 220, column: 43, scope: !12650)
!12654 = !DILocation(line: 220, column: 14, scope: !12651)
!12655 = distinct !{!12655, !12646, !12656}
!12656 = !DILocation(line: 224, column: 9, scope: !12645)
!12657 = !DILocation(line: 227, column: 5, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12553, file: !12500, line: 227, column: 5)
!12659 = !DILocation(line: 232, column: 23, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12499, file: !12500, line: 232, column: 6)
!12661 = !DILocation(line: 228, column: 3, scope: !12553)
!12662 = !DILocation(line: 232, column: 45, scope: !12660)
!12663 = !DILocation(line: 232, column: 66, scope: !12660)
!12664 = !DILocation(line: 232, column: 6, scope: !12499)
!12665 = !DILocation(line: 235, column: 5, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12660, file: !12500, line: 233, column: 3)
!12667 = !DILocation(line: 240, column: 23, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12499, file: !12500, line: 240, column: 6)
!12669 = !DILocation(line: 236, column: 3, scope: !12666)
!12670 = !DILocation(line: 240, column: 45, scope: !12668)
!12671 = !DILocation(line: 240, column: 70, scope: !12668)
!12672 = !DILocation(line: 240, column: 6, scope: !12499)
!12673 = !DILocation(line: 246, column: 5, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12668, file: !12500, line: 241, column: 3)
!12675 = !DILocation(line: 251, column: 23, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12499, file: !12500, line: 251, column: 6)
!12677 = !DILocation(line: 247, column: 3, scope: !12674)
!12678 = !DILocation(line: 251, column: 45, scope: !12676)
!12679 = !DILocation(line: 251, column: 66, scope: !12676)
!12680 = !DILocation(line: 251, column: 6, scope: !12499)
!12681 = !DILocation(line: 257, column: 5, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12676, file: !12500, line: 252, column: 3)
!12683 = !DILocation(line: 262, column: 23, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12499, file: !12500, line: 262, column: 6)
!12685 = !DILocation(line: 258, column: 3, scope: !12682)
!12686 = !DILocation(line: 262, column: 45, scope: !12684)
!12687 = !DILocation(line: 262, column: 68, scope: !12684)
!12688 = !DILocation(line: 262, column: 6, scope: !12499)
!12689 = !DILocation(line: 268, column: 5, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12684, file: !12500, line: 263, column: 3)
!12691 = !DILocation(line: 271, column: 23, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12690, file: !12500, line: 271, column: 8)
!12693 = !DILocation(line: 271, column: 43, scope: !12692)
!12694 = !DILocation(line: 271, column: 8, scope: !12690)
!12695 = !DILocation(line: 279, column: 23, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12499, file: !12500, line: 279, column: 6)
!12697 = !DILocation(line: 279, column: 45, scope: !12696)
!12698 = !DILocation(line: 279, column: 67, scope: !12696)
!12699 = !DILocation(line: 279, column: 6, scope: !12499)
!12700 = !DILocation(line: 285, column: 5, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12696, file: !12500, line: 280, column: 3)
!12702 = !DILocation(line: 290, column: 23, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12499, file: !12500, line: 290, column: 6)
!12704 = !DILocation(line: 286, column: 3, scope: !12701)
!12705 = !DILocation(line: 290, column: 45, scope: !12703)
!12706 = !DILocation(line: 290, column: 70, scope: !12703)
!12707 = !DILocation(line: 290, column: 6, scope: !12499)
!12708 = !DILocation(line: 296, column: 5, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12703, file: !12500, line: 291, column: 3)
!12710 = !DILocation(line: 298, column: 23, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12709, file: !12500, line: 298, column: 8)
!12712 = !DILocation(line: 298, column: 43, scope: !12711)
!12713 = !DILocation(line: 298, column: 8, scope: !12709)
!12714 = !DILocation(line: 308, column: 44, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12499, file: !12500, line: 308, column: 6)
!12716 = !DILocation(line: 308, column: 18, scope: !12715)
!12717 = !DILocation(line: 308, column: 25, scope: !12715)
!12718 = !DILocation(line: 308, column: 65, scope: !12715)
!12719 = !DILocation(line: 308, column: 6, scope: !12499)
!12720 = !DILocation(line: 311, column: 5, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12715, file: !12500, line: 309, column: 3)
!12722 = !DILocation(line: 313, column: 17, scope: !12721)
!12723 = !DILocation(line: 315, column: 5, scope: !12721)
!12724 = !DILocation(line: 315, column: 11, scope: !12721)
!12725 = !DILocation(line: 317, column: 11, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12727, file: !12500, line: 317, column: 10)
!12727 = distinct !DILexicalBlock(scope: !12721, file: !12500, line: 316, column: 5)
!12728 = !DILocation(line: 317, column: 25, scope: !12726)
!12729 = !DILocation(line: 317, column: 39, scope: !12726)
!12730 = !DILocation(line: 317, column: 10, scope: !12727)
!12731 = distinct !{!12731, !12723, !12732}
!12732 = !DILocation(line: 322, column: 5, scope: !12721)
!12733 = !DILocation(line: 329, column: 27, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12721, file: !12500, line: 329, column: 8)
!12735 = !DILocation(line: 329, column: 49, scope: !12734)
!12736 = !DILocation(line: 329, column: 75, scope: !12734)
!12737 = !DILocation(line: 329, column: 102, scope: !12734)
!12738 = !DILocation(line: 329, column: 121, scope: !12734)
!12739 = !DILocation(line: 329, column: 143, scope: !12734)
!12740 = !DILocation(line: 329, column: 176, scope: !12734)
!12741 = !DILocation(line: 330, column: 49, scope: !12734)
!12742 = !DILocation(line: 330, column: 75, scope: !12734)
!12743 = !DILocation(line: 330, column: 102, scope: !12734)
!12744 = !DILocation(line: 330, column: 121, scope: !12734)
!12745 = !DILocation(line: 330, column: 143, scope: !12734)
!12746 = !DILocation(line: 329, column: 8, scope: !12721)
!12747 = !DILocation(line: 336, column: 26, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12734, file: !12500, line: 331, column: 5)
!12749 = !DILocation(line: 336, column: 100, scope: !12748)
!12750 = !DILocation(line: 337, column: 24, scope: !12748)
!12751 = !DILocation(line: 337, column: 61, scope: !12748)
!12752 = !DILocation(line: 341, column: 7, scope: !12748)
!12753 = !DILocation(line: 345, column: 27, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12721, file: !12500, line: 345, column: 8)
!12755 = !DILocation(line: 342, column: 5, scope: !12748)
!12756 = !DILocation(line: 345, column: 49, scope: !12754)
!12757 = !DILocation(line: 345, column: 71, scope: !12754)
!12758 = !DILocation(line: 345, column: 94, scope: !12754)
!12759 = !DILocation(line: 345, column: 113, scope: !12754)
!12760 = !DILocation(line: 345, column: 132, scope: !12754)
!12761 = !DILocation(line: 345, column: 162, scope: !12754)
!12762 = !DILocation(line: 346, column: 49, scope: !12754)
!12763 = !DILocation(line: 346, column: 71, scope: !12754)
!12764 = !DILocation(line: 346, column: 94, scope: !12754)
!12765 = !DILocation(line: 346, column: 113, scope: !12754)
!12766 = !DILocation(line: 346, column: 132, scope: !12754)
!12767 = !DILocation(line: 345, column: 8, scope: !12721)
!12768 = !DILocation(line: 354, column: 26, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12754, file: !12500, line: 347, column: 5)
!12770 = !DILocation(line: 354, column: 100, scope: !12769)
!12771 = !DILocation(line: 355, column: 24, scope: !12769)
!12772 = !DILocation(line: 355, column: 61, scope: !12769)
!12773 = !DILocation(line: 360, column: 7, scope: !12769)
!12774 = !DILocation(line: 363, column: 7, scope: !12769)
!12775 = !DILocation(line: 367, column: 26, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12721, file: !12500, line: 367, column: 8)
!12777 = !DILocation(line: 364, column: 5, scope: !12769)
!12778 = !DILocation(line: 367, column: 48, scope: !12776)
!12779 = !DILocation(line: 367, column: 73, scope: !12776)
!12780 = !DILocation(line: 367, column: 99, scope: !12776)
!12781 = !DILocation(line: 367, column: 118, scope: !12776)
!12782 = !DILocation(line: 367, column: 138, scope: !12776)
!12783 = !DILocation(line: 367, column: 8, scope: !12721)
!12784 = !DILocation(line: 372, column: 26, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12776, file: !12500, line: 368, column: 5)
!12786 = !DILocation(line: 373, column: 24, scope: !12785)
!12787 = !DILocation(line: 373, column: 61, scope: !12785)
!12788 = !DILocation(line: 377, column: 7, scope: !12785)
!12789 = !DILocation(line: 381, column: 24, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12721, file: !12500, line: 381, column: 8)
!12791 = !DILocation(line: 378, column: 5, scope: !12785)
!12792 = !DILocation(line: 381, column: 45, scope: !12790)
!12793 = !DILocation(line: 381, column: 69, scope: !12790)
!12794 = !DILocation(line: 381, column: 8, scope: !12721)
!12795 = !DILocation(line: 390, column: 7, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12790, file: !12500, line: 382, column: 5)
!12797 = !DILocation(line: 391, column: 5, scope: !12796)
!12798 = !DILocation(line: 394, column: 5, scope: !12721)
!12799 = !DILocation(line: 396, column: 17, scope: !12721)
!12800 = !DILocation(line: 398, column: 5, scope: !12721)
!12801 = !DILocation(line: 398, column: 11, scope: !12721)
!12802 = !DILocation(line: 398, column: 51, scope: !12721)
!12803 = !DILocation(line: 400, column: 11, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12805, file: !12500, line: 400, column: 10)
!12805 = distinct !DILexicalBlock(scope: !12721, file: !12500, line: 399, column: 5)
!12806 = !DILocation(line: 400, column: 25, scope: !12804)
!12807 = !DILocation(line: 400, column: 39, scope: !12804)
!12808 = !DILocation(line: 400, column: 10, scope: !12805)
!12809 = distinct !{!12809, !12800, !12810}
!12810 = !DILocation(line: 405, column: 5, scope: !12721)
!12811 = !DILocation(line: 411, column: 17, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12499, file: !12500, line: 411, column: 6)
!12813 = !DILocation(line: 411, column: 6, scope: !12499)
!12814 = !DILocation(line: 414, column: 5, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12812, file: !12500, line: 412, column: 3)
!12816 = !DILocation(line: 416, column: 17, scope: !12815)
!12817 = !DILocation(line: 418, column: 5, scope: !12815)
!12818 = !DILocation(line: 418, column: 11, scope: !12815)
!12819 = !DILocation(line: 420, column: 11, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12821, file: !12500, line: 420, column: 10)
!12821 = distinct !DILexicalBlock(scope: !12815, file: !12500, line: 419, column: 5)
!12822 = !DILocation(line: 420, column: 25, scope: !12820)
!12823 = !DILocation(line: 420, column: 39, scope: !12820)
!12824 = !DILocation(line: 420, column: 10, scope: !12821)
!12825 = distinct !{!12825, !12817, !12826}
!12826 = !DILocation(line: 425, column: 5, scope: !12815)
!12827 = !DILocation(line: 432, column: 27, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12815, file: !12500, line: 432, column: 8)
!12829 = !DILocation(line: 432, column: 49, scope: !12828)
!12830 = !DILocation(line: 432, column: 71, scope: !12828)
!12831 = !DILocation(line: 432, column: 94, scope: !12828)
!12832 = !DILocation(line: 432, column: 113, scope: !12828)
!12833 = !DILocation(line: 432, column: 132, scope: !12828)
!12834 = !DILocation(line: 432, column: 162, scope: !12828)
!12835 = !DILocation(line: 433, column: 49, scope: !12828)
!12836 = !DILocation(line: 433, column: 71, scope: !12828)
!12837 = !DILocation(line: 433, column: 94, scope: !12828)
!12838 = !DILocation(line: 433, column: 113, scope: !12828)
!12839 = !DILocation(line: 433, column: 132, scope: !12828)
!12840 = !DILocation(line: 432, column: 8, scope: !12815)
!12841 = !DILocation(line: 441, column: 26, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12828, file: !12500, line: 434, column: 5)
!12843 = !DILocation(line: 441, column: 100, scope: !12842)
!12844 = !DILocation(line: 445, column: 7, scope: !12842)
!12845 = !DILocation(line: 448, column: 7, scope: !12842)
!12846 = !DILocation(line: 453, column: 26, scope: !12847)
!12847 = distinct !DILexicalBlock(scope: !12815, file: !12500, line: 453, column: 8)
!12848 = !DILocation(line: 449, column: 5, scope: !12842)
!12849 = !DILocation(line: 453, column: 48, scope: !12847)
!12850 = !DILocation(line: 453, column: 71, scope: !12847)
!12851 = !DILocation(line: 453, column: 95, scope: !12847)
!12852 = !DILocation(line: 453, column: 114, scope: !12847)
!12853 = !DILocation(line: 453, column: 134, scope: !12847)
!12854 = !DILocation(line: 453, column: 8, scope: !12815)
!12855 = !DILocation(line: 458, column: 24, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12847, file: !12500, line: 454, column: 5)
!12857 = !DILocation(line: 458, column: 61, scope: !12856)
!12858 = !DILocation(line: 462, column: 7, scope: !12856)
!12859 = !DILocation(line: 463, column: 5, scope: !12856)
!12860 = !DILocation(line: 466, column: 5, scope: !12815)
!12861 = !DILocation(line: 468, column: 17, scope: !12815)
!12862 = !DILocation(line: 470, column: 5, scope: !12815)
!12863 = !DILocation(line: 470, column: 11, scope: !12815)
!12864 = !DILocation(line: 470, column: 39, scope: !12815)
!12865 = !DILocation(line: 472, column: 11, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12867, file: !12500, line: 472, column: 10)
!12867 = distinct !DILexicalBlock(scope: !12815, file: !12500, line: 471, column: 5)
!12868 = !DILocation(line: 472, column: 25, scope: !12866)
!12869 = !DILocation(line: 472, column: 39, scope: !12866)
!12870 = !DILocation(line: 472, column: 10, scope: !12867)
!12871 = distinct !{!12871, !12862, !12872}
!12872 = !DILocation(line: 477, column: 5, scope: !12815)
!12873 = !DILocation(line: 480, column: 1, scope: !12499)
!12874 = !DISubprogram(name: "HAL_GetTick", scope: !12875, file: !12875, line: 234, type: !395, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!12875 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12876 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !12500, file: !12500, line: 489, type: !12877, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !12879)
!12877 = !DISubroutineType(types: !12878)
!12878 = !{null, !12504}
!12879 = !{!12880, !12881}
!12880 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12876, file: !12500, line: 489, type: !12504)
!12881 = !DILocalVariable(name: "tempreg", scope: !12876, file: !12500, line: 491, type: !113)
!12882 = !DILocation(line: 0, scope: !12876)
!12883 = !DILocation(line: 494, column: 18, scope: !12876)
!12884 = !DILocation(line: 494, column: 39, scope: !12876)
!12885 = !DILocation(line: 502, column: 52, scope: !12876)
!12886 = !DILocation(line: 502, column: 63, scope: !12876)
!12887 = !DILocation(line: 502, column: 25, scope: !12876)
!12888 = !DILocation(line: 502, column: 33, scope: !12876)
!12889 = !DILocation(line: 503, column: 52, scope: !12876)
!12890 = !DILocation(line: 503, column: 89, scope: !12876)
!12891 = !DILocation(line: 503, column: 25, scope: !12876)
!12892 = !DILocation(line: 503, column: 33, scope: !12876)
!12893 = !DILocation(line: 504, column: 54, scope: !12876)
!12894 = !DILocation(line: 504, column: 128, scope: !12876)
!12895 = !DILocation(line: 504, column: 25, scope: !12876)
!12896 = !DILocation(line: 504, column: 33, scope: !12876)
!12897 = !DILocation(line: 505, column: 52, scope: !12876)
!12898 = !DILocation(line: 505, column: 89, scope: !12876)
!12899 = !DILocation(line: 505, column: 25, scope: !12876)
!12900 = !DILocation(line: 505, column: 33, scope: !12876)
!12901 = !DILocation(line: 506, column: 52, scope: !12876)
!12902 = !DILocation(line: 506, column: 89, scope: !12876)
!12903 = !DILocation(line: 506, column: 25, scope: !12876)
!12904 = !DILocation(line: 506, column: 33, scope: !12876)
!12905 = !DILocation(line: 508, column: 52, scope: !12876)
!12906 = !DILocation(line: 508, column: 63, scope: !12876)
!12907 = !DILocation(line: 508, column: 25, scope: !12876)
!12908 = !DILocation(line: 508, column: 33, scope: !12876)
!12909 = !DILocation(line: 509, column: 52, scope: !12876)
!12910 = !DILocation(line: 509, column: 89, scope: !12876)
!12911 = !DILocation(line: 509, column: 25, scope: !12876)
!12912 = !DILocation(line: 509, column: 33, scope: !12876)
!12913 = !DILocation(line: 510, column: 54, scope: !12876)
!12914 = !DILocation(line: 510, column: 128, scope: !12876)
!12915 = !DILocation(line: 510, column: 25, scope: !12876)
!12916 = !DILocation(line: 510, column: 33, scope: !12876)
!12917 = !DILocation(line: 511, column: 52, scope: !12876)
!12918 = !DILocation(line: 511, column: 89, scope: !12876)
!12919 = !DILocation(line: 511, column: 25, scope: !12876)
!12920 = !DILocation(line: 511, column: 33, scope: !12876)
!12921 = !DILocation(line: 513, column: 48, scope: !12876)
!12922 = !DILocation(line: 513, column: 56, scope: !12876)
!12923 = !DILocation(line: 513, column: 18, scope: !12876)
!12924 = !DILocation(line: 513, column: 29, scope: !12876)
!12925 = !DILocation(line: 514, column: 48, scope: !12876)
!12926 = !DILocation(line: 514, column: 82, scope: !12876)
!12927 = !DILocation(line: 514, column: 18, scope: !12876)
!12928 = !DILocation(line: 514, column: 29, scope: !12876)
!12929 = !DILocation(line: 517, column: 39, scope: !12876)
!12930 = !DILocation(line: 517, column: 18, scope: !12876)
!12931 = !DILocation(line: 517, column: 37, scope: !12876)
!12932 = !DILocation(line: 520, column: 39, scope: !12876)
!12933 = !DILocation(line: 520, column: 18, scope: !12876)
!12934 = !DILocation(line: 520, column: 37, scope: !12876)
!12935 = !DILocation(line: 523, column: 42, scope: !12876)
!12936 = !DILocation(line: 523, column: 18, scope: !12876)
!12937 = !DILocation(line: 523, column: 40, scope: !12876)
!12938 = !DILocation(line: 526, column: 42, scope: !12876)
!12939 = !DILocation(line: 526, column: 18, scope: !12876)
!12940 = !DILocation(line: 526, column: 40, scope: !12876)
!12941 = !DILocation(line: 529, column: 19, scope: !12876)
!12942 = !DILocation(line: 529, column: 24, scope: !12876)
!12943 = !DILocation(line: 530, column: 67, scope: !12876)
!12944 = !DILocation(line: 530, column: 72, scope: !12876)
!12945 = !DILocation(line: 530, column: 59, scope: !12876)
!12946 = !DILocation(line: 530, column: 18, scope: !12876)
!12947 = !DILocation(line: 530, column: 36, scope: !12876)
!12948 = !DILocation(line: 533, column: 38, scope: !12876)
!12949 = !DILocation(line: 533, column: 18, scope: !12876)
!12950 = !DILocation(line: 533, column: 36, scope: !12876)
!12951 = !DILocation(line: 536, column: 42, scope: !12876)
!12952 = !DILocation(line: 536, column: 18, scope: !12876)
!12953 = !DILocation(line: 536, column: 40, scope: !12876)
!12954 = !DILocation(line: 539, column: 40, scope: !12876)
!12955 = !DILocation(line: 539, column: 18, scope: !12876)
!12956 = !DILocation(line: 539, column: 38, scope: !12876)
!12957 = !DILocation(line: 542, column: 39, scope: !12876)
!12958 = !DILocation(line: 542, column: 18, scope: !12876)
!12959 = !DILocation(line: 542, column: 37, scope: !12876)
!12960 = !DILocation(line: 545, column: 40, scope: !12876)
!12961 = !DILocation(line: 545, column: 18, scope: !12876)
!12962 = !DILocation(line: 545, column: 38, scope: !12876)
!12963 = !DILocation(line: 548, column: 13, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12876, file: !12500, line: 548, column: 7)
!12965 = !DILocation(line: 548, column: 7, scope: !12876)
!12966 = !DILocation(line: 550, column: 20, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12964, file: !12500, line: 549, column: 3)
!12968 = !DILocation(line: 550, column: 37, scope: !12967)
!12969 = !DILocation(line: 556, column: 1, scope: !12876)
!12970 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !12500, file: !12500, line: 569, type: !9131, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !12971)
!12971 = !{!12972, !12973, !12974, !12975, !12976, !12977, !12978}
!12972 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !12970, file: !12500, line: 569, type: !113)
!12973 = !DILocalVariable(name: "tmpreg1", scope: !12970, file: !12500, line: 571, type: !113)
!12974 = !DILocalVariable(name: "frequency", scope: !12970, file: !12500, line: 573, type: !113)
!12975 = !DILocalVariable(name: "vcoinput", scope: !12970, file: !12500, line: 575, type: !113)
!12976 = !DILocalVariable(name: "saiclocksource", scope: !12970, file: !12500, line: 577, type: !113)
!12977 = !DILocalVariable(name: "srcclk", scope: !12970, file: !12500, line: 578, type: !113)
!12978 = !DILocalVariable(name: "vcooutput", scope: !12970, file: !12500, line: 580, type: !113)
!12979 = !DILocation(line: 0, scope: !12970)
!12980 = !DILocation(line: 581, column: 3, scope: !12970)
!12981 = !DILocation(line: 586, column: 29, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12983, file: !12500, line: 585, column: 5)
!12983 = distinct !DILexicalBlock(scope: !12970, file: !12500, line: 582, column: 3)
!12984 = !DILocation(line: 588, column: 7, scope: !12982)
!12985 = !DILocation(line: 594, column: 20, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12987, file: !12500, line: 594, column: 14)
!12987 = distinct !DILexicalBlock(scope: !12988, file: !12500, line: 591, column: 9)
!12988 = distinct !DILexicalBlock(scope: !12982, file: !12500, line: 589, column: 7)
!12989 = !DILocation(line: 0, scope: !12986)
!12990 = !DILocation(line: 606, column: 27, scope: !12987)
!12991 = !DILocation(line: 606, column: 64, scope: !12987)
!12992 = !DILocation(line: 607, column: 42, scope: !12987)
!12993 = !DILocation(line: 607, column: 79, scope: !12987)
!12994 = !DILocation(line: 607, column: 33, scope: !12987)
!12995 = !DILocation(line: 607, column: 86, scope: !12987)
!12996 = !DILocation(line: 610, column: 29, scope: !12987)
!12997 = !DILocation(line: 610, column: 63, scope: !12987)
!12998 = !DILocation(line: 610, column: 70, scope: !12987)
!12999 = !DILocation(line: 611, column: 32, scope: !12987)
!13000 = !DILocation(line: 612, column: 11, scope: !12987)
!13001 = !DILocation(line: 619, column: 20, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !13003, file: !12500, line: 619, column: 14)
!13003 = distinct !DILexicalBlock(scope: !12988, file: !12500, line: 616, column: 9)
!13004 = !DILocation(line: 0, scope: !13002)
!13005 = !DILocation(line: 632, column: 27, scope: !13003)
!13006 = !DILocation(line: 632, column: 64, scope: !13003)
!13007 = !DILocation(line: 633, column: 42, scope: !13003)
!13008 = !DILocation(line: 633, column: 79, scope: !13003)
!13009 = !DILocation(line: 633, column: 33, scope: !13003)
!13010 = !DILocation(line: 633, column: 86, scope: !13003)
!13011 = !DILocation(line: 636, column: 28, scope: !13003)
!13012 = !DILocation(line: 636, column: 36, scope: !13003)
!13013 = !DILocation(line: 636, column: 62, scope: !13003)
!13014 = !DILocation(line: 637, column: 32, scope: !13003)
!13015 = !DILocation(line: 638, column: 11, scope: !13003)
!13016 = !DILocation(line: 645, column: 20, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !13018, file: !12500, line: 645, column: 14)
!13018 = distinct !DILexicalBlock(scope: !12988, file: !12500, line: 642, column: 9)
!13019 = !DILocation(line: 0, scope: !13017)
!13020 = !DILocation(line: 658, column: 27, scope: !13018)
!13021 = !DILocation(line: 658, column: 55, scope: !13018)
!13022 = !DILocation(line: 659, column: 42, scope: !13018)
!13023 = !DILocation(line: 659, column: 70, scope: !13018)
!13024 = !DILocation(line: 659, column: 33, scope: !13018)
!13025 = !DILocation(line: 659, column: 77, scope: !13018)
!13026 = !DILocation(line: 660, column: 11, scope: !13018)
!13027 = !DILocation(line: 665, column: 11, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !12988, file: !12500, line: 663, column: 9)
!13029 = !DILocation(line: 669, column: 20, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13031, file: !12500, line: 669, column: 14)
!13031 = distinct !DILexicalBlock(scope: !12988, file: !12500, line: 668, column: 9)
!13032 = !DILocation(line: 691, column: 16, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !12983, file: !12500, line: 689, column: 5)
!13034 = !DILocation(line: 692, column: 7, scope: !13033)
!13035 = !DILocation(line: 706, column: 20, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13037, file: !12500, line: 706, column: 14)
!13037 = distinct !DILexicalBlock(scope: !13038, file: !12500, line: 703, column: 9)
!13038 = distinct !DILexicalBlock(scope: !13033, file: !12500, line: 693, column: 7)
!13039 = !DILocation(line: 0, scope: !13036)
!13040 = !DILocation(line: 718, column: 53, scope: !13037)
!13041 = !DILocation(line: 718, column: 90, scope: !13037)
!13042 = !DILocation(line: 718, column: 43, scope: !13037)
!13043 = !DILocation(line: 720, column: 53, scope: !13037)
!13044 = !DILocation(line: 720, column: 90, scope: !13037)
!13045 = !DILocation(line: 720, column: 44, scope: !13037)
!13046 = !DILocation(line: 721, column: 11, scope: !13037)
!13047 = !DILocation(line: 728, column: 20, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13049, file: !12500, line: 728, column: 14)
!13049 = distinct !DILexicalBlock(scope: !13038, file: !12500, line: 725, column: 9)
!13050 = !DILocation(line: 0, scope: !13048)
!13051 = !DILocation(line: 740, column: 53, scope: !13049)
!13052 = !DILocation(line: 740, column: 81, scope: !13049)
!13053 = !DILocation(line: 740, column: 43, scope: !13049)
!13054 = !DILocation(line: 742, column: 53, scope: !13049)
!13055 = !DILocation(line: 742, column: 81, scope: !13049)
!13056 = !DILocation(line: 742, column: 44, scope: !13049)
!13057 = !DILocation(line: 743, column: 11, scope: !13049)
!13058 = !DILocation(line: 748, column: 20, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13060, file: !12500, line: 748, column: 14)
!13060 = distinct !DILexicalBlock(scope: !13038, file: !12500, line: 747, column: 9)
!13061 = !DILocation(line: 770, column: 16, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !12983, file: !12500, line: 768, column: 5)
!13063 = !DILocation(line: 771, column: 7, scope: !13062)
!13064 = !DILocation(line: 785, column: 20, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13066, file: !12500, line: 785, column: 14)
!13066 = distinct !DILexicalBlock(scope: !13067, file: !12500, line: 782, column: 9)
!13067 = distinct !DILexicalBlock(scope: !13062, file: !12500, line: 772, column: 7)
!13068 = !DILocation(line: 0, scope: !13065)
!13069 = !DILocation(line: 797, column: 53, scope: !13066)
!13070 = !DILocation(line: 797, column: 90, scope: !13066)
!13071 = !DILocation(line: 797, column: 43, scope: !13066)
!13072 = !DILocation(line: 799, column: 53, scope: !13066)
!13073 = !DILocation(line: 799, column: 90, scope: !13066)
!13074 = !DILocation(line: 799, column: 44, scope: !13066)
!13075 = !DILocation(line: 800, column: 11, scope: !13066)
!13076 = !DILocation(line: 807, column: 20, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13078, file: !12500, line: 807, column: 14)
!13078 = distinct !DILexicalBlock(scope: !13067, file: !12500, line: 804, column: 9)
!13079 = !DILocation(line: 0, scope: !13077)
!13080 = !DILocation(line: 819, column: 53, scope: !13078)
!13081 = !DILocation(line: 819, column: 81, scope: !13078)
!13082 = !DILocation(line: 819, column: 43, scope: !13078)
!13083 = !DILocation(line: 821, column: 53, scope: !13078)
!13084 = !DILocation(line: 821, column: 81, scope: !13078)
!13085 = !DILocation(line: 821, column: 44, scope: !13078)
!13086 = !DILocation(line: 822, column: 11, scope: !13078)
!13087 = !DILocation(line: 827, column: 20, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13089, file: !12500, line: 827, column: 14)
!13089 = distinct !DILexicalBlock(scope: !13067, file: !12500, line: 826, column: 9)
!13090 = !DILocation(line: 847, column: 3, scope: !12970)
!13091 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !12500, file: !12500, line: 2766, type: !13092, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13094)
!13092 = !DISubroutineType(types: !13093)
!13093 = !{null, !169}
!13094 = !{!13095}
!13095 = !DILocalVariable(name: "Mode", arg: 1, scope: !13091, file: !12500, line: 2766, type: !169)
!13096 = !DILocation(line: 0, scope: !13091)
!13097 = !DILocation(line: 2770, column: 11, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13091, file: !12500, line: 2770, column: 6)
!13099 = !DILocation(line: 0, scope: !13098)
!13100 = !DILocation(line: 2770, column: 6, scope: !13091)
!13101 = !DILocation(line: 2778, column: 1, scope: !13091)
!13102 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !12500, file: !12500, line: 2803, type: !13103, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13106)
!13103 = !DISubroutineType(types: !13104)
!13104 = !{!12503, !13105}
!13105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12511, size: 32)
!13106 = !{!13107, !13108}
!13107 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !13102, file: !12500, line: 2803, type: !13105)
!13108 = !DILocalVariable(name: "tickstart", scope: !13102, file: !12500, line: 2805, type: !113)
!13109 = !DILocation(line: 0, scope: !13102)
!13110 = !DILocation(line: 2821, column: 3, scope: !13102)
!13111 = !DILocation(line: 2824, column: 15, scope: !13102)
!13112 = !DILocation(line: 2825, column: 3, scope: !13102)
!13113 = !DILocation(line: 2825, column: 9, scope: !13102)
!13114 = !DILocation(line: 2827, column: 9, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13116, file: !12500, line: 2827, column: 8)
!13116 = distinct !DILexicalBlock(scope: !13102, file: !12500, line: 2826, column: 3)
!13117 = !DILocation(line: 2827, column: 23, scope: !13115)
!13118 = !DILocation(line: 2827, column: 37, scope: !13115)
!13119 = !DILocation(line: 2827, column: 8, scope: !13116)
!13120 = distinct !{!13120, !13112, !13121}
!13121 = !DILocation(line: 2832, column: 3, scope: !13102)
!13122 = !DILocation(line: 2840, column: 3, scope: !13102)
!13123 = !DILocation(line: 2866, column: 3, scope: !13102)
!13124 = !DILocation(line: 2869, column: 15, scope: !13102)
!13125 = !DILocation(line: 2870, column: 3, scope: !13102)
!13126 = !DILocation(line: 2870, column: 9, scope: !13102)
!13127 = !DILocation(line: 2870, column: 48, scope: !13102)
!13128 = !DILocation(line: 2872, column: 9, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13130, file: !12500, line: 2872, column: 8)
!13130 = distinct !DILexicalBlock(scope: !13102, file: !12500, line: 2871, column: 3)
!13131 = !DILocation(line: 2872, column: 23, scope: !13129)
!13132 = !DILocation(line: 2872, column: 37, scope: !13129)
!13133 = !DILocation(line: 2872, column: 8, scope: !13130)
!13134 = distinct !{!13134, !13125, !13135}
!13135 = !DILocation(line: 2877, column: 3, scope: !13102)
!13136 = !DILocation(line: 2880, column: 1, scope: !13102)
!13137 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !12500, file: !12500, line: 2886, type: !13138, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13140)
!13138 = !DISubroutineType(types: !13139)
!13139 = !{!12503}
!13140 = !{!13141}
!13141 = !DILocalVariable(name: "tickstart", scope: !13137, file: !12500, line: 2888, type: !113)
!13142 = !DILocation(line: 2891, column: 3, scope: !13137)
!13143 = !DILocation(line: 2894, column: 15, scope: !13137)
!13144 = !DILocation(line: 0, scope: !13137)
!13145 = !DILocation(line: 2895, column: 3, scope: !13137)
!13146 = !DILocation(line: 2895, column: 9, scope: !13137)
!13147 = !DILocation(line: 2895, column: 45, scope: !13137)
!13148 = !DILocation(line: 2897, column: 9, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13150, file: !12500, line: 2897, column: 8)
!13150 = distinct !DILexicalBlock(scope: !13137, file: !12500, line: 2896, column: 3)
!13151 = !DILocation(line: 2897, column: 23, scope: !13149)
!13152 = !DILocation(line: 2897, column: 36, scope: !13149)
!13153 = !DILocation(line: 2897, column: 8, scope: !13150)
!13154 = distinct !{!13154, !13145, !13155}
!13155 = !DILocation(line: 2902, column: 3, scope: !13137)
!13156 = !DILocation(line: 2905, column: 1, scope: !13137)
!13157 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !12500, file: !12500, line: 2916, type: !13158, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13161)
!13158 = !DISubroutineType(types: !13159)
!13159 = !{!12503, !13160}
!13160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12520, size: 32)
!13161 = !{!13162, !13163}
!13162 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !13157, file: !12500, line: 2916, type: !13160)
!13163 = !DILocalVariable(name: "tickstart", scope: !13157, file: !12500, line: 2918, type: !113)
!13164 = !DILocation(line: 0, scope: !13157)
!13165 = !DILocation(line: 2934, column: 3, scope: !13157)
!13166 = !DILocation(line: 2937, column: 15, scope: !13157)
!13167 = !DILocation(line: 2938, column: 3, scope: !13157)
!13168 = !DILocation(line: 2938, column: 9, scope: !13157)
!13169 = !DILocation(line: 2940, column: 9, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13171, file: !12500, line: 2940, column: 8)
!13171 = distinct !DILexicalBlock(scope: !13157, file: !12500, line: 2939, column: 3)
!13172 = !DILocation(line: 2940, column: 23, scope: !13170)
!13173 = !DILocation(line: 2940, column: 37, scope: !13170)
!13174 = !DILocation(line: 2940, column: 8, scope: !13171)
!13175 = distinct !{!13175, !13167, !13176}
!13176 = !DILocation(line: 2945, column: 3, scope: !13157)
!13177 = !DILocation(line: 2953, column: 3, scope: !13157)
!13178 = !DILocation(line: 2970, column: 3, scope: !13157)
!13179 = !DILocation(line: 2973, column: 15, scope: !13157)
!13180 = !DILocation(line: 2974, column: 3, scope: !13157)
!13181 = !DILocation(line: 2974, column: 9, scope: !13157)
!13182 = !DILocation(line: 2974, column: 37, scope: !13157)
!13183 = !DILocation(line: 2976, column: 9, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13185, file: !12500, line: 2976, column: 8)
!13185 = distinct !DILexicalBlock(scope: !13157, file: !12500, line: 2975, column: 3)
!13186 = !DILocation(line: 2976, column: 23, scope: !13184)
!13187 = !DILocation(line: 2976, column: 37, scope: !13184)
!13188 = !DILocation(line: 2976, column: 8, scope: !13185)
!13189 = distinct !{!13189, !13180, !13190}
!13190 = !DILocation(line: 2981, column: 3, scope: !13157)
!13191 = !DILocation(line: 2984, column: 1, scope: !13157)
!13192 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !12500, file: !12500, line: 2990, type: !13138, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13193)
!13193 = !{!13194}
!13194 = !DILocalVariable(name: "tickstart", scope: !13192, file: !12500, line: 2992, type: !113)
!13195 = !DILocation(line: 2995, column: 3, scope: !13192)
!13196 = !DILocation(line: 2998, column: 15, scope: !13192)
!13197 = !DILocation(line: 0, scope: !13192)
!13198 = !DILocation(line: 2999, column: 3, scope: !13192)
!13199 = !DILocation(line: 2999, column: 9, scope: !13192)
!13200 = !DILocation(line: 3001, column: 9, scope: !13201)
!13201 = distinct !DILexicalBlock(scope: !13202, file: !12500, line: 3001, column: 8)
!13202 = distinct !DILexicalBlock(scope: !13192, file: !12500, line: 3000, column: 3)
!13203 = !DILocation(line: 3001, column: 23, scope: !13201)
!13204 = !DILocation(line: 3001, column: 36, scope: !13201)
!13205 = !DILocation(line: 3001, column: 8, scope: !13202)
!13206 = distinct !{!13206, !13198, !13207}
!13207 = !DILocation(line: 3006, column: 3, scope: !13192)
!13208 = !DILocation(line: 3009, column: 1, scope: !13192)
!13209 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12500, file: !12500, line: 3051, type: !395, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13210)
!13210 = !{!13211, !13212, !13213, !13214, !13215}
!13211 = !DILocalVariable(name: "pllm", scope: !13209, file: !12500, line: 3053, type: !113)
!13212 = !DILocalVariable(name: "pllvco", scope: !13209, file: !12500, line: 3054, type: !113)
!13213 = !DILocalVariable(name: "pllp", scope: !13209, file: !12500, line: 3055, type: !113)
!13214 = !DILocalVariable(name: "pllr", scope: !13209, file: !12500, line: 3056, type: !113)
!13215 = !DILocalVariable(name: "sysclockfreq", scope: !13209, file: !12500, line: 3057, type: !113)
!13216 = !DILocation(line: 0, scope: !13209)
!13217 = !DILocation(line: 3060, column: 16, scope: !13209)
!13218 = !DILocation(line: 3060, column: 3, scope: !13209)
!13219 = !DILocation(line: 3076, column: 19, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13221, file: !12500, line: 3073, column: 5)
!13221 = distinct !DILexicalBlock(scope: !13209, file: !12500, line: 3061, column: 3)
!13222 = !DILocation(line: 3076, column: 27, scope: !13220)
!13223 = !DILocation(line: 3077, column: 10, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13220, file: !12500, line: 3077, column: 10)
!13225 = !DILocation(line: 0, scope: !13224)
!13226 = !DILocation(line: 3087, column: 23, scope: !13220)
!13227 = !DILocation(line: 3087, column: 82, scope: !13220)
!13228 = !DILocation(line: 3089, column: 28, scope: !13220)
!13229 = !DILocation(line: 3090, column: 7, scope: !13220)
!13230 = !DILocation(line: 3096, column: 19, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13221, file: !12500, line: 3093, column: 5)
!13232 = !DILocation(line: 3096, column: 27, scope: !13231)
!13233 = !DILocation(line: 3097, column: 10, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13231, file: !12500, line: 3097, column: 10)
!13235 = !DILocation(line: 0, scope: !13234)
!13236 = !DILocation(line: 3107, column: 21, scope: !13231)
!13237 = !DILocation(line: 3107, column: 49, scope: !13231)
!13238 = !DILocation(line: 3109, column: 28, scope: !13231)
!13239 = !DILocation(line: 3110, column: 7, scope: !13231)
!13240 = !DILocation(line: 0, scope: !13221)
!13241 = !DILocation(line: 3118, column: 3, scope: !13209)
!13242 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12500, file: !12500, line: 3143, type: !13138, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13243)
!13243 = !{!13244}
!13244 = !DILocalVariable(name: "tickstart", scope: !13242, file: !12500, line: 3145, type: !113)
!13245 = !DILocation(line: 3148, column: 15, scope: !13242)
!13246 = !DILocation(line: 0, scope: !13242)
!13247 = !DILocation(line: 3151, column: 3, scope: !13242)
!13248 = !DILocation(line: 3154, column: 3, scope: !13242)
!13249 = !DILocation(line: 3154, column: 10, scope: !13242)
!13250 = !DILocation(line: 3154, column: 43, scope: !13242)
!13251 = !DILocation(line: 3156, column: 10, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13253, file: !12500, line: 3156, column: 9)
!13253 = distinct !DILexicalBlock(scope: !13242, file: !12500, line: 3155, column: 3)
!13254 = !DILocation(line: 3156, column: 24, scope: !13252)
!13255 = !DILocation(line: 3156, column: 37, scope: !13252)
!13256 = !DILocation(line: 3156, column: 9, scope: !13253)
!13257 = distinct !{!13257, !13248, !13258}
!13258 = !DILocation(line: 3160, column: 3, scope: !13242)
!13259 = !DILocation(line: 3163, column: 3, scope: !13242)
!13260 = !DILocation(line: 3166, column: 15, scope: !13242)
!13261 = !DILocation(line: 3169, column: 3, scope: !13242)
!13262 = !DILocation(line: 3172, column: 3, scope: !13242)
!13263 = !DILocation(line: 3172, column: 10, scope: !13242)
!13264 = !DILocation(line: 3172, column: 44, scope: !13242)
!13265 = !DILocation(line: 3174, column: 24, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13267, file: !12500, line: 3174, column: 9)
!13267 = distinct !DILexicalBlock(scope: !13242, file: !12500, line: 3173, column: 3)
!13268 = !DILocation(line: 3174, column: 37, scope: !13266)
!13269 = !DILocation(line: 3174, column: 9, scope: !13267)
!13270 = distinct !{!13270, !13262, !13271}
!13271 = !DILocation(line: 3178, column: 3, scope: !13242)
!13272 = !DILocation(line: 3184, column: 3, scope: !13242)
!13273 = !DILocation(line: 3187, column: 3, scope: !13242)
!13274 = !DILocation(line: 3187, column: 10, scope: !13242)
!13275 = !DILocation(line: 3187, column: 43, scope: !13242)
!13276 = !DILocation(line: 3189, column: 24, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !13278, file: !12500, line: 3189, column: 9)
!13278 = distinct !DILexicalBlock(scope: !13242, file: !12500, line: 3188, column: 3)
!13279 = !DILocation(line: 3189, column: 37, scope: !13277)
!13280 = !DILocation(line: 3189, column: 9, scope: !13278)
!13281 = distinct !{!13281, !13273, !13282}
!13282 = !DILocation(line: 3193, column: 3, scope: !13242)
!13283 = !DILocation(line: 3199, column: 3, scope: !13242)
!13284 = !DILocation(line: 3202, column: 3, scope: !13242)
!13285 = !DILocation(line: 3202, column: 10, scope: !13242)
!13286 = !DILocation(line: 3202, column: 43, scope: !13242)
!13287 = !DILocation(line: 3204, column: 24, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13289, file: !12500, line: 3204, column: 9)
!13289 = distinct !DILexicalBlock(scope: !13242, file: !12500, line: 3203, column: 3)
!13290 = !DILocation(line: 3204, column: 37, scope: !13288)
!13291 = !DILocation(line: 3204, column: 9, scope: !13289)
!13292 = distinct !{!13292, !13284, !13293}
!13293 = !DILocation(line: 3208, column: 3, scope: !13242)
!13294 = !DILocation(line: 3215, column: 3, scope: !13242)
!13295 = !DILocation(line: 3218, column: 3, scope: !13242)
!13296 = !DILocation(line: 3218, column: 10, scope: !13242)
!13297 = !DILocation(line: 3218, column: 46, scope: !13242)
!13298 = !DILocation(line: 3220, column: 24, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13300, file: !12500, line: 3220, column: 9)
!13300 = distinct !DILexicalBlock(scope: !13242, file: !12500, line: 3219, column: 3)
!13301 = !DILocation(line: 3220, column: 37, scope: !13299)
!13302 = !DILocation(line: 3220, column: 9, scope: !13300)
!13303 = distinct !{!13303, !13295, !13304}
!13304 = !DILocation(line: 3224, column: 3, scope: !13242)
!13305 = !DILocation(line: 3232, column: 3, scope: !13242)
!13306 = !DILocation(line: 3235, column: 3, scope: !13242)
!13307 = !DILocation(line: 3235, column: 10, scope: !13242)
!13308 = !DILocation(line: 3235, column: 46, scope: !13242)
!13309 = !DILocation(line: 3237, column: 10, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13311, file: !12500, line: 3237, column: 9)
!13311 = distinct !DILexicalBlock(scope: !13242, file: !12500, line: 3236, column: 3)
!13312 = !DILocation(line: 3237, column: 24, scope: !13310)
!13313 = !DILocation(line: 3237, column: 37, scope: !13310)
!13314 = !DILocation(line: 3237, column: 9, scope: !13311)
!13315 = distinct !{!13315, !13306, !13316}
!13316 = !DILocation(line: 3241, column: 3, scope: !13242)
!13317 = !DILocation(line: 3247, column: 16, scope: !13242)
!13318 = !DILocation(line: 3257, column: 19, scope: !13242)
!13319 = !DILocation(line: 3270, column: 19, scope: !13242)
!13320 = !DILocation(line: 3274, column: 3, scope: !13242)
!13321 = !DILocation(line: 3277, column: 3, scope: !13242)
!13322 = !DILocation(line: 3281, column: 3, scope: !13242)
!13323 = !DILocation(line: 3285, column: 3, scope: !13242)
!13324 = !DILocation(line: 3288, column: 3, scope: !13242)
!13325 = !DILocation(line: 3292, column: 3, scope: !13242)
!13326 = !DILocation(line: 3296, column: 3, scope: !13242)
!13327 = !DILocation(line: 3299, column: 3, scope: !13242)
!13328 = !DILocation(line: 3302, column: 19, scope: !13242)
!13329 = !DILocation(line: 3305, column: 19, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13242, file: !12500, line: 3305, column: 6)
!13331 = !DILocation(line: 3305, column: 6, scope: !13330)
!13332 = !DILocation(line: 3305, column: 31, scope: !13330)
!13333 = !DILocation(line: 0, scope: !13330)
!13334 = !DILocation(line: 3313, column: 1, scope: !13242)
!13335 = !DISubprogram(name: "HAL_InitTick", scope: !12875, file: !12875, line: 223, type: !13336, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!13336 = !DISubroutineType(types: !13337)
!13337 = !{!12503, !113}
!13338 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12500, file: !12500, line: 3333, type: !13339, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13363)
!13339 = !DISubroutineType(types: !13340)
!13340 = !{!12503, !13341}
!13341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13342, size: 32)
!13342 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13343, line: 70, baseType: !13344)
!13343 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13343, line: 49, size: 416, elements: !13345)
!13345 = !{!13346, !13347, !13348, !13349, !13350, !13351, !13352}
!13346 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13344, file: !13343, line: 51, baseType: !113, size: 32)
!13347 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13344, file: !13343, line: 54, baseType: !113, size: 32, offset: 32)
!13348 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13344, file: !13343, line: 57, baseType: !113, size: 32, offset: 64)
!13349 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13344, file: !13343, line: 60, baseType: !113, size: 32, offset: 96)
!13350 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13344, file: !13343, line: 63, baseType: !113, size: 32, offset: 128)
!13351 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13344, file: !13343, line: 66, baseType: !113, size: 32, offset: 160)
!13352 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13344, file: !13343, line: 69, baseType: !13353, size: 224, offset: 192)
!13353 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12506, line: 73, baseType: !13354)
!13354 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12506, line: 45, size: 224, elements: !13355)
!13355 = !{!13356, !13357, !13358, !13359, !13360, !13361, !13362}
!13356 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13354, file: !12506, line: 47, baseType: !113, size: 32)
!13357 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13354, file: !12506, line: 50, baseType: !113, size: 32, offset: 32)
!13358 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13354, file: !12506, line: 53, baseType: !113, size: 32, offset: 64)
!13359 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13354, file: !12506, line: 56, baseType: !113, size: 32, offset: 96)
!13360 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13354, file: !12506, line: 60, baseType: !113, size: 32, offset: 128)
!13361 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !13354, file: !12506, line: 63, baseType: !113, size: 32, offset: 160)
!13362 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !13354, file: !12506, line: 68, baseType: !113, size: 32, offset: 192)
!13363 = !{!13364, !13365, !13366, !13367, !13371}
!13364 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13338, file: !12500, line: 3333, type: !13341)
!13365 = !DILocalVariable(name: "tickstart", scope: !13338, file: !12500, line: 3335, type: !113)
!13366 = !DILocalVariable(name: "pll_config", scope: !13338, file: !12500, line: 3335, type: !113)
!13367 = !DILocalVariable(name: "pwrclkchanged", scope: !13368, file: !12500, line: 3517, type: !13370)
!13368 = distinct !DILexicalBlock(scope: !13369, file: !12500, line: 3516, column: 3)
!13369 = distinct !DILexicalBlock(scope: !13338, file: !12500, line: 3515, column: 6)
!13370 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !986, line: 188, baseType: !3085)
!13371 = !DILocalVariable(name: "tmpreg", scope: !13372, file: !12500, line: 3526, type: !461)
!13372 = distinct !DILexicalBlock(scope: !13373, file: !12500, line: 3526, column: 7)
!13373 = distinct !DILexicalBlock(scope: !13374, file: !12500, line: 3525, column: 5)
!13374 = distinct !DILexicalBlock(scope: !13368, file: !12500, line: 3524, column: 8)
!13375 = !DILocation(line: 0, scope: !13338)
!13376 = !DILocation(line: 3338, column: 24, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13338, file: !12500, line: 3338, column: 6)
!13378 = !DILocation(line: 3338, column: 6, scope: !13338)
!13379 = !DILocation(line: 3346, column: 27, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13338, file: !12500, line: 3346, column: 6)
!13381 = !DILocation(line: 3346, column: 43, scope: !13380)
!13382 = !DILocation(line: 3346, column: 69, scope: !13380)
!13383 = !DILocation(line: 3346, column: 6, scope: !13338)
!13384 = !DILocation(line: 3352, column: 9, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13386, file: !12500, line: 3352, column: 8)
!13386 = distinct !DILexicalBlock(scope: !13380, file: !12500, line: 3347, column: 3)
!13387 = !DILocation(line: 3352, column: 39, scope: !13385)
!13388 = !DILocation(line: 3352, column: 128, scope: !13385)
!13389 = !DILocation(line: 3353, column: 9, scope: !13385)
!13390 = !DILocation(line: 3353, column: 39, scope: !13385)
!13391 = !DILocation(line: 3353, column: 60, scope: !13385)
!13392 = !DILocation(line: 3353, column: 70, scope: !13385)
!13393 = !DILocation(line: 3353, column: 78, scope: !13385)
!13394 = !DILocation(line: 3353, column: 100, scope: !13385)
!13395 = !DILocation(line: 3353, column: 128, scope: !13385)
!13396 = !DILocation(line: 3354, column: 9, scope: !13385)
!13397 = !DILocation(line: 3354, column: 39, scope: !13385)
!13398 = !DILocation(line: 3354, column: 61, scope: !13385)
!13399 = !DILocation(line: 3354, column: 71, scope: !13385)
!13400 = !DILocation(line: 3354, column: 79, scope: !13385)
!13401 = !DILocation(line: 3354, column: 101, scope: !13385)
!13402 = !DILocation(line: 3352, column: 8, scope: !13386)
!13403 = !DILocation(line: 3360, column: 11, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13405, file: !12500, line: 3360, column: 10)
!13405 = distinct !DILexicalBlock(scope: !13385, file: !12500, line: 3359, column: 5)
!13406 = !DILocation(line: 3360, column: 57, scope: !13404)
!13407 = !DILocation(line: 3360, column: 80, scope: !13404)
!13408 = !DILocation(line: 3360, column: 89, scope: !13404)
!13409 = !DILocation(line: 3360, column: 10, scope: !13405)
!13410 = !DILocation(line: 3368, column: 7, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13412, file: !12500, line: 3368, column: 7)
!13412 = distinct !DILexicalBlock(scope: !13413, file: !12500, line: 3368, column: 7)
!13413 = distinct !DILexicalBlock(scope: !13385, file: !12500, line: 3366, column: 5)
!13414 = !DILocation(line: 3368, column: 7, scope: !13412)
!13415 = !DILocation(line: 3368, column: 7, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13411, file: !12500, line: 3368, column: 7)
!13417 = !DILocation(line: 3368, column: 7, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13419, file: !12500, line: 3368, column: 7)
!13419 = distinct !DILexicalBlock(scope: !13411, file: !12500, line: 3368, column: 7)
!13420 = !DILocation(line: 3368, column: 7, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13419, file: !12500, line: 3368, column: 7)
!13422 = !DILocation(line: 0, scope: !13411)
!13423 = !DILocation(line: 3371, column: 30, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13413, file: !12500, line: 3371, column: 10)
!13425 = !DILocation(line: 3371, column: 40, scope: !13424)
!13426 = !DILocation(line: 0, scope: !13424)
!13427 = !DILocation(line: 3371, column: 10, scope: !13413)
!13428 = !DILocation(line: 3377, column: 15, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13424, file: !12500, line: 3372, column: 7)
!13430 = !DILocation(line: 3377, column: 51, scope: !13429)
!13431 = !DILocation(line: 3377, column: 9, scope: !13429)
!13432 = !DILocation(line: 3379, column: 15, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13434, file: !12500, line: 3379, column: 14)
!13434 = distinct !DILexicalBlock(scope: !13429, file: !12500, line: 3378, column: 9)
!13435 = !DILocation(line: 3379, column: 29, scope: !13433)
!13436 = !DILocation(line: 3379, column: 43, scope: !13433)
!13437 = !DILocation(line: 3379, column: 14, scope: !13434)
!13438 = distinct !{!13438, !13431, !13439}
!13439 = !DILocation(line: 3383, column: 9, scope: !13429)
!13440 = !DILocation(line: 3391, column: 15, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13424, file: !12500, line: 3386, column: 7)
!13442 = !DILocation(line: 3391, column: 9, scope: !13441)
!13443 = !DILocation(line: 3393, column: 15, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !13445, file: !12500, line: 3393, column: 14)
!13445 = distinct !DILexicalBlock(scope: !13441, file: !12500, line: 3392, column: 9)
!13446 = !DILocation(line: 3393, column: 29, scope: !13444)
!13447 = !DILocation(line: 3393, column: 43, scope: !13444)
!13448 = !DILocation(line: 3393, column: 14, scope: !13445)
!13449 = distinct !{!13449, !13442, !13450}
!13450 = !DILocation(line: 3397, column: 9, scope: !13441)
!13451 = !DILocation(line: 3402, column: 27, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13338, file: !12500, line: 3402, column: 6)
!13453 = !DILocation(line: 3402, column: 43, scope: !13452)
!13454 = !DILocation(line: 3402, column: 69, scope: !13452)
!13455 = !DILocation(line: 3402, column: 6, scope: !13338)
!13456 = !DILocation(line: 3410, column: 9, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13458, file: !12500, line: 3410, column: 8)
!13458 = distinct !DILexicalBlock(scope: !13452, file: !12500, line: 3403, column: 3)
!13459 = !DILocation(line: 3410, column: 39, scope: !13457)
!13460 = !DILocation(line: 3410, column: 128, scope: !13457)
!13461 = !DILocation(line: 3411, column: 9, scope: !13457)
!13462 = !DILocation(line: 3411, column: 39, scope: !13457)
!13463 = !DILocation(line: 3411, column: 60, scope: !13457)
!13464 = !DILocation(line: 3411, column: 70, scope: !13457)
!13465 = !DILocation(line: 3411, column: 78, scope: !13457)
!13466 = !DILocation(line: 3411, column: 100, scope: !13457)
!13467 = !DILocation(line: 3411, column: 128, scope: !13457)
!13468 = !DILocation(line: 3412, column: 9, scope: !13457)
!13469 = !DILocation(line: 3412, column: 39, scope: !13457)
!13470 = !DILocation(line: 3412, column: 61, scope: !13457)
!13471 = !DILocation(line: 3412, column: 71, scope: !13457)
!13472 = !DILocation(line: 3412, column: 79, scope: !13457)
!13473 = !DILocation(line: 3412, column: 101, scope: !13457)
!13474 = !DILocation(line: 3410, column: 8, scope: !13458)
!13475 = !DILocation(line: 3419, column: 11, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13477, file: !12500, line: 3419, column: 10)
!13477 = distinct !DILexicalBlock(scope: !13457, file: !12500, line: 3417, column: 5)
!13478 = !DILocation(line: 3419, column: 57, scope: !13476)
!13479 = !DILocation(line: 3419, column: 80, scope: !13476)
!13480 = !DILocation(line: 3419, column: 89, scope: !13476)
!13481 = !DILocation(line: 3419, column: 10, scope: !13477)
!13482 = !DILocation(line: 3433, column: 30, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13484, file: !12500, line: 3433, column: 10)
!13484 = distinct !DILexicalBlock(scope: !13457, file: !12500, line: 3431, column: 5)
!13485 = !DILocation(line: 3433, column: 39, scope: !13483)
!13486 = !DILocation(line: 3433, column: 10, scope: !13484)
!13487 = !DILocation(line: 3436, column: 9, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13483, file: !12500, line: 3434, column: 7)
!13489 = !DILocation(line: 3439, column: 21, scope: !13488)
!13490 = !DILocation(line: 3442, column: 9, scope: !13488)
!13491 = !DILocation(line: 3442, column: 15, scope: !13488)
!13492 = !DILocation(line: 3442, column: 51, scope: !13488)
!13493 = !DILocation(line: 3444, column: 15, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13495, file: !12500, line: 3444, column: 14)
!13495 = distinct !DILexicalBlock(scope: !13488, file: !12500, line: 3443, column: 9)
!13496 = !DILocation(line: 3444, column: 29, scope: !13494)
!13497 = !DILocation(line: 3444, column: 43, scope: !13494)
!13498 = !DILocation(line: 3444, column: 14, scope: !13495)
!13499 = distinct !{!13499, !13490, !13500}
!13500 = !DILocation(line: 3448, column: 9, scope: !13488)
!13501 = !DILocation(line: 3456, column: 9, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13483, file: !12500, line: 3454, column: 7)
!13503 = !DILocation(line: 3459, column: 21, scope: !13502)
!13504 = !DILocation(line: 3462, column: 9, scope: !13502)
!13505 = !DILocation(line: 3462, column: 15, scope: !13502)
!13506 = !DILocation(line: 3464, column: 15, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13508, file: !12500, line: 3464, column: 14)
!13508 = distinct !DILexicalBlock(scope: !13502, file: !12500, line: 3463, column: 9)
!13509 = !DILocation(line: 3464, column: 29, scope: !13507)
!13510 = !DILocation(line: 3464, column: 43, scope: !13507)
!13511 = !DILocation(line: 3464, column: 14, scope: !13508)
!13512 = distinct !{!13512, !13504, !13513}
!13513 = !DILocation(line: 3468, column: 9, scope: !13502)
!13514 = !DILocation(line: 0, scope: !13457)
!13515 = !DILocation(line: 3473, column: 27, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13338, file: !12500, line: 3473, column: 6)
!13517 = !DILocation(line: 3473, column: 43, scope: !13516)
!13518 = !DILocation(line: 3473, column: 69, scope: !13516)
!13519 = !DILocation(line: 3473, column: 6, scope: !13338)
!13520 = !DILocation(line: 3479, column: 28, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13522, file: !12500, line: 3479, column: 8)
!13522 = distinct !DILexicalBlock(scope: !13516, file: !12500, line: 3474, column: 3)
!13523 = !DILocation(line: 3479, column: 37, scope: !13521)
!13524 = !DILocation(line: 3479, column: 8, scope: !13522)
!13525 = !DILocation(line: 3482, column: 7, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13521, file: !12500, line: 3480, column: 5)
!13527 = !DILocation(line: 3485, column: 19, scope: !13526)
!13528 = !DILocation(line: 3488, column: 7, scope: !13526)
!13529 = !DILocation(line: 3488, column: 13, scope: !13526)
!13530 = !DILocation(line: 3488, column: 49, scope: !13526)
!13531 = !DILocation(line: 3490, column: 13, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13533, file: !12500, line: 3490, column: 12)
!13533 = distinct !DILexicalBlock(scope: !13526, file: !12500, line: 3489, column: 7)
!13534 = !DILocation(line: 3490, column: 27, scope: !13532)
!13535 = !DILocation(line: 3490, column: 41, scope: !13532)
!13536 = !DILocation(line: 3490, column: 12, scope: !13533)
!13537 = distinct !{!13537, !13528, !13538}
!13538 = !DILocation(line: 3494, column: 7, scope: !13526)
!13539 = !DILocation(line: 3499, column: 7, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13521, file: !12500, line: 3497, column: 5)
!13541 = !DILocation(line: 3502, column: 19, scope: !13540)
!13542 = !DILocation(line: 3505, column: 7, scope: !13540)
!13543 = !DILocation(line: 3505, column: 13, scope: !13540)
!13544 = !DILocation(line: 3507, column: 13, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13546, file: !12500, line: 3507, column: 12)
!13546 = distinct !DILexicalBlock(scope: !13540, file: !12500, line: 3506, column: 7)
!13547 = !DILocation(line: 3507, column: 27, scope: !13545)
!13548 = !DILocation(line: 3507, column: 41, scope: !13545)
!13549 = !DILocation(line: 3507, column: 12, scope: !13546)
!13550 = distinct !{!13550, !13542, !13551}
!13551 = !DILocation(line: 3511, column: 7, scope: !13540)
!13552 = !DILocation(line: 3515, column: 27, scope: !13369)
!13553 = !DILocation(line: 3515, column: 43, scope: !13369)
!13554 = !DILocation(line: 3515, column: 69, scope: !13369)
!13555 = !DILocation(line: 3515, column: 6, scope: !13338)
!13556 = !DILocation(line: 0, scope: !13368)
!13557 = !DILocation(line: 3524, column: 8, scope: !13374)
!13558 = !DILocation(line: 3524, column: 8, scope: !13368)
!13559 = !DILocation(line: 3526, column: 7, scope: !13372)
!13560 = !DILocation(line: 3526, column: 7, scope: !13373)
!13561 = !DILocation(line: 3528, column: 5, scope: !13373)
!13562 = !DILocation(line: 3530, column: 8, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13368, file: !12500, line: 3530, column: 8)
!13564 = !DILocation(line: 3530, column: 8, scope: !13368)
!13565 = !DILocation(line: 3533, column: 7, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13563, file: !12500, line: 3531, column: 5)
!13567 = !DILocation(line: 3536, column: 19, scope: !13566)
!13568 = !DILocation(line: 3538, column: 7, scope: !13566)
!13569 = !DILocation(line: 3538, column: 13, scope: !13566)
!13570 = !DILocation(line: 3540, column: 13, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13572, file: !12500, line: 3540, column: 12)
!13572 = distinct !DILexicalBlock(scope: !13566, file: !12500, line: 3539, column: 7)
!13573 = !DILocation(line: 3540, column: 27, scope: !13571)
!13574 = !DILocation(line: 3540, column: 40, scope: !13571)
!13575 = !DILocation(line: 3540, column: 12, scope: !13572)
!13576 = distinct !{!13576, !13568, !13577}
!13577 = !DILocation(line: 3544, column: 7, scope: !13566)
!13578 = !DILocation(line: 3548, column: 5, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13580, file: !12500, line: 3548, column: 5)
!13580 = distinct !DILexicalBlock(scope: !13368, file: !12500, line: 3548, column: 5)
!13581 = !DILocation(line: 3548, column: 5, scope: !13580)
!13582 = !DILocation(line: 3548, column: 5, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13579, file: !12500, line: 3548, column: 5)
!13584 = !DILocation(line: 3548, column: 5, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13586, file: !12500, line: 3548, column: 5)
!13586 = distinct !DILexicalBlock(scope: !13579, file: !12500, line: 3548, column: 5)
!13587 = !DILocation(line: 3548, column: 5, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13586, file: !12500, line: 3548, column: 5)
!13589 = !DILocation(line: 0, scope: !13579)
!13590 = !DILocation(line: 3550, column: 28, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13368, file: !12500, line: 3550, column: 8)
!13592 = !DILocation(line: 3550, column: 38, scope: !13591)
!13593 = !DILocation(line: 0, scope: !13591)
!13594 = !DILocation(line: 3550, column: 8, scope: !13368)
!13595 = !DILocation(line: 3556, column: 13, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !13591, file: !12500, line: 3551, column: 5)
!13597 = !DILocation(line: 3556, column: 49, scope: !13596)
!13598 = !DILocation(line: 3556, column: 7, scope: !13596)
!13599 = !DILocation(line: 3558, column: 13, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13601, file: !12500, line: 3558, column: 12)
!13601 = distinct !DILexicalBlock(scope: !13596, file: !12500, line: 3557, column: 7)
!13602 = !DILocation(line: 3558, column: 27, scope: !13600)
!13603 = !DILocation(line: 3558, column: 41, scope: !13600)
!13604 = !DILocation(line: 3558, column: 12, scope: !13601)
!13605 = distinct !{!13605, !13598, !13606}
!13606 = !DILocation(line: 3562, column: 7, scope: !13596)
!13607 = !DILocation(line: 3570, column: 13, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13591, file: !12500, line: 3565, column: 5)
!13609 = !DILocation(line: 3570, column: 7, scope: !13608)
!13610 = !DILocation(line: 3572, column: 13, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13612, file: !12500, line: 3572, column: 12)
!13612 = distinct !DILexicalBlock(scope: !13608, file: !12500, line: 3571, column: 7)
!13613 = !DILocation(line: 3572, column: 27, scope: !13611)
!13614 = !DILocation(line: 3572, column: 41, scope: !13611)
!13615 = !DILocation(line: 3572, column: 12, scope: !13612)
!13616 = distinct !{!13616, !13609, !13617}
!13617 = !DILocation(line: 3576, column: 7, scope: !13608)
!13618 = !DILocation(line: 3580, column: 8, scope: !13368)
!13619 = !DILocation(line: 3582, column: 7, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13621, file: !12500, line: 3581, column: 5)
!13621 = distinct !DILexicalBlock(scope: !13368, file: !12500, line: 3580, column: 8)
!13622 = !DILocation(line: 3583, column: 5, scope: !13620)
!13623 = !DILocation(line: 3588, column: 31, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13338, file: !12500, line: 3588, column: 7)
!13625 = !DILocation(line: 3588, column: 41, scope: !13624)
!13626 = !DILocation(line: 3588, column: 7, scope: !13338)
!13627 = !DILocation(line: 3591, column: 8, scope: !13628)
!13628 = distinct !DILexicalBlock(scope: !13629, file: !12500, line: 3591, column: 8)
!13629 = distinct !DILexicalBlock(scope: !13624, file: !12500, line: 3589, column: 3)
!13630 = !DILocation(line: 3591, column: 38, scope: !13628)
!13631 = !DILocation(line: 3591, column: 8, scope: !13629)
!13632 = !DILocation(line: 3593, column: 44, scope: !13633)
!13633 = distinct !DILexicalBlock(scope: !13634, file: !12500, line: 3593, column: 10)
!13634 = distinct !DILexicalBlock(scope: !13628, file: !12500, line: 3592, column: 5)
!13635 = !DILocation(line: 0, scope: !13633)
!13636 = !DILocation(line: 3593, column: 10, scope: !13634)
!13637 = !DILocation(line: 3610, column: 15, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13633, file: !12500, line: 3594, column: 7)
!13639 = !DILocation(line: 3610, column: 9, scope: !13638)
!13640 = !DILocation(line: 3612, column: 15, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13642, file: !12500, line: 3612, column: 14)
!13642 = distinct !DILexicalBlock(scope: !13638, file: !12500, line: 3611, column: 9)
!13643 = !DILocation(line: 3612, column: 29, scope: !13641)
!13644 = !DILocation(line: 3612, column: 43, scope: !13641)
!13645 = !DILocation(line: 3612, column: 14, scope: !13642)
!13646 = distinct !{!13646, !13639, !13647}
!13647 = !DILocation(line: 3616, column: 9, scope: !13638)
!13648 = !DILocation(line: 3619, column: 9, scope: !13638)
!13649 = !DILocation(line: 3626, column: 9, scope: !13638)
!13650 = !DILocation(line: 3629, column: 21, scope: !13638)
!13651 = !DILocation(line: 3632, column: 9, scope: !13638)
!13652 = !DILocation(line: 3632, column: 15, scope: !13638)
!13653 = !DILocation(line: 3632, column: 51, scope: !13638)
!13654 = !DILocation(line: 3634, column: 15, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13656, file: !12500, line: 3634, column: 14)
!13656 = distinct !DILexicalBlock(scope: !13638, file: !12500, line: 3633, column: 9)
!13657 = !DILocation(line: 3634, column: 29, scope: !13655)
!13658 = !DILocation(line: 3634, column: 43, scope: !13655)
!13659 = !DILocation(line: 3634, column: 14, scope: !13656)
!13660 = distinct !{!13660, !13651, !13661}
!13661 = !DILocation(line: 3638, column: 9, scope: !13638)
!13662 = !DILocation(line: 3649, column: 15, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13633, file: !12500, line: 3641, column: 7)
!13664 = !DILocation(line: 3649, column: 9, scope: !13663)
!13665 = !DILocation(line: 3651, column: 15, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13667, file: !12500, line: 3651, column: 14)
!13667 = distinct !DILexicalBlock(scope: !13663, file: !12500, line: 3650, column: 9)
!13668 = !DILocation(line: 3651, column: 29, scope: !13666)
!13669 = !DILocation(line: 3651, column: 43, scope: !13666)
!13670 = !DILocation(line: 3651, column: 14, scope: !13667)
!13671 = distinct !{!13671, !13664, !13672}
!13672 = !DILocation(line: 3655, column: 9, scope: !13663)
!13673 = !DILocation(line: 3661, column: 44, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13675, file: !12500, line: 3661, column: 10)
!13675 = distinct !DILexicalBlock(scope: !13628, file: !12500, line: 3659, column: 5)
!13676 = !DILocation(line: 3661, column: 10, scope: !13675)
!13677 = !DILocation(line: 3668, column: 27, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13674, file: !12500, line: 3666, column: 7)
!13679 = !DILocation(line: 3671, column: 14, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13678, file: !12500, line: 3670, column: 13)
!13681 = !DILocation(line: 3671, column: 81, scope: !13680)
!13682 = !DILocation(line: 3671, column: 55, scope: !13680)
!13683 = !DILocation(line: 3671, column: 92, scope: !13680)
!13684 = !DILocation(line: 3672, column: 14, scope: !13680)
!13685 = !DILocation(line: 3672, column: 80, scope: !13680)
!13686 = !DILocation(line: 3672, column: 53, scope: !13680)
!13687 = !DILocation(line: 3672, column: 111, scope: !13680)
!13688 = !DILocation(line: 3673, column: 14, scope: !13680)
!13689 = !DILocation(line: 3673, column: 80, scope: !13680)
!13690 = !DILocation(line: 3673, column: 86, scope: !13680)
!13691 = !DILocation(line: 3673, column: 53, scope: !13680)
!13692 = !DILocation(line: 3673, column: 111, scope: !13680)
!13693 = !DILocation(line: 3674, column: 14, scope: !13680)
!13694 = !DILocation(line: 3674, column: 82, scope: !13680)
!13695 = !DILocation(line: 3674, column: 101, scope: !13680)
!13696 = !DILocation(line: 3674, column: 53, scope: !13680)
!13697 = !DILocation(line: 3674, column: 126, scope: !13680)
!13698 = !DILocation(line: 3675, column: 14, scope: !13680)
!13699 = !DILocation(line: 3675, column: 80, scope: !13680)
!13700 = !DILocation(line: 3675, column: 85, scope: !13680)
!13701 = !DILocation(line: 3675, column: 53, scope: !13680)
!13702 = !DILocation(line: 3675, column: 111, scope: !13680)
!13703 = !DILocation(line: 3676, column: 14, scope: !13680)
!13704 = !DILocation(line: 3676, column: 80, scope: !13680)
!13705 = !DILocation(line: 3676, column: 85, scope: !13680)
!13706 = !DILocation(line: 3676, column: 53, scope: !13680)
!13707 = !DILocation(line: 3670, column: 13, scope: !13678)
!13708 = !DILocation(line: 3691, column: 3, scope: !13338)
!13709 = !DILocation(line: 3692, column: 1, scope: !13338)
!13710 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12500, file: !12500, line: 3703, type: !13711, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13713)
!13711 = !DISubroutineType(types: !13712)
!13712 = !{null, !13341}
!13713 = !{!13714}
!13714 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13710, file: !12500, line: 3703, type: !13341)
!13715 = !DILocation(line: 0, scope: !13710)
!13716 = !DILocation(line: 3706, column: 22, scope: !13710)
!13717 = !DILocation(line: 3706, column: 37, scope: !13710)
!13718 = !DILocation(line: 3709, column: 12, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !13710, file: !12500, line: 3709, column: 6)
!13720 = !DILocation(line: 3709, column: 15, scope: !13719)
!13721 = !DILocation(line: 3709, column: 31, scope: !13719)
!13722 = !DILocation(line: 3709, column: 6, scope: !13710)
!13723 = !DILocation(line: 3711, column: 24, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13719, file: !12500, line: 3710, column: 3)
!13725 = !DILocation(line: 3711, column: 33, scope: !13724)
!13726 = !DILocation(line: 3712, column: 3, scope: !13724)
!13727 = !DILocation(line: 3713, column: 17, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13719, file: !12500, line: 3713, column: 11)
!13729 = !DILocation(line: 3713, column: 20, scope: !13728)
!13730 = !DILocation(line: 3713, column: 35, scope: !13728)
!13731 = !DILocation(line: 0, scope: !13728)
!13732 = !DILocation(line: 3713, column: 11, scope: !13719)
!13733 = !DILocation(line: 3715, column: 33, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13728, file: !12500, line: 3714, column: 3)
!13735 = !DILocation(line: 3716, column: 3, scope: !13734)
!13736 = !DILocation(line: 3719, column: 33, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13728, file: !12500, line: 3718, column: 3)
!13738 = !DILocation(line: 3723, column: 12, scope: !13739)
!13739 = distinct !DILexicalBlock(scope: !13710, file: !12500, line: 3723, column: 6)
!13740 = !DILocation(line: 3723, column: 15, scope: !13739)
!13741 = !DILocation(line: 3729, column: 24, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13739, file: !12500, line: 3728, column: 3)
!13743 = !DILocation(line: 3729, column: 33, scope: !13742)
!13744 = !DILocation(line: 3732, column: 61, scope: !13710)
!13745 = !DILocation(line: 3732, column: 81, scope: !13710)
!13746 = !DILocation(line: 3732, column: 22, scope: !13710)
!13747 = !DILocation(line: 3732, column: 42, scope: !13710)
!13748 = !DILocation(line: 3735, column: 12, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13710, file: !12500, line: 3735, column: 6)
!13750 = !DILocation(line: 3735, column: 17, scope: !13749)
!13751 = !DILocation(line: 3735, column: 35, scope: !13749)
!13752 = !DILocation(line: 3735, column: 6, scope: !13710)
!13753 = !DILocation(line: 3737, column: 24, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13749, file: !12500, line: 3736, column: 3)
!13755 = !DILocation(line: 3737, column: 33, scope: !13754)
!13756 = !DILocation(line: 3738, column: 3, scope: !13754)
!13757 = !DILocation(line: 3739, column: 17, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13749, file: !12500, line: 3739, column: 11)
!13759 = !DILocation(line: 3739, column: 22, scope: !13758)
!13760 = !DILocation(line: 3739, column: 39, scope: !13758)
!13761 = !DILocation(line: 0, scope: !13758)
!13762 = !DILocation(line: 3739, column: 11, scope: !13749)
!13763 = !DILocation(line: 3741, column: 33, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13758, file: !12500, line: 3740, column: 3)
!13765 = !DILocation(line: 3742, column: 3, scope: !13764)
!13766 = !DILocation(line: 3745, column: 33, scope: !13767)
!13767 = distinct !DILexicalBlock(scope: !13758, file: !12500, line: 3744, column: 3)
!13768 = !DILocation(line: 3749, column: 12, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13710, file: !12500, line: 3749, column: 6)
!13770 = !DILocation(line: 3749, column: 16, scope: !13769)
!13771 = !DILocation(line: 3755, column: 24, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13769, file: !12500, line: 3754, column: 3)
!13773 = !DILocation(line: 3755, column: 33, scope: !13772)
!13774 = !DILocation(line: 3759, column: 12, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13710, file: !12500, line: 3759, column: 6)
!13776 = !DILocation(line: 3759, column: 15, scope: !13775)
!13777 = !DILocation(line: 3759, column: 30, scope: !13775)
!13778 = !DILocation(line: 3759, column: 6, scope: !13710)
!13779 = !DILocation(line: 3765, column: 28, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13775, file: !12500, line: 3764, column: 3)
!13781 = !DILocation(line: 3765, column: 37, scope: !13780)
!13782 = !DILocation(line: 3767, column: 54, scope: !13710)
!13783 = !DILocation(line: 3767, column: 62, scope: !13710)
!13784 = !DILocation(line: 3767, column: 26, scope: !13710)
!13785 = !DILocation(line: 3767, column: 36, scope: !13710)
!13786 = !DILocation(line: 3768, column: 49, scope: !13710)
!13787 = !DILocation(line: 3768, column: 57, scope: !13710)
!13788 = !DILocation(line: 3768, column: 26, scope: !13710)
!13789 = !DILocation(line: 3768, column: 31, scope: !13710)
!13790 = !DILocation(line: 3769, column: 50, scope: !13710)
!13791 = !DILocation(line: 3769, column: 78, scope: !13710)
!13792 = !DILocation(line: 3769, column: 26, scope: !13710)
!13793 = !DILocation(line: 3769, column: 31, scope: !13710)
!13794 = !DILocation(line: 3770, column: 52, scope: !13710)
!13795 = !DILocation(line: 3770, column: 102, scope: !13710)
!13796 = !DILocation(line: 3770, column: 109, scope: !13710)
!13797 = !DILocation(line: 3770, column: 26, scope: !13710)
!13798 = !DILocation(line: 3770, column: 31, scope: !13710)
!13799 = !DILocation(line: 3771, column: 50, scope: !13710)
!13800 = !DILocation(line: 3771, column: 78, scope: !13710)
!13801 = !DILocation(line: 3771, column: 26, scope: !13710)
!13802 = !DILocation(line: 3771, column: 31, scope: !13710)
!13803 = !DILocation(line: 3772, column: 50, scope: !13710)
!13804 = !DILocation(line: 3772, column: 78, scope: !13710)
!13805 = !DILocation(line: 3772, column: 26, scope: !13710)
!13806 = !DILocation(line: 3772, column: 31, scope: !13710)
!13807 = !DILocation(line: 3773, column: 1, scope: !13710)
!13808 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13809, file: !13809, line: 257, type: !7945, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !13810)
!13809 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13810 = !{!13811}
!13811 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13808, file: !13809, line: 257, type: !113)
!13812 = !DILocation(line: 0, scope: !13808)
!13813 = !DILocation(line: 260, column: 3, scope: !13808)
!13814 = !DILocation(line: 261, column: 1, scope: !13808)
!13815 = distinct !DISubprogram(name: "LL_InitTick", scope: !13816, file: !13816, line: 260, type: !10859, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !13817)
!13816 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13817 = !{!13818, !13819}
!13818 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13815, file: !13816, line: 260, type: !113)
!13819 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13815, file: !13816, line: 260, type: !113)
!13820 = !DILocation(line: 0, scope: !13815)
!13821 = !DILocation(line: 263, column: 46, scope: !13815)
!13822 = !DILocation(line: 263, column: 55, scope: !13815)
!13823 = !DILocation(line: 263, column: 18, scope: !13815)
!13824 = !DILocation(line: 264, column: 18, scope: !13815)
!13825 = !DILocation(line: 265, column: 18, scope: !13815)
!13826 = !DILocation(line: 267, column: 1, scope: !13815)
!13827 = distinct !DISubprogram(name: "LL_mDelay", scope: !13809, file: !13809, line: 273, type: !7945, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !13828)
!13828 = !{!13829, !13830}
!13829 = !DILocalVariable(name: "Delay", arg: 1, scope: !13827, file: !13809, line: 273, type: !113)
!13830 = !DILocalVariable(name: "tmp", scope: !13827, file: !13809, line: 275, type: !461)
!13831 = !DILocation(line: 0, scope: !13827)
!13832 = !DILocation(line: 275, column: 3, scope: !13827)
!13833 = !DILocation(line: 275, column: 18, scope: !13827)
!13834 = !DILocation(line: 275, column: 33, scope: !13827)
!13835 = !DILocation(line: 277, column: 10, scope: !13827)
!13836 = !DILocation(line: 280, column: 12, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13827, file: !13809, line: 280, column: 6)
!13838 = !DILocation(line: 285, column: 3, scope: !13827)
!13839 = !DILocation(line: 287, column: 18, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13841, file: !13809, line: 287, column: 8)
!13841 = distinct !DILexicalBlock(scope: !13827, file: !13809, line: 286, column: 3)
!13842 = !DILocation(line: 292, column: 1, scope: !13827)
!13843 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13809, file: !13809, line: 323, type: !7945, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !13844)
!13844 = !{!13845}
!13845 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13843, file: !13809, line: 323, type: !113)
!13846 = !DILocation(line: 0, scope: !13843)
!13847 = !DILocation(line: 326, column: 19, scope: !13843)
!13848 = !DILocation(line: 327, column: 1, scope: !13843)
!13849 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13809, file: !13809, line: 338, type: !13850, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !13853)
!13850 = !DISubroutineType(types: !13851)
!13851 = !{!13852, !113}
!13852 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !986, line: 201, baseType: !985)
!13853 = !{!13854, !13855, !13856, !13857, !13858}
!13854 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13849, file: !13809, line: 338, type: !113)
!13855 = !DILocalVariable(name: "timeout", scope: !13849, file: !13809, line: 340, type: !113)
!13856 = !DILocalVariable(name: "getlatency", scope: !13849, file: !13809, line: 341, type: !113)
!13857 = !DILocalVariable(name: "latency", scope: !13849, file: !13809, line: 342, type: !113)
!13858 = !DILocalVariable(name: "status", scope: !13849, file: !13809, line: 343, type: !13852)
!13859 = !DILocation(line: 0, scope: !13849)
!13860 = !DILocation(line: 347, column: 21, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13849, file: !13809, line: 347, column: 6)
!13862 = !DILocation(line: 347, column: 6, scope: !13849)
!13863 = !DILocation(line: 353, column: 8, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13865, file: !13809, line: 353, column: 8)
!13865 = distinct !DILexicalBlock(scope: !13861, file: !13809, line: 352, column: 3)
!13866 = !DILocation(line: 353, column: 40, scope: !13864)
!13867 = !DILocation(line: 353, column: 8, scope: !13865)
!13868 = !DILocation(line: 356, column: 26, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13870, file: !13809, line: 356, column: 10)
!13870 = distinct !DILexicalBlock(scope: !13864, file: !13809, line: 354, column: 5)
!13871 = !DILocation(line: 356, column: 55, scope: !13869)
!13872 = !DILocation(line: 362, column: 55, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13870, file: !13809, line: 362, column: 10)
!13874 = !DILocation(line: 368, column: 55, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13870, file: !13809, line: 368, column: 10)
!13876 = !DILocation(line: 374, column: 26, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13870, file: !13809, line: 374, column: 10)
!13878 = !DILocation(line: 374, column: 55, scope: !13877)
!13879 = !DILocation(line: 380, column: 28, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13881, file: !13809, line: 380, column: 12)
!13881 = distinct !DILexicalBlock(scope: !13877, file: !13809, line: 379, column: 7)
!13882 = !DILocation(line: 380, column: 57, scope: !13880)
!13883 = !DILocation(line: 387, column: 8, scope: !13884)
!13884 = distinct !DILexicalBlock(scope: !13865, file: !13809, line: 387, column: 8)
!13885 = !DILocation(line: 387, column: 40, scope: !13884)
!13886 = !DILocation(line: 387, column: 8, scope: !13865)
!13887 = !DILocation(line: 390, column: 26, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13889, file: !13809, line: 390, column: 10)
!13889 = distinct !DILexicalBlock(scope: !13884, file: !13809, line: 388, column: 5)
!13890 = !DILocation(line: 390, column: 55, scope: !13888)
!13891 = !DILocation(line: 396, column: 26, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13889, file: !13809, line: 396, column: 10)
!13893 = !DILocation(line: 396, column: 55, scope: !13892)
!13894 = !DILocation(line: 402, column: 26, scope: !13895)
!13895 = distinct !DILexicalBlock(scope: !13889, file: !13809, line: 402, column: 10)
!13896 = !DILocation(line: 402, column: 55, scope: !13895)
!13897 = !DILocation(line: 407, column: 26, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13889, file: !13809, line: 407, column: 10)
!13899 = !DILocation(line: 407, column: 55, scope: !13898)
!13900 = !DILocation(line: 413, column: 28, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13902, file: !13809, line: 413, column: 12)
!13902 = distinct !DILexicalBlock(scope: !13898, file: !13809, line: 412, column: 7)
!13903 = !DILocation(line: 413, column: 57, scope: !13901)
!13904 = !DILocation(line: 0, scope: !13865)
!13905 = !DILocation(line: 420, column: 8, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13865, file: !13809, line: 420, column: 8)
!13907 = !DILocation(line: 420, column: 40, scope: !13906)
!13908 = !DILocation(line: 420, column: 8, scope: !13865)
!13909 = !DILocation(line: 423, column: 26, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13911, file: !13809, line: 423, column: 10)
!13911 = distinct !DILexicalBlock(scope: !13906, file: !13809, line: 421, column: 5)
!13912 = !DILocation(line: 423, column: 55, scope: !13910)
!13913 = !DILocation(line: 429, column: 26, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13911, file: !13809, line: 429, column: 10)
!13915 = !DILocation(line: 429, column: 55, scope: !13914)
!13916 = !DILocation(line: 435, column: 28, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13918, file: !13809, line: 435, column: 12)
!13918 = distinct !DILexicalBlock(scope: !13914, file: !13809, line: 434, column: 7)
!13919 = !DILocation(line: 435, column: 57, scope: !13917)
!13920 = !DILocation(line: 444, column: 5, scope: !13865)
!13921 = !DILocation(line: 448, column: 5, scope: !13865)
!13922 = !DILocation(line: 451, column: 18, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13865, file: !13809, line: 449, column: 5)
!13924 = !DILocation(line: 452, column: 12, scope: !13923)
!13925 = !DILocation(line: 453, column: 26, scope: !13865)
!13926 = !DILocation(line: 453, column: 38, scope: !13865)
!13927 = !DILocation(line: 453, column: 5, scope: !13923)
!13928 = distinct !{!13928, !13921, !13929}
!13929 = !DILocation(line: 453, column: 54, scope: !13865)
!13930 = !DILocation(line: 0, scope: !13861)
!13931 = !DILocation(line: 464, column: 3, scope: !13849)
!13932 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13933, file: !13933, line: 519, type: !395, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !397)
!13933 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13934 = !DILocation(line: 521, column: 21, scope: !13932)
!13935 = !DILocation(line: 521, column: 3, scope: !13932)
!13936 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7553, file: !7553, line: 1543, type: !7945, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !13937)
!13937 = !{!13938}
!13938 = !DILocalVariable(name: "Latency", arg: 1, scope: !13936, file: !7553, line: 1543, type: !113)
!13939 = !DILocation(line: 0, scope: !13936)
!13940 = !DILocation(line: 1545, column: 3, scope: !13936)
!13941 = !DILocation(line: 1546, column: 1, scope: !13936)
!13942 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7553, file: !7553, line: 1569, type: !395, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !397)
!13943 = !DILocation(line: 1571, column: 21, scope: !13942)
!13944 = !DILocation(line: 1571, column: 3, scope: !13942)
!13945 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13809, file: !13809, line: 483, type: !13946, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !13962)
!13946 = !DISubroutineType(types: !13947)
!13947 = !{!13852, !13948, !13955}
!13948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13949, size: 32)
!13949 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13816, line: 114, baseType: !13950)
!13950 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13816, line: 94, size: 96, elements: !13951)
!13951 = !{!13952, !13953, !13954}
!13952 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13950, file: !13816, line: 96, baseType: !113, size: 32)
!13953 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13950, file: !13816, line: 102, baseType: !113, size: 32, offset: 32)
!13954 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13950, file: !13816, line: 109, baseType: !113, size: 32, offset: 64)
!13955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13956, size: 32)
!13956 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13816, line: 139, baseType: !13957)
!13957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13816, line: 119, size: 96, elements: !13958)
!13958 = !{!13959, !13960, !13961}
!13959 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13957, file: !13816, line: 121, baseType: !113, size: 32)
!13960 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13957, file: !13816, line: 127, baseType: !113, size: 32, offset: 32)
!13961 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13957, file: !13816, line: 133, baseType: !113, size: 32, offset: 64)
!13962 = !{!13963, !13964, !13965, !13966}
!13963 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13945, file: !13809, line: 483, type: !13948)
!13964 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13945, file: !13809, line: 484, type: !13955)
!13965 = !DILocalVariable(name: "status", scope: !13945, file: !13809, line: 486, type: !13852)
!13966 = !DILocalVariable(name: "pllfreq", scope: !13945, file: !13809, line: 487, type: !113)
!13967 = !DILocation(line: 0, scope: !13945)
!13968 = !DILocation(line: 490, column: 6, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13945, file: !13809, line: 490, column: 6)
!13970 = !DILocation(line: 490, column: 25, scope: !13969)
!13971 = !DILocation(line: 490, column: 6, scope: !13945)
!13972 = !DILocation(line: 493, column: 15, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13969, file: !13809, line: 491, column: 3)
!13974 = !DILocation(line: 496, column: 8, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13973, file: !13809, line: 496, column: 8)
!13976 = !DILocation(line: 496, column: 29, scope: !13975)
!13977 = !DILocation(line: 496, column: 8, scope: !13973)
!13978 = !DILocation(line: 498, column: 7, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13975, file: !13809, line: 497, column: 5)
!13980 = !DILocation(line: 499, column: 7, scope: !13979)
!13981 = !DILocation(line: 499, column: 14, scope: !13979)
!13982 = !DILocation(line: 499, column: 35, scope: !13979)
!13983 = distinct !{!13983, !13980, !13984}
!13984 = !DILocation(line: 502, column: 7, scope: !13979)
!13985 = !DILocation(line: 506, column: 76, scope: !13973)
!13986 = !DILocation(line: 506, column: 103, scope: !13973)
!13987 = !DILocation(line: 507, column: 54, scope: !13973)
!13988 = !DILocation(line: 506, column: 5, scope: !13973)
!13989 = !DILocation(line: 510, column: 14, scope: !13973)
!13990 = !DILocation(line: 511, column: 3, scope: !13973)
!13991 = !DILocation(line: 0, scope: !13969)
!13992 = !DILocation(line: 518, column: 3, scope: !13945)
!13993 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13809, file: !13809, line: 642, type: !13994, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !13996)
!13994 = !DISubroutineType(types: !13995)
!13995 = !{!13852}
!13996 = !{!13997}
!13997 = !DILocalVariable(name: "status", scope: !13993, file: !13809, line: 644, type: !13852)
!13998 = !DILocation(line: 0, scope: !13993)
!13999 = !DILocation(line: 647, column: 6, scope: !14000)
!14000 = distinct !DILexicalBlock(scope: !13993, file: !13809, line: 647, column: 6)
!14001 = !DILocation(line: 647, column: 27, scope: !14000)
!14002 = !DILocation(line: 655, column: 6, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !13993, file: !13809, line: 655, column: 6)
!14004 = !DILocation(line: 655, column: 30, scope: !14003)
!14005 = !DILocation(line: 663, column: 6, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !13993, file: !13809, line: 663, column: 6)
!14007 = !DILocation(line: 663, column: 30, scope: !14006)
!14008 = !DILocation(line: 663, column: 6, scope: !13993)
!14009 = !DILocation(line: 669, column: 3, scope: !13993)
!14010 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13809, file: !13809, line: 611, type: !14011, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !14013)
!14011 = !DISubroutineType(types: !14012)
!14012 = !{!113, !113, !13948}
!14013 = !{!14014, !14015, !14016}
!14014 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !14010, file: !13809, line: 611, type: !113)
!14015 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !14010, file: !13809, line: 611, type: !13948)
!14016 = !DILocalVariable(name: "pllfreq", scope: !14010, file: !13809, line: 613, type: !113)
!14017 = !DILocation(line: 0, scope: !14010)
!14018 = !DILocation(line: 622, column: 56, scope: !14010)
!14019 = !DILocation(line: 622, column: 61, scope: !14010)
!14020 = !DILocation(line: 622, column: 32, scope: !14010)
!14021 = !DILocation(line: 626, column: 45, scope: !14010)
!14022 = !DILocation(line: 626, column: 50, scope: !14010)
!14023 = !DILocation(line: 626, column: 21, scope: !14010)
!14024 = !DILocation(line: 630, column: 47, scope: !14010)
!14025 = !DILocation(line: 630, column: 82, scope: !14010)
!14026 = !DILocation(line: 630, column: 21, scope: !14010)
!14027 = !DILocation(line: 633, column: 3, scope: !14010)
!14028 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10184, file: !10184, line: 3007, type: !395, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !397)
!14029 = !DILocation(line: 3009, column: 11, scope: !14028)
!14030 = !DILocation(line: 3009, column: 44, scope: !14028)
!14031 = !DILocation(line: 3009, column: 3, scope: !14028)
!14032 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10184, file: !10184, line: 2987, type: !266, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !397)
!14033 = !DILocation(line: 2989, column: 3, scope: !14032)
!14034 = !DILocation(line: 2990, column: 1, scope: !14032)
!14035 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10184, file: !10184, line: 4304, type: !10318, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !14036)
!14036 = !{!14037, !14038, !14039, !14040}
!14037 = !DILocalVariable(name: "Source", arg: 1, scope: !14035, file: !10184, line: 4304, type: !113)
!14038 = !DILocalVariable(name: "PLLM", arg: 2, scope: !14035, file: !10184, line: 4304, type: !113)
!14039 = !DILocalVariable(name: "PLLN", arg: 3, scope: !14035, file: !10184, line: 4304, type: !113)
!14040 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !14035, file: !10184, line: 4304, type: !113)
!14041 = !DILocation(line: 0, scope: !14035)
!14042 = !DILocation(line: 4306, column: 3, scope: !14035)
!14043 = !DILocation(line: 4308, column: 3, scope: !14035)
!14044 = !DILocation(line: 4310, column: 3, scope: !14035)
!14045 = !DILocation(line: 4312, column: 1, scope: !14035)
!14046 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13809, file: !13809, line: 681, type: !14047, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !14049)
!14047 = !DISubroutineType(types: !14048)
!14048 = !{!13852, !113, !13955}
!14049 = !{!14050, !14051, !14052, !14053}
!14050 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !14046, file: !13809, line: 681, type: !113)
!14051 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14046, file: !13809, line: 681, type: !13955)
!14052 = !DILocalVariable(name: "status", scope: !14046, file: !13809, line: 683, type: !13852)
!14053 = !DILocalVariable(name: "hclk_frequency", scope: !14046, file: !13809, line: 684, type: !113)
!14054 = !DILocation(line: 0, scope: !14046)
!14055 = !DILocation(line: 691, column: 20, scope: !14046)
!14056 = !DILocation(line: 694, column: 6, scope: !14057)
!14057 = distinct !DILexicalBlock(scope: !14046, file: !13809, line: 694, column: 6)
!14058 = !DILocation(line: 694, column: 22, scope: !14057)
!14059 = !DILocation(line: 694, column: 6, scope: !14046)
!14060 = !DILocation(line: 697, column: 14, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14057, file: !13809, line: 695, column: 3)
!14062 = !DILocation(line: 701, column: 13, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14046, file: !13809, line: 701, column: 6)
!14064 = !DILocation(line: 701, column: 6, scope: !14046)
!14065 = !DILocation(line: 704, column: 5, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14063, file: !13809, line: 702, column: 3)
!14067 = !DILocation(line: 705, column: 5, scope: !14066)
!14068 = !DILocation(line: 705, column: 12, scope: !14066)
!14069 = !DILocation(line: 705, column: 33, scope: !14066)
!14070 = distinct !{!14070, !14067, !14071}
!14071 = !DILocation(line: 708, column: 5, scope: !14066)
!14072 = !DILocation(line: 711, column: 49, scope: !14066)
!14073 = !DILocation(line: 711, column: 5, scope: !14066)
!14074 = !DILocation(line: 712, column: 5, scope: !14066)
!14075 = !DILocation(line: 713, column: 5, scope: !14066)
!14076 = !DILocation(line: 713, column: 12, scope: !14066)
!14077 = !DILocation(line: 713, column: 37, scope: !14066)
!14078 = distinct !{!14078, !14075, !14079}
!14079 = !DILocation(line: 716, column: 5, scope: !14066)
!14080 = !DILocation(line: 719, column: 50, scope: !14066)
!14081 = !DILocation(line: 719, column: 5, scope: !14066)
!14082 = !DILocation(line: 720, column: 50, scope: !14066)
!14083 = !DILocation(line: 720, column: 5, scope: !14066)
!14084 = !DILocation(line: 721, column: 3, scope: !14066)
!14085 = !DILocation(line: 724, column: 6, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14046, file: !13809, line: 724, column: 6)
!14087 = !DILocation(line: 724, column: 22, scope: !14086)
!14088 = !DILocation(line: 724, column: 6, scope: !14046)
!14089 = !DILocation(line: 727, column: 14, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14086, file: !13809, line: 725, column: 3)
!14091 = !DILocation(line: 728, column: 3, scope: !14090)
!14092 = !DILocation(line: 731, column: 13, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14046, file: !13809, line: 731, column: 6)
!14094 = !DILocation(line: 731, column: 6, scope: !14046)
!14095 = !DILocation(line: 733, column: 5, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14093, file: !13809, line: 732, column: 3)
!14097 = !DILocation(line: 734, column: 3, scope: !14096)
!14098 = !DILocation(line: 736, column: 3, scope: !14046)
!14099 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10184, file: !10184, line: 4184, type: !266, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !397)
!14100 = !DILocation(line: 4186, column: 3, scope: !14099)
!14101 = !DILocation(line: 4187, column: 1, scope: !14099)
!14102 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10184, file: !10184, line: 4205, type: !395, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !397)
!14103 = !DILocation(line: 4207, column: 11, scope: !14102)
!14104 = !DILocation(line: 4207, column: 44, scope: !14102)
!14105 = !DILocation(line: 4207, column: 3, scope: !14102)
!14106 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10184, file: !10184, line: 3224, type: !7945, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !14107)
!14107 = !{!14108}
!14108 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14106, file: !10184, line: 3224, type: !113)
!14109 = !DILocation(line: 0, scope: !14106)
!14110 = !DILocation(line: 3226, column: 3, scope: !14106)
!14111 = !DILocation(line: 3227, column: 1, scope: !14106)
!14112 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10184, file: !10184, line: 3188, type: !7945, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !14113)
!14113 = !{!14114}
!14114 = !DILocalVariable(name: "Source", arg: 1, scope: !14112, file: !10184, line: 3188, type: !113)
!14115 = !DILocation(line: 0, scope: !14112)
!14116 = !DILocation(line: 3190, column: 3, scope: !14112)
!14117 = !DILocation(line: 3191, column: 1, scope: !14112)
!14118 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10184, file: !10184, line: 3204, type: !395, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !397)
!14119 = !DILocation(line: 3206, column: 21, scope: !14118)
!14120 = !DILocation(line: 3206, column: 3, scope: !14118)
!14121 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10184, file: !10184, line: 3240, type: !7945, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !14122)
!14122 = !{!14123}
!14123 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14121, file: !10184, line: 3240, type: !113)
!14124 = !DILocation(line: 0, scope: !14121)
!14125 = !DILocation(line: 3242, column: 3, scope: !14121)
!14126 = !DILocation(line: 3243, column: 1, scope: !14121)
!14127 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10184, file: !10184, line: 3256, type: !7945, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !14128)
!14128 = !{!14129}
!14129 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14127, file: !10184, line: 3256, type: !113)
!14130 = !DILocation(line: 0, scope: !14127)
!14131 = !DILocation(line: 3258, column: 3, scope: !14127)
!14132 = !DILocation(line: 3259, column: 1, scope: !14127)
!14133 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !10184, file: !10184, line: 5969, type: !395, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !397)
!14134 = !DILocation(line: 5971, column: 11, scope: !14133)
!14135 = !DILocation(line: 5971, column: 47, scope: !14133)
!14136 = !DILocation(line: 5971, column: 3, scope: !14133)
!14137 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10184, file: !10184, line: 5153, type: !395, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !397)
!14138 = !DILocation(line: 5155, column: 11, scope: !14137)
!14139 = !DILocation(line: 5155, column: 47, scope: !14137)
!14140 = !DILocation(line: 5155, column: 3, scope: !14137)
!14141 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13809, file: !13809, line: 540, type: !14142, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !14144)
!14142 = !DISubroutineType(types: !14143)
!14143 = !{!13852, !113, !113, !13948, !13955}
!14144 = !{!14145, !14146, !14147, !14148, !14149, !14150}
!14145 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14141, file: !13809, line: 540, type: !113)
!14146 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14141, file: !13809, line: 540, type: !113)
!14147 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14141, file: !13809, line: 541, type: !13948)
!14148 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14141, file: !13809, line: 541, type: !13955)
!14149 = !DILocalVariable(name: "status", scope: !14141, file: !13809, line: 543, type: !13852)
!14150 = !DILocalVariable(name: "pllfreq", scope: !14141, file: !13809, line: 544, type: !113)
!14151 = !DILocation(line: 0, scope: !14141)
!14152 = !DILocation(line: 551, column: 6, scope: !14153)
!14153 = distinct !DILexicalBlock(scope: !14141, file: !13809, line: 551, column: 6)
!14154 = !DILocation(line: 551, column: 25, scope: !14153)
!14155 = !DILocation(line: 551, column: 6, scope: !14141)
!14156 = !DILocation(line: 554, column: 15, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14153, file: !13809, line: 552, column: 3)
!14158 = !DILocation(line: 557, column: 8, scope: !14159)
!14159 = distinct !DILexicalBlock(scope: !14157, file: !13809, line: 557, column: 8)
!14160 = !DILocation(line: 557, column: 29, scope: !14159)
!14161 = !DILocation(line: 557, column: 8, scope: !14157)
!14162 = !DILocation(line: 560, column: 20, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14164, file: !13809, line: 560, column: 10)
!14164 = distinct !DILexicalBlock(scope: !14159, file: !13809, line: 558, column: 5)
!14165 = !DILocation(line: 560, column: 10, scope: !14164)
!14166 = !DILocation(line: 562, column: 9, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14163, file: !13809, line: 561, column: 7)
!14168 = !DILocation(line: 563, column: 7, scope: !14167)
!14169 = !DILocation(line: 566, column: 9, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14163, file: !13809, line: 565, column: 7)
!14171 = !DILocation(line: 570, column: 7, scope: !14164)
!14172 = !DILocation(line: 571, column: 7, scope: !14164)
!14173 = !DILocation(line: 571, column: 14, scope: !14164)
!14174 = !DILocation(line: 571, column: 35, scope: !14164)
!14175 = distinct !{!14175, !14172, !14176}
!14176 = !DILocation(line: 574, column: 7, scope: !14164)
!14177 = !DILocation(line: 578, column: 76, scope: !14157)
!14178 = !DILocation(line: 578, column: 103, scope: !14157)
!14179 = !DILocation(line: 579, column: 54, scope: !14157)
!14180 = !DILocation(line: 578, column: 5, scope: !14157)
!14181 = !DILocation(line: 582, column: 14, scope: !14157)
!14182 = !DILocation(line: 583, column: 3, scope: !14157)
!14183 = !DILocation(line: 0, scope: !14153)
!14184 = !DILocation(line: 590, column: 3, scope: !14141)
!14185 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10184, file: !10184, line: 2969, type: !395, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !397)
!14186 = !DILocation(line: 2971, column: 11, scope: !14185)
!14187 = !DILocation(line: 2971, column: 44, scope: !14185)
!14188 = !DILocation(line: 2971, column: 3, scope: !14185)
!14189 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10184, file: !10184, line: 2929, type: !266, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !397)
!14190 = !DILocation(line: 2931, column: 3, scope: !14189)
!14191 = !DILocation(line: 2932, column: 1, scope: !14189)
!14192 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10184, file: !10184, line: 2939, type: !266, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !397)
!14193 = !DILocation(line: 2941, column: 3, scope: !14192)
!14194 = !DILocation(line: 2942, column: 1, scope: !14192)
!14195 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10184, file: !10184, line: 2949, type: !266, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !397)
!14196 = !DILocation(line: 2951, column: 3, scope: !14195)
!14197 = !DILocation(line: 2952, column: 1, scope: !14195)
!14198 = distinct !DISubprogram(name: "z_device_state_init", scope: !14199, file: !14199, line: 23, type: !266, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14200)
!14199 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14200 = !{!14201}
!14201 = !DILocalVariable(name: "dev", scope: !14198, file: !14199, line: 25, type: !14202)
!14202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14203, size: 32)
!14203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14204)
!14204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !14205)
!14205 = !{!14206, !14207, !14208, !14209, !14215, !14216}
!14206 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14204, file: !481, line: 380, baseType: !269, size: 32)
!14207 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14204, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!14208 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !14204, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!14209 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14204, file: !481, line: 386, baseType: !14210, size: 32, offset: 96)
!14210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14211, size: 32)
!14211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !14212)
!14212 = !{!14213, !14214}
!14213 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14211, file: !481, line: 359, baseType: !169, size: 8)
!14214 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14211, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14215 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14204, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!14216 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !14204, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!14217 = !DILocation(line: 0, scope: !14198)
!14218 = !DILocation(line: 31, column: 1, scope: !14198)
!14219 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !14199, file: !14199, line: 33, type: !14220, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14222)
!14220 = !DISubroutineType(types: !14221)
!14221 = !{!14202, !269}
!14222 = !{!14223, !14224}
!14223 = !DILocalVariable(name: "name", arg: 1, scope: !14219, file: !14199, line: 33, type: !269)
!14224 = !DILocalVariable(name: "dev", scope: !14219, file: !14199, line: 35, type: !14202)
!14225 = !DILocation(line: 0, scope: !14219)
!14226 = !DILocation(line: 40, column: 12, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14219, file: !14199, line: 40, column: 6)
!14228 = !DILocation(line: 40, column: 21, scope: !14227)
!14229 = !DILocation(line: 40, column: 25, scope: !14227)
!14230 = !DILocation(line: 40, column: 33, scope: !14227)
!14231 = !DILocation(line: 40, column: 6, scope: !14219)
!14232 = !DILocation(line: 55, column: 2, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14219, file: !14199, line: 55, column: 2)
!14234 = !DILocation(line: 50, column: 7, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14236, file: !14199, line: 50, column: 7)
!14236 = distinct !DILexicalBlock(scope: !14237, file: !14199, line: 49, column: 57)
!14237 = distinct !DILexicalBlock(scope: !14238, file: !14199, line: 49, column: 2)
!14238 = distinct !DILexicalBlock(scope: !14219, file: !14199, line: 49, column: 2)
!14239 = !DILocation(line: 50, column: 30, scope: !14235)
!14240 = !DILocation(line: 50, column: 39, scope: !14235)
!14241 = !DILocation(line: 50, column: 44, scope: !14235)
!14242 = !DILocation(line: 50, column: 7, scope: !14236)
!14243 = !DILocation(line: 49, column: 53, scope: !14237)
!14244 = !DILocation(line: 49, column: 33, scope: !14237)
!14245 = !DILocation(line: 49, column: 2, scope: !14238)
!14246 = distinct !{!14246, !14245, !14247}
!14247 = !DILocation(line: 53, column: 2, scope: !14238)
!14248 = !DILocation(line: 56, column: 7, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14250, file: !14199, line: 56, column: 7)
!14250 = distinct !DILexicalBlock(scope: !14251, file: !14199, line: 55, column: 57)
!14251 = distinct !DILexicalBlock(scope: !14233, file: !14199, line: 55, column: 2)
!14252 = !DILocation(line: 56, column: 30, scope: !14249)
!14253 = !DILocation(line: 56, column: 52, scope: !14249)
!14254 = !DILocation(line: 56, column: 34, scope: !14249)
!14255 = !DILocation(line: 56, column: 58, scope: !14249)
!14256 = !DILocation(line: 56, column: 7, scope: !14250)
!14257 = !DILocation(line: 55, column: 53, scope: !14251)
!14258 = !DILocation(line: 55, column: 33, scope: !14251)
!14259 = distinct !{!14259, !14232, !14260}
!14260 = !DILocation(line: 59, column: 2, scope: !14233)
!14261 = !DILocation(line: 62, column: 1, scope: !14219)
!14262 = distinct !DISubprogram(name: "z_device_is_ready", scope: !14199, file: !14199, line: 93, type: !14263, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14265)
!14263 = !DISubroutineType(types: !14264)
!14264 = !{!492, !14202}
!14265 = !{!14266}
!14266 = !DILocalVariable(name: "dev", arg: 1, scope: !14262, file: !14199, line: 93, type: !14202)
!14267 = !DILocation(line: 0, scope: !14262)
!14268 = !DILocation(line: 99, column: 10, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14262, file: !14199, line: 99, column: 6)
!14270 = !DILocation(line: 99, column: 6, scope: !14262)
!14271 = !DILocation(line: 103, column: 14, scope: !14262)
!14272 = !DILocation(line: 103, column: 21, scope: !14262)
!14273 = !DILocation(line: 103, column: 33, scope: !14262)
!14274 = !DILocation(line: 103, column: 49, scope: !14262)
!14275 = !DILocation(line: 103, column: 58, scope: !14262)
!14276 = !DILocation(line: 104, column: 1, scope: !14262)
!14277 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !14199, file: !14199, line: 87, type: !14278, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14281)
!14278 = !DISubroutineType(types: !14279)
!14279 = !{!111, !14280}
!14280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14202, size: 32)
!14281 = !{!14282}
!14282 = !DILocalVariable(name: "devices", arg: 1, scope: !14277, file: !14199, line: 87, type: !14280)
!14283 = !DILocation(line: 0, scope: !14277)
!14284 = !DILocation(line: 89, column: 11, scope: !14277)
!14285 = !DILocation(line: 90, column: 2, scope: !14277)
!14286 = distinct !DISubprogram(name: "device_required_foreach", scope: !14199, file: !14199, line: 125, type: !14287, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14293)
!14287 = !DISubroutineType(types: !14288)
!14288 = !{!105, !14202, !14289, !104}
!14289 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !481, line: 471, baseType: !14290)
!14290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14291, size: 32)
!14291 = !DISubroutineType(types: !14292)
!14292 = !{!105, !14202, !104}
!14293 = !{!14294, !14295, !14296, !14297, !14298}
!14294 = !DILocalVariable(name: "dev", arg: 1, scope: !14286, file: !14199, line: 125, type: !14202)
!14295 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14286, file: !14199, line: 126, type: !14289)
!14296 = !DILocalVariable(name: "context", arg: 3, scope: !14286, file: !14199, line: 127, type: !104)
!14297 = !DILocalVariable(name: "handle_count", scope: !14286, file: !14199, line: 129, type: !111)
!14298 = !DILocalVariable(name: "handles", scope: !14286, file: !14199, line: 130, type: !495)
!14299 = !DILocation(line: 0, scope: !14286)
!14300 = !DILocation(line: 129, column: 2, scope: !14286)
!14301 = !DILocation(line: 129, column: 9, scope: !14286)
!14302 = !DILocation(line: 130, column: 35, scope: !14286)
!14303 = !DILocation(line: 132, column: 33, scope: !14286)
!14304 = !DILocation(line: 132, column: 9, scope: !14286)
!14305 = !DILocation(line: 133, column: 1, scope: !14286)
!14306 = !DILocation(line: 132, column: 2, scope: !14286)
!14307 = distinct !DISubprogram(name: "device_required_handles_get", scope: !481, file: !481, line: 493, type: !14308, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14310)
!14308 = !DISubroutineType(types: !14309)
!14309 = !{!495, !14202, !2715}
!14310 = !{!14311, !14312, !14313, !14314}
!14311 = !DILocalVariable(name: "dev", arg: 1, scope: !14307, file: !481, line: 493, type: !14202)
!14312 = !DILocalVariable(name: "count", arg: 2, scope: !14307, file: !481, line: 493, type: !2715)
!14313 = !DILocalVariable(name: "rv", scope: !14307, file: !481, line: 495, type: !495)
!14314 = !DILocalVariable(name: "i", scope: !14315, file: !481, line: 498, type: !111)
!14315 = distinct !DILexicalBlock(scope: !14316, file: !481, line: 497, column: 18)
!14316 = distinct !DILexicalBlock(scope: !14307, file: !481, line: 497, column: 6)
!14317 = !DILocation(line: 0, scope: !14307)
!14318 = !DILocation(line: 495, column: 35, scope: !14307)
!14319 = !DILocation(line: 497, column: 9, scope: !14316)
!14320 = !DILocation(line: 497, column: 6, scope: !14307)
!14321 = !DILocation(line: 0, scope: !14315)
!14322 = !DILocation(line: 500, column: 11, scope: !14315)
!14323 = !DILocation(line: 500, column: 40, scope: !14315)
!14324 = !DILocation(line: 502, column: 4, scope: !14325)
!14325 = distinct !DILexicalBlock(scope: !14315, file: !481, line: 501, column: 40)
!14326 = distinct !{!14326, !14327, !14328}
!14327 = !DILocation(line: 500, column: 3, scope: !14315)
!14328 = !DILocation(line: 503, column: 3, scope: !14315)
!14329 = !DILocation(line: 504, column: 10, scope: !14315)
!14330 = !DILocation(line: 505, column: 2, scope: !14315)
!14331 = !DILocation(line: 507, column: 2, scope: !14307)
!14332 = distinct !DISubprogram(name: "device_visitor", scope: !14199, file: !14199, line: 106, type: !14333, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14335)
!14333 = !DISubroutineType(types: !14334)
!14334 = !{!105, !495, !111, !14289, !104}
!14335 = !{!14336, !14337, !14338, !14339, !14340, !14342, !14345, !14346}
!14336 = !DILocalVariable(name: "handles", arg: 1, scope: !14332, file: !14199, line: 106, type: !495)
!14337 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14332, file: !14199, line: 107, type: !111)
!14338 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14332, file: !14199, line: 108, type: !14289)
!14339 = !DILocalVariable(name: "context", arg: 4, scope: !14332, file: !14199, line: 109, type: !104)
!14340 = !DILocalVariable(name: "i", scope: !14341, file: !14199, line: 112, type: !111)
!14341 = distinct !DILexicalBlock(scope: !14332, file: !14199, line: 112, column: 2)
!14342 = !DILocalVariable(name: "dh", scope: !14343, file: !14199, line: 113, type: !497)
!14343 = distinct !DILexicalBlock(scope: !14344, file: !14199, line: 112, column: 44)
!14344 = distinct !DILexicalBlock(scope: !14341, file: !14199, line: 112, column: 2)
!14345 = !DILocalVariable(name: "rdev", scope: !14343, file: !14199, line: 114, type: !14202)
!14346 = !DILocalVariable(name: "rc", scope: !14343, file: !14199, line: 115, type: !105)
!14347 = !DILocation(line: 0, scope: !14332)
!14348 = !DILocation(line: 0, scope: !14341)
!14349 = !DILocation(line: 112, column: 23, scope: !14344)
!14350 = !DILocation(line: 112, column: 2, scope: !14341)
!14351 = distinct !{!14351, !14350, !14352}
!14352 = !DILocation(line: 120, column: 2, scope: !14341)
!14353 = !DILocation(line: 113, column: 24, scope: !14343)
!14354 = !DILocation(line: 0, scope: !14343)
!14355 = !DILocation(line: 114, column: 31, scope: !14343)
!14356 = !DILocation(line: 115, column: 12, scope: !14343)
!14357 = !DILocation(line: 117, column: 10, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14343, file: !14199, line: 117, column: 7)
!14359 = !DILocation(line: 112, column: 39, scope: !14344)
!14360 = !DILocation(line: 123, column: 1, scope: !14332)
!14361 = distinct !DISubprogram(name: "device_from_handle", scope: !481, file: !481, line: 439, type: !14362, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14364)
!14362 = !DISubroutineType(types: !14363)
!14363 = !{!14202, !497}
!14364 = !{!14365, !14366, !14367}
!14365 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14361, file: !481, line: 439, type: !497)
!14366 = !DILocalVariable(name: "dev", scope: !14361, file: !481, line: 443, type: !14202)
!14367 = !DILocalVariable(name: "numdev", scope: !14361, file: !481, line: 444, type: !111)
!14368 = !DILocation(line: 0, scope: !14361)
!14369 = !DILocation(line: 446, column: 7, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14361, file: !481, line: 446, column: 6)
!14371 = !DILocation(line: 446, column: 18, scope: !14370)
!14372 = !DILocation(line: 446, column: 23, scope: !14370)
!14373 = !DILocation(line: 450, column: 2, scope: !14361)
!14374 = distinct !DISubprogram(name: "device_supported_foreach", scope: !14199, file: !14199, line: 135, type: !14287, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14375)
!14375 = !{!14376, !14377, !14378, !14379, !14380}
!14376 = !DILocalVariable(name: "dev", arg: 1, scope: !14374, file: !14199, line: 135, type: !14202)
!14377 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14374, file: !14199, line: 136, type: !14289)
!14378 = !DILocalVariable(name: "context", arg: 3, scope: !14374, file: !14199, line: 137, type: !104)
!14379 = !DILocalVariable(name: "handle_count", scope: !14374, file: !14199, line: 139, type: !111)
!14380 = !DILocalVariable(name: "handles", scope: !14374, file: !14199, line: 140, type: !495)
!14381 = !DILocation(line: 0, scope: !14374)
!14382 = !DILocation(line: 139, column: 2, scope: !14374)
!14383 = !DILocation(line: 139, column: 9, scope: !14374)
!14384 = !DILocation(line: 140, column: 35, scope: !14374)
!14385 = !DILocation(line: 142, column: 33, scope: !14374)
!14386 = !DILocation(line: 142, column: 9, scope: !14374)
!14387 = !DILocation(line: 143, column: 1, scope: !14374)
!14388 = !DILocation(line: 142, column: 2, scope: !14374)
!14389 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !481, file: !481, line: 573, type: !14308, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14390)
!14390 = !{!14391, !14392, !14393, !14394, !14395}
!14391 = !DILocalVariable(name: "dev", arg: 1, scope: !14389, file: !481, line: 573, type: !14202)
!14392 = !DILocalVariable(name: "count", arg: 2, scope: !14389, file: !481, line: 573, type: !2715)
!14393 = !DILocalVariable(name: "rv", scope: !14389, file: !481, line: 575, type: !495)
!14394 = !DILocalVariable(name: "region", scope: !14389, file: !481, line: 576, type: !111)
!14395 = !DILocalVariable(name: "i", scope: !14389, file: !481, line: 577, type: !111)
!14396 = !DILocation(line: 0, scope: !14389)
!14397 = !DILocation(line: 575, column: 35, scope: !14389)
!14398 = !DILocation(line: 579, column: 9, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14389, file: !481, line: 579, column: 6)
!14400 = !DILocation(line: 579, column: 6, scope: !14389)
!14401 = !DILocation(line: 582, column: 8, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14403, file: !481, line: 582, column: 8)
!14403 = distinct !DILexicalBlock(scope: !14404, file: !481, line: 581, column: 23)
!14404 = distinct !DILexicalBlock(scope: !14399, file: !481, line: 579, column: 18)
!14405 = !DILocation(line: 582, column: 12, scope: !14402)
!14406 = !DILocation(line: 585, column: 6, scope: !14403)
!14407 = !DILocation(line: 0, scope: !14404)
!14408 = !DILocation(line: 581, column: 17, scope: !14404)
!14409 = !DILocation(line: 581, column: 3, scope: !14404)
!14410 = !DILocation(line: 588, column: 10, scope: !14404)
!14411 = !DILocation(line: 588, column: 16, scope: !14404)
!14412 = !DILocation(line: 589, column: 4, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14404, file: !481, line: 588, column: 39)
!14414 = !DILocation(line: 588, column: 3, scope: !14404)
!14415 = distinct !{!14415, !14414, !14416}
!14416 = !DILocation(line: 590, column: 3, scope: !14404)
!14417 = !DILocation(line: 591, column: 10, scope: !14404)
!14418 = !DILocation(line: 592, column: 2, scope: !14404)
!14419 = !DILocation(line: 575, column: 25, scope: !14389)
!14420 = !DILocation(line: 594, column: 2, scope: !14389)
!14421 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2036, file: !2036, line: 49, type: !14422, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2033, retainedNodes: !397)
!14422 = !DISubroutineType(types: !14423)
!14423 = !{!428}
!14424 = !DILocation(line: 51, column: 10, scope: !14421)
!14425 = !DILocation(line: 51, column: 20, scope: !14421)
!14426 = !DILocation(line: 51, column: 2, scope: !14421)
!14427 = distinct !DISubprogram(name: "coredump", scope: !3212, file: !3212, line: 209, type: !14428, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14576)
!14428 = !DISubroutineType(types: !14429)
!14429 = !{null, !32, !14430, !14474}
!14430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14431, size: 32)
!14431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14432)
!14432 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2845, line: 141, baseType: !14433)
!14433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2845, line: 97, size: 256, elements: !14434)
!14434 = !{!14435}
!14435 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14433, file: !2845, line: 107, baseType: !14436, size: 256)
!14436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2845, line: 98, size: 256, elements: !14437)
!14437 = !{!14438, !14443, !14448, !14453, !14458, !14463, !14468, !14473}
!14438 = !DIDerivedType(tag: DW_TAG_member, scope: !14436, file: !2845, line: 99, baseType: !14439, size: 32)
!14439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14436, file: !2845, line: 99, size: 32, elements: !14440)
!14440 = !{!14441, !14442}
!14441 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14439, file: !2845, line: 99, baseType: !113, size: 32)
!14442 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14439, file: !2845, line: 99, baseType: !113, size: 32)
!14443 = !DIDerivedType(tag: DW_TAG_member, scope: !14436, file: !2845, line: 100, baseType: !14444, size: 32, offset: 32)
!14444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14436, file: !2845, line: 100, size: 32, elements: !14445)
!14445 = !{!14446, !14447}
!14446 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14444, file: !2845, line: 100, baseType: !113, size: 32)
!14447 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14444, file: !2845, line: 100, baseType: !113, size: 32)
!14448 = !DIDerivedType(tag: DW_TAG_member, scope: !14436, file: !2845, line: 101, baseType: !14449, size: 32, offset: 64)
!14449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14436, file: !2845, line: 101, size: 32, elements: !14450)
!14450 = !{!14451, !14452}
!14451 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14449, file: !2845, line: 101, baseType: !113, size: 32)
!14452 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14449, file: !2845, line: 101, baseType: !113, size: 32)
!14453 = !DIDerivedType(tag: DW_TAG_member, scope: !14436, file: !2845, line: 102, baseType: !14454, size: 32, offset: 96)
!14454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14436, file: !2845, line: 102, size: 32, elements: !14455)
!14455 = !{!14456, !14457}
!14456 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14454, file: !2845, line: 102, baseType: !113, size: 32)
!14457 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14454, file: !2845, line: 102, baseType: !113, size: 32)
!14458 = !DIDerivedType(tag: DW_TAG_member, scope: !14436, file: !2845, line: 103, baseType: !14459, size: 32, offset: 128)
!14459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14436, file: !2845, line: 103, size: 32, elements: !14460)
!14460 = !{!14461, !14462}
!14461 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14459, file: !2845, line: 103, baseType: !113, size: 32)
!14462 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14459, file: !2845, line: 103, baseType: !113, size: 32)
!14463 = !DIDerivedType(tag: DW_TAG_member, scope: !14436, file: !2845, line: 104, baseType: !14464, size: 32, offset: 160)
!14464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14436, file: !2845, line: 104, size: 32, elements: !14465)
!14465 = !{!14466, !14467}
!14466 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14464, file: !2845, line: 104, baseType: !113, size: 32)
!14467 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14464, file: !2845, line: 104, baseType: !113, size: 32)
!14468 = !DIDerivedType(tag: DW_TAG_member, scope: !14436, file: !2845, line: 105, baseType: !14469, size: 32, offset: 192)
!14469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14436, file: !2845, line: 105, size: 32, elements: !14470)
!14470 = !{!14471, !14472}
!14471 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14469, file: !2845, line: 105, baseType: !113, size: 32)
!14472 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14469, file: !2845, line: 105, baseType: !113, size: 32)
!14473 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14436, file: !2845, line: 106, baseType: !113, size: 32, offset: 224)
!14474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14475, size: 32)
!14475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !14476)
!14476 = !{!14477, !14535, !14547, !14548, !14549, !14550, !14556, !14571}
!14477 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14475, file: !127, line: 247, baseType: !14478, size: 384)
!14478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !14479)
!14479 = !{!14480, !14504, !14511, !14512, !14513, !14522, !14523, !14524}
!14480 = !DIDerivedType(tag: DW_TAG_member, scope: !14478, file: !127, line: 60, baseType: !14481, size: 64)
!14481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14478, file: !127, line: 60, size: 64, elements: !14482)
!14482 = !{!14483, !14498}
!14483 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14481, file: !127, line: 61, baseType: !14484, size: 64)
!14484 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !14485)
!14485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !14486)
!14486 = !{!14487, !14493}
!14487 = !DIDerivedType(tag: DW_TAG_member, scope: !14485, file: !137, line: 38, baseType: !14488, size: 32)
!14488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14485, file: !137, line: 38, size: 32, elements: !14489)
!14489 = !{!14490, !14492}
!14490 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14488, file: !137, line: 39, baseType: !14491, size: 32)
!14491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14485, size: 32)
!14492 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14488, file: !137, line: 40, baseType: !14491, size: 32)
!14493 = !DIDerivedType(tag: DW_TAG_member, scope: !14485, file: !137, line: 42, baseType: !14494, size: 32, offset: 32)
!14494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14485, file: !137, line: 42, size: 32, elements: !14495)
!14495 = !{!14496, !14497}
!14496 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14494, file: !137, line: 43, baseType: !14491, size: 32)
!14497 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14494, file: !137, line: 44, baseType: !14491, size: 32)
!14498 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14481, file: !127, line: 62, baseType: !14499, size: 64)
!14499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !14500)
!14500 = !{!14501}
!14501 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14499, file: !153, line: 50, baseType: !14502, size: 64)
!14502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14503, size: 64, elements: !158)
!14503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14499, size: 32)
!14504 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14478, file: !127, line: 68, baseType: !14505, size: 32, offset: 64)
!14505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14506, size: 32)
!14506 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !14507)
!14507 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !14508)
!14508 = !{!14509}
!14509 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14507, file: !163, line: 232, baseType: !14510, size: 64)
!14510 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !14485)
!14511 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14478, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!14512 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14478, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!14513 = !DIDerivedType(tag: DW_TAG_member, scope: !14478, file: !127, line: 90, baseType: !14514, size: 16, offset: 112)
!14514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14478, file: !127, line: 90, size: 16, elements: !14515)
!14515 = !{!14516, !14521}
!14516 = !DIDerivedType(tag: DW_TAG_member, scope: !14514, file: !127, line: 91, baseType: !14517, size: 16)
!14517 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14514, file: !127, line: 91, size: 16, elements: !14518)
!14518 = !{!14519, !14520}
!14519 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14517, file: !127, line: 96, baseType: !179, size: 8)
!14520 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14517, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!14521 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14514, file: !127, line: 100, baseType: !183, size: 16)
!14522 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14478, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!14523 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14478, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!14524 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14478, file: !127, line: 131, baseType: !14525, size: 192, offset: 192)
!14525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !14526)
!14526 = !{!14527, !14528, !14534}
!14527 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14525, file: !163, line: 245, baseType: !14484, size: 64)
!14528 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14525, file: !163, line: 246, baseType: !14529, size: 32, offset: 64)
!14529 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !14530)
!14530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14531, size: 32)
!14531 = !DISubroutineType(types: !14532)
!14532 = !{null, !14533}
!14533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14525, size: 32)
!14534 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14525, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!14535 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14475, file: !127, line: 250, baseType: !14536, size: 288, offset: 384)
!14536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !14537)
!14537 = !{!14538, !14539, !14540, !14541, !14542, !14543, !14544, !14545, !14546}
!14538 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14536, file: !200, line: 26, baseType: !113, size: 32)
!14539 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14536, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!14540 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14536, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!14541 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14536, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!14542 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14536, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!14543 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14536, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!14544 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14536, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!14545 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14536, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!14546 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14536, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!14547 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14475, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!14548 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14475, file: !127, line: 256, baseType: !14506, size: 64, offset: 704)
!14549 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14475, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!14550 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14475, file: !127, line: 300, baseType: !14551, size: 96, offset: 800)
!14551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !14552)
!14552 = !{!14553, !14554, !14555}
!14553 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14551, file: !127, line: 153, baseType: !22, size: 32)
!14554 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14551, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!14555 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14551, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!14556 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14475, file: !127, line: 325, baseType: !14557, size: 32, offset: 896)
!14557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14558, size: 32)
!14558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !14559)
!14559 = !{!14560, !14566, !14567}
!14560 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14558, file: !122, line: 5074, baseType: !14561, size: 96)
!14561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !14562)
!14562 = !{!14563, !14564, !14565}
!14563 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14561, file: !226, line: 57, baseType: !229, size: 32)
!14564 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14561, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!14565 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14561, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!14566 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14558, file: !122, line: 5075, baseType: !14506, size: 64, offset: 96)
!14567 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14558, file: !122, line: 5076, baseType: !14568, size: 32, offset: 160)
!14568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !14569)
!14569 = !{!14570}
!14570 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !14568, file: !236, line: 52, baseType: !22, size: 32)
!14571 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14475, file: !127, line: 343, baseType: !14572, size: 64, offset: 928)
!14572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !14573)
!14573 = !{!14574, !14575}
!14574 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14572, file: !200, line: 63, baseType: !113, size: 32)
!14575 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14572, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!14576 = !{!14577, !14578, !14579}
!14577 = !DILocalVariable(name: "reason", arg: 1, scope: !14427, file: !3212, line: 209, type: !32)
!14578 = !DILocalVariable(name: "esf", arg: 2, scope: !14427, file: !3212, line: 209, type: !14430)
!14579 = !DILocalVariable(name: "thread", arg: 3, scope: !14427, file: !3212, line: 210, type: !14474)
!14580 = !DILocation(line: 0, scope: !14427)
!14581 = !DILocation(line: 212, column: 1, scope: !14427)
!14582 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3212, file: !3212, line: 214, type: !14583, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14585)
!14583 = !DISubroutineType(types: !14584)
!14584 = !{null, !22, !22}
!14585 = !{!14586, !14587}
!14586 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14582, file: !3212, line: 214, type: !22)
!14587 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14582, file: !3212, line: 214, type: !22)
!14588 = !DILocation(line: 0, scope: !14582)
!14589 = !DILocation(line: 216, column: 1, scope: !14582)
!14590 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3212, file: !3212, line: 218, type: !14591, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14593)
!14591 = !DISubroutineType(types: !14592)
!14592 = !{null, !432, !111}
!14593 = !{!14594, !14595}
!14594 = !DILocalVariable(name: "buf", arg: 1, scope: !14590, file: !3212, line: 218, type: !432)
!14595 = !DILocalVariable(name: "buflen", arg: 2, scope: !14590, file: !3212, line: 218, type: !111)
!14596 = !DILocation(line: 0, scope: !14590)
!14597 = !DILocation(line: 220, column: 1, scope: !14590)
!14598 = distinct !DISubprogram(name: "coredump_query", scope: !3212, file: !3212, line: 222, type: !14599, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14601)
!14599 = !DISubroutineType(types: !14600)
!14600 = !{!105, !3211, !104}
!14601 = !{!14602, !14603}
!14602 = !DILocalVariable(name: "query_id", arg: 1, scope: !14598, file: !3212, line: 222, type: !3211)
!14603 = !DILocalVariable(name: "arg", arg: 2, scope: !14598, file: !3212, line: 222, type: !104)
!14604 = !DILocation(line: 0, scope: !14598)
!14605 = !DILocation(line: 224, column: 2, scope: !14598)
!14606 = distinct !DISubprogram(name: "coredump_cmd", scope: !3212, file: !3212, line: 227, type: !14607, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14609)
!14607 = !DISubroutineType(types: !14608)
!14608 = !{!105, !3218, !104}
!14609 = !{!14610, !14611}
!14610 = !DILocalVariable(name: "query_id", arg: 1, scope: !14606, file: !3212, line: 227, type: !3218)
!14611 = !DILocalVariable(name: "arg", arg: 2, scope: !14606, file: !3212, line: 227, type: !104)
!14612 = !DILocation(line: 0, scope: !14606)
!14613 = !DILocation(line: 229, column: 2, scope: !14606)
!14614 = distinct !DISubprogram(name: "arch_system_halt", scope: !14615, file: !14615, line: 23, type: !7543, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14616)
!14615 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14616 = !{!14617}
!14617 = !DILocalVariable(name: "reason", arg: 1, scope: !14614, file: !14615, line: 23, type: !32)
!14618 = !DILocation(line: 0, scope: !14614)
!14619 = !DILocation(line: 55, column: 2, scope: !14620, inlinedAt: !14624)
!14620 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7532, file: !7532, line: 42, type: !7533, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14621)
!14621 = !{!14622, !14623}
!14622 = !DILocalVariable(name: "key", scope: !14620, file: !7532, line: 44, type: !32)
!14623 = !DILocalVariable(name: "tmp", scope: !14620, file: !7532, line: 53, type: !32)
!14624 = distinct !DILocation(line: 31, column: 8, scope: !14614)
!14625 = !{i64 2283634}
!14626 = !DILocation(line: 0, scope: !14620, inlinedAt: !14624)
!14627 = !DILocation(line: 32, column: 2, scope: !14614)
!14628 = !DILocation(line: 32, column: 2, scope: !14629)
!14629 = distinct !DILexicalBlock(scope: !14630, file: !14615, line: 32, column: 2)
!14630 = distinct !DILexicalBlock(scope: !14614, file: !14615, line: 32, column: 2)
!14631 = distinct !{!14631, !14632, !14633}
!14632 = !DILocation(line: 32, column: 2, scope: !14630)
!14633 = !DILocation(line: 34, column: 2, scope: !14630)
!14634 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14615, file: !14615, line: 39, type: !14635, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14637)
!14635 = !DISubroutineType(types: !14636)
!14636 = !{null, !32, !14430}
!14637 = !{!14638, !14639}
!14638 = !DILocalVariable(name: "reason", arg: 1, scope: !14634, file: !14615, line: 39, type: !32)
!14639 = !DILocalVariable(name: "esf", arg: 2, scope: !14634, file: !14615, line: 40, type: !14430)
!14640 = !DILocation(line: 0, scope: !14634)
!14641 = !DILocation(line: 45, column: 2, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14643, file: !14615, line: 45, column: 2)
!14643 = distinct !DILexicalBlock(scope: !14644, file: !14615, line: 45, column: 2)
!14644 = distinct !DILexicalBlock(scope: !14645, file: !14615, line: 45, column: 2)
!14645 = distinct !DILexicalBlock(scope: !14634, file: !14615, line: 45, column: 2)
!14646 = !DILocation(line: 46, column: 2, scope: !14634)
!14647 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14615, file: !14615, line: 81, type: !7543, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14648)
!14648 = !{!14649}
!14649 = !DILocalVariable(name: "reason", arg: 1, scope: !14647, file: !14615, line: 81, type: !32)
!14650 = !DILocation(line: 0, scope: !14647)
!14651 = !DILocation(line: 83, column: 2, scope: !14647)
!14652 = distinct !DISubprogram(name: "z_fatal_error", scope: !14615, file: !14615, line: 96, type: !14635, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14653)
!14653 = !{!14654, !14655, !14656, !14657}
!14654 = !DILocalVariable(name: "reason", arg: 1, scope: !14652, file: !14615, line: 96, type: !32)
!14655 = !DILocalVariable(name: "esf", arg: 2, scope: !14652, file: !14615, line: 96, type: !14430)
!14656 = !DILocalVariable(name: "key", scope: !14652, file: !14615, line: 102, type: !32)
!14657 = !DILocalVariable(name: "thread", scope: !14652, file: !14615, line: 103, type: !14474)
!14658 = !DILocation(line: 0, scope: !14652)
!14659 = !DILocation(line: 55, column: 2, scope: !14620, inlinedAt: !14660)
!14660 = distinct !DILocation(line: 102, column: 21, scope: !14652)
!14661 = !DILocation(line: 0, scope: !14620, inlinedAt: !14660)
!14662 = !DILocation(line: 104, column: 4, scope: !14652)
!14663 = !DILocation(line: 109, column: 2, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14665, file: !14615, line: 109, column: 2)
!14665 = distinct !DILexicalBlock(scope: !14666, file: !14615, line: 109, column: 2)
!14666 = distinct !DILexicalBlock(scope: !14667, file: !14615, line: 109, column: 2)
!14667 = distinct !DILexicalBlock(scope: !14652, file: !14615, line: 109, column: 2)
!14668 = !DILocation(line: 119, column: 11, scope: !14669)
!14669 = distinct !DILexicalBlock(scope: !14652, file: !14615, line: 119, column: 6)
!14670 = !DILocation(line: 119, column: 20, scope: !14669)
!14671 = !DILocalVariable(name: "esf", arg: 1, scope: !14672, file: !8897, line: 71, type: !14430)
!14672 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8897, file: !8897, line: 71, type: !14673, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14675)
!14673 = !DISubroutineType(types: !14674)
!14674 = !{!492, !14430}
!14675 = !{!14671}
!14676 = !DILocation(line: 0, scope: !14672, inlinedAt: !14677)
!14677 = distinct !DILocation(line: 119, column: 23, scope: !14669)
!14678 = !DILocation(line: 73, column: 21, scope: !14672, inlinedAt: !14677)
!14679 = !DILocation(line: 73, column: 26, scope: !14672, inlinedAt: !14677)
!14680 = !DILocation(line: 73, column: 9, scope: !14672, inlinedAt: !14677)
!14681 = !DILocation(line: 119, column: 6, scope: !14652)
!14682 = !DILocation(line: 120, column: 3, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14684, file: !14615, line: 120, column: 3)
!14684 = distinct !DILexicalBlock(scope: !14685, file: !14615, line: 120, column: 3)
!14685 = distinct !DILexicalBlock(scope: !14686, file: !14615, line: 120, column: 3)
!14686 = distinct !DILexicalBlock(scope: !14687, file: !14615, line: 120, column: 3)
!14687 = distinct !DILexicalBlock(scope: !14669, file: !14615, line: 119, column: 57)
!14688 = !DILocation(line: 121, column: 2, scope: !14687)
!14689 = !DILocation(line: 124, column: 2, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14691, file: !14615, line: 124, column: 2)
!14691 = distinct !DILexicalBlock(scope: !14692, file: !14615, line: 124, column: 2)
!14692 = distinct !DILexicalBlock(scope: !14693, file: !14615, line: 124, column: 2)
!14693 = distinct !DILexicalBlock(scope: !14652, file: !14615, line: 124, column: 2)
!14694 = !DILocation(line: 131, column: 2, scope: !14652)
!14695 = !DILocation(line: 147, column: 3, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !14697, file: !14615, line: 147, column: 3)
!14697 = distinct !DILexicalBlock(scope: !14698, file: !14615, line: 147, column: 3)
!14698 = distinct !DILexicalBlock(scope: !14699, file: !14615, line: 146, column: 32)
!14699 = distinct !DILexicalBlock(scope: !14652, file: !14615, line: 146, column: 6)
!14700 = !DILocation(line: 147, column: 3, scope: !14697)
!14701 = !DILocation(line: 147, column: 3, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14696, file: !14615, line: 147, column: 3)
!14703 = !DILocalVariable(name: "key", arg: 1, scope: !14704, file: !7532, line: 84, type: !32)
!14704 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7532, file: !7532, line: 84, type: !7543, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14705)
!14705 = !{!14703}
!14706 = !DILocation(line: 0, scope: !14704, inlinedAt: !14707)
!14707 = distinct !DILocation(line: 186, column: 2, scope: !14652)
!14708 = !DILocation(line: 95, column: 2, scope: !14704, inlinedAt: !14707)
!14709 = !{i64 2284451}
!14710 = !DILocation(line: 189, column: 3, scope: !14711)
!14711 = distinct !DILexicalBlock(scope: !14712, file: !14615, line: 188, column: 41)
!14712 = distinct !DILexicalBlock(scope: !14652, file: !14615, line: 188, column: 6)
!14713 = !DILocation(line: 191, column: 1, scope: !14652)
!14714 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !14715, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !397)
!14715 = !DISubroutineType(types: !14716)
!14716 = !{!14717}
!14717 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !14474)
!14718 = !DILocation(line: 535, column: 9, scope: !14714)
!14719 = !DILocation(line: 535, column: 2, scope: !14714)
!14720 = distinct !DISubprogram(name: "reason_to_str", scope: !14615, file: !14615, line: 62, type: !14721, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14723)
!14721 = !DISubroutineType(types: !14722)
!14722 = !{!269, !32}
!14723 = !{!14724}
!14724 = !DILocalVariable(name: "reason", arg: 1, scope: !14720, file: !14615, line: 62, type: !32)
!14725 = !DILocation(line: 0, scope: !14720)
!14726 = !DILocation(line: 64, column: 2, scope: !14720)
!14727 = !DILocation(line: 0, scope: !14728)
!14728 = distinct !DILexicalBlock(scope: !14720, file: !14615, line: 64, column: 18)
!14729 = !DILocation(line: 78, column: 1, scope: !14720)
!14730 = distinct !DISubprogram(name: "thread_name_get", scope: !14615, file: !14615, line: 51, type: !14731, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14733)
!14731 = !DISubroutineType(types: !14732)
!14732 = !{!269, !14474}
!14733 = !{!14734, !14735}
!14734 = !DILocalVariable(name: "thread", arg: 1, scope: !14730, file: !14615, line: 51, type: !14474)
!14735 = !DILocalVariable(name: "thread_name", scope: !14730, file: !14615, line: 53, type: !269)
!14736 = !DILocation(line: 0, scope: !14730)
!14737 = !DILocation(line: 53, column: 36, scope: !14730)
!14738 = !DILocation(line: 53, column: 28, scope: !14730)
!14739 = !DILocation(line: 53, column: 47, scope: !14730)
!14740 = !DILocation(line: 55, column: 19, scope: !14741)
!14741 = distinct !DILexicalBlock(scope: !14730, file: !14615, line: 55, column: 6)
!14742 = !DILocation(line: 55, column: 28, scope: !14741)
!14743 = !DILocation(line: 55, column: 32, scope: !14741)
!14744 = !DILocation(line: 55, column: 47, scope: !14741)
!14745 = !DILocation(line: 55, column: 6, scope: !14730)
!14746 = !DILocation(line: 57, column: 2, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14741, file: !14615, line: 55, column: 57)
!14748 = !DILocation(line: 59, column: 2, scope: !14730)
!14749 = distinct !DISubprogram(name: "k_thread_abort", scope: !3497, file: !3497, line: 188, type: !14750, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14752)
!14750 = !DISubroutineType(types: !14751)
!14751 = !{null, !14717}
!14752 = !{!14753}
!14753 = !DILocalVariable(name: "thread", arg: 1, scope: !14749, file: !3497, line: 188, type: !14717)
!14754 = !DILocation(line: 0, scope: !14749)
!14755 = !DILocation(line: 197, column: 2, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14749, file: !3497, line: 197, column: 2)
!14757 = !{i64 2155069795}
!14758 = !DILocation(line: 198, column: 2, scope: !14749)
!14759 = !DILocation(line: 199, column: 1, scope: !14749)
!14760 = distinct !DISubprogram(name: "z_current_get", scope: !3497, file: !3497, line: 173, type: !14715, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !397)
!14761 = !DILocation(line: 180, column: 2, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14760, file: !3497, line: 180, column: 2)
!14763 = !{i64 2155069727}
!14764 = !DILocation(line: 181, column: 9, scope: !14760)
!14765 = !DILocation(line: 181, column: 2, scope: !14760)
!14766 = distinct !DISubprogram(name: "z_early_memset", scope: !2044, file: !2044, line: 108, type: !14767, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14769)
!14767 = !DISubroutineType(types: !14768)
!14768 = !{null, !104, !105, !111}
!14769 = !{!14770, !14771, !14772}
!14770 = !DILocalVariable(name: "dst", arg: 1, scope: !14766, file: !2044, line: 108, type: !104)
!14771 = !DILocalVariable(name: "c", arg: 2, scope: !14766, file: !2044, line: 108, type: !105)
!14772 = !DILocalVariable(name: "n", arg: 3, scope: !14766, file: !2044, line: 108, type: !111)
!14773 = !DILocation(line: 0, scope: !14766)
!14774 = !DILocation(line: 110, column: 9, scope: !14766)
!14775 = !DILocation(line: 111, column: 1, scope: !14766)
!14776 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2044, file: !2044, line: 121, type: !14777, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14779)
!14777 = !DISubroutineType(types: !14778)
!14778 = !{null, !104, !13, !111}
!14779 = !{!14780, !14781, !14782}
!14780 = !DILocalVariable(name: "dst", arg: 1, scope: !14776, file: !2044, line: 121, type: !104)
!14781 = !DILocalVariable(name: "src", arg: 2, scope: !14776, file: !2044, line: 121, type: !13)
!14782 = !DILocalVariable(name: "n", arg: 3, scope: !14776, file: !2044, line: 121, type: !111)
!14783 = !DILocation(line: 0, scope: !14776)
!14784 = !DILocation(line: 123, column: 9, scope: !14776)
!14785 = !DILocation(line: 124, column: 1, scope: !14776)
!14786 = distinct !DISubprogram(name: "z_bss_zero", scope: !2044, file: !2044, line: 132, type: !266, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !397)
!14787 = !DILocation(line: 143, column: 2, scope: !14786)
!14788 = !DILocation(line: 168, column: 1, scope: !14786)
!14789 = distinct !DISubprogram(name: "z_init_cpu", scope: !2044, file: !2044, line: 372, type: !9784, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14790)
!14790 = !{!14791}
!14791 = !DILocalVariable(name: "id", arg: 1, scope: !14789, file: !2044, line: 372, type: !105)
!14792 = !DILocation(line: 0, scope: !14789)
!14793 = !DILocation(line: 374, column: 2, scope: !14789)
!14794 = !DILocation(line: 375, column: 34, scope: !14789)
!14795 = !DILocation(line: 375, column: 19, scope: !14789)
!14796 = !DILocation(line: 375, column: 31, scope: !14789)
!14797 = !DILocation(line: 376, column: 24, scope: !14789)
!14798 = !DILocation(line: 376, column: 19, scope: !14789)
!14799 = !DILocation(line: 376, column: 22, scope: !14789)
!14800 = !DILocation(line: 378, column: 26, scope: !14789)
!14801 = !DILocation(line: 378, column: 4, scope: !14789)
!14802 = !DILocation(line: 378, column: 50, scope: !14789)
!14803 = !DILocation(line: 377, column: 19, scope: !14789)
!14804 = !DILocation(line: 377, column: 29, scope: !14789)
!14805 = !DILocation(line: 384, column: 1, scope: !14789)
!14806 = distinct !DISubprogram(name: "init_idle_thread", scope: !2044, file: !2044, line: 343, type: !9784, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14807)
!14807 = !{!14808, !14809, !14810, !14813}
!14808 = !DILocalVariable(name: "i", arg: 1, scope: !14806, file: !2044, line: 343, type: !105)
!14809 = !DILocalVariable(name: "thread", scope: !14806, file: !2044, line: 345, type: !2136)
!14810 = !DILocalVariable(name: "stack", scope: !14806, file: !2044, line: 346, type: !14811)
!14811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14812, size: 32)
!14812 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !2253)
!14813 = !DILocalVariable(name: "tname", scope: !14806, file: !2044, line: 358, type: !102)
!14814 = !DILocation(line: 0, scope: !14806)
!14815 = !DILocation(line: 345, column: 29, scope: !14806)
!14816 = !DILocation(line: 346, column: 28, scope: !14806)
!14817 = !DILocation(line: 362, column: 37, scope: !14806)
!14818 = !DILocation(line: 362, column: 36, scope: !14806)
!14819 = !DILocation(line: 361, column: 2, scope: !14806)
!14820 = !DILocation(line: 365, column: 2, scope: !14806)
!14821 = !DILocation(line: 370, column: 1, scope: !14806)
!14822 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !14823, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14825)
!14823 = !DISubroutineType(types: !14824)
!14824 = !{!102, !14811}
!14825 = !{!14826}
!14826 = !DILocalVariable(name: "sym", arg: 1, scope: !14822, file: !249, line: 331, type: !14811)
!14827 = !DILocation(line: 0, scope: !14822)
!14828 = !DILocation(line: 333, column: 21, scope: !14822)
!14829 = !DILocation(line: 333, column: 2, scope: !14822)
!14830 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14831, file: !14831, line: 155, type: !14832, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14834)
!14831 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14832 = !DISubroutineType(types: !14833)
!14833 = !{null, !2136}
!14834 = !{!14835}
!14835 = !DILocalVariable(name: "thread", arg: 1, scope: !14830, file: !14831, line: 155, type: !2136)
!14836 = !DILocation(line: 0, scope: !14830)
!14837 = !DILocation(line: 157, column: 15, scope: !14830)
!14838 = !DILocation(line: 157, column: 28, scope: !14830)
!14839 = !DILocation(line: 158, column: 1, scope: !14830)
!14840 = distinct !DISubprogram(name: "z_early_boot_rand_get", scope: !2044, file: !2044, line: 451, type: !14591, scopeLine: 452, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14841)
!14841 = !{!14842, !14843}
!14842 = !DILocalVariable(name: "buf", arg: 1, scope: !14840, file: !2044, line: 451, type: !432)
!14843 = !DILocalVariable(name: "length", arg: 2, scope: !14840, file: !2044, line: 451, type: !111)
!14844 = !DILocation(line: 0, scope: !14840)
!14845 = !DILocation(line: 485, column: 2, scope: !14840)
!14846 = !DILocation(line: 486, column: 1, scope: !14840)
!14847 = distinct !DISubprogram(name: "sys_rand_get", scope: !14848, file: !14848, line: 46, type: !14849, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14851)
!14848 = !DIFile(filename: "zephyr/include/generated/syscalls/rand32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/metairq_dispatch")
!14849 = !DISubroutineType(types: !14850)
!14850 = !{null, !104, !111}
!14851 = !{!14852, !14853}
!14852 = !DILocalVariable(name: "dst", arg: 1, scope: !14847, file: !14848, line: 46, type: !104)
!14853 = !DILocalVariable(name: "len", arg: 2, scope: !14847, file: !14848, line: 46, type: !111)
!14854 = !DILocation(line: 0, scope: !14847)
!14855 = !DILocation(line: 56, column: 2, scope: !14856)
!14856 = distinct !DILexicalBlock(scope: !14847, file: !14848, line: 56, column: 2)
!14857 = !{i64 2155287524}
!14858 = !DILocation(line: 57, column: 2, scope: !14847)
!14859 = !DILocation(line: 58, column: 1, scope: !14847)
!14860 = !DISubprogram(name: "z_impl_sys_rand_get", scope: !14848, file: !14848, line: 43, type: !14849, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14861 = distinct !DISubprogram(name: "z_cstart", scope: !2044, file: !2044, line: 501, type: !266, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14862)
!14862 = !{!14863}
!14863 = !DILocalVariable(name: "dummy_thread", scope: !14861, file: !2044, line: 518, type: !2137)
!14864 = !DILocation(line: 507, column: 2, scope: !14861)
!14865 = !DILocation(line: 43, column: 14, scope: !14866, inlinedAt: !14870)
!14866 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14867, file: !14867, line: 40, type: !266, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14868)
!14867 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14868 = !{!14869}
!14869 = !DILocalVariable(name: "msp", scope: !14866, file: !14867, line: 42, type: !113)
!14870 = distinct !DILocation(line: 44, column: 2, scope: !14871, inlinedAt: !14873)
!14871 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14872, file: !14872, line: 42, type: !266, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !397)
!14872 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14873 = distinct !DILocation(line: 510, column: 2, scope: !14861)
!14874 = !DILocation(line: 43, column: 3, scope: !14866, inlinedAt: !14870)
!14875 = !DILocation(line: 43, column: 60, scope: !14866, inlinedAt: !14870)
!14876 = !DILocation(line: 0, scope: !14866, inlinedAt: !14870)
!14877 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14878, file: !7850, line: 1153, type: !113)
!14878 = distinct !DISubprogram(name: "__set_MSP", scope: !7850, file: !7850, line: 1153, type: !7945, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14879)
!14879 = !{!14877}
!14880 = !DILocation(line: 0, scope: !14878, inlinedAt: !14881)
!14881 = distinct !DILocation(line: 46, column: 2, scope: !14866, inlinedAt: !14870)
!14882 = !DILocation(line: 1155, column: 3, scope: !14878, inlinedAt: !14881)
!14883 = !{i64 3749573}
!14884 = !DILocation(line: 62, column: 11, scope: !14866, inlinedAt: !14870)
!14885 = !DILocation(line: 102, column: 2, scope: !14886, inlinedAt: !14887)
!14886 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8897, file: !8897, line: 97, type: !266, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !397)
!14887 = distinct !DILocation(line: 45, column: 2, scope: !14871, inlinedAt: !14873)
!14888 = !DILocation(line: 108, column: 2, scope: !14886, inlinedAt: !14887)
!14889 = !DILocation(line: 112, column: 2, scope: !14886, inlinedAt: !14887)
!14890 = !DILocation(line: 113, column: 2, scope: !14886, inlinedAt: !14887)
!14891 = !DILocation(line: 114, column: 2, scope: !14886, inlinedAt: !14887)
!14892 = !DILocation(line: 116, column: 2, scope: !14886, inlinedAt: !14887)
!14893 = !DILocation(line: 123, column: 13, scope: !14886, inlinedAt: !14887)
!14894 = !DILocation(line: 46, column: 2, scope: !14871, inlinedAt: !14873)
!14895 = !DILocation(line: 47, column: 2, scope: !14871, inlinedAt: !14873)
!14896 = !DILocation(line: 174, column: 12, scope: !14897, inlinedAt: !14898)
!14897 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8897, file: !8897, line: 169, type: !266, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !397)
!14898 = distinct !DILocation(line: 48, column: 2, scope: !14871, inlinedAt: !14873)
!14899 = !DILocation(line: 179, column: 12, scope: !14897, inlinedAt: !14898)
!14900 = !DILocation(line: 50, column: 2, scope: !14871, inlinedAt: !14873)
!14901 = !DILocation(line: 57, column: 2, scope: !14871, inlinedAt: !14873)
!14902 = !DILocation(line: 518, column: 2, scope: !14861)
!14903 = !DILocation(line: 518, column: 18, scope: !14861)
!14904 = !DILocation(line: 520, column: 2, scope: !14861)
!14905 = !DILocation(line: 523, column: 2, scope: !14861)
!14906 = !DILocation(line: 526, column: 2, scope: !14861)
!14907 = !DILocation(line: 527, column: 2, scope: !14861)
!14908 = !DILocation(line: 543, column: 24, scope: !14861)
!14909 = !DILocation(line: 543, column: 2, scope: !14861)
!14910 = !DILocation(line: 0, scope: !2276)
!14911 = !DILocation(line: 246, column: 15, scope: !2294)
!14912 = !DILocation(line: 246, column: 36, scope: !2293)
!14913 = !DILocation(line: 246, column: 2, scope: !2294)
!14914 = !DILocation(line: 247, column: 37, scope: !2292)
!14915 = !DILocation(line: 0, scope: !2292)
!14916 = !DILocation(line: 248, column: 19, scope: !2292)
!14917 = !DILocation(line: 248, column: 12, scope: !2292)
!14918 = !DILocation(line: 250, column: 11, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !2292, file: !2044, line: 250, column: 7)
!14920 = !DILocation(line: 250, column: 7, scope: !2292)
!14921 = !DILocation(line: 254, column: 11, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14923, file: !2044, line: 254, column: 8)
!14923 = distinct !DILexicalBlock(scope: !14919, file: !2044, line: 250, column: 20)
!14924 = !DILocation(line: 254, column: 8, scope: !14923)
!14925 = !DILocation(line: 255, column: 9, scope: !14926)
!14926 = distinct !DILexicalBlock(scope: !14922, file: !2044, line: 254, column: 17)
!14927 = !DILocation(line: 258, column: 9, scope: !14926)
!14928 = !DILocation(line: 261, column: 28, scope: !14926)
!14929 = !DILocation(line: 261, column: 10, scope: !14926)
!14930 = !DILocation(line: 261, column: 17, scope: !14926)
!14931 = !DILocation(line: 261, column: 26, scope: !14926)
!14932 = !DILocation(line: 262, column: 4, scope: !14926)
!14933 = !DILocation(line: 263, column: 9, scope: !14923)
!14934 = !DILocation(line: 263, column: 16, scope: !14923)
!14935 = !DILocation(line: 263, column: 28, scope: !14923)
!14936 = !DILocation(line: 264, column: 3, scope: !14923)
!14937 = !DILocation(line: 246, column: 60, scope: !2293)
!14938 = distinct !{!14938, !14913, !14939}
!14939 = !DILocation(line: 265, column: 2, scope: !2294)
!14940 = !DILocation(line: 266, column: 1, scope: !2276)
!14941 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7890, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14942)
!14942 = !{!14943, !14944}
!14943 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14941, file: !679, line: 1814, type: !941)
!14944 = !DILocalVariable(name: "priority", arg: 2, scope: !14941, file: !679, line: 1814, type: !113)
!14945 = !DILocation(line: 0, scope: !14941)
!14946 = !DILocation(line: 1822, column: 48, scope: !14947)
!14947 = distinct !DILexicalBlock(scope: !14948, file: !679, line: 1821, column: 3)
!14948 = distinct !DILexicalBlock(scope: !14941, file: !679, line: 1816, column: 7)
!14949 = !DILocation(line: 1822, column: 32, scope: !14947)
!14950 = !DILocation(line: 1822, column: 40, scope: !14947)
!14951 = !DILocation(line: 1822, column: 5, scope: !14947)
!14952 = !DILocation(line: 1822, column: 46, scope: !14947)
!14953 = !DILocation(line: 1824, column: 1, scope: !14941)
!14954 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14872, file: !14872, line: 32, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14955 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14956, file: !14956, line: 215, type: !14832, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14957)
!14956 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14957 = !{!14958}
!14958 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14955, file: !14956, line: 215, type: !2136)
!14959 = !DILocation(line: 0, scope: !14955)
!14960 = !DILocation(line: 217, column: 21, scope: !14955)
!14961 = !DILocation(line: 217, column: 34, scope: !14955)
!14962 = !DILocation(line: 221, column: 21, scope: !14955)
!14963 = !DILocation(line: 221, column: 34, scope: !14955)
!14964 = !DILocation(line: 223, column: 27, scope: !14955)
!14965 = !DILocation(line: 223, column: 33, scope: !14955)
!14966 = !DILocation(line: 224, column: 27, scope: !14955)
!14967 = !DILocation(line: 224, column: 32, scope: !14955)
!14968 = !DILocation(line: 232, column: 16, scope: !14955)
!14969 = !DILocation(line: 232, column: 30, scope: !14955)
!14970 = !DILocation(line: 239, column: 24, scope: !14955)
!14971 = !DILocation(line: 240, column: 1, scope: !14955)
!14972 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2044, file: !2044, line: 399, type: !14973, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14975)
!14973 = !DISubroutineType(types: !14974)
!14974 = !{!102}
!14975 = !{!14976}
!14976 = !DILocalVariable(name: "stack_ptr", scope: !14972, file: !2044, line: 401, type: !102)
!14977 = !DILocation(line: 404, column: 2, scope: !14972)
!14978 = !DILocation(line: 416, column: 24, scope: !14972)
!14979 = !DILocation(line: 418, column: 14, scope: !14972)
!14980 = !DILocation(line: 0, scope: !14972)
!14981 = !DILocation(line: 423, column: 2, scope: !14972)
!14982 = !DILocation(line: 424, column: 2, scope: !14972)
!14983 = !DILocation(line: 426, column: 2, scope: !14972)
!14984 = !DILocation(line: 428, column: 2, scope: !14972)
!14985 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2044, file: !2044, line: 432, type: !14986, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14988)
!14986 = !DISubroutineType(types: !14987)
!14987 = !{null, !102}
!14988 = !{!14989}
!14989 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14985, file: !2044, line: 432, type: !102)
!14990 = !DILocation(line: 0, scope: !14985)
!14991 = !DILocation(line: 435, column: 2, scope: !14985)
!14992 = !DILocation(line: 445, column: 2, scope: !14985)
!14993 = distinct !DISubprogram(name: "bg_thread_main", scope: !2044, file: !2044, line: 277, type: !256, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !14994)
!14994 = !{!14995, !14996, !14997}
!14995 = !DILocalVariable(name: "unused1", arg: 1, scope: !14993, file: !2044, line: 277, type: !104)
!14996 = !DILocalVariable(name: "unused2", arg: 2, scope: !14993, file: !2044, line: 277, type: !104)
!14997 = !DILocalVariable(name: "unused3", arg: 3, scope: !14993, file: !2044, line: 277, type: !104)
!14998 = !DILocation(line: 0, scope: !14993)
!14999 = !DILocation(line: 291, column: 20, scope: !14993)
!15000 = !DILocation(line: 293, column: 2, scope: !14993)
!15001 = !DILocation(line: 297, column: 2, scope: !14993)
!15002 = !DILocation(line: 305, column: 2, scope: !14993)
!15003 = !DILocation(line: 307, column: 2, scope: !14993)
!15004 = !DILocation(line: 330, column: 8, scope: !14993)
!15005 = !DILocation(line: 333, column: 34, scope: !14993)
!15006 = !DILocation(line: 339, column: 1, scope: !14993)
!15007 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2307, file: !2307, line: 45, type: !15008, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15016)
!15008 = !DISubroutineType(types: !15009)
!15009 = !{null, !15010, !104}
!15010 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !122, line: 103, baseType: !15011)
!15011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15012, size: 32)
!15012 = !DISubroutineType(types: !15013)
!15013 = !{null, !15014, !104}
!15014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15015, size: 32)
!15015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2312)
!15016 = !{!15017, !15018}
!15017 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15007, file: !2307, line: 45, type: !15010)
!15018 = !DILocalVariable(name: "user_data", arg: 2, scope: !15007, file: !2307, line: 45, type: !104)
!15019 = !DILocation(line: 0, scope: !15007)
!15020 = !DILocation(line: 71, column: 1, scope: !15007)
!15021 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2307, file: !2307, line: 73, type: !15008, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15022)
!15022 = !{!15023, !15024}
!15023 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15021, file: !2307, line: 73, type: !15010)
!15024 = !DILocalVariable(name: "user_data", arg: 2, scope: !15021, file: !2307, line: 73, type: !104)
!15025 = !DILocation(line: 0, scope: !15021)
!15026 = !DILocation(line: 95, column: 1, scope: !15021)
!15027 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2307, file: !2307, line: 97, type: !8898, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !397)
!15028 = !DILocation(line: 1031, column: 3, scope: !15029, inlinedAt: !15032)
!15029 = distinct !DISubprogram(name: "__get_IPSR", scope: !7850, file: !7850, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15030)
!15030 = !{!15031}
!15031 = !DILocalVariable(name: "result", scope: !15029, file: !7850, line: 1029, type: !113)
!15032 = distinct !DILocation(line: 48, column: 10, scope: !15033, inlinedAt: !15034)
!15033 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8897, file: !8897, line: 46, type: !8898, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !397)
!15034 = distinct !DILocation(line: 99, column: 9, scope: !15027)
!15035 = !{i64 3755224}
!15036 = !DILocation(line: 0, scope: !15029, inlinedAt: !15032)
!15037 = !DILocation(line: 48, column: 9, scope: !15033, inlinedAt: !15034)
!15038 = !DILocation(line: 99, column: 2, scope: !15027)
!15039 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2307, file: !2307, line: 106, type: !266, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !397)
!15040 = !DILocation(line: 108, column: 2, scope: !15039)
!15041 = !DILocation(line: 108, column: 17, scope: !15039)
!15042 = !DILocation(line: 108, column: 30, scope: !15039)
!15043 = !DILocation(line: 109, column: 1, scope: !15039)
!15044 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2307, file: !2307, line: 116, type: !266, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !397)
!15045 = !DILocation(line: 118, column: 2, scope: !15044)
!15046 = !DILocation(line: 118, column: 17, scope: !15044)
!15047 = !DILocation(line: 118, column: 30, scope: !15044)
!15048 = !DILocation(line: 119, column: 1, scope: !15044)
!15049 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2307, file: !2307, line: 126, type: !8898, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !397)
!15050 = !DILocation(line: 128, column: 10, scope: !15049)
!15051 = !DILocation(line: 128, column: 25, scope: !15049)
!15052 = !DILocation(line: 128, column: 38, scope: !15049)
!15053 = !DILocation(line: 128, column: 53, scope: !15049)
!15054 = !DILocation(line: 128, column: 2, scope: !15049)
!15055 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2307, file: !2307, line: 187, type: !15056, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15058)
!15056 = !DISubroutineType(types: !15057)
!15057 = !{!105, !2311, !269}
!15058 = !{!15059, !15060}
!15059 = !DILocalVariable(name: "thread", arg: 1, scope: !15055, file: !2307, line: 187, type: !2311)
!15060 = !DILocalVariable(name: "value", arg: 2, scope: !15055, file: !2307, line: 187, type: !269)
!15061 = !DILocation(line: 0, scope: !15055)
!15062 = !DILocation(line: 206, column: 2, scope: !15055)
!15063 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2307, file: !2307, line: 238, type: !15064, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15066)
!15064 = !DISubroutineType(types: !15065)
!15065 = !{!269, !2311}
!15066 = !{!15067}
!15067 = !DILocalVariable(name: "thread", arg: 1, scope: !15063, file: !2307, line: 238, type: !2311)
!15068 = !DILocation(line: 0, scope: !15063)
!15069 = !DILocation(line: 244, column: 2, scope: !15063)
!15070 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2307, file: !2307, line: 248, type: !15071, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15073)
!15071 = !DISubroutineType(types: !15072)
!15072 = !{!105, !2310, !102, !111}
!15073 = !{!15074, !15075, !15076}
!15074 = !DILocalVariable(name: "thread", arg: 1, scope: !15070, file: !2307, line: 248, type: !2310)
!15075 = !DILocalVariable(name: "buf", arg: 2, scope: !15070, file: !2307, line: 248, type: !102)
!15076 = !DILocalVariable(name: "size", arg: 3, scope: !15070, file: !2307, line: 248, type: !111)
!15077 = !DILocation(line: 0, scope: !15070)
!15078 = !DILocation(line: 257, column: 2, scope: !15070)
!15079 = !DILocation(line: 0, scope: !2306)
!15080 = !DILocation(line: 281, column: 11, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !2306, file: !2307, line: 281, column: 6)
!15082 = !DILocation(line: 281, column: 20, scope: !15081)
!15083 = !DILocation(line: 275, column: 45, scope: !2306)
!15084 = !DILocation(line: 285, column: 10, scope: !2306)
!15085 = !DILocation(line: 0, scope: !2429)
!15086 = !DILocation(line: 293, column: 39, scope: !15087)
!15087 = distinct !DILexicalBlock(scope: !2429, file: !2307, line: 293, column: 2)
!15088 = !DILocation(line: 293, column: 2, scope: !2429)
!15089 = !DILocation(line: 273, column: 14, scope: !2306)
!15090 = !DILocation(line: 309, column: 2, scope: !2306)
!15091 = !DILocation(line: 309, column: 11, scope: !2306)
!15092 = !DILocation(line: 311, column: 2, scope: !2306)
!15093 = !DILocation(line: 293, column: 26, scope: !15087)
!15094 = !DILocation(line: 294, column: 9, scope: !15095)
!15095 = distinct !DILexicalBlock(scope: !15087, file: !2307, line: 293, column: 54)
!15096 = !DILocation(line: 295, column: 21, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15095, file: !2307, line: 295, column: 7)
!15098 = !DILocation(line: 295, column: 28, scope: !15097)
!15099 = !DILocation(line: 295, column: 7, scope: !15095)
!15100 = !DILocation(line: 299, column: 25, scope: !15095)
!15101 = !DILocation(line: 299, column: 41, scope: !15095)
!15102 = !DILocation(line: 300, column: 7, scope: !15095)
!15103 = !DILocation(line: 300, column: 26, scope: !15095)
!15104 = !DILocation(line: 299, column: 10, scope: !15095)
!15105 = !DILocation(line: 299, column: 7, scope: !15095)
!15106 = !DILocation(line: 302, column: 16, scope: !15095)
!15107 = !DILocation(line: 304, column: 20, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15095, file: !2307, line: 304, column: 7)
!15109 = !DILocation(line: 304, column: 7, scope: !15095)
!15110 = !DILocation(line: 305, column: 26, scope: !15111)
!15111 = distinct !DILexicalBlock(scope: !15108, file: !2307, line: 304, column: 26)
!15112 = !DILocation(line: 305, column: 42, scope: !15111)
!15113 = !DILocation(line: 305, column: 11, scope: !15111)
!15114 = !DILocation(line: 305, column: 8, scope: !15111)
!15115 = !DILocation(line: 306, column: 3, scope: !15111)
!15116 = !DILocation(line: 293, column: 50, scope: !15087)
!15117 = !DILocation(line: 312, column: 1, scope: !2306)
!15118 = distinct !DISubprogram(name: "copy_bytes", scope: !2307, file: !2307, line: 261, type: !15119, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15121)
!15119 = !DISubroutineType(types: !15120)
!15120 = !{!111, !102, !111, !269, !111}
!15121 = !{!15122, !15123, !15124, !15125, !15126}
!15122 = !DILocalVariable(name: "dest", arg: 1, scope: !15118, file: !2307, line: 261, type: !102)
!15123 = !DILocalVariable(name: "dest_size", arg: 2, scope: !15118, file: !2307, line: 261, type: !111)
!15124 = !DILocalVariable(name: "src", arg: 3, scope: !15118, file: !2307, line: 261, type: !269)
!15125 = !DILocalVariable(name: "src_size", arg: 4, scope: !15118, file: !2307, line: 261, type: !111)
!15126 = !DILocalVariable(name: "bytes_to_copy", scope: !15118, file: !2307, line: 263, type: !111)
!15127 = !DILocation(line: 0, scope: !15118)
!15128 = !DILocation(line: 265, column: 18, scope: !15118)
!15129 = !DILocation(line: 266, column: 2, scope: !15118)
!15130 = !DILocation(line: 268, column: 2, scope: !15118)
!15131 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2307, file: !2307, line: 383, type: !15132, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15134)
!15132 = !DISubroutineType(types: !15133)
!15133 = !{null, !2311}
!15134 = !{!15135}
!15135 = !DILocalVariable(name: "thread", arg: 1, scope: !15131, file: !2307, line: 383, type: !2311)
!15136 = !DILocation(line: 0, scope: !15131)
!15137 = !DILocation(line: 387, column: 2, scope: !15131)
!15138 = !DILocation(line: 388, column: 1, scope: !15131)
!15139 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2307, file: !2307, line: 528, type: !15140, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15147)
!15140 = !DISubroutineType(types: !15141)
!15141 = !{!102, !2311, !15142, !111, !254, !104, !104, !104, !105, !113, !269}
!15142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15143, size: 32)
!15143 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !15144)
!15144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !15145)
!15145 = !{!15146}
!15146 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15144, file: !249, line: 48, baseType: !103, size: 8)
!15147 = !{!15148, !15149, !15150, !15151, !15152, !15153, !15154, !15155, !15156, !15157, !15158}
!15148 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15139, file: !2307, line: 528, type: !2311)
!15149 = !DILocalVariable(name: "stack", arg: 2, scope: !15139, file: !2307, line: 529, type: !15142)
!15150 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15139, file: !2307, line: 529, type: !111)
!15151 = !DILocalVariable(name: "entry", arg: 4, scope: !15139, file: !2307, line: 530, type: !254)
!15152 = !DILocalVariable(name: "p1", arg: 5, scope: !15139, file: !2307, line: 531, type: !104)
!15153 = !DILocalVariable(name: "p2", arg: 6, scope: !15139, file: !2307, line: 531, type: !104)
!15154 = !DILocalVariable(name: "p3", arg: 7, scope: !15139, file: !2307, line: 531, type: !104)
!15155 = !DILocalVariable(name: "prio", arg: 8, scope: !15139, file: !2307, line: 532, type: !105)
!15156 = !DILocalVariable(name: "options", arg: 9, scope: !15139, file: !2307, line: 532, type: !113)
!15157 = !DILocalVariable(name: "name", arg: 10, scope: !15139, file: !2307, line: 532, type: !269)
!15158 = !DILocalVariable(name: "stack_ptr", scope: !15139, file: !2307, line: 534, type: !102)
!15159 = !DILocation(line: 0, scope: !15139)
!15160 = !DILocation(line: 536, column: 2, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15162, file: !2307, line: 536, column: 2)
!15162 = distinct !DILexicalBlock(scope: !15163, file: !2307, line: 536, column: 2)
!15163 = distinct !DILexicalBlock(scope: !15139, file: !2307, line: 536, column: 2)
!15164 = !DILocation(line: 536, column: 2, scope: !15165)
!15165 = distinct !DILexicalBlock(scope: !15161, file: !2307, line: 536, column: 2)
!15166 = !DILocation(line: 550, column: 28, scope: !15139)
!15167 = !DILocation(line: 550, column: 2, scope: !15139)
!15168 = !DILocation(line: 553, column: 34, scope: !15139)
!15169 = !DILocation(line: 553, column: 2, scope: !15139)
!15170 = !DILocation(line: 554, column: 14, scope: !15139)
!15171 = !DILocation(line: 564, column: 2, scope: !15139)
!15172 = !DILocation(line: 567, column: 14, scope: !15139)
!15173 = !DILocation(line: 567, column: 24, scope: !15139)
!15174 = !DILocation(line: 612, column: 7, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15139, file: !2307, line: 612, column: 6)
!15176 = !DILocation(line: 612, column: 6, scope: !15139)
!15177 = !DILocation(line: 627, column: 40, scope: !15139)
!15178 = !DILocation(line: 637, column: 2, scope: !15139)
!15179 = !DILocation(line: 613, column: 15, scope: !15180)
!15180 = distinct !DILexicalBlock(scope: !15175, file: !2307, line: 612, column: 17)
!15181 = !DILocation(line: 613, column: 29, scope: !15180)
!15182 = !DILocation(line: 638, column: 1, scope: !15139)
!15183 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !14831, file: !14831, line: 78, type: !15184, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15186)
!15184 = !DISubroutineType(types: !15185)
!15185 = !{!492, !104}
!15186 = !{!15187}
!15187 = !DILocalVariable(name: "entry_point", arg: 1, scope: !15183, file: !14831, line: 78, type: !104)
!15188 = !DILocation(line: 0, scope: !15183)
!15189 = !DILocation(line: 80, column: 21, scope: !15183)
!15190 = !DILocation(line: 80, column: 2, scope: !15183)
!15191 = distinct !DISubprogram(name: "z_waitq_init", scope: !15192, file: !15192, line: 47, type: !15193, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15195)
!15192 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15193 = !DISubroutineType(types: !15194)
!15194 = !{null, !2342}
!15195 = !{!15196}
!15196 = !DILocalVariable(name: "w", arg: 1, scope: !15191, file: !15192, line: 47, type: !2342)
!15197 = !DILocation(line: 0, scope: !15191)
!15198 = !DILocation(line: 49, column: 21, scope: !15191)
!15199 = !DILocation(line: 49, column: 2, scope: !15191)
!15200 = !DILocation(line: 50, column: 1, scope: !15191)
!15201 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2307, file: !2307, line: 791, type: !15202, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15205)
!15202 = !DISubroutineType(types: !15203)
!15203 = !{null, !15204, !105, !113, !32}
!15204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!15205 = !{!15206, !15207, !15208, !15209}
!15206 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15201, file: !2307, line: 791, type: !15204)
!15207 = !DILocalVariable(name: "priority", arg: 2, scope: !15201, file: !2307, line: 791, type: !105)
!15208 = !DILocalVariable(name: "initial_state", arg: 3, scope: !15201, file: !2307, line: 792, type: !113)
!15209 = !DILocalVariable(name: "options", arg: 4, scope: !15201, file: !2307, line: 792, type: !32)
!15210 = !DILocation(line: 0, scope: !15201)
!15211 = !DILocation(line: 795, column: 15, scope: !15201)
!15212 = !DILocation(line: 795, column: 25, scope: !15201)
!15213 = !DILocation(line: 796, column: 30, scope: !15201)
!15214 = !DILocation(line: 796, column: 15, scope: !15201)
!15215 = !DILocation(line: 796, column: 28, scope: !15201)
!15216 = !DILocation(line: 797, column: 30, scope: !15201)
!15217 = !DILocation(line: 797, column: 15, scope: !15201)
!15218 = !DILocation(line: 797, column: 28, scope: !15201)
!15219 = !DILocation(line: 799, column: 22, scope: !15201)
!15220 = !DILocation(line: 799, column: 15, scope: !15201)
!15221 = !DILocation(line: 799, column: 20, scope: !15201)
!15222 = !DILocation(line: 801, column: 15, scope: !15201)
!15223 = !DILocation(line: 801, column: 28, scope: !15201)
!15224 = !DILocation(line: 814, column: 2, scope: !15201)
!15225 = !DILocation(line: 815, column: 1, scope: !15201)
!15226 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2307, file: !2307, line: 449, type: !15227, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15229)
!15227 = !DISubroutineType(types: !15228)
!15228 = !{!102, !2311, !15142, !111}
!15229 = !{!15230, !15231, !15232, !15233, !15234, !15235, !15236, !15237}
!15230 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15226, file: !2307, line: 449, type: !2311)
!15231 = !DILocalVariable(name: "stack", arg: 2, scope: !15226, file: !2307, line: 450, type: !15142)
!15232 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15226, file: !2307, line: 450, type: !111)
!15233 = !DILocalVariable(name: "stack_obj_size", scope: !15226, file: !2307, line: 452, type: !111)
!15234 = !DILocalVariable(name: "stack_buf_size", scope: !15226, file: !2307, line: 452, type: !111)
!15235 = !DILocalVariable(name: "stack_ptr", scope: !15226, file: !2307, line: 453, type: !102)
!15236 = !DILocalVariable(name: "stack_buf_start", scope: !15226, file: !2307, line: 453, type: !102)
!15237 = !DILocalVariable(name: "delta", scope: !15226, file: !2307, line: 454, type: !111)
!15238 = !DILocation(line: 0, scope: !15226)
!15239 = !DILocation(line: 465, column: 20, scope: !15240)
!15240 = distinct !DILexicalBlock(scope: !15226, file: !2307, line: 463, column: 2)
!15241 = !DILocation(line: 466, column: 21, scope: !15240)
!15242 = !DILocation(line: 473, column: 28, scope: !15226)
!15243 = !DILocation(line: 514, column: 33, scope: !15226)
!15244 = !DILocation(line: 514, column: 25, scope: !15226)
!15245 = !DILocation(line: 514, column: 31, scope: !15226)
!15246 = !DILocation(line: 515, column: 25, scope: !15226)
!15247 = !DILocation(line: 515, column: 30, scope: !15226)
!15248 = !DILocation(line: 516, column: 25, scope: !15226)
!15249 = !DILocation(line: 516, column: 31, scope: !15226)
!15250 = !DILocation(line: 520, column: 2, scope: !15226)
!15251 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !15252, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15254)
!15252 = !DISubroutineType(types: !15253)
!15253 = !{!102, !15142}
!15254 = !{!15255}
!15255 = !DILocalVariable(name: "sym", arg: 1, scope: !15251, file: !249, line: 331, type: !15142)
!15256 = !DILocation(line: 0, scope: !15251)
!15257 = !DILocation(line: 333, column: 21, scope: !15251)
!15258 = !DILocation(line: 333, column: 2, scope: !15251)
!15259 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !15260, file: !15260, line: 40, type: !15261, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15263)
!15260 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15261 = !DISubroutineType(types: !15262)
!15262 = !{null, !15204}
!15263 = !{!15264}
!15264 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15259, file: !15260, line: 40, type: !15204)
!15265 = !DILocation(line: 0, scope: !15259)
!15266 = !DILocation(line: 42, column: 31, scope: !15259)
!15267 = !DILocation(line: 42, column: 2, scope: !15259)
!15268 = !DILocation(line: 43, column: 1, scope: !15259)
!15269 = distinct !DISubprogram(name: "z_init_timeout", scope: !15260, file: !15260, line: 25, type: !2368, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15270)
!15270 = !{!15271}
!15271 = !DILocalVariable(name: "to", arg: 1, scope: !15269, file: !15260, line: 25, type: !2370)
!15272 = !DILocation(line: 0, scope: !15269)
!15273 = !DILocation(line: 27, column: 22, scope: !15269)
!15274 = !DILocation(line: 27, column: 2, scope: !15269)
!15275 = !DILocation(line: 28, column: 1, scope: !15269)
!15276 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !15277, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15279)
!15277 = !DISubroutineType(types: !15278)
!15278 = !{null, !2416}
!15279 = !{!15280}
!15280 = !DILocalVariable(name: "node", arg: 1, scope: !15276, file: !137, line: 211, type: !2416)
!15281 = !DILocation(line: 0, scope: !15276)
!15282 = !DILocation(line: 213, column: 8, scope: !15276)
!15283 = !DILocation(line: 213, column: 13, scope: !15276)
!15284 = !DILocation(line: 214, column: 8, scope: !15276)
!15285 = !DILocation(line: 214, column: 13, scope: !15276)
!15286 = !DILocation(line: 215, column: 1, scope: !15276)
!15287 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !15288, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15291)
!15288 = !DISubroutineType(types: !15289)
!15289 = !{null, !15290}
!15290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!15291 = !{!15292}
!15292 = !DILocalVariable(name: "list", arg: 1, scope: !15287, file: !137, line: 197, type: !15290)
!15293 = !DILocation(line: 0, scope: !15287)
!15294 = !DILocation(line: 199, column: 8, scope: !15287)
!15295 = !DILocation(line: 199, column: 13, scope: !15287)
!15296 = !DILocation(line: 200, column: 8, scope: !15287)
!15297 = !DILocation(line: 200, column: 13, scope: !15287)
!15298 = !DILocation(line: 201, column: 1, scope: !15287)
!15299 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2307, file: !2307, line: 641, type: !15300, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15306)
!15300 = !DISubroutineType(types: !15301)
!15301 = !{!2310, !2311, !15142, !111, !254, !104, !104, !104, !105, !113, !15302}
!15302 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !15303)
!15303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !15304)
!15304 = !{!15305}
!15305 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15303, file: !108, line: 66, baseType: !107, size: 64)
!15306 = !{!15307, !15308, !15309, !15310, !15311, !15312, !15313, !15314, !15315, !15316}
!15307 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15299, file: !2307, line: 641, type: !2311)
!15308 = !DILocalVariable(name: "stack", arg: 2, scope: !15299, file: !2307, line: 642, type: !15142)
!15309 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15299, file: !2307, line: 643, type: !111)
!15310 = !DILocalVariable(name: "entry", arg: 4, scope: !15299, file: !2307, line: 643, type: !254)
!15311 = !DILocalVariable(name: "p1", arg: 5, scope: !15299, file: !2307, line: 644, type: !104)
!15312 = !DILocalVariable(name: "p2", arg: 6, scope: !15299, file: !2307, line: 644, type: !104)
!15313 = !DILocalVariable(name: "p3", arg: 7, scope: !15299, file: !2307, line: 644, type: !104)
!15314 = !DILocalVariable(name: "prio", arg: 8, scope: !15299, file: !2307, line: 645, type: !105)
!15315 = !DILocalVariable(name: "options", arg: 9, scope: !15299, file: !2307, line: 645, type: !113)
!15316 = !DILocalVariable(name: "delay", arg: 10, scope: !15299, file: !2307, line: 645, type: !15302)
!15317 = !DILocation(line: 0, scope: !15299)
!15318 = !DILocation(line: 1031, column: 3, scope: !15029, inlinedAt: !15319)
!15319 = distinct !DILocation(line: 48, column: 10, scope: !15033, inlinedAt: !15320)
!15320 = distinct !DILocation(line: 647, column: 2, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15322, file: !2307, line: 647, column: 2)
!15322 = distinct !DILexicalBlock(scope: !15299, file: !2307, line: 647, column: 2)
!15323 = !DILocation(line: 0, scope: !15029, inlinedAt: !15319)
!15324 = !DILocation(line: 48, column: 9, scope: !15033, inlinedAt: !15320)
!15325 = !DILocation(line: 647, column: 2, scope: !15322)
!15326 = !DILocation(line: 647, column: 2, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !15321, file: !2307, line: 647, column: 2)
!15328 = !DILocation(line: 649, column: 2, scope: !15299)
!15329 = !DILocation(line: 652, column: 7, scope: !15330)
!15330 = distinct !DILexicalBlock(scope: !15299, file: !2307, line: 652, column: 6)
!15331 = !DILocation(line: 652, column: 6, scope: !15299)
!15332 = !DILocation(line: 653, column: 3, scope: !15333)
!15333 = distinct !DILexicalBlock(scope: !15330, file: !2307, line: 652, column: 39)
!15334 = !DILocation(line: 654, column: 2, scope: !15333)
!15335 = !DILocation(line: 656, column: 2, scope: !15299)
!15336 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2307, file: !2307, line: 401, type: !15337, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15339)
!15337 = !DISubroutineType(types: !15338)
!15338 = !{null, !2311, !15302}
!15339 = !{!15340, !15341}
!15340 = !DILocalVariable(name: "thread", arg: 1, scope: !15336, file: !2307, line: 401, type: !2311)
!15341 = !DILocalVariable(name: "delay", arg: 2, scope: !15336, file: !2307, line: 401, type: !15302)
!15342 = !DILocation(line: 0, scope: !15336)
!15343 = !DILocation(line: 404, column: 6, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15336, file: !2307, line: 404, column: 6)
!15345 = !DILocation(line: 404, column: 6, scope: !15336)
!15346 = !DILocation(line: 405, column: 3, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !15344, file: !2307, line: 404, column: 38)
!15348 = !DILocation(line: 406, column: 2, scope: !15347)
!15349 = !DILocation(line: 407, column: 3, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15344, file: !2307, line: 406, column: 9)
!15351 = !DILocation(line: 413, column: 1, scope: !15336)
!15352 = distinct !DISubprogram(name: "k_thread_start", scope: !3497, file: !3497, line: 205, type: !15353, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15355)
!15353 = !DISubroutineType(types: !15354)
!15354 = !{null, !2310}
!15355 = !{!15356}
!15356 = !DILocalVariable(name: "thread", arg: 1, scope: !15352, file: !3497, line: 205, type: !2310)
!15357 = !DILocation(line: 0, scope: !15352)
!15358 = !DILocation(line: 214, column: 2, scope: !15359)
!15359 = distinct !DILexicalBlock(scope: !15352, file: !3497, line: 214, column: 2)
!15360 = !{i64 2155095019}
!15361 = !DILocation(line: 215, column: 2, scope: !15352)
!15362 = !DILocation(line: 216, column: 1, scope: !15352)
!15363 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15260, file: !15260, line: 47, type: !15337, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15364)
!15364 = !{!15365, !15366}
!15365 = !DILocalVariable(name: "thread", arg: 1, scope: !15363, file: !15260, line: 47, type: !2311)
!15366 = !DILocalVariable(name: "ticks", arg: 2, scope: !15363, file: !15260, line: 47, type: !15302)
!15367 = !DILocation(line: 0, scope: !15363)
!15368 = !DILocation(line: 49, column: 30, scope: !15363)
!15369 = !DILocation(line: 49, column: 2, scope: !15363)
!15370 = !DILocation(line: 50, column: 1, scope: !15363)
!15371 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2307, file: !2307, line: 748, type: !266, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15372)
!15372 = !{!15373, !15390}
!15373 = !DILocalVariable(name: "thread_data", scope: !15374, file: !2307, line: 750, type: !15375)
!15374 = distinct !DILexicalBlock(scope: !15371, file: !2307, line: 750, column: 2)
!15375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15376, size: 32)
!15376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !15377)
!15377 = !{!15378, !15379, !15380, !15381, !15382, !15383, !15384, !15385, !15386, !15387, !15388, !15389}
!15378 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !15376, file: !122, line: 621, baseType: !2311, size: 32)
!15379 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !15376, file: !122, line: 622, baseType: !15142, size: 32, offset: 32)
!15380 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !15376, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!15381 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !15376, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!15382 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !15376, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!15383 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !15376, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!15384 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !15376, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!15385 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !15376, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!15386 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !15376, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!15387 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !15376, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!15388 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !15376, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!15389 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !15376, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!15390 = !DILocalVariable(name: "thread_data", scope: !15391, file: !2307, line: 781, type: !15375)
!15391 = distinct !DILexicalBlock(scope: !15371, file: !2307, line: 781, column: 2)
!15392 = !DILocation(line: 0, scope: !15374)
!15393 = !DILocation(line: 750, column: 2, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15395, file: !2307, line: 750, column: 2)
!15395 = distinct !DILexicalBlock(scope: !15396, file: !2307, line: 750, column: 2)
!15396 = distinct !DILexicalBlock(scope: !15374, file: !2307, line: 750, column: 2)
!15397 = !DILocation(line: 750, column: 2, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15399, file: !2307, line: 750, column: 2)
!15399 = distinct !DILexicalBlock(scope: !15394, file: !2307, line: 750, column: 2)
!15400 = !DILocation(line: 750, column: 2, scope: !15395)
!15401 = !DILocation(line: 750, column: 2, scope: !15374)
!15402 = !DILocation(line: 780, column: 2, scope: !15371)
!15403 = !DILocation(line: 0, scope: !15391)
!15404 = !DILocation(line: 781, column: 2, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15406, file: !2307, line: 781, column: 2)
!15406 = distinct !DILexicalBlock(scope: !15407, file: !2307, line: 781, column: 2)
!15407 = distinct !DILexicalBlock(scope: !15391, file: !2307, line: 781, column: 2)
!15408 = !DILocation(line: 752, column: 17, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15396, file: !2307, line: 750, column: 38)
!15410 = !DILocation(line: 753, column: 17, scope: !15409)
!15411 = !DILocation(line: 754, column: 17, scope: !15409)
!15412 = !DILocation(line: 755, column: 17, scope: !15409)
!15413 = !DILocation(line: 756, column: 17, scope: !15409)
!15414 = !DILocation(line: 757, column: 17, scope: !15409)
!15415 = !DILocation(line: 758, column: 17, scope: !15409)
!15416 = !DILocation(line: 759, column: 17, scope: !15409)
!15417 = !DILocation(line: 760, column: 17, scope: !15409)
!15418 = !DILocation(line: 751, column: 3, scope: !15409)
!15419 = !DILocation(line: 763, column: 16, scope: !15409)
!15420 = !DILocation(line: 763, column: 29, scope: !15409)
!15421 = !DILocation(line: 763, column: 39, scope: !15409)
!15422 = !DILocation(line: 750, column: 2, scope: !15396)
!15423 = !DILocation(line: 750, column: 2, scope: !15399)
!15424 = distinct !{!15424, !15401, !15425}
!15425 = !DILocation(line: 764, column: 2, scope: !15374)
!15426 = !DILocation(line: 781, column: 2, scope: !15427)
!15427 = distinct !DILexicalBlock(scope: !15428, file: !2307, line: 781, column: 2)
!15428 = distinct !DILexicalBlock(scope: !15405, file: !2307, line: 781, column: 2)
!15429 = !DILocation(line: 781, column: 2, scope: !15406)
!15430 = !DILocation(line: 781, column: 2, scope: !15391)
!15431 = !DILocation(line: 787, column: 2, scope: !15371)
!15432 = !DILocation(line: 788, column: 1, scope: !15371)
!15433 = !DILocation(line: 782, column: 20, scope: !15434)
!15434 = distinct !DILexicalBlock(scope: !15435, file: !2307, line: 782, column: 7)
!15435 = distinct !DILexicalBlock(scope: !15407, file: !2307, line: 781, column: 38)
!15436 = !DILocation(line: 782, column: 31, scope: !15434)
!15437 = !DILocation(line: 782, column: 7, scope: !15435)
!15438 = !DILocation(line: 783, column: 37, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15434, file: !2307, line: 782, column: 51)
!15440 = !DILocation(line: 784, column: 10, scope: !15439)
!15441 = !DILocation(line: 783, column: 4, scope: !15439)
!15442 = !DILocation(line: 785, column: 3, scope: !15439)
!15443 = !DILocation(line: 781, column: 2, scope: !15407)
!15444 = !DILocation(line: 781, column: 2, scope: !15428)
!15445 = distinct !{!15445, !15430, !15446}
!15446 = !DILocation(line: 786, column: 2, scope: !15391)
!15447 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !15448, file: !15448, line: 403, type: !15449, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15451)
!15448 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15449 = !DISubroutineType(types: !15450)
!15450 = !{!114, !114}
!15451 = !{!15452}
!15452 = !DILocalVariable(name: "t", arg: 1, scope: !15447, file: !15448, line: 403, type: !114)
!15453 = !DILocation(line: 0, scope: !15447)
!15454 = !DILocalVariable(name: "t", arg: 1, scope: !15455, file: !15448, line: 102, type: !114)
!15455 = distinct !DISubprogram(name: "z_tmcvt", scope: !15448, file: !15448, line: 102, type: !15456, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15458)
!15456 = !DISubroutineType(types: !15457)
!15457 = !{!114, !114, !113, !113, !492, !492, !492, !492}
!15458 = !{!15454, !15459, !15460, !15461, !15462, !15463, !15464, !15465, !15466, !15467, !15468}
!15459 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15455, file: !15448, line: 102, type: !113)
!15460 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15455, file: !15448, line: 103, type: !113)
!15461 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15455, file: !15448, line: 103, type: !492)
!15462 = !DILocalVariable(name: "result32", arg: 5, scope: !15455, file: !15448, line: 104, type: !492)
!15463 = !DILocalVariable(name: "round_up", arg: 6, scope: !15455, file: !15448, line: 104, type: !492)
!15464 = !DILocalVariable(name: "round_off", arg: 7, scope: !15455, file: !15448, line: 105, type: !492)
!15465 = !DILocalVariable(name: "mul_ratio", scope: !15455, file: !15448, line: 107, type: !492)
!15466 = !DILocalVariable(name: "div_ratio", scope: !15455, file: !15448, line: 109, type: !492)
!15467 = !DILocalVariable(name: "off", scope: !15455, file: !15448, line: 116, type: !114)
!15468 = !DILocalVariable(name: "rdivisor", scope: !15469, file: !15448, line: 119, type: !113)
!15469 = distinct !DILexicalBlock(scope: !15470, file: !15448, line: 118, column: 18)
!15470 = distinct !DILexicalBlock(scope: !15455, file: !15448, line: 118, column: 6)
!15471 = !DILocation(line: 0, scope: !15455, inlinedAt: !15472)
!15472 = distinct !DILocation(line: 406, column: 9, scope: !15447)
!15473 = !DILocation(line: 145, column: 13, scope: !15474, inlinedAt: !15472)
!15474 = distinct !DILexicalBlock(scope: !15475, file: !15448, line: 144, column: 10)
!15475 = distinct !DILexicalBlock(scope: !15476, file: !15448, line: 142, column: 7)
!15476 = distinct !DILexicalBlock(scope: !15477, file: !15448, line: 141, column: 24)
!15477 = distinct !DILexicalBlock(scope: !15478, file: !15448, line: 141, column: 13)
!15478 = distinct !DILexicalBlock(scope: !15455, file: !15448, line: 134, column: 6)
!15479 = !DILocation(line: 406, column: 2, scope: !15447)
!15480 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2307, file: !2307, line: 817, type: !5139, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15481)
!15481 = !{!15482, !15483, !15484, !15485}
!15482 = !DILocalVariable(name: "entry", arg: 1, scope: !15480, file: !2307, line: 817, type: !254)
!15483 = !DILocalVariable(name: "p1", arg: 2, scope: !15480, file: !2307, line: 818, type: !104)
!15484 = !DILocalVariable(name: "p2", arg: 3, scope: !15480, file: !2307, line: 818, type: !104)
!15485 = !DILocalVariable(name: "p3", arg: 4, scope: !15480, file: !2307, line: 818, type: !104)
!15486 = !DILocation(line: 0, scope: !15480)
!15487 = !DILocation(line: 822, column: 2, scope: !15480)
!15488 = !DILocation(line: 822, column: 17, scope: !15480)
!15489 = !DILocation(line: 822, column: 30, scope: !15480)
!15490 = !DILocation(line: 823, column: 2, scope: !15480)
!15491 = !DILocation(line: 845, column: 2, scope: !15480)
!15492 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2307, file: !2307, line: 853, type: !15493, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15496)
!15493 = !DISubroutineType(types: !15494)
!15494 = !{!492, !15495}
!15495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 32)
!15496 = !{!15497, !15498}
!15497 = !DILocalVariable(name: "l", arg: 1, scope: !15492, file: !2307, line: 853, type: !15495)
!15498 = !DILocalVariable(name: "thread_cpu", scope: !15492, file: !2307, line: 855, type: !22)
!15499 = !DILocation(line: 0, scope: !15492)
!15500 = !DILocation(line: 855, column: 28, scope: !15492)
!15501 = !DILocation(line: 857, column: 17, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15492, file: !2307, line: 857, column: 6)
!15503 = !DILocation(line: 857, column: 6, scope: !15492)
!15504 = !DILocation(line: 858, column: 19, scope: !15505)
!15505 = distinct !DILexicalBlock(scope: !15506, file: !2307, line: 858, column: 7)
!15506 = distinct !DILexicalBlock(scope: !15502, file: !2307, line: 857, column: 24)
!15507 = !DILocation(line: 858, column: 42, scope: !15505)
!15508 = !DILocation(line: 858, column: 28, scope: !15505)
!15509 = !DILocation(line: 858, column: 25, scope: !15505)
!15510 = !DILocation(line: 858, column: 7, scope: !15506)
!15511 = !DILocation(line: 862, column: 2, scope: !15492)
!15512 = !DILocation(line: 863, column: 1, scope: !15492)
!15513 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2307, file: !2307, line: 865, type: !15493, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15514)
!15514 = !{!15515}
!15515 = !DILocalVariable(name: "l", arg: 1, scope: !15513, file: !2307, line: 865, type: !15495)
!15516 = !DILocation(line: 0, scope: !15513)
!15517 = !DILocation(line: 867, column: 9, scope: !15518)
!15518 = distinct !DILexicalBlock(scope: !15513, file: !2307, line: 867, column: 6)
!15519 = !DILocation(line: 867, column: 38, scope: !15518)
!15520 = !DILocation(line: 867, column: 24, scope: !15518)
!15521 = !DILocation(line: 867, column: 54, scope: !15518)
!15522 = !DILocation(line: 867, column: 43, scope: !15518)
!15523 = !DILocation(line: 867, column: 41, scope: !15518)
!15524 = !DILocation(line: 867, column: 20, scope: !15518)
!15525 = !DILocation(line: 867, column: 6, scope: !15513)
!15526 = !DILocation(line: 870, column: 16, scope: !15513)
!15527 = !DILocation(line: 871, column: 2, scope: !15513)
!15528 = !DILocation(line: 872, column: 1, scope: !15513)
!15529 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2307, file: !2307, line: 874, type: !15530, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15532)
!15530 = !DISubroutineType(types: !15531)
!15531 = !{null, !15495}
!15532 = !{!15533}
!15533 = !DILocalVariable(name: "l", arg: 1, scope: !15529, file: !2307, line: 874, type: !15495)
!15534 = !DILocation(line: 0, scope: !15529)
!15535 = !DILocation(line: 876, column: 32, scope: !15529)
!15536 = !DILocation(line: 876, column: 18, scope: !15529)
!15537 = !DILocation(line: 876, column: 48, scope: !15529)
!15538 = !DILocation(line: 876, column: 37, scope: !15529)
!15539 = !DILocation(line: 876, column: 35, scope: !15529)
!15540 = !DILocation(line: 876, column: 5, scope: !15529)
!15541 = !DILocation(line: 876, column: 16, scope: !15529)
!15542 = !DILocation(line: 877, column: 1, scope: !15529)
!15543 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2307, file: !2307, line: 888, type: !15544, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15546)
!15544 = !DISubroutineType(types: !15545)
!15545 = !{!105, !2311}
!15546 = !{!15547}
!15547 = !DILocalVariable(name: "thread", arg: 1, scope: !15543, file: !2307, line: 888, type: !2311)
!15548 = !DILocation(line: 0, scope: !15543)
!15549 = !DILocation(line: 893, column: 2, scope: !15543)
!15550 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2307, file: !2307, line: 897, type: !15551, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15553)
!15551 = !DISubroutineType(types: !15552)
!15552 = !{!105, !2311, !32}
!15553 = !{!15554, !15555}
!15554 = !DILocalVariable(name: "thread", arg: 1, scope: !15550, file: !2307, line: 897, type: !2311)
!15555 = !DILocalVariable(name: "options", arg: 2, scope: !15550, file: !2307, line: 897, type: !32)
!15556 = !DILocation(line: 0, scope: !15550)
!15557 = !DILocation(line: 902, column: 2, scope: !15550)
!15558 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2307, file: !2307, line: 1072, type: !15559, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15564)
!15559 = !DISubroutineType(types: !15560)
!15560 = !{!105, !2310, !15561}
!15561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15562, size: 32)
!15562 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !127, line: 234, baseType: !15563)
!15563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !127, line: 192, elements: !397)
!15564 = !{!15565, !15566}
!15565 = !DILocalVariable(name: "thread", arg: 1, scope: !15558, file: !2307, line: 1072, type: !2310)
!15566 = !DILocalVariable(name: "stats", arg: 2, scope: !15558, file: !2307, line: 1073, type: !15561)
!15567 = !DILocation(line: 0, scope: !15558)
!15568 = !DILocation(line: 1075, column: 14, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15558, file: !2307, line: 1075, column: 6)
!15570 = !DILocation(line: 1075, column: 23, scope: !15569)
!15571 = !DILocation(line: 1086, column: 1, scope: !15558)
!15572 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2307, file: !2307, line: 1088, type: !15573, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !15575)
!15573 = !DISubroutineType(types: !15574)
!15574 = !{!105, !15561}
!15575 = !{!15576}
!15576 = !DILocalVariable(name: "stats", arg: 1, scope: !15572, file: !2307, line: 1088, type: !15561)
!15577 = !DILocation(line: 0, scope: !15572)
!15578 = !DILocation(line: 1094, column: 12, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15572, file: !2307, line: 1094, column: 6)
!15580 = !DILocation(line: 1120, column: 1, scope: !15572)
!15581 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15582, file: !15582, line: 20, type: !266, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !397)
!15582 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15583 = !DILocation(line: 30, column: 2, scope: !15581)
!15584 = !DILocation(line: 31, column: 1, scope: !15581)
!15585 = distinct !DISubprogram(name: "idle", scope: !15582, file: !15582, line: 33, type: !256, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !15586)
!15586 = !{!15587, !15588, !15589}
!15587 = !DILocalVariable(name: "unused1", arg: 1, scope: !15585, file: !15582, line: 33, type: !104)
!15588 = !DILocalVariable(name: "unused2", arg: 2, scope: !15585, file: !15582, line: 33, type: !104)
!15589 = !DILocalVariable(name: "unused3", arg: 3, scope: !15585, file: !15582, line: 33, type: !104)
!15590 = !DILocation(line: 0, scope: !15585)
!15591 = !DILocation(line: 39, column: 2, scope: !15592)
!15592 = distinct !DILexicalBlock(scope: !15593, file: !15582, line: 39, column: 2)
!15593 = distinct !DILexicalBlock(scope: !15585, file: !15582, line: 39, column: 2)
!15594 = !DILocation(line: 39, column: 2, scope: !15593)
!15595 = !DILocation(line: 39, column: 2, scope: !15596)
!15596 = distinct !DILexicalBlock(scope: !15592, file: !15582, line: 39, column: 2)
!15597 = !DILocation(line: 55, column: 2, scope: !15598, inlinedAt: !15602)
!15598 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7532, file: !7532, line: 42, type: !7533, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !15599)
!15599 = !{!15600, !15601}
!15600 = !DILocalVariable(name: "key", scope: !15598, file: !7532, line: 44, type: !32)
!15601 = !DILocalVariable(name: "tmp", scope: !15598, file: !7532, line: 53, type: !32)
!15602 = distinct !DILocation(line: 62, column: 10, scope: !15603)
!15603 = distinct !DILexicalBlock(scope: !15585, file: !15582, line: 41, column: 15)
!15604 = !{i64 2281976}
!15605 = !DILocation(line: 0, scope: !15598, inlinedAt: !15602)
!15606 = !DILocation(line: 86, column: 3, scope: !15603)
!15607 = !DILocation(line: 41, column: 2, scope: !15585)
!15608 = distinct !{!15608, !15607, !15609}
!15609 = !DILocation(line: 105, column: 2, scope: !15585)
!15610 = distinct !DISubprogram(name: "k_cpu_idle", scope: !122, file: !122, line: 5627, type: !266, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !397)
!15611 = !DILocation(line: 5629, column: 2, scope: !15610)
!15612 = !DILocation(line: 5630, column: 1, scope: !15610)
!15613 = !DISubprogram(name: "arch_cpu_idle", scope: !247, file: !247, line: 167, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15614 = distinct !DISubprogram(name: "k_msgq_init", scope: !15615, file: !15615, line: 35, type: !15616, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15631)
!15615 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15616 = !DISubroutineType(types: !15617)
!15617 = !{null, !15618, !102, !111, !113}
!15618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15619, size: 32)
!15619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !15620)
!15620 = !{!15621, !15622, !15623, !15624, !15625, !15626, !15627, !15628, !15629, !15630}
!15621 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15619, file: !122, line: 4206, baseType: !3264, size: 64)
!15622 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15619, file: !122, line: 4208, baseType: !3326, size: 32, offset: 64)
!15623 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15619, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!15624 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15619, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!15625 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !15619, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!15626 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !15619, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!15627 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !15619, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!15628 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !15619, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!15629 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15619, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!15630 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15619, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!15631 = !{!15632, !15633, !15634, !15635}
!15632 = !DILocalVariable(name: "msgq", arg: 1, scope: !15614, file: !15615, line: 35, type: !15618)
!15633 = !DILocalVariable(name: "buffer", arg: 2, scope: !15614, file: !15615, line: 35, type: !102)
!15634 = !DILocalVariable(name: "msg_size", arg: 3, scope: !15614, file: !15615, line: 35, type: !111)
!15635 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !15614, file: !15615, line: 36, type: !113)
!15636 = !DILocation(line: 0, scope: !15614)
!15637 = !DILocation(line: 38, column: 8, scope: !15614)
!15638 = !DILocation(line: 38, column: 17, scope: !15614)
!15639 = !DILocation(line: 39, column: 8, scope: !15614)
!15640 = !DILocation(line: 39, column: 17, scope: !15614)
!15641 = !DILocation(line: 40, column: 8, scope: !15614)
!15642 = !DILocation(line: 40, column: 21, scope: !15614)
!15643 = !DILocation(line: 41, column: 40, scope: !15614)
!15644 = !DILocation(line: 41, column: 28, scope: !15614)
!15645 = !DILocation(line: 41, column: 8, scope: !15614)
!15646 = !DILocation(line: 41, column: 19, scope: !15614)
!15647 = !DILocation(line: 42, column: 8, scope: !15614)
!15648 = !DILocation(line: 42, column: 17, scope: !15614)
!15649 = !DILocation(line: 43, column: 8, scope: !15614)
!15650 = !DILocation(line: 43, column: 18, scope: !15614)
!15651 = !DILocation(line: 44, column: 8, scope: !15614)
!15652 = !DILocation(line: 44, column: 18, scope: !15614)
!15653 = !DILocation(line: 45, column: 8, scope: !15614)
!15654 = !DILocation(line: 45, column: 14, scope: !15614)
!15655 = !DILocation(line: 46, column: 22, scope: !15614)
!15656 = !DILocation(line: 46, column: 2, scope: !15614)
!15657 = !DILocation(line: 47, column: 15, scope: !15614)
!15658 = !DILocation(line: 55, column: 1, scope: !15614)
!15659 = distinct !DISubprogram(name: "z_waitq_init", scope: !15192, file: !15192, line: 47, type: !15660, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15662)
!15660 = !DISubroutineType(types: !15661)
!15661 = !{null, !3263}
!15662 = !{!15663}
!15663 = !DILocalVariable(name: "w", arg: 1, scope: !15659, file: !15192, line: 47, type: !3263)
!15664 = !DILocation(line: 0, scope: !15659)
!15665 = !DILocation(line: 49, column: 21, scope: !15659)
!15666 = !DILocation(line: 49, column: 2, scope: !15659)
!15667 = !DILocation(line: 50, column: 1, scope: !15659)
!15668 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !15669, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15672)
!15669 = !DISubroutineType(types: !15670)
!15670 = !{null, !15671}
!15671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 32)
!15672 = !{!15673}
!15673 = !DILocalVariable(name: "list", arg: 1, scope: !15668, file: !137, line: 197, type: !15671)
!15674 = !DILocation(line: 0, scope: !15668)
!15675 = !DILocation(line: 199, column: 8, scope: !15668)
!15676 = !DILocation(line: 199, column: 13, scope: !15668)
!15677 = !DILocation(line: 200, column: 8, scope: !15668)
!15678 = !DILocation(line: 200, column: 13, scope: !15668)
!15679 = !DILocation(line: 201, column: 1, scope: !15668)
!15680 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !15615, file: !15615, line: 57, type: !15681, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15683)
!15681 = !DISubroutineType(types: !15682)
!15682 = !{!105, !15618, !111, !113}
!15683 = !{!15684, !15685, !15686, !15687, !15688, !15689}
!15684 = !DILocalVariable(name: "msgq", arg: 1, scope: !15680, file: !15615, line: 57, type: !15618)
!15685 = !DILocalVariable(name: "msg_size", arg: 2, scope: !15680, file: !15615, line: 57, type: !111)
!15686 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !15680, file: !15615, line: 58, type: !113)
!15687 = !DILocalVariable(name: "buffer", scope: !15680, file: !15615, line: 60, type: !104)
!15688 = !DILocalVariable(name: "ret", scope: !15680, file: !15615, line: 61, type: !105)
!15689 = !DILocalVariable(name: "total_size", scope: !15680, file: !15615, line: 62, type: !111)
!15690 = !DILocation(line: 0, scope: !15680)
!15691 = !DILocation(line: 62, column: 2, scope: !15680)
!15692 = !DILocation(line: 66, column: 6, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15680, file: !15615, line: 66, column: 6)
!15694 = !DILocation(line: 66, column: 6, scope: !15680)
!15695 = !DILocation(line: 69, column: 28, scope: !15696)
!15696 = distinct !DILexicalBlock(scope: !15693, file: !15615, line: 68, column: 9)
!15697 = !DILocation(line: 69, column: 12, scope: !15696)
!15698 = !DILocation(line: 70, column: 14, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15696, file: !15615, line: 70, column: 7)
!15700 = !DILocation(line: 70, column: 7, scope: !15696)
!15701 = !DILocation(line: 71, column: 4, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !15699, file: !15615, line: 70, column: 23)
!15703 = !DILocation(line: 72, column: 10, scope: !15702)
!15704 = !DILocation(line: 72, column: 16, scope: !15702)
!15705 = !DILocation(line: 74, column: 3, scope: !15702)
!15706 = !DILocation(line: 0, scope: !15693)
!15707 = !DILocation(line: 82, column: 1, scope: !15680)
!15708 = !DILocation(line: 81, column: 2, scope: !15680)
!15709 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15710, file: !15710, line: 105, type: !15711, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15713)
!15710 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15711 = !DISubroutineType(types: !15712)
!15712 = !{!492, !111, !111, !2715}
!15713 = !{!15714, !15715, !15716}
!15714 = !DILocalVariable(name: "a", arg: 1, scope: !15709, file: !15710, line: 105, type: !111)
!15715 = !DILocalVariable(name: "b", arg: 2, scope: !15709, file: !15710, line: 105, type: !111)
!15716 = !DILocalVariable(name: "result", arg: 3, scope: !15709, file: !15710, line: 105, type: !2715)
!15717 = !DILocation(line: 0, scope: !15709)
!15718 = !DILocation(line: 107, column: 9, scope: !15709)
!15719 = !DILocation(line: 107, column: 2, scope: !15709)
!15720 = distinct !DISubprogram(name: "z_thread_malloc", scope: !15721, file: !15721, line: 102, type: !15722, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15723)
!15721 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15722 = !DISubroutineType(types: !3207)
!15723 = !{!15724}
!15724 = !DILocalVariable(name: "size", arg: 1, scope: !15720, file: !15721, line: 102, type: !111)
!15725 = !DILocation(line: 0, scope: !15720)
!15726 = !DILocation(line: 104, column: 9, scope: !15720)
!15727 = !DILocation(line: 104, column: 2, scope: !15720)
!15728 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !15721, file: !15721, line: 87, type: !15729, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15729 = !DISubroutineType(types: !15730)
!15730 = !{!104, !111, !111}
!15731 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !15615, file: !15615, line: 95, type: !15732, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15734)
!15732 = !DISubroutineType(types: !15733)
!15733 = !{!105, !15618}
!15734 = !{!15735}
!15735 = !DILocalVariable(name: "msgq", arg: 1, scope: !15731, file: !15615, line: 95, type: !15618)
!15736 = !DILocation(line: 0, scope: !15731)
!15737 = !DILocation(line: 99, column: 2, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15731, file: !15615, line: 99, column: 2)
!15739 = !DILocation(line: 99, column: 2, scope: !15731)
!15740 = !DILocation(line: 105, column: 13, scope: !15741)
!15741 = distinct !DILexicalBlock(scope: !15731, file: !15615, line: 105, column: 6)
!15742 = !DILocation(line: 105, column: 19, scope: !15741)
!15743 = !DILocation(line: 105, column: 40, scope: !15741)
!15744 = !DILocation(line: 105, column: 6, scope: !15731)
!15745 = !DILocation(line: 106, column: 16, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !15741, file: !15615, line: 105, column: 47)
!15747 = !DILocation(line: 106, column: 3, scope: !15746)
!15748 = !DILocation(line: 107, column: 15, scope: !15746)
!15749 = !DILocation(line: 108, column: 2, scope: !15746)
!15750 = !DILocation(line: 113, column: 1, scope: !15731)
!15751 = distinct !DISubprogram(name: "z_waitq_head", scope: !15192, file: !15192, line: 52, type: !15752, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15754)
!15752 = !DISubroutineType(types: !15753)
!15753 = !{!3246, !3263}
!15754 = !{!15755}
!15755 = !DILocalVariable(name: "w", arg: 1, scope: !15751, file: !15192, line: 52, type: !3263)
!15756 = !DILocation(line: 0, scope: !15751)
!15757 = !DILocation(line: 54, column: 52, scope: !15751)
!15758 = !DILocation(line: 54, column: 28, scope: !15751)
!15759 = !DILocation(line: 54, column: 9, scope: !15751)
!15760 = !DILocation(line: 54, column: 2, scope: !15751)
!15761 = !DISubprogram(name: "k_free", scope: !122, file: !122, line: 5272, type: !7787, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15762 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !15763, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15765)
!15763 = !DISubroutineType(types: !15764)
!15764 = !{!3231, !15671}
!15765 = !{!15766}
!15766 = !DILocalVariable(name: "list", arg: 1, scope: !15762, file: !137, line: 294, type: !15671)
!15767 = !DILocation(line: 0, scope: !15762)
!15768 = !DILocation(line: 296, column: 9, scope: !15762)
!15769 = !DILocation(line: 296, column: 49, scope: !15762)
!15770 = !DILocation(line: 296, column: 2, scope: !15762)
!15771 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !15772, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15774)
!15772 = !DISubroutineType(types: !15773)
!15773 = !{!492, !15671}
!15774 = !{!15775}
!15775 = !DILocalVariable(name: "list", arg: 1, scope: !15771, file: !137, line: 266, type: !15671)
!15776 = !DILocation(line: 0, scope: !15771)
!15777 = !DILocation(line: 268, column: 15, scope: !15771)
!15778 = !DILocation(line: 268, column: 20, scope: !15771)
!15779 = !DILocation(line: 268, column: 2, scope: !15771)
!15780 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !15615, file: !15615, line: 116, type: !15781, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15787)
!15781 = !DISubroutineType(types: !15782)
!15782 = !{!105, !15618, !13, !15783}
!15783 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !15784)
!15784 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !15785)
!15785 = !{!15786}
!15786 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15784, file: !108, line: 66, baseType: !107, size: 64)
!15787 = !{!15788, !15789, !15790, !15791, !15792, !15797}
!15788 = !DILocalVariable(name: "msgq", arg: 1, scope: !15780, file: !15615, line: 116, type: !15618)
!15789 = !DILocalVariable(name: "data", arg: 2, scope: !15780, file: !15615, line: 116, type: !13)
!15790 = !DILocalVariable(name: "timeout", arg: 3, scope: !15780, file: !15615, line: 116, type: !15783)
!15791 = !DILocalVariable(name: "pending_thread", scope: !15780, file: !15615, line: 120, type: !3246)
!15792 = !DILocalVariable(name: "key", scope: !15780, file: !15615, line: 121, type: !15793)
!15793 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15794)
!15794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15795)
!15795 = !{!15796}
!15796 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15794, file: !236, line: 33, baseType: !105, size: 32)
!15797 = !DILocalVariable(name: "result", scope: !15780, file: !15615, line: 122, type: !105)
!15798 = !DILocation(line: 0, scope: !15780)
!15799 = !DILocation(line: 1031, column: 3, scope: !15800, inlinedAt: !15803)
!15800 = distinct !DISubprogram(name: "__get_IPSR", scope: !7850, file: !7850, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15801)
!15801 = !{!15802}
!15802 = !DILocalVariable(name: "result", scope: !15800, file: !7850, line: 1029, type: !113)
!15803 = distinct !DILocation(line: 48, column: 10, scope: !15804, inlinedAt: !15805)
!15804 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8897, file: !8897, line: 46, type: !8898, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !397)
!15805 = distinct !DILocation(line: 118, column: 2, scope: !15806)
!15806 = distinct !DILexicalBlock(scope: !15807, file: !15615, line: 118, column: 2)
!15807 = distinct !DILexicalBlock(scope: !15780, file: !15615, line: 118, column: 2)
!15808 = !{i64 3734547}
!15809 = !DILocation(line: 0, scope: !15800, inlinedAt: !15803)
!15810 = !DILocation(line: 48, column: 9, scope: !15804, inlinedAt: !15805)
!15811 = !DILocation(line: 118, column: 2, scope: !15806)
!15812 = !DILocation(line: 118, column: 2, scope: !15813)
!15813 = distinct !DILexicalBlock(scope: !15806, file: !15615, line: 118, column: 2)
!15814 = !DILocation(line: 124, column: 27, scope: !15780)
!15815 = !DILocalVariable(name: "l", arg: 1, scope: !15816, file: !236, line: 136, type: !15819)
!15816 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15817, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15820)
!15817 = !DISubroutineType(types: !15818)
!15818 = !{!15793, !15819}
!15819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 32)
!15820 = !{!15815, !15821}
!15821 = !DILocalVariable(name: "k", scope: !15816, file: !236, line: 139, type: !15793)
!15822 = !DILocation(line: 0, scope: !15816, inlinedAt: !15823)
!15823 = distinct !DILocation(line: 124, column: 8, scope: !15780)
!15824 = !DILocation(line: 55, column: 2, scope: !15825, inlinedAt: !15829)
!15825 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7532, file: !7532, line: 42, type: !7533, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15826)
!15826 = !{!15827, !15828}
!15827 = !DILocalVariable(name: "key", scope: !15825, file: !7532, line: 44, type: !32)
!15828 = !DILocalVariable(name: "tmp", scope: !15825, file: !7532, line: 53, type: !32)
!15829 = distinct !DILocation(line: 145, column: 10, scope: !15816, inlinedAt: !15823)
!15830 = !{i64 2288113}
!15831 = !DILocation(line: 0, scope: !15825, inlinedAt: !15829)
!15832 = !DILocation(line: 148, column: 2, scope: !15833, inlinedAt: !15823)
!15833 = distinct !DILexicalBlock(scope: !15834, file: !236, line: 148, column: 2)
!15834 = distinct !DILexicalBlock(scope: !15816, file: !236, line: 148, column: 2)
!15835 = !DILocation(line: 148, column: 2, scope: !15834, inlinedAt: !15823)
!15836 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !15823)
!15837 = distinct !DILexicalBlock(scope: !15833, file: !236, line: 148, column: 2)
!15838 = !DILocation(line: 160, column: 2, scope: !15816, inlinedAt: !15823)
!15839 = !DILocation(line: 128, column: 12, scope: !15840)
!15840 = distinct !DILexicalBlock(scope: !15780, file: !15615, line: 128, column: 6)
!15841 = !DILocation(line: 128, column: 30, scope: !15840)
!15842 = !DILocation(line: 128, column: 22, scope: !15840)
!15843 = !DILocation(line: 128, column: 6, scope: !15780)
!15844 = !DILocation(line: 130, column: 49, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15840, file: !15615, line: 128, column: 40)
!15846 = !DILocation(line: 130, column: 20, scope: !15845)
!15847 = !DILocation(line: 131, column: 22, scope: !15848)
!15848 = distinct !DILexicalBlock(scope: !15845, file: !15615, line: 131, column: 7)
!15849 = !DILocation(line: 131, column: 7, scope: !15845)
!15850 = !DILocation(line: 135, column: 38, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15848, file: !15615, line: 131, column: 31)
!15852 = !DILocation(line: 136, column: 17, scope: !15851)
!15853 = !DILocation(line: 135, column: 10, scope: !15851)
!15854 = !DILocalVariable(name: "thread", arg: 1, scope: !15855, file: !14872, line: 65, type: !3246)
!15855 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14872, file: !14872, line: 65, type: !15856, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15858)
!15856 = !DISubroutineType(types: !15857)
!15857 = !{null, !3246, !32}
!15858 = !{!15854, !15859}
!15859 = !DILocalVariable(name: "value", arg: 2, scope: !15855, file: !14872, line: 65, type: !32)
!15860 = !DILocation(line: 0, scope: !15855, inlinedAt: !15861)
!15861 = distinct !DILocation(line: 138, column: 4, scope: !15851)
!15862 = !DILocation(line: 67, column: 15, scope: !15855, inlinedAt: !15861)
!15863 = !DILocation(line: 67, column: 33, scope: !15855, inlinedAt: !15861)
!15864 = !DILocation(line: 139, column: 4, scope: !15851)
!15865 = !DILocation(line: 140, column: 4, scope: !15851)
!15866 = !DILocation(line: 141, column: 4, scope: !15851)
!15867 = !DILocation(line: 144, column: 23, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15848, file: !15615, line: 142, column: 10)
!15869 = !DILocation(line: 144, column: 46, scope: !15868)
!15870 = !DILocation(line: 144, column: 10, scope: !15868)
!15871 = !DILocation(line: 145, column: 29, scope: !15868)
!15872 = !DILocation(line: 145, column: 20, scope: !15868)
!15873 = !DILocation(line: 146, column: 33, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15868, file: !15615, line: 146, column: 8)
!15875 = !DILocation(line: 146, column: 24, scope: !15874)
!15876 = !DILocation(line: 146, column: 8, scope: !15868)
!15877 = !DILocation(line: 147, column: 29, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15874, file: !15615, line: 146, column: 45)
!15879 = !DILocation(line: 147, column: 21, scope: !15878)
!15880 = !DILocation(line: 148, column: 4, scope: !15878)
!15881 = !DILocation(line: 149, column: 19, scope: !15868)
!15882 = !DILocation(line: 155, column: 2, scope: !15845)
!15883 = !DILocation(line: 155, column: 13, scope: !15840)
!15884 = !DILocation(line: 162, column: 3, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15886, file: !15615, line: 158, column: 9)
!15886 = distinct !DILexicalBlock(scope: !15840, file: !15615, line: 155, column: 13)
!15887 = !DILocation(line: 162, column: 18, scope: !15885)
!15888 = !DILocation(line: 162, column: 28, scope: !15885)
!15889 = !DILocation(line: 164, column: 49, scope: !15885)
!15890 = !DILocation(line: 164, column: 12, scope: !15885)
!15891 = !DILocation(line: 166, column: 3, scope: !15885)
!15892 = !DILocation(line: 0, scope: !15840)
!15893 = !DILocalVariable(name: "key", arg: 2, scope: !15894, file: !236, line: 190, type: !15793)
!15894 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15895, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15897)
!15895 = !DISubroutineType(types: !15896)
!15896 = !{null, !15819, !15793}
!15897 = !{!15898, !15893}
!15898 = !DILocalVariable(name: "l", arg: 1, scope: !15894, file: !236, line: 189, type: !15819)
!15899 = !DILocation(line: 0, scope: !15894, inlinedAt: !15900)
!15900 = distinct !DILocation(line: 171, column: 2, scope: !15780)
!15901 = !DILocation(line: 194, column: 2, scope: !15902, inlinedAt: !15900)
!15902 = distinct !DILexicalBlock(scope: !15903, file: !236, line: 194, column: 2)
!15903 = distinct !DILexicalBlock(scope: !15894, file: !236, line: 194, column: 2)
!15904 = !DILocation(line: 194, column: 2, scope: !15903, inlinedAt: !15900)
!15905 = !DILocation(line: 194, column: 2, scope: !15906, inlinedAt: !15900)
!15906 = distinct !DILexicalBlock(scope: !15902, file: !236, line: 194, column: 2)
!15907 = !DILocalVariable(name: "key", arg: 1, scope: !15908, file: !7532, line: 84, type: !32)
!15908 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7532, file: !7532, line: 84, type: !7543, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15909)
!15909 = !{!15907}
!15910 = !DILocation(line: 0, scope: !15908, inlinedAt: !15911)
!15911 = distinct !DILocation(line: 215, column: 2, scope: !15894, inlinedAt: !15900)
!15912 = !DILocation(line: 95, column: 2, scope: !15908, inlinedAt: !15911)
!15913 = !{i64 2288930}
!15914 = !DILocation(line: 173, column: 2, scope: !15780)
!15915 = !DILocation(line: 174, column: 1, scope: !15780)
!15916 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !15615, file: !15615, line: 188, type: !15917, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15925)
!15917 = !DISubroutineType(types: !15918)
!15918 = !{null, !15618, !15919}
!15919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15920, size: 32)
!15920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !122, line: 4259, size: 96, elements: !15921)
!15921 = !{!15922, !15923, !15924}
!15922 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15920, file: !122, line: 4261, baseType: !111, size: 32)
!15923 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15920, file: !122, line: 4263, baseType: !113, size: 32, offset: 32)
!15924 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15920, file: !122, line: 4265, baseType: !113, size: 32, offset: 64)
!15925 = !{!15926, !15927}
!15926 = !DILocalVariable(name: "msgq", arg: 1, scope: !15916, file: !15615, line: 188, type: !15618)
!15927 = !DILocalVariable(name: "attrs", arg: 2, scope: !15916, file: !15615, line: 188, type: !15919)
!15928 = !DILocation(line: 0, scope: !15916)
!15929 = !DILocation(line: 190, column: 26, scope: !15916)
!15930 = !DILocation(line: 190, column: 9, scope: !15916)
!15931 = !DILocation(line: 190, column: 18, scope: !15916)
!15932 = !DILocation(line: 191, column: 26, scope: !15916)
!15933 = !DILocation(line: 191, column: 9, scope: !15916)
!15934 = !DILocation(line: 191, column: 18, scope: !15916)
!15935 = !DILocation(line: 192, column: 27, scope: !15916)
!15936 = !DILocation(line: 192, column: 9, scope: !15916)
!15937 = !DILocation(line: 192, column: 19, scope: !15916)
!15938 = !DILocation(line: 193, column: 1, scope: !15916)
!15939 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !15615, file: !15615, line: 206, type: !15940, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !15942)
!15940 = !DISubroutineType(types: !15941)
!15941 = !{!105, !15618, !104, !15783}
!15942 = !{!15943, !15944, !15945, !15946, !15947, !15948}
!15943 = !DILocalVariable(name: "msgq", arg: 1, scope: !15939, file: !15615, line: 206, type: !15618)
!15944 = !DILocalVariable(name: "data", arg: 2, scope: !15939, file: !15615, line: 206, type: !104)
!15945 = !DILocalVariable(name: "timeout", arg: 3, scope: !15939, file: !15615, line: 206, type: !15783)
!15946 = !DILocalVariable(name: "key", scope: !15939, file: !15615, line: 210, type: !15793)
!15947 = !DILocalVariable(name: "pending_thread", scope: !15939, file: !15615, line: 211, type: !3246)
!15948 = !DILocalVariable(name: "result", scope: !15939, file: !15615, line: 212, type: !105)
!15949 = !DILocation(line: 0, scope: !15939)
!15950 = !DILocation(line: 1031, column: 3, scope: !15800, inlinedAt: !15951)
!15951 = distinct !DILocation(line: 48, column: 10, scope: !15804, inlinedAt: !15952)
!15952 = distinct !DILocation(line: 208, column: 2, scope: !15953)
!15953 = distinct !DILexicalBlock(scope: !15954, file: !15615, line: 208, column: 2)
!15954 = distinct !DILexicalBlock(scope: !15939, file: !15615, line: 208, column: 2)
!15955 = !DILocation(line: 0, scope: !15800, inlinedAt: !15951)
!15956 = !DILocation(line: 48, column: 9, scope: !15804, inlinedAt: !15952)
!15957 = !DILocation(line: 208, column: 2, scope: !15953)
!15958 = !DILocation(line: 208, column: 2, scope: !15959)
!15959 = distinct !DILexicalBlock(scope: !15953, file: !15615, line: 208, column: 2)
!15960 = !DILocation(line: 214, column: 27, scope: !15939)
!15961 = !DILocation(line: 0, scope: !15816, inlinedAt: !15962)
!15962 = distinct !DILocation(line: 214, column: 8, scope: !15939)
!15963 = !DILocation(line: 55, column: 2, scope: !15825, inlinedAt: !15964)
!15964 = distinct !DILocation(line: 145, column: 10, scope: !15816, inlinedAt: !15962)
!15965 = !DILocation(line: 0, scope: !15825, inlinedAt: !15964)
!15966 = !DILocation(line: 148, column: 2, scope: !15833, inlinedAt: !15962)
!15967 = !DILocation(line: 148, column: 2, scope: !15834, inlinedAt: !15962)
!15968 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !15962)
!15969 = !DILocation(line: 160, column: 2, scope: !15816, inlinedAt: !15962)
!15970 = !DILocation(line: 218, column: 12, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15939, file: !15615, line: 218, column: 6)
!15972 = !DILocation(line: 218, column: 22, scope: !15971)
!15973 = !DILocation(line: 218, column: 6, scope: !15939)
!15974 = !DILocation(line: 220, column: 28, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15971, file: !15615, line: 218, column: 28)
!15976 = !DILocation(line: 220, column: 44, scope: !15975)
!15977 = !DILocation(line: 220, column: 9, scope: !15975)
!15978 = !DILocation(line: 221, column: 27, scope: !15975)
!15979 = !DILocation(line: 221, column: 18, scope: !15975)
!15980 = !DILocation(line: 222, column: 31, scope: !15981)
!15981 = distinct !DILexicalBlock(scope: !15975, file: !15615, line: 222, column: 7)
!15982 = !DILocation(line: 222, column: 22, scope: !15981)
!15983 = !DILocation(line: 222, column: 7, scope: !15975)
!15984 = !DILocation(line: 223, column: 27, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15981, file: !15615, line: 222, column: 43)
!15986 = !DILocation(line: 223, column: 19, scope: !15985)
!15987 = !DILocation(line: 224, column: 3, scope: !15985)
!15988 = !DILocation(line: 225, column: 18, scope: !15975)
!15989 = !DILocation(line: 228, column: 49, scope: !15975)
!15990 = !DILocation(line: 228, column: 20, scope: !15975)
!15991 = !DILocation(line: 229, column: 22, scope: !15992)
!15992 = distinct !DILexicalBlock(scope: !15975, file: !15615, line: 229, column: 7)
!15993 = !DILocation(line: 229, column: 7, scope: !15975)
!15994 = !DILocation(line: 233, column: 23, scope: !15995)
!15995 = distinct !DILexicalBlock(scope: !15992, file: !15615, line: 229, column: 31)
!15996 = !DILocation(line: 233, column: 55, scope: !15995)
!15997 = !DILocation(line: 234, column: 17, scope: !15995)
!15998 = !DILocation(line: 233, column: 10, scope: !15995)
!15999 = !DILocation(line: 235, column: 29, scope: !15995)
!16000 = !DILocation(line: 235, column: 20, scope: !15995)
!16001 = !DILocation(line: 236, column: 33, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !15995, file: !15615, line: 236, column: 8)
!16003 = !DILocation(line: 236, column: 24, scope: !16002)
!16004 = !DILocation(line: 236, column: 8, scope: !15995)
!16005 = !DILocation(line: 237, column: 29, scope: !16006)
!16006 = distinct !DILexicalBlock(scope: !16002, file: !15615, line: 236, column: 45)
!16007 = !DILocation(line: 237, column: 21, scope: !16006)
!16008 = !DILocation(line: 238, column: 4, scope: !16006)
!16009 = !DILocation(line: 239, column: 19, scope: !15995)
!16010 = !DILocation(line: 0, scope: !15855, inlinedAt: !16011)
!16011 = distinct !DILocation(line: 242, column: 4, scope: !15995)
!16012 = !DILocation(line: 67, column: 15, scope: !15855, inlinedAt: !16011)
!16013 = !DILocation(line: 67, column: 33, scope: !15855, inlinedAt: !16011)
!16014 = !DILocation(line: 243, column: 4, scope: !15995)
!16015 = !DILocation(line: 244, column: 4, scope: !15995)
!16016 = !DILocation(line: 248, column: 4, scope: !15995)
!16017 = !DILocation(line: 251, column: 13, scope: !15971)
!16018 = !DILocation(line: 258, column: 3, scope: !16019)
!16019 = distinct !DILexicalBlock(scope: !16020, file: !15615, line: 254, column: 9)
!16020 = distinct !DILexicalBlock(scope: !15971, file: !15615, line: 251, column: 13)
!16021 = !DILocation(line: 258, column: 18, scope: !16019)
!16022 = !DILocation(line: 258, column: 28, scope: !16019)
!16023 = !DILocation(line: 260, column: 49, scope: !16019)
!16024 = !DILocation(line: 260, column: 12, scope: !16019)
!16025 = !DILocation(line: 262, column: 3, scope: !16019)
!16026 = !DILocation(line: 0, scope: !15971)
!16027 = !DILocation(line: 0, scope: !15894, inlinedAt: !16028)
!16028 = distinct !DILocation(line: 267, column: 2, scope: !15939)
!16029 = !DILocation(line: 194, column: 2, scope: !15902, inlinedAt: !16028)
!16030 = !DILocation(line: 194, column: 2, scope: !15903, inlinedAt: !16028)
!16031 = !DILocation(line: 194, column: 2, scope: !15906, inlinedAt: !16028)
!16032 = !DILocation(line: 0, scope: !15908, inlinedAt: !16033)
!16033 = distinct !DILocation(line: 215, column: 2, scope: !15894, inlinedAt: !16028)
!16034 = !DILocation(line: 95, column: 2, scope: !15908, inlinedAt: !16033)
!16035 = !DILocation(line: 269, column: 2, scope: !15939)
!16036 = !DILocation(line: 270, column: 1, scope: !15939)
!16037 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !15615, file: !15615, line: 284, type: !16038, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !16040)
!16038 = !DISubroutineType(types: !16039)
!16039 = !{!105, !15618, !104}
!16040 = !{!16041, !16042, !16043, !16044}
!16041 = !DILocalVariable(name: "msgq", arg: 1, scope: !16037, file: !15615, line: 284, type: !15618)
!16042 = !DILocalVariable(name: "data", arg: 2, scope: !16037, file: !15615, line: 284, type: !104)
!16043 = !DILocalVariable(name: "key", scope: !16037, file: !15615, line: 286, type: !15793)
!16044 = !DILocalVariable(name: "result", scope: !16037, file: !15615, line: 287, type: !105)
!16045 = !DILocation(line: 0, scope: !16037)
!16046 = !DILocation(line: 289, column: 27, scope: !16037)
!16047 = !DILocation(line: 0, scope: !15816, inlinedAt: !16048)
!16048 = distinct !DILocation(line: 289, column: 8, scope: !16037)
!16049 = !DILocation(line: 55, column: 2, scope: !15825, inlinedAt: !16050)
!16050 = distinct !DILocation(line: 145, column: 10, scope: !15816, inlinedAt: !16048)
!16051 = !DILocation(line: 0, scope: !15825, inlinedAt: !16050)
!16052 = !DILocation(line: 148, column: 2, scope: !15833, inlinedAt: !16048)
!16053 = !DILocation(line: 148, column: 2, scope: !15834, inlinedAt: !16048)
!16054 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !16048)
!16055 = !DILocation(line: 160, column: 2, scope: !15816, inlinedAt: !16048)
!16056 = !DILocation(line: 291, column: 12, scope: !16057)
!16057 = distinct !DILexicalBlock(scope: !16037, file: !15615, line: 291, column: 6)
!16058 = !DILocation(line: 291, column: 22, scope: !16057)
!16059 = !DILocation(line: 291, column: 6, scope: !16037)
!16060 = !DILocation(line: 293, column: 28, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16057, file: !15615, line: 291, column: 28)
!16062 = !DILocation(line: 293, column: 44, scope: !16061)
!16063 = !DILocation(line: 293, column: 9, scope: !16061)
!16064 = !DILocation(line: 295, column: 2, scope: !16061)
!16065 = !DILocation(line: 0, scope: !16057)
!16066 = !DILocation(line: 0, scope: !15894, inlinedAt: !16067)
!16067 = distinct !DILocation(line: 302, column: 2, scope: !16037)
!16068 = !DILocation(line: 194, column: 2, scope: !15902, inlinedAt: !16067)
!16069 = !DILocation(line: 194, column: 2, scope: !15903, inlinedAt: !16067)
!16070 = !DILocation(line: 194, column: 2, scope: !15906, inlinedAt: !16067)
!16071 = !DILocation(line: 0, scope: !15908, inlinedAt: !16072)
!16072 = distinct !DILocation(line: 215, column: 2, scope: !15894, inlinedAt: !16067)
!16073 = !DILocation(line: 95, column: 2, scope: !15908, inlinedAt: !16072)
!16074 = !DILocation(line: 304, column: 2, scope: !16037)
!16075 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !15615, file: !15615, line: 318, type: !16076, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3228, retainedNodes: !16078)
!16076 = !DISubroutineType(types: !16077)
!16077 = !{null, !15618}
!16078 = !{!16079, !16080, !16081}
!16079 = !DILocalVariable(name: "msgq", arg: 1, scope: !16075, file: !15615, line: 318, type: !15618)
!16080 = !DILocalVariable(name: "key", scope: !16075, file: !15615, line: 320, type: !15793)
!16081 = !DILocalVariable(name: "pending_thread", scope: !16075, file: !15615, line: 321, type: !3246)
!16082 = !DILocation(line: 0, scope: !16075)
!16083 = !DILocation(line: 323, column: 27, scope: !16075)
!16084 = !DILocation(line: 0, scope: !15816, inlinedAt: !16085)
!16085 = distinct !DILocation(line: 323, column: 8, scope: !16075)
!16086 = !DILocation(line: 55, column: 2, scope: !15825, inlinedAt: !16087)
!16087 = distinct !DILocation(line: 145, column: 10, scope: !15816, inlinedAt: !16085)
!16088 = !DILocation(line: 0, scope: !15825, inlinedAt: !16087)
!16089 = !DILocation(line: 148, column: 2, scope: !15833, inlinedAt: !16085)
!16090 = !DILocation(line: 148, column: 2, scope: !15834, inlinedAt: !16085)
!16091 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !16085)
!16092 = !DILocation(line: 160, column: 2, scope: !15816, inlinedAt: !16085)
!16093 = !DILocation(line: 328, column: 27, scope: !16075)
!16094 = !DILocation(line: 328, column: 65, scope: !16075)
!16095 = !DILocation(line: 328, column: 2, scope: !16075)
!16096 = !DILocation(line: 0, scope: !15855, inlinedAt: !16097)
!16097 = distinct !DILocation(line: 329, column: 3, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !16075, file: !15615, line: 328, column: 74)
!16099 = !DILocation(line: 67, column: 15, scope: !15855, inlinedAt: !16097)
!16100 = !DILocation(line: 67, column: 33, scope: !15855, inlinedAt: !16097)
!16101 = !DILocation(line: 330, column: 3, scope: !16098)
!16102 = distinct !{!16102, !16095, !16103}
!16103 = !DILocation(line: 331, column: 2, scope: !16075)
!16104 = !DILocation(line: 333, column: 8, scope: !16075)
!16105 = !DILocation(line: 333, column: 18, scope: !16075)
!16106 = !DILocation(line: 334, column: 25, scope: !16075)
!16107 = !DILocation(line: 334, column: 8, scope: !16075)
!16108 = !DILocation(line: 334, column: 17, scope: !16075)
!16109 = !DILocation(line: 336, column: 2, scope: !16075)
!16110 = !DILocation(line: 337, column: 1, scope: !16075)
!16111 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2452, file: !2452, line: 41, type: !16112, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !16125)
!16112 = !DISubroutineType(types: !16113)
!16113 = !{!105, !16114, !32, !32}
!16114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16115, size: 32)
!16115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !16116)
!16116 = !{!16117, !16123, !16124}
!16117 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16115, file: !122, line: 2910, baseType: !16118, size: 64)
!16118 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !16119)
!16119 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !16120)
!16120 = !{!16121}
!16121 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16119, file: !163, line: 232, baseType: !16122, size: 64)
!16122 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2438)
!16123 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !16115, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!16124 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !16115, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!16125 = !{!16126, !16127, !16128}
!16126 = !DILocalVariable(name: "sem", arg: 1, scope: !16111, file: !2452, line: 41, type: !16114)
!16127 = !DILocalVariable(name: "initial_count", arg: 2, scope: !16111, file: !2452, line: 41, type: !32)
!16128 = !DILocalVariable(name: "limit", arg: 3, scope: !16111, file: !2452, line: 42, type: !32)
!16129 = !DILocation(line: 0, scope: !16111)
!16130 = !DILocation(line: 47, column: 2, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16111, file: !2452, line: 47, column: 2)
!16132 = !DILocation(line: 53, column: 7, scope: !16111)
!16133 = !DILocation(line: 53, column: 13, scope: !16111)
!16134 = !DILocation(line: 54, column: 7, scope: !16111)
!16135 = !DILocation(line: 54, column: 13, scope: !16111)
!16136 = !DILocation(line: 58, column: 21, scope: !16111)
!16137 = !DILocation(line: 58, column: 2, scope: !16111)
!16138 = !DILocation(line: 64, column: 2, scope: !16111)
!16139 = !DILocation(line: 65, column: 1, scope: !16111)
!16140 = distinct !DISubprogram(name: "z_waitq_init", scope: !15192, file: !15192, line: 47, type: !16141, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !16144)
!16141 = !DISubroutineType(types: !16142)
!16142 = !{null, !16143}
!16143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16118, size: 32)
!16144 = !{!16145}
!16145 = !DILocalVariable(name: "w", arg: 1, scope: !16140, file: !15192, line: 47, type: !16143)
!16146 = !DILocation(line: 0, scope: !16140)
!16147 = !DILocation(line: 49, column: 21, scope: !16140)
!16148 = !DILocation(line: 49, column: 2, scope: !16140)
!16149 = !DILocation(line: 50, column: 1, scope: !16140)
!16150 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !16151, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !16154)
!16151 = !DISubroutineType(types: !16152)
!16152 = !{null, !16153}
!16153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16122, size: 32)
!16154 = !{!16155}
!16155 = !DILocalVariable(name: "list", arg: 1, scope: !16150, file: !137, line: 197, type: !16153)
!16156 = !DILocation(line: 0, scope: !16150)
!16157 = !DILocation(line: 199, column: 8, scope: !16150)
!16158 = !DILocation(line: 199, column: 13, scope: !16150)
!16159 = !DILocation(line: 200, column: 8, scope: !16150)
!16160 = !DILocation(line: 200, column: 13, scope: !16150)
!16161 = !DILocation(line: 201, column: 1, scope: !16150)
!16162 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2452, file: !2452, line: 86, type: !16163, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !16165)
!16163 = !DISubroutineType(types: !16164)
!16164 = !{null, !16114}
!16165 = !{!16166, !16167, !16172}
!16166 = !DILocalVariable(name: "sem", arg: 1, scope: !16162, file: !2452, line: 86, type: !16114)
!16167 = !DILocalVariable(name: "key", scope: !16162, file: !2452, line: 88, type: !16168)
!16168 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !16169)
!16169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !16170)
!16170 = !{!16171}
!16171 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16169, file: !236, line: 33, baseType: !105, size: 32)
!16172 = !DILocalVariable(name: "thread", scope: !16162, file: !2452, line: 89, type: !16173)
!16173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16174, size: 32)
!16174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !16175)
!16175 = !{!16176, !16214, !16226, !16227, !16228, !16229, !16235, !16247}
!16176 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !16174, file: !127, line: 247, baseType: !16177, size: 384)
!16177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !16178)
!16178 = !{!16179, !16189, !16190, !16191, !16192, !16201, !16202, !16203}
!16179 = !DIDerivedType(tag: DW_TAG_member, scope: !16177, file: !127, line: 60, baseType: !16180, size: 64)
!16180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16177, file: !127, line: 60, size: 64, elements: !16181)
!16181 = !{!16182, !16183}
!16182 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !16180, file: !127, line: 61, baseType: !2437, size: 64)
!16183 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !16180, file: !127, line: 62, baseType: !16184, size: 64)
!16184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !16185)
!16185 = !{!16186}
!16186 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !16184, file: !153, line: 50, baseType: !16187, size: 64)
!16187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16188, size: 64, elements: !158)
!16188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16184, size: 32)
!16189 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !16177, file: !127, line: 68, baseType: !16143, size: 32, offset: 64)
!16190 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !16177, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!16191 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !16177, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!16192 = !DIDerivedType(tag: DW_TAG_member, scope: !16177, file: !127, line: 90, baseType: !16193, size: 16, offset: 112)
!16193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16177, file: !127, line: 90, size: 16, elements: !16194)
!16194 = !{!16195, !16200}
!16195 = !DIDerivedType(tag: DW_TAG_member, scope: !16193, file: !127, line: 91, baseType: !16196, size: 16)
!16196 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16193, file: !127, line: 91, size: 16, elements: !16197)
!16197 = !{!16198, !16199}
!16198 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !16196, file: !127, line: 96, baseType: !179, size: 8)
!16199 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !16196, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!16200 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !16193, file: !127, line: 100, baseType: !183, size: 16)
!16201 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !16177, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!16202 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !16177, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!16203 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !16177, file: !127, line: 131, baseType: !16204, size: 192, offset: 192)
!16204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !16205)
!16205 = !{!16206, !16207, !16213}
!16206 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16204, file: !163, line: 245, baseType: !2437, size: 64)
!16207 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !16204, file: !163, line: 246, baseType: !16208, size: 32, offset: 64)
!16208 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !16209)
!16209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16210, size: 32)
!16210 = !DISubroutineType(types: !16211)
!16211 = !{null, !16212}
!16212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16204, size: 32)
!16213 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !16204, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!16214 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !16174, file: !127, line: 250, baseType: !16215, size: 288, offset: 384)
!16215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !16216)
!16216 = !{!16217, !16218, !16219, !16220, !16221, !16222, !16223, !16224, !16225}
!16217 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !16215, file: !200, line: 26, baseType: !113, size: 32)
!16218 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !16215, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!16219 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !16215, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!16220 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !16215, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!16221 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !16215, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!16222 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !16215, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!16223 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !16215, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!16224 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !16215, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!16225 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !16215, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!16226 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !16174, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!16227 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !16174, file: !127, line: 256, baseType: !16118, size: 64, offset: 704)
!16228 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !16174, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!16229 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !16174, file: !127, line: 300, baseType: !16230, size: 96, offset: 800)
!16230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !16231)
!16231 = !{!16232, !16233, !16234}
!16232 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !16230, file: !127, line: 153, baseType: !22, size: 32)
!16233 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16230, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!16234 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !16230, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!16235 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !16174, file: !127, line: 325, baseType: !16236, size: 32, offset: 896)
!16236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16237, size: 32)
!16237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !16238)
!16238 = !{!16239, !16245, !16246}
!16239 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16237, file: !122, line: 5074, baseType: !16240, size: 96)
!16240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !16241)
!16241 = !{!16242, !16243, !16244}
!16242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16240, file: !226, line: 57, baseType: !229, size: 32)
!16243 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16240, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!16244 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16240, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!16245 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16237, file: !122, line: 5075, baseType: !16118, size: 64, offset: 96)
!16246 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16237, file: !122, line: 5076, baseType: !2453, size: 32, offset: 160)
!16247 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !16174, file: !127, line: 343, baseType: !16248, size: 64, offset: 928)
!16248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !16249)
!16249 = !{!16250, !16251}
!16250 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !16248, file: !200, line: 63, baseType: !113, size: 32)
!16251 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !16248, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!16252 = !DILocation(line: 0, scope: !16162)
!16253 = !DILocalVariable(name: "l", arg: 1, scope: !16254, file: !236, line: 136, type: !16257)
!16254 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !16255, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !16258)
!16255 = !DISubroutineType(types: !16256)
!16256 = !{!16168, !16257}
!16257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 32)
!16258 = !{!16253, !16259}
!16259 = !DILocalVariable(name: "k", scope: !16254, file: !236, line: 139, type: !16168)
!16260 = !DILocation(line: 0, scope: !16254, inlinedAt: !16261)
!16261 = distinct !DILocation(line: 88, column: 25, scope: !16162)
!16262 = !DILocation(line: 55, column: 2, scope: !16263, inlinedAt: !16267)
!16263 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7532, file: !7532, line: 42, type: !7533, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !16264)
!16264 = !{!16265, !16266}
!16265 = !DILocalVariable(name: "key", scope: !16263, file: !7532, line: 44, type: !32)
!16266 = !DILocalVariable(name: "tmp", scope: !16263, file: !7532, line: 53, type: !32)
!16267 = distinct !DILocation(line: 145, column: 10, scope: !16254, inlinedAt: !16261)
!16268 = !{i64 2283538}
!16269 = !DILocation(line: 0, scope: !16263, inlinedAt: !16267)
!16270 = !DILocation(line: 148, column: 2, scope: !16271, inlinedAt: !16261)
!16271 = distinct !DILexicalBlock(scope: !16272, file: !236, line: 148, column: 2)
!16272 = distinct !DILexicalBlock(scope: !16254, file: !236, line: 148, column: 2)
!16273 = !DILocation(line: 148, column: 2, scope: !16272, inlinedAt: !16261)
!16274 = !DILocation(line: 148, column: 2, scope: !16275, inlinedAt: !16261)
!16275 = distinct !DILexicalBlock(scope: !16271, file: !236, line: 148, column: 2)
!16276 = !DILocation(line: 160, column: 2, scope: !16254, inlinedAt: !16261)
!16277 = !DILocation(line: 93, column: 39, scope: !16162)
!16278 = !DILocation(line: 93, column: 11, scope: !16162)
!16279 = !DILocation(line: 95, column: 13, scope: !16280)
!16280 = distinct !DILexicalBlock(scope: !16162, file: !2452, line: 95, column: 6)
!16281 = !DILocation(line: 95, column: 6, scope: !16162)
!16282 = !DILocalVariable(name: "thread", arg: 1, scope: !16283, file: !14872, line: 65, type: !16173)
!16283 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14872, file: !14872, line: 65, type: !16284, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !16286)
!16284 = !DISubroutineType(types: !16285)
!16285 = !{null, !16173, !32}
!16286 = !{!16282, !16287}
!16287 = !DILocalVariable(name: "value", arg: 2, scope: !16283, file: !14872, line: 65, type: !32)
!16288 = !DILocation(line: 0, scope: !16283, inlinedAt: !16289)
!16289 = distinct !DILocation(line: 96, column: 3, scope: !16290)
!16290 = distinct !DILexicalBlock(scope: !16280, file: !2452, line: 95, column: 22)
!16291 = !DILocation(line: 67, column: 15, scope: !16283, inlinedAt: !16289)
!16292 = !DILocation(line: 67, column: 33, scope: !16283, inlinedAt: !16289)
!16293 = !DILocation(line: 97, column: 3, scope: !16290)
!16294 = !DILocation(line: 98, column: 2, scope: !16290)
!16295 = !DILocation(line: 99, column: 23, scope: !16296)
!16296 = distinct !DILexicalBlock(scope: !16280, file: !2452, line: 98, column: 9)
!16297 = !DILocation(line: 99, column: 37, scope: !16296)
!16298 = !DILocation(line: 99, column: 29, scope: !16296)
!16299 = !DILocation(line: 99, column: 17, scope: !16296)
!16300 = !DILocation(line: 99, column: 14, scope: !16296)
!16301 = !DILocation(line: 103, column: 2, scope: !16162)
!16302 = !DILocation(line: 106, column: 1, scope: !16162)
!16303 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2452, file: !2452, line: 117, type: !16304, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !16310)
!16304 = !DISubroutineType(types: !16305)
!16305 = !{!105, !16114, !16306}
!16306 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !16307)
!16307 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !16308)
!16308 = !{!16309}
!16309 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16307, file: !108, line: 66, baseType: !107, size: 64)
!16310 = !{!16311, !16312, !16313, !16314, !16315}
!16311 = !DILocalVariable(name: "sem", arg: 1, scope: !16303, file: !2452, line: 117, type: !16114)
!16312 = !DILocalVariable(name: "timeout", arg: 2, scope: !16303, file: !2452, line: 117, type: !16306)
!16313 = !DILocalVariable(name: "ret", scope: !16303, file: !2452, line: 119, type: !105)
!16314 = !DILocalVariable(name: "key", scope: !16303, file: !2452, line: 124, type: !16168)
!16315 = !DILabel(scope: !16303, name: "out", file: !2452, line: 145)
!16316 = !DILocation(line: 0, scope: !16303)
!16317 = !DILocation(line: 1031, column: 3, scope: !16318, inlinedAt: !16321)
!16318 = distinct !DISubprogram(name: "__get_IPSR", scope: !7850, file: !7850, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !16319)
!16319 = !{!16320}
!16320 = !DILocalVariable(name: "result", scope: !16318, file: !7850, line: 1029, type: !113)
!16321 = distinct !DILocation(line: 48, column: 10, scope: !16322, inlinedAt: !16323)
!16322 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8897, file: !8897, line: 46, type: !8898, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !397)
!16323 = distinct !DILocation(line: 121, column: 2, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16325, file: !2452, line: 121, column: 2)
!16325 = distinct !DILexicalBlock(scope: !16303, file: !2452, line: 121, column: 2)
!16326 = !{i64 3729972}
!16327 = !DILocation(line: 0, scope: !16318, inlinedAt: !16321)
!16328 = !DILocation(line: 48, column: 9, scope: !16322, inlinedAt: !16323)
!16329 = !DILocation(line: 121, column: 2, scope: !16324)
!16330 = !DILocation(line: 121, column: 2, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16324, file: !2452, line: 121, column: 2)
!16332 = !DILocation(line: 0, scope: !16254, inlinedAt: !16333)
!16333 = distinct !DILocation(line: 124, column: 25, scope: !16303)
!16334 = !DILocation(line: 55, column: 2, scope: !16263, inlinedAt: !16335)
!16335 = distinct !DILocation(line: 145, column: 10, scope: !16254, inlinedAt: !16333)
!16336 = !DILocation(line: 0, scope: !16263, inlinedAt: !16335)
!16337 = !DILocation(line: 148, column: 2, scope: !16271, inlinedAt: !16333)
!16338 = !DILocation(line: 148, column: 2, scope: !16272, inlinedAt: !16333)
!16339 = !DILocation(line: 148, column: 2, scope: !16275, inlinedAt: !16333)
!16340 = !DILocation(line: 160, column: 2, scope: !16254, inlinedAt: !16333)
!16341 = !DILocation(line: 128, column: 6, scope: !16342)
!16342 = distinct !DILexicalBlock(scope: !16303, file: !2452, line: 128, column: 6)
!16343 = !DILocation(line: 128, column: 6, scope: !16303)
!16344 = !{!"branch_weights", i32 1, i32 2000}
!16345 = !DILocation(line: 129, column: 13, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !16342, file: !2452, line: 128, column: 31)
!16347 = !DILocalVariable(name: "key", arg: 2, scope: !16348, file: !236, line: 190, type: !16168)
!16348 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !16349, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !16351)
!16349 = !DISubroutineType(types: !16350)
!16350 = !{null, !16257, !16168}
!16351 = !{!16352, !16347}
!16352 = !DILocalVariable(name: "l", arg: 1, scope: !16348, file: !236, line: 189, type: !16257)
!16353 = !DILocation(line: 0, scope: !16348, inlinedAt: !16354)
!16354 = distinct !DILocation(line: 130, column: 3, scope: !16346)
!16355 = !DILocation(line: 194, column: 2, scope: !16356, inlinedAt: !16354)
!16356 = distinct !DILexicalBlock(scope: !16357, file: !236, line: 194, column: 2)
!16357 = distinct !DILexicalBlock(scope: !16348, file: !236, line: 194, column: 2)
!16358 = !DILocation(line: 194, column: 2, scope: !16357, inlinedAt: !16354)
!16359 = !DILocation(line: 194, column: 2, scope: !16360, inlinedAt: !16354)
!16360 = distinct !DILexicalBlock(scope: !16356, file: !236, line: 194, column: 2)
!16361 = !DILocalVariable(name: "key", arg: 1, scope: !16362, file: !7532, line: 84, type: !32)
!16362 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7532, file: !7532, line: 84, type: !7543, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !16363)
!16363 = !{!16361}
!16364 = !DILocation(line: 0, scope: !16362, inlinedAt: !16365)
!16365 = distinct !DILocation(line: 215, column: 2, scope: !16348, inlinedAt: !16354)
!16366 = !DILocation(line: 95, column: 2, scope: !16362, inlinedAt: !16365)
!16367 = !{i64 2284355}
!16368 = !DILocation(line: 132, column: 3, scope: !16346)
!16369 = !DILocation(line: 135, column: 6, scope: !16303)
!16370 = !DILocation(line: 0, scope: !16348, inlinedAt: !16371)
!16371 = distinct !DILocation(line: 136, column: 3, scope: !16372)
!16372 = distinct !DILexicalBlock(scope: !16373, file: !2452, line: 135, column: 40)
!16373 = distinct !DILexicalBlock(scope: !16303, file: !2452, line: 135, column: 6)
!16374 = !DILocation(line: 194, column: 2, scope: !16356, inlinedAt: !16371)
!16375 = !DILocation(line: 194, column: 2, scope: !16357, inlinedAt: !16371)
!16376 = !DILocation(line: 194, column: 2, scope: !16360, inlinedAt: !16371)
!16377 = !DILocation(line: 0, scope: !16362, inlinedAt: !16378)
!16378 = distinct !DILocation(line: 215, column: 2, scope: !16348, inlinedAt: !16371)
!16379 = !DILocation(line: 95, column: 2, scope: !16362, inlinedAt: !16378)
!16380 = !DILocation(line: 138, column: 3, scope: !16372)
!16381 = !DILocation(line: 143, column: 38, scope: !16303)
!16382 = !DILocation(line: 143, column: 8, scope: !16303)
!16383 = !DILocation(line: 143, column: 2, scope: !16303)
!16384 = !DILocation(line: 145, column: 1, scope: !16303)
!16385 = !DILocation(line: 148, column: 2, scope: !16303)
!16386 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2452, file: !2452, line: 151, type: !16163, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !16387)
!16387 = !{!16388, !16389, !16390}
!16388 = !DILocalVariable(name: "sem", arg: 1, scope: !16386, file: !2452, line: 151, type: !16114)
!16389 = !DILocalVariable(name: "thread", scope: !16386, file: !2452, line: 153, type: !16173)
!16390 = !DILocalVariable(name: "key", scope: !16386, file: !2452, line: 154, type: !16168)
!16391 = !DILocation(line: 0, scope: !16386)
!16392 = !DILocation(line: 0, scope: !16254, inlinedAt: !16393)
!16393 = distinct !DILocation(line: 154, column: 25, scope: !16386)
!16394 = !DILocation(line: 55, column: 2, scope: !16263, inlinedAt: !16395)
!16395 = distinct !DILocation(line: 145, column: 10, scope: !16254, inlinedAt: !16393)
!16396 = !DILocation(line: 0, scope: !16263, inlinedAt: !16395)
!16397 = !DILocation(line: 148, column: 2, scope: !16271, inlinedAt: !16393)
!16398 = !DILocation(line: 148, column: 2, scope: !16272, inlinedAt: !16393)
!16399 = !DILocation(line: 148, column: 2, scope: !16275, inlinedAt: !16393)
!16400 = !DILocation(line: 160, column: 2, scope: !16254, inlinedAt: !16393)
!16401 = !DILocation(line: 157, column: 12, scope: !16402)
!16402 = distinct !DILexicalBlock(scope: !16386, file: !2452, line: 156, column: 15)
!16403 = !DILocation(line: 158, column: 14, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16402, file: !2452, line: 158, column: 7)
!16405 = !DILocation(line: 158, column: 7, scope: !16402)
!16406 = !DILocation(line: 0, scope: !16283, inlinedAt: !16407)
!16407 = distinct !DILocation(line: 161, column: 3, scope: !16402)
!16408 = !DILocation(line: 67, column: 15, scope: !16283, inlinedAt: !16407)
!16409 = !DILocation(line: 67, column: 33, scope: !16283, inlinedAt: !16407)
!16410 = !DILocation(line: 162, column: 3, scope: !16402)
!16411 = distinct !{!16411, !16412, !16413}
!16412 = !DILocation(line: 156, column: 2, scope: !16386)
!16413 = !DILocation(line: 163, column: 2, scope: !16386)
!16414 = !DILocation(line: 164, column: 7, scope: !16386)
!16415 = !DILocation(line: 164, column: 13, scope: !16386)
!16416 = !DILocation(line: 170, column: 2, scope: !16386)
!16417 = !DILocation(line: 171, column: 1, scope: !16386)
!16418 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2568, file: !2568, line: 93, type: !16419, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16421)
!16419 = !DISubroutineType(types: !16420)
!16420 = !{!116, !2461, !2461}
!16421 = !{!16422, !16423, !16424, !16425}
!16422 = !DILocalVariable(name: "thread_1", arg: 1, scope: !16418, file: !2568, line: 93, type: !2461)
!16423 = !DILocalVariable(name: "thread_2", arg: 2, scope: !16418, file: !2568, line: 94, type: !2461)
!16424 = !DILocalVariable(name: "b1", scope: !16418, file: !2568, line: 97, type: !116)
!16425 = !DILocalVariable(name: "b2", scope: !16418, file: !2568, line: 98, type: !116)
!16426 = !DILocation(line: 0, scope: !16418)
!16427 = !DILocation(line: 97, column: 30, scope: !16418)
!16428 = !DILocation(line: 98, column: 30, scope: !16418)
!16429 = !DILocation(line: 100, column: 9, scope: !16430)
!16430 = distinct !DILexicalBlock(scope: !16418, file: !2568, line: 100, column: 6)
!16431 = !DILocation(line: 100, column: 6, scope: !16418)
!16432 = !DILocation(line: 125, column: 1, scope: !16418)
!16433 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2568, file: !2568, line: 428, type: !16434, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16436)
!16434 = !DISubroutineType(types: !16435)
!16435 = !{null, !2461}
!16436 = !{!16437}
!16437 = !DILocalVariable(name: "curr", arg: 1, scope: !16433, file: !2568, line: 428, type: !2461)
!16438 = !DILocation(line: 0, scope: !16433)
!16439 = !DILocation(line: 434, column: 6, scope: !16440)
!16440 = distinct !DILexicalBlock(scope: !16433, file: !2568, line: 434, column: 6)
!16441 = !DILocation(line: 434, column: 23, scope: !16440)
!16442 = !DILocation(line: 434, column: 6, scope: !16433)
!16443 = !DILocation(line: 435, column: 50, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16440, file: !2568, line: 434, column: 29)
!16445 = !DILocation(line: 435, column: 48, scope: !16444)
!16446 = !DILocation(line: 435, column: 29, scope: !16444)
!16447 = !DILocation(line: 436, column: 24, scope: !16444)
!16448 = !DILocation(line: 436, column: 3, scope: !16444)
!16449 = !DILocation(line: 437, column: 2, scope: !16444)
!16450 = !DILocation(line: 438, column: 1, scope: !16433)
!16451 = distinct !DISubprogram(name: "slice_time", scope: !2568, file: !2568, line: 407, type: !16452, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16454)
!16452 = !DISubroutineType(types: !16453)
!16453 = !{!105, !2461}
!16454 = !{!16455, !16456}
!16455 = !DILocalVariable(name: "curr", arg: 1, scope: !16451, file: !2568, line: 407, type: !2461)
!16456 = !DILocalVariable(name: "ret", scope: !16451, file: !2568, line: 409, type: !105)
!16457 = !DILocation(line: 0, scope: !16451)
!16458 = !DILocation(line: 409, column: 12, scope: !16451)
!16459 = !DILocation(line: 416, column: 2, scope: !16451)
!16460 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2568, file: !2568, line: 440, type: !16461, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16463)
!16461 = !DISubroutineType(types: !16462)
!16462 = !{null, !116, !105}
!16463 = !{!16464, !16465, !16466, !16472}
!16464 = !DILocalVariable(name: "slice", arg: 1, scope: !16460, file: !2568, line: 440, type: !116)
!16465 = !DILocalVariable(name: "prio", arg: 2, scope: !16460, file: !2568, line: 440, type: !105)
!16466 = !DILocalVariable(name: "__i", scope: !16467, file: !2568, line: 442, type: !16468)
!16467 = distinct !DILexicalBlock(scope: !16460, file: !2568, line: 442, column: 2)
!16468 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !16469)
!16469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !16470)
!16470 = !{!16471}
!16471 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16469, file: !236, line: 33, baseType: !105, size: 32)
!16472 = !DILocalVariable(name: "__key", scope: !16467, file: !2568, line: 442, type: !16468)
!16473 = !DILocation(line: 0, scope: !16460)
!16474 = !DILocation(line: 0, scope: !16467)
!16475 = !DILocalVariable(name: "l", arg: 1, scope: !16476, file: !236, line: 136, type: !16479)
!16476 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !16477, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16480)
!16477 = !DISubroutineType(types: !16478)
!16478 = !{!16468, !16479}
!16479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 32)
!16480 = !{!16475, !16481}
!16481 = !DILocalVariable(name: "k", scope: !16476, file: !236, line: 139, type: !16468)
!16482 = !DILocation(line: 0, scope: !16476, inlinedAt: !16483)
!16483 = distinct !DILocation(line: 442, column: 2, scope: !16467)
!16484 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !16489)
!16485 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7532, file: !7532, line: 42, type: !7533, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16486)
!16486 = !{!16487, !16488}
!16487 = !DILocalVariable(name: "key", scope: !16485, file: !7532, line: 44, type: !32)
!16488 = !DILocalVariable(name: "tmp", scope: !16485, file: !7532, line: 53, type: !32)
!16489 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !16483)
!16490 = !{i64 2325947}
!16491 = !DILocation(line: 0, scope: !16485, inlinedAt: !16489)
!16492 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !16483)
!16493 = distinct !DILexicalBlock(scope: !16494, file: !236, line: 148, column: 2)
!16494 = distinct !DILexicalBlock(scope: !16476, file: !236, line: 148, column: 2)
!16495 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !16483)
!16496 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !16483)
!16497 = distinct !DILexicalBlock(scope: !16493, file: !236, line: 148, column: 2)
!16498 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !16483)
!16499 = !DILocation(line: 443, column: 29, scope: !16500)
!16500 = distinct !DILexicalBlock(scope: !16501, file: !2568, line: 442, column: 26)
!16501 = distinct !DILexicalBlock(scope: !16467, file: !2568, line: 442, column: 2)
!16502 = !DILocation(line: 444, column: 17, scope: !16500)
!16503 = !DILocation(line: 445, column: 51, scope: !16504)
!16504 = distinct !DILexicalBlock(scope: !16500, file: !2568, line: 445, column: 7)
!16505 = !DILocation(line: 445, column: 7, scope: !16500)
!16506 = !DILocation(line: 0, scope: !16500)
!16507 = !DILocation(line: 451, column: 18, scope: !16500)
!16508 = !DILocation(line: 452, column: 3, scope: !16500)
!16509 = !DILocalVariable(name: "key", arg: 2, scope: !16510, file: !236, line: 190, type: !16468)
!16510 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !16511, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16513)
!16511 = !DISubroutineType(types: !16512)
!16512 = !{null, !16479, !16468}
!16513 = !{!16514, !16509}
!16514 = !DILocalVariable(name: "l", arg: 1, scope: !16510, file: !236, line: 189, type: !16479)
!16515 = !DILocation(line: 0, scope: !16510, inlinedAt: !16516)
!16516 = distinct !DILocation(line: 442, column: 2, scope: !16501)
!16517 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !16516)
!16518 = distinct !DILexicalBlock(scope: !16519, file: !236, line: 194, column: 2)
!16519 = distinct !DILexicalBlock(scope: !16510, file: !236, line: 194, column: 2)
!16520 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !16516)
!16521 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !16516)
!16522 = distinct !DILexicalBlock(scope: !16518, file: !236, line: 194, column: 2)
!16523 = !DILocalVariable(name: "key", arg: 1, scope: !16524, file: !7532, line: 84, type: !32)
!16524 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7532, file: !7532, line: 84, type: !7543, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16525)
!16525 = !{!16523}
!16526 = !DILocation(line: 0, scope: !16524, inlinedAt: !16527)
!16527 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !16516)
!16528 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !16527)
!16529 = !{i64 2326764}
!16530 = !DILocation(line: 454, column: 1, scope: !16460)
!16531 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !15448, file: !15448, line: 389, type: !9131, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16532)
!16532 = !{!16533}
!16533 = !DILocalVariable(name: "t", arg: 1, scope: !16531, file: !15448, line: 389, type: !113)
!16534 = !DILocation(line: 0, scope: !16531)
!16535 = !DILocalVariable(name: "t", arg: 1, scope: !16536, file: !15448, line: 102, type: !114)
!16536 = distinct !DISubprogram(name: "z_tmcvt", scope: !15448, file: !15448, line: 102, type: !15456, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16537)
!16537 = !{!16535, !16538, !16539, !16540, !16541, !16542, !16543, !16544, !16545, !16546, !16547}
!16538 = !DILocalVariable(name: "from_hz", arg: 2, scope: !16536, file: !15448, line: 102, type: !113)
!16539 = !DILocalVariable(name: "to_hz", arg: 3, scope: !16536, file: !15448, line: 103, type: !113)
!16540 = !DILocalVariable(name: "const_hz", arg: 4, scope: !16536, file: !15448, line: 103, type: !492)
!16541 = !DILocalVariable(name: "result32", arg: 5, scope: !16536, file: !15448, line: 104, type: !492)
!16542 = !DILocalVariable(name: "round_up", arg: 6, scope: !16536, file: !15448, line: 104, type: !492)
!16543 = !DILocalVariable(name: "round_off", arg: 7, scope: !16536, file: !15448, line: 105, type: !492)
!16544 = !DILocalVariable(name: "mul_ratio", scope: !16536, file: !15448, line: 107, type: !492)
!16545 = !DILocalVariable(name: "div_ratio", scope: !16536, file: !15448, line: 109, type: !492)
!16546 = !DILocalVariable(name: "off", scope: !16536, file: !15448, line: 116, type: !114)
!16547 = !DILocalVariable(name: "rdivisor", scope: !16548, file: !15448, line: 119, type: !113)
!16548 = distinct !DILexicalBlock(scope: !16549, file: !15448, line: 118, column: 18)
!16549 = distinct !DILexicalBlock(scope: !16536, file: !15448, line: 118, column: 6)
!16550 = !DILocation(line: 0, scope: !16536, inlinedAt: !16551)
!16551 = distinct !DILocation(line: 392, column: 9, scope: !16531)
!16552 = !DILocation(line: 143, column: 25, scope: !16553, inlinedAt: !16551)
!16553 = distinct !DILexicalBlock(scope: !16554, file: !15448, line: 142, column: 17)
!16554 = distinct !DILexicalBlock(scope: !16555, file: !15448, line: 142, column: 7)
!16555 = distinct !DILexicalBlock(scope: !16556, file: !15448, line: 141, column: 24)
!16556 = distinct !DILexicalBlock(scope: !16557, file: !15448, line: 141, column: 13)
!16557 = distinct !DILexicalBlock(scope: !16536, file: !15448, line: 134, column: 6)
!16558 = !DILocation(line: 392, column: 2, scope: !16531)
!16559 = distinct !DISubprogram(name: "z_time_slice", scope: !2568, file: !2568, line: 502, type: !9784, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16560)
!16560 = !{!16561, !16562}
!16561 = !DILocalVariable(name: "ticks", arg: 1, scope: !16559, file: !2568, line: 502, type: !105)
!16562 = !DILocalVariable(name: "key", scope: !16559, file: !2568, line: 511, type: !16468)
!16563 = !DILocation(line: 0, scope: !16559)
!16564 = !DILocation(line: 0, scope: !16476, inlinedAt: !16565)
!16565 = distinct !DILocation(line: 511, column: 25, scope: !16559)
!16566 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !16567)
!16567 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !16565)
!16568 = !DILocation(line: 0, scope: !16485, inlinedAt: !16567)
!16569 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !16565)
!16570 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !16565)
!16571 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !16565)
!16572 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !16565)
!16573 = !DILocation(line: 514, column: 6, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16559, file: !2568, line: 514, column: 6)
!16575 = !DILocation(line: 514, column: 25, scope: !16574)
!16576 = !DILocation(line: 514, column: 22, scope: !16574)
!16577 = !DILocation(line: 514, column: 6, scope: !16559)
!16578 = !DILocation(line: 515, column: 3, scope: !16579)
!16579 = distinct !DILexicalBlock(scope: !16574, file: !2568, line: 514, column: 35)
!16580 = !DILocation(line: 0, scope: !16510, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 516, column: 3, scope: !16579)
!16582 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !16581)
!16583 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !16581)
!16584 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !16581)
!16585 = !DILocation(line: 0, scope: !16524, inlinedAt: !16586)
!16586 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !16581)
!16587 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !16586)
!16588 = !DILocation(line: 517, column: 3, scope: !16579)
!16589 = !DILocation(line: 519, column: 18, scope: !16559)
!16590 = !DILocation(line: 522, column: 6, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16559, file: !2568, line: 522, column: 6)
!16592 = !DILocation(line: 522, column: 27, scope: !16591)
!16593 = !DILocation(line: 522, column: 30, scope: !16591)
!16594 = !DILocation(line: 522, column: 6, scope: !16559)
!16595 = !DILocation(line: 523, column: 30, scope: !16596)
!16596 = distinct !DILexicalBlock(scope: !16597, file: !2568, line: 523, column: 7)
!16597 = distinct !DILexicalBlock(scope: !16591, file: !2568, line: 522, column: 51)
!16598 = !DILocation(line: 523, column: 13, scope: !16596)
!16599 = !DILocation(line: 523, column: 7, scope: !16597)
!16600 = !DILocation(line: 530, column: 10, scope: !16601)
!16601 = distinct !DILexicalBlock(scope: !16596, file: !2568, line: 523, column: 43)
!16602 = !DILocation(line: 531, column: 3, scope: !16601)
!16603 = !DILocation(line: 532, column: 30, scope: !16604)
!16604 = distinct !DILexicalBlock(scope: !16596, file: !2568, line: 531, column: 10)
!16605 = !DILocation(line: 535, column: 29, scope: !16606)
!16606 = distinct !DILexicalBlock(scope: !16591, file: !2568, line: 534, column: 9)
!16607 = !DILocation(line: 0, scope: !16510, inlinedAt: !16608)
!16608 = distinct !DILocation(line: 537, column: 2, scope: !16559)
!16609 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !16608)
!16610 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !16608)
!16611 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !16608)
!16612 = !DILocation(line: 0, scope: !16524, inlinedAt: !16613)
!16613 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !16608)
!16614 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !16613)
!16615 = !DILocation(line: 538, column: 1, scope: !16559)
!16616 = distinct !DISubprogram(name: "sliceable", scope: !2568, file: !2568, line: 468, type: !16617, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16619)
!16617 = !DISubroutineType(types: !16618)
!16618 = !{!492, !2461}
!16619 = !{!16620, !16621}
!16620 = !DILocalVariable(name: "thread", arg: 1, scope: !16616, file: !2568, line: 468, type: !2461)
!16621 = !DILocalVariable(name: "ret", scope: !16616, file: !2568, line: 470, type: !492)
!16622 = !DILocation(line: 0, scope: !16616)
!16623 = !DILocation(line: 470, column: 13, scope: !16616)
!16624 = !DILocation(line: 471, column: 3, scope: !16616)
!16625 = !DILocation(line: 471, column: 7, scope: !16616)
!16626 = !DILocation(line: 472, column: 3, scope: !16616)
!16627 = !DILocation(line: 472, column: 37, scope: !16616)
!16628 = !DILocation(line: 472, column: 24, scope: !16616)
!16629 = !DILocation(line: 472, column: 43, scope: !16616)
!16630 = !DILocation(line: 472, column: 7, scope: !16616)
!16631 = !DILocation(line: 473, column: 3, scope: !16616)
!16632 = !DILocation(line: 473, column: 7, scope: !16616)
!16633 = !DILocation(line: 473, column: 6, scope: !16616)
!16634 = !DILocation(line: 479, column: 2, scope: !16616)
!16635 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2568, file: !2568, line: 482, type: !16636, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16638)
!16636 = !DISubroutineType(types: !16637)
!16637 = !{!16468, !16468}
!16638 = !{!16639, !16640}
!16639 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !16635, file: !2568, line: 482, type: !16468)
!16640 = !DILocalVariable(name: "curr", scope: !16635, file: !2568, line: 484, type: !2461)
!16641 = !DILocation(line: 0, scope: !16635)
!16642 = !DILocation(line: 484, column: 26, scope: !16635)
!16643 = !DILocation(line: 493, column: 7, scope: !16644)
!16644 = distinct !DILexicalBlock(scope: !16635, file: !2568, line: 493, column: 6)
!16645 = !DILocation(line: 493, column: 6, scope: !16635)
!16646 = !DILocation(line: 494, column: 3, scope: !16647)
!16647 = distinct !DILexicalBlock(scope: !16644, file: !2568, line: 493, column: 49)
!16648 = !DILocation(line: 495, column: 2, scope: !16647)
!16649 = !DILocation(line: 496, column: 2, scope: !16635)
!16650 = !DILocation(line: 499, column: 1, scope: !16635)
!16651 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14831, file: !14831, line: 106, type: !16617, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16652)
!16652 = !{!16653, !16654}
!16653 = !DILocalVariable(name: "thread", arg: 1, scope: !16651, file: !14831, line: 106, type: !2461)
!16654 = !DILocalVariable(name: "state", scope: !16651, file: !14831, line: 108, type: !169)
!16655 = !DILocation(line: 0, scope: !16651)
!16656 = !DILocation(line: 108, column: 31, scope: !16651)
!16657 = !DILocation(line: 110, column: 16, scope: !16651)
!16658 = !DILocation(line: 111, column: 41, scope: !16651)
!16659 = !DILocation(line: 110, column: 2, scope: !16651)
!16660 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2568, file: !2568, line: 393, type: !16434, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16661)
!16661 = !{!16662}
!16662 = !DILocalVariable(name: "thread", arg: 1, scope: !16660, file: !2568, line: 393, type: !2461)
!16663 = !DILocation(line: 0, scope: !16660)
!16664 = !DILocation(line: 395, column: 6, scope: !16665)
!16665 = distinct !DILexicalBlock(scope: !16660, file: !2568, line: 395, column: 6)
!16666 = !DILocation(line: 395, column: 6, scope: !16660)
!16667 = !DILocalVariable(name: "thread", arg: 1, scope: !16668, file: !2568, line: 264, type: !2461)
!16668 = distinct !DISubprogram(name: "dequeue_thread", scope: !2568, file: !2568, line: 264, type: !16434, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16669)
!16669 = !{!16667}
!16670 = !DILocation(line: 0, scope: !16668, inlinedAt: !16671)
!16671 = distinct !DILocation(line: 396, column: 3, scope: !16672)
!16672 = distinct !DILexicalBlock(scope: !16665, file: !2568, line: 395, column: 34)
!16673 = !DILocation(line: 266, column: 15, scope: !16668, inlinedAt: !16671)
!16674 = !DILocation(line: 266, column: 28, scope: !16668, inlinedAt: !16671)
!16675 = !DILocalVariable(name: "thread", arg: 1, scope: !16676, file: !2568, line: 232, type: !2461)
!16676 = distinct !DISubprogram(name: "runq_remove", scope: !2568, file: !2568, line: 232, type: !16434, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16677)
!16677 = !{!16675}
!16678 = !DILocation(line: 0, scope: !16676, inlinedAt: !16679)
!16679 = distinct !DILocation(line: 268, column: 3, scope: !16680, inlinedAt: !16671)
!16680 = distinct !DILexicalBlock(scope: !16681, file: !2568, line: 267, column: 35)
!16681 = distinct !DILexicalBlock(scope: !16668, file: !2568, line: 267, column: 6)
!16682 = !DILocation(line: 234, column: 2, scope: !16676, inlinedAt: !16679)
!16683 = !DILocation(line: 397, column: 2, scope: !16672)
!16684 = !DILocalVariable(name: "thread", arg: 1, scope: !16685, file: !2568, line: 250, type: !2461)
!16685 = distinct !DISubprogram(name: "queue_thread", scope: !2568, file: !2568, line: 250, type: !16434, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16686)
!16686 = !{!16684}
!16687 = !DILocation(line: 0, scope: !16685, inlinedAt: !16688)
!16688 = distinct !DILocation(line: 398, column: 2, scope: !16660)
!16689 = !DILocation(line: 252, column: 15, scope: !16685, inlinedAt: !16688)
!16690 = !DILocation(line: 252, column: 28, scope: !16685, inlinedAt: !16688)
!16691 = !DILocalVariable(name: "thread", arg: 1, scope: !16692, file: !2568, line: 227, type: !2461)
!16692 = distinct !DISubprogram(name: "runq_add", scope: !2568, file: !2568, line: 227, type: !16434, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16693)
!16693 = !{!16691}
!16694 = !DILocation(line: 0, scope: !16692, inlinedAt: !16695)
!16695 = distinct !DILocation(line: 254, column: 3, scope: !16696, inlinedAt: !16688)
!16696 = distinct !DILexicalBlock(scope: !16697, file: !2568, line: 253, column: 35)
!16697 = distinct !DILexicalBlock(scope: !16685, file: !2568, line: 253, column: 6)
!16698 = !DILocalVariable(name: "pq", arg: 1, scope: !16699, file: !2568, line: 181, type: !16702)
!16699 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2568, file: !2568, line: 181, type: !16700, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16703)
!16700 = !DISubroutineType(types: !16701)
!16701 = !{null, !16702, !2461}
!16702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 32)
!16703 = !{!16698, !16704, !16705}
!16704 = !DILocalVariable(name: "thread", arg: 2, scope: !16699, file: !2568, line: 182, type: !2461)
!16705 = !DILocalVariable(name: "t", scope: !16699, file: !2568, line: 184, type: !2461)
!16706 = !DILocation(line: 0, scope: !16699, inlinedAt: !16707)
!16707 = distinct !DILocation(line: 229, column: 2, scope: !16692, inlinedAt: !16695)
!16708 = !DILocation(line: 186, column: 2, scope: !16709, inlinedAt: !16707)
!16709 = distinct !DILexicalBlock(scope: !16710, file: !2568, line: 186, column: 2)
!16710 = distinct !DILexicalBlock(scope: !16699, file: !2568, line: 186, column: 2)
!16711 = !DILocation(line: 186, column: 2, scope: !16710, inlinedAt: !16707)
!16712 = !DILocation(line: 186, column: 2, scope: !16713, inlinedAt: !16707)
!16713 = distinct !DILexicalBlock(scope: !16709, file: !2568, line: 186, column: 2)
!16714 = !DILocation(line: 188, column: 2, scope: !16715, inlinedAt: !16707)
!16715 = distinct !DILexicalBlock(scope: !16699, file: !2568, line: 188, column: 2)
!16716 = !DILocation(line: 188, column: 2, scope: !16717, inlinedAt: !16707)
!16717 = distinct !DILexicalBlock(scope: !16715, file: !2568, line: 188, column: 2)
!16718 = !DILocation(line: 0, scope: !16715, inlinedAt: !16707)
!16719 = !DILocation(line: 189, column: 7, scope: !16720, inlinedAt: !16707)
!16720 = distinct !DILexicalBlock(scope: !16721, file: !2568, line: 189, column: 7)
!16721 = distinct !DILexicalBlock(scope: !16717, file: !2568, line: 188, column: 56)
!16722 = !DILocation(line: 189, column: 35, scope: !16720, inlinedAt: !16707)
!16723 = !DILocation(line: 189, column: 7, scope: !16721, inlinedAt: !16707)
!16724 = !DILocation(line: 191, column: 21, scope: !16725, inlinedAt: !16707)
!16725 = distinct !DILexicalBlock(scope: !16720, file: !2568, line: 189, column: 40)
!16726 = !DILocation(line: 190, column: 4, scope: !16725, inlinedAt: !16707)
!16727 = !DILocation(line: 192, column: 4, scope: !16725, inlinedAt: !16707)
!16728 = distinct !{!16728, !16714, !16729}
!16729 = !DILocation(line: 194, column: 2, scope: !16715, inlinedAt: !16707)
!16730 = !DILocation(line: 196, column: 37, scope: !16699, inlinedAt: !16707)
!16731 = !DILocation(line: 196, column: 2, scope: !16699, inlinedAt: !16707)
!16732 = !DILocation(line: 197, column: 1, scope: !16699, inlinedAt: !16707)
!16733 = !DILocation(line: 399, column: 25, scope: !16660)
!16734 = !DILocation(line: 399, column: 22, scope: !16660)
!16735 = !DILocation(line: 399, column: 2, scope: !16660)
!16736 = !DILocation(line: 400, column: 1, scope: !16660)
!16737 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14831, file: !14831, line: 136, type: !16617, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16738)
!16738 = !{!16739}
!16739 = !DILocalVariable(name: "thread", arg: 1, scope: !16737, file: !14831, line: 136, type: !2461)
!16740 = !DILocation(line: 0, scope: !16737)
!16741 = !DILocation(line: 138, column: 9, scope: !16737)
!16742 = !DILocation(line: 138, column: 2, scope: !16737)
!16743 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2568, file: !2568, line: 1137, type: !16700, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16744)
!16744 = !{!16745, !16746}
!16745 = !DILocalVariable(name: "pq", arg: 1, scope: !16743, file: !2568, line: 1137, type: !16702)
!16746 = !DILocalVariable(name: "thread", arg: 2, scope: !16743, file: !2568, line: 1137, type: !2461)
!16747 = !DILocation(line: 0, scope: !16743)
!16748 = !DILocation(line: 1139, column: 2, scope: !16749)
!16749 = distinct !DILexicalBlock(scope: !16750, file: !2568, line: 1139, column: 2)
!16750 = distinct !DILexicalBlock(scope: !16743, file: !2568, line: 1139, column: 2)
!16751 = !DILocation(line: 1139, column: 2, scope: !16750)
!16752 = !DILocation(line: 1139, column: 2, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16749, file: !2568, line: 1139, column: 2)
!16754 = !DILocation(line: 1141, column: 33, scope: !16743)
!16755 = !DILocation(line: 1141, column: 2, scope: !16743)
!16756 = !DILocation(line: 1142, column: 1, scope: !16743)
!16757 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14831, file: !14831, line: 83, type: !16617, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16758)
!16758 = !{!16759}
!16759 = !DILocalVariable(name: "thread", arg: 1, scope: !16757, file: !14831, line: 83, type: !2461)
!16760 = !DILocation(line: 0, scope: !16757)
!16761 = !DILocation(line: 89, column: 16, scope: !16757)
!16762 = !DILocation(line: 89, column: 2, scope: !16757)
!16763 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !16764, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16766)
!16764 = !DISubroutineType(types: !16765)
!16765 = !{!2564, !16702}
!16766 = !{!16767}
!16767 = !DILocalVariable(name: "list", arg: 1, scope: !16763, file: !137, line: 294, type: !16702)
!16768 = !DILocation(line: 0, scope: !16763)
!16769 = !DILocation(line: 296, column: 9, scope: !16763)
!16770 = !DILocation(line: 296, column: 49, scope: !16763)
!16771 = !DILocation(line: 296, column: 2, scope: !16763)
!16772 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !16773, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16775)
!16773 = !DISubroutineType(types: !16774)
!16774 = !{null, !2564, !2564}
!16775 = !{!16776, !16777, !16778}
!16776 = !DILocalVariable(name: "successor", arg: 1, scope: !16772, file: !137, line: 443, type: !2564)
!16777 = !DILocalVariable(name: "node", arg: 2, scope: !16772, file: !137, line: 443, type: !2564)
!16778 = !DILocalVariable(name: "prev", scope: !16772, file: !137, line: 445, type: !16779)
!16779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2564)
!16780 = !DILocation(line: 0, scope: !16772)
!16781 = !DILocation(line: 445, column: 39, scope: !16772)
!16782 = !DILocation(line: 447, column: 8, scope: !16772)
!16783 = !DILocation(line: 447, column: 13, scope: !16772)
!16784 = !DILocation(line: 448, column: 8, scope: !16772)
!16785 = !DILocation(line: 448, column: 13, scope: !16772)
!16786 = !DILocation(line: 449, column: 8, scope: !16772)
!16787 = !DILocation(line: 449, column: 13, scope: !16772)
!16788 = !DILocation(line: 450, column: 18, scope: !16772)
!16789 = !DILocation(line: 451, column: 1, scope: !16772)
!16790 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !16791, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16793)
!16791 = !DISubroutineType(types: !16792)
!16792 = !{!2564, !16702, !2564}
!16793 = !{!16794, !16795}
!16794 = !DILocalVariable(name: "list", arg: 1, scope: !16790, file: !137, line: 341, type: !16702)
!16795 = !DILocalVariable(name: "node", arg: 2, scope: !16790, file: !137, line: 342, type: !2564)
!16796 = !DILocation(line: 0, scope: !16790)
!16797 = !DILocation(line: 344, column: 15, scope: !16790)
!16798 = !DILocation(line: 344, column: 9, scope: !16790)
!16799 = !DILocation(line: 344, column: 26, scope: !16790)
!16800 = !DILocation(line: 344, column: 2, scope: !16790)
!16801 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !16802, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16804)
!16802 = !DISubroutineType(types: !16803)
!16803 = !{null, !16702, !2564}
!16804 = !{!16805, !16806, !16807}
!16805 = !DILocalVariable(name: "list", arg: 1, scope: !16801, file: !137, line: 404, type: !16702)
!16806 = !DILocalVariable(name: "node", arg: 2, scope: !16801, file: !137, line: 404, type: !2564)
!16807 = !DILocalVariable(name: "tail", scope: !16801, file: !137, line: 406, type: !16779)
!16808 = !DILocation(line: 0, scope: !16801)
!16809 = !DILocation(line: 406, column: 34, scope: !16801)
!16810 = !DILocation(line: 408, column: 8, scope: !16801)
!16811 = !DILocation(line: 408, column: 13, scope: !16801)
!16812 = !DILocation(line: 409, column: 8, scope: !16801)
!16813 = !DILocation(line: 409, column: 13, scope: !16801)
!16814 = !DILocation(line: 411, column: 8, scope: !16801)
!16815 = !DILocation(line: 411, column: 13, scope: !16801)
!16816 = !DILocation(line: 412, column: 13, scope: !16801)
!16817 = !DILocation(line: 413, column: 1, scope: !16801)
!16818 = distinct !DISubprogram(name: "update_cache", scope: !2568, file: !2568, line: 559, type: !9784, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16819)
!16819 = !{!16820, !16821}
!16820 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16818, file: !2568, line: 559, type: !105)
!16821 = !DILocalVariable(name: "thread", scope: !16818, file: !2568, line: 562, type: !2461)
!16822 = !DILocation(line: 0, scope: !16818)
!16823 = !DILocation(line: 239, column: 9, scope: !16824, inlinedAt: !16827)
!16824 = distinct !DISubprogram(name: "runq_best", scope: !2568, file: !2568, line: 237, type: !16825, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !397)
!16825 = !DISubroutineType(types: !16826)
!16826 = !{!2461}
!16827 = distinct !DILocation(line: 314, column: 28, scope: !16828, inlinedAt: !16832)
!16828 = distinct !DISubprogram(name: "next_up", scope: !2568, file: !2568, line: 312, type: !16825, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16829)
!16829 = !{!16830, !16831}
!16830 = !DILocalVariable(name: "thread", scope: !16828, file: !2568, line: 314, type: !2461)
!16831 = !DILocalVariable(name: "mirqp", scope: !16828, file: !2568, line: 322, type: !2461)
!16832 = distinct !DILocation(line: 562, column: 28, scope: !16818)
!16833 = !DILocation(line: 0, scope: !16828, inlinedAt: !16832)
!16834 = !DILocation(line: 322, column: 41, scope: !16828, inlinedAt: !16832)
!16835 = !DILocation(line: 324, column: 12, scope: !16836, inlinedAt: !16832)
!16836 = distinct !DILexicalBlock(scope: !16828, file: !2568, line: 324, column: 6)
!16837 = !DILocation(line: 324, column: 20, scope: !16836, inlinedAt: !16832)
!16838 = !DILocation(line: 324, column: 31, scope: !16836, inlinedAt: !16832)
!16839 = !DILocation(line: 324, column: 39, scope: !16836, inlinedAt: !16832)
!16840 = !DILocation(line: 324, column: 43, scope: !16836, inlinedAt: !16832)
!16841 = !DILocation(line: 324, column: 6, scope: !16828, inlinedAt: !16832)
!16842 = !DILocation(line: 325, column: 8, scope: !16843, inlinedAt: !16832)
!16843 = distinct !DILexicalBlock(scope: !16844, file: !2568, line: 325, column: 7)
!16844 = distinct !DILexicalBlock(scope: !16836, file: !2568, line: 324, column: 64)
!16845 = !DILocation(line: 325, column: 7, scope: !16844, inlinedAt: !16832)
!16846 = !DILocation(line: 328, column: 36, scope: !16847, inlinedAt: !16832)
!16847 = distinct !DILexicalBlock(scope: !16843, file: !2568, line: 327, column: 10)
!16848 = !DILocation(line: 340, column: 17, scope: !16828, inlinedAt: !16832)
!16849 = !DILocation(line: 340, column: 9, scope: !16828, inlinedAt: !16832)
!16850 = !DILocalVariable(name: "thread", arg: 1, scope: !16851, file: !2568, line: 127, type: !2461)
!16851 = distinct !DISubprogram(name: "should_preempt", scope: !2568, file: !2568, line: 127, type: !16852, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16854)
!16852 = !DISubroutineType(types: !16853)
!16853 = !{!492, !2461, !105}
!16854 = !{!16850, !16855}
!16855 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16851, file: !2568, line: 128, type: !105)
!16856 = !DILocation(line: 0, scope: !16851, inlinedAt: !16857)
!16857 = distinct !DILocation(line: 564, column: 6, scope: !16858)
!16858 = distinct !DILexicalBlock(scope: !16818, file: !2568, line: 564, column: 6)
!16859 = !DILocation(line: 133, column: 17, scope: !16860, inlinedAt: !16857)
!16860 = distinct !DILexicalBlock(scope: !16851, file: !2568, line: 133, column: 6)
!16861 = !DILocation(line: 0, scope: !16858)
!16862 = !DILocation(line: 133, column: 6, scope: !16851, inlinedAt: !16857)
!16863 = !DILocation(line: 137, column: 2, scope: !16864, inlinedAt: !16857)
!16864 = distinct !DILexicalBlock(scope: !16865, file: !2568, line: 137, column: 2)
!16865 = distinct !DILexicalBlock(scope: !16851, file: !2568, line: 137, column: 2)
!16866 = !DILocation(line: 137, column: 2, scope: !16865, inlinedAt: !16857)
!16867 = !DILocation(line: 137, column: 2, scope: !16868, inlinedAt: !16857)
!16868 = distinct !DILexicalBlock(scope: !16864, file: !2568, line: 137, column: 2)
!16869 = !DILocation(line: 140, column: 6, scope: !16870, inlinedAt: !16857)
!16870 = distinct !DILexicalBlock(scope: !16851, file: !2568, line: 140, column: 6)
!16871 = !DILocation(line: 140, column: 6, scope: !16851, inlinedAt: !16857)
!16872 = !DILocation(line: 150, column: 9, scope: !16873, inlinedAt: !16857)
!16873 = distinct !DILexicalBlock(scope: !16851, file: !2568, line: 149, column: 6)
!16874 = !DILocation(line: 149, column: 6, scope: !16851, inlinedAt: !16857)
!16875 = !DILocation(line: 157, column: 6, scope: !16876, inlinedAt: !16857)
!16876 = distinct !DILexicalBlock(scope: !16851, file: !2568, line: 157, column: 6)
!16877 = !DILocation(line: 157, column: 27, scope: !16876, inlinedAt: !16857)
!16878 = !DILocation(line: 157, column: 30, scope: !16876, inlinedAt: !16857)
!16879 = !DILocation(line: 564, column: 6, scope: !16818)
!16880 = !DILocation(line: 566, column: 14, scope: !16881)
!16881 = distinct !DILexicalBlock(scope: !16882, file: !2568, line: 566, column: 7)
!16882 = distinct !DILexicalBlock(scope: !16858, file: !2568, line: 564, column: 42)
!16883 = !DILocation(line: 566, column: 7, scope: !16882)
!16884 = !DILocation(line: 567, column: 4, scope: !16885)
!16885 = distinct !DILexicalBlock(scope: !16881, file: !2568, line: 566, column: 27)
!16886 = !DILocation(line: 568, column: 3, scope: !16885)
!16887 = !DILocation(line: 570, column: 3, scope: !16882)
!16888 = !DILocation(line: 572, column: 2, scope: !16882)
!16889 = !DILocation(line: 585, column: 1, scope: !16818)
!16890 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2568, file: !2568, line: 1144, type: !16891, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16893)
!16891 = !DISubroutineType(types: !16892)
!16892 = !{!2461, !16702}
!16893 = !{!16894, !16895, !16896}
!16894 = !DILocalVariable(name: "pq", arg: 1, scope: !16890, file: !2568, line: 1144, type: !16702)
!16895 = !DILocalVariable(name: "thread", scope: !16890, file: !2568, line: 1146, type: !2461)
!16896 = !DILocalVariable(name: "n", scope: !16890, file: !2568, line: 1147, type: !2564)
!16897 = !DILocation(line: 0, scope: !16890)
!16898 = !DILocation(line: 1147, column: 19, scope: !16890)
!16899 = !DILocation(line: 1152, column: 2, scope: !16890)
!16900 = distinct !DISubprogram(name: "is_metairq", scope: !2568, file: !2568, line: 68, type: !16452, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16901)
!16901 = !{!16902}
!16902 = !DILocalVariable(name: "thread", arg: 1, scope: !16900, file: !2568, line: 68, type: !2461)
!16903 = !DILocation(line: 0, scope: !16900)
!16904 = !DILocation(line: 71, column: 23, scope: !16900)
!16905 = !DILocation(line: 72, column: 3, scope: !16900)
!16906 = !DILocation(line: 71, column: 2, scope: !16900)
!16907 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14831, file: !14831, line: 115, type: !16617, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16908)
!16908 = !{!16909}
!16909 = !DILocalVariable(name: "thread", arg: 1, scope: !16907, file: !14831, line: 115, type: !2461)
!16910 = !DILocation(line: 0, scope: !16907)
!16911 = !DILocation(line: 117, column: 46, scope: !16907)
!16912 = !DILocation(line: 117, column: 10, scope: !16907)
!16913 = !DILocation(line: 117, column: 9, scope: !16907)
!16914 = !DILocation(line: 117, column: 2, scope: !16907)
!16915 = distinct !DISubprogram(name: "is_preempt", scope: !2568, file: !2568, line: 62, type: !16452, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16916)
!16916 = !{!16917}
!16917 = !DILocalVariable(name: "thread", arg: 1, scope: !16915, file: !2568, line: 62, type: !2461)
!16918 = !DILocation(line: 0, scope: !16915)
!16919 = !DILocation(line: 65, column: 22, scope: !16915)
!16920 = !DILocation(line: 65, column: 30, scope: !16915)
!16921 = !DILocation(line: 65, column: 2, scope: !16915)
!16922 = distinct !DISubprogram(name: "update_metairq_preempt", scope: !2568, file: !2568, line: 545, type: !16434, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16923)
!16923 = !{!16924}
!16924 = !DILocalVariable(name: "thread", arg: 1, scope: !16922, file: !2568, line: 545, type: !2461)
!16925 = !DILocation(line: 0, scope: !16922)
!16926 = !DILocation(line: 548, column: 6, scope: !16927)
!16927 = distinct !DILexicalBlock(scope: !16922, file: !2568, line: 548, column: 6)
!16928 = !DILocation(line: 548, column: 25, scope: !16927)
!16929 = !DILocation(line: 548, column: 40, scope: !16927)
!16930 = !DILocation(line: 548, column: 29, scope: !16927)
!16931 = !DILocation(line: 548, column: 50, scope: !16927)
!16932 = !DILocation(line: 549, column: 7, scope: !16927)
!16933 = !DILocation(line: 548, column: 6, scope: !16922)
!16934 = !DILocation(line: 552, column: 37, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16927, file: !2568, line: 552, column: 13)
!16936 = !DILocation(line: 552, column: 13, scope: !16927)
!16937 = !DILocation(line: 0, scope: !16927)
!16938 = !DILocation(line: 557, column: 1, scope: !16922)
!16939 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15260, file: !15260, line: 35, type: !16940, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16944)
!16940 = !DISubroutineType(types: !16941)
!16941 = !{!492, !16942}
!16942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16943, size: 32)
!16943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2512)
!16944 = !{!16945}
!16945 = !DILocalVariable(name: "to", arg: 1, scope: !16939, file: !15260, line: 35, type: !16942)
!16946 = !DILocation(line: 0, scope: !16939)
!16947 = !DILocation(line: 37, column: 35, scope: !16939)
!16948 = !DILocation(line: 37, column: 10, scope: !16939)
!16949 = !DILocation(line: 37, column: 9, scope: !16939)
!16950 = !DILocation(line: 37, column: 2, scope: !16939)
!16951 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !16952, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16956)
!16952 = !DISubroutineType(types: !16953)
!16953 = !{!492, !16954}
!16954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16955, size: 32)
!16955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2471)
!16956 = !{!16957}
!16957 = !DILocalVariable(name: "node", arg: 1, scope: !16951, file: !137, line: 225, type: !16954)
!16958 = !DILocation(line: 0, scope: !16951)
!16959 = !DILocation(line: 227, column: 15, scope: !16951)
!16960 = !DILocation(line: 227, column: 20, scope: !16951)
!16961 = !DILocation(line: 227, column: 2, scope: !16951)
!16962 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !16791, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16963)
!16963 = !{!16964, !16965}
!16964 = !DILocalVariable(name: "list", arg: 1, scope: !16962, file: !137, line: 325, type: !16702)
!16965 = !DILocalVariable(name: "node", arg: 2, scope: !16962, file: !137, line: 326, type: !2564)
!16966 = !DILocation(line: 0, scope: !16962)
!16967 = !DILocation(line: 328, column: 24, scope: !16962)
!16968 = !DILocation(line: 328, column: 15, scope: !16962)
!16969 = !DILocation(line: 328, column: 9, scope: !16962)
!16970 = !DILocation(line: 328, column: 45, scope: !16962)
!16971 = !DILocation(line: 328, column: 2, scope: !16962)
!16972 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !16973, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16975)
!16973 = !DISubroutineType(types: !16974)
!16974 = !{!492, !16702}
!16975 = !{!16976}
!16976 = !DILocalVariable(name: "list", arg: 1, scope: !16972, file: !137, line: 266, type: !16702)
!16977 = !DILocation(line: 0, scope: !16972)
!16978 = !DILocation(line: 268, column: 15, scope: !16972)
!16979 = !DILocation(line: 268, column: 20, scope: !16972)
!16980 = !DILocation(line: 268, column: 2, scope: !16972)
!16981 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !16982, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16984)
!16982 = !DISubroutineType(types: !16983)
!16983 = !{null, !2564}
!16984 = !{!16985, !16986, !16987}
!16985 = !DILocalVariable(name: "node", arg: 1, scope: !16981, file: !137, line: 496, type: !2564)
!16986 = !DILocalVariable(name: "prev", scope: !16981, file: !137, line: 498, type: !16779)
!16987 = !DILocalVariable(name: "next", scope: !16981, file: !137, line: 499, type: !16779)
!16988 = !DILocation(line: 0, scope: !16981)
!16989 = !DILocation(line: 498, column: 34, scope: !16981)
!16990 = !DILocation(line: 499, column: 34, scope: !16981)
!16991 = !DILocation(line: 501, column: 8, scope: !16981)
!16992 = !DILocation(line: 501, column: 13, scope: !16981)
!16993 = !DILocation(line: 502, column: 8, scope: !16981)
!16994 = !DILocation(line: 502, column: 13, scope: !16981)
!16995 = !DILocation(line: 503, column: 2, scope: !16981)
!16996 = !DILocation(line: 504, column: 1, scope: !16981)
!16997 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !16982, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !16998)
!16998 = !{!16999}
!16999 = !DILocalVariable(name: "node", arg: 1, scope: !16997, file: !137, line: 211, type: !2564)
!17000 = !DILocation(line: 0, scope: !16997)
!17001 = !DILocation(line: 213, column: 8, scope: !16997)
!17002 = !DILocation(line: 213, column: 13, scope: !16997)
!17003 = !DILocation(line: 214, column: 8, scope: !16997)
!17004 = !DILocation(line: 214, column: 13, scope: !16997)
!17005 = !DILocation(line: 215, column: 1, scope: !16997)
!17006 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14831, file: !14831, line: 131, type: !17007, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17009)
!17007 = !DISubroutineType(types: !17008)
!17008 = !{!492, !2461, !113}
!17009 = !{!17010, !17011}
!17010 = !DILocalVariable(name: "thread", arg: 1, scope: !17006, file: !14831, line: 131, type: !2461)
!17011 = !DILocalVariable(name: "state", arg: 2, scope: !17006, file: !14831, line: 131, type: !113)
!17012 = !DILocation(line: 0, scope: !17006)
!17013 = !DILocation(line: 133, column: 23, scope: !17006)
!17014 = !DILocation(line: 133, column: 10, scope: !17006)
!17015 = !DILocation(line: 133, column: 36, scope: !17006)
!17016 = !DILocation(line: 133, column: 45, scope: !17006)
!17017 = !DILocation(line: 133, column: 2, scope: !17006)
!17018 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14831, file: !14831, line: 211, type: !17019, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17021)
!17019 = !DISubroutineType(types: !17020)
!17020 = !{!492, !105, !105}
!17021 = !{!17022, !17023}
!17022 = !DILocalVariable(name: "prio", arg: 1, scope: !17018, file: !14831, line: 211, type: !105)
!17023 = !DILocalVariable(name: "test_prio", arg: 2, scope: !17018, file: !14831, line: 211, type: !105)
!17024 = !DILocation(line: 0, scope: !17018)
!17025 = !DILocation(line: 213, column: 9, scope: !17018)
!17026 = !DILocation(line: 213, column: 2, scope: !17018)
!17027 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14831, file: !14831, line: 206, type: !17019, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17028)
!17028 = !{!17029, !17030}
!17029 = !DILocalVariable(name: "prio1", arg: 1, scope: !17027, file: !14831, line: 206, type: !105)
!17030 = !DILocalVariable(name: "prio2", arg: 2, scope: !17027, file: !14831, line: 206, type: !105)
!17031 = !DILocation(line: 0, scope: !17027)
!17032 = !DILocation(line: 208, column: 15, scope: !17027)
!17033 = !DILocation(line: 208, column: 2, scope: !17027)
!17034 = distinct !DISubprogram(name: "z_ready_thread", scope: !2568, file: !2568, line: 635, type: !16434, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17035)
!17035 = !{!17036, !17037, !17039}
!17036 = !DILocalVariable(name: "thread", arg: 1, scope: !17034, file: !2568, line: 635, type: !2461)
!17037 = !DILocalVariable(name: "__i", scope: !17038, file: !2568, line: 637, type: !16468)
!17038 = distinct !DILexicalBlock(scope: !17034, file: !2568, line: 637, column: 2)
!17039 = !DILocalVariable(name: "__key", scope: !17038, file: !2568, line: 637, type: !16468)
!17040 = !DILocation(line: 0, scope: !17034)
!17041 = !DILocation(line: 0, scope: !17038)
!17042 = !DILocation(line: 0, scope: !16476, inlinedAt: !17043)
!17043 = distinct !DILocation(line: 637, column: 2, scope: !17038)
!17044 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17045)
!17045 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17043)
!17046 = !DILocation(line: 0, scope: !16485, inlinedAt: !17045)
!17047 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17043)
!17048 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17043)
!17049 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17043)
!17050 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17043)
!17051 = !DILocation(line: 639, column: 4, scope: !17052)
!17052 = distinct !DILexicalBlock(scope: !17053, file: !2568, line: 638, column: 41)
!17053 = distinct !DILexicalBlock(scope: !17054, file: !2568, line: 638, column: 7)
!17054 = distinct !DILexicalBlock(scope: !17055, file: !2568, line: 637, column: 26)
!17055 = distinct !DILexicalBlock(scope: !17038, file: !2568, line: 637, column: 2)
!17056 = !DILocation(line: 0, scope: !16510, inlinedAt: !17057)
!17057 = distinct !DILocation(line: 637, column: 2, scope: !17055)
!17058 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17057)
!17059 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17057)
!17060 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17057)
!17061 = !DILocation(line: 0, scope: !16524, inlinedAt: !17062)
!17062 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17057)
!17063 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17062)
!17064 = !DILocation(line: 642, column: 1, scope: !17034)
!17065 = distinct !DISubprogram(name: "ready_thread", scope: !2568, file: !2568, line: 617, type: !16434, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17066)
!17066 = !{!17067}
!17067 = !DILocalVariable(name: "thread", arg: 1, scope: !17065, file: !2568, line: 617, type: !2461)
!17068 = !DILocation(line: 0, scope: !17065)
!17069 = !DILocation(line: 626, column: 7, scope: !17070)
!17070 = distinct !DILexicalBlock(scope: !17065, file: !2568, line: 626, column: 6)
!17071 = !DILocation(line: 626, column: 34, scope: !17070)
!17072 = !DILocation(line: 626, column: 37, scope: !17070)
!17073 = !DILocation(line: 626, column: 6, scope: !17065)
!17074 = !DILocation(line: 0, scope: !16685, inlinedAt: !17075)
!17075 = distinct !DILocation(line: 629, column: 3, scope: !17076)
!17076 = distinct !DILexicalBlock(scope: !17070, file: !2568, line: 626, column: 64)
!17077 = !DILocation(line: 252, column: 15, scope: !16685, inlinedAt: !17075)
!17078 = !DILocation(line: 252, column: 28, scope: !16685, inlinedAt: !17075)
!17079 = !DILocation(line: 0, scope: !16692, inlinedAt: !17080)
!17080 = distinct !DILocation(line: 254, column: 3, scope: !16696, inlinedAt: !17075)
!17081 = !DILocation(line: 0, scope: !16699, inlinedAt: !17082)
!17082 = distinct !DILocation(line: 229, column: 2, scope: !16692, inlinedAt: !17080)
!17083 = !DILocation(line: 186, column: 2, scope: !16709, inlinedAt: !17082)
!17084 = !DILocation(line: 186, column: 2, scope: !16710, inlinedAt: !17082)
!17085 = !DILocation(line: 186, column: 2, scope: !16713, inlinedAt: !17082)
!17086 = !DILocation(line: 188, column: 2, scope: !16715, inlinedAt: !17082)
!17087 = !DILocation(line: 188, column: 2, scope: !16717, inlinedAt: !17082)
!17088 = !DILocation(line: 0, scope: !16715, inlinedAt: !17082)
!17089 = !DILocation(line: 189, column: 7, scope: !16720, inlinedAt: !17082)
!17090 = !DILocation(line: 189, column: 35, scope: !16720, inlinedAt: !17082)
!17091 = !DILocation(line: 189, column: 7, scope: !16721, inlinedAt: !17082)
!17092 = !DILocation(line: 191, column: 21, scope: !16725, inlinedAt: !17082)
!17093 = !DILocation(line: 190, column: 4, scope: !16725, inlinedAt: !17082)
!17094 = !DILocation(line: 192, column: 4, scope: !16725, inlinedAt: !17082)
!17095 = distinct !{!17095, !17086, !17096}
!17096 = !DILocation(line: 194, column: 2, scope: !16715, inlinedAt: !17082)
!17097 = !DILocation(line: 196, column: 37, scope: !16699, inlinedAt: !17082)
!17098 = !DILocation(line: 196, column: 2, scope: !16699, inlinedAt: !17082)
!17099 = !DILocation(line: 197, column: 1, scope: !16699, inlinedAt: !17082)
!17100 = !DILocation(line: 630, column: 3, scope: !17076)
!17101 = !DILocation(line: 632, column: 2, scope: !17076)
!17102 = !DILocation(line: 633, column: 1, scope: !17065)
!17103 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14831, file: !14831, line: 120, type: !16617, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17104)
!17104 = !{!17105}
!17105 = !DILocalVariable(name: "thread", arg: 1, scope: !17103, file: !14831, line: 120, type: !2461)
!17106 = !DILocation(line: 0, scope: !17103)
!17107 = !DILocation(line: 122, column: 12, scope: !17103)
!17108 = !DILocation(line: 122, column: 62, scope: !17103)
!17109 = !DILocation(line: 123, column: 4, scope: !17103)
!17110 = !DILocation(line: 122, column: 2, scope: !17103)
!17111 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2568, file: !2568, line: 644, type: !16434, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17112)
!17112 = !{!17113, !17114, !17116}
!17113 = !DILocalVariable(name: "thread", arg: 1, scope: !17111, file: !2568, line: 644, type: !2461)
!17114 = !DILocalVariable(name: "__i", scope: !17115, file: !2568, line: 646, type: !16468)
!17115 = distinct !DILexicalBlock(scope: !17111, file: !2568, line: 646, column: 2)
!17116 = !DILocalVariable(name: "__key", scope: !17115, file: !2568, line: 646, type: !16468)
!17117 = !DILocation(line: 0, scope: !17111)
!17118 = !DILocation(line: 0, scope: !17115)
!17119 = !DILocation(line: 0, scope: !16476, inlinedAt: !17120)
!17120 = distinct !DILocation(line: 646, column: 2, scope: !17115)
!17121 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17122)
!17122 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17120)
!17123 = !DILocation(line: 0, scope: !16485, inlinedAt: !17122)
!17124 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17120)
!17125 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17120)
!17126 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17120)
!17127 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17120)
!17128 = !DILocation(line: 647, column: 3, scope: !17129)
!17129 = distinct !DILexicalBlock(scope: !17130, file: !2568, line: 646, column: 26)
!17130 = distinct !DILexicalBlock(scope: !17115, file: !2568, line: 646, column: 2)
!17131 = !DILocation(line: 0, scope: !16510, inlinedAt: !17132)
!17132 = distinct !DILocation(line: 646, column: 2, scope: !17130)
!17133 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17132)
!17134 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17132)
!17135 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17132)
!17136 = !DILocation(line: 0, scope: !16524, inlinedAt: !17137)
!17137 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17132)
!17138 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17137)
!17139 = !DILocation(line: 649, column: 1, scope: !17111)
!17140 = distinct !DISubprogram(name: "z_sched_start", scope: !2568, file: !2568, line: 651, type: !16434, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17141)
!17141 = !{!17142, !17143}
!17142 = !DILocalVariable(name: "thread", arg: 1, scope: !17140, file: !2568, line: 651, type: !2461)
!17143 = !DILocalVariable(name: "key", scope: !17140, file: !2568, line: 653, type: !16468)
!17144 = !DILocation(line: 0, scope: !17140)
!17145 = !DILocation(line: 0, scope: !16476, inlinedAt: !17146)
!17146 = distinct !DILocation(line: 653, column: 25, scope: !17140)
!17147 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17148)
!17148 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17146)
!17149 = !DILocation(line: 0, scope: !16485, inlinedAt: !17148)
!17150 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17146)
!17151 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17146)
!17152 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17146)
!17153 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17146)
!17154 = !DILocation(line: 655, column: 6, scope: !17155)
!17155 = distinct !DILexicalBlock(scope: !17140, file: !2568, line: 655, column: 6)
!17156 = !DILocation(line: 655, column: 6, scope: !17140)
!17157 = !DILocation(line: 0, scope: !16510, inlinedAt: !17158)
!17158 = distinct !DILocation(line: 656, column: 3, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17155, file: !2568, line: 655, column: 36)
!17160 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17158)
!17161 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17158)
!17162 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17158)
!17163 = !DILocation(line: 0, scope: !16524, inlinedAt: !17164)
!17164 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17158)
!17165 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17164)
!17166 = !DILocation(line: 657, column: 3, scope: !17159)
!17167 = !DILocation(line: 660, column: 2, scope: !17140)
!17168 = !DILocation(line: 661, column: 2, scope: !17140)
!17169 = !DILocation(line: 662, column: 2, scope: !17140)
!17170 = !DILocation(line: 663, column: 1, scope: !17140)
!17171 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14831, file: !14831, line: 126, type: !16617, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17172)
!17172 = !{!17173}
!17173 = !DILocalVariable(name: "thread", arg: 1, scope: !17171, file: !14831, line: 126, type: !2461)
!17174 = !DILocation(line: 0, scope: !17171)
!17175 = !DILocation(line: 128, column: 23, scope: !17171)
!17176 = !DILocation(line: 128, column: 36, scope: !17171)
!17177 = !DILocation(line: 128, column: 56, scope: !17171)
!17178 = !DILocation(line: 128, column: 2, scope: !17171)
!17179 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14831, file: !14831, line: 155, type: !16434, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17180)
!17180 = !{!17181}
!17181 = !DILocalVariable(name: "thread", arg: 1, scope: !17179, file: !14831, line: 155, type: !2461)
!17182 = !DILocation(line: 0, scope: !17179)
!17183 = !DILocation(line: 157, column: 15, scope: !17179)
!17184 = !DILocation(line: 157, column: 28, scope: !17179)
!17185 = !DILocation(line: 158, column: 1, scope: !17179)
!17186 = distinct !DISubprogram(name: "z_reschedule", scope: !2568, file: !2568, line: 967, type: !16511, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17187)
!17187 = !{!17188, !17189}
!17188 = !DILocalVariable(name: "lock", arg: 1, scope: !17186, file: !2568, line: 967, type: !16479)
!17189 = !DILocalVariable(name: "key", arg: 2, scope: !17186, file: !2568, line: 967, type: !16468)
!17190 = !DILocation(line: 0, scope: !17186)
!17191 = !DILocation(line: 969, column: 6, scope: !17192)
!17192 = distinct !DILexicalBlock(scope: !17186, file: !2568, line: 969, column: 6)
!17193 = !DILocation(line: 969, column: 23, scope: !17192)
!17194 = !DILocation(line: 969, column: 26, scope: !17192)
!17195 = !DILocation(line: 969, column: 6, scope: !17186)
!17196 = !DILocalVariable(name: "key", arg: 2, scope: !17197, file: !14956, line: 193, type: !16468)
!17197 = distinct !DISubprogram(name: "z_swap", scope: !14956, file: !14956, line: 193, type: !17198, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17200)
!17198 = !DISubroutineType(types: !17199)
!17199 = !{!105, !16479, !16468}
!17200 = !{!17201, !17196}
!17201 = !DILocalVariable(name: "lock", arg: 1, scope: !17197, file: !14956, line: 193, type: !16479)
!17202 = !DILocation(line: 0, scope: !17197, inlinedAt: !17203)
!17203 = distinct !DILocation(line: 970, column: 3, scope: !17204)
!17204 = distinct !DILexicalBlock(scope: !17192, file: !2568, line: 969, column: 39)
!17205 = !DILocalVariable(name: "l", arg: 1, scope: !17206, file: !236, line: 221, type: !16479)
!17206 = distinct !DISubprogram(name: "k_spin_release", scope: !236, file: !236, line: 221, type: !17207, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17209)
!17207 = !DISubroutineType(types: !17208)
!17208 = !{null, !16479}
!17209 = !{!17205}
!17210 = !DILocation(line: 0, scope: !17206, inlinedAt: !17211)
!17211 = distinct !DILocation(line: 195, column: 2, scope: !17197, inlinedAt: !17203)
!17212 = !DILocation(line: 225, column: 2, scope: !17213, inlinedAt: !17211)
!17213 = distinct !DILexicalBlock(scope: !17214, file: !236, line: 225, column: 2)
!17214 = distinct !DILexicalBlock(scope: !17206, file: !236, line: 225, column: 2)
!17215 = !DILocation(line: 225, column: 2, scope: !17214, inlinedAt: !17211)
!17216 = !DILocation(line: 225, column: 2, scope: !17217, inlinedAt: !17211)
!17217 = distinct !DILexicalBlock(scope: !17213, file: !236, line: 225, column: 2)
!17218 = !DILocation(line: 196, column: 9, scope: !17197, inlinedAt: !17203)
!17219 = !DILocation(line: 971, column: 2, scope: !17204)
!17220 = !DILocation(line: 0, scope: !16510, inlinedAt: !17221)
!17221 = distinct !DILocation(line: 972, column: 3, scope: !17222)
!17222 = distinct !DILexicalBlock(scope: !17192, file: !2568, line: 971, column: 9)
!17223 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17221)
!17224 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17221)
!17225 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17221)
!17226 = !DILocation(line: 0, scope: !16524, inlinedAt: !17227)
!17227 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17221)
!17228 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17227)
!17229 = !DILocation(line: 975, column: 1, scope: !17186)
!17230 = distinct !DISubprogram(name: "resched", scope: !2568, file: !2568, line: 940, type: !17231, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17233)
!17231 = !DISubroutineType(types: !17232)
!17232 = !{!492, !113}
!17233 = !{!17234}
!17234 = !DILocalVariable(name: "key", arg: 1, scope: !17230, file: !2568, line: 940, type: !113)
!17235 = !DILocation(line: 0, scope: !17230)
!17236 = !DILocalVariable(name: "key", arg: 1, scope: !17237, file: !7532, line: 112, type: !32)
!17237 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7532, file: !7532, line: 112, type: !17238, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17240)
!17238 = !DISubroutineType(types: !17239)
!17239 = !{!492, !32}
!17240 = !{!17236}
!17241 = !DILocation(line: 0, scope: !17237, inlinedAt: !17242)
!17242 = distinct !DILocation(line: 946, column: 9, scope: !17230)
!17243 = !DILocation(line: 115, column: 13, scope: !17237, inlinedAt: !17242)
!17244 = !DILocation(line: 946, column: 32, scope: !17230)
!17245 = !DILocation(line: 1031, column: 3, scope: !17246, inlinedAt: !17249)
!17246 = distinct !DISubprogram(name: "__get_IPSR", scope: !7850, file: !7850, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17247)
!17247 = !{!17248}
!17248 = !DILocalVariable(name: "result", scope: !17246, file: !7850, line: 1029, type: !113)
!17249 = distinct !DILocation(line: 48, column: 10, scope: !17250, inlinedAt: !17251)
!17250 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8897, file: !8897, line: 46, type: !8898, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !397)
!17251 = distinct !DILocation(line: 946, column: 36, scope: !17230)
!17252 = !{i64 3772381}
!17253 = !DILocation(line: 0, scope: !17246, inlinedAt: !17249)
!17254 = !DILocation(line: 48, column: 9, scope: !17250, inlinedAt: !17251)
!17255 = !DILocation(line: 946, column: 2, scope: !17230)
!17256 = distinct !DISubprogram(name: "need_swap", scope: !2568, file: !2568, line: 953, type: !8898, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17257)
!17257 = !{!17258}
!17258 = !DILocalVariable(name: "new_thread", scope: !17256, file: !2568, line: 959, type: !2461)
!17259 = !DILocation(line: 962, column: 31, scope: !17256)
!17260 = !DILocation(line: 0, scope: !17256)
!17261 = !DILocation(line: 963, column: 23, scope: !17256)
!17262 = !DILocation(line: 963, column: 20, scope: !17256)
!17263 = !DILocation(line: 963, column: 2, scope: !17256)
!17264 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14956, file: !14956, line: 181, type: !7860, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17265)
!17265 = !{!17266, !17267}
!17266 = !DILocalVariable(name: "key", arg: 1, scope: !17264, file: !14956, line: 181, type: !32)
!17267 = !DILocalVariable(name: "ret", scope: !17264, file: !14956, line: 183, type: !105)
!17268 = !DILocation(line: 0, scope: !17264)
!17269 = !DILocation(line: 185, column: 8, scope: !17264)
!17270 = !DILocation(line: 186, column: 2, scope: !17264)
!17271 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2568, file: !2568, line: 665, type: !16434, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17272)
!17272 = !{!17273, !17274, !17276}
!17273 = !DILocalVariable(name: "thread", arg: 1, scope: !17271, file: !2568, line: 665, type: !2461)
!17274 = !DILocalVariable(name: "__i", scope: !17275, file: !2568, line: 671, type: !16468)
!17275 = distinct !DILexicalBlock(scope: !17271, file: !2568, line: 671, column: 2)
!17276 = !DILocalVariable(name: "__key", scope: !17275, file: !2568, line: 671, type: !16468)
!17277 = !DILocation(line: 0, scope: !17271)
!17278 = !DILocation(line: 669, column: 8, scope: !17271)
!17279 = !DILocation(line: 0, scope: !17275)
!17280 = !DILocation(line: 0, scope: !16476, inlinedAt: !17281)
!17281 = distinct !DILocation(line: 671, column: 2, scope: !17275)
!17282 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17283)
!17283 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17281)
!17284 = !DILocation(line: 0, scope: !16485, inlinedAt: !17283)
!17285 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17281)
!17286 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17281)
!17287 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17281)
!17288 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17281)
!17289 = !DILocation(line: 672, column: 7, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17291, file: !2568, line: 672, column: 7)
!17291 = distinct !DILexicalBlock(scope: !17292, file: !2568, line: 671, column: 26)
!17292 = distinct !DILexicalBlock(scope: !17275, file: !2568, line: 671, column: 2)
!17293 = !DILocation(line: 672, column: 7, scope: !17291)
!17294 = !DILocation(line: 0, scope: !16668, inlinedAt: !17295)
!17295 = distinct !DILocation(line: 673, column: 4, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17290, file: !2568, line: 672, column: 35)
!17297 = !DILocation(line: 266, column: 15, scope: !16668, inlinedAt: !17295)
!17298 = !DILocation(line: 266, column: 28, scope: !16668, inlinedAt: !17295)
!17299 = !DILocation(line: 0, scope: !16676, inlinedAt: !17300)
!17300 = distinct !DILocation(line: 268, column: 3, scope: !16680, inlinedAt: !17295)
!17301 = !DILocation(line: 234, column: 2, scope: !16676, inlinedAt: !17300)
!17302 = !DILocation(line: 674, column: 3, scope: !17296)
!17303 = !DILocation(line: 675, column: 3, scope: !17291)
!17304 = !DILocation(line: 676, column: 26, scope: !17291)
!17305 = !DILocation(line: 676, column: 23, scope: !17291)
!17306 = !DILocation(line: 676, column: 3, scope: !17291)
!17307 = !DILocation(line: 0, scope: !16510, inlinedAt: !17308)
!17308 = distinct !DILocation(line: 671, column: 2, scope: !17292)
!17309 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17308)
!17310 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17308)
!17311 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17308)
!17312 = !DILocation(line: 0, scope: !16524, inlinedAt: !17313)
!17313 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17308)
!17314 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17313)
!17315 = !DILocation(line: 679, column: 16, scope: !17316)
!17316 = distinct !DILexicalBlock(scope: !17271, file: !2568, line: 679, column: 6)
!17317 = !DILocation(line: 679, column: 13, scope: !17316)
!17318 = !DILocation(line: 679, column: 6, scope: !17271)
!17319 = !DILocation(line: 680, column: 3, scope: !17320)
!17320 = distinct !DILexicalBlock(scope: !17316, file: !2568, line: 679, column: 26)
!17321 = !DILocation(line: 681, column: 2, scope: !17320)
!17322 = !DILocation(line: 684, column: 1, scope: !17271)
!17323 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !15260, file: !15260, line: 52, type: !16452, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17324)
!17324 = !{!17325}
!17325 = !DILocalVariable(name: "thread", arg: 1, scope: !17323, file: !15260, line: 52, type: !2461)
!17326 = !DILocation(line: 0, scope: !17323)
!17327 = !DILocation(line: 54, column: 39, scope: !17323)
!17328 = !DILocation(line: 54, column: 9, scope: !17323)
!17329 = !DILocation(line: 54, column: 2, scope: !17323)
!17330 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14831, file: !14831, line: 141, type: !16434, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17331)
!17331 = !{!17332}
!17332 = !DILocalVariable(name: "thread", arg: 1, scope: !17330, file: !14831, line: 141, type: !2461)
!17333 = !DILocation(line: 0, scope: !17330)
!17334 = !DILocation(line: 143, column: 15, scope: !17330)
!17335 = !DILocation(line: 143, column: 28, scope: !17330)
!17336 = !DILocation(line: 146, column: 1, scope: !17330)
!17337 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14831, file: !14831, line: 73, type: !266, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !397)
!17338 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17339)
!17339 = distinct !DILocation(line: 75, column: 30, scope: !17337)
!17340 = !DILocation(line: 0, scope: !16485, inlinedAt: !17339)
!17341 = !DILocation(line: 75, column: 9, scope: !17337)
!17342 = !DILocation(line: 76, column: 1, scope: !17337)
!17343 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2568, file: !2568, line: 977, type: !7945, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17344)
!17344 = !{!17345}
!17345 = !DILocalVariable(name: "key", arg: 1, scope: !17343, file: !2568, line: 977, type: !113)
!17346 = !DILocation(line: 0, scope: !17343)
!17347 = !DILocation(line: 979, column: 6, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17343, file: !2568, line: 979, column: 6)
!17349 = !DILocation(line: 979, column: 6, scope: !17343)
!17350 = !DILocation(line: 980, column: 3, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17348, file: !2568, line: 979, column: 20)
!17352 = !DILocation(line: 981, column: 2, scope: !17351)
!17353 = !DILocation(line: 0, scope: !16524, inlinedAt: !17354)
!17354 = distinct !DILocation(line: 982, column: 3, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !17348, file: !2568, line: 981, column: 9)
!17356 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17354)
!17357 = !DILocation(line: 985, column: 1, scope: !17343)
!17358 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2568, file: !2568, line: 695, type: !16434, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17359)
!17359 = !{!17360, !17361}
!17360 = !DILocalVariable(name: "thread", arg: 1, scope: !17358, file: !2568, line: 695, type: !2461)
!17361 = !DILocalVariable(name: "key", scope: !17358, file: !2568, line: 699, type: !16468)
!17362 = !DILocation(line: 0, scope: !17358)
!17363 = !DILocation(line: 0, scope: !16476, inlinedAt: !17364)
!17364 = distinct !DILocation(line: 699, column: 25, scope: !17358)
!17365 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17366)
!17366 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17364)
!17367 = !DILocation(line: 0, scope: !16485, inlinedAt: !17366)
!17368 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17364)
!17369 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17364)
!17370 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17364)
!17371 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17364)
!17372 = !DILocation(line: 702, column: 7, scope: !17373)
!17373 = distinct !DILexicalBlock(scope: !17358, file: !2568, line: 702, column: 6)
!17374 = !DILocation(line: 702, column: 6, scope: !17358)
!17375 = !DILocation(line: 0, scope: !16510, inlinedAt: !17376)
!17376 = distinct !DILocation(line: 703, column: 3, scope: !17377)
!17377 = distinct !DILexicalBlock(scope: !17373, file: !2568, line: 702, column: 38)
!17378 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17376)
!17379 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17376)
!17380 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17376)
!17381 = !DILocation(line: 0, scope: !16524, inlinedAt: !17382)
!17382 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17376)
!17383 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17382)
!17384 = !DILocation(line: 704, column: 3, scope: !17377)
!17385 = !DILocation(line: 707, column: 2, scope: !17358)
!17386 = !DILocation(line: 708, column: 2, scope: !17358)
!17387 = !DILocation(line: 710, column: 2, scope: !17358)
!17388 = !DILocation(line: 713, column: 1, scope: !17358)
!17389 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14831, file: !14831, line: 96, type: !16617, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17390)
!17390 = !{!17391}
!17391 = !DILocalVariable(name: "thread", arg: 1, scope: !17389, file: !14831, line: 96, type: !2461)
!17392 = !DILocation(line: 0, scope: !17389)
!17393 = !DILocation(line: 98, column: 23, scope: !17389)
!17394 = !DILocation(line: 98, column: 36, scope: !17389)
!17395 = !DILocation(line: 98, column: 57, scope: !17389)
!17396 = !DILocation(line: 98, column: 2, scope: !17389)
!17397 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14831, file: !14831, line: 148, type: !16434, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17398)
!17398 = !{!17399}
!17399 = !DILocalVariable(name: "thread", arg: 1, scope: !17397, file: !14831, line: 148, type: !2461)
!17400 = !DILocation(line: 0, scope: !17397)
!17401 = !DILocation(line: 150, column: 15, scope: !17397)
!17402 = !DILocation(line: 150, column: 28, scope: !17397)
!17403 = !DILocation(line: 153, column: 1, scope: !17397)
!17404 = distinct !DISubprogram(name: "z_pend_thread", scope: !2568, file: !2568, line: 770, type: !17405, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17411)
!17405 = !DISubroutineType(types: !17406)
!17406 = !{null, !2461, !2492, !17407}
!17407 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !17408)
!17408 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !17409)
!17409 = !{!17410}
!17410 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17408, file: !108, line: 66, baseType: !107, size: 64)
!17411 = !{!17412, !17413, !17414, !17415, !17417}
!17412 = !DILocalVariable(name: "thread", arg: 1, scope: !17404, file: !2568, line: 770, type: !2461)
!17413 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17404, file: !2568, line: 770, type: !2492)
!17414 = !DILocalVariable(name: "timeout", arg: 3, scope: !17404, file: !2568, line: 771, type: !17407)
!17415 = !DILocalVariable(name: "__i", scope: !17416, file: !2568, line: 774, type: !16468)
!17416 = distinct !DILexicalBlock(scope: !17404, file: !2568, line: 774, column: 2)
!17417 = !DILocalVariable(name: "__key", scope: !17416, file: !2568, line: 774, type: !16468)
!17418 = !DILocation(line: 0, scope: !17404)
!17419 = !DILocation(line: 773, column: 2, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17421, file: !2568, line: 773, column: 2)
!17421 = distinct !DILexicalBlock(scope: !17404, file: !2568, line: 773, column: 2)
!17422 = !DILocation(line: 773, column: 2, scope: !17421)
!17423 = !DILocation(line: 773, column: 2, scope: !17424)
!17424 = distinct !DILexicalBlock(scope: !17420, file: !2568, line: 773, column: 2)
!17425 = !DILocation(line: 0, scope: !17416)
!17426 = !DILocation(line: 0, scope: !16476, inlinedAt: !17427)
!17427 = distinct !DILocation(line: 774, column: 2, scope: !17416)
!17428 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17429)
!17429 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17427)
!17430 = !DILocation(line: 0, scope: !16485, inlinedAt: !17429)
!17431 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17427)
!17432 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17427)
!17433 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17427)
!17434 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17427)
!17435 = !DILocation(line: 775, column: 3, scope: !17436)
!17436 = distinct !DILexicalBlock(scope: !17437, file: !2568, line: 774, column: 26)
!17437 = distinct !DILexicalBlock(scope: !17416, file: !2568, line: 774, column: 2)
!17438 = !DILocation(line: 0, scope: !16510, inlinedAt: !17439)
!17439 = distinct !DILocation(line: 774, column: 2, scope: !17437)
!17440 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17439)
!17441 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17439)
!17442 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17439)
!17443 = !DILocation(line: 0, scope: !16524, inlinedAt: !17444)
!17444 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17439)
!17445 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17444)
!17446 = !DILocation(line: 777, column: 1, scope: !17404)
!17447 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2568, file: !2568, line: 79, type: !16617, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17448)
!17448 = !{!17449}
!17449 = !DILocalVariable(name: "thread", arg: 1, scope: !17447, file: !2568, line: 79, type: !2461)
!17450 = !DILocation(line: 0, scope: !17447)
!17451 = !DILocation(line: 81, column: 23, scope: !17447)
!17452 = !DILocation(line: 81, column: 36, scope: !17447)
!17453 = !DILocation(line: 81, column: 53, scope: !17447)
!17454 = !DILocation(line: 81, column: 2, scope: !17447)
!17455 = distinct !DISubprogram(name: "pend_locked", scope: !2568, file: !2568, line: 760, type: !17405, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17456)
!17456 = !{!17457, !17458, !17459}
!17457 = !DILocalVariable(name: "thread", arg: 1, scope: !17455, file: !2568, line: 760, type: !2461)
!17458 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17455, file: !2568, line: 760, type: !2492)
!17459 = !DILocalVariable(name: "timeout", arg: 3, scope: !17455, file: !2568, line: 761, type: !17407)
!17460 = !DILocation(line: 0, scope: !17455)
!17461 = !DILocation(line: 766, column: 2, scope: !17455)
!17462 = !DILocation(line: 767, column: 2, scope: !17455)
!17463 = !DILocation(line: 768, column: 1, scope: !17455)
!17464 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2568, file: !2568, line: 740, type: !17465, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17467)
!17465 = !DISubroutineType(types: !17466)
!17466 = !{null, !2461, !2492}
!17467 = !{!17468, !17469}
!17468 = !DILocalVariable(name: "thread", arg: 1, scope: !17464, file: !2568, line: 740, type: !2461)
!17469 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17464, file: !2568, line: 740, type: !2492)
!17470 = !DILocation(line: 0, scope: !17464)
!17471 = !DILocation(line: 742, column: 2, scope: !17464)
!17472 = !DILocation(line: 743, column: 2, scope: !17464)
!17473 = !DILocation(line: 747, column: 13, scope: !17474)
!17474 = distinct !DILexicalBlock(scope: !17464, file: !2568, line: 747, column: 6)
!17475 = !DILocation(line: 747, column: 6, scope: !17464)
!17476 = !DILocation(line: 748, column: 16, scope: !17477)
!17477 = distinct !DILexicalBlock(scope: !17474, file: !2568, line: 747, column: 22)
!17478 = !DILocation(line: 748, column: 26, scope: !17477)
!17479 = !DILocation(line: 749, column: 28, scope: !17477)
!17480 = !DILocation(line: 0, scope: !16699, inlinedAt: !17481)
!17481 = distinct !DILocation(line: 749, column: 3, scope: !17477)
!17482 = !DILocation(line: 186, column: 2, scope: !16709, inlinedAt: !17481)
!17483 = !DILocation(line: 186, column: 2, scope: !16710, inlinedAt: !17481)
!17484 = !DILocation(line: 186, column: 2, scope: !16713, inlinedAt: !17481)
!17485 = !DILocation(line: 188, column: 2, scope: !16715, inlinedAt: !17481)
!17486 = !DILocation(line: 188, column: 2, scope: !16717, inlinedAt: !17481)
!17487 = !DILocation(line: 0, scope: !16715, inlinedAt: !17481)
!17488 = !DILocation(line: 189, column: 7, scope: !16720, inlinedAt: !17481)
!17489 = !DILocation(line: 189, column: 35, scope: !16720, inlinedAt: !17481)
!17490 = !DILocation(line: 189, column: 7, scope: !16721, inlinedAt: !17481)
!17491 = !DILocation(line: 191, column: 21, scope: !16725, inlinedAt: !17481)
!17492 = !DILocation(line: 190, column: 4, scope: !16725, inlinedAt: !17481)
!17493 = !DILocation(line: 192, column: 4, scope: !16725, inlinedAt: !17481)
!17494 = distinct !{!17494, !17485, !17495}
!17495 = !DILocation(line: 194, column: 2, scope: !16715, inlinedAt: !17481)
!17496 = !DILocation(line: 196, column: 37, scope: !16699, inlinedAt: !17481)
!17497 = !DILocation(line: 196, column: 2, scope: !16699, inlinedAt: !17481)
!17498 = !DILocation(line: 197, column: 1, scope: !16699, inlinedAt: !17481)
!17499 = !DILocation(line: 751, column: 1, scope: !17464)
!17500 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2568, file: !2568, line: 753, type: !17501, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17503)
!17501 = !DISubroutineType(types: !17502)
!17502 = !{null, !2461, !17407}
!17503 = !{!17504, !17505}
!17504 = !DILocalVariable(name: "thread", arg: 1, scope: !17500, file: !2568, line: 753, type: !2461)
!17505 = !DILocalVariable(name: "timeout", arg: 2, scope: !17500, file: !2568, line: 753, type: !17407)
!17506 = !DILocation(line: 0, scope: !17500)
!17507 = !DILocation(line: 755, column: 7, scope: !17508)
!17508 = distinct !DILexicalBlock(scope: !17500, file: !2568, line: 755, column: 6)
!17509 = !DILocation(line: 755, column: 6, scope: !17500)
!17510 = !DILocation(line: 756, column: 3, scope: !17511)
!17511 = distinct !DILexicalBlock(scope: !17508, file: !2568, line: 755, column: 41)
!17512 = !DILocation(line: 757, column: 2, scope: !17511)
!17513 = !DILocation(line: 758, column: 1, scope: !17500)
!17514 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15260, file: !15260, line: 47, type: !17501, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17515)
!17515 = !{!17516, !17517}
!17516 = !DILocalVariable(name: "thread", arg: 1, scope: !17514, file: !15260, line: 47, type: !2461)
!17517 = !DILocalVariable(name: "ticks", arg: 2, scope: !17514, file: !15260, line: 47, type: !17407)
!17518 = !DILocation(line: 0, scope: !17514)
!17519 = !DILocation(line: 49, column: 30, scope: !17514)
!17520 = !DILocation(line: 49, column: 2, scope: !17514)
!17521 = !DILocation(line: 50, column: 1, scope: !17514)
!17522 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2568, file: !2568, line: 795, type: !2518, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17523)
!17523 = !{!17524, !17525, !17526, !17528, !17529}
!17524 = !DILocalVariable(name: "timeout", arg: 1, scope: !17522, file: !2568, line: 795, type: !2520)
!17525 = !DILocalVariable(name: "thread", scope: !17522, file: !2568, line: 797, type: !2461)
!17526 = !DILocalVariable(name: "__i", scope: !17527, file: !2568, line: 800, type: !16468)
!17527 = distinct !DILexicalBlock(scope: !17522, file: !2568, line: 800, column: 2)
!17528 = !DILocalVariable(name: "__key", scope: !17527, file: !2568, line: 800, type: !16468)
!17529 = !DILocalVariable(name: "killed", scope: !17530, file: !2568, line: 801, type: !492)
!17530 = distinct !DILexicalBlock(scope: !17531, file: !2568, line: 800, column: 26)
!17531 = distinct !DILexicalBlock(scope: !17527, file: !2568, line: 800, column: 2)
!17532 = !DILocation(line: 0, scope: !17522)
!17533 = !DILocation(line: 797, column: 28, scope: !17522)
!17534 = !DILocation(line: 0, scope: !17527)
!17535 = !DILocation(line: 0, scope: !16476, inlinedAt: !17536)
!17536 = distinct !DILocation(line: 800, column: 2, scope: !17527)
!17537 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17538)
!17538 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17536)
!17539 = !DILocation(line: 0, scope: !16485, inlinedAt: !17538)
!17540 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17536)
!17541 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17536)
!17542 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17536)
!17543 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17536)
!17544 = !DILocation(line: 801, column: 27, scope: !17530)
!17545 = !DILocation(line: 801, column: 32, scope: !17530)
!17546 = !DILocation(line: 801, column: 61, scope: !17530)
!17547 = !DILocation(line: 0, scope: !17530)
!17548 = !DILocation(line: 804, column: 7, scope: !17530)
!17549 = !DILocation(line: 805, column: 21, scope: !17550)
!17550 = distinct !DILexicalBlock(scope: !17551, file: !2568, line: 805, column: 8)
!17551 = distinct !DILexicalBlock(scope: !17552, file: !2568, line: 804, column: 16)
!17552 = distinct !DILexicalBlock(scope: !17530, file: !2568, line: 804, column: 7)
!17553 = !DILocation(line: 805, column: 31, scope: !17550)
!17554 = !DILocation(line: 805, column: 8, scope: !17551)
!17555 = !DILocation(line: 806, column: 5, scope: !17556)
!17556 = distinct !DILexicalBlock(scope: !17550, file: !2568, line: 805, column: 40)
!17557 = !DILocation(line: 807, column: 4, scope: !17556)
!17558 = !DILocation(line: 808, column: 4, scope: !17551)
!17559 = !DILocation(line: 809, column: 4, scope: !17551)
!17560 = !DILocation(line: 810, column: 4, scope: !17551)
!17561 = !DILocation(line: 811, column: 3, scope: !17551)
!17562 = !DILocation(line: 0, scope: !16510, inlinedAt: !17563)
!17563 = distinct !DILocation(line: 800, column: 2, scope: !17531)
!17564 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17563)
!17565 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17563)
!17566 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17563)
!17567 = !DILocation(line: 0, scope: !16524, inlinedAt: !17568)
!17568 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17563)
!17569 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17568)
!17570 = !DILocation(line: 813, column: 1, scope: !17522)
!17571 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2568, file: !2568, line: 779, type: !16434, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17572)
!17572 = !{!17573}
!17573 = !DILocalVariable(name: "thread", arg: 1, scope: !17571, file: !2568, line: 779, type: !2461)
!17574 = !DILocation(line: 0, scope: !17571)
!17575 = !DILocation(line: 781, column: 21, scope: !17571)
!17576 = !DILocation(line: 781, column: 2, scope: !17571)
!17577 = !DILocation(line: 782, column: 2, scope: !17571)
!17578 = !DILocation(line: 783, column: 15, scope: !17571)
!17579 = !DILocation(line: 783, column: 25, scope: !17571)
!17580 = !DILocation(line: 784, column: 1, scope: !17571)
!17581 = distinct !DISubprogram(name: "pended_on_thread", scope: !2568, file: !2568, line: 724, type: !17582, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17584)
!17582 = !DISubroutineType(types: !17583)
!17583 = !{!2492, !2461}
!17584 = !{!17585}
!17585 = !DILocalVariable(name: "thread", arg: 1, scope: !17581, file: !2568, line: 724, type: !2461)
!17586 = !DILocation(line: 0, scope: !17581)
!17587 = !DILocation(line: 726, column: 2, scope: !17588)
!17588 = distinct !DILexicalBlock(scope: !17589, file: !2568, line: 726, column: 2)
!17589 = distinct !DILexicalBlock(scope: !17581, file: !2568, line: 726, column: 2)
!17590 = !DILocation(line: 726, column: 2, scope: !17589)
!17591 = !DILocation(line: 726, column: 2, scope: !17592)
!17592 = distinct !DILexicalBlock(scope: !17588, file: !2568, line: 726, column: 2)
!17593 = !DILocation(line: 728, column: 2, scope: !17581)
!17594 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14831, file: !14831, line: 165, type: !16434, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17595)
!17595 = !{!17596}
!17596 = !DILocalVariable(name: "thread", arg: 1, scope: !17594, file: !14831, line: 165, type: !2461)
!17597 = !DILocation(line: 0, scope: !17594)
!17598 = !DILocation(line: 167, column: 15, scope: !17594)
!17599 = !DILocation(line: 167, column: 28, scope: !17594)
!17600 = !DILocation(line: 168, column: 1, scope: !17594)
!17601 = distinct !DISubprogram(name: "unready_thread", scope: !2568, file: !2568, line: 731, type: !16434, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17602)
!17602 = !{!17603}
!17603 = !DILocalVariable(name: "thread", arg: 1, scope: !17601, file: !2568, line: 731, type: !2461)
!17604 = !DILocation(line: 0, scope: !17601)
!17605 = !DILocation(line: 733, column: 6, scope: !17606)
!17606 = distinct !DILexicalBlock(scope: !17601, file: !2568, line: 733, column: 6)
!17607 = !DILocation(line: 733, column: 6, scope: !17601)
!17608 = !DILocation(line: 0, scope: !16668, inlinedAt: !17609)
!17609 = distinct !DILocation(line: 734, column: 3, scope: !17610)
!17610 = distinct !DILexicalBlock(scope: !17606, file: !2568, line: 733, column: 34)
!17611 = !DILocation(line: 266, column: 15, scope: !16668, inlinedAt: !17609)
!17612 = !DILocation(line: 266, column: 28, scope: !16668, inlinedAt: !17609)
!17613 = !DILocation(line: 0, scope: !16676, inlinedAt: !17614)
!17614 = distinct !DILocation(line: 268, column: 3, scope: !16680, inlinedAt: !17609)
!17615 = !DILocation(line: 234, column: 2, scope: !16676, inlinedAt: !17614)
!17616 = !DILocation(line: 735, column: 2, scope: !17610)
!17617 = !DILocation(line: 736, column: 25, scope: !17601)
!17618 = !DILocation(line: 736, column: 22, scope: !17601)
!17619 = !DILocation(line: 736, column: 2, scope: !17601)
!17620 = !DILocation(line: 737, column: 1, scope: !17601)
!17621 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14831, file: !14831, line: 160, type: !16434, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17622)
!17622 = !{!17623}
!17623 = !DILocalVariable(name: "thread", arg: 1, scope: !17621, file: !14831, line: 160, type: !2461)
!17624 = !DILocation(line: 0, scope: !17621)
!17625 = !DILocation(line: 162, column: 15, scope: !17621)
!17626 = !DILocation(line: 162, column: 28, scope: !17621)
!17627 = !DILocation(line: 163, column: 1, scope: !17621)
!17628 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2568, file: !2568, line: 786, type: !16434, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17629)
!17629 = !{!17630, !17631, !17633}
!17630 = !DILocalVariable(name: "thread", arg: 1, scope: !17628, file: !2568, line: 786, type: !2461)
!17631 = !DILocalVariable(name: "__i", scope: !17632, file: !2568, line: 788, type: !16468)
!17632 = distinct !DILexicalBlock(scope: !17628, file: !2568, line: 788, column: 2)
!17633 = !DILocalVariable(name: "__key", scope: !17632, file: !2568, line: 788, type: !16468)
!17634 = !DILocation(line: 0, scope: !17628)
!17635 = !DILocation(line: 0, scope: !17632)
!17636 = !DILocation(line: 0, scope: !16476, inlinedAt: !17637)
!17637 = distinct !DILocation(line: 788, column: 2, scope: !17632)
!17638 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17639)
!17639 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17637)
!17640 = !DILocation(line: 0, scope: !16485, inlinedAt: !17639)
!17641 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17637)
!17642 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17637)
!17643 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17637)
!17644 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17637)
!17645 = !DILocation(line: 789, column: 3, scope: !17646)
!17646 = distinct !DILexicalBlock(scope: !17647, file: !2568, line: 788, column: 26)
!17647 = distinct !DILexicalBlock(scope: !17632, file: !2568, line: 788, column: 2)
!17648 = !DILocation(line: 0, scope: !16510, inlinedAt: !17649)
!17649 = distinct !DILocation(line: 788, column: 2, scope: !17647)
!17650 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17649)
!17651 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17649)
!17652 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17649)
!17653 = !DILocation(line: 0, scope: !16524, inlinedAt: !17654)
!17654 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17649)
!17655 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17654)
!17656 = !DILocation(line: 791, column: 1, scope: !17628)
!17657 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2568, file: !2568, line: 816, type: !17658, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17660)
!17658 = !DISubroutineType(types: !17659)
!17659 = !{!105, !113, !2492, !17407}
!17660 = !{!17661, !17662, !17663, !17664, !17665, !17667}
!17661 = !DILocalVariable(name: "key", arg: 1, scope: !17657, file: !2568, line: 816, type: !113)
!17662 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17657, file: !2568, line: 816, type: !2492)
!17663 = !DILocalVariable(name: "timeout", arg: 3, scope: !17657, file: !2568, line: 816, type: !17407)
!17664 = !DILocalVariable(name: "ret", scope: !17657, file: !2568, line: 828, type: !105)
!17665 = !DILocalVariable(name: "__i", scope: !17666, file: !2568, line: 829, type: !16468)
!17666 = distinct !DILexicalBlock(scope: !17657, file: !2568, line: 829, column: 2)
!17667 = !DILocalVariable(name: "__key", scope: !17666, file: !2568, line: 829, type: !16468)
!17668 = !DILocation(line: 0, scope: !17657)
!17669 = !DILocation(line: 823, column: 14, scope: !17657)
!17670 = !DILocation(line: 823, column: 2, scope: !17657)
!17671 = !DILocation(line: 826, column: 20, scope: !17657)
!17672 = !DILocation(line: 826, column: 18, scope: !17657)
!17673 = !DILocation(line: 828, column: 12, scope: !17657)
!17674 = !DILocation(line: 0, scope: !17666)
!17675 = !DILocation(line: 0, scope: !16476, inlinedAt: !17676)
!17676 = distinct !DILocation(line: 829, column: 2, scope: !17666)
!17677 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17678)
!17678 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17676)
!17679 = !DILocation(line: 0, scope: !16485, inlinedAt: !17678)
!17680 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17676)
!17681 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17676)
!17682 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17676)
!17683 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17676)
!17684 = !DILocation(line: 830, column: 7, scope: !17685)
!17685 = distinct !DILexicalBlock(scope: !17686, file: !2568, line: 830, column: 7)
!17686 = distinct !DILexicalBlock(scope: !17687, file: !2568, line: 829, column: 26)
!17687 = distinct !DILexicalBlock(scope: !17666, file: !2568, line: 829, column: 2)
!17688 = !DILocation(line: 830, column: 26, scope: !17685)
!17689 = !DILocation(line: 830, column: 23, scope: !17685)
!17690 = !DILocation(line: 830, column: 7, scope: !17686)
!17691 = !DILocation(line: 831, column: 20, scope: !17692)
!17692 = distinct !DILexicalBlock(scope: !17685, file: !2568, line: 830, column: 36)
!17693 = !DILocation(line: 832, column: 3, scope: !17692)
!17694 = !DILocation(line: 0, scope: !16510, inlinedAt: !17695)
!17695 = distinct !DILocation(line: 829, column: 2, scope: !17687)
!17696 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17695)
!17697 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17695)
!17698 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17695)
!17699 = !DILocation(line: 0, scope: !16524, inlinedAt: !17700)
!17700 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17695)
!17701 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17700)
!17702 = !DILocation(line: 834, column: 2, scope: !17657)
!17703 = distinct !DISubprogram(name: "z_pend_curr", scope: !2568, file: !2568, line: 840, type: !17704, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17706)
!17704 = !DISubroutineType(types: !17705)
!17705 = !{!105, !16479, !16468, !2492, !17407}
!17706 = !{!17707, !17708, !17709, !17710}
!17707 = !DILocalVariable(name: "lock", arg: 1, scope: !17703, file: !2568, line: 840, type: !16479)
!17708 = !DILocalVariable(name: "key", arg: 2, scope: !17703, file: !2568, line: 840, type: !16468)
!17709 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17703, file: !2568, line: 841, type: !2492)
!17710 = !DILocalVariable(name: "timeout", arg: 4, scope: !17703, file: !2568, line: 841, type: !17407)
!17711 = !DILocation(line: 0, scope: !17703)
!17712 = !DILocation(line: 844, column: 20, scope: !17703)
!17713 = !DILocation(line: 844, column: 18, scope: !17703)
!17714 = !DILocation(line: 846, column: 2, scope: !17715)
!17715 = distinct !DILexicalBlock(scope: !17716, file: !2568, line: 846, column: 2)
!17716 = distinct !DILexicalBlock(scope: !17703, file: !2568, line: 846, column: 2)
!17717 = !DILocation(line: 846, column: 2, scope: !17716)
!17718 = !DILocation(line: 846, column: 2, scope: !17719)
!17719 = distinct !DILexicalBlock(scope: !17715, file: !2568, line: 846, column: 2)
!17720 = !DILocation(line: 0, scope: !16476, inlinedAt: !17721)
!17721 = distinct !DILocation(line: 856, column: 9, scope: !17703)
!17722 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17723)
!17723 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17721)
!17724 = !DILocation(line: 0, scope: !16485, inlinedAt: !17723)
!17725 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17721)
!17726 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17721)
!17727 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17721)
!17728 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17721)
!17729 = !DILocation(line: 857, column: 14, scope: !17703)
!17730 = !DILocation(line: 857, column: 2, scope: !17703)
!17731 = !DILocation(line: 0, scope: !17206, inlinedAt: !17732)
!17732 = distinct !DILocation(line: 858, column: 2, scope: !17703)
!17733 = !DILocation(line: 225, column: 2, scope: !17213, inlinedAt: !17732)
!17734 = !DILocation(line: 225, column: 2, scope: !17214, inlinedAt: !17732)
!17735 = !DILocation(line: 225, column: 2, scope: !17217, inlinedAt: !17732)
!17736 = !DILocation(line: 0, scope: !17197, inlinedAt: !17737)
!17737 = distinct !DILocation(line: 859, column: 9, scope: !17703)
!17738 = !DILocation(line: 0, scope: !17206, inlinedAt: !17739)
!17739 = distinct !DILocation(line: 195, column: 2, scope: !17197, inlinedAt: !17737)
!17740 = !DILocation(line: 225, column: 2, scope: !17213, inlinedAt: !17739)
!17741 = !DILocation(line: 225, column: 2, scope: !17214, inlinedAt: !17739)
!17742 = !DILocation(line: 225, column: 2, scope: !17217, inlinedAt: !17739)
!17743 = !DILocation(line: 196, column: 9, scope: !17197, inlinedAt: !17737)
!17744 = !DILocation(line: 859, column: 2, scope: !17703)
!17745 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2568, file: !2568, line: 862, type: !17746, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17748)
!17746 = !DISubroutineType(types: !17747)
!17747 = !{!2461, !2492}
!17748 = !{!17749, !17750, !17751, !17753}
!17749 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17745, file: !2568, line: 862, type: !2492)
!17750 = !DILocalVariable(name: "thread", scope: !17745, file: !2568, line: 864, type: !2461)
!17751 = !DILocalVariable(name: "__i", scope: !17752, file: !2568, line: 866, type: !16468)
!17752 = distinct !DILexicalBlock(scope: !17745, file: !2568, line: 866, column: 2)
!17753 = !DILocalVariable(name: "__key", scope: !17752, file: !2568, line: 866, type: !16468)
!17754 = !DILocation(line: 0, scope: !17745)
!17755 = !DILocation(line: 0, scope: !17752)
!17756 = !DILocation(line: 0, scope: !16476, inlinedAt: !17757)
!17757 = distinct !DILocation(line: 866, column: 2, scope: !17752)
!17758 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17759)
!17759 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17757)
!17760 = !DILocation(line: 0, scope: !16485, inlinedAt: !17759)
!17761 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17757)
!17762 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17757)
!17763 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17757)
!17764 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17757)
!17765 = !DILocation(line: 867, column: 12, scope: !17766)
!17766 = distinct !DILexicalBlock(scope: !17767, file: !2568, line: 866, column: 26)
!17767 = distinct !DILexicalBlock(scope: !17752, file: !2568, line: 866, column: 2)
!17768 = !DILocation(line: 869, column: 14, scope: !17769)
!17769 = distinct !DILexicalBlock(scope: !17766, file: !2568, line: 869, column: 7)
!17770 = !DILocation(line: 869, column: 7, scope: !17766)
!17771 = !DILocation(line: 870, column: 4, scope: !17772)
!17772 = distinct !DILexicalBlock(scope: !17769, file: !2568, line: 869, column: 23)
!17773 = !DILocation(line: 871, column: 3, scope: !17772)
!17774 = !DILocation(line: 0, scope: !16510, inlinedAt: !17775)
!17775 = distinct !DILocation(line: 866, column: 2, scope: !17767)
!17776 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17775)
!17777 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17775)
!17778 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17775)
!17779 = !DILocation(line: 0, scope: !16524, inlinedAt: !17780)
!17780 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17775)
!17781 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17780)
!17782 = !DILocation(line: 874, column: 2, scope: !17745)
!17783 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2568, file: !2568, line: 877, type: !17746, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17784)
!17784 = !{!17785, !17786, !17787, !17789}
!17785 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17783, file: !2568, line: 877, type: !2492)
!17786 = !DILocalVariable(name: "thread", scope: !17783, file: !2568, line: 879, type: !2461)
!17787 = !DILocalVariable(name: "__i", scope: !17788, file: !2568, line: 881, type: !16468)
!17788 = distinct !DILexicalBlock(scope: !17783, file: !2568, line: 881, column: 2)
!17789 = !DILocalVariable(name: "__key", scope: !17788, file: !2568, line: 881, type: !16468)
!17790 = !DILocation(line: 0, scope: !17783)
!17791 = !DILocation(line: 0, scope: !17788)
!17792 = !DILocation(line: 0, scope: !16476, inlinedAt: !17793)
!17793 = distinct !DILocation(line: 881, column: 2, scope: !17788)
!17794 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17795)
!17795 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17793)
!17796 = !DILocation(line: 0, scope: !16485, inlinedAt: !17795)
!17797 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17793)
!17798 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17793)
!17799 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17793)
!17800 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17793)
!17801 = !DILocation(line: 882, column: 12, scope: !17802)
!17802 = distinct !DILexicalBlock(scope: !17803, file: !2568, line: 881, column: 26)
!17803 = distinct !DILexicalBlock(scope: !17788, file: !2568, line: 881, column: 2)
!17804 = !DILocation(line: 884, column: 14, scope: !17805)
!17805 = distinct !DILexicalBlock(scope: !17802, file: !2568, line: 884, column: 7)
!17806 = !DILocation(line: 884, column: 7, scope: !17802)
!17807 = !DILocation(line: 885, column: 4, scope: !17808)
!17808 = distinct !DILexicalBlock(scope: !17805, file: !2568, line: 884, column: 23)
!17809 = !DILocation(line: 886, column: 10, scope: !17808)
!17810 = !DILocation(line: 887, column: 3, scope: !17808)
!17811 = !DILocation(line: 0, scope: !16510, inlinedAt: !17812)
!17812 = distinct !DILocation(line: 881, column: 2, scope: !17803)
!17813 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17812)
!17814 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17812)
!17815 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17812)
!17816 = !DILocation(line: 0, scope: !16524, inlinedAt: !17817)
!17817 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17812)
!17818 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17817)
!17819 = !DILocation(line: 890, column: 2, scope: !17783)
!17820 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2568, file: !2568, line: 893, type: !16434, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17821)
!17821 = !{!17822}
!17822 = !DILocalVariable(name: "thread", arg: 1, scope: !17820, file: !2568, line: 893, type: !2461)
!17823 = !DILocation(line: 0, scope: !17820)
!17824 = !DILocation(line: 0, scope: !17628, inlinedAt: !17825)
!17825 = distinct !DILocation(line: 895, column: 2, scope: !17820)
!17826 = !DILocation(line: 0, scope: !17632, inlinedAt: !17825)
!17827 = !DILocation(line: 0, scope: !16476, inlinedAt: !17828)
!17828 = distinct !DILocation(line: 788, column: 2, scope: !17632, inlinedAt: !17825)
!17829 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17830)
!17830 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17828)
!17831 = !DILocation(line: 0, scope: !16485, inlinedAt: !17830)
!17832 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17828)
!17833 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17828)
!17834 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17828)
!17835 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17828)
!17836 = !DILocation(line: 789, column: 3, scope: !17646, inlinedAt: !17825)
!17837 = !DILocation(line: 0, scope: !16510, inlinedAt: !17838)
!17838 = distinct !DILocation(line: 788, column: 2, scope: !17647, inlinedAt: !17825)
!17839 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17838)
!17840 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17838)
!17841 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17838)
!17842 = !DILocation(line: 0, scope: !16524, inlinedAt: !17843)
!17843 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17838)
!17844 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17843)
!17845 = !DILocation(line: 896, column: 8, scope: !17820)
!17846 = !DILocation(line: 897, column: 1, scope: !17820)
!17847 = distinct !DISubprogram(name: "z_set_prio", scope: !2568, file: !2568, line: 902, type: !16852, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17848)
!17848 = !{!17849, !17850, !17851, !17852, !17854}
!17849 = !DILocalVariable(name: "thread", arg: 1, scope: !17847, file: !2568, line: 902, type: !2461)
!17850 = !DILocalVariable(name: "prio", arg: 2, scope: !17847, file: !2568, line: 902, type: !105)
!17851 = !DILocalVariable(name: "need_sched", scope: !17847, file: !2568, line: 904, type: !492)
!17852 = !DILocalVariable(name: "__i", scope: !17853, file: !2568, line: 906, type: !16468)
!17853 = distinct !DILexicalBlock(scope: !17847, file: !2568, line: 906, column: 2)
!17854 = !DILocalVariable(name: "__key", scope: !17853, file: !2568, line: 906, type: !16468)
!17855 = !DILocation(line: 0, scope: !17847)
!17856 = !DILocation(line: 0, scope: !17853)
!17857 = !DILocation(line: 0, scope: !16476, inlinedAt: !17858)
!17858 = distinct !DILocation(line: 906, column: 2, scope: !17853)
!17859 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17860)
!17860 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17858)
!17861 = !DILocation(line: 0, scope: !16485, inlinedAt: !17860)
!17862 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17858)
!17863 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17858)
!17864 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17858)
!17865 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17858)
!17866 = !DILocation(line: 907, column: 16, scope: !17867)
!17867 = distinct !DILexicalBlock(scope: !17868, file: !2568, line: 906, column: 26)
!17868 = distinct !DILexicalBlock(scope: !17853, file: !2568, line: 906, column: 2)
!17869 = !DILocation(line: 909, column: 7, scope: !17867)
!17870 = !DILocation(line: 0, scope: !16668, inlinedAt: !17871)
!17871 = distinct !DILocation(line: 912, column: 5, scope: !17872)
!17872 = distinct !DILexicalBlock(scope: !17873, file: !2568, line: 911, column: 63)
!17873 = distinct !DILexicalBlock(scope: !17874, file: !2568, line: 911, column: 8)
!17874 = distinct !DILexicalBlock(scope: !17875, file: !2568, line: 909, column: 19)
!17875 = distinct !DILexicalBlock(scope: !17867, file: !2568, line: 909, column: 7)
!17876 = !DILocation(line: 266, column: 28, scope: !16668, inlinedAt: !17871)
!17877 = !DILocation(line: 0, scope: !16676, inlinedAt: !17878)
!17878 = distinct !DILocation(line: 268, column: 3, scope: !16680, inlinedAt: !17871)
!17879 = !DILocation(line: 234, column: 2, scope: !16676, inlinedAt: !17878)
!17880 = !DILocation(line: 913, column: 23, scope: !17872)
!17881 = !DILocation(line: 0, scope: !16685, inlinedAt: !17882)
!17882 = distinct !DILocation(line: 914, column: 5, scope: !17872)
!17883 = !DILocation(line: 252, column: 28, scope: !16685, inlinedAt: !17882)
!17884 = !DILocation(line: 0, scope: !16692, inlinedAt: !17885)
!17885 = distinct !DILocation(line: 254, column: 3, scope: !16696, inlinedAt: !17882)
!17886 = !DILocation(line: 0, scope: !16699, inlinedAt: !17887)
!17887 = distinct !DILocation(line: 229, column: 2, scope: !16692, inlinedAt: !17885)
!17888 = !DILocation(line: 186, column: 2, scope: !16709, inlinedAt: !17887)
!17889 = !DILocation(line: 186, column: 2, scope: !16710, inlinedAt: !17887)
!17890 = !DILocation(line: 186, column: 2, scope: !16713, inlinedAt: !17887)
!17891 = !DILocation(line: 188, column: 2, scope: !16715, inlinedAt: !17887)
!17892 = !DILocation(line: 188, column: 2, scope: !16717, inlinedAt: !17887)
!17893 = !DILocation(line: 0, scope: !16715, inlinedAt: !17887)
!17894 = !DILocation(line: 189, column: 7, scope: !16720, inlinedAt: !17887)
!17895 = !DILocation(line: 189, column: 35, scope: !16720, inlinedAt: !17887)
!17896 = !DILocation(line: 189, column: 7, scope: !16721, inlinedAt: !17887)
!17897 = !DILocation(line: 190, column: 4, scope: !16725, inlinedAt: !17887)
!17898 = !DILocation(line: 192, column: 4, scope: !16725, inlinedAt: !17887)
!17899 = distinct !{!17899, !17891, !17900}
!17900 = !DILocation(line: 194, column: 2, scope: !16715, inlinedAt: !17887)
!17901 = !DILocation(line: 196, column: 2, scope: !16699, inlinedAt: !17887)
!17902 = !DILocation(line: 197, column: 1, scope: !16699, inlinedAt: !17887)
!17903 = !DILocation(line: 918, column: 4, scope: !17874)
!17904 = !DILocation(line: 919, column: 3, scope: !17874)
!17905 = !DILocation(line: 920, column: 22, scope: !17906)
!17906 = distinct !DILexicalBlock(scope: !17875, file: !2568, line: 919, column: 10)
!17907 = !DILocation(line: 0, scope: !16510, inlinedAt: !17908)
!17908 = distinct !DILocation(line: 906, column: 2, scope: !17868)
!17909 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17908)
!17910 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17908)
!17911 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17908)
!17912 = !DILocation(line: 0, scope: !16524, inlinedAt: !17913)
!17913 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17908)
!17914 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17913)
!17915 = !DILocation(line: 926, column: 2, scope: !17847)
!17916 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2568, file: !2568, line: 929, type: !17917, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17919)
!17917 = !DISubroutineType(types: !17918)
!17918 = !{null, !2461, !105}
!17919 = !{!17920, !17921, !17922}
!17920 = !DILocalVariable(name: "thread", arg: 1, scope: !17916, file: !2568, line: 929, type: !2461)
!17921 = !DILocalVariable(name: "prio", arg: 2, scope: !17916, file: !2568, line: 929, type: !105)
!17922 = !DILocalVariable(name: "need_sched", scope: !17916, file: !2568, line: 931, type: !492)
!17923 = !DILocation(line: 0, scope: !17916)
!17924 = !DILocation(line: 931, column: 20, scope: !17916)
!17925 = !DILocation(line: 935, column: 17, scope: !17926)
!17926 = distinct !DILexicalBlock(scope: !17916, file: !2568, line: 935, column: 6)
!17927 = !DILocation(line: 935, column: 20, scope: !17926)
!17928 = !DILocation(line: 935, column: 35, scope: !17926)
!17929 = !DILocation(line: 935, column: 48, scope: !17926)
!17930 = !DILocation(line: 935, column: 6, scope: !17916)
!17931 = !DILocation(line: 936, column: 3, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17926, file: !2568, line: 935, column: 55)
!17933 = !DILocation(line: 937, column: 2, scope: !17932)
!17934 = !DILocation(line: 938, column: 1, scope: !17916)
!17935 = distinct !DISubprogram(name: "k_sched_lock", scope: !2568, file: !2568, line: 987, type: !266, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17936)
!17936 = !{!17937, !17939}
!17937 = !DILocalVariable(name: "__i", scope: !17938, file: !2568, line: 989, type: !16468)
!17938 = distinct !DILexicalBlock(scope: !17935, file: !2568, line: 989, column: 2)
!17939 = !DILocalVariable(name: "__key", scope: !17938, file: !2568, line: 989, type: !16468)
!17940 = !DILocation(line: 0, scope: !17938)
!17941 = !DILocation(line: 0, scope: !16476, inlinedAt: !17942)
!17942 = distinct !DILocation(line: 989, column: 2, scope: !17938)
!17943 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17944)
!17944 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17942)
!17945 = !DILocation(line: 0, scope: !16485, inlinedAt: !17944)
!17946 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17942)
!17947 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17942)
!17948 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17942)
!17949 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17942)
!17950 = !DILocation(line: 992, column: 3, scope: !17951)
!17951 = distinct !DILexicalBlock(scope: !17952, file: !2568, line: 989, column: 26)
!17952 = distinct !DILexicalBlock(scope: !17938, file: !2568, line: 989, column: 2)
!17953 = !DILocation(line: 0, scope: !16510, inlinedAt: !17954)
!17954 = distinct !DILocation(line: 989, column: 2, scope: !17952)
!17955 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !17954)
!17956 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !17954)
!17957 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !17954)
!17958 = !DILocation(line: 0, scope: !16524, inlinedAt: !17959)
!17959 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !17954)
!17960 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !17959)
!17961 = !DILocation(line: 994, column: 1, scope: !17935)
!17962 = distinct !DISubprogram(name: "z_sched_lock", scope: !14831, file: !14831, line: 251, type: !266, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !397)
!17963 = !DILocation(line: 1031, column: 3, scope: !17246, inlinedAt: !17964)
!17964 = distinct !DILocation(line: 48, column: 10, scope: !17250, inlinedAt: !17965)
!17965 = distinct !DILocation(line: 253, column: 2, scope: !17966)
!17966 = distinct !DILexicalBlock(scope: !17967, file: !14831, line: 253, column: 2)
!17967 = distinct !DILexicalBlock(scope: !17962, file: !14831, line: 253, column: 2)
!17968 = !DILocation(line: 0, scope: !17246, inlinedAt: !17964)
!17969 = !DILocation(line: 48, column: 9, scope: !17250, inlinedAt: !17965)
!17970 = !DILocation(line: 253, column: 2, scope: !17967)
!17971 = !DILocation(line: 253, column: 2, scope: !17972)
!17972 = distinct !DILexicalBlock(scope: !17966, file: !14831, line: 253, column: 2)
!17973 = !DILocation(line: 254, column: 2, scope: !17974)
!17974 = distinct !DILexicalBlock(scope: !17975, file: !14831, line: 254, column: 2)
!17975 = distinct !DILexicalBlock(scope: !17962, file: !14831, line: 254, column: 2)
!17976 = !DILocation(line: 254, column: 2, scope: !17975)
!17977 = !DILocation(line: 254, column: 2, scope: !17978)
!17978 = distinct !DILexicalBlock(scope: !17974, file: !14831, line: 254, column: 2)
!17979 = !DILocation(line: 256, column: 2, scope: !17962)
!17980 = !DILocation(line: 258, column: 2, scope: !17981)
!17981 = distinct !DILexicalBlock(scope: !17962, file: !14831, line: 258, column: 2)
!17982 = !{i64 2155196428}
!17983 = !DILocation(line: 259, column: 1, scope: !17962)
!17984 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2568, file: !2568, line: 996, type: !266, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !17985)
!17985 = !{!17986, !17988}
!17986 = !DILocalVariable(name: "__i", scope: !17987, file: !2568, line: 998, type: !16468)
!17987 = distinct !DILexicalBlock(scope: !17984, file: !2568, line: 998, column: 2)
!17988 = !DILocalVariable(name: "__key", scope: !17987, file: !2568, line: 998, type: !16468)
!17989 = !DILocation(line: 0, scope: !17987)
!17990 = !DILocation(line: 0, scope: !16476, inlinedAt: !17991)
!17991 = distinct !DILocation(line: 998, column: 2, scope: !17987)
!17992 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !17993)
!17993 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !17991)
!17994 = !DILocation(line: 0, scope: !16485, inlinedAt: !17993)
!17995 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !17991)
!17996 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !17991)
!17997 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !17991)
!17998 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !17991)
!17999 = !DILocation(line: 999, column: 3, scope: !18000)
!18000 = distinct !DILexicalBlock(scope: !18001, file: !2568, line: 999, column: 3)
!18001 = distinct !DILexicalBlock(scope: !18002, file: !2568, line: 999, column: 3)
!18002 = distinct !DILexicalBlock(scope: !18003, file: !2568, line: 998, column: 26)
!18003 = distinct !DILexicalBlock(scope: !17987, file: !2568, line: 998, column: 2)
!18004 = !DILocation(line: 999, column: 3, scope: !18001)
!18005 = !DILocation(line: 999, column: 3, scope: !18006)
!18006 = distinct !DILexicalBlock(scope: !18000, file: !2568, line: 999, column: 3)
!18007 = !DILocation(line: 1031, column: 3, scope: !17246, inlinedAt: !18008)
!18008 = distinct !DILocation(line: 48, column: 10, scope: !17250, inlinedAt: !18009)
!18009 = distinct !DILocation(line: 1000, column: 3, scope: !18010)
!18010 = distinct !DILexicalBlock(scope: !18011, file: !2568, line: 1000, column: 3)
!18011 = distinct !DILexicalBlock(scope: !18002, file: !2568, line: 1000, column: 3)
!18012 = !DILocation(line: 0, scope: !17246, inlinedAt: !18008)
!18013 = !DILocation(line: 48, column: 9, scope: !17250, inlinedAt: !18009)
!18014 = !DILocation(line: 1000, column: 3, scope: !18011)
!18015 = !DILocation(line: 1000, column: 3, scope: !18016)
!18016 = distinct !DILexicalBlock(scope: !18010, file: !2568, line: 1000, column: 3)
!18017 = !DILocation(line: 1002, column: 5, scope: !18002)
!18018 = !DILocation(line: 1002, column: 20, scope: !18002)
!18019 = !DILocation(line: 1002, column: 3, scope: !18002)
!18020 = !DILocation(line: 1003, column: 3, scope: !18002)
!18021 = !DILocation(line: 0, scope: !16510, inlinedAt: !18022)
!18022 = distinct !DILocation(line: 998, column: 2, scope: !18003)
!18023 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !18022)
!18024 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !18022)
!18025 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !18022)
!18026 = !DILocation(line: 0, scope: !16524, inlinedAt: !18027)
!18027 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !18022)
!18028 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !18027)
!18029 = !DILocation(line: 1011, column: 2, scope: !17984)
!18030 = !DILocation(line: 1012, column: 1, scope: !17984)
!18031 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2568, file: !2568, line: 1014, type: !16825, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !397)
!18032 = !DILocation(line: 1028, column: 25, scope: !18031)
!18033 = !DILocation(line: 1028, column: 2, scope: !18031)
!18034 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2568, file: !2568, line: 1155, type: !18035, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18037)
!18035 = !DISubroutineType(types: !18036)
!18036 = !{!492, !2490, !2490}
!18037 = !{!18038, !18039, !18040, !18041, !18042}
!18038 = !DILocalVariable(name: "a", arg: 1, scope: !18034, file: !2568, line: 1155, type: !2490)
!18039 = !DILocalVariable(name: "b", arg: 2, scope: !18034, file: !2568, line: 1155, type: !2490)
!18040 = !DILocalVariable(name: "thread_a", scope: !18034, file: !2568, line: 1157, type: !2461)
!18041 = !DILocalVariable(name: "thread_b", scope: !18034, file: !2568, line: 1157, type: !2461)
!18042 = !DILocalVariable(name: "cmp", scope: !18034, file: !2568, line: 1158, type: !116)
!18043 = !DILocation(line: 0, scope: !18034)
!18044 = !DILocation(line: 1160, column: 13, scope: !18034)
!18045 = !DILocation(line: 1161, column: 13, scope: !18034)
!18046 = !DILocation(line: 1163, column: 8, scope: !18034)
!18047 = !DILocation(line: 1165, column: 10, scope: !18048)
!18048 = distinct !DILexicalBlock(scope: !18034, file: !2568, line: 1165, column: 6)
!18049 = !DILocation(line: 1165, column: 6, scope: !18034)
!18050 = !DILocation(line: 1167, column: 17, scope: !18051)
!18051 = distinct !DILexicalBlock(scope: !18048, file: !2568, line: 1167, column: 13)
!18052 = !DILocation(line: 1167, column: 13, scope: !18048)
!18053 = !DILocation(line: 1170, column: 25, scope: !18054)
!18054 = distinct !DILexicalBlock(scope: !18051, file: !2568, line: 1169, column: 9)
!18055 = !DILocation(line: 1170, column: 52, scope: !18054)
!18056 = !DILocation(line: 1170, column: 35, scope: !18054)
!18057 = !DILocation(line: 1170, column: 3, scope: !18054)
!18058 = !DILocation(line: 0, scope: !18048)
!18059 = !DILocation(line: 1173, column: 1, scope: !18034)
!18060 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2568, file: !2568, line: 1175, type: !18061, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18076)
!18061 = !DISubroutineType(types: !18062)
!18062 = !{null, !18063, !2461}
!18063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18064, size: 32)
!18064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !18065, line: 37, size: 128, elements: !18066)
!18065 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18066 = !{!18067, !18075}
!18067 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !18064, file: !18065, line: 38, baseType: !18068, size: 96)
!18068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !153, line: 83, size: 96, elements: !18069)
!18069 = !{!18070, !18071, !18074}
!18070 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !18068, file: !153, line: 84, baseType: !2490, size: 32)
!18071 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !18068, file: !153, line: 85, baseType: !18072, size: 32, offset: 32)
!18072 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !153, line: 81, baseType: !18073)
!18073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18035, size: 32)
!18074 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !18068, file: !153, line: 86, baseType: !105, size: 32, offset: 64)
!18075 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !18064, file: !18065, line: 39, baseType: !105, size: 32, offset: 96)
!18076 = !{!18077, !18078, !18079, !18080, !18089}
!18077 = !DILocalVariable(name: "pq", arg: 1, scope: !18060, file: !2568, line: 1175, type: !18063)
!18078 = !DILocalVariable(name: "thread", arg: 2, scope: !18060, file: !2568, line: 1175, type: !2461)
!18079 = !DILocalVariable(name: "t", scope: !18060, file: !2568, line: 1177, type: !2461)
!18080 = !DILocalVariable(name: "__f", scope: !18081, file: !2568, line: 1190, type: !18084)
!18081 = distinct !DILexicalBlock(scope: !18082, file: !2568, line: 1190, column: 3)
!18082 = distinct !DILexicalBlock(scope: !18083, file: !2568, line: 1189, column: 27)
!18083 = distinct !DILexicalBlock(scope: !18060, file: !2568, line: 1189, column: 6)
!18084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !153, line: 155, size: 96, elements: !18085)
!18085 = !{!18086, !18087, !18088}
!18086 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !18084, file: !153, line: 156, baseType: !2563, size: 32)
!18087 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !18084, file: !153, line: 157, baseType: !432, size: 32, offset: 32)
!18088 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !18084, file: !153, line: 158, baseType: !116, size: 32, offset: 64)
!18089 = !DILocalVariable(name: "n", scope: !18090, file: !2568, line: 1190, type: !2490)
!18090 = distinct !DILexicalBlock(scope: !18091, file: !2568, line: 1190, column: 3)
!18091 = distinct !DILexicalBlock(scope: !18081, file: !2568, line: 1190, column: 3)
!18092 = !DILocation(line: 0, scope: !18060)
!18093 = !DILocation(line: 1179, column: 2, scope: !18094)
!18094 = distinct !DILexicalBlock(scope: !18095, file: !2568, line: 1179, column: 2)
!18095 = distinct !DILexicalBlock(scope: !18060, file: !2568, line: 1179, column: 2)
!18096 = !DILocation(line: 1179, column: 2, scope: !18095)
!18097 = !DILocation(line: 1179, column: 2, scope: !18098)
!18098 = distinct !DILexicalBlock(scope: !18094, file: !2568, line: 1179, column: 2)
!18099 = !DILocation(line: 1181, column: 31, scope: !18060)
!18100 = !DILocation(line: 1181, column: 45, scope: !18060)
!18101 = !DILocation(line: 1181, column: 15, scope: !18060)
!18102 = !DILocation(line: 1181, column: 25, scope: !18060)
!18103 = !DILocation(line: 1189, column: 11, scope: !18083)
!18104 = !DILocation(line: 1189, column: 7, scope: !18083)
!18105 = !DILocation(line: 1189, column: 6, scope: !18060)
!18106 = !DILocation(line: 1190, column: 3, scope: !18081)
!18107 = !DILocation(line: 1190, column: 3, scope: !18090)
!18108 = !DILocation(line: 0, scope: !18090)
!18109 = !DILocation(line: 1190, column: 3, scope: !18091)
!18110 = !DILocation(line: 1193, column: 2, scope: !18082)
!18111 = !DILocation(line: 1191, column: 42, scope: !18112)
!18112 = distinct !DILexicalBlock(scope: !18091, file: !2568, line: 1190, column: 54)
!18113 = !DILocation(line: 1191, column: 12, scope: !18112)
!18114 = !DILocation(line: 1191, column: 22, scope: !18112)
!18115 = distinct !{!18115, !18106, !18116}
!18116 = !DILocation(line: 1192, column: 3, scope: !18081)
!18117 = !DILocation(line: 1195, column: 17, scope: !18060)
!18118 = !DILocation(line: 1195, column: 37, scope: !18060)
!18119 = !DILocation(line: 1195, column: 2, scope: !18060)
!18120 = !DILocation(line: 1196, column: 1, scope: !18060)
!18121 = !DISubprogram(name: "z_rb_foreach_next", scope: !153, file: !153, line: 176, type: !18122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!18122 = !DISubroutineType(types: !18123)
!18123 = !{!2490, !18124, !18125}
!18124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18068, size: 32)
!18125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18084, size: 32)
!18126 = !DISubprogram(name: "rb_insert", scope: !153, file: !153, line: 105, type: !18127, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!18127 = !DISubroutineType(types: !18128)
!18128 = !{null, !18124, !2490}
!18129 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2568, file: !2568, line: 1198, type: !18061, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18130)
!18130 = !{!18131, !18132}
!18131 = !DILocalVariable(name: "pq", arg: 1, scope: !18129, file: !2568, line: 1198, type: !18063)
!18132 = !DILocalVariable(name: "thread", arg: 2, scope: !18129, file: !2568, line: 1198, type: !2461)
!18133 = !DILocation(line: 0, scope: !18129)
!18134 = !DILocation(line: 1200, column: 2, scope: !18135)
!18135 = distinct !DILexicalBlock(scope: !18136, file: !2568, line: 1200, column: 2)
!18136 = distinct !DILexicalBlock(scope: !18129, file: !2568, line: 1200, column: 2)
!18137 = !DILocation(line: 1200, column: 2, scope: !18136)
!18138 = !DILocation(line: 1200, column: 2, scope: !18139)
!18139 = distinct !DILexicalBlock(scope: !18135, file: !2568, line: 1200, column: 2)
!18140 = !DILocation(line: 1202, column: 17, scope: !18129)
!18141 = !DILocation(line: 1202, column: 37, scope: !18129)
!18142 = !DILocation(line: 1202, column: 2, scope: !18129)
!18143 = !DILocation(line: 1204, column: 16, scope: !18144)
!18144 = distinct !DILexicalBlock(scope: !18129, file: !2568, line: 1204, column: 6)
!18145 = !DILocation(line: 1204, column: 7, scope: !18144)
!18146 = !DILocation(line: 1204, column: 6, scope: !18129)
!18147 = !DILocation(line: 1205, column: 7, scope: !18148)
!18148 = distinct !DILexicalBlock(scope: !18144, file: !2568, line: 1204, column: 22)
!18149 = !DILocation(line: 1205, column: 22, scope: !18148)
!18150 = !DILocation(line: 1206, column: 2, scope: !18148)
!18151 = !DILocation(line: 1207, column: 1, scope: !18129)
!18152 = !DISubprogram(name: "rb_remove", scope: !153, file: !153, line: 110, type: !18127, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!18153 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2568, file: !2568, line: 1209, type: !18154, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18156)
!18154 = !DISubroutineType(types: !18155)
!18155 = !{!2461, !18063}
!18156 = !{!18157, !18158, !18159}
!18157 = !DILocalVariable(name: "pq", arg: 1, scope: !18153, file: !2568, line: 1209, type: !18063)
!18158 = !DILocalVariable(name: "thread", scope: !18153, file: !2568, line: 1211, type: !2461)
!18159 = !DILocalVariable(name: "n", scope: !18153, file: !2568, line: 1212, type: !2490)
!18160 = !DILocation(line: 0, scope: !18153)
!18161 = !DILocation(line: 1212, column: 37, scope: !18153)
!18162 = !DILocation(line: 1212, column: 21, scope: !18153)
!18163 = !DILocation(line: 1217, column: 2, scope: !18153)
!18164 = distinct !DISubprogram(name: "rb_get_min", scope: !153, file: !153, line: 115, type: !18165, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18167)
!18165 = !DISubroutineType(types: !18166)
!18166 = !{!2490, !18124}
!18167 = !{!18168}
!18168 = !DILocalVariable(name: "tree", arg: 1, scope: !18164, file: !153, line: 115, type: !18124)
!18169 = !DILocation(line: 0, scope: !18164)
!18170 = !DILocation(line: 117, column: 9, scope: !18164)
!18171 = !DILocation(line: 117, column: 2, scope: !18164)
!18172 = !DISubprogram(name: "z_rb_get_minmax", scope: !153, file: !153, line: 100, type: !18173, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!18173 = !DISubroutineType(types: !18174)
!18174 = !{!2490, !18124, !169}
!18175 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2568, file: !2568, line: 1246, type: !18176, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18186)
!18176 = !DISubroutineType(types: !18177)
!18177 = !{!2461, !18178}
!18178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18179, size: 32)
!18179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !18065, line: 53, size: 2080, elements: !18180)
!18180 = !{!18181, !18185}
!18181 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !18179, file: !18065, line: 54, baseType: !18182, size: 2048)
!18182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2497, size: 2048, elements: !18183)
!18183 = !{!18184}
!18184 = !DISubrange(count: 32)
!18185 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !18179, file: !18065, line: 55, baseType: !32, size: 32, offset: 2048)
!18186 = !{!18187, !18188, !18189, !18190}
!18187 = !DILocalVariable(name: "pq", arg: 1, scope: !18175, file: !2568, line: 1246, type: !18178)
!18188 = !DILocalVariable(name: "thread", scope: !18175, file: !2568, line: 1252, type: !2461)
!18189 = !DILocalVariable(name: "l", scope: !18175, file: !2568, line: 1253, type: !16702)
!18190 = !DILocalVariable(name: "n", scope: !18175, file: !2568, line: 1254, type: !2564)
!18191 = !DILocation(line: 0, scope: !18175)
!18192 = !DILocation(line: 1248, column: 11, scope: !18193)
!18193 = distinct !DILexicalBlock(scope: !18175, file: !2568, line: 1248, column: 6)
!18194 = !DILocation(line: 1248, column: 7, scope: !18193)
!18195 = !DILocation(line: 1248, column: 6, scope: !18175)
!18196 = !DILocation(line: 1253, column: 31, scope: !18175)
!18197 = !DILocation(line: 1253, column: 20, scope: !18175)
!18198 = !DILocation(line: 1254, column: 19, scope: !18175)
!18199 = !DILocation(line: 1260, column: 1, scope: !18175)
!18200 = distinct !DISubprogram(name: "z_unpend_all", scope: !2568, file: !2568, line: 1262, type: !18201, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18203)
!18201 = !DISubroutineType(types: !18202)
!18202 = !{!105, !2492}
!18203 = !{!18204, !18205, !18206}
!18204 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18200, file: !2568, line: 1262, type: !2492)
!18205 = !DILocalVariable(name: "need_sched", scope: !18200, file: !2568, line: 1264, type: !105)
!18206 = !DILocalVariable(name: "thread", scope: !18200, file: !2568, line: 1265, type: !2461)
!18207 = !DILocation(line: 0, scope: !18200)
!18208 = !DILocation(line: 1267, column: 19, scope: !18200)
!18209 = !DILocation(line: 1267, column: 41, scope: !18200)
!18210 = !DILocation(line: 1267, column: 2, scope: !18200)
!18211 = !DILocation(line: 1268, column: 3, scope: !18212)
!18212 = distinct !DILexicalBlock(scope: !18200, file: !2568, line: 1267, column: 50)
!18213 = !DILocation(line: 1269, column: 3, scope: !18212)
!18214 = distinct !{!18214, !18210, !18215}
!18215 = !DILocation(line: 1271, column: 2, scope: !18200)
!18216 = !DILocation(line: 1273, column: 2, scope: !18200)
!18217 = distinct !DISubprogram(name: "z_waitq_head", scope: !15192, file: !15192, line: 52, type: !17746, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18218)
!18218 = !{!18219}
!18219 = !DILocalVariable(name: "w", arg: 1, scope: !18217, file: !15192, line: 52, type: !2492)
!18220 = !DILocation(line: 0, scope: !18217)
!18221 = !DILocation(line: 54, column: 52, scope: !18217)
!18222 = !DILocation(line: 54, column: 28, scope: !18217)
!18223 = !DILocation(line: 54, column: 9, scope: !18217)
!18224 = !DILocation(line: 54, column: 2, scope: !18217)
!18225 = distinct !DISubprogram(name: "init_ready_q", scope: !2568, file: !2568, line: 1276, type: !18226, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18233)
!18226 = !DISubroutineType(types: !18227)
!18227 = !{null, !18228}
!18228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18229, size: 32)
!18229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !18230)
!18230 = !{!18231, !18232}
!18231 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !18229, file: !163, line: 86, baseType: !2461, size: 32)
!18232 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !18229, file: !163, line: 90, baseType: !2497, size: 64, offset: 32)
!18233 = !{!18234}
!18234 = !DILocalVariable(name: "rq", arg: 1, scope: !18225, file: !2568, line: 1276, type: !18228)
!18235 = !DILocation(line: 0, scope: !18225)
!18236 = !DILocation(line: 1289, column: 22, scope: !18225)
!18237 = !DILocation(line: 1289, column: 2, scope: !18225)
!18238 = !DILocation(line: 1291, column: 1, scope: !18225)
!18239 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !18240, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18242)
!18240 = !DISubroutineType(types: !18241)
!18241 = !{null, !16702}
!18242 = !{!18243}
!18243 = !DILocalVariable(name: "list", arg: 1, scope: !18239, file: !137, line: 197, type: !16702)
!18244 = !DILocation(line: 0, scope: !18239)
!18245 = !DILocation(line: 199, column: 8, scope: !18239)
!18246 = !DILocation(line: 199, column: 13, scope: !18239)
!18247 = !DILocation(line: 200, column: 8, scope: !18239)
!18248 = !DILocation(line: 200, column: 13, scope: !18239)
!18249 = !DILocation(line: 201, column: 1, scope: !18239)
!18250 = distinct !DISubprogram(name: "z_sched_init", scope: !2568, file: !2568, line: 1293, type: !266, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !397)
!18251 = !DILocation(line: 1302, column: 2, scope: !18250)
!18252 = !DILocation(line: 1306, column: 2, scope: !18250)
!18253 = !DILocation(line: 1309, column: 1, scope: !18250)
!18254 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2568, file: !2568, line: 1311, type: !18255, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18258)
!18255 = !DISubroutineType(types: !18256)
!18256 = !{!105, !18257}
!18257 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2461)
!18258 = !{!18259}
!18259 = !DILocalVariable(name: "thread", arg: 1, scope: !18254, file: !2568, line: 1311, type: !18257)
!18260 = !DILocation(line: 0, scope: !18254)
!18261 = !DILocation(line: 1313, column: 22, scope: !18254)
!18262 = !DILocation(line: 1313, column: 9, scope: !18254)
!18263 = !DILocation(line: 1313, column: 2, scope: !18254)
!18264 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2568, file: !2568, line: 1325, type: !18265, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18267)
!18265 = !DISubroutineType(types: !18266)
!18266 = !{null, !18257, !105}
!18267 = !{!18268, !18269, !18270}
!18268 = !DILocalVariable(name: "thread", arg: 1, scope: !18264, file: !2568, line: 1325, type: !18257)
!18269 = !DILocalVariable(name: "prio", arg: 2, scope: !18264, file: !2568, line: 1325, type: !105)
!18270 = !DILocalVariable(name: "th", scope: !18264, file: !2568, line: 1334, type: !2461)
!18271 = !DILocation(line: 0, scope: !18264)
!18272 = !DILocation(line: 1331, column: 2, scope: !18273)
!18273 = distinct !DILexicalBlock(scope: !18274, file: !2568, line: 1331, column: 2)
!18274 = distinct !DILexicalBlock(scope: !18275, file: !2568, line: 1331, column: 2)
!18275 = distinct !DILexicalBlock(scope: !18264, file: !2568, line: 1331, column: 2)
!18276 = !DILocation(line: 1331, column: 2, scope: !18277)
!18277 = distinct !DILexicalBlock(scope: !18273, file: !2568, line: 1331, column: 2)
!18278 = !DILocation(line: 1031, column: 3, scope: !17246, inlinedAt: !18279)
!18279 = distinct !DILocation(line: 48, column: 10, scope: !17250, inlinedAt: !18280)
!18280 = distinct !DILocation(line: 1332, column: 2, scope: !18281)
!18281 = distinct !DILexicalBlock(scope: !18282, file: !2568, line: 1332, column: 2)
!18282 = distinct !DILexicalBlock(scope: !18264, file: !2568, line: 1332, column: 2)
!18283 = !DILocation(line: 0, scope: !17246, inlinedAt: !18279)
!18284 = !DILocation(line: 48, column: 9, scope: !17250, inlinedAt: !18280)
!18285 = !DILocation(line: 1332, column: 2, scope: !18282)
!18286 = !DILocation(line: 1332, column: 2, scope: !18287)
!18287 = distinct !DILexicalBlock(scope: !18281, file: !2568, line: 1332, column: 2)
!18288 = !DILocation(line: 1336, column: 2, scope: !18264)
!18289 = !DILocation(line: 1337, column: 1, scope: !18264)
!18290 = distinct !DISubprogram(name: "k_can_yield", scope: !2568, file: !2568, line: 1384, type: !8898, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !397)
!18291 = !DILocation(line: 1386, column: 11, scope: !18290)
!18292 = !DILocation(line: 1386, column: 29, scope: !18290)
!18293 = !DILocation(line: 1386, column: 32, scope: !18290)
!18294 = !DILocation(line: 1386, column: 46, scope: !18290)
!18295 = !DILocation(line: 1387, column: 28, scope: !18290)
!18296 = !DILocation(line: 1387, column: 4, scope: !18290)
!18297 = !DILocation(line: 1386, column: 2, scope: !18290)
!18298 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !122, file: !122, line: 989, type: !8898, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !397)
!18299 = !DILocation(line: 993, column: 10, scope: !18298)
!18300 = !DILocation(line: 993, column: 2, scope: !18298)
!18301 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2568, file: !2568, line: 1390, type: !266, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18302)
!18302 = !{!18303}
!18303 = !DILocalVariable(name: "key", scope: !18301, file: !2568, line: 1396, type: !16468)
!18304 = !DILocation(line: 1031, column: 3, scope: !17246, inlinedAt: !18305)
!18305 = distinct !DILocation(line: 48, column: 10, scope: !17250, inlinedAt: !18306)
!18306 = distinct !DILocation(line: 1392, column: 2, scope: !18307)
!18307 = distinct !DILexicalBlock(scope: !18308, file: !2568, line: 1392, column: 2)
!18308 = distinct !DILexicalBlock(scope: !18301, file: !2568, line: 1392, column: 2)
!18309 = !DILocation(line: 0, scope: !17246, inlinedAt: !18305)
!18310 = !DILocation(line: 48, column: 9, scope: !17250, inlinedAt: !18306)
!18311 = !DILocation(line: 1392, column: 2, scope: !18308)
!18312 = !DILocation(line: 1392, column: 2, scope: !18313)
!18313 = distinct !DILexicalBlock(scope: !18307, file: !2568, line: 1392, column: 2)
!18314 = !DILocation(line: 0, scope: !16476, inlinedAt: !18315)
!18315 = distinct !DILocation(line: 1396, column: 25, scope: !18301)
!18316 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !18317)
!18317 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !18315)
!18318 = !DILocation(line: 0, scope: !16485, inlinedAt: !18317)
!18319 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !18315)
!18320 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !18315)
!18321 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !18315)
!18322 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !18315)
!18323 = !DILocation(line: 0, scope: !18301)
!18324 = !DILocation(line: 1400, column: 18, scope: !18325)
!18325 = distinct !DILexicalBlock(scope: !18326, file: !2568, line: 1399, column: 36)
!18326 = distinct !DILexicalBlock(scope: !18301, file: !2568, line: 1398, column: 6)
!18327 = !DILocation(line: 0, scope: !16668, inlinedAt: !18328)
!18328 = distinct !DILocation(line: 1400, column: 3, scope: !18325)
!18329 = !DILocation(line: 266, column: 15, scope: !16668, inlinedAt: !18328)
!18330 = !DILocation(line: 266, column: 28, scope: !16668, inlinedAt: !18328)
!18331 = !DILocation(line: 0, scope: !16676, inlinedAt: !18332)
!18332 = distinct !DILocation(line: 268, column: 3, scope: !16680, inlinedAt: !18328)
!18333 = !DILocation(line: 234, column: 2, scope: !16676, inlinedAt: !18332)
!18334 = !DILocation(line: 1402, column: 15, scope: !18301)
!18335 = !DILocation(line: 0, scope: !16685, inlinedAt: !18336)
!18336 = distinct !DILocation(line: 1402, column: 2, scope: !18301)
!18337 = !DILocation(line: 252, column: 15, scope: !16685, inlinedAt: !18336)
!18338 = !DILocation(line: 252, column: 28, scope: !16685, inlinedAt: !18336)
!18339 = !DILocation(line: 0, scope: !16692, inlinedAt: !18340)
!18340 = distinct !DILocation(line: 254, column: 3, scope: !16696, inlinedAt: !18336)
!18341 = !DILocation(line: 0, scope: !16699, inlinedAt: !18342)
!18342 = distinct !DILocation(line: 229, column: 2, scope: !16692, inlinedAt: !18340)
!18343 = !DILocation(line: 186, column: 2, scope: !16709, inlinedAt: !18342)
!18344 = !DILocation(line: 186, column: 2, scope: !16710, inlinedAt: !18342)
!18345 = !DILocation(line: 186, column: 2, scope: !16713, inlinedAt: !18342)
!18346 = !DILocation(line: 188, column: 2, scope: !16715, inlinedAt: !18342)
!18347 = !DILocation(line: 188, column: 2, scope: !16717, inlinedAt: !18342)
!18348 = !DILocation(line: 0, scope: !16715, inlinedAt: !18342)
!18349 = !DILocation(line: 189, column: 7, scope: !16720, inlinedAt: !18342)
!18350 = !DILocation(line: 189, column: 35, scope: !16720, inlinedAt: !18342)
!18351 = !DILocation(line: 189, column: 7, scope: !16721, inlinedAt: !18342)
!18352 = !DILocation(line: 191, column: 21, scope: !16725, inlinedAt: !18342)
!18353 = !DILocation(line: 190, column: 4, scope: !16725, inlinedAt: !18342)
!18354 = !DILocation(line: 192, column: 4, scope: !16725, inlinedAt: !18342)
!18355 = distinct !{!18355, !18346, !18356}
!18356 = !DILocation(line: 194, column: 2, scope: !16715, inlinedAt: !18342)
!18357 = !DILocation(line: 196, column: 37, scope: !16699, inlinedAt: !18342)
!18358 = !DILocation(line: 196, column: 2, scope: !16699, inlinedAt: !18342)
!18359 = !DILocation(line: 197, column: 1, scope: !16699, inlinedAt: !18342)
!18360 = !DILocation(line: 1403, column: 2, scope: !18301)
!18361 = !DILocation(line: 0, scope: !17197, inlinedAt: !18362)
!18362 = distinct !DILocation(line: 1404, column: 2, scope: !18301)
!18363 = !DILocation(line: 0, scope: !17206, inlinedAt: !18364)
!18364 = distinct !DILocation(line: 195, column: 2, scope: !17197, inlinedAt: !18362)
!18365 = !DILocation(line: 225, column: 2, scope: !17213, inlinedAt: !18364)
!18366 = !DILocation(line: 225, column: 2, scope: !17214, inlinedAt: !18364)
!18367 = !DILocation(line: 225, column: 2, scope: !17217, inlinedAt: !18364)
!18368 = !DILocation(line: 196, column: 9, scope: !17197, inlinedAt: !18362)
!18369 = !DILocation(line: 1405, column: 1, scope: !18301)
!18370 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2568, file: !2568, line: 1459, type: !18371, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18373)
!18371 = !DISubroutineType(types: !18372)
!18372 = !{!116, !17407}
!18373 = !{!18374, !18375, !18376}
!18374 = !DILocalVariable(name: "timeout", arg: 1, scope: !18370, file: !2568, line: 1459, type: !17407)
!18375 = !DILocalVariable(name: "ticks", scope: !18370, file: !2568, line: 1461, type: !107)
!18376 = !DILocalVariable(name: "ret", scope: !18370, file: !2568, line: 1480, type: !116)
!18377 = !DILocation(line: 0, scope: !18370)
!18378 = !DILocation(line: 1031, column: 3, scope: !17246, inlinedAt: !18379)
!18379 = distinct !DILocation(line: 48, column: 10, scope: !17250, inlinedAt: !18380)
!18380 = distinct !DILocation(line: 1463, column: 2, scope: !18381)
!18381 = distinct !DILexicalBlock(scope: !18382, file: !2568, line: 1463, column: 2)
!18382 = distinct !DILexicalBlock(scope: !18370, file: !2568, line: 1463, column: 2)
!18383 = !DILocation(line: 0, scope: !17246, inlinedAt: !18379)
!18384 = !DILocation(line: 48, column: 9, scope: !17250, inlinedAt: !18380)
!18385 = !DILocation(line: 1463, column: 2, scope: !18382)
!18386 = !DILocation(line: 1463, column: 2, scope: !18387)
!18387 = distinct !DILexicalBlock(scope: !18381, file: !2568, line: 1463, column: 2)
!18388 = !DILocation(line: 1468, column: 6, scope: !18389)
!18389 = distinct !DILexicalBlock(scope: !18370, file: !2568, line: 1468, column: 6)
!18390 = !DILocation(line: 1468, column: 6, scope: !18370)
!18391 = !DILocation(line: 1469, column: 20, scope: !18392)
!18392 = distinct !DILexicalBlock(scope: !18389, file: !2568, line: 1468, column: 40)
!18393 = !DILocation(line: 1469, column: 3, scope: !18392)
!18394 = !DILocation(line: 1473, column: 3, scope: !18392)
!18395 = !DILocation(line: 1478, column: 10, scope: !18370)
!18396 = !DILocation(line: 1480, column: 16, scope: !18370)
!18397 = !DILocation(line: 1485, column: 1, scope: !18370)
!18398 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3497, file: !3497, line: 310, type: !18399, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18401)
!18399 = !DISubroutineType(types: !18400)
!18400 = !{null, !18257}
!18401 = !{!18402}
!18402 = !DILocalVariable(name: "thread", arg: 1, scope: !18398, file: !3497, line: 310, type: !18257)
!18403 = !DILocation(line: 0, scope: !18398)
!18404 = !DILocation(line: 319, column: 2, scope: !18405)
!18405 = distinct !DILexicalBlock(scope: !18398, file: !3497, line: 319, column: 2)
!18406 = !{i64 2155112584}
!18407 = !DILocation(line: 320, column: 2, scope: !18398)
!18408 = !DILocation(line: 321, column: 1, scope: !18398)
!18409 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2568, file: !2568, line: 1415, type: !18410, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18412)
!18410 = !DISubroutineType(types: !18411)
!18411 = !{!116, !107}
!18412 = !{!18413, !18414, !18415, !18416}
!18413 = !DILocalVariable(name: "ticks", arg: 1, scope: !18409, file: !2568, line: 1415, type: !107)
!18414 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !18409, file: !2568, line: 1418, type: !113)
!18415 = !DILocalVariable(name: "timeout", scope: !18409, file: !2568, line: 1430, type: !17407)
!18416 = !DILocalVariable(name: "key", scope: !18409, file: !2568, line: 1437, type: !16468)
!18417 = !DILocation(line: 0, scope: !18409)
!18418 = !DILocation(line: 1031, column: 3, scope: !17246, inlinedAt: !18419)
!18419 = distinct !DILocation(line: 48, column: 10, scope: !17250, inlinedAt: !18420)
!18420 = distinct !DILocation(line: 1420, column: 2, scope: !18421)
!18421 = distinct !DILexicalBlock(scope: !18422, file: !2568, line: 1420, column: 2)
!18422 = distinct !DILexicalBlock(scope: !18409, file: !2568, line: 1420, column: 2)
!18423 = !DILocation(line: 0, scope: !17246, inlinedAt: !18419)
!18424 = !DILocation(line: 48, column: 9, scope: !17250, inlinedAt: !18420)
!18425 = !DILocation(line: 1420, column: 2, scope: !18422)
!18426 = !DILocation(line: 1420, column: 2, scope: !18427)
!18427 = distinct !DILexicalBlock(scope: !18421, file: !2568, line: 1420, column: 2)
!18428 = !DILocation(line: 1425, column: 12, scope: !18429)
!18429 = distinct !DILexicalBlock(scope: !18409, file: !2568, line: 1425, column: 6)
!18430 = !DILocation(line: 1425, column: 6, scope: !18409)
!18431 = !DILocation(line: 1426, column: 3, scope: !18432)
!18432 = distinct !DILexicalBlock(scope: !18429, file: !2568, line: 1425, column: 18)
!18433 = !DILocation(line: 1427, column: 3, scope: !18432)
!18434 = !DILocation(line: 1431, column: 24, scope: !18435)
!18435 = distinct !DILexicalBlock(scope: !18409, file: !2568, line: 1431, column: 6)
!18436 = !DILocation(line: 1431, column: 6, scope: !18409)
!18437 = !DILocation(line: 1432, column: 35, scope: !18438)
!18438 = distinct !DILexicalBlock(scope: !18435, file: !2568, line: 1431, column: 30)
!18439 = !DILocation(line: 1432, column: 27, scope: !18438)
!18440 = !DILocation(line: 1433, column: 2, scope: !18438)
!18441 = !DILocation(line: 1434, column: 27, scope: !18442)
!18442 = distinct !DILexicalBlock(scope: !18435, file: !2568, line: 1433, column: 9)
!18443 = !DILocation(line: 0, scope: !18435)
!18444 = !DILocation(line: 0, scope: !16476, inlinedAt: !18445)
!18445 = distinct !DILocation(line: 1437, column: 25, scope: !18409)
!18446 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !18447)
!18447 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !18445)
!18448 = !DILocation(line: 0, scope: !16485, inlinedAt: !18447)
!18449 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !18445)
!18450 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !18445)
!18451 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !18445)
!18452 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !18445)
!18453 = !DILocation(line: 1440, column: 20, scope: !18409)
!18454 = !DILocation(line: 1440, column: 18, scope: !18409)
!18455 = !DILocation(line: 1442, column: 2, scope: !18409)
!18456 = !DILocation(line: 1443, column: 23, scope: !18409)
!18457 = !DILocation(line: 1443, column: 2, scope: !18409)
!18458 = !DILocation(line: 1444, column: 29, scope: !18409)
!18459 = !DILocation(line: 1444, column: 2, scope: !18409)
!18460 = !DILocation(line: 0, scope: !17197, inlinedAt: !18461)
!18461 = distinct !DILocation(line: 1446, column: 8, scope: !18409)
!18462 = !DILocation(line: 0, scope: !17206, inlinedAt: !18463)
!18463 = distinct !DILocation(line: 195, column: 2, scope: !17197, inlinedAt: !18461)
!18464 = !DILocation(line: 225, column: 2, scope: !17213, inlinedAt: !18463)
!18465 = !DILocation(line: 225, column: 2, scope: !17214, inlinedAt: !18463)
!18466 = !DILocation(line: 225, column: 2, scope: !17217, inlinedAt: !18463)
!18467 = !DILocation(line: 196, column: 9, scope: !17197, inlinedAt: !18461)
!18468 = !DILocation(line: 1448, column: 2, scope: !18469)
!18469 = distinct !DILexicalBlock(scope: !18470, file: !2568, line: 1448, column: 2)
!18470 = distinct !DILexicalBlock(scope: !18409, file: !2568, line: 1448, column: 2)
!18471 = !DILocation(line: 1448, column: 2, scope: !18470)
!18472 = !DILocation(line: 1448, column: 2, scope: !18473)
!18473 = distinct !DILexicalBlock(scope: !18469, file: !2568, line: 1448, column: 2)
!18474 = !DILocation(line: 1450, column: 10, scope: !18409)
!18475 = !DILocation(line: 1450, column: 45, scope: !18409)
!18476 = !DILocation(line: 1450, column: 43, scope: !18409)
!18477 = !DILocation(line: 1451, column: 6, scope: !18409)
!18478 = !DILocation(line: 1457, column: 1, scope: !18409)
!18479 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !15448, file: !15448, line: 1103, type: !15449, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18480)
!18480 = !{!18481}
!18481 = !DILocalVariable(name: "t", arg: 1, scope: !18479, file: !15448, line: 1103, type: !114)
!18482 = !DILocation(line: 0, scope: !18479)
!18483 = !DILocation(line: 0, scope: !16536, inlinedAt: !18484)
!18484 = distinct !DILocation(line: 1106, column: 9, scope: !18479)
!18485 = !DILocation(line: 139, column: 13, scope: !18486, inlinedAt: !18484)
!18486 = distinct !DILexicalBlock(scope: !18487, file: !15448, line: 138, column: 10)
!18487 = distinct !DILexicalBlock(scope: !18488, file: !15448, line: 136, column: 7)
!18488 = distinct !DILexicalBlock(scope: !16557, file: !15448, line: 134, column: 17)
!18489 = !DILocation(line: 1106, column: 2, scope: !18479)
!18490 = distinct !DISubprogram(name: "k_yield", scope: !3497, file: !3497, line: 140, type: !266, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !397)
!18491 = !DILocation(line: 148, column: 2, scope: !18492)
!18492 = distinct !DILexicalBlock(scope: !18490, file: !3497, line: 148, column: 2)
!18493 = !{i64 2155111904}
!18494 = !DILocation(line: 149, column: 2, scope: !18490)
!18495 = !DILocation(line: 150, column: 1, scope: !18490)
!18496 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2568, file: !2568, line: 1495, type: !18497, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18499)
!18497 = !DISubroutineType(types: !18498)
!18498 = !{!116, !105}
!18499 = !{!18500, !18501}
!18500 = !DILocalVariable(name: "us", arg: 1, scope: !18496, file: !2568, line: 1495, type: !105)
!18501 = !DILocalVariable(name: "ticks", scope: !18496, file: !2568, line: 1497, type: !116)
!18502 = !DILocation(line: 0, scope: !18496)
!18503 = !DILocation(line: 1501, column: 31, scope: !18496)
!18504 = !DILocation(line: 1501, column: 10, scope: !18496)
!18505 = !DILocation(line: 1502, column: 23, scope: !18496)
!18506 = !DILocation(line: 1502, column: 10, scope: !18496)
!18507 = !DILocation(line: 1506, column: 31, scope: !18496)
!18508 = !DILocation(line: 1506, column: 9, scope: !18496)
!18509 = !DILocation(line: 1506, column: 2, scope: !18496)
!18510 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !15448, file: !15448, line: 571, type: !15449, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18511)
!18511 = !{!18512}
!18512 = !DILocalVariable(name: "t", arg: 1, scope: !18510, file: !15448, line: 571, type: !114)
!18513 = !DILocation(line: 0, scope: !18510)
!18514 = !DILocation(line: 0, scope: !16536, inlinedAt: !18515)
!18515 = distinct !DILocation(line: 574, column: 9, scope: !18510)
!18516 = !DILocation(line: 135, column: 5, scope: !18488, inlinedAt: !18515)
!18517 = !DILocation(line: 139, column: 13, scope: !18486, inlinedAt: !18515)
!18518 = !DILocation(line: 574, column: 2, scope: !18510)
!18519 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !15448, file: !15448, line: 1187, type: !15449, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18520)
!18520 = !{!18521}
!18521 = !DILocalVariable(name: "t", arg: 1, scope: !18519, file: !15448, line: 1187, type: !114)
!18522 = !DILocation(line: 0, scope: !18519)
!18523 = !DILocation(line: 0, scope: !16536, inlinedAt: !18524)
!18524 = distinct !DILocation(line: 1190, column: 9, scope: !18519)
!18525 = !DILocation(line: 145, column: 13, scope: !18526, inlinedAt: !18524)
!18526 = distinct !DILexicalBlock(scope: !16554, file: !15448, line: 144, column: 10)
!18527 = !DILocation(line: 1190, column: 2, scope: !18519)
!18528 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2568, file: !2568, line: 1517, type: !18399, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18529)
!18529 = !{!18530}
!18530 = !DILocalVariable(name: "thread", arg: 1, scope: !18528, file: !2568, line: 1517, type: !18257)
!18531 = !DILocation(line: 0, scope: !18528)
!18532 = !DILocation(line: 1521, column: 6, scope: !18533)
!18533 = distinct !DILexicalBlock(scope: !18528, file: !2568, line: 1521, column: 6)
!18534 = !DILocation(line: 1521, column: 6, scope: !18528)
!18535 = !DILocation(line: 1525, column: 6, scope: !18536)
!18536 = distinct !DILexicalBlock(scope: !18528, file: !2568, line: 1525, column: 6)
!18537 = !DILocation(line: 1525, column: 37, scope: !18536)
!18538 = !DILocation(line: 1525, column: 6, scope: !18528)
!18539 = !DILocation(line: 1527, column: 20, scope: !18540)
!18540 = distinct !DILexicalBlock(scope: !18541, file: !2568, line: 1527, column: 7)
!18541 = distinct !DILexicalBlock(scope: !18536, file: !2568, line: 1525, column: 42)
!18542 = !DILocation(line: 1527, column: 33, scope: !18540)
!18543 = !DILocation(line: 1527, column: 7, scope: !18541)
!18544 = !DILocation(line: 1532, column: 2, scope: !18528)
!18545 = !DILocation(line: 1533, column: 2, scope: !18528)
!18546 = !DILocation(line: 1031, column: 3, scope: !17246, inlinedAt: !18547)
!18547 = distinct !DILocation(line: 48, column: 10, scope: !17250, inlinedAt: !18548)
!18548 = distinct !DILocation(line: 1537, column: 7, scope: !18549)
!18549 = distinct !DILexicalBlock(scope: !18528, file: !2568, line: 1537, column: 6)
!18550 = !DILocation(line: 0, scope: !17246, inlinedAt: !18547)
!18551 = !DILocation(line: 48, column: 9, scope: !17250, inlinedAt: !18548)
!18552 = !DILocation(line: 1537, column: 6, scope: !18528)
!18553 = !DILocation(line: 1538, column: 3, scope: !18554)
!18554 = distinct !DILexicalBlock(scope: !18549, file: !2568, line: 1537, column: 25)
!18555 = !DILocation(line: 1539, column: 2, scope: !18554)
!18556 = !DILocation(line: 1540, column: 1, scope: !18528)
!18557 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14831, file: !14831, line: 101, type: !16617, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18558)
!18558 = !{!18559}
!18559 = !DILocalVariable(name: "thread", arg: 1, scope: !18557, file: !14831, line: 101, type: !2461)
!18560 = !DILocation(line: 0, scope: !18557)
!18561 = !DILocation(line: 103, column: 23, scope: !18557)
!18562 = !DILocation(line: 103, column: 36, scope: !18557)
!18563 = !DILocation(line: 103, column: 55, scope: !18557)
!18564 = !DILocation(line: 103, column: 2, scope: !18557)
!18565 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2568, file: !2568, line: 1567, type: !18566, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18568)
!18566 = !DISubroutineType(types: !18567)
!18567 = !{!18257}
!18568 = !{!18569}
!18569 = !DILocalVariable(name: "ret", scope: !18565, file: !2568, line: 1577, type: !18257)
!18570 = !DILocation(line: 1577, column: 30, scope: !18565)
!18571 = !DILocation(line: 0, scope: !18565)
!18572 = !DILocation(line: 1582, column: 2, scope: !18565)
!18573 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2568, file: !2568, line: 1593, type: !9200, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !397)
!18574 = !DILocation(line: 1031, column: 3, scope: !17246, inlinedAt: !18575)
!18575 = distinct !DILocation(line: 48, column: 10, scope: !17250, inlinedAt: !18576)
!18576 = distinct !DILocation(line: 1595, column: 10, scope: !18573)
!18577 = !DILocation(line: 0, scope: !17246, inlinedAt: !18575)
!18578 = !DILocation(line: 48, column: 9, scope: !17250, inlinedAt: !18576)
!18579 = !DILocation(line: 1595, column: 27, scope: !18573)
!18580 = !DILocation(line: 1595, column: 41, scope: !18573)
!18581 = !DILocation(line: 1595, column: 30, scope: !18573)
!18582 = !DILocation(line: 1595, column: 2, scope: !18573)
!18583 = distinct !DISubprogram(name: "z_thread_abort", scope: !2568, file: !2568, line: 1725, type: !16434, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18584)
!18584 = !{!18585, !18586}
!18585 = !DILocalVariable(name: "thread", arg: 1, scope: !18583, file: !2568, line: 1725, type: !2461)
!18586 = !DILocalVariable(name: "key", scope: !18583, file: !2568, line: 1727, type: !16468)
!18587 = !DILocation(line: 0, scope: !18583)
!18588 = !DILocation(line: 0, scope: !16476, inlinedAt: !18589)
!18589 = distinct !DILocation(line: 1727, column: 25, scope: !18583)
!18590 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !18591)
!18591 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !18589)
!18592 = !DILocation(line: 0, scope: !16485, inlinedAt: !18591)
!18593 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !18589)
!18594 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !18589)
!18595 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !18589)
!18596 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !18589)
!18597 = !DILocation(line: 1729, column: 20, scope: !18598)
!18598 = distinct !DILexicalBlock(scope: !18583, file: !2568, line: 1729, column: 6)
!18599 = !DILocation(line: 1729, column: 33, scope: !18598)
!18600 = !DILocation(line: 1729, column: 48, scope: !18598)
!18601 = !DILocation(line: 1729, column: 6, scope: !18583)
!18602 = !DILocation(line: 0, scope: !16510, inlinedAt: !18603)
!18603 = distinct !DILocation(line: 1730, column: 3, scope: !18604)
!18604 = distinct !DILexicalBlock(scope: !18598, file: !2568, line: 1729, column: 54)
!18605 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !18603)
!18606 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !18603)
!18607 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !18603)
!18608 = !DILocation(line: 0, scope: !16524, inlinedAt: !18609)
!18609 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !18603)
!18610 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !18609)
!18611 = !DILocation(line: 1731, column: 3, scope: !18612)
!18612 = distinct !DILexicalBlock(scope: !18613, file: !2568, line: 1731, column: 3)
!18613 = distinct !DILexicalBlock(scope: !18614, file: !2568, line: 1731, column: 3)
!18614 = distinct !DILexicalBlock(scope: !18604, file: !2568, line: 1731, column: 3)
!18615 = !DILocation(line: 1736, column: 20, scope: !18616)
!18616 = distinct !DILexicalBlock(scope: !18583, file: !2568, line: 1736, column: 6)
!18617 = !DILocation(line: 1736, column: 33, scope: !18616)
!18618 = !DILocation(line: 1736, column: 49, scope: !18616)
!18619 = !DILocation(line: 1736, column: 6, scope: !18583)
!18620 = !DILocation(line: 0, scope: !16510, inlinedAt: !18621)
!18621 = distinct !DILocation(line: 1737, column: 3, scope: !18622)
!18622 = distinct !DILexicalBlock(scope: !18616, file: !2568, line: 1736, column: 56)
!18623 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !18621)
!18624 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !18621)
!18625 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !18621)
!18626 = !DILocation(line: 0, scope: !16524, inlinedAt: !18627)
!18627 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !18621)
!18628 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !18627)
!18629 = !DILocation(line: 1738, column: 3, scope: !18622)
!18630 = !DILocation(line: 1775, column: 2, scope: !18583)
!18631 = !DILocation(line: 1776, column: 16, scope: !18632)
!18632 = distinct !DILexicalBlock(scope: !18583, file: !2568, line: 1776, column: 6)
!18633 = !DILocation(line: 1776, column: 13, scope: !18632)
!18634 = !DILocation(line: 1776, column: 25, scope: !18632)
!18635 = !DILocation(line: 1031, column: 3, scope: !17246, inlinedAt: !18636)
!18636 = distinct !DILocation(line: 48, column: 10, scope: !17250, inlinedAt: !18637)
!18637 = distinct !DILocation(line: 1776, column: 29, scope: !18632)
!18638 = !DILocation(line: 0, scope: !17246, inlinedAt: !18636)
!18639 = !DILocation(line: 48, column: 9, scope: !17250, inlinedAt: !18637)
!18640 = !DILocation(line: 1776, column: 6, scope: !18583)
!18641 = !DILocation(line: 0, scope: !17197, inlinedAt: !18642)
!18642 = distinct !DILocation(line: 1777, column: 3, scope: !18643)
!18643 = distinct !DILexicalBlock(scope: !18632, file: !2568, line: 1776, column: 47)
!18644 = !DILocation(line: 0, scope: !17206, inlinedAt: !18645)
!18645 = distinct !DILocation(line: 195, column: 2, scope: !17197, inlinedAt: !18642)
!18646 = !DILocation(line: 225, column: 2, scope: !17213, inlinedAt: !18645)
!18647 = !DILocation(line: 225, column: 2, scope: !17214, inlinedAt: !18645)
!18648 = !DILocation(line: 225, column: 2, scope: !17217, inlinedAt: !18645)
!18649 = !DILocation(line: 196, column: 9, scope: !17197, inlinedAt: !18642)
!18650 = !DILocation(line: 1778, column: 3, scope: !18651)
!18651 = distinct !DILexicalBlock(scope: !18652, file: !2568, line: 1778, column: 3)
!18652 = distinct !DILexicalBlock(scope: !18653, file: !2568, line: 1778, column: 3)
!18653 = distinct !DILexicalBlock(scope: !18643, file: !2568, line: 1778, column: 3)
!18654 = !DILocation(line: 0, scope: !16510, inlinedAt: !18655)
!18655 = distinct !DILocation(line: 1780, column: 2, scope: !18583)
!18656 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !18655)
!18657 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !18655)
!18658 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !18655)
!18659 = !DILocation(line: 0, scope: !16524, inlinedAt: !18660)
!18660 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !18655)
!18661 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !18660)
!18662 = !DILocation(line: 1781, column: 1, scope: !18583)
!18663 = distinct !DISubprogram(name: "end_thread", scope: !2568, file: !2568, line: 1690, type: !16434, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18664)
!18664 = !{!18665}
!18665 = !DILocalVariable(name: "thread", arg: 1, scope: !18663, file: !2568, line: 1690, type: !2461)
!18666 = !DILocation(line: 0, scope: !18663)
!18667 = !DILocation(line: 1695, column: 20, scope: !18668)
!18668 = distinct !DILexicalBlock(scope: !18663, file: !2568, line: 1695, column: 6)
!18669 = !DILocation(line: 1695, column: 33, scope: !18668)
!18670 = !DILocation(line: 1695, column: 49, scope: !18668)
!18671 = !DILocation(line: 1695, column: 6, scope: !18663)
!18672 = !DILocation(line: 1697, column: 29, scope: !18673)
!18673 = distinct !DILexicalBlock(scope: !18668, file: !2568, line: 1695, column: 56)
!18674 = !DILocation(line: 1698, column: 7, scope: !18675)
!18675 = distinct !DILexicalBlock(scope: !18673, file: !2568, line: 1698, column: 7)
!18676 = !DILocation(line: 1698, column: 7, scope: !18673)
!18677 = !DILocation(line: 0, scope: !16668, inlinedAt: !18678)
!18678 = distinct !DILocation(line: 1699, column: 4, scope: !18679)
!18679 = distinct !DILexicalBlock(scope: !18675, file: !2568, line: 1698, column: 35)
!18680 = !DILocation(line: 266, column: 28, scope: !16668, inlinedAt: !18678)
!18681 = !DILocation(line: 0, scope: !16676, inlinedAt: !18682)
!18682 = distinct !DILocation(line: 268, column: 3, scope: !16680, inlinedAt: !18678)
!18683 = !DILocation(line: 234, column: 2, scope: !16676, inlinedAt: !18682)
!18684 = !DILocation(line: 1700, column: 3, scope: !18679)
!18685 = !DILocation(line: 1701, column: 20, scope: !18686)
!18686 = distinct !DILexicalBlock(scope: !18673, file: !2568, line: 1701, column: 7)
!18687 = !DILocation(line: 1701, column: 30, scope: !18686)
!18688 = !DILocation(line: 1701, column: 7, scope: !18673)
!18689 = !DILocation(line: 1702, column: 4, scope: !18690)
!18690 = distinct !DILexicalBlock(scope: !18686, file: !2568, line: 1701, column: 39)
!18691 = !DILocation(line: 1703, column: 3, scope: !18690)
!18692 = !DILocation(line: 1704, column: 9, scope: !18673)
!18693 = !DILocation(line: 1705, column: 23, scope: !18673)
!18694 = !DILocation(line: 1705, column: 3, scope: !18673)
!18695 = !DILocation(line: 1706, column: 3, scope: !18673)
!18696 = !DILocation(line: 1722, column: 2, scope: !18673)
!18697 = !DILocation(line: 1723, column: 1, scope: !18663)
!18698 = distinct !DISubprogram(name: "unpend_all", scope: !2568, file: !2568, line: 1674, type: !18699, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18701)
!18699 = !DISubroutineType(types: !18700)
!18700 = !{null, !2492}
!18701 = !{!18702, !18703}
!18702 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18698, file: !2568, line: 1674, type: !2492)
!18703 = !DILocalVariable(name: "thread", scope: !18698, file: !2568, line: 1676, type: !2461)
!18704 = !DILocation(line: 0, scope: !18698)
!18705 = !DILocation(line: 1678, column: 19, scope: !18698)
!18706 = !DILocation(line: 1678, column: 41, scope: !18698)
!18707 = !DILocation(line: 1678, column: 2, scope: !18698)
!18708 = !DILocation(line: 1679, column: 3, scope: !18709)
!18709 = distinct !DILexicalBlock(scope: !18698, file: !2568, line: 1678, column: 50)
!18710 = !DILocation(line: 1680, column: 9, scope: !18709)
!18711 = !DILocalVariable(name: "thread", arg: 1, scope: !18712, file: !14872, line: 65, type: !2461)
!18712 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14872, file: !14872, line: 65, type: !18713, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18715)
!18713 = !DISubroutineType(types: !18714)
!18714 = !{null, !2461, !32}
!18715 = !{!18711, !18716}
!18716 = !DILocalVariable(name: "value", arg: 2, scope: !18712, file: !14872, line: 65, type: !32)
!18717 = !DILocation(line: 0, scope: !18712, inlinedAt: !18718)
!18718 = distinct !DILocation(line: 1681, column: 3, scope: !18709)
!18719 = !DILocation(line: 67, column: 15, scope: !18712, inlinedAt: !18718)
!18720 = !DILocation(line: 67, column: 33, scope: !18712, inlinedAt: !18718)
!18721 = !DILocation(line: 1682, column: 3, scope: !18709)
!18722 = distinct !{!18722, !18707, !18723}
!18723 = !DILocation(line: 1683, column: 2, scope: !18698)
!18724 = !DILocation(line: 1684, column: 1, scope: !18698)
!18725 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2568, file: !2568, line: 1794, type: !18726, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18728)
!18726 = !DISubroutineType(types: !18727)
!18727 = !{!105, !2461, !17407}
!18728 = !{!18729, !18730, !18731, !18732}
!18729 = !DILocalVariable(name: "thread", arg: 1, scope: !18725, file: !2568, line: 1794, type: !2461)
!18730 = !DILocalVariable(name: "timeout", arg: 2, scope: !18725, file: !2568, line: 1794, type: !17407)
!18731 = !DILocalVariable(name: "key", scope: !18725, file: !2568, line: 1796, type: !16468)
!18732 = !DILocalVariable(name: "ret", scope: !18725, file: !2568, line: 1797, type: !105)
!18733 = !DILocation(line: 0, scope: !18725)
!18734 = !DILocation(line: 0, scope: !16476, inlinedAt: !18735)
!18735 = distinct !DILocation(line: 1796, column: 25, scope: !18725)
!18736 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !18737)
!18737 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !18735)
!18738 = !DILocation(line: 0, scope: !16485, inlinedAt: !18737)
!18739 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !18735)
!18740 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !18735)
!18741 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !18735)
!18742 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !18735)
!18743 = !DILocation(line: 1801, column: 20, scope: !18744)
!18744 = distinct !DILexicalBlock(scope: !18725, file: !2568, line: 1801, column: 6)
!18745 = !DILocation(line: 1801, column: 33, scope: !18744)
!18746 = !DILocation(line: 1801, column: 49, scope: !18744)
!18747 = !DILocation(line: 1801, column: 6, scope: !18725)
!18748 = !DILocation(line: 1803, column: 13, scope: !18749)
!18749 = distinct !DILexicalBlock(scope: !18744, file: !2568, line: 1803, column: 13)
!18750 = !DILocation(line: 1803, column: 13, scope: !18744)
!18751 = !DILocation(line: 1805, column: 24, scope: !18752)
!18752 = distinct !DILexicalBlock(scope: !18749, file: !2568, line: 1805, column: 13)
!18753 = !DILocation(line: 1805, column: 21, scope: !18752)
!18754 = !DILocation(line: 1805, column: 34, scope: !18752)
!18755 = !DILocation(line: 1806, column: 20, scope: !18752)
!18756 = !DILocation(line: 1806, column: 44, scope: !18752)
!18757 = !DILocation(line: 1806, column: 30, scope: !18752)
!18758 = !DILocation(line: 1805, column: 13, scope: !18749)
!18759 = !DILocation(line: 1031, column: 3, scope: !17246, inlinedAt: !18760)
!18760 = distinct !DILocation(line: 48, column: 10, scope: !17250, inlinedAt: !18761)
!18761 = distinct !DILocation(line: 1809, column: 3, scope: !18762)
!18762 = distinct !DILexicalBlock(scope: !18763, file: !2568, line: 1809, column: 3)
!18763 = distinct !DILexicalBlock(scope: !18764, file: !2568, line: 1809, column: 3)
!18764 = distinct !DILexicalBlock(scope: !18752, file: !2568, line: 1808, column: 9)
!18765 = !DILocation(line: 0, scope: !17246, inlinedAt: !18760)
!18766 = !DILocation(line: 48, column: 9, scope: !17250, inlinedAt: !18761)
!18767 = !DILocation(line: 1809, column: 3, scope: !18763)
!18768 = !DILocation(line: 1809, column: 3, scope: !18769)
!18769 = distinct !DILexicalBlock(scope: !18762, file: !2568, line: 1809, column: 3)
!18770 = !DILocation(line: 1810, column: 23, scope: !18764)
!18771 = !DILocation(line: 1810, column: 42, scope: !18764)
!18772 = !DILocation(line: 1810, column: 3, scope: !18764)
!18773 = !DILocation(line: 1811, column: 22, scope: !18764)
!18774 = !DILocation(line: 1811, column: 3, scope: !18764)
!18775 = !DILocation(line: 0, scope: !17197, inlinedAt: !18776)
!18776 = distinct !DILocation(line: 1814, column: 9, scope: !18764)
!18777 = !DILocation(line: 0, scope: !17206, inlinedAt: !18778)
!18778 = distinct !DILocation(line: 195, column: 2, scope: !17197, inlinedAt: !18776)
!18779 = !DILocation(line: 225, column: 2, scope: !17213, inlinedAt: !18778)
!18780 = !DILocation(line: 225, column: 2, scope: !17214, inlinedAt: !18778)
!18781 = !DILocation(line: 225, column: 2, scope: !17217, inlinedAt: !18778)
!18782 = !DILocation(line: 196, column: 9, scope: !17197, inlinedAt: !18776)
!18783 = !DILocation(line: 1817, column: 3, scope: !18764)
!18784 = !DILocation(line: 0, scope: !18744)
!18785 = !DILocation(line: 0, scope: !16510, inlinedAt: !18786)
!18786 = distinct !DILocation(line: 1822, column: 2, scope: !18725)
!18787 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !18786)
!18788 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !18786)
!18789 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !18786)
!18790 = !DILocation(line: 0, scope: !16524, inlinedAt: !18791)
!18791 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !18786)
!18792 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !18791)
!18793 = !DILocation(line: 1823, column: 2, scope: !18725)
!18794 = !DILocation(line: 1824, column: 1, scope: !18725)
!18795 = distinct !DISubprogram(name: "z_sched_wake", scope: !2568, file: !2568, line: 1882, type: !18796, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18798)
!18796 = !DISubroutineType(types: !18797)
!18797 = !{!492, !2492, !105, !104}
!18798 = !{!18799, !18800, !18801, !18802, !18803, !18804, !18806}
!18799 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18795, file: !2568, line: 1882, type: !2492)
!18800 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !18795, file: !2568, line: 1882, type: !105)
!18801 = !DILocalVariable(name: "swap_data", arg: 3, scope: !18795, file: !2568, line: 1882, type: !104)
!18802 = !DILocalVariable(name: "thread", scope: !18795, file: !2568, line: 1884, type: !2461)
!18803 = !DILocalVariable(name: "ret", scope: !18795, file: !2568, line: 1885, type: !492)
!18804 = !DILocalVariable(name: "__i", scope: !18805, file: !2568, line: 1887, type: !16468)
!18805 = distinct !DILexicalBlock(scope: !18795, file: !2568, line: 1887, column: 2)
!18806 = !DILocalVariable(name: "__key", scope: !18805, file: !2568, line: 1887, type: !16468)
!18807 = !DILocation(line: 0, scope: !18795)
!18808 = !DILocation(line: 0, scope: !18805)
!18809 = !DILocation(line: 0, scope: !16476, inlinedAt: !18810)
!18810 = distinct !DILocation(line: 1887, column: 2, scope: !18805)
!18811 = !DILocation(line: 55, column: 2, scope: !16485, inlinedAt: !18812)
!18812 = distinct !DILocation(line: 145, column: 10, scope: !16476, inlinedAt: !18810)
!18813 = !DILocation(line: 0, scope: !16485, inlinedAt: !18812)
!18814 = !DILocation(line: 148, column: 2, scope: !16493, inlinedAt: !18810)
!18815 = !DILocation(line: 148, column: 2, scope: !16494, inlinedAt: !18810)
!18816 = !DILocation(line: 148, column: 2, scope: !16497, inlinedAt: !18810)
!18817 = !DILocation(line: 160, column: 2, scope: !16476, inlinedAt: !18810)
!18818 = !DILocation(line: 1888, column: 12, scope: !18819)
!18819 = distinct !DILexicalBlock(scope: !18820, file: !2568, line: 1887, column: 26)
!18820 = distinct !DILexicalBlock(scope: !18805, file: !2568, line: 1887, column: 2)
!18821 = !DILocation(line: 1890, column: 14, scope: !18822)
!18822 = distinct !DILexicalBlock(scope: !18819, file: !2568, line: 1890, column: 7)
!18823 = !DILocation(line: 1890, column: 7, scope: !18819)
!18824 = !DILocalVariable(name: "thread", arg: 1, scope: !18825, file: !15721, line: 134, type: !2461)
!18825 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15721, file: !15721, line: 134, type: !18826, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18828)
!18826 = !DISubroutineType(types: !18827)
!18827 = !{null, !2461, !32, !104}
!18828 = !{!18824, !18829, !18830}
!18829 = !DILocalVariable(name: "value", arg: 2, scope: !18825, file: !15721, line: 135, type: !32)
!18830 = !DILocalVariable(name: "data", arg: 3, scope: !18825, file: !15721, line: 136, type: !104)
!18831 = !DILocation(line: 0, scope: !18825, inlinedAt: !18832)
!18832 = distinct !DILocation(line: 1891, column: 4, scope: !18833)
!18833 = distinct !DILexicalBlock(scope: !18822, file: !2568, line: 1890, column: 23)
!18834 = !DILocation(line: 0, scope: !18712, inlinedAt: !18835)
!18835 = distinct !DILocation(line: 138, column: 2, scope: !18825, inlinedAt: !18832)
!18836 = !DILocation(line: 67, column: 15, scope: !18712, inlinedAt: !18835)
!18837 = !DILocation(line: 67, column: 33, scope: !18712, inlinedAt: !18835)
!18838 = !DILocation(line: 139, column: 15, scope: !18825, inlinedAt: !18832)
!18839 = !DILocation(line: 139, column: 25, scope: !18825, inlinedAt: !18832)
!18840 = !DILocation(line: 1894, column: 4, scope: !18833)
!18841 = !DILocation(line: 1895, column: 10, scope: !18833)
!18842 = !DILocation(line: 1896, column: 4, scope: !18833)
!18843 = !DILocation(line: 1898, column: 3, scope: !18833)
!18844 = !DILocation(line: 0, scope: !16510, inlinedAt: !18845)
!18845 = distinct !DILocation(line: 1887, column: 2, scope: !18820)
!18846 = !DILocation(line: 194, column: 2, scope: !16518, inlinedAt: !18845)
!18847 = !DILocation(line: 194, column: 2, scope: !16519, inlinedAt: !18845)
!18848 = !DILocation(line: 194, column: 2, scope: !16522, inlinedAt: !18845)
!18849 = !DILocation(line: 0, scope: !16524, inlinedAt: !18850)
!18850 = distinct !DILocation(line: 215, column: 2, scope: !16510, inlinedAt: !18845)
!18851 = !DILocation(line: 95, column: 2, scope: !16524, inlinedAt: !18850)
!18852 = !DILocation(line: 1901, column: 2, scope: !18795)
!18853 = distinct !DISubprogram(name: "z_sched_wait", scope: !2568, file: !2568, line: 1904, type: !18854, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !18857)
!18854 = !DISubroutineType(types: !18855)
!18855 = !{!105, !16479, !16468, !2492, !17407, !18856}
!18856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!18857 = !{!18858, !18859, !18860, !18861, !18862, !18863}
!18858 = !DILocalVariable(name: "lock", arg: 1, scope: !18853, file: !2568, line: 1904, type: !16479)
!18859 = !DILocalVariable(name: "key", arg: 2, scope: !18853, file: !2568, line: 1904, type: !16468)
!18860 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18853, file: !2568, line: 1905, type: !2492)
!18861 = !DILocalVariable(name: "timeout", arg: 4, scope: !18853, file: !2568, line: 1905, type: !17407)
!18862 = !DILocalVariable(name: "data", arg: 5, scope: !18853, file: !2568, line: 1905, type: !18856)
!18863 = !DILocalVariable(name: "ret", scope: !18853, file: !2568, line: 1907, type: !105)
!18864 = !DILocation(line: 0, scope: !18853)
!18865 = !DILocation(line: 1907, column: 12, scope: !18853)
!18866 = !DILocation(line: 1909, column: 11, scope: !18867)
!18867 = distinct !DILexicalBlock(scope: !18853, file: !2568, line: 1909, column: 6)
!18868 = !DILocation(line: 1909, column: 6, scope: !18853)
!18869 = !DILocation(line: 1910, column: 11, scope: !18870)
!18870 = distinct !DILexicalBlock(scope: !18867, file: !2568, line: 1909, column: 20)
!18871 = !DILocation(line: 1910, column: 26, scope: !18870)
!18872 = !DILocation(line: 1910, column: 9, scope: !18870)
!18873 = !DILocation(line: 1911, column: 2, scope: !18870)
!18874 = !DILocation(line: 1912, column: 2, scope: !18853)
!18875 = distinct !DISubprogram(name: "z_data_copy", scope: !18876, file: !18876, line: 22, type: !266, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3334, retainedNodes: !397)
!18876 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18877 = !DILocation(line: 24, column: 2, scope: !18875)
!18878 = !DILocation(line: 27, column: 2, scope: !18875)
!18879 = !DILocation(line: 71, column: 1, scope: !18875)
!18880 = distinct !DISubprogram(name: "z_add_timeout", scope: !2605, file: !2605, line: 88, type: !18881, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !18887)
!18881 = !DISubroutineType(types: !18882)
!18882 = !{null, !2578, !2597, !18883}
!18883 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !18884)
!18884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !18885)
!18885 = !{!18886}
!18886 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18884, file: !108, line: 66, baseType: !107, size: 64)
!18887 = !{!18888, !18889, !18890, !18891, !18897, !18898, !18901, !18904}
!18888 = !DILocalVariable(name: "to", arg: 1, scope: !18880, file: !2605, line: 88, type: !2578)
!18889 = !DILocalVariable(name: "fn", arg: 2, scope: !18880, file: !2605, line: 88, type: !2597)
!18890 = !DILocalVariable(name: "timeout", arg: 3, scope: !18880, file: !2605, line: 89, type: !18883)
!18891 = !DILocalVariable(name: "__i", scope: !18892, file: !2605, line: 102, type: !18893)
!18892 = distinct !DILexicalBlock(scope: !18880, file: !2605, line: 102, column: 2)
!18893 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !18894)
!18894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !18895)
!18895 = !{!18896}
!18896 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18894, file: !236, line: 33, baseType: !105, size: 32)
!18897 = !DILocalVariable(name: "__key", scope: !18892, file: !2605, line: 102, type: !18893)
!18898 = !DILocalVariable(name: "t", scope: !18899, file: !2605, line: 103, type: !2578)
!18899 = distinct !DILexicalBlock(scope: !18900, file: !2605, line: 102, column: 24)
!18900 = distinct !DILexicalBlock(scope: !18892, file: !2605, line: 102, column: 2)
!18901 = !DILocalVariable(name: "ticks", scope: !18902, file: !2605, line: 107, type: !107)
!18902 = distinct !DILexicalBlock(scope: !18903, file: !2605, line: 106, column: 39)
!18903 = distinct !DILexicalBlock(scope: !18899, file: !2605, line: 105, column: 7)
!18904 = !DILocalVariable(name: "next_time", scope: !18905, file: !2605, line: 137, type: !116)
!18905 = distinct !DILexicalBlock(scope: !18906, file: !2605, line: 127, column: 22)
!18906 = distinct !DILexicalBlock(scope: !18899, file: !2605, line: 127, column: 7)
!18907 = !DILocation(line: 0, scope: !18880)
!18908 = !DILocation(line: 91, column: 6, scope: !18909)
!18909 = distinct !DILexicalBlock(scope: !18880, file: !2605, line: 91, column: 6)
!18910 = !DILocation(line: 91, column: 6, scope: !18880)
!18911 = !DILocation(line: 99, column: 2, scope: !18912)
!18912 = distinct !DILexicalBlock(scope: !18913, file: !2605, line: 99, column: 2)
!18913 = distinct !DILexicalBlock(scope: !18880, file: !2605, line: 99, column: 2)
!18914 = !DILocation(line: 99, column: 2, scope: !18913)
!18915 = !DILocation(line: 99, column: 2, scope: !18916)
!18916 = distinct !DILexicalBlock(scope: !18912, file: !2605, line: 99, column: 2)
!18917 = !DILocation(line: 100, column: 6, scope: !18880)
!18918 = !DILocation(line: 100, column: 9, scope: !18880)
!18919 = !DILocation(line: 0, scope: !18892)
!18920 = !DILocalVariable(name: "l", arg: 1, scope: !18921, file: !236, line: 136, type: !18924)
!18921 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !18922, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !18925)
!18922 = !DISubroutineType(types: !18923)
!18923 = !{!18893, !18924}
!18924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!18925 = !{!18920, !18926}
!18926 = !DILocalVariable(name: "k", scope: !18921, file: !236, line: 139, type: !18893)
!18927 = !DILocation(line: 0, scope: !18921, inlinedAt: !18928)
!18928 = distinct !DILocation(line: 102, column: 2, scope: !18892)
!18929 = !DILocation(line: 55, column: 2, scope: !18930, inlinedAt: !18934)
!18930 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7532, file: !7532, line: 42, type: !7533, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !18931)
!18931 = !{!18932, !18933}
!18932 = !DILocalVariable(name: "key", scope: !18930, file: !7532, line: 44, type: !32)
!18933 = !DILocalVariable(name: "tmp", scope: !18930, file: !7532, line: 53, type: !32)
!18934 = distinct !DILocation(line: 145, column: 10, scope: !18921, inlinedAt: !18928)
!18935 = !{i64 2287489}
!18936 = !DILocation(line: 0, scope: !18930, inlinedAt: !18934)
!18937 = !DILocation(line: 148, column: 2, scope: !18938, inlinedAt: !18928)
!18938 = distinct !DILexicalBlock(scope: !18939, file: !236, line: 148, column: 2)
!18939 = distinct !DILexicalBlock(scope: !18921, file: !236, line: 148, column: 2)
!18940 = !DILocation(line: 148, column: 2, scope: !18939, inlinedAt: !18928)
!18941 = !DILocation(line: 148, column: 2, scope: !18942, inlinedAt: !18928)
!18942 = distinct !DILexicalBlock(scope: !18938, file: !236, line: 148, column: 2)
!18943 = !DILocation(line: 160, column: 2, scope: !18921, inlinedAt: !18928)
!18944 = !DILocation(line: 106, column: 33, scope: !18903)
!18945 = !DILocation(line: 105, column: 7, scope: !18899)
!18946 = !DILocation(line: 107, column: 50, scope: !18902)
!18947 = !DILocation(line: 107, column: 48, scope: !18902)
!18948 = !DILocation(line: 0, scope: !18902)
!18949 = !DILocation(line: 109, column: 17, scope: !18902)
!18950 = !DILocation(line: 110, column: 3, scope: !18902)
!18951 = !DILocation(line: 111, column: 31, scope: !18952)
!18952 = distinct !DILexicalBlock(scope: !18903, file: !2605, line: 110, column: 10)
!18953 = !DILocation(line: 111, column: 37, scope: !18952)
!18954 = !DILocation(line: 111, column: 35, scope: !18952)
!18955 = !DILocation(line: 0, scope: !18903)
!18956 = !DILocation(line: 109, column: 8, scope: !18902)
!18957 = !DILocation(line: 109, column: 15, scope: !18902)
!18958 = !DILocation(line: 114, column: 12, scope: !18959)
!18959 = distinct !DILexicalBlock(scope: !18899, file: !2605, line: 114, column: 3)
!18960 = !DILocation(line: 0, scope: !18899)
!18961 = !DILocation(line: 114, column: 3, scope: !18959)
!18962 = !DILocation(line: 115, column: 24, scope: !18963)
!18963 = distinct !DILexicalBlock(scope: !18964, file: !2605, line: 115, column: 8)
!18964 = distinct !DILexicalBlock(scope: !18965, file: !2605, line: 114, column: 45)
!18965 = distinct !DILexicalBlock(scope: !18959, file: !2605, line: 114, column: 3)
!18966 = !DILocation(line: 115, column: 11, scope: !18963)
!18967 = !DILocation(line: 115, column: 18, scope: !18963)
!18968 = !DILocation(line: 115, column: 8, scope: !18964)
!18969 = !DILocation(line: 116, column: 15, scope: !18970)
!18970 = distinct !DILexicalBlock(scope: !18963, file: !2605, line: 115, column: 32)
!18971 = !DILocation(line: 117, column: 26, scope: !18970)
!18972 = !DILocation(line: 117, column: 5, scope: !18970)
!18973 = !DILocation(line: 123, column: 7, scope: !18899)
!18974 = !DILocation(line: 120, column: 15, scope: !18964)
!18975 = !DILocation(line: 114, column: 36, scope: !18965)
!18976 = distinct !{!18976, !18961, !18977}
!18977 = !DILocation(line: 121, column: 3, scope: !18959)
!18978 = !DILocation(line: 124, column: 4, scope: !18979)
!18979 = distinct !DILexicalBlock(scope: !18980, file: !2605, line: 123, column: 18)
!18980 = distinct !DILexicalBlock(scope: !18899, file: !2605, line: 123, column: 7)
!18981 = !DILocation(line: 125, column: 3, scope: !18979)
!18982 = !DILocation(line: 127, column: 13, scope: !18906)
!18983 = !DILocation(line: 127, column: 10, scope: !18906)
!18984 = !DILocation(line: 127, column: 7, scope: !18899)
!18985 = !DILocation(line: 137, column: 24, scope: !18905)
!18986 = !DILocation(line: 0, scope: !18905)
!18987 = !DILocation(line: 139, column: 18, scope: !18988)
!18988 = distinct !DILexicalBlock(scope: !18905, file: !2605, line: 139, column: 8)
!18989 = !DILocation(line: 139, column: 23, scope: !18988)
!18990 = !DILocation(line: 141, column: 5, scope: !18991)
!18991 = distinct !DILexicalBlock(scope: !18988, file: !2605, line: 140, column: 48)
!18992 = !DILocation(line: 142, column: 4, scope: !18991)
!18993 = !DILocalVariable(name: "key", arg: 2, scope: !18994, file: !236, line: 190, type: !18893)
!18994 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !18995, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !18997)
!18995 = !DISubroutineType(types: !18996)
!18996 = !{null, !18924, !18893}
!18997 = !{!18998, !18993}
!18998 = !DILocalVariable(name: "l", arg: 1, scope: !18994, file: !236, line: 189, type: !18924)
!18999 = !DILocation(line: 0, scope: !18994, inlinedAt: !19000)
!19000 = distinct !DILocation(line: 102, column: 2, scope: !18900)
!19001 = !DILocation(line: 194, column: 2, scope: !19002, inlinedAt: !19000)
!19002 = distinct !DILexicalBlock(scope: !19003, file: !236, line: 194, column: 2)
!19003 = distinct !DILexicalBlock(scope: !18994, file: !236, line: 194, column: 2)
!19004 = !DILocation(line: 194, column: 2, scope: !19003, inlinedAt: !19000)
!19005 = !DILocation(line: 194, column: 2, scope: !19006, inlinedAt: !19000)
!19006 = distinct !DILexicalBlock(scope: !19002, file: !236, line: 194, column: 2)
!19007 = !DILocalVariable(name: "key", arg: 1, scope: !19008, file: !7532, line: 84, type: !32)
!19008 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7532, file: !7532, line: 84, type: !7543, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19009)
!19009 = !{!19007}
!19010 = !DILocation(line: 0, scope: !19008, inlinedAt: !19011)
!19011 = distinct !DILocation(line: 215, column: 2, scope: !18994, inlinedAt: !19000)
!19012 = !DILocation(line: 95, column: 2, scope: !19008, inlinedAt: !19011)
!19013 = !{i64 2288306}
!19014 = !DILocation(line: 148, column: 1, scope: !18880)
!19015 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !19016, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19020)
!19016 = !DISubroutineType(types: !19017)
!19017 = !{!492, !19018}
!19018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19019, size: 32)
!19019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2582)
!19020 = !{!19021}
!19021 = !DILocalVariable(name: "node", arg: 1, scope: !19015, file: !137, line: 225, type: !19018)
!19022 = !DILocation(line: 0, scope: !19015)
!19023 = !DILocation(line: 227, column: 15, scope: !19015)
!19024 = !DILocation(line: 227, column: 20, scope: !19015)
!19025 = !DILocation(line: 227, column: 2, scope: !19015)
!19026 = distinct !DISubprogram(name: "elapsed", scope: !2605, file: !2605, line: 62, type: !19027, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !397)
!19027 = !DISubroutineType(types: !19028)
!19028 = !{!116}
!19029 = !DILocation(line: 64, column: 9, scope: !19026)
!19030 = !DILocation(line: 64, column: 28, scope: !19026)
!19031 = !DILocation(line: 64, column: 35, scope: !19026)
!19032 = !DILocation(line: 64, column: 2, scope: !19026)
!19033 = distinct !DISubprogram(name: "first", scope: !2605, file: !2605, line: 39, type: !19034, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19036)
!19034 = !DISubroutineType(types: !19035)
!19035 = !{!2578}
!19036 = !{!19037}
!19037 = !DILocalVariable(name: "t", scope: !19033, file: !2605, line: 41, type: !19038)
!19038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 32)
!19039 = !DILocation(line: 41, column: 19, scope: !19033)
!19040 = !DILocation(line: 0, scope: !19033)
!19041 = !DILocation(line: 43, column: 9, scope: !19033)
!19042 = !DILocation(line: 43, column: 2, scope: !19033)
!19043 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !19044, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19046)
!19044 = !DISubroutineType(types: !19045)
!19045 = !{null, !19038, !19038}
!19046 = !{!19047, !19048, !19049}
!19047 = !DILocalVariable(name: "successor", arg: 1, scope: !19043, file: !137, line: 443, type: !19038)
!19048 = !DILocalVariable(name: "node", arg: 2, scope: !19043, file: !137, line: 443, type: !19038)
!19049 = !DILocalVariable(name: "prev", scope: !19043, file: !137, line: 445, type: !19050)
!19050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !19038)
!19051 = !DILocation(line: 0, scope: !19043)
!19052 = !DILocation(line: 445, column: 39, scope: !19043)
!19053 = !DILocation(line: 447, column: 8, scope: !19043)
!19054 = !DILocation(line: 447, column: 13, scope: !19043)
!19055 = !DILocation(line: 448, column: 8, scope: !19043)
!19056 = !DILocation(line: 448, column: 13, scope: !19043)
!19057 = !DILocation(line: 449, column: 8, scope: !19043)
!19058 = !DILocation(line: 449, column: 13, scope: !19043)
!19059 = !DILocation(line: 450, column: 18, scope: !19043)
!19060 = !DILocation(line: 451, column: 1, scope: !19043)
!19061 = distinct !DISubprogram(name: "next", scope: !2605, file: !2605, line: 46, type: !19062, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19064)
!19062 = !DISubroutineType(types: !19063)
!19063 = !{!2578, !2578}
!19064 = !{!19065, !19066}
!19065 = !DILocalVariable(name: "t", arg: 1, scope: !19061, file: !2605, line: 46, type: !2578)
!19066 = !DILocalVariable(name: "n", scope: !19061, file: !2605, line: 48, type: !19038)
!19067 = !DILocation(line: 0, scope: !19061)
!19068 = !DILocation(line: 48, column: 58, scope: !19061)
!19069 = !DILocation(line: 48, column: 19, scope: !19061)
!19070 = !DILocation(line: 50, column: 9, scope: !19061)
!19071 = !DILocation(line: 50, column: 2, scope: !19061)
!19072 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !19073, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19076)
!19073 = !DISubroutineType(types: !19074)
!19074 = !{null, !19075, !19038}
!19075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 32)
!19076 = !{!19077, !19078, !19079}
!19077 = !DILocalVariable(name: "list", arg: 1, scope: !19072, file: !137, line: 404, type: !19075)
!19078 = !DILocalVariable(name: "node", arg: 2, scope: !19072, file: !137, line: 404, type: !19038)
!19079 = !DILocalVariable(name: "tail", scope: !19072, file: !137, line: 406, type: !19050)
!19080 = !DILocation(line: 0, scope: !19072)
!19081 = !DILocation(line: 406, column: 34, scope: !19072)
!19082 = !DILocation(line: 408, column: 8, scope: !19072)
!19083 = !DILocation(line: 408, column: 13, scope: !19072)
!19084 = !DILocation(line: 409, column: 8, scope: !19072)
!19085 = !DILocation(line: 409, column: 13, scope: !19072)
!19086 = !DILocation(line: 411, column: 8, scope: !19072)
!19087 = !DILocation(line: 411, column: 13, scope: !19072)
!19088 = !DILocation(line: 412, column: 13, scope: !19072)
!19089 = !DILocation(line: 413, column: 1, scope: !19072)
!19090 = distinct !DISubprogram(name: "next_timeout", scope: !2605, file: !2605, line: 67, type: !19027, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19091)
!19091 = !{!19092, !19093, !19094}
!19092 = !DILocalVariable(name: "to", scope: !19090, file: !2605, line: 69, type: !2578)
!19093 = !DILocalVariable(name: "ticks_elapsed", scope: !19090, file: !2605, line: 70, type: !116)
!19094 = !DILocalVariable(name: "ret", scope: !19090, file: !2605, line: 71, type: !116)
!19095 = !DILocation(line: 69, column: 24, scope: !19090)
!19096 = !DILocation(line: 0, scope: !19090)
!19097 = !DILocation(line: 70, column: 26, scope: !19090)
!19098 = !DILocation(line: 73, column: 10, scope: !19099)
!19099 = distinct !DILexicalBlock(scope: !19090, file: !2605, line: 73, column: 6)
!19100 = !DILocation(line: 73, column: 19, scope: !19099)
!19101 = !DILocation(line: 74, column: 21, scope: !19099)
!19102 = !DILocation(line: 74, column: 30, scope: !19099)
!19103 = !DILocation(line: 74, column: 28, scope: !19099)
!19104 = !DILocation(line: 74, column: 45, scope: !19099)
!19105 = !DILocation(line: 73, column: 6, scope: !19090)
!19106 = !DILocation(line: 77, column: 9, scope: !19107)
!19107 = distinct !DILexicalBlock(scope: !19099, file: !2605, line: 76, column: 9)
!19108 = !DILocation(line: 0, scope: !19099)
!19109 = !DILocation(line: 81, column: 20, scope: !19110)
!19110 = distinct !DILexicalBlock(scope: !19090, file: !2605, line: 81, column: 6)
!19111 = !DILocation(line: 81, column: 6, scope: !19110)
!19112 = !DILocation(line: 81, column: 32, scope: !19110)
!19113 = !DILocation(line: 85, column: 2, scope: !19090)
!19114 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !19115, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19117)
!19115 = !DISubroutineType(types: !19116)
!19116 = !{!19038, !19075, !19038}
!19117 = !{!19118, !19119}
!19118 = !DILocalVariable(name: "list", arg: 1, scope: !19114, file: !137, line: 341, type: !19075)
!19119 = !DILocalVariable(name: "node", arg: 2, scope: !19114, file: !137, line: 342, type: !19038)
!19120 = !DILocation(line: 0, scope: !19114)
!19121 = !DILocation(line: 344, column: 15, scope: !19114)
!19122 = !DILocation(line: 344, column: 9, scope: !19114)
!19123 = !DILocation(line: 344, column: 26, scope: !19114)
!19124 = !DILocation(line: 344, column: 2, scope: !19114)
!19125 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !19115, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19126)
!19126 = !{!19127, !19128}
!19127 = !DILocalVariable(name: "list", arg: 1, scope: !19125, file: !137, line: 325, type: !19075)
!19128 = !DILocalVariable(name: "node", arg: 2, scope: !19125, file: !137, line: 326, type: !19038)
!19129 = !DILocation(line: 0, scope: !19125)
!19130 = !DILocation(line: 328, column: 24, scope: !19125)
!19131 = !DILocation(line: 328, column: 15, scope: !19125)
!19132 = !DILocation(line: 328, column: 9, scope: !19125)
!19133 = !DILocation(line: 328, column: 45, scope: !19125)
!19134 = !DILocation(line: 328, column: 2, scope: !19125)
!19135 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !19136, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19138)
!19136 = !DISubroutineType(types: !19137)
!19137 = !{!19038, !19075}
!19138 = !{!19139}
!19139 = !DILocalVariable(name: "list", arg: 1, scope: !19135, file: !137, line: 294, type: !19075)
!19140 = !DILocation(line: 0, scope: !19135)
!19141 = !DILocation(line: 296, column: 9, scope: !19135)
!19142 = !DILocation(line: 296, column: 2, scope: !19135)
!19143 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !19144, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19146)
!19144 = !DISubroutineType(types: !19145)
!19145 = !{!492, !19075}
!19146 = !{!19147}
!19147 = !DILocalVariable(name: "list", arg: 1, scope: !19143, file: !137, line: 266, type: !19075)
!19148 = !DILocation(line: 0, scope: !19143)
!19149 = !DILocation(line: 268, column: 15, scope: !19143)
!19150 = !DILocation(line: 268, column: 20, scope: !19143)
!19151 = !DILocation(line: 268, column: 2, scope: !19143)
!19152 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2605, file: !2605, line: 150, type: !19153, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19155)
!19153 = !DISubroutineType(types: !19154)
!19154 = !{!105, !2578}
!19155 = !{!19156, !19157, !19158, !19160}
!19156 = !DILocalVariable(name: "to", arg: 1, scope: !19152, file: !2605, line: 150, type: !2578)
!19157 = !DILocalVariable(name: "ret", scope: !19152, file: !2605, line: 152, type: !105)
!19158 = !DILocalVariable(name: "__i", scope: !19159, file: !2605, line: 154, type: !18893)
!19159 = distinct !DILexicalBlock(scope: !19152, file: !2605, line: 154, column: 2)
!19160 = !DILocalVariable(name: "__key", scope: !19159, file: !2605, line: 154, type: !18893)
!19161 = !DILocation(line: 0, scope: !19152)
!19162 = !DILocation(line: 0, scope: !19159)
!19163 = !DILocation(line: 0, scope: !18921, inlinedAt: !19164)
!19164 = distinct !DILocation(line: 154, column: 2, scope: !19159)
!19165 = !DILocation(line: 55, column: 2, scope: !18930, inlinedAt: !19166)
!19166 = distinct !DILocation(line: 145, column: 10, scope: !18921, inlinedAt: !19164)
!19167 = !DILocation(line: 0, scope: !18930, inlinedAt: !19166)
!19168 = !DILocation(line: 148, column: 2, scope: !18938, inlinedAt: !19164)
!19169 = !DILocation(line: 148, column: 2, scope: !18939, inlinedAt: !19164)
!19170 = !DILocation(line: 148, column: 2, scope: !18942, inlinedAt: !19164)
!19171 = !DILocation(line: 160, column: 2, scope: !18921, inlinedAt: !19164)
!19172 = !DILocation(line: 155, column: 7, scope: !19173)
!19173 = distinct !DILexicalBlock(scope: !19174, file: !2605, line: 155, column: 7)
!19174 = distinct !DILexicalBlock(scope: !19175, file: !2605, line: 154, column: 24)
!19175 = distinct !DILexicalBlock(scope: !19159, file: !2605, line: 154, column: 2)
!19176 = !DILocation(line: 155, column: 7, scope: !19174)
!19177 = !DILocation(line: 156, column: 4, scope: !19178)
!19178 = distinct !DILexicalBlock(scope: !19173, file: !2605, line: 155, column: 39)
!19179 = !DILocation(line: 158, column: 3, scope: !19178)
!19180 = !DILocation(line: 0, scope: !18994, inlinedAt: !19181)
!19181 = distinct !DILocation(line: 154, column: 2, scope: !19175)
!19182 = !DILocation(line: 194, column: 2, scope: !19002, inlinedAt: !19181)
!19183 = !DILocation(line: 194, column: 2, scope: !19003, inlinedAt: !19181)
!19184 = !DILocation(line: 194, column: 2, scope: !19006, inlinedAt: !19181)
!19185 = !DILocation(line: 0, scope: !19008, inlinedAt: !19186)
!19186 = distinct !DILocation(line: 215, column: 2, scope: !18994, inlinedAt: !19181)
!19187 = !DILocation(line: 95, column: 2, scope: !19008, inlinedAt: !19186)
!19188 = !DILocation(line: 161, column: 2, scope: !19152)
!19189 = distinct !DISubprogram(name: "remove_timeout", scope: !2605, file: !2605, line: 53, type: !2599, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19190)
!19190 = !{!19191}
!19191 = !DILocalVariable(name: "t", arg: 1, scope: !19189, file: !2605, line: 53, type: !2578)
!19192 = !DILocation(line: 0, scope: !19189)
!19193 = !DILocation(line: 55, column: 6, scope: !19194)
!19194 = distinct !DILexicalBlock(scope: !19189, file: !2605, line: 55, column: 6)
!19195 = !DILocation(line: 55, column: 14, scope: !19194)
!19196 = !DILocation(line: 55, column: 6, scope: !19189)
!19197 = !DILocation(line: 56, column: 25, scope: !19198)
!19198 = distinct !DILexicalBlock(scope: !19194, file: !2605, line: 55, column: 23)
!19199 = !DILocation(line: 56, column: 12, scope: !19198)
!19200 = !DILocation(line: 56, column: 19, scope: !19198)
!19201 = !DILocation(line: 57, column: 2, scope: !19198)
!19202 = !DILocation(line: 59, column: 23, scope: !19189)
!19203 = !DILocation(line: 59, column: 2, scope: !19189)
!19204 = !DILocation(line: 60, column: 1, scope: !19189)
!19205 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !19206, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19208)
!19206 = !DISubroutineType(types: !19207)
!19207 = !{null, !19038}
!19208 = !{!19209, !19210, !19211}
!19209 = !DILocalVariable(name: "node", arg: 1, scope: !19205, file: !137, line: 496, type: !19038)
!19210 = !DILocalVariable(name: "prev", scope: !19205, file: !137, line: 498, type: !19050)
!19211 = !DILocalVariable(name: "next", scope: !19205, file: !137, line: 499, type: !19050)
!19212 = !DILocation(line: 0, scope: !19205)
!19213 = !DILocation(line: 498, column: 34, scope: !19205)
!19214 = !DILocation(line: 499, column: 34, scope: !19205)
!19215 = !DILocation(line: 501, column: 8, scope: !19205)
!19216 = !DILocation(line: 501, column: 13, scope: !19205)
!19217 = !DILocation(line: 502, column: 8, scope: !19205)
!19218 = !DILocation(line: 502, column: 13, scope: !19205)
!19219 = !DILocation(line: 503, column: 2, scope: !19205)
!19220 = !DILocation(line: 504, column: 1, scope: !19205)
!19221 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !19206, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19222)
!19222 = !{!19223}
!19223 = !DILocalVariable(name: "node", arg: 1, scope: !19221, file: !137, line: 211, type: !19038)
!19224 = !DILocation(line: 0, scope: !19221)
!19225 = !DILocation(line: 213, column: 8, scope: !19221)
!19226 = !DILocation(line: 213, column: 13, scope: !19221)
!19227 = !DILocation(line: 214, column: 8, scope: !19221)
!19228 = !DILocation(line: 214, column: 13, scope: !19221)
!19229 = !DILocation(line: 215, column: 1, scope: !19221)
!19230 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2605, file: !2605, line: 183, type: !19231, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19235)
!19231 = !DISubroutineType(types: !19232)
!19232 = !{!107, !19233}
!19233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19234, size: 32)
!19234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2579)
!19235 = !{!19236, !19237, !19238, !19240}
!19236 = !DILocalVariable(name: "timeout", arg: 1, scope: !19230, file: !2605, line: 183, type: !19233)
!19237 = !DILocalVariable(name: "ticks", scope: !19230, file: !2605, line: 185, type: !107)
!19238 = !DILocalVariable(name: "__i", scope: !19239, file: !2605, line: 187, type: !18893)
!19239 = distinct !DILexicalBlock(scope: !19230, file: !2605, line: 187, column: 2)
!19240 = !DILocalVariable(name: "__key", scope: !19239, file: !2605, line: 187, type: !18893)
!19241 = !DILocation(line: 0, scope: !19230)
!19242 = !DILocation(line: 0, scope: !19239)
!19243 = !DILocation(line: 0, scope: !18921, inlinedAt: !19244)
!19244 = distinct !DILocation(line: 187, column: 2, scope: !19239)
!19245 = !DILocation(line: 55, column: 2, scope: !18930, inlinedAt: !19246)
!19246 = distinct !DILocation(line: 145, column: 10, scope: !18921, inlinedAt: !19244)
!19247 = !DILocation(line: 0, scope: !18930, inlinedAt: !19246)
!19248 = !DILocation(line: 148, column: 2, scope: !18938, inlinedAt: !19244)
!19249 = !DILocation(line: 148, column: 2, scope: !18939, inlinedAt: !19244)
!19250 = !DILocation(line: 148, column: 2, scope: !18942, inlinedAt: !19244)
!19251 = !DILocation(line: 160, column: 2, scope: !18921, inlinedAt: !19244)
!19252 = !DILocation(line: 188, column: 11, scope: !19253)
!19253 = distinct !DILexicalBlock(scope: !19254, file: !2605, line: 187, column: 24)
!19254 = distinct !DILexicalBlock(scope: !19239, file: !2605, line: 187, column: 2)
!19255 = !DILocation(line: 0, scope: !18994, inlinedAt: !19256)
!19256 = distinct !DILocation(line: 187, column: 2, scope: !19254)
!19257 = !DILocation(line: 194, column: 2, scope: !19002, inlinedAt: !19256)
!19258 = !DILocation(line: 194, column: 2, scope: !19003, inlinedAt: !19256)
!19259 = !DILocation(line: 194, column: 2, scope: !19006, inlinedAt: !19256)
!19260 = !DILocation(line: 0, scope: !19008, inlinedAt: !19261)
!19261 = distinct !DILocation(line: 215, column: 2, scope: !18994, inlinedAt: !19256)
!19262 = !DILocation(line: 95, column: 2, scope: !19008, inlinedAt: !19261)
!19263 = !DILocation(line: 191, column: 2, scope: !19230)
!19264 = distinct !DISubprogram(name: "timeout_rem", scope: !2605, file: !2605, line: 165, type: !19231, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19265)
!19265 = !{!19266, !19267, !19268}
!19266 = !DILocalVariable(name: "timeout", arg: 1, scope: !19264, file: !2605, line: 165, type: !19233)
!19267 = !DILocalVariable(name: "ticks", scope: !19264, file: !2605, line: 167, type: !107)
!19268 = !DILocalVariable(name: "t", scope: !19269, file: !2605, line: 173, type: !2578)
!19269 = distinct !DILexicalBlock(scope: !19264, file: !2605, line: 173, column: 2)
!19270 = !DILocation(line: 0, scope: !19264)
!19271 = !DILocation(line: 169, column: 6, scope: !19272)
!19272 = distinct !DILexicalBlock(scope: !19264, file: !2605, line: 169, column: 6)
!19273 = !DILocation(line: 169, column: 6, scope: !19264)
!19274 = !DILocation(line: 173, column: 28, scope: !19269)
!19275 = !DILocation(line: 0, scope: !19269)
!19276 = !DILocation(line: 173, column: 39, scope: !19277)
!19277 = distinct !DILexicalBlock(scope: !19269, file: !2605, line: 173, column: 2)
!19278 = !DILocation(line: 173, column: 2, scope: !19269)
!19279 = !DILocation(line: 174, column: 15, scope: !19280)
!19280 = distinct !DILexicalBlock(scope: !19277, file: !2605, line: 173, column: 61)
!19281 = !DILocation(line: 174, column: 9, scope: !19280)
!19282 = !DILocation(line: 175, column: 15, scope: !19283)
!19283 = distinct !DILexicalBlock(scope: !19280, file: !2605, line: 175, column: 7)
!19284 = !DILocation(line: 175, column: 7, scope: !19280)
!19285 = !DILocation(line: 173, column: 52, scope: !19277)
!19286 = distinct !{!19286, !19278, !19287}
!19287 = !DILocation(line: 178, column: 2, scope: !19269)
!19288 = !DILocation(line: 180, column: 17, scope: !19264)
!19289 = !DILocation(line: 180, column: 15, scope: !19264)
!19290 = !DILocation(line: 180, column: 2, scope: !19264)
!19291 = !DILocation(line: 181, column: 1, scope: !19264)
!19292 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15260, file: !15260, line: 35, type: !19293, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19295)
!19293 = !DISubroutineType(types: !19294)
!19294 = !{!492, !19233}
!19295 = !{!19296}
!19296 = !DILocalVariable(name: "to", arg: 1, scope: !19292, file: !15260, line: 35, type: !19233)
!19297 = !DILocation(line: 0, scope: !19292)
!19298 = !DILocation(line: 37, column: 35, scope: !19292)
!19299 = !DILocation(line: 37, column: 10, scope: !19292)
!19300 = !DILocation(line: 37, column: 9, scope: !19292)
!19301 = !DILocation(line: 37, column: 2, scope: !19292)
!19302 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2605, file: !2605, line: 194, type: !19231, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19303)
!19303 = !{!19304, !19305, !19306, !19308}
!19304 = !DILocalVariable(name: "timeout", arg: 1, scope: !19302, file: !2605, line: 194, type: !19233)
!19305 = !DILocalVariable(name: "ticks", scope: !19302, file: !2605, line: 196, type: !107)
!19306 = !DILocalVariable(name: "__i", scope: !19307, file: !2605, line: 198, type: !18893)
!19307 = distinct !DILexicalBlock(scope: !19302, file: !2605, line: 198, column: 2)
!19308 = !DILocalVariable(name: "__key", scope: !19307, file: !2605, line: 198, type: !18893)
!19309 = !DILocation(line: 0, scope: !19302)
!19310 = !DILocation(line: 0, scope: !19307)
!19311 = !DILocation(line: 0, scope: !18921, inlinedAt: !19312)
!19312 = distinct !DILocation(line: 198, column: 2, scope: !19307)
!19313 = !DILocation(line: 55, column: 2, scope: !18930, inlinedAt: !19314)
!19314 = distinct !DILocation(line: 145, column: 10, scope: !18921, inlinedAt: !19312)
!19315 = !DILocation(line: 0, scope: !18930, inlinedAt: !19314)
!19316 = !DILocation(line: 148, column: 2, scope: !18938, inlinedAt: !19312)
!19317 = !DILocation(line: 148, column: 2, scope: !18939, inlinedAt: !19312)
!19318 = !DILocation(line: 148, column: 2, scope: !18942, inlinedAt: !19312)
!19319 = !DILocation(line: 160, column: 2, scope: !18921, inlinedAt: !19312)
!19320 = !DILocation(line: 199, column: 11, scope: !19321)
!19321 = distinct !DILexicalBlock(scope: !19322, file: !2605, line: 198, column: 24)
!19322 = distinct !DILexicalBlock(scope: !19307, file: !2605, line: 198, column: 2)
!19323 = !DILocation(line: 199, column: 23, scope: !19321)
!19324 = !DILocation(line: 0, scope: !18994, inlinedAt: !19325)
!19325 = distinct !DILocation(line: 198, column: 2, scope: !19322)
!19326 = !DILocation(line: 194, column: 2, scope: !19002, inlinedAt: !19325)
!19327 = !DILocation(line: 194, column: 2, scope: !19003, inlinedAt: !19325)
!19328 = !DILocation(line: 194, column: 2, scope: !19006, inlinedAt: !19325)
!19329 = !DILocation(line: 0, scope: !19008, inlinedAt: !19330)
!19330 = distinct !DILocation(line: 215, column: 2, scope: !18994, inlinedAt: !19325)
!19331 = !DILocation(line: 95, column: 2, scope: !19008, inlinedAt: !19330)
!19332 = !DILocation(line: 199, column: 21, scope: !19321)
!19333 = !DILocation(line: 202, column: 2, scope: !19302)
!19334 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2605, file: !2605, line: 205, type: !19027, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19335)
!19335 = !{!19336, !19337, !19339}
!19336 = !DILocalVariable(name: "ret", scope: !19334, file: !2605, line: 207, type: !116)
!19337 = !DILocalVariable(name: "__i", scope: !19338, file: !2605, line: 209, type: !18893)
!19338 = distinct !DILexicalBlock(scope: !19334, file: !2605, line: 209, column: 2)
!19339 = !DILocalVariable(name: "__key", scope: !19338, file: !2605, line: 209, type: !18893)
!19340 = !DILocation(line: 0, scope: !19334)
!19341 = !DILocation(line: 0, scope: !19338)
!19342 = !DILocation(line: 0, scope: !18921, inlinedAt: !19343)
!19343 = distinct !DILocation(line: 209, column: 2, scope: !19338)
!19344 = !DILocation(line: 55, column: 2, scope: !18930, inlinedAt: !19345)
!19345 = distinct !DILocation(line: 145, column: 10, scope: !18921, inlinedAt: !19343)
!19346 = !DILocation(line: 0, scope: !18930, inlinedAt: !19345)
!19347 = !DILocation(line: 148, column: 2, scope: !18938, inlinedAt: !19343)
!19348 = !DILocation(line: 148, column: 2, scope: !18939, inlinedAt: !19343)
!19349 = !DILocation(line: 148, column: 2, scope: !18942, inlinedAt: !19343)
!19350 = !DILocation(line: 160, column: 2, scope: !18921, inlinedAt: !19343)
!19351 = !DILocation(line: 210, column: 9, scope: !19352)
!19352 = distinct !DILexicalBlock(scope: !19353, file: !2605, line: 209, column: 24)
!19353 = distinct !DILexicalBlock(scope: !19338, file: !2605, line: 209, column: 2)
!19354 = !DILocation(line: 0, scope: !18994, inlinedAt: !19355)
!19355 = distinct !DILocation(line: 209, column: 2, scope: !19353)
!19356 = !DILocation(line: 194, column: 2, scope: !19002, inlinedAt: !19355)
!19357 = !DILocation(line: 194, column: 2, scope: !19003, inlinedAt: !19355)
!19358 = !DILocation(line: 194, column: 2, scope: !19006, inlinedAt: !19355)
!19359 = !DILocation(line: 0, scope: !19008, inlinedAt: !19360)
!19360 = distinct !DILocation(line: 215, column: 2, scope: !18994, inlinedAt: !19355)
!19361 = !DILocation(line: 95, column: 2, scope: !19008, inlinedAt: !19360)
!19362 = !DILocation(line: 212, column: 2, scope: !19334)
!19363 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2605, file: !2605, line: 215, type: !12159, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19364)
!19364 = !{!19365, !19366, !19367, !19369, !19370, !19373, !19374}
!19365 = !DILocalVariable(name: "ticks", arg: 1, scope: !19363, file: !2605, line: 215, type: !116)
!19366 = !DILocalVariable(name: "is_idle", arg: 2, scope: !19363, file: !2605, line: 215, type: !492)
!19367 = !DILocalVariable(name: "__i", scope: !19368, file: !2605, line: 217, type: !18893)
!19368 = distinct !DILexicalBlock(scope: !19363, file: !2605, line: 217, column: 2)
!19369 = !DILocalVariable(name: "__key", scope: !19368, file: !2605, line: 217, type: !18893)
!19370 = !DILocalVariable(name: "next_to", scope: !19371, file: !2605, line: 218, type: !105)
!19371 = distinct !DILexicalBlock(scope: !19372, file: !2605, line: 217, column: 24)
!19372 = distinct !DILexicalBlock(scope: !19368, file: !2605, line: 217, column: 2)
!19373 = !DILocalVariable(name: "sooner", scope: !19371, file: !2605, line: 219, type: !492)
!19374 = !DILocalVariable(name: "imminent", scope: !19371, file: !2605, line: 221, type: !492)
!19375 = !DILocation(line: 0, scope: !19363)
!19376 = !DILocation(line: 0, scope: !19368)
!19377 = !DILocation(line: 0, scope: !18921, inlinedAt: !19378)
!19378 = distinct !DILocation(line: 217, column: 2, scope: !19368)
!19379 = !DILocation(line: 55, column: 2, scope: !18930, inlinedAt: !19380)
!19380 = distinct !DILocation(line: 145, column: 10, scope: !18921, inlinedAt: !19378)
!19381 = !DILocation(line: 0, scope: !18930, inlinedAt: !19380)
!19382 = !DILocation(line: 148, column: 2, scope: !18938, inlinedAt: !19378)
!19383 = !DILocation(line: 148, column: 2, scope: !18939, inlinedAt: !19378)
!19384 = !DILocation(line: 148, column: 2, scope: !18942, inlinedAt: !19378)
!19385 = !DILocation(line: 160, column: 2, scope: !18921, inlinedAt: !19378)
!19386 = !DILocation(line: 218, column: 17, scope: !19371)
!19387 = !DILocation(line: 0, scope: !19371)
!19388 = !DILocation(line: 221, column: 27, scope: !19371)
!19389 = !DILocation(line: 233, column: 17, scope: !19390)
!19390 = distinct !DILexicalBlock(scope: !19371, file: !2605, line: 233, column: 7)
!19391 = !DILocation(line: 234, column: 26, scope: !19392)
!19392 = distinct !DILexicalBlock(scope: !19390, file: !2605, line: 233, column: 56)
!19393 = !DILocation(line: 234, column: 4, scope: !19392)
!19394 = !DILocation(line: 235, column: 3, scope: !19392)
!19395 = !DILocation(line: 0, scope: !18994, inlinedAt: !19396)
!19396 = distinct !DILocation(line: 217, column: 2, scope: !19372)
!19397 = !DILocation(line: 194, column: 2, scope: !19002, inlinedAt: !19396)
!19398 = !DILocation(line: 194, column: 2, scope: !19003, inlinedAt: !19396)
!19399 = !DILocation(line: 194, column: 2, scope: !19006, inlinedAt: !19396)
!19400 = !DILocation(line: 0, scope: !19008, inlinedAt: !19401)
!19401 = distinct !DILocation(line: 215, column: 2, scope: !18994, inlinedAt: !19396)
!19402 = !DILocation(line: 95, column: 2, scope: !19008, inlinedAt: !19401)
!19403 = !DILocation(line: 237, column: 1, scope: !19363)
!19404 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2605, file: !2605, line: 239, type: !19405, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19407)
!19405 = !DISubroutineType(types: !19406)
!19406 = !{null, !116}
!19407 = !{!19408, !19409, !19410, !19412}
!19408 = !DILocalVariable(name: "ticks", arg: 1, scope: !19404, file: !2605, line: 239, type: !116)
!19409 = !DILocalVariable(name: "key", scope: !19404, file: !2605, line: 245, type: !18893)
!19410 = !DILocalVariable(name: "t", scope: !19411, file: !2605, line: 262, type: !2578)
!19411 = distinct !DILexicalBlock(scope: !19404, file: !2605, line: 261, column: 67)
!19412 = !DILocalVariable(name: "dt", scope: !19411, file: !2605, line: 263, type: !105)
!19413 = !DILocation(line: 0, scope: !19404)
!19414 = !DILocation(line: 242, column: 2, scope: !19404)
!19415 = !DILocation(line: 0, scope: !18921, inlinedAt: !19416)
!19416 = distinct !DILocation(line: 245, column: 25, scope: !19404)
!19417 = !DILocation(line: 55, column: 2, scope: !18930, inlinedAt: !19418)
!19418 = distinct !DILocation(line: 145, column: 10, scope: !18921, inlinedAt: !19416)
!19419 = !DILocation(line: 0, scope: !18930, inlinedAt: !19418)
!19420 = !DILocation(line: 148, column: 2, scope: !18938, inlinedAt: !19416)
!19421 = !DILocation(line: 148, column: 2, scope: !18939, inlinedAt: !19416)
!19422 = !DILocation(line: 148, column: 2, scope: !18942, inlinedAt: !19416)
!19423 = !DILocation(line: 160, column: 2, scope: !18921, inlinedAt: !19416)
!19424 = !DILocation(line: 261, column: 9, scope: !19404)
!19425 = !DILocation(line: 261, column: 17, scope: !19404)
!19426 = !DILocation(line: 261, column: 25, scope: !19404)
!19427 = !DILocation(line: 261, column: 37, scope: !19404)
!19428 = !DILocation(line: 261, column: 47, scope: !19404)
!19429 = !DILocation(line: 261, column: 44, scope: !19404)
!19430 = !DILocation(line: 261, column: 2, scope: !19404)
!19431 = !DILocation(line: 0, scope: !19411)
!19432 = !DILocation(line: 263, column: 12, scope: !19411)
!19433 = !DILocation(line: 265, column: 16, scope: !19411)
!19434 = !DILocation(line: 265, column: 13, scope: !19411)
!19435 = !DILocation(line: 266, column: 13, scope: !19411)
!19436 = !DILocation(line: 267, column: 3, scope: !19411)
!19437 = !DILocation(line: 0, scope: !18994, inlinedAt: !19438)
!19438 = distinct !DILocation(line: 269, column: 3, scope: !19411)
!19439 = !DILocation(line: 194, column: 2, scope: !19002, inlinedAt: !19438)
!19440 = !DILocation(line: 194, column: 2, scope: !19003, inlinedAt: !19438)
!19441 = !DILocation(line: 194, column: 2, scope: !19006, inlinedAt: !19438)
!19442 = !DILocation(line: 0, scope: !19008, inlinedAt: !19443)
!19443 = distinct !DILocation(line: 215, column: 2, scope: !18994, inlinedAt: !19438)
!19444 = !DILocation(line: 95, column: 2, scope: !19008, inlinedAt: !19443)
!19445 = !DILocation(line: 270, column: 6, scope: !19411)
!19446 = !DILocation(line: 270, column: 3, scope: !19411)
!19447 = !DILocation(line: 0, scope: !18921, inlinedAt: !19448)
!19448 = distinct !DILocation(line: 271, column: 9, scope: !19411)
!19449 = !DILocation(line: 55, column: 2, scope: !18930, inlinedAt: !19450)
!19450 = distinct !DILocation(line: 145, column: 10, scope: !18921, inlinedAt: !19448)
!19451 = !DILocation(line: 0, scope: !18930, inlinedAt: !19450)
!19452 = !DILocation(line: 148, column: 2, scope: !18938, inlinedAt: !19448)
!19453 = !DILocation(line: 148, column: 2, scope: !18939, inlinedAt: !19448)
!19454 = !DILocation(line: 148, column: 2, scope: !18942, inlinedAt: !19448)
!19455 = !DILocation(line: 160, column: 2, scope: !18921, inlinedAt: !19448)
!19456 = !DILocation(line: 272, column: 22, scope: !19411)
!19457 = distinct !{!19457, !19430, !19458}
!19458 = !DILocation(line: 273, column: 2, scope: !19404)
!19459 = !DILocation(line: 276, column: 19, scope: !19460)
!19460 = distinct !DILexicalBlock(scope: !19461, file: !2605, line: 275, column: 23)
!19461 = distinct !DILexicalBlock(scope: !19404, file: !2605, line: 275, column: 6)
!19462 = !DILocation(line: 277, column: 2, scope: !19460)
!19463 = !DILocation(line: 279, column: 15, scope: !19404)
!19464 = !DILocation(line: 279, column: 12, scope: !19404)
!19465 = !DILocation(line: 280, column: 21, scope: !19404)
!19466 = !DILocation(line: 282, column: 24, scope: !19404)
!19467 = !DILocation(line: 282, column: 2, scope: !19404)
!19468 = !DILocation(line: 0, scope: !18994, inlinedAt: !19469)
!19469 = distinct !DILocation(line: 284, column: 2, scope: !19404)
!19470 = !DILocation(line: 194, column: 2, scope: !19002, inlinedAt: !19469)
!19471 = !DILocation(line: 194, column: 2, scope: !19003, inlinedAt: !19469)
!19472 = !DILocation(line: 194, column: 2, scope: !19006, inlinedAt: !19469)
!19473 = !DILocation(line: 0, scope: !19008, inlinedAt: !19474)
!19474 = distinct !DILocation(line: 215, column: 2, scope: !18994, inlinedAt: !19469)
!19475 = !DILocation(line: 95, column: 2, scope: !19008, inlinedAt: !19474)
!19476 = !DILocation(line: 285, column: 1, scope: !19404)
!19477 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2605, file: !2605, line: 287, type: !19478, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19480)
!19478 = !DISubroutineType(types: !19479)
!19479 = !{!109}
!19480 = !{!19481, !19482, !19484}
!19481 = !DILocalVariable(name: "t", scope: !19477, file: !2605, line: 289, type: !114)
!19482 = !DILocalVariable(name: "__i", scope: !19483, file: !2605, line: 291, type: !18893)
!19483 = distinct !DILexicalBlock(scope: !19477, file: !2605, line: 291, column: 2)
!19484 = !DILocalVariable(name: "__key", scope: !19483, file: !2605, line: 291, type: !18893)
!19485 = !DILocation(line: 0, scope: !19477)
!19486 = !DILocation(line: 0, scope: !19483)
!19487 = !DILocation(line: 0, scope: !18921, inlinedAt: !19488)
!19488 = distinct !DILocation(line: 291, column: 2, scope: !19483)
!19489 = !DILocation(line: 55, column: 2, scope: !18930, inlinedAt: !19490)
!19490 = distinct !DILocation(line: 145, column: 10, scope: !18921, inlinedAt: !19488)
!19491 = !DILocation(line: 0, scope: !18930, inlinedAt: !19490)
!19492 = !DILocation(line: 148, column: 2, scope: !18938, inlinedAt: !19488)
!19493 = !DILocation(line: 148, column: 2, scope: !18939, inlinedAt: !19488)
!19494 = !DILocation(line: 148, column: 2, scope: !18942, inlinedAt: !19488)
!19495 = !DILocation(line: 160, column: 2, scope: !18921, inlinedAt: !19488)
!19496 = !DILocation(line: 292, column: 7, scope: !19497)
!19497 = distinct !DILexicalBlock(scope: !19498, file: !2605, line: 291, column: 24)
!19498 = distinct !DILexicalBlock(scope: !19483, file: !2605, line: 291, column: 2)
!19499 = !DILocation(line: 292, column: 19, scope: !19497)
!19500 = !DILocation(line: 0, scope: !18994, inlinedAt: !19501)
!19501 = distinct !DILocation(line: 291, column: 2, scope: !19498)
!19502 = !DILocation(line: 194, column: 2, scope: !19002, inlinedAt: !19501)
!19503 = !DILocation(line: 194, column: 2, scope: !19003, inlinedAt: !19501)
!19504 = !DILocation(line: 194, column: 2, scope: !19006, inlinedAt: !19501)
!19505 = !DILocation(line: 0, scope: !19008, inlinedAt: !19506)
!19506 = distinct !DILocation(line: 215, column: 2, scope: !18994, inlinedAt: !19501)
!19507 = !DILocation(line: 95, column: 2, scope: !19008, inlinedAt: !19506)
!19508 = !DILocation(line: 292, column: 17, scope: !19497)
!19509 = !DILocation(line: 294, column: 2, scope: !19477)
!19510 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2605, file: !2605, line: 297, type: !395, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !397)
!19511 = !DILocation(line: 300, column: 19, scope: !19510)
!19512 = !DILocation(line: 300, column: 9, scope: !19510)
!19513 = !DILocation(line: 300, column: 2, scope: !19510)
!19514 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2605, file: !2605, line: 306, type: !19478, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !397)
!19515 = !DILocation(line: 308, column: 9, scope: !19514)
!19516 = !DILocation(line: 308, column: 2, scope: !19514)
!19517 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2605, file: !2605, line: 319, type: !7945, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19518)
!19518 = !{!19519, !19520, !19521, !19522}
!19519 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !19517, file: !2605, line: 319, type: !113)
!19520 = !DILocalVariable(name: "start_cycles", scope: !19517, file: !2605, line: 328, type: !113)
!19521 = !DILocalVariable(name: "cycles_to_wait", scope: !19517, file: !2605, line: 331, type: !113)
!19522 = !DILocalVariable(name: "current_cycles", scope: !19523, file: !2605, line: 338, type: !113)
!19523 = distinct !DILexicalBlock(scope: !19524, file: !2605, line: 337, column: 11)
!19524 = distinct !DILexicalBlock(scope: !19525, file: !2605, line: 337, column: 2)
!19525 = distinct !DILexicalBlock(scope: !19517, file: !2605, line: 337, column: 2)
!19526 = !DILocation(line: 0, scope: !19517)
!19527 = !DILocation(line: 322, column: 19, scope: !19528)
!19528 = distinct !DILexicalBlock(scope: !19517, file: !2605, line: 322, column: 6)
!19529 = !DILocation(line: 322, column: 6, scope: !19517)
!19530 = !DILocation(line: 328, column: 26, scope: !19517)
!19531 = !DILocation(line: 333, column: 43, scope: !19517)
!19532 = !DILocation(line: 337, column: 2, scope: !19517)
!19533 = !DILocation(line: 338, column: 29, scope: !19523)
!19534 = !DILocation(line: 0, scope: !19523)
!19535 = !DILocation(line: 341, column: 23, scope: !19536)
!19536 = distinct !DILexicalBlock(scope: !19523, file: !2605, line: 341, column: 7)
!19537 = !DILocation(line: 341, column: 39, scope: !19536)
!19538 = !DILocation(line: 349, column: 1, scope: !19517)
!19539 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !397)
!19540 = !DILocation(line: 1677, column: 9, scope: !19539)
!19541 = !DILocation(line: 1677, column: 2, scope: !19539)
!19542 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3525, file: !3525, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !397)
!19543 = !DILocation(line: 26, column: 9, scope: !19542)
!19544 = !DILocation(line: 26, column: 2, scope: !19542)
!19545 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2605, file: !2605, line: 364, type: !19546, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !19548)
!19546 = !DISubroutineType(types: !19547)
!19547 = !{!114, !18883}
!19548 = !{!19549, !19550}
!19549 = !DILocalVariable(name: "timeout", arg: 1, scope: !19545, file: !2605, line: 364, type: !18883)
!19550 = !DILocalVariable(name: "dt", scope: !19545, file: !2605, line: 366, type: !107)
!19551 = !DILocation(line: 0, scope: !19545)
!19552 = !DILocation(line: 368, column: 6, scope: !19545)
!19553 = !DILocation(line: 371, column: 10, scope: !19554)
!19554 = distinct !DILexicalBlock(scope: !19555, file: !2605, line: 370, column: 47)
!19555 = distinct !DILexicalBlock(scope: !19556, file: !2605, line: 370, column: 13)
!19556 = distinct !DILexicalBlock(scope: !19545, file: !2605, line: 368, column: 6)
!19557 = !DILocation(line: 371, column: 3, scope: !19554)
!19558 = !DILocation(line: 376, column: 58, scope: !19559)
!19559 = distinct !DILexicalBlock(scope: !19560, file: !2605, line: 376, column: 7)
!19560 = distinct !DILexicalBlock(scope: !19555, file: !2605, line: 372, column: 9)
!19561 = !DILocation(line: 376, column: 7, scope: !19560)
!19562 = !DILocation(line: 376, column: 43, scope: !19559)
!19563 = !DILocation(line: 377, column: 4, scope: !19564)
!19564 = distinct !DILexicalBlock(scope: !19559, file: !2605, line: 376, column: 64)
!19565 = !DILocation(line: 379, column: 10, scope: !19560)
!19566 = !DILocation(line: 379, column: 33, scope: !19560)
!19567 = !DILocation(line: 379, column: 31, scope: !19560)
!19568 = !DILocation(line: 379, column: 3, scope: !19560)
!19569 = !DILocation(line: 0, scope: !19556)
!19570 = !DILocation(line: 381, column: 1, scope: !19545)
!19571 = distinct !DISubprogram(name: "boot_banner", scope: !19572, file: !19572, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !397)
!19572 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19573 = !DILocation(line: 34, column: 2, scope: !19571)
!19574 = !DILocation(line: 36, column: 1, scope: !19571)
!19575 = distinct !DISubprogram(name: "statics_init", scope: !2635, file: !2635, line: 21, type: !2641, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !19576)
!19576 = !{!19577, !19578}
!19577 = !DILocalVariable(name: "unused", arg: 1, scope: !19575, file: !2635, line: 21, type: !2643)
!19578 = !DILocalVariable(name: "h", scope: !19579, file: !2635, line: 24, type: !19580)
!19579 = distinct !DILexicalBlock(scope: !19575, file: !2635, line: 24, column: 2)
!19580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19581, size: 32)
!19581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !19582)
!19582 = !{!19583, !19589, !19595}
!19583 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !19581, file: !122, line: 5074, baseType: !19584, size: 96)
!19584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !19585)
!19585 = !{!19586, !19587, !19588}
!19586 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !19584, file: !226, line: 57, baseType: !229, size: 32)
!19587 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !19584, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!19588 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !19584, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!19589 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !19581, file: !122, line: 5075, baseType: !19590, size: 64, offset: 96)
!19590 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !19591)
!19591 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !19592)
!19592 = !{!19593}
!19593 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !19591, file: !163, line: 232, baseType: !19594, size: 64)
!19594 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2621)
!19595 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !19581, file: !122, line: 5076, baseType: !19596, size: 32, offset: 160)
!19596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !19597)
!19597 = !{!19598}
!19598 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !19596, file: !236, line: 52, baseType: !22, size: 32)
!19599 = !DILocation(line: 0, scope: !19575)
!19600 = !DILocation(line: 0, scope: !19579)
!19601 = !DILocation(line: 24, column: 2, scope: !19602)
!19602 = distinct !DILexicalBlock(scope: !19603, file: !2635, line: 24, column: 2)
!19603 = distinct !DILexicalBlock(scope: !19604, file: !2635, line: 24, column: 2)
!19604 = distinct !DILexicalBlock(scope: !19579, file: !2635, line: 24, column: 2)
!19605 = !DILocation(line: 24, column: 2, scope: !19606)
!19606 = distinct !DILexicalBlock(scope: !19607, file: !2635, line: 24, column: 2)
!19607 = distinct !DILexicalBlock(scope: !19602, file: !2635, line: 24, column: 2)
!19608 = !DILocation(line: 24, column: 2, scope: !19603)
!19609 = !DILocation(line: 24, column: 2, scope: !19579)
!19610 = !DILocation(line: 52, column: 2, scope: !19575)
!19611 = !DILocation(line: 49, column: 27, scope: !19612)
!19612 = distinct !DILexicalBlock(scope: !19613, file: !2635, line: 48, column: 3)
!19613 = distinct !DILexicalBlock(scope: !19604, file: !2635, line: 24, column: 36)
!19614 = !DILocation(line: 49, column: 45, scope: !19612)
!19615 = !DILocation(line: 49, column: 4, scope: !19612)
!19616 = !DILocation(line: 24, column: 2, scope: !19604)
!19617 = !DILocation(line: 24, column: 2, scope: !19607)
!19618 = distinct !{!19618, !19609, !19619}
!19619 = !DILocation(line: 51, column: 2, scope: !19579)
!19620 = distinct !DISubprogram(name: "k_heap_init", scope: !2635, file: !2635, line: 13, type: !19621, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !19623)
!19621 = !DISubroutineType(types: !19622)
!19622 = !{null, !19580, !104, !111}
!19623 = !{!19624, !19625, !19626}
!19624 = !DILocalVariable(name: "h", arg: 1, scope: !19620, file: !2635, line: 13, type: !19580)
!19625 = !DILocalVariable(name: "mem", arg: 2, scope: !19620, file: !2635, line: 13, type: !104)
!19626 = !DILocalVariable(name: "bytes", arg: 3, scope: !19620, file: !2635, line: 13, type: !111)
!19627 = !DILocation(line: 0, scope: !19620)
!19628 = !DILocation(line: 15, column: 19, scope: !19620)
!19629 = !DILocation(line: 15, column: 2, scope: !19620)
!19630 = !DILocation(line: 16, column: 20, scope: !19620)
!19631 = !DILocation(line: 16, column: 2, scope: !19620)
!19632 = !DILocation(line: 19, column: 1, scope: !19620)
!19633 = distinct !DISubprogram(name: "z_waitq_init", scope: !15192, file: !15192, line: 47, type: !19634, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !19637)
!19634 = !DISubroutineType(types: !19635)
!19635 = !{null, !19636}
!19636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19590, size: 32)
!19637 = !{!19638}
!19638 = !DILocalVariable(name: "w", arg: 1, scope: !19633, file: !15192, line: 47, type: !19636)
!19639 = !DILocation(line: 0, scope: !19633)
!19640 = !DILocation(line: 49, column: 21, scope: !19633)
!19641 = !DILocation(line: 49, column: 2, scope: !19633)
!19642 = !DILocation(line: 50, column: 1, scope: !19633)
!19643 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !19644, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !19647)
!19644 = !DISubroutineType(types: !19645)
!19645 = !{null, !19646}
!19646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19594, size: 32)
!19647 = !{!19648}
!19648 = !DILocalVariable(name: "list", arg: 1, scope: !19643, file: !137, line: 197, type: !19646)
!19649 = !DILocation(line: 0, scope: !19643)
!19650 = !DILocation(line: 199, column: 8, scope: !19643)
!19651 = !DILocation(line: 199, column: 13, scope: !19643)
!19652 = !DILocation(line: 200, column: 8, scope: !19643)
!19653 = !DILocation(line: 200, column: 13, scope: !19643)
!19654 = !DILocation(line: 201, column: 1, scope: !19643)
!19655 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2635, file: !2635, line: 64, type: !19656, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !19662)
!19656 = !DISubroutineType(types: !19657)
!19657 = !{!104, !19580, !111, !111, !19658}
!19658 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !19659)
!19659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !19660)
!19660 = !{!19661}
!19661 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !19659, file: !108, line: 66, baseType: !107, size: 64)
!19662 = !{!19663, !19664, !19665, !19666, !19667, !19668, !19669, !19670, !19675}
!19663 = !DILocalVariable(name: "h", arg: 1, scope: !19655, file: !2635, line: 64, type: !19580)
!19664 = !DILocalVariable(name: "align", arg: 2, scope: !19655, file: !2635, line: 64, type: !111)
!19665 = !DILocalVariable(name: "bytes", arg: 3, scope: !19655, file: !2635, line: 64, type: !111)
!19666 = !DILocalVariable(name: "timeout", arg: 4, scope: !19655, file: !2635, line: 65, type: !19658)
!19667 = !DILocalVariable(name: "now", scope: !19655, file: !2635, line: 67, type: !109)
!19668 = !DILocalVariable(name: "end", scope: !19655, file: !2635, line: 67, type: !109)
!19669 = !DILocalVariable(name: "ret", scope: !19655, file: !2635, line: 68, type: !104)
!19670 = !DILocalVariable(name: "key", scope: !19655, file: !2635, line: 72, type: !19671)
!19671 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !19672)
!19672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !19673)
!19673 = !{!19674}
!19674 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !19672, file: !236, line: 33, baseType: !105, size: 32)
!19675 = !DILocalVariable(name: "blocked_alloc", scope: !19655, file: !2635, line: 78, type: !492)
!19676 = !DILocation(line: 0, scope: !19655)
!19677 = !DILocation(line: 67, column: 21, scope: !19655)
!19678 = !DILocation(line: 70, column: 8, scope: !19655)
!19679 = !DILocation(line: 72, column: 41, scope: !19655)
!19680 = !DILocalVariable(name: "l", arg: 1, scope: !19681, file: !236, line: 136, type: !19684)
!19681 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !19682, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !19685)
!19682 = !DISubroutineType(types: !19683)
!19683 = !{!19671, !19684}
!19684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19596, size: 32)
!19685 = !{!19680, !19686}
!19686 = !DILocalVariable(name: "k", scope: !19681, file: !236, line: 139, type: !19671)
!19687 = !DILocation(line: 0, scope: !19681, inlinedAt: !19688)
!19688 = distinct !DILocation(line: 72, column: 25, scope: !19655)
!19689 = !DILocation(line: 55, column: 2, scope: !19690, inlinedAt: !19694)
!19690 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7532, file: !7532, line: 42, type: !7533, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !19691)
!19691 = !{!19692, !19693}
!19692 = !DILocalVariable(name: "key", scope: !19690, file: !7532, line: 44, type: !32)
!19693 = !DILocalVariable(name: "tmp", scope: !19690, file: !7532, line: 53, type: !32)
!19694 = distinct !DILocation(line: 145, column: 10, scope: !19681, inlinedAt: !19688)
!19695 = !{i64 2282543}
!19696 = !DILocation(line: 0, scope: !19690, inlinedAt: !19694)
!19697 = !DILocation(line: 148, column: 2, scope: !19698, inlinedAt: !19688)
!19698 = distinct !DILexicalBlock(scope: !19699, file: !236, line: 148, column: 2)
!19699 = distinct !DILexicalBlock(scope: !19681, file: !236, line: 148, column: 2)
!19700 = !DILocation(line: 148, column: 2, scope: !19699, inlinedAt: !19688)
!19701 = !DILocation(line: 148, column: 2, scope: !19702, inlinedAt: !19688)
!19702 = distinct !DILexicalBlock(scope: !19698, file: !236, line: 148, column: 2)
!19703 = !DILocation(line: 160, column: 2, scope: !19681, inlinedAt: !19688)
!19704 = !DILocation(line: 1031, column: 3, scope: !19705, inlinedAt: !19708)
!19705 = distinct !DISubprogram(name: "__get_IPSR", scope: !7850, file: !7850, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !19706)
!19706 = !{!19707}
!19707 = !DILocalVariable(name: "result", scope: !19705, file: !7850, line: 1029, type: !113)
!19708 = distinct !DILocation(line: 48, column: 10, scope: !19709, inlinedAt: !19710)
!19709 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8897, file: !8897, line: 46, type: !8898, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !397)
!19710 = distinct !DILocation(line: 76, column: 2, scope: !19711)
!19711 = distinct !DILexicalBlock(scope: !19712, file: !2635, line: 76, column: 2)
!19712 = distinct !DILexicalBlock(scope: !19655, file: !2635, line: 76, column: 2)
!19713 = !{i64 3728977}
!19714 = !DILocation(line: 0, scope: !19705, inlinedAt: !19708)
!19715 = !DILocation(line: 48, column: 9, scope: !19709, inlinedAt: !19710)
!19716 = !DILocation(line: 76, column: 2, scope: !19711)
!19717 = !DILocation(line: 81, column: 9, scope: !19718)
!19718 = distinct !DILexicalBlock(scope: !19655, file: !2635, line: 80, column: 22)
!19719 = !DILocation(line: 83, column: 9, scope: !19718)
!19720 = !DILocation(line: 85, column: 12, scope: !19721)
!19721 = distinct !DILexicalBlock(scope: !19718, file: !2635, line: 84, column: 7)
!19722 = !DILocation(line: 85, column: 21, scope: !19721)
!19723 = !DILocation(line: 76, column: 2, scope: !19724)
!19724 = distinct !DILexicalBlock(scope: !19711, file: !2635, line: 76, column: 2)
!19725 = !DILocation(line: 85, column: 30, scope: !19721)
!19726 = !DILocation(line: 85, column: 37, scope: !19721)
!19727 = !DILocation(line: 84, column: 7, scope: !19718)
!19728 = !DILocation(line: 99, column: 10, scope: !19718)
!19729 = !DILocation(line: 0, scope: !19681, inlinedAt: !19730)
!19730 = distinct !DILocation(line: 101, column: 9, scope: !19718)
!19731 = !DILocation(line: 55, column: 2, scope: !19690, inlinedAt: !19732)
!19732 = distinct !DILocation(line: 145, column: 10, scope: !19681, inlinedAt: !19730)
!19733 = !DILocation(line: 0, scope: !19690, inlinedAt: !19732)
!19734 = !DILocation(line: 148, column: 2, scope: !19698, inlinedAt: !19730)
!19735 = !DILocation(line: 148, column: 2, scope: !19699, inlinedAt: !19730)
!19736 = !DILocation(line: 148, column: 2, scope: !19702, inlinedAt: !19730)
!19737 = !DILocation(line: 160, column: 2, scope: !19681, inlinedAt: !19730)
!19738 = distinct !{!19738, !19739, !19740}
!19739 = !DILocation(line: 80, column: 2, scope: !19655)
!19740 = !DILocation(line: 102, column: 2, scope: !19655)
!19741 = !DILocalVariable(name: "key", arg: 2, scope: !19742, file: !236, line: 190, type: !19671)
!19742 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !19743, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !19745)
!19743 = !DISubroutineType(types: !19744)
!19744 = !{null, !19684, !19671}
!19745 = !{!19746, !19741}
!19746 = !DILocalVariable(name: "l", arg: 1, scope: !19742, file: !236, line: 189, type: !19684)
!19747 = !DILocation(line: 0, scope: !19742, inlinedAt: !19748)
!19748 = distinct !DILocation(line: 106, column: 2, scope: !19655)
!19749 = !DILocation(line: 194, column: 2, scope: !19750, inlinedAt: !19748)
!19750 = distinct !DILexicalBlock(scope: !19751, file: !236, line: 194, column: 2)
!19751 = distinct !DILexicalBlock(scope: !19742, file: !236, line: 194, column: 2)
!19752 = !DILocation(line: 194, column: 2, scope: !19751, inlinedAt: !19748)
!19753 = !DILocation(line: 194, column: 2, scope: !19754, inlinedAt: !19748)
!19754 = distinct !DILexicalBlock(scope: !19750, file: !236, line: 194, column: 2)
!19755 = !DILocalVariable(name: "key", arg: 1, scope: !19756, file: !7532, line: 84, type: !32)
!19756 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7532, file: !7532, line: 84, type: !7543, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !19757)
!19757 = !{!19755}
!19758 = !DILocation(line: 0, scope: !19756, inlinedAt: !19759)
!19759 = distinct !DILocation(line: 215, column: 2, scope: !19742, inlinedAt: !19748)
!19760 = !DILocation(line: 95, column: 2, scope: !19756, inlinedAt: !19759)
!19761 = !{i64 2283360}
!19762 = !DILocation(line: 107, column: 2, scope: !19655)
!19763 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2635, file: !2635, line: 110, type: !19764, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !19766)
!19764 = !DISubroutineType(types: !19765)
!19765 = !{!104, !19580, !111, !19658}
!19766 = !{!19767, !19768, !19769, !19770}
!19767 = !DILocalVariable(name: "h", arg: 1, scope: !19763, file: !2635, line: 110, type: !19580)
!19768 = !DILocalVariable(name: "bytes", arg: 2, scope: !19763, file: !2635, line: 110, type: !111)
!19769 = !DILocalVariable(name: "timeout", arg: 3, scope: !19763, file: !2635, line: 110, type: !19658)
!19770 = !DILocalVariable(name: "ret", scope: !19763, file: !2635, line: 114, type: !104)
!19771 = !DILocation(line: 0, scope: !19763)
!19772 = !DILocation(line: 114, column: 14, scope: !19763)
!19773 = !DILocation(line: 118, column: 2, scope: !19763)
!19774 = distinct !DISubprogram(name: "k_heap_free", scope: !2635, file: !2635, line: 121, type: !19775, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !19777)
!19775 = !DISubroutineType(types: !19776)
!19776 = !{null, !19580, !104}
!19777 = !{!19778, !19779, !19780}
!19778 = !DILocalVariable(name: "h", arg: 1, scope: !19774, file: !2635, line: 121, type: !19580)
!19779 = !DILocalVariable(name: "mem", arg: 2, scope: !19774, file: !2635, line: 121, type: !104)
!19780 = !DILocalVariable(name: "key", scope: !19774, file: !2635, line: 123, type: !19671)
!19781 = !DILocation(line: 0, scope: !19774)
!19782 = !DILocation(line: 123, column: 41, scope: !19774)
!19783 = !DILocation(line: 0, scope: !19681, inlinedAt: !19784)
!19784 = distinct !DILocation(line: 123, column: 25, scope: !19774)
!19785 = !DILocation(line: 55, column: 2, scope: !19690, inlinedAt: !19786)
!19786 = distinct !DILocation(line: 145, column: 10, scope: !19681, inlinedAt: !19784)
!19787 = !DILocation(line: 0, scope: !19690, inlinedAt: !19786)
!19788 = !DILocation(line: 148, column: 2, scope: !19698, inlinedAt: !19784)
!19789 = !DILocation(line: 148, column: 2, scope: !19699, inlinedAt: !19784)
!19790 = !DILocation(line: 148, column: 2, scope: !19702, inlinedAt: !19784)
!19791 = !DILocation(line: 160, column: 2, scope: !19681, inlinedAt: !19784)
!19792 = !DILocation(line: 125, column: 20, scope: !19774)
!19793 = !DILocation(line: 125, column: 2, scope: !19774)
!19794 = !DILocation(line: 128, column: 60, scope: !19795)
!19795 = distinct !DILexicalBlock(scope: !19774, file: !2635, line: 128, column: 6)
!19796 = !DILocation(line: 128, column: 43, scope: !19795)
!19797 = !DILocation(line: 128, column: 68, scope: !19795)
!19798 = !DILocation(line: 128, column: 6, scope: !19774)
!19799 = !DILocation(line: 129, column: 3, scope: !19800)
!19800 = distinct !DILexicalBlock(scope: !19795, file: !2635, line: 128, column: 74)
!19801 = !DILocation(line: 130, column: 2, scope: !19800)
!19802 = !DILocation(line: 0, scope: !19742, inlinedAt: !19803)
!19803 = distinct !DILocation(line: 131, column: 3, scope: !19804)
!19804 = distinct !DILexicalBlock(scope: !19795, file: !2635, line: 130, column: 9)
!19805 = !DILocation(line: 194, column: 2, scope: !19750, inlinedAt: !19803)
!19806 = !DILocation(line: 194, column: 2, scope: !19751, inlinedAt: !19803)
!19807 = !DILocation(line: 194, column: 2, scope: !19754, inlinedAt: !19803)
!19808 = !DILocation(line: 0, scope: !19756, inlinedAt: !19809)
!19809 = distinct !DILocation(line: 215, column: 2, scope: !19742, inlinedAt: !19803)
!19810 = !DILocation(line: 95, column: 2, scope: !19756, inlinedAt: !19809)
!19811 = !DILocation(line: 133, column: 1, scope: !19774)
